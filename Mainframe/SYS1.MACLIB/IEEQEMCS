*%IEEQEMCS: MACRO KEYS(REQUEST,STATUS,BKLG_NUM,CN,SYS,KEY,AUTH,ATTR,    00020900
*                 DOM,BUFPTR,BUFSIZE,CONSCNT,TOKEN,RECSIZE,RETCODE,     00041800
*                 RSNCODE,PLISTVER,MF);                                 00062700
*/**** START OF SPECIFICATIONS **************************************** 00083600
*                                                                     * 00104500
*                                                                     * 00125400
*01* MACRO NAME:  IEEQEMCS                              -02/12/00-<1> * 00146300
*                                                                     * 00167200
*                                                                     * 00188100
*01* DESCRIPTIVE NAME:  Query EMCS Console                            * 00209000
*                                                                     * 00229900
*01* PROPRIETARY STATEMENT:                                           * 00250800
*                                                                     * 00271700
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 00292600
*     5647-A01 (C) COPYRIGHT IBM CORP. 1999, 2000                     * 00323900
*                                                                     * 00355300
* STATUS= HBB7703                                                     * 00376200
*                                                                     * 00397100
*                                                                     * 00418000
*                                                                     * 00438900
*01* FUNCTION:                                                        * 00459800
*                                                                     * 00480700
*      This macro returns the state of any EMCS consoles in the       * 00501600
*      system.                                                        * 00522500
*                                                                     * 00543400
*01* EXTERNAL CLASSIFICATION:  PI                                     * 00543600
*                                                                     * 00543800
*01* END OF EXTERNAL CLASSIFICATION:                                  * 00544000
*                                                                     * 00544200
*01* ENVIRONMENT:                                                     * 00544400
*                                                                     * 00544600
*                                                                     * 00544800
*      Minimum authorization: Supervisor state.  System PSW key.      * 00545000
*                                                                     * 00545200
*      Dispatchable unit mode: Task mode.                             * 00545400
*                                                                     * 00545600
*      Cross Memory Mode: Any PASN, any HASN, any SASN.               * 00545800
*                                                                     * 00546000
*      AMODE:            31-bit.                                      * 00546200
*                                                                     * 00546400
*      ASC mode:         Primary.                                     * 00546600
*                                                                     * 00546800
*      Interrupt status: Enabled for I/O and external interrupts.     * 00547000
*                                                                     * 00547200
*      Locks:            No locks held.                               * 00547400
*                                                                     * 00547600
*      Control parameters: Control parameters must be in the primary  * 00547800
*                        address space.                               * 00548000
*                                                                     * 00548200
*                                                                     * 00548400
*                                                                     * 00548600
*01* PROGRAMMING REQUIREMENTS:                                        * 00549200
*                                                                     * 00549400
*    The calling program may include mapping macro IEEZB887 which can * 00549500
*    be used to map the information which is returned in the buffer   * 00549600
*    addressed by BUFPTR.                                             * 00549700
*                                                                     * 00549900
*    The calling program may also optionally include macro IEEZB888   * 00550000
*    which contains the declarations for the reason and return codes  * 00550100
*    used by IEEQEMCS.                                                * 00550200
*                                                                     * 00550300
*01* RESTRICTIONS:                                                    * 00550400
*                                                                     * 00550500
*    None.                                                            * 00550600
*                                                                     * 00550800
*01* INPUT REGISTER INFORMATION:                                      * 00551000
*                                                                     * 00551200
*    Before issuing the IEEQEMCS macro, the caller does not have to   * 00551400
*    place any information into any register unless using it in       * 00551600
*    register notation for a particular parameter, or using it as a   * 00551800
*    base register.                                                   * 00552000
*                                                                     * 00552200
*01* OUTPUT REGISTER INFORMATION:                                     * 00552400
*                                                                     * 00552600
*     When control returns to the caller, the GPRs contain:           * 00552800
*                                                                     * 00553000
*                                                                     * 00553200
*    REGISTER  CONTENTS                                               * 00553400
*                                                                     * 00553600
*    0         Reason code                                            * 00553700
*                                                                     * 00553800
*    1         Used as a work register by the system                  * 00553900
*                                                                     * 00554000
*    2-13      Unchanged                                              * 00554200
*                                                                     * 00554400
*    14        Used as a work register by the system                  * 00554600
*                                                                     * 00554800
*    15        Return code                                            * 00555000
*                                                                     * 00555200
*                                                                     * 00555400
*                                                                     * 00555600
*     When control returns to the caller, the ARs contain:            * 00555800
*                                                                     * 00556000
*                                                                     * 00556200
*    REGISTER  CONTENTS                                               * 00556400
*                                                                     * 00556600
*    0-1       Used as work registers by the system                   * 00556800
*                                                                     * 00557000
*    2-13      Unchanged                                              * 00557200
*                                                                     * 00557400
*    14-15     Used as work registers by the system                   * 00557600
*                                                                     * 00557800
*                                                                     * 00558000
*                                                                     * 00558200
*    Some callers depend on register contents remaining the same      * 00558400
*    before and after issuing a service.  If the system changes the   * 00558600
*    contents of registers on which the caller depends, the caller    * 00558800
*    must save them before issuing the service, and restore them      * 00559000
*    after the system returns control.                                * 00559200
*                                                                     * 00559400
*01* PERFORMANCE IMPLICATIONS:                                        * 00559600
*                                                                     * 00559800
*    If REQUEST=FULL is specified, the service must read the          * 00560000
*    dataspace of each console being reported on.  Depending on the   * 00560200
*    number of consoles, this can degrade performance of the service. * 00560400
*                                                                     * 00560600
*01* SYNTAX:                                                          * 00564300
*                                                                     * 00585200
*[xlabel]  IEEQEMCS   [ REQUEST=COUNT|SUMMARY|INFO|FULL]            * 00606100
*                     [,STATUS=ACTIVE|INACTIVE|ALL|BACKLOG|ERR]     * 00627000
*                     [,BKLG_NUM=xbklg_num|10]                      * 00647900
*                     [,CN=xcn|ANY_CONS]                            * 00665800
*                     [,SYS=xsys|ANY_SYS]                           * 00683700
*                     [,KEY=xkey|ANY_KEY]                           * 00701600
*                     [,AUTH=ANY|MASTER|SYS|IO|CONS|ALL|INFO|        * 00719600
*                             SYSONLY|IOONLY|CONSONLY|ALLONLY|        * 00728600
*                             INFOONLY]                              * 00737600
*                     [,ATTR=ANY|YES|ROUT|UD|UDN|HC|AUTO|AUTON|MN|   * 00746800
*                             NONE]                                  * 00764900
*                     [,DOM=ANY|YES|NORMAL|ALL|NONE]                * 00783000
*                     [,BUFPTR=xbufptr|0                            * 00801100
*                          ,BUFSIZE=xbufsize]                         * 00828900
*                     [,CONSCNT=xconscnt|0]                         * 00849800
*                     [,TOKEN=xtoken|0                              * 00870800
*                          ,RECSIZE=xrecsize]                         * 00884700
*                     [,RETCODE=xretcode]                             * 00898700
*                     [,RSNCODE=xrsncode]                             * 00909100
*                     [,PLISTVER=xplistver|IMPLIED_VERSION]         * 00919600
*                     ,MF=(E,xmfctrl,COMPLETE|NOCHECK)             * 00940500
*                     ,MF=(L,xmfctrl,xmfattr|0D)                   * 00971800
*                     ,MF=(M,xmfctrl,COMPLETE|NOCHECK)             * 01003200
*                                                                     * 01024100
*                                                                     * 01045000
*      Where:                                                         * 01065900
*                                                                     * 01067800
*                                                                     * 01069700
*      [xlabel]                                                       * 01071600
*          is an optional symbol, starting in column 1, that is the   * 01073500
*          name on the IEEQEMCS macro invocation.  The name must      * 01075400
*          conform to the rules for an ordinary assembler language    * 01077300
*          symbol.                                                    * 01079200
*          DEFAULT: No name.                                          * 01081100
*                                                                     * 01083000
*                                                                     * 01084900
*                                                                     * 01086800
*                                                                     * 01107700
*      [REQUEST(COUNT|SUMMARY|INFO|FULL)]                           * 01128600
*          is an optional keyword input that indicates the type of    * 01149500
*          information request.                                       * 01170400
*          DEFAULT: COUNT                                             * 01191300
*                                                                     * 01212200
*                                                                     * 01233100
*          REQUEST(COUNT)                                             * 01254000
*              Return only the number of EMCS consoles meeting the    * 01274900
*              search criteria.                                       * 01295800
*                                                                     * 01316700
*          REQUEST(SUMMARY)                                           * 01337600
*              Return the number and names of the consoles that meet  * 01358500
*              the search criteria.                                   * 01379400
*                                                                     * 01400300
*          REQUEST(INFO)                                              * 01421200
*              Return the number, names, and console data             * 01442100
*              information, but no message dataspace statistics for   * 01463000
*              the consoles meeting the search criteria.              * 01483900
*                                                                     * 01504800
*          REQUEST(FULL)                                              * 01525700
*              Return the number, names, console data information,    * 01546600
*              and message dataspace statistics for the consoles      * 01567500
*              meeting the search criteria.                           * 01588400
*                                                                     * 01609300
*                                                                     * 01630200
*                                                                     * 01651100
*                                                                     * 01672000
*                                                                     * 01692900
*                                                                     * 01713800
*      [STATUS(ACTIVE|INACTIVE|ALL|BACKLOG|ERR)]                    * 01734700
*          is an optional keyword input that indicates the status of  * 01755600
*          the EMCS consoles to be returned.                          * 01776500
*          DEFAULT: ACTIVE                                            * 01797400
*                                                                     * 01818300
*                                                                     * 01839200
*          STATUS(ACTIVE)                                             * 01860100
*              Return only active consoles.                           * 01881000
*                                                                     * 01901900
*          STATUS(INACTIVE)                                           * 01922800
*              Return only inactive consoles.                         * 01943700
*                                                                     * 01964600
*          STATUS(ALL)                                                * 01985500
*              Return both active and inactive consoles.              * 02006400
*                                                                     * 02027300
*          STATUS(BACKLOG)                                            * 02048200
*              Return consoles with un-retrieved messages.  The       * 02069100
*              minimum number of unretrieved messages a console must  * 02090000
*              have to be returned can be specified with the BKLG_NUM * 02110900
*              keyword.                                               * 02131800
*                                                                     * 02152700
*          STATUS(ERR)                                                * 02173600
*              Return only EMCS consoles in an error condition.       * 02194500
*                                                                     * 02215400
*                                                                     * 02236300
*                                                                     * 02257200
*                                                                     * 02278100
*                                                                     * 02299000
*                                                                     * 02319900
*      [BKLG_NUM(xbklg_num|10)]                                     * 02340800
*          is the name (RS-type) (or address in register (2)-(12) ASM * 02356400
*          only) of an optional fullword input that indicates the     * 02372000
*          minimum number of un-retrieved messages a console must     * 02387600
*          have for it to be returned on a STATUS(BACKLOG) call.      * 02403500
*          DEFAULT: 10                                                * 02424400
*                                                                     * 02445300
*                                                                     * 02466200
*                                                                     * 02487100
*                                                                     * 02508000
*      [CN(xcn|ANY_CONS)]                                           * 02525400
*          is the name (RS-type) (or address in register (2)-(12) ASM * 02542800
*          only) of an optional 8 character input that indicates a    * 02556700
*          console name to search for.  The name may be wildcarded.   * 02570700
*          DEFAULT: ANY_CONS                                          * 02591600
*                                                                     * 02612500
*                                                                     * 02633400
*                                                                     * 02654300
*                                                                     * 02675200
*      [SYS(xsys|ANY_SYS)]                                          * 02699400
*          is the name (RS-type) (or address in register (2)-(12) ASM * 02723700
*          only) of an optional 8 character input that indicates the  * 02737700
*          system name where the console was last activated.  This    * 02751700
*          may be wildcarded.                                         * 02765700
*          DEFAULT: ANY_SYS                                           * 02783100
*                                                                     * 02800600
*                                                                     * 02821500
*                                                                     * 02842400
*                                                                     * 02863300
*      [KEY(xkey|ANY_KEY)]                                          * 02881500
*          is the name (RS-type) (or address in register (2)-(12) ASM * 02899800
*          only) of an optional 8 character input that indicates the  * 02915400
*          KEY that was used to activate the console.  It may be      * 02931000
*          wildcarded.                                                * 02946900
*          DEFAULT: ANY_KEY                                           * 02967800
*                                                                     * 02988700
*                                                                     * 03009600
*                                                                     * 03030500
*                                                                     * 03051400
*      [AUTH(ANY|MASTER|SYS|IO|CONS|ALL|INFO|SYSONLY|IOONLY|CONSONLY * 03065300
*          |ALLONLY|INFOONLY)]                                       * 03079200
*          is an optional keyword input that indicates console        * 03093200
*          command authority.                                         * 03114100
*          DEFAULT: ANY                                               * 03135000
*                                                                     * 03155900
*                                                                     * 03176800
*          AUTH(ANY)                                                  * 03197700
*              Return consoles with any authority.                    * 03218600
*                                                                     * 03239500
*          AUTH(MASTER)                                               * 03260400
*              Return consoles with MASTER authority only.            * 03281300
*                                                                     * 03302200
*          AUTH(SYS)                                                  * 03323100
*              Return consoles with SYS authority or MASTER           * 03337000
*              authority.                                             * 03350900
*                                                                     * 03364900
*          AUTH(IO)                                                   * 03385800
*              Return consoles with IO authority or MASTER authority. * 03406700
*                                                                     * 03427600
*          AUTH(CONS)                                                 * 03448500
*              Return consoles with CONS authority or MASTER          * 03462400
*              authority.                                             * 03476300
*                                                                     * 03490300
*          AUTH(ALL)                                                  * 03511200
*              Return consoles with IO, SYS, and CONS authority, or   * 03525100
*              MASTER authority.                                      * 03539000
*                                                                     * 03553000
*          AUTH(INFO)                                                 * 03573900
*              Return consoles with INFO, IO, SYS, CONS, or MASTER    * 03587800
*              authority.                                             * 03601700
*                                                                     * 03602500
*          AUTH(SYSONLY)                                              * 03603300
*              Return consoles with SYS authority only.               * 03604100
*                                                                     * 03604900
*          AUTH(IOONLY)                                               * 03605700
*              Return consoles with IO authority only.                * 03606500
*                                                                     * 03607300
*          AUTH(CONSONLY)                                             * 03608100
*              Return consoles with CONS authority only.              * 03608900
*                                                                     * 03609700
*          AUTH(ALLONLY)                                              * 03610500
*              Return consoles with IO, SYS, and CONS authority only. * 03611300
*                                                                     * 03612100
*          AUTH(INFOONLY)                                             * 03612900
*              Return consoles with INFO authority only.              * 03613700
*                                                                     * 03615700
*                                                                     * 03636600
*                                                                     * 03657500
*                                                                     * 03678400
*                                                                     * 03699300
*                                                                     * 03720200
*      [ATTR(ANY|YES|ROUT|UD|UDN|HC|AUTO|AUTON|MN|NONE)]            * 03741100
*          is an optional keyword input that indicates routing        * 03762000
*          attributes of the console.                                 * 03782900
*          DEFAULT: ANY                                               * 03803800
*                                                                     * 03824700
*                                                                     * 03845600
*          ATTR(ANY)                                                  * 03866500
*              Return consoles regardless of routing attributes.      * 03873400
*                                                                     * 03880300
*          ATTR(YES)                                                  * 03887200
*              Return consoles that are receiving some type of        * 03894100
*              undelivered messages.                                  * 03901000
*                                                                     * 03908300
*          ATTR(ROUT)                                                 * 03929200
*              Return consoles receiving any routing codes.           * 03950100
*                                                                     * 03971000
*          ATTR(UD)                                                   * 03991900
*              Return consoles receiving UD messages.                 * 04012800
*                                                                     * 04033700
*          ATTR(UDN)                                                  * 04054600
*              Return consoles not receiving UD messages.             * 04075500
*                                                                     * 04096400
*          ATTR(HC)                                                   * 04117300
*              Return consoles receiving the hardcopy message set.    * 04138200
*                                                                     * 04159100
*          ATTR(AUTO)                                                 * 04180000
*              Return consoles receiving AUTO(YES) messages.          * 04200900
*                                                                     * 04221800
*          ATTR(AUTON)                                                * 04242700
*              Return consoles not receiving AUTO(YES) messages.      * 04263600
*                                                                     * 04284500
*          ATTR(MN)                                                   * 04305400
*              Return consoles receiving any type of MONITOR          * 04326300
*              messages.                                              * 04347200
*                                                                     * 04368100
*          ATTR(NONE)                                                 * 04389000
*              Return consoles with no routing attributes.            * 04409900
*                                                                     * 04430800
*                                                                     * 04451700
*                                                                     * 04472600
*                                                                     * 04493500
*                                                                     * 04514400
*                                                                     * 04535300
*      [DOM(ANY|YES|NORMAL|ALL|NONE)]                               * 04556200
*          is an optional keyword input that indicates the DOM        * 04577100
*          attribute of the consoles.                                 * 04598000
*          DEFAULT: ANY                                               * 04618900
*                                                                     * 04639800
*                                                                     * 04660700
*          DOM(ANY)                                                   * 04681600
*              Return consoles regardless of their DOM attribute.     * 04685000
*                                                                     * 04688400
*          DOM(YES)                                                   * 04691800
*              Return consoles that are receiving DOMs (either        * 04695500
*              DOM(NORMAL) or DOM(NONE) consoles).                    * 04709400
*                                                                     * 04723400
*          DOM(NORMAL)                                                * 04744300
*              Return consoles that are DOM(NORMAL) only.             * 04765200
*                                                                     * 04786100
*          DOM(ALL)                                                   * 04807000
*              Return consoles that are DOM(ALL) only.                * 04827900
*                                                                     * 04848800
*          DOM(NONE)                                                  * 04869700
*              Return consoles that are DOM(NONE) only.               * 04890600
*                                                                     * 04911500
*                                                                     * 04932400
*                                                                     * 04953300
*                                                                     * 04974200
*                                                                     * 04995100
*                                                                     * 05016000
*      [BUFPTR(xbufptr|0)                                           * 05034800
*          is the name (RS-type) (or address in register (2)-(12) ASM * 05053600
*          only) of an optional pointer input that contains the       * 05066900
*          address of the storage that the console display will be    * 05080200
*          returned in.  This field is only valid for a SUMMARY,      * 05093500
*          INFO, or FULL request.                                     * 05106800
*          DEFAULT: 0                                                 * 05120500
*                                                                     * 05141400
*                                                                     * 05162300
*          BUFSIZE(xbufsize)]                                         * 05164900
*              is the name (RS-type) (or address in register (2)-(12) * 05167500
*              ASM only) of a required fullword input that contains   * 05170700
*              the size of the output storage buffer.  This field is  * 05173900
*              only valid when BUFPTR is specified.                   * 05177100
*              DEFAULT: 0                                             * 05180500
*                                                                     * 05183200
*                                                                     * 05204100
*                                                                     * 05496700
*                                                                     * 05517600
*                                                                     * 05538500
*                                                                     * 05559400
*      [CONSCNT(xconscnt|0)]                                        * 05576100
*          is the name (RS-type) (or address in register (2)-(12) ASM * 05592800
*          only) of an optional pointer input that contains the       * 05602800
*          address of a 4-byte output area that will contain the      * 05612800
*          number of consoles meeting the specified criteria.  The    * 05622800
*          output area is only filled in for a COUNT request.         * 05632800
*          DEFAULT: 0                                                 * 05637900
*                                                                     * 05643000
*                                                                     * 05663900
*                                                                     * 05684800
*                                                                     * 05705700
*      [TOKEN(xtoken|0)                                             * 05723100
*          is the name (RS-type) (or address in register (2)-(12) ASM * 05740500
*          only) of an optional pointer input that contains the       * 05754500
*          address of a 8-byte token used to return additional EMCS   * 05768500
*          console information on subsequent calls.                   * 05782500
*          DEFAULT: 0                                                 * 05796500
*                                                                     * 05800300
*                                                                     * 05804100
*          RECSIZE(xrecsize)]                                         * 05807900
*              is the name (RS-type) (or address in register (2)-(12) * 05811700
*              ASM only) of a required pointer input that contains    * 05813800
*              the address of a 4-byte output area that will contain  * 05815900
*              the recommended size of the output storage buffer if   * 05818000
*              BUFSIZE is insufficient.  This size represents only    * 05820100
*              enough storage to store information about the one      * 05822200
*              console represented by the TOKEN at the time of this   * 05824300
*              call to IEEQEMCS.  The output area will only be filled * 05826400
*              in when return code = IEEQE_RC_NOSTOR.                 * 05828500
*                                                                     * 05831100
*                                                                     * 05852000
*                                                                     * 05872900
*                                                                     * 05893800
*                                                                     * 05900700
*                                                                     * 05907600
*      [RETCODE(xretcode)]                                            * 05914700
*          is the name (RS-type) of an optional fullword output       * 05930300
*          variable (or register (2)-(12) ASM only) into which the    * 05945900
*          return code is to be copied from GPR 15.                   * 05961500
*                                                                     * 05963200
*                                                                     * 05964900
*                                                                     * 05966600
*                                                                     * 05968300
*      [RSNCODE(xrsncode)]                                            * 05970000
*          is the name (RS-type) of an optional fullword output       * 05971700
*          variable (or register (2)-(12) ASM only) into which the    * 05973400
*          reason code is to be copied from GPR 0.                    * 05975100
*                                                                     * 05977400
*                                                                     * 05998300
*                                                                     * 06019200
*                                                                     * 06040100
*      [PLISTVER(xplistver|IMPLIED_VERSION)]                        * 06061000
*          is an optional byte input decimal value in the "1-1" range * 06083300
*          that specifies the macro version.  PLISTVER is the only    * 06105600
*          key allowed on the list form of MF and determines which    * 06127900
*          parameter list is generated (see Macro USAGE NOTE 2).      * 06150200
*          Note that MAX may be specified instead of a number, and    * 06172500
*          the parameter list will be of the largest size currently   * 06194800
*          supported. This size may grow from release to release      * 06217100
*          (thus possibly affecting the amount of storage needed by   * 06239400
*          your program).  If your program can tolerate this, IBM     * 06261700
*          recommends that you always specify MAX when creating the   * 06284000
*          list form parameter list as that will ensure that the list * 06306300
*          form parameter list is always long enough to hold whatever * 06328600
*          parameters might be specified on the execute form.         * 06350900
*          DEFAULT: IMPLIED_VERSION.  When PLISTVER is omitted, the   * 06374500
*          default is the lowest version which allows all of the      * 06395400
*          parameters specified on the invocation to be processed.    * 06416300
*                                                                     * 06437200
*                                                                     * 06458100
*                                                                     * 06479000
*                                                                     * 06499900
*       MF(E|L|M)                                                   * 06520800
*          is a required keyword input which specifies the macro      * 06541700
*          form.                                                      * 06562600
*                                                                     * 06583500
*                                                                     * 06604400
*           MF(E,xmfctrl,COMPLETE|NOCHECK)                          * 06625300
*              specifies the execute form of the macro.  The "E" form * 06646200
*              generates code to put the parameters into the          * 06667100
*              parameter list specified by xmfctrl and invoke the     * 06688000
*              desired service.                                       * 06708900
*                                                                     * 06729800
*            ,xmfctrl                                                 * 06750700
*              is a required input.  It is the name (RS-type) (or     * 06766300
*              address in register (1)-(12) ASM only) of a storage    * 06781900
*              area for the parameter list.                           * 06797500
*                                                                     * 06813400
*            ,COMPLETE|NOCHECK                                      * 06834300
*              is an optional keyword input which specifies the       * 06855200
*              degree of macro parameter syntax checking.             * 06876100
*              DEFAULT: COMPLETE                                      * 06897000
*                                                                     * 06917900
*                                                                     * 06938800
*              COMPLETE                                               * 06959700
*                  Checking for required macro keys is done and       * 06980600
*                  defaults are supplied for omitted optional         * 07001500
*                  parameters.  (See Macro Usage Note 2).             * 07022400
*                                                                     * 07043300
*              NOCHECK                                                * 07064200
*                  Checking for required macro keys is not done nor   * 07085100
*                  are defaults supplied for omitted optional         * 07106000
*                  parameters.                                        * 07126900
*                                                                     * 07147800
*                                                                     * 07168700
*                                                                     * 07189600
*           MF(L,xmfctrl,xmfattr|BDY(DWORD))                        * 07210500
*              specifies the list form of the macro.  The "L" form    * 07231400
*              defines an area to be used for the parameter list.     * 07252300
*              Only the PLISTVER key may be specified on the          * 07273200
*              invocation.  All other macro parameters are flagged as * 07294100
*              errors.  If PLISTVER is not specified, the original    * 07315000
*              parameter list definition is used.                     * 07335900
*                                                                     * 07356800
*            ,xmfctrl                                                 * 07377700
*              is a required input.  It is the name of a storage area * 07398600
*              for the parameter list.                                * 07419500
*                                                                     * 07440400
*            ,xmfattr|BDY(DWORD)                                    * 07461300
*              is an optional 60 character input string that varies   * 07479200
*              from 1 to 60 characters. Use it to force boundary      * 07497100
*              alignment of the parameter list. Use only 0F or 0D     * 07515000
*              (assembler-only).                                      * 07532900
*              DEFAULT: 0D for Assembler, BDY(DWORD) for PL/X, which  * 07550800
*              forces the parameter list to a doubleword boundary.    * 07568700
*                                                                     * 07586700
*           MF(M,xmfctrl,COMPLETE|NOCHECK)                          * 07607600
*              specifies the modify form of the macro.  The "M" form  * 07628500
*              generates code to put the parameters into the          * 07649400
*              parameter list specified by xmfctrl.                   * 07670300
*                                                                     * 07691200
*            ,xmfctrl                                                 * 07712100
*              is a required input.  It is the name (RS-type) (or     * 07727700
*              address in register (1)-(12) ASM only) of a storage    * 07743300
*              area for the parameter list.                           * 07758900
*                                                                     * 07774800
*            ,COMPLETE|NOCHECK                                      * 07795700
*              is an optional keyword input which specifies the       * 07816600
*              degree of macro parameter syntax checking.             * 07837500
*              DEFAULT: COMPLETE                                      * 07858400
*                                                                     * 07879300
*                                                                     * 07900200
*              COMPLETE                                               * 07921100
*                  Checking for required macro keys is done and       * 07942000
*                  defaults are supplied for omitted optional         * 07962900
*                  parameters.  (See Macro Usage Note 2).             * 07983800
*                                                                     * 08004700
*              NOCHECK                                                * 08025600
*                  Checking for required macro keys is not done nor   * 08046500
*                  are defaults supplied for omitted optional         * 08067400
*                  parameters.                                        * 08088300
*                                                                     * 08109200
*                                                                     * 08130100
*                                                                     * 08151000
*                                                                     * 08171900
*                                                                     * 08192800
*                                                                     * 08213700
*                                                                     * 08234600
*01* RETURN CODES:                                                    * 08255500
*                                                                     * 08276400
*                                                                     * 08297300
*            0    Name: IEEQE_RC_OK                                   * 08318200
*                                                                     * 08339100
*                 Meaning:  EMCS consoles have been found.  In the    * 08346000
*                 case of a REQUEST type of SUMMARY, INFO, or FULL,   * 08352900
*                 the output buffer was sufficient to hold all of the * 08359800
*                 information for the consoles meeting the search     * 08366700
*                 criteria.                                           * 08373600
*                                                                     * 08380900
*                 Action:  None required.                             * 08430900
*                                                                     * 08483700
*            4    Name: IEEQE_RC_NOCONS                               * 08485300
*                                                                     * 08486900
*                 Meaning:  No EMCS consoles meet the specified       * 08488500
*                 filters.                                            * 08490100
*                                                                     * 08491700
*                 Action:  None required.                             * 08494100
*                                                                     * 08496500
*            8    Name: IEEQE_RC_NOSTOR                               * 08498100
*                                                                     * 08499700
*                 Meaning:  Insufficient return buffer storage to     * 08500700
*                 complete the query operation.                       * 08501700
*                                                                     * 08502900
*                 Action:  Refer to the action provided with the      * 08503100
*                 specific reason code.                               * 08503300
*                                                                     * 08503500
*                                                                     * 08503600
*                 HEX REASON  MEANING/ACTION                          * 08503700
*                 CODE                                                * 08503800
*                                                                     * 08503900
*                 4           Name: IEEQE_RS_TOKSZCONS                * 08504000
*                                                                     * 08504100
*                             Meaning: A token and recommended buffer * 08504200
*                             size have been returned in TOKEN and    * 08504300
*                             RECSIZE.  Also, some console            * 08504400
*                             information has been returned in the    * 08504500
*                             output buffer.                          * 08504600
*                                                                     * 08504700
*                             Action: After processing the            * 08504800
*                             information returned in the console     * 08504900
*                             buffer, issue IEEQEMCS again with the   * 08505000
*                             token that was returned by this call to * 08505100
*                             IEEQEMCS so that more console           * 08505200
*                             information may be returned.            * 08505300
*                                                                     * 08505400
*                 8           Name: IEEQE_RS_TOKSZNOCONS              * 08505500
*                                                                     * 08505600
*                             Meaning: A token and recommended buffer * 08505700
*                             size have been returned in TOKEN and    * 08505800
*                             RECSIZE.  The output buffer is too      * 08505900
*                             small to return any EMCS consoles.      * 08506000
*                                                                     * 08506100
*                             Action: Allocate a new buffer that is   * 08506200
*                             at least the size returned in RECSIZE,  * 08506300
*                             and issue IEEQEMCS again with the new   * 08506400
*                             buffer and the token returned on the    * 08506500
*                             previous IEEQEMCS call.  The            * 08506600
*                             recommended buffer size returned in     * 08506700
*                             RECSIZE is sufficient to hold only one  * 08506800
*                             console.  It may be necessary to obtain * 08506900
*                             a buffer larger than that to hold all   * 08507000
*                             of the consoles returned by IEEQEMCS.   * 08507100
*                                                                     * 08507200
*                 12          Name: IEEQE_RS_NOTOKSZRET               * 08507300
*                                                                     * 08507400
*                             Meaning: TOKEN and RECSIZE parameters   * 08507500
*                             were not coded on the macro invocation, * 08507600
*                             so IEEQEMCS could not return a          * 08507700
*                             recommended buffer size to the caller.  * 08507800
*                             The buffer size specified by BUFSIZE    * 08507900
*                             was not sufficient to hold all of the   * 08508000
*                             consoles returned by IEEQEMCS.          * 08508100
*                                                                     * 08508200
*                             Action:  Issue IEEQEMCS again with the  * 08508300
*                             TOKEN and RECSIZE parameters.           * 08508400
*                                                                     * 08508500
*                                                                     * 08508600
*                                                                     * 08508700
*            12   Name: IEEQE_RC_INVTOK                               * 08508800
*                                                                     * 08508900
*                 Meaning:  Invalid token in parameter list.          * 08509000
*                                                                     * 08509100
*                 Action:  Issue IEEQEMCS again with a correct token  * 08509200
*                 or a token of zeros.                                * 08509300
*                                                                     * 08509400
*            16   Name: IEEQE_RC_INVPL                                * 08509500
*                                                                     * 08509600
*                 Meaning:  Invalid parameter list.                   * 08509700
*                                                                     * 08509800
*                 Action:  Refer to the action provided with the      * 08509900
*                 specific reason code.                               * 08510000
*                                                                     * 08510300
*                                                                     * 08510400
*                 HEX REASON  MEANING/ACTION                          * 08510500
*                 CODE                                                * 08510600
*                                                                     * 08510700
*                 4           Name: IEEQE_RS_INVACRN                  * 08510800
*                                                                     * 08510900
*                             Meaning:  The acronym in the parameter  * 08511000
*                             list was invalid.                       * 08511100
*                                                                     * 08511200
*                             Action:  Correct the acronym in the     * 08511300
*                             parameter list and issue IEEQEMCS       * 08511400
*                             again.                                  * 08511500
*                                                                     * 08511600
*                 8           Name: IEEQE_RS_INVADDR                  * 08511700
*                                                                     * 08511800
*                             Meaning:  An output address is invalid. * 08512000
*                             An ABEND occured while trying to access * 08512200
*                             storage at an address specified in the  * 08512400
*                             parameter list, possibly because that   * 08512600
*                             storage is not accessible by the        * 08512800
*                             caller, or the storage does not exist.  * 08513000
*                                                                     * 08513200
*                             Action:  Correct the invalid address in * 08513400
*                             the parameter list and issue IEEQEMCS   * 08513600
*                             again.                                  * 08513800
*                                                                     * 08514000
*                 12          Name: IEEQE_RS_INVBUFSIZEADDR           * 08514300
*                                                                     * 08514700
*                             Meaning:  The length of the buffer in   * 08514900
*                             the parameter list was invalid.         * 08515100
*                                                                     * 08515300
*                             Action:  Correct the buffer length in   * 08515500
*                             the parameter list and issue IEEQEMCS   * 08515700
*                             again.                                  * 08515900
*                                                                     * 08516100
*                 16          Name: IEEQE_RS_INVLGTH                  * 08517100
*                                                                     * 08518100
*                             Meaning:  The length of the parameter   * 08518200
*                             list is invalid.                        * 08518300
*                                                                     * 08518400
*                             Action:  Correct the length in the      * 08518500
*                             parameter list and issue IEEQEMCS       * 08518600
*                             again.                                  * 08518700
*                                                                     * 08518800
*                 20          Name: IEEQE_RS_INVVERS                  * 08518900
*                                                                     * 08519000
*                             Meaning:  The version specified in the  * 08519100
*                             parameter list is invalid.              * 08519200
*                                                                     * 08519300
*                             Action:  Correct the version in the     * 08519400
*                             parameter list and issue IEEQEMCS       * 08519500
*                             again.                                  * 08519600
*                                                                     * 08519700
*                 24          Name: IEEQE_RS_INVFUNC                  * 08519800
*                                                                     * 08519900
*                             Meaning:  The REQUEST type specified in * 08520000
*                             the parameter list is not a valid       * 08520100
*                             REQUEST type.                           * 08520200
*                                                                     * 08520300
*                             Action:  Correct the REQUEST type in    * 08520400
*                             the parameter list and issue IEEQEMCS   * 08520500
*                             again.                                  * 08520600
*                                                                     * 08520700
*                 28          Name: IEEQE_RS_INVSTAT                  * 08520800
*                                                                     * 08520900
*                             Meaning:  The STATUS specified in the   * 08521000
*                             parameter list is not a valid STATUS    * 08521100
*                             type.                                   * 08521200
*                                                                     * 08521300
*                             Action:  Correct the STATUS in the      * 08521400
*                             parameter list and issue IEEQEMCS       * 08521500
*                             again.                                  * 08521600
*                                                                     * 08521700
*                 32          Name: IEEQE_RS_INVAUTH                  * 08521800
*                                                                     * 08521900
*                             Meaning:  The command authority         * 08522000
*                             specified in the parameter list is not  * 08522100
*                             a valid command authority type.         * 08522200
*                                                                     * 08522300
*                             Action:  Correct the AUTH in the        * 08522400
*                             parameter list and issue IEEQEMCS       * 08522500
*                             again.                                  * 08522600
*                                                                     * 08522700
*                 36          Name: IEEQE_RS_INVDOM                   * 08522800
*                                                                     * 08522900
*                             Meaning:  The DOM attribute specified   * 08523000
*                             in the parameter list is not a valid    * 08523100
*                             DOM attribute type.                     * 08523200
*                                                                     * 08523300
*                             Action:  Correct the DOM in the         * 08523400
*                             parameter list and issue IEEQEMCS       * 08523500
*                             again.                                  * 08523600
*                                                                     * 08523700
*                 40          Name: IEEQE_RS_INCONSIST                * 08523800
*                                                                     * 08523900
*                             Meaning:  A set of parameters specified * 08524000
*                             in the parameter list conflict with     * 08524100
*                             each other.                             * 08524200
*                                                                     * 08524300
*                             Action:  Correct the parameter list to  * 08524400
*                             not have conflicting parameters and     * 08524500
*                             issue IEEQEMCS again.                   * 08524600
*                                                                     * 08524700
*                 44          Name: IEEQE_RS_INVATTR                  * 08524800
*                                                                     * 08524900
*                             Meaning:  The routing attributes        * 08525000
*                             specified in the parameter list are not * 08525100
*                             valid routing attribute types.          * 08525200
*                                                                     * 08525300
*                             Action:  Correct the ATTR field in the  * 08525400
*                             parameter list and issue IEEQEMCS       * 08525500
*                             again.                                  * 08525600
*                                                                     * 08525700
*                                                                     * 08525800
*                                                                     * 08525900
*       64        Name: IEEQE_RC_SYSERR                               * 08526500
*                                                                     * 08527200
*                 Meaning:  System Error.  This return code is for    * 08529800
*                 IBM diagnostic purposes only.                       * 08532400
*                                                                     * 08535000
*                 Action:  Record the return and reason codes and     * 08536900
*                 supply it to the appropriate IBM support personnel. * 08538800
*                                                                     * 08540800
*                                                                     * 08540900
*                 HEX REASON  MEANING/ACTION                          * 08541000
*                 CODE                                                * 08541100
*                                                                     * 08541200
*                 04          Name: IEEQE_RS_SYSABEND                 * 08541300
*                                                                     * 08541400
*                             Meaning:  An ABEND occurred during      * 08541500
*                             processing.   This reason code is for   * 08541600
*                             IBM diagnostic purposes only.           * 08541700
*                                                                     * 08541800
*                             Action:  Record the return and reason   * 08541900
*                             codes and supply it to the appropriate  * 08542000
*                             IBM support personnel.                  * 08542100
*                                                                     * 08542200
*                 08          Name: IEEQE_RS_SYSERR                   * 08542300
*                                                                     * 08542400
*                             Meaning:  An error occurred during      * 08542500
*                             processing.   This reason code is for   * 08542600
*                             IBM diagnostic purposes only.           * 08542700
*                                                                     * 08542800
*                             Action:  Record the return and reason   * 08542900
*                             codes and supply it to the appropriate  * 08543000
*                             IBM support personnel.                  * 08543100
*                                                                     * 08543200
*                                                                     * 08543300
*                                                                     * 08543400
*                                                                     * 08545400
*                                                                     * 08548100
*01* REASON CODES:                                                    * 08569000
*                                                                     * 08589900
*01* MODULE TYPE:  ASSEM-PL/X MACRO                                   * 08610800
*                                                                     * 08631700
*02*   PROCESSOR:  ASSEM-PL/X                                         * 08652600
*                                                                     * 08673500
*01* COMPONENT:  SC1CK                                                * 08694400
*                                                                     * 08697800
*01* DISTRIBUTION LIBRARY: APLSLIB                                    * 08701200
*                                                                     * 08704600
*01* ABEND CODES:  None.                                              * 08704700
*                                                                     * 08704800
*01* EXAMPLES:                                                        * 08704900
*                                                                     * 08705000
*    Example                                                          * 08705100
*                                                                     * 08705200
*    Operation: This example requests FULL information about all      * 08705300
*    consoles on system SYS01 that are in an error condition.         * 08705400
*              .                                                      * 08705500
*              .                                                      * 08705600
*              .                                                      * 08705700
*    *         Initialize BUFSIZE and TOKEN                           * 08705800
*              L     REG9,INITSIZE                                    * 08705900
*              ST    REG9,BUFSIZE                                     * 08706000
*              MVC   TOKEN,INITTOKEN                                  * 08706100
*    *         Get storage for output buffer                          * 08706200
*              STORAGE OBTAIN,LENGTH=BUFSIZE,ADDR=BUFPTR,COND=NO,LOC= * 08706300
*    ANY                                                              * 08706400
*    *         Issue IEEQEMCS                                         * 08706500
*    DOQEMCS   EQU   *                                                * 08706600
*              IEEQEMCS REQUEST=FULL,        Full info                * 08706700
*           X                                                         * 08706800
*                   STATUS=ALL,              Active or inactive conso * 08706900
*    les    X                                                         * 08707000
*                   TOKEN=TOKENPTR,          Token                    * 08707100
*           X                                                         * 08707200
*                   BUFPTR=BUFPTR,           Buffer address           * 08707300
*           X                                                         * 08707400
*                   BUFSIZE=BUFSIZE,         Buffer size              * 08707500
*           X                                                         * 08707600
*                   RECSIZE=RECSZPTR,        Recommended size         * 08707700
*           X                                                         * 08707800
*                   RETCODE=RETCODE,         Return code              * 08707900
*           X                                                         * 08708000
*                   RSNCODE=RSNCODE,         Reason code              * 08708100
*           X                                                         * 08708200
*                   MF=(E,PLIST,COMPLETE)                             * 08708300
*    *         Check return and reason codes from IEEQEMCS            * 08708400
*              LA  REG14,IEEQE_RC_OK       Check if all consoles have * 08708500
*     been                                                            * 08708600
*              C   REG14,RETCODE             returned                 * 08708700
*              BE  ALLOK                   All consoles have been ret * 08708800
*    urned,                                                           * 08708900
*                                            so process them          * 08709000
*              LA  REG14,IEEQE_RC_NOCONS   Check if no consoles have  * 08709100
*    been                                                             * 08709200
*              C   REG14,RETCODE             returned                 * 08709300
*              BE  DONE                    No consoles met the filter * 08709400
*    , so   X                                                         * 08709500
*                                            exit                     * 08709600
*              LA  REG14,IEEQE_RC_NOSTOR   Check if the storage buffe * 08709700
*    r could                                                          * 08709800
*              C   REG14,RETCODE             not hold all the console * 08709900
*    s                                                                * 08710000
*              BNE ERROR                   No, there was some kind of * 08710100
*     error                                                           * 08710200
*              LA  REG14,IEEQE_RS_TOKSZCONS                           * 08710300
*              C   REG14,RSNCODE                                      * 08710400
*              BE  SOMEOK                  The buffer was too small t * 08710500
*    o hold X                                                         * 08710600
*                                          all the consoles meeting t * 08710700
*    his    X                                                         * 08710800
*                                          filter, but IEEQEMCS put a * 08710900
*    s many X                                                         * 08711000
*                                          consoles as possible in th * 08711100
*    e      X                                                         * 08711200
*                                          buffer.  Process the conso * 08711300
*    les,   X                                                         * 08711400
*                                          and call IEEQEMCS again.   * 08711500
*              LA  REG14,IEEQE_RS_TOKSZNOCONS                         * 08711600
*              C   REG14,RSNCODE                                      * 08711700
*              BE  GETMORE                 The buffer was too small f * 08711800
*    or     X                                                         * 08711900
*                                          even one console.  Free th * 08712000
*    e      X                                                         * 08712100
*                                          buffer, get more storage,  * 08712200
*    and    X                                                         * 08712300
*                                          call IEEQEMCS again.       * 08712400
*              .                                                      * 08712500
*              .                                                      * 08712600
*              .                                                      * 08712700
*    ALLOK     EQU *                                                  * 08712800
*    *         Call PROCCONS to process the output buffer.            * 08712900
*              LA   REG15,PROCCONS                                    * 08713000
*              BALR REG14,REG15                                       * 08713100
*    *         There are no more consoles to process, so exit         * 08713200
*              XR   REG15,REG15            Zero return code           * 08713300
*              B    DONE                                              * 08713400
*    SOMEOK    EQU *                                                  * 08713500
*    *         Call PROCCONS to process the consoles returned in      * 08713600
*    *         the output buffer.                                     * 08713700
*              LA   REG15,PROCCONS                                    * 08713800
*              BALR REG14,REG15                                       * 08713900
*    *         There is more console information to be retrieved, so  * 08714000
*    *         loop back to DOQEMCS.                                  * 08714100
*              B    DOQEMCS                                           * 08714200
*    PROCCONS  EQU  *                                                 * 08714300
*    *         Process consoles, and return to caller.                * 08714400
*              ST   REG14,RETADDR                                     * 08714500
*              L    HDRREG,BUFPTR          Load pointer to buffer in  * 08714600
*    R2                                                               * 08714700
*              USING ECDM_HDR,HDRREG       This should be the ECDM he * 08714800
*    ader   X                                                         * 08714900
*                                          pointer                    * 08715000
*              L    SUMMREG,ECDM_HDR_SIZE  Load the size of the heade * 08715100
*    r                                                                * 08715200
*              AR   SUMMREG,HDRREG         Find the address of the su * 08715300
*    mmary  X                                                         * 08715400
*                                          block                      * 08715500
*              LH   REG15,ECDM_NENT        Load number of entries     * 08715600
*              ST   REG15,NUMCONS                                     * 08715700
*              USING ECDM_SUMM,SUMMREG                                * 08715800
*              USING ECDM_INFO,INFOREG                                * 08715900
*              USING ECDM_DSP,DSPREG                                  * 08716000
*              USING ECDM_CNSW,CNSWREG                                * 08716100
*              USING ECDM_MSCP,MSCPREG                                * 08716200
*    CONSLOOP  LTR  REG15,REG15            Is the number of entries z * 08716300
*    ero?                                                             * 08716400
*              BZ   CONSDONE               Yes, exit loop             * 08716500
*              L    REG8,ECDM_SUMM_SIZE    Put size of summ block in  * 08716600
*    R10                                                              * 08716700
*              L    ENDREG,ECDM_SUMM_CONS_SIZE Put size of all blocks * 08716800
*     for   X                                                         * 08716900
*                                              this console in R11    * 08717000
*              AR   REG8,SUMMREG           Get address of end of the  * 08717100
*           X                                                         * 08717200
*                                          summary block in R8 (work  * 08717300
*    reg)                                                             * 08717400
*              AR   ENDREG,SUMMREG         Get address of the end of  * 08717500
*    the    X                                                         * 08717600
*                                          console block in R11       * 08717700
*    BLKLOOP   LR   REG9,REG8              Copy work addr into R9     * 08717800
*              SR   REG9,ENDREG            Are we at the end of the b * 08717900
*    lock?                                                            * 08718000
*              BZ   DOCONS                 Yes, do the actual console * 08718100
*           X                                                         * 08718200
*                                          processing                 * 08718300
*              LA   REG9,ECDM_TYPE_INFO    Load the type of block in  * 08718400
*    R9                                                               * 08718500
*              CH   REG9,0(REG8)           Is this an info block?     * 08718600
*              BE   INFOBLK                Yes, branch to info block  * 08718700
*              LA   REG9,ECDM_TYPE_DSP     Load the type of block in  * 08718800
*    R9                                                               * 08718900
*              CH   REG9,0(REG8)           Is this a DSP block?       * 08719000
*              BE   DSPBLK                 Yes, branch to dataspace b * 08719100
*    lock                                                             * 08719200
*              LA   REG9,ECDM_TYPE_MSCP    Load the type of block in  * 08719300
*    R9                                                               * 08719400
*              CH   REG9,0(REG8)           Is this an MSCOPE block?   * 08719500
*              BE   MSCPBLK                Yes, branch to MSCOPE bloc * 08719600
*    k                                                                * 08719700
*              LA   REG9,ECDM_TYPE_CNSW    Load the type of block in  * 08719800
*    R9                                                               * 08719900
*              CH   REG9,0(REG8)           Is this a CNSWITCH block?  * 08720000
*              BE   CNSWBLK                Yes, branch to CNSWITCH bl * 08720100
*    ock                                                              * 08720200
*              B    ERROR                  There was a bad type, so e * 08720300
*    xit                                                              * 08720400
*    INFOBLK   LR   INFOREG,REG8           Load INFO block addr into  * 08720500
*    R4                                                               * 08720600
*              A    REG8,ECDM_INFO_SIZE    Increment size of block    * 08720700
*              B    BLKLOOP                Find next block            * 08720800
*    DSPBLK    LR   DSPREG,REG8            Load DSP block addr into R * 08720900
*    5                                                                * 08721000
*              A    REG8,ECDM_DSP_SIZE     Increment size of block    * 08721100
*              B    BLKLOOP                Find next block            * 08721200
*    MSCPBLK   LR   MSCPREG,REG8           Load MSCP block addr into  * 08721300
*    R6                                                               * 08721400
*              A    REG8,ECDM_MSCP_SIZE    Increment size of block    * 08721500
*              B    BLKLOOP                Find next block            * 08721600
*    CNSWBLK   LR   CNSWREG,REG8           Load CNSW block addr into  * 08721700
*    R7                                                               * 08721800
*              A    REG8,ECDM_CNSW_SIZE    Increment size of block    * 08721900
*              B    BLKLOOP                Find next block            * 08722000
*    DOCONS    EQU  *                      Console processing         * 08722100
*    *         At this point, do any processing on this individual    * 08722200
*    *         console that is necessary.                             * 08722300
*              .                                                      * 08722400
*              .                                                      * 08722500
*              .                                                      * 08722600
*    *         Now, decrement the console count, and process the      * 08722700
*    *         next console in the buffer (if there is one).          * 08722800
*              L    REG15,NUMCONS                                     * 08722900
*              BCTR REG15,0                Decrement console count    * 08723000
*              ST   REG15,NUMCONS                                     * 08723100
*              LR   SUMMREG,REG8           Get address of next block  * 08723200
*    in R3                                                            * 08723300
*              B    CONSLOOP               process next block         * 08723400
*    CONSDONE  L    REG14,RETADDR                                     * 08723500
*              BR   REG14                                             * 08723600
*              .                                                      * 08723700
*              .                                                      * 08723800
*              .                                                      * 08723900
*    GETMORE   EQU  *                                                 * 08724000
*    *         There was not enough storage to complete the request,  * 08724100
*    so                                                               * 08724200
*    *         get some more.                                         * 08724300
*    *         First delete the old storage                           * 08724400
*              STORAGE RELEASE,LENGTH=BUFSIZE,ADDR=BUFPTR             * 08724500
*    *         Now, since IEEQEMCS returned a recommended storage     * 08724600
*    *         size, move that amount into BUFSIZE, and obtain the    * 08724700
*    *         storage buffer.                                        * 08724800
*              MVC   BUFSIZE,RECSZ                                    * 08724900
*              STORAGE OBTAIN,LENGTH=BUFSIZE,ADDR=BUFPTR,COND=NO,LOC= * 08725000
*    ANY                                                              * 08725100
*    *         Loop to issue IEEQEMCS again                           * 08725200
*              B     DOQEMCS                                          * 08725300
*              .                                                      * 08725400
*              .                                                      * 08725500
*              .                                                      * 08725600
*    ERROR     EQU   *                                                * 08725700
*    *         Do any error handling here                             * 08725800
*              .                                                      * 08725900
*              .                                                      * 08726000
*              .                                                      * 08726100
*    DONE      EQU   *                                                * 08726200
*    *         IEEQEMCS found no more consoles, so release the output * 08726300
*    *         buffer.                                                * 08726400
*              STORAGE RELEASE,LENGTH=BUFSIZE,ADDR=BUFPTR             * 08726500
*    *         Now, continue on with other processing, etc.           * 08726600
*              .                                                      * 08726700
*              .                                                      * 08726800
*              .                                                      * 08726900
*    *         Declare constants and variables                        * 08727000
*    BUFSIZE   DS    F                                                * 08727100
*    BUFPTR    DS    F                                                * 08727200
*    TOKENPTR  DS    F                                                * 08727300
*    RECSZPTR  DS    F                                                * 08727400
*    TOKEN     DS    CL8                                              * 08727500
*    RECSZ     DS    F                                                * 08727600
*    RETCODE   DS    F                                                * 08727700
*    RSNCODE   DS    F                                                * 08727800
*    NUMCONS   DS    F                                                * 08727900
*    RETADDR   DS    F                                                * 08728000
*    INITSIZE  DC    XL4'300'                                         * 08728100
*    INITTOKEN DC    XL8'0'                                           * 08728200
*    *         IEEQEMCS parameter list                                * 08728300
*              DS    0F                                               * 08728400
*              IEEQEMCS MF=(L,PLIST)                                  * 08728500
*    *         IEEQEMCS return code equates                           * 08728600
*              IEEZB888                                               * 08728700
*    *         Include mapping of ECDM blocks                         * 08728800
*              IEEZB887                                               * 08728900
*              END                                                    * 08729000
*                                                                     * 08729100
*01* MACRO USAGE NOTES:                                               * 08736200
*                                                                     * 08757100
*                                                                     * 08778000
*    1.  Printing of the macro expansion is controlled by the ZPRINT  * 08798900
*        global macro variable.  Any value other than 'NO' will       * 08819800
*        result in the macro expansion being printed.  The default is * 08840700
*        'YES'.  The following examples illustrate how the ZPRINT     * 08861600
*        variable should be set.                                      * 08882500
*                                                                     * 08903400
*                    GBLC &ZPRINT                                     * 08924300
*            &ZPRINT SETC 'YES'          &ZPRINT SETC 'NO'            * 08945200
*                                                                     * 08966100
*                                                                     * 08987000
*    2.  When using the NOCHECK option in conjunction with the Modify * 09007900
*        and/or  Execute  forms,  be  sure  that  it is preceded by a * 09028800
*        Modify   or  Execute  form  invocation  which  specifies  or * 09049700
*        defaults  to  the  COMPLETE  option.   This insures that the * 09070600
*        parameter  list  is  initialized completely.   The parameter * 09091500
*        list  field which identifies the version number of the macro * 09112400
*        is only set when the Standard form or the Complete option of * 09133300
*        the  Execute/Modify  form  is  used,  or  when  PLISTVER  is * 09154200
*        explicitly  specified.  Be sure that the resulting parameter * 09175100
*        list version number covers all the keys that you use.        * 09196000
*                                                                     * 09216900
*                                                                     * 09237800
*    3.  All   keys   currently   contained  in  the  IEEQEMCS  macro * 09258700
*        correspond  to  version  1.   If you specify PLISTVER, use a * 09279600
*        value of 1 or MAX.                                           * 09300500
*                                                                     * 09321400
*                                                                     * 09342300
*                                                                     * 09363200
*                                                                     * 09363300
*01* CHANGE ACTIVITY:                                                 * 09363400
*                                                                     * 09363500
*   Flag LineItem  FMID    Date   ID    Comment                       * 09363600
*                                                                     * 09363700
*    $L0=DEMCS    JBB6607 980430 PDTA:  DISPLAY EMCS                  * 09363800
*    $P1=PWA0180  JBB6607 980630 PDHD:  Allow any cross memory mode   * 09363900
*    $P2=PXD1290  HBB7703 000218 PDKP:  Recompile to fix AMG bug in   * 09371100
*                                         MF=M form                   * 09378300
****** END OF SPECIFICATIONS *****************************************/ 09385700
*/* TLINE 1 *********************************************************** 09405000
         MACRO                                                          09425900
&XLABEL  IEEQEMCS &REQUEST=,&STATUS=,&BKLG_NUM=,&CN=,&SYS=,&KEY=,      *09446800
               &AUTH=,&ATTR=,&DOM=,&BUFPTR=,&BUFSIZE=,&CONSCNT=,       *09467700
               &TOKEN=,&RECSIZE=,&RETCODE=,&RSNCODE=,&PLISTVER=,&MF=    09488600
.*                                                                      09509500
*              MACDATE -02/12/00-<1>                                    09530400
.*                                                                      09551300
.*******************************************************************    09572200
.***AB.02  GLOBAL VARIABLES TO CONTROL PRINT AND CODE GENERATION        09593100
.*******************************************************************    09614000
              GBLC  &ZPRINT     YES=PRINT NO=NO PRINT                   09634900
              GBLC  &ZTEST      YES=TEST NO=NO TEST                     09655800
              GBLC  &ZSYSTEM    PCCODE10, MVS, SAK, VM, XAX             09676700
.*                                                                      09697600
              GBLC  &ZIEEQEMCS  YES=MACRO USED AT LEAST ONCE            09718500
.*******************************************************************    09739400
.***AB.03  COMMONLY USED LOCAL MACRO VARIABLES                          09760300
.*******************************************************************    09781200
              LCLC  &ZMS        ERROR MESSAGE WORK AREA                 09802100
              LCLC  &ZCNDX      LAST THREE SYSNDX CHARACTERS            09823000
              LCLC  &ZCLNG      USED WHEN LENGTH IS NEEDED              09843900
              LCLC  &ZCGPR      USED WHEN VALUE IS IN A GPR             09864800
              LCLC  &ZCVAL      USED TO CONTAIN FIXED VALUE             09885700
              LCLA  &ZAWRK      USED AS A WORK AREA                     09906600
              LCLA  &ZASIZ      USED FOR SIZE OF VALUE                  09927500
              LCLA  &ZN         NUMERIC WORK VARIABLE                   09948400
              LCLC  &ZC         CHARACTER WORK VARIABLE                 09969300
              LCLC  &ZTLC       CHARACTER TOO LONG VARIABLE             09990200
              LCLA  &ZTLA       VALUE TOO LONG VARIABLE                 10011100
              LCLA  &ZMACRET    MACRO RETURN CODE                       10032000
&ZMACRET      SETA  0           ASSUME NO ERRORS                        10052900
.*                                                                      10073800
              LCLC  &ZCSYSLIST(255)             NONXKEY, POS ARRAY      10094700
              LCLA  &ZASYSLNDX  WORK INDEX FOR ZCSYSLIST()              10115600
              LCLA  &ZPLLEN     PARAMETER LIST LENGTH                   10136500
              LCLC  &ZENDBASEPL                 End of base PL          10157400
              LCLA  &ZPLWORKA   PARAMETER LIST LENGTH                   10178300
.*******************************************************************    10199200
.***AB.04  MACRO VARIABLES FOR RANGES AND SETS OF ARGUMENTS             10220100
.*******************************************************************    10241000
              LCLA  &ZI         INDEX FOR ARRAY                         10261900
              LCLA  &ZJ         INDEX FOR PARMS                         10282800
              LCLA  &ZK         INDEX FOR PARSE                         10303700
              LCLA  &ZLO        LOW RANGE VALUE                         10324600
              LCLA  &ZHI        HIGH RANGE VALUE                        10345500
              LCLC  &ZW         WORK AREA FOR PARM                      10366400
.********************************************************************   10387300
.***AB.05  INVOKE MVS MACROS TO CONTROL CODE GENERATION                 10408200
.********************************************************************   10429100
              GBLC  &SYSSPLV    SP LEVEL 1,2,3 -SPLEVEL                 10450000
              GBLC  &SYSASCE    SYSTEM STATE P ANY AR-SYSSTATE          10470900
              GBLA  &SYSALVL    SYSSTATE ARCHLVL                        10481300
.*                                                                      10491800
              AIF   (K'&SYSASCE GT 0).ZSYS4     SYS STATE DEFINED       10512700
              AIF   (K'&SYSSPLV GT 0).ZSYS2     SP LEVEL DEFINED        10533600
              SPLEVEL  TEST                                             10554500
.ZSYS2        ANOP  ,                                                   10575400
              AIF   ('&SYSSPLV' EQ '1').ZSYS3   PRE SP 3.1              10596300
              AIF   ('&SYSSPLV' EQ '2').ZSYS3   PRE SP 3.1              10617200
              SYSSTATE TEST                                             10638100
              AGO   .ZSYS4                                              10659000
.ZSYS3        ANOP  ,                                                   10679900
&SYSASCE      SETC  'P'         ASSUME SYSSTATE PRIMARY                 10700800
.ZSYS4        ANOP  ,                                                   10721700
.*******************************************************************    10742600
.***AB.07  DEFINE ALL MACRO VARIABLES                                   10763500
.*******************************************************************    10784400
              LCLC  &XREQUEST   ++ VALUE                                10805300
              LCLC  &XSTATUS    ++ VALUE                                10826200
              LCLC  &XBKLG_NUM  ++ NAME                                 10847100
              LCLC  &XCN        ++ NAME                                 10868000
              LCLC  &XSYS       ++ NAME                                 10895800
              LCLC  &XKEY       ++ NAME                                 10909800
              LCLC  &XAUTH      ++ VALUE                                10930700
              LCLC  &XATTR      ++ VALUE                                10951600
              LCLC  &XDOM       ++ VALUE                                10972500
              LCLC  &XBUFPTR    ++ NAME                                 10993400
              LCLC  &XBUFSIZE   ++ NAME                                 11024700
              LCLC  &XCONSCNT   ++ NAME                                 11056100
              LCLC  &XTOKEN     ++ NAME                                 11077000
              LCLC  &XRECSIZE   ++ NAME                                 11087400
              LCLC  &XRETCODE   ++ NAME                                 11097900
              LCLC  &XRSNCODE   ++ NAME                                 11108300
              LCLA  &XPLISTVER  ++ VALUE                                11118800
              LCLC  &XMF        ++ VALUE                                11139700
              LCLC  &XMFCTRL    ++ NAME                                 11160600
              LCLC  &XMFSCK     ++ VALUE                                11181500
              LCLC  &XMFATTR    ++ VALUE                                11202400
.*******************************************************************    11223300
.***AB.13  DEFINE MACRO VARIABLES FOR INPUT/OUTPUT PROCESSING           11244200
.*******************************************************************    11265100
              LCLC  &ZXREQUEST  ++ INPUT VALUE                          11286000
              LCLC  &ZXSTATUS   ++ INPUT VALUE                          11306900
              LCLC  &ZXBKLG_NUM                 ++ INPUT NAME           11327800
              LCLC  &ZXCN       ++ INPUT NAME                           11348700
              LCLC  &ZXSYS      ++ INPUT NAME                           11376500
              LCLC  &ZXKEY      ++ INPUT NAME                           11390500
              LCLC  &ZXAUTH     ++ INPUT VALUE                          11411400
              LCLC  &ZXATTR     ++ INPUT VALUE                          11432300
              LCLC  &ZXDOM      ++ INPUT VALUE                          11453200
              LCLC  &ZXBUFPTR   ++ INPUT NAME                           11474100
              LCLC  &ZXBUFSIZE  ++ INPUT NAME                           11505400
              LCLC  &ZXCONSCNT  ++ INPUT NAME                           11526300
              LCLC  &ZXTOKEN    ++ INPUT NAME                           11547200
              LCLC  &ZXRECSIZE  ++ INPUT NAME                           11568100
              LCLC  &ZXRETCODE  ++ OUTPUT NAME                          11578600
              LCLC  &ZXRSNCODE  ++ OUTPUT NAME                          11589000
              LCLC  &ZXPLISTVER                 ++ INPUT VALUE          11599500
              LCLC  &ZXMF       ++ INPUT VALUE                          11620400
              LCLC  &ZXMFCTRL   ++ INPUT NAME                           11641300
              LCLC  &ZXMFSCK    ++ INPUT VALUE                          11662200
              LCLC  &ZXMFATTR   ++ INPUT VALUE                          11683100
.********************************************************************   11704000
.***AC.PLV01  PROCESS PLISTVER                                      *   11724900
.********************************************************************   11745800
&XPLISTVER      SETA  1                                                 11766700
                AIF   (K'&PLISTVER(1) LE 0).ZPLV0                       11787600
                AIF   ('&PLISTVER(1)' NE 'MAX').ZPLV0                   11808500
&XPLISTVER      SETA  1                                                 11829400
.ZPLV0          ANOP  ,                                                 11850300
.*                                                                      11871200
                AIF   (K'&PLISTVER(1) LE 0).ZPVCKE                      11892100
                AIF   ('&PLISTVER(1)' EQ 'IMPLIED_VERSION').ZPVCKE      11913000
                AIF   ('&PLISTVER(1)' EQ 'MAX').ZPVCKE                  11933900
.*-------------------------------------------------------------------   11954800
                AIF   (N'&PLISTVER LE 1).ZPVCK3  CK NUM                 11975700
&ZMS            SETC  '"PLISTVER='         *KPOSA* MNOTE                11996600
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 12017500
&ZMS            SETC  '&ZMS "PLISTVER"'                                 12038400
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               12059300
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                12080200
                AGO   .ZPVCK2                                           12101100
.ZPVCK3         ANOP  ,                                                 12122000
.*-------------------------------------------------------------------   12142900
                AIF   ('&PLISTVER'(1,1) NE '(').ZPVCK2                  12163800
&ZMS            SETC  '"PLISTVER='         *KGPRA* MNOTE                12184700
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 12205600
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         12226500
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'                 12247400
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                12268300
                AGO   .ZPVCKE                                           12289200
.ZPVCK2         ANOP  ,                                                 12310100
.*-------------------------------------------------------------------   12331000
&ZCVAL          SETC  '&PLISTVER(1)'                                    12351900
                AIF   ('&ZCVAL'(1,1) EQ '(').ZPVCKE  IN GPR             12372800
                AIF   (T'&ZCVAL NE 'N').ZPVCK6  NUMERIC ERR             12393700
&ZN             SETA   &PLISTVER(1)        CONVERT TO ARITHMETIC        12414600
                AIF   (&ZN LT 1).ZPVCK6    TOO LOW                      12435500
                AIF   (&ZN LE 1).ZPVCK4A   NOT HIGH                     12456400
.ZPVCK6         ANOP  ,                                                 12477300
&ZMS            SETC  '"PLISTVER='         *KRNGA* MNOTE                12498200
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 12519100
&ZMS            SETC  '&ZMS THE RANGE IS "1-1"'                         12540000
                MNOTE 8,' &ZMS FOR ARGUMENT 1.'                         12560900
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                12581800
&XPLISTVER      SETA  1                                                 12602700
                AGO   .ZPVCKE                                           12623600
.*-------------------------------------------------------------------   12644500
.ZPVCK4A        ANOP  ,                                                 12665400
                AIF   (&ZN GE &XPLISTVER).ZPVCK4                        12686300
&ZMS            SETC  'PLISTVER='          *KVALA* MNOTE                12707200
&ZMS            SETC  '&ZMS.&PLISTVER(1)'                               12728100
&ZMS            SETC  '&ZMS., BUT PLISTVER OF'                          12749000
&ZMS            SETC  '&ZMS &XPLISTVER'                                 12769900
                MNOTE 8,' &ZMS IS REQUIRED.'                            12790800
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                12811700
                AGO   .ZPVCK5                                           12832600
.ZPVCK4         ANOP  ,                                                 12853500
&XPLISTVER      SETA  &PLISTVER(1)                                      12874400
.ZPVCK5         ANOP  ,                                                 12895300
.ZPVCKE         ANOP  ,                                                 12916200
.********************************************************************   12937100
.***AG.MF01 PROCESS MF MACRO FORMS                                      12958000
.********************************************************************   12978900
              ACTR  10000                                               12999800
.*------------------------------------------------------------------    13020700
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           13041600
&XMF          SETC  ''          INITIALIZE XVARIABLE                    13062500
.*-------------------------------------------------------------------   13083400
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           13104300
.ZG90         ANOP  ,                                                   13125200
&ZTLC         SETC 'E'                                                  13146100
              AIF   ('&MF(1)' NE '&ZTLC').ZG99                          13167000
&XMF          SETC  'E'         SET KEYWORD                             13187900
              AIF   (N'&MF LE 3).ZG90A          CK NUM                  13208800
&ZMS          SETC  '"MF='      *KPOSA* MNOTE                           13229700
&ZMS          SETC  '&ZMS.&MF"'                                         13250600
&ZMS          SETC  '&ZMS "MF"'                                         13271500
              MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'                13292400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             13313300
.ZG90A        ANOP  ,                                                   13334200
.*-------------------------------------------------------------------   13355100
.***AG.KXVAR06 NAME, RQD INPUT, POS(2) -XVARIABLE                       13376000
&ZXMFCTRL     SETC  'INPUT'     SET IN/OUTPUT                           13396900
&XMFCTRL      SETC  '&MF(2,1)'  SET XVARIABLE                           13417800
              AIF   (N'&MF(2) GT 1).ZG92B       MULTI PARMS             13438700
&XMFCTRL      SETC  '&MF(2)'    SET XVARIABLE                           13459600
.ZG92B        AIF   (K'&MF(2) GT 0).ZG92C                               13480500
&ZXMFCTRL     SETC  ''          RESET IN/OUTPUT                         13501400
&ZMS          SETC  ' '         *KRQDA*                                 13522300
&ZMS          SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'                 13543200
              MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                        13564100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             13585000
.ZG92C        ANOP  ,                                                   13605900
.*-------------------------------------------------------------------   13626800
.***AG.KCK02 NAME, RQD INPUT, POS(2) -GPR OUT OF RANGE                  13647700
              AIF   (K'&ZXMFCTRL LE 0).ZG92R    NOT I/O                 13668600
              AIF   ('&XMFCTRL'(1,1) NE '(').ZG92R                      13689500
&ZCGPR        SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)                          13710400
              AIF   ('&ZCGPR'(1,1) NE '0').ZG92P                        13731300
              AIF   (K'&ZCGPR GT 2).ZG92Q                               13752200
              AIF   ('&ZCGPR' EQ '0').ZG92Q                             13773100
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       13794000
              AIF   (T'&ZCGPR NE 'N').ZG92Q     INVALID REG NAME        13814900
.ZG92P        ANOP  ,                                                   13835800
              AIF   (T'&ZCGPR NE 'N').ZG92R     NON NUMERIC             13856700
              AIF   ('&ZCGPR' LT '1').ZG92Q                             13877600
              AIF   ('&ZCGPR' LE '12').ZG92R                            13898500
.ZG92Q        ANOP  ,                                                   13919400
&ZMS          SETC  '"MF='      *KGPRA* MNOTE                           13940300
&ZMS          SETC  '&ZMS.&MF"'                                         13961200
&ZMS          SETC  '&ZMS ARGUMENT 2 MUST SPECIFY A REGISTER'           13982100
              MNOTE 8,' &ZMS IN THE RANGE (1)-(12).'                    14003000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             14023900
.ZG92R        ANOP  ,                                                   14044800
.*-------------------------------------------------------------------   14065700
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             14086600
&XMFSCK       SETC  ''          INITIALIZE XVARIABLE                    14107500
.ZG96A   AIF   ('&MF(3)' NE 'COMPLETE').ZG97A                           14128400
&XMFSCK       SETC  'COMPLETE'  SET KEYWORD                             14149300
.*-------------------------------------------------------------------   14170200
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             14191100
.ZG97A   AIF   ('&MF(3)' NE 'NOCHECK').ZG98A                            14212000
&XMFSCK       SETC  'NOCHECK'   SET KEYWORD                             14232900
.*-------------------------------------------------------------------   14253800
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             14274700
.ZG98A        AIF   (K'&XMFSCK GT 0).ZG98C      KEYWORD                 14295600
              AIF   (K'&MF(3) LE 0).ZG98B                               14316500
&ZMS          SETC  '"MF='      *KUKWA* MNOTE                           14337400
&ZMS          SETC  '&ZMS.&MF"'                                         14358300
&ZMS          SETC  '&ZMS ARGUMENT 3 IS AN UNKNOWN KEYWORD. '           14379200
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                 14400100
&ZMS          SETC  '&ZMS "COMPLETE"'                                   14421000
&ZMS          SETC  '&ZMS OR "NOCHECK".'                                14441900
              MNOTE 8,' &ZMS '                                          14462800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             14483700
.ZG98B        ANOP  ,                                                   14504600
&XMFSCK       SETC  'COMPLETE'  SET DEFAULT KEYWORD                     14525500
.ZG98C        ANOP  ,                                                   14546400
&ZXMFSCK      SETC  'INPUT'     SET IN/OUTPUT                           14567300
.*-------------------------------------------------------------------   14588200
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           14609100
.ZG99         ANOP  ,                                                   14630000
&ZTLC         SETC 'L'                                                  14650900
              AIF   ('&MF(1)' NE '&ZTLC').ZG106                         14671800
&XMF          SETC  'L'         SET KEYWORD                             14692700
              AIF   (N'&MF LE 3).ZG99A          CK NUM                  14713600
&ZMS          SETC  '"MF='      *KPOSA* MNOTE                           14734500
&ZMS          SETC  '&ZMS.&MF"'                                         14755400
&ZMS          SETC  '&ZMS "MF"'                                         14776300
              MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'                14797200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             14818100
.ZG99A        ANOP  ,                                                   14839000
.*-------------------------------------------------------------------   14859900
.***AG.KKCTL08 -MF(L) SPECIAL CHECK                                     14880800
              AIF   (N'&SYSLIST NE 0).ZG99B     POSITIONALS?            14900600
              AIF   ('&REQUEST' NE '').ZG99B    KEYS?                   14920400
              AIF   ('&STATUS' NE '').ZG99B     KEYS?                   14940200
              AIF   ('&BKLG_NUM' NE '').ZG99B   KEYS?                   14960000
              AIF   ('&CN' NE '').ZG99B         KEYS?                   14979800
              AIF   ('&SYS' NE '').ZG99B        KEYS?                   14999600
              AIF   ('&KEY' NE '').ZG99B        KEYS?                   15019400
              AIF   ('&AUTH' NE '').ZG99B       KEYS?                   15039200
              AIF   ('&ATTR' NE '').ZG99B       KEYS?                   15059000
              AIF   ('&DOM' NE '').ZG99B        KEYS?                   15078800
              AIF   ('&BUFPTR' NE '').ZG99B     KEYS?                   15098600
              AIF   ('&BUFSIZE' NE '').ZG99B    KEYS?                   15118400
              AIF   ('&CONSCNT' NE '').ZG99B    KEYS?                   15138200
              AIF   ('&TOKEN' NE '').ZG99B      KEYS?                   15158000
              AIF   ('&RECSIZE' NE '').ZG99B    KEYS?                   15177800
              AIF   ('&RETCODE' NE '').ZG99B    KEYS?                   15197600
              AIF   ('&RSNCODE' NE '').ZG99B    KEYS?                   15217400
              AGO    .ZG99C     INVOCATION OKAY                         15237200
.ZG99B        ANOP  ,                                                   15257000
&ZMS          SETC  'THE "L" FORM OF "MF"'      *MFLA* MNOTE            15277900
&ZMS          SETC  '&ZMS CAN ONLY HAVE'                                15298800
&ZMS          SETC  '&ZMS THE "PLISTVER" KEY'                           15319700
              MNOTE 8,' &ZMS SPECIFIED ON THE INVOCATION.'              15340600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             15361500
.ZG99C        ANOP  ,                                                   15382400
.*-------------------------------------------------------------------   15403300
.***AG.KXVAR06 NAME, RQD INPUT, POS(2) -XVARIABLE                       15424200
&ZXMFCTRL     SETC  'INPUT'     SET IN/OUTPUT                           15445100
&XMFCTRL      SETC  '&MF(2,1)'  SET XVARIABLE                           15466000
              AIF   (N'&MF(2) GT 1).ZG101B      MULTI PARMS             15486900
&XMFCTRL      SETC  '&MF(2)'    SET XVARIABLE                           15507800
.ZG101B       AIF   (K'&MF(2) GT 0).ZG101C                              15528700
&ZXMFCTRL     SETC  ''          RESET IN/OUTPUT                         15549600
&ZMS          SETC  ' '         *KRQDA*                                 15570500
&ZMS          SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'                 15591400
              MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                        15612300
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             15633200
.ZG101C       ANOP  ,                                                   15654100
.*-------------------------------------------------------------------   15675000
.***AG.KCK01 NAME, RQD INPUT, POS(2) -GPR NOT ALLOWED                   15695900
              AIF   (K'&ZXMFCTRL LE 0).ZG101P   NOT I/O                 15716800
              AIF   ('&XMFCTRL'(1,1) NE '(').ZG101P                     15737700
&ZXMFCTRL     SETC  ''          RESET IN/OUTPUT                         15758600
&ZMS          SETC  '"MF='      *KGPRA* MNOTE                           15779500
&ZMS          SETC  '&ZMS.&MF"'                                         15800400
&ZMS          SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'           15821300
              MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 2.'                   15842200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             15863100
.ZG101P       ANOP  ,                                                   15884000
.*-------------------------------------------------------------------   15904900
.***AG.KXVAR13 VALUE, OPT INPUT, POS(3) -XVARIABLE                      15925800
&ZXMFATTR     SETC  'INPUT'     SET IN/OUTPUT                           15946700
&XMFATTR      SETC  '0D'                                                15967600
              AIF   (K'&MF(3) LE 0).ZG104B      PARM                    15988500
&XMFATTR      SETC  '&MF(3,1)'  SET XVARIABLE                           16009400
              AIF   (N'&MF(3) GT 1).ZG104B      MULTI PARMS             16030300
&XMFATTR      SETC  '&MF(3)'    SET XVARIABLE                           16051200
.ZG104B       ANOP  ,                                                   16072100
.*-------------------------------------------------------------------   16093000
.***AG.KCK01 VALUE, OPT INPUT, POS(3) -GPR NOT ALLOWED                  16113900
              AIF   (K'&ZXMFATTR LE 0).ZG104P   NOT I/O                 16134800
              AIF   ('&XMFATTR'(1,1) NE '(').ZG104P                     16155700
&ZXMFATTR     SETC  ''          RESET IN/OUTPUT                         16176600
&ZMS          SETC  '"MF='      *KGPRA* MNOTE                           16197500
&ZMS          SETC  '&ZMS.&MF"'                                         16218400
&ZMS          SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'           16239300
              MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 3.'                   16260200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             16281100
.ZG104P       ANOP  ,                                                   16302000
.*-------------------------------------------------------------------   16322900
.***AG.KCK03 VALUE, OPT INPUT, POS(3) -CHARACTER LENGTH                 16343800
              AIF   (K'&ZXMFATTR LE 0).ZG104S   NOT I/O                 16364700
              AIF   (K'&XMFATTR LE 60).ZG104S   LNG OK                  16385600
&ZXMFATTR     SETC  ''          RESET IN/OUTPUT                         16406500
&ZMS          SETC  '"MF='      *KLNGA* MNOTE                           16427400
&ZMS          SETC  '&ZMS.&MF"'                                         16448300
&ZMS          SETC  '&ZMS ARGUMENT 3 EXCEEDS THE MAXIMUM'               16469200
              MNOTE 8,' &ZMS LENGTH OF 60 CHARACTERS.'                  16490100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             16511000
.ZG104S       ANOP  ,                                                   16531900
.*-------------------------------------------------------------------   16552800
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           16573700
.ZG106        ANOP  ,                                                   16594600
&ZTLC         SETC 'M'                                                  16615500
              AIF   ('&MF(1)' NE '&ZTLC').ZG115                         16636400
&XMF          SETC  'M'         SET KEYWORD                             16657300
              AIF   (N'&MF LE 3).ZG106A         CK NUM                  16678200
&ZMS          SETC  '"MF='      *KPOSA* MNOTE                           16699100
&ZMS          SETC  '&ZMS.&MF"'                                         16720000
&ZMS          SETC  '&ZMS "MF"'                                         16740900
              MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'                16761800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             16782700
.ZG106A       ANOP  ,                                                   16803600
.*-------------------------------------------------------------------   16824500
.***AG.KXVAR06 NAME, RQD INPUT, POS(2) -XVARIABLE                       17138000
&ZXMFCTRL     SETC  'INPUT'     SET IN/OUTPUT                           17158900
&XMFCTRL      SETC  '&MF(2,1)'  SET XVARIABLE                           17179800
              AIF   (N'&MF(2) GT 1).ZG108B      MULTI PARMS             17200700
&XMFCTRL      SETC  '&MF(2)'    SET XVARIABLE                           17221600
.ZG108B       AIF   (K'&MF(2) GT 0).ZG108C                              17242500
&ZXMFCTRL     SETC  ''          RESET IN/OUTPUT                         17263400
&ZMS          SETC  ' '         *KRQDA*                                 17284300
&ZMS          SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'                 17305200
              MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                        17326100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             17347000
.ZG108C       ANOP  ,                                                   17367900
.*-------------------------------------------------------------------   17388800
.***AG.KCK02 NAME, RQD INPUT, POS(2) -GPR OUT OF RANGE                  17409700
              AIF   (K'&ZXMFCTRL LE 0).ZG108R   NOT I/O                 17430600
              AIF   ('&XMFCTRL'(1,1) NE '(').ZG108R                     17451500
&ZCGPR        SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)                          17472400
              AIF   ('&ZCGPR'(1,1) NE '0').ZG108P                       17493300
              AIF   (K'&ZCGPR GT 2).ZG108Q                              17514200
              AIF   ('&ZCGPR' EQ '0').ZG108Q                            17535100
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       17556000
              AIF   (T'&ZCGPR NE 'N').ZG108Q    INVALID REG NAME        17576900
.ZG108P       ANOP  ,                                                   17597800
              AIF   (T'&ZCGPR NE 'N').ZG108R    NON NUMERIC             17618700
              AIF   ('&ZCGPR' LT '1').ZG108Q                            17639600
              AIF   ('&ZCGPR' LE '12').ZG108R                           17660500
.ZG108Q       ANOP  ,                                                   17681400
&ZMS          SETC  '"MF='      *KGPRA* MNOTE                           17702300
&ZMS          SETC  '&ZMS.&MF"'                                         17723200
&ZMS          SETC  '&ZMS ARGUMENT 2 MUST SPECIFY A REGISTER'           17744100
              MNOTE 8,' &ZMS IN THE RANGE (1)-(12).'                    17765000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             17785900
.ZG108R       ANOP  ,                                                   17806800
.*-------------------------------------------------------------------   17827700
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             17848600
&XMFSCK       SETC  ''          INITIALIZE XVARIABLE                    17869500
.ZG112A   AIF   ('&MF(3)' NE 'COMPLETE').ZG113A                         17890400
&XMFSCK       SETC  'COMPLETE'  SET KEYWORD                             17911300
.*-------------------------------------------------------------------   17932200
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             17953100
.ZG113A   AIF   ('&MF(3)' NE 'NOCHECK').ZG114A                          17974000
&XMFSCK       SETC  'NOCHECK'   SET KEYWORD                             17994900
.*-------------------------------------------------------------------   18015800
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             18036700
.ZG114A       AIF   (K'&XMFSCK GT 0).ZG114C     KEYWORD                 18057600
              AIF   (K'&MF(3) LE 0).ZG114B                              18078500
&ZMS          SETC  '"MF='      *KUKWA* MNOTE                           18099400
&ZMS          SETC  '&ZMS.&MF"'                                         18120300
&ZMS          SETC  '&ZMS ARGUMENT 3 IS AN UNKNOWN KEYWORD. '           18141200
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                 18162100
&ZMS          SETC  '&ZMS "COMPLETE"'                                   18183000
&ZMS          SETC  '&ZMS OR "NOCHECK".'                                18203900
              MNOTE 8,' &ZMS '                                          18224800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             18245700
.ZG114B       ANOP  ,                                                   18266600
&XMFSCK       SETC  'COMPLETE'  SET DEFAULT KEYWORD                     18287500
.ZG114C       ANOP  ,                                                   18308400
&ZXMFSCK      SETC  'INPUT'     SET IN/OUTPUT                           18329300
.*------------------------------------------------------------------    18350200
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           18371100
.ZG115        ANOP  ,                                                   18392000
&ZXMF         SETC  'INPUT'     SET IN/OUTPUT                           18412900
              AIF   (K'&XMF GT 0).ZG115E        VALID ARG               18433800
              AIF   (T'&MF EQ 'O').ZG115D       OMITTED                 18454700
&ZASYSLNDX    SETA  0                                                   18475600
.ZG115A       ANOP  ,           POSITIONAL MACRO KEY                    18496500
&ZASYSLNDX    SETA  &ZASYSLNDX+1                                        18517400
              AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG115C                   18538300
&ZTLC         SETC 'MF'                                                 18559200
              AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG115A          18580100
.ZG115B       ANOP  ,                                                   18601000
&ZXMF         SETC  ''          RESET IN/OUTPUT                         18621900
&ZMS          SETC  'THE "MF" KEY'              *KOPTA* MNOTE           18642800
&ZMS          SETC  '&ZMS MUST CONTAIN ONE'                             18663700
              MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                    18684600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             18705500
              AGO   .ZG115E                                             18726400
.ZG115C       ANOP  ,                                                   18747300
&ZXMF         SETC  ''          RESET IN/OUTPUT                         18768200
&ZMS          SETC  '"MF='      *KUKWA* MNOTE                           18789100
&ZMS          SETC  '&ZMS.&MF"'                                         18810000
&ZMS          SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '           18830900
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                 18851800
&ZMS          SETC  '&ZMS "E",'                                         18872700
&ZMS          SETC  '&ZMS "L",'                                         18893600
&ZMS          SETC  '&ZMS OR "M".'                                      18914500
              MNOTE 8,' &ZMS '                                          18935400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             18956300
              AGO   .ZG115E                                             18977200
.ZG115D       ANOP  ,                                                   18998100
&XMF          SETC  'E'         SET DEFAULT KEYWORD                     19019000
.ZG115E       ANOP  ,                                                   19039900
.*------------------------------------------------------------------    19060800
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           19081700
              AIF   (K'&MF(1) GT 0).ZG115F      PARM                    19102600
&XMF          SETC  ''          ENSURE NULL KEYWORD                     19123500
&ZXMF         SETC  ''          RESET IN/OUTPUT                         19144400
&ZMS          SETC  'THE'                                               19165300
&ZMS          SETC  '&ZMS "MF" KEY AND ITS'                             19186200
&ZMS          SETC  '&ZMS ARGUMENT ARE REQUIRED.'                       19207100
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                 19228000
&ZMS          SETC  '&ZMS "E",'                                         19248900
&ZMS          SETC  '&ZMS "L",'                                         19269800
&ZMS          SETC  '&ZMS OR "M".'                                      19290700
              MNOTE 8,' &ZMS '                                          19311600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             19332500
.ZG115F       ANOP  ,                                                   19353400
.********************************************************************   19374300
.***AG.MF02  FULL MACRO SYNTAX CHECKING                                 19395200
.********************************************************************   19416100
              ACTR  10000                                               19437000
.*-------------------------------------------------------------------   19457900
.***AG.MF03 MF=(LME)                                                    19478800
              AIF   ('&XMF' EQ 'L').ZGMFX                               19499700
              AIF   ('&XMFSCK' NE 'COMPLETE').ZGMFX                     19520600
.*----------------------------------------------------------------***   19541500
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             19562400
              AIF   (N'&REQUEST LE 1).ZG2A      CK NUM                  19583300
&ZMS          SETC  '"REQUEST='                 *KPOSA* MNOTE           19604200
&ZMS          SETC  '&ZMS.&REQUEST"'                                    19625100
&ZMS          SETC  '&ZMS "REQUEST"'                                    19646000
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 19666900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             19687800
.ZG2A         ANOP  ,                                                   19708700
.*-------------------------------------------------------------------   19729600
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             19750500
&XREQUEST     SETC  ''          INITIALIZE XVARIABLE                    19771400
.ZG3A   AIF   ('&REQUEST(1)' NE 'COUNT').ZG4A                           19792300
&XREQUEST     SETC  'COUNT'     SET KEYWORD                             19813200
.*-------------------------------------------------------------------   19834100
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             19855000
.ZG4A   AIF   ('&REQUEST(1)' NE 'SUMMARY').ZG5A                         19875900
&XREQUEST     SETC  'SUMMARY'   SET KEYWORD                             19896800
.*-------------------------------------------------------------------   19917700
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             19938600
.ZG5A   AIF   ('&REQUEST(1)' NE 'INFO').ZG6A                            19959500
&XREQUEST     SETC  'INFO'      SET KEYWORD                             19980400
.*-------------------------------------------------------------------   20001300
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             20022200
.ZG6A   AIF   ('&REQUEST(1)' NE 'FULL').ZG7A                            20043100
&XREQUEST     SETC  'FULL'      SET KEYWORD                             20064000
.*-------------------------------------------------------------------   20084900
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             20105800
.ZG7A         AIF   (K'&XREQUEST GT 0).ZG7C     KEYWORD                 20126700
              AIF   (K'&REQUEST(1) LE 0).ZG7B                           20147600
&ZMS          SETC  '"REQUEST='                 *KUKWA* MNOTE           20168500
&ZMS          SETC  '&ZMS.&REQUEST"'                                    20189400
&ZMS          SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '           20210300
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                 20231200
&ZMS          SETC  '&ZMS "COUNT",'                                     20252100
&ZMS          SETC  '&ZMS "SUMMARY",'                                   20273000
&ZMS          SETC  '&ZMS "INFO",'                                      20293900
&ZMS          SETC  '&ZMS OR "FULL".'                                   20314800
              MNOTE 8,' &ZMS '                                          20335700
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             20356600
.ZG7B         ANOP  ,                                                   20377500
&XREQUEST     SETC  'COUNT'     SET DEFAULT KEYWORD                     20398400
.ZG7C         ANOP  ,                                                   20419300
&ZXREQUEST    SETC  'INPUT'     SET IN/OUTPUT                           20440200
.*----------------------------------------------------------------***   20461100
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             20482000
              AIF   (N'&STATUS LE 1).ZG9A       CK NUM                  20502900
&ZMS          SETC  '"STATUS='  *KPOSA* MNOTE                           20523800
&ZMS          SETC  '&ZMS.&STATUS"'                                     20544700
&ZMS          SETC  '&ZMS "STATUS"'                                     20565600
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 20586500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             20607400
.ZG9A         ANOP  ,                                                   20628300
.*-------------------------------------------------------------------   20649200
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             20670100
&XSTATUS      SETC  ''          INITIALIZE XVARIABLE                    20691000
.ZG10A   AIF   ('&STATUS(1)' NE 'ACTIVE').ZG11A                         20711900
&XSTATUS      SETC  'ACTIVE'    SET KEYWORD                             20732800
.*-------------------------------------------------------------------   20753700
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             20774600
.ZG11A   AIF   ('&STATUS(1)' NE 'INACTIVE').ZG12A                       20795500
&XSTATUS      SETC  'INACTIVE'  SET KEYWORD                             20816400
.*-------------------------------------------------------------------   20837300
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             20858200
.ZG12A   AIF   ('&STATUS(1)' NE 'ALL').ZG13A                            20879100
&XSTATUS      SETC  'ALL'       SET KEYWORD                             20900000
.*-------------------------------------------------------------------   20920900
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             20941800
.ZG13A   AIF   ('&STATUS(1)' NE 'BACKLOG').ZG14A                        20962700
&XSTATUS      SETC  'BACKLOG'   SET KEYWORD                             20983600
.*-------------------------------------------------------------------   21004500
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             21025400
.ZG14A   AIF   ('&STATUS(1)' NE 'ERR').ZG15A                            21046300
&XSTATUS      SETC  'ERR'       SET KEYWORD                             21067200
.*-------------------------------------------------------------------   21088100
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             21109000
.ZG15A        AIF   (K'&XSTATUS GT 0).ZG15C     KEYWORD                 21129900
              AIF   (K'&STATUS(1) LE 0).ZG15B                           21150800
&ZMS          SETC  '"STATUS='  *KUKWA* MNOTE                           21171700
&ZMS          SETC  '&ZMS.&STATUS"'                                     21192600
&ZMS          SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '           21213500
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                 21234400
&ZMS          SETC  '&ZMS "ACTIVE",'                                    21255300
&ZMS          SETC  '&ZMS "INACTIVE",'                                  21276200
&ZMS          SETC  '&ZMS "ALL",'                                       21297100
&ZMS          SETC  '&ZMS "BACKLOG",'                                   21318000
&ZMS          SETC  '&ZMS OR "ERR".'                                    21338900
              MNOTE 8,' &ZMS '                                          21359800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             21380700
.ZG15B        ANOP  ,                                                   21401600
&XSTATUS      SETC  'ACTIVE'    SET DEFAULT KEYWORD                     21422500
.ZG15C        ANOP  ,                                                   21443400
&ZXSTATUS     SETC  'INPUT'     SET IN/OUTPUT                           21464300
.*----------------------------------------------------------------***   21485200
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     21506100
              AIF   (N'&BKLG_NUM LE 1).ZG17A    CK NUM                  21527000
&ZMS          SETC  '"BKLG_NUM='                *KPOSA* MNOTE           21547900
&ZMS          SETC  '&ZMS.&BKLG_NUM"'                                   21568800
&ZMS          SETC  '&ZMS "BKLG_NUM"'                                   21589700
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 21610600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             21631500
.ZG17A        ANOP  ,                                                   21652400
.*-------------------------------------------------------------------   21673300
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         21694200
&ZXBKLG_NUM   SETC  'INPUT'     SET IN/OUTPUT                           21715100
&XBKLG_NUM    SETC  '10'                                                21736000
              AIF   (K'&BKLG_NUM(1) LE 0).ZG17B  PARM                   21756900
&XBKLG_NUM    SETC  '&BKLG_NUM(1)'              SET XVARIABLE           21777800
              AIF   (N'&BKLG_NUM GT 1).ZG17B    MULTI PARMS             21798700
&XBKLG_NUM    SETC  '&BKLG_NUM'                 SET XVARIABLE           21819600
.ZG17B        ANOP  ,                                                   21840500
.*-------------------------------------------------------------------   21861400
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    21882300
              AIF   (K'&ZXBKLG_NUM LE 0).ZG17R  NOT I/O                 21903200
              AIF   ('&XBKLG_NUM'(1,1) NE '(').ZG17R                    21924100
&ZCGPR        SETC  '&XBKLG_NUM'(2,K'&XBKLG_NUM-2)                      21945000
              AIF   ('&ZCGPR'(1,1) NE '0').ZG17P                        21965900
              AIF   (K'&ZCGPR GT 2).ZG17Q                               21986800
              AIF   ('&ZCGPR' EQ '0').ZG17Q                             22007700
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       22028600
              AIF   (T'&ZCGPR NE 'N').ZG17Q     INVALID REG NAME        22049500
.ZG17P        ANOP  ,                                                   22070400
              AIF   (T'&ZCGPR NE 'N').ZG17R     NON NUMERIC             22091300
              AIF   ('&ZCGPR' LT '2').ZG17Q                             22112200
              AIF   ('&ZCGPR' LE '12').ZG17R                            22133100
.ZG17Q        ANOP  ,                                                   22154000
&ZMS          SETC  '"BKLG_NUM='                *KGPRA* MNOTE           22174900
&ZMS          SETC  '&ZMS.&BKLG_NUM"'                                   22195800
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           22216700
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    22237600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             22258500
.ZG17R        ANOP  ,                                                   22279400
.*----------------------------------------------------------------***   22300300
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     22321200
              AIF   (N'&CN LE 1).ZG20A          CK NUM                  22342100
&ZMS          SETC  '"CN='      *KPOSA* MNOTE                           22363000
&ZMS          SETC  '&ZMS.&CN"'                                         22383900
&ZMS          SETC  '&ZMS "CN"'                                         22404800
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 22425700
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             22446600
.ZG20A        ANOP  ,                                                   22467500
.*-------------------------------------------------------------------   22488400
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         22509300
&ZXCN         SETC  'INPUT'     SET IN/OUTPUT                           22530200
&XCN          SETC  'ANY_CONS'                                          22551100
              AIF   (K'&CN(1) LE 0).ZG20B       PARM                    22572000
&XCN          SETC  '&CN(1)'    SET XVARIABLE                           22592900
              AIF   (N'&CN GT 1).ZG20B          MULTI PARMS             22613800
&XCN          SETC  '&CN'       SET XVARIABLE                           22634700
.ZG20B        ANOP  ,                                                   22655600
.*-------------------------------------------------------------------   22676500
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    22697400
              AIF   (K'&ZXCN LE 0).ZG20R        NOT I/O                 22718300
         AIF   ('&XCN' EQ 'ANY_CONS').ZG20R                             22728700
              AIF   ('&XCN'(1,1) NE '(').ZG20R                          22739200
&ZCGPR        SETC  '&XCN'(2,K'&XCN-2)                                  22760100
              AIF   ('&ZCGPR'(1,1) NE '0').ZG20P                        22781000
              AIF   (K'&ZCGPR GT 2).ZG20Q                               22801900
              AIF   ('&ZCGPR' EQ '0').ZG20Q                             22822800
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       22843700
              AIF   (T'&ZCGPR NE 'N').ZG20Q     INVALID REG NAME        22864600
.ZG20P        ANOP  ,                                                   22885500
              AIF   (T'&ZCGPR NE 'N').ZG20R     NON NUMERIC             22906400
              AIF   ('&ZCGPR' LT '2').ZG20Q                             22927300
              AIF   ('&ZCGPR' LE '12').ZG20R                            22948200
.ZG20Q        ANOP  ,                                                   22969100
&ZMS          SETC  '"CN='      *KGPRA* MNOTE                           22990000
&ZMS          SETC  '&ZMS.&CN"'                                         23010900
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           23031800
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    23052700
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             23073600
.ZG20R        ANOP  ,                                                   23094500
.*----------------------------------------------------------------***   23115400
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     23136300
              AIF   (N'&SYS LE 1).ZG23A         CK NUM                  23157200
&ZMS          SETC  '"SYS='     *KPOSA* MNOTE                           23178100
&ZMS          SETC  '&ZMS.&SYS"'                                        23199000
&ZMS          SETC  '&ZMS "SYS"'                                        23219900
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 23240800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             23261700
.ZG23A        ANOP  ,                                                   23311700
.*-------------------------------------------------------------------   23922200
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         23922400
&ZXSYS        SETC  'INPUT'     SET IN/OUTPUT                           23922600
&XSYS         SETC  'ANY_SYS'                                           23922800
              AIF   (K'&SYS(1) LE 0).ZG23B      PARM                    23923000
&XSYS         SETC  '&SYS(1)'   SET XVARIABLE                           23923200
              AIF   (N'&SYS GT 1).ZG23B         MULTI PARMS             23923400
&XSYS         SETC  '&SYS'      SET XVARIABLE                           23923600
.ZG23B        ANOP  ,                                                   23923800
.*-------------------------------------------------------------------   23924300
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    23924500
              AIF   (K'&ZXSYS LE 0).ZG23R       NOT I/O                 23924800
         AIF   ('&XSYS' EQ 'ANY_SYS').ZG23R                             23925000
              AIF   ('&XSYS'(1,1) NE '(').ZG23R                         23925200
&ZCGPR        SETC  '&XSYS'(2,K'&XSYS-2)                                23925400
              AIF   ('&ZCGPR'(1,1) NE '0').ZG23P                        23925600
              AIF   (K'&ZCGPR GT 2).ZG23Q                               23925800
              AIF   ('&ZCGPR' EQ '0').ZG23Q                             23926000
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       23926200
              AIF   (T'&ZCGPR NE 'N').ZG23Q     INVALID REG NAME        23926400
.ZG23P        ANOP  ,                                                   23926600
              AIF   (T'&ZCGPR NE 'N').ZG23R     NON NUMERIC             23926800
              AIF   ('&ZCGPR' LT '2').ZG23Q                             23927000
              AIF   ('&ZCGPR' LE '12').ZG23R                            23927200
.ZG23Q        ANOP  ,                                                   23927400
&ZMS          SETC  '"SYS='     *KGPRA* MNOTE                           23927600
&ZMS          SETC  '&ZMS.&SYS"'                                        23927800
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           23928000
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    23928200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             23928400
.ZG23R        ANOP  ,                                                   23928600
.*----------------------------------------------------------------***   23930500
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     23951400
              AIF   (N'&KEY LE 1).ZG26A         CK NUM                  23972300
&ZMS          SETC  '"KEY='     *KPOSA* MNOTE                           23993200
&ZMS          SETC  '&ZMS.&KEY"'                                        24014100
&ZMS          SETC  '&ZMS "KEY"'                                        24035000
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 24055900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             24076800
.ZG26A        ANOP  ,                                                   24097700
.*-------------------------------------------------------------------   24118600
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         24139500
&ZXKEY        SETC  'INPUT'     SET IN/OUTPUT                           24160400
&XKEY         SETC  'ANY_KEY'                                           24181300
              AIF   (K'&KEY(1) LE 0).ZG26B      PARM                    24202200
&XKEY         SETC  '&KEY(1)'   SET XVARIABLE                           24223100
              AIF   (N'&KEY GT 1).ZG26B         MULTI PARMS             24244000
&XKEY         SETC  '&KEY'      SET XVARIABLE                           24264900
.ZG26B        ANOP  ,                                                   24285800
.*-------------------------------------------------------------------   24306700
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    24327600
              AIF   (K'&ZXKEY LE 0).ZG26R       NOT I/O                 24348500
         AIF   ('&XKEY' EQ 'ANY_KEY').ZG26R                             24358900
              AIF   ('&XKEY'(1,1) NE '(').ZG26R                         24369400
&ZCGPR        SETC  '&XKEY'(2,K'&XKEY-2)                                24390300
              AIF   ('&ZCGPR'(1,1) NE '0').ZG26P                        24411200
              AIF   (K'&ZCGPR GT 2).ZG26Q                               24432100
              AIF   ('&ZCGPR' EQ '0').ZG26Q                             24453000
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       24473900
              AIF   (T'&ZCGPR NE 'N').ZG26Q     INVALID REG NAME        24494800
.ZG26P        ANOP  ,                                                   24515700
              AIF   (T'&ZCGPR NE 'N').ZG26R     NON NUMERIC             24536600
              AIF   ('&ZCGPR' LT '2').ZG26Q                             24557500
              AIF   ('&ZCGPR' LE '12').ZG26R                            24578400
.ZG26Q        ANOP  ,                                                   24599300
&ZMS          SETC  '"KEY='     *KGPRA* MNOTE                           24620200
&ZMS          SETC  '&ZMS.&KEY"'                                        24641100
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           24662000
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    24682900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             24703800
.ZG26R        ANOP  ,                                                   24724700
.*----------------------------------------------------------------***   24736300
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             24747900
              AIF   (N'&AUTH LE 1).ZG29A        CK NUM                  24759500
&ZMS          SETC  '"AUTH='    *KPOSA* MNOTE                           24771100
&ZMS          SETC  '&ZMS.&AUTH"'                                       24782700
&ZMS          SETC  '&ZMS "AUTH"'                                       24794300
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 24805900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             24817500
.ZG29A        ANOP  ,                                                   24829200
.*-------------------------------------------------------------------   24845300
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             24861400
&XAUTH        SETC  ''          INITIALIZE XVARIABLE                    24877500
.ZG30A   AIF   ('&AUTH(1)' NE 'ANY').ZG31A                              24882800
&XAUTH        SETC  'ANY'       SET KEYWORD                             24888100
.*-------------------------------------------------------------------   24893400
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             24898700
.ZG31A   AIF   ('&AUTH(1)' NE 'MASTER').ZG32A                           24904000
&XAUTH        SETC  'MASTER'    SET KEYWORD                             24909700
.*-------------------------------------------------------------------   24925800
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             24941900
.ZG32A   AIF   ('&AUTH(1)' NE 'SYS').ZG33A                              24958000
&XAUTH        SETC  'SYS'       SET KEYWORD                             24974100
.*-------------------------------------------------------------------   24990200
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             25006300
.ZG33A   AIF   ('&AUTH(1)' NE 'IO').ZG34A                               25022400
&XAUTH        SETC  'IO'        SET KEYWORD                             25038500
.*-------------------------------------------------------------------   25054600
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             25070700
.ZG34A   AIF   ('&AUTH(1)' NE 'CONS').ZG35A                             25086800
&XAUTH        SETC  'CONS'      SET KEYWORD                             25102900
.*-------------------------------------------------------------------   25119000
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             25135100
.ZG35A   AIF   ('&AUTH(1)' NE 'ALL').ZG36A                              25151200
&XAUTH        SETC  'ALL'       SET KEYWORD                             25167300
.*-------------------------------------------------------------------   25183400
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             25199500
.ZG36A   AIF   ('&AUTH(1)' NE 'INFO').ZG37A                             25215600
&XAUTH        SETC  'INFO'      SET KEYWORD                             25231700
.*-------------------------------------------------------------------   25247800
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             25248500
.ZG37A   AIF   ('&AUTH(1)' NE 'SYSONLY').ZG38A                          25249200
&XAUTH        SETC  'SYSONLY'   SET KEYWORD                             25249900
.*-------------------------------------------------------------------   25250600
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             25251300
.ZG38A   AIF   ('&AUTH(1)' NE 'IOONLY').ZG39A                           25252000
&XAUTH        SETC  'IOONLY'    SET KEYWORD                             25252700
.*-------------------------------------------------------------------   25253400
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             25254100
.ZG39A   AIF   ('&AUTH(1)' NE 'CONSONLY').ZG40A                         25254800
&XAUTH        SETC  'CONSONLY'  SET KEYWORD                             25255500
.*-------------------------------------------------------------------   25256200
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             25256900
.ZG40A   AIF   ('&AUTH(1)' NE 'ALLONLY').ZG41A                          25257600
&XAUTH        SETC  'ALLONLY'   SET KEYWORD                             25258300
.*-------------------------------------------------------------------   25259000
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             25259700
.ZG41A   AIF   ('&AUTH(1)' NE 'INFOONLY').ZG42A                         25260400
&XAUTH        SETC  'INFOONLY'  SET KEYWORD                             25261100
.*-------------------------------------------------------------------   25261800
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             25263900
.ZG42A        AIF   (K'&XAUTH GT 0).ZG42C       KEYWORD                 25280000
              AIF   (K'&AUTH(1) LE 0).ZG42B                             25296100
&ZMS          SETC  '"AUTH='    *KUKWA* MNOTE                           25312200
&ZMS          SETC  '&ZMS.&AUTH"'                                       25330800
&ZMS          SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '           25362100
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                 25393500
&ZMS          SETC  '&ZMS "ANY",'                                       25406300
&ZMS          SETC  '&ZMS "MASTER",'                                    25419100
&ZMS          SETC  '&ZMS "SYS",'                                       25431900
&ZMS          SETC  '&ZMS "IO",'                                        25444700
&ZMS          SETC  '&ZMS "CONS",'                                      25457500
&ZMS          SETC  '&ZMS "ALL",'                                       25470300
&ZMS          SETC  '&ZMS "INFO",'                                      25483100
&ZMS          SETC  '&ZMS "SYSONLY",'                                   25495900
&ZMS          SETC  '&ZMS "IOONLY",'                                    25508700
&ZMS          SETC  '&ZMS "CONSONLY",'                                  25521500
&ZMS          SETC  '&ZMS "ALLONLY",'                                   25534300
&ZMS          SETC  '&ZMS OR "INFOONLY".'                               25547100
              MNOTE 8,' &ZMS '                                          25560700
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             25581600
.ZG42B        ANOP  ,                                                   25607700
&XAUTH        SETC  'ANY'       SET DEFAULT KEYWORD                     25633800
.ZG42C        ANOP  ,                                                   25659900
&ZXAUTH       SETC  'INPUT'     SET IN/OUTPUT                           25686100
.*----------------------------------------------------------------***   25736100
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             25786100
              AIF   (N'&ATTR LE 1).ZG44A        CK NUM                  25836100
&ZMS          SETC  '"ATTR='    *KPOSA* MNOTE                           25886100
&ZMS          SETC  '&ZMS.&ATTR"'                                       26459400
&ZMS          SETC  '&ZMS "ATTR"'                                       26460600
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 26461800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             26463000
.ZG44A        ANOP  ,                                                   26464200
.*-------------------------------------------------------------------   26465400
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             26466600
&XATTR        SETC  ''          INITIALIZE XVARIABLE                    26467800
.ZG45A   AIF   ('&ATTR(1)' NE 'ANY').ZG46A                              26469000
&XATTR        SETC  'ANY'       SET KEYWORD                             26470200
.*-------------------------------------------------------------------   26471400
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             26472600
.ZG46A   AIF   ('&ATTR(1)' NE 'YES').ZG47A                              26473000
&XATTR        SETC  'YES'       SET KEYWORD                             26473400
.*-------------------------------------------------------------------   26473800
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             26474200
.ZG47A   AIF   ('&ATTR(1)' NE 'ROUT').ZG48A                             26474600
&XATTR        SETC  'ROUT'      SET KEYWORD                             26475000
.*-------------------------------------------------------------------   26476200
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             26477400
.ZG48A   AIF   ('&ATTR(1)' NE 'UD').ZG49A                               26478600
&XATTR        SETC  'UD'        SET KEYWORD                             26479800
.*-------------------------------------------------------------------   26481000
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             26482200
.ZG49A   AIF   ('&ATTR(1)' NE 'UDN').ZG50A                              26483400
&XATTR        SETC  'UDN'       SET KEYWORD                             26484600
.*-------------------------------------------------------------------   26485800
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             26487000
.ZG50A   AIF   ('&ATTR(1)' NE 'HC').ZG51A                               26488200
&XATTR        SETC  'HC'        SET KEYWORD                             26489400
.*-------------------------------------------------------------------   26490600
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             26491800
.ZG51A   AIF   ('&ATTR(1)' NE 'AUTO').ZG52A                             26493000
&XATTR        SETC  'AUTO'      SET KEYWORD                             26494200
.*-------------------------------------------------------------------   26495400
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             26496600
.ZG52A   AIF   ('&ATTR(1)' NE 'AUTON').ZG53A                            26497800
&XATTR        SETC  'AUTON'     SET KEYWORD                             26499000
.*-------------------------------------------------------------------   26500200
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             26501400
.ZG53A   AIF   ('&ATTR(1)' NE 'MN').ZG54A                               26502600
&XATTR        SETC  'MN'        SET KEYWORD                             26503800
.*-------------------------------------------------------------------   26505000
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             26506200
.ZG54A   AIF   ('&ATTR(1)' NE 'NONE').ZG55A                             26507400
&XATTR        SETC  'NONE'      SET KEYWORD                             26508600
.*-------------------------------------------------------------------   26509800
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             26511000
.ZG55A        AIF   (K'&XATTR GT 0).ZG55C       KEYWORD                 26512200
              AIF   (K'&ATTR(1) LE 0).ZG55B                             26513400
&ZMS          SETC  '"ATTR='    *KUKWA* MNOTE                           26514600
&ZMS          SETC  '&ZMS.&ATTR"'                                       26515800
&ZMS          SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '           26517000
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                 26522100
&ZMS          SETC  '&ZMS "ANY",'                                       26541100
&ZMS          SETC  '&ZMS "YES",'                                       26560100
&ZMS          SETC  '&ZMS "ROUT",'                                      26579100
&ZMS          SETC  '&ZMS "UD",'                                        26598100
&ZMS          SETC  '&ZMS "UDN",'                                       26617100
&ZMS          SETC  '&ZMS "HC",'                                        26636100
&ZMS          SETC  '&ZMS "AUTO",'                                      26655100
&ZMS          SETC  '&ZMS "AUTON",'                                     26674100
&ZMS          SETC  '&ZMS "MN",'                                        26693100
&ZMS          SETC  '&ZMS OR "NONE".'                                   26712100
              MNOTE 8,' &ZMS '                                          26731100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             26752000
.ZG55B        ANOP  ,                                                   26778100
&XATTR        SETC  'ANY'       SET DEFAULT KEYWORD                     26804200
.ZG55C        ANOP  ,                                                   26830300
&ZXATTR       SETC  'INPUT'     SET IN/OUTPUT                           26856500
.*----------------------------------------------------------------***   26961000
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             26981900
              AIF   (N'&DOM LE 1).ZG57A         CK NUM                  27002800
&ZMS          SETC  '"DOM='     *KPOSA* MNOTE                           27023700
&ZMS          SETC  '&ZMS.&DOM"'                                        27044600
&ZMS          SETC  '&ZMS "DOM"'                                        27065500
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 27086400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             27107300
.ZG57A        ANOP  ,                                                   27128200
.*-------------------------------------------------------------------   27149100
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             27170000
&XDOM         SETC  ''          INITIALIZE XVARIABLE                    27190900
.ZG58A   AIF   ('&DOM(1)' NE 'ANY').ZG59A                               27211800
&XDOM         SETC  'ANY'       SET KEYWORD                             27232700
.*-------------------------------------------------------------------   27253600
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             27274500
.ZG59A   AIF   ('&DOM(1)' NE 'YES').ZG60A                               27281400
&XDOM         SETC  'YES'       SET KEYWORD                             27288300
.*-------------------------------------------------------------------   27295200
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             27302100
.ZG60A   AIF   ('&DOM(1)' NE 'NORMAL').ZG61A                            27309200
&XDOM         SETC  'NORMAL'    SET KEYWORD                             27316300
.*-------------------------------------------------------------------   27337200
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             27358100
.ZG61A   AIF   ('&DOM(1)' NE 'ALL').ZG62A                               27379000
&XDOM         SETC  'ALL'       SET KEYWORD                             27399900
.*-------------------------------------------------------------------   27420800
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             27441700
.ZG62A   AIF   ('&DOM(1)' NE 'NONE').ZG63A                              27462600
&XDOM         SETC  'NONE'      SET KEYWORD                             27483500
.*-------------------------------------------------------------------   27504400
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             27525300
.ZG63A        AIF   (K'&XDOM GT 0).ZG63C        KEYWORD                 27546200
              AIF   (K'&DOM(1) LE 0).ZG63B                              27567100
&ZMS          SETC  '"DOM='     *KUKWA* MNOTE                           27588000
&ZMS          SETC  '&ZMS.&DOM"'                                        27608900
&ZMS          SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '           27629800
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                 27650700
&ZMS          SETC  '&ZMS "ANY",'                                       27668100
&ZMS          SETC  '&ZMS "YES",'                                       27685500
&ZMS          SETC  '&ZMS "NORMAL",'                                    27702900
&ZMS          SETC  '&ZMS "ALL",'                                       27720300
&ZMS          SETC  '&ZMS OR "NONE".'                                   27737700
              MNOTE 8,' &ZMS '                                          27755200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             27776100
.ZG63B        ANOP  ,                                                   27797000
&XDOM         SETC  'ANY'       SET DEFAULT KEYWORD                     27817900
.ZG63C        ANOP  ,                                                   27838800
&ZXDOM        SETC  'INPUT'     SET IN/OUTPUT                           27859700
.*----------------------------------------------------------------***   27880600
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     27901500
              AIF   (N'&BUFPTR LE 1).ZG65A      CK NUM                  27922400
&ZMS          SETC  '"BUFPTR='  *KPOSA* MNOTE                           27943300
&ZMS          SETC  '&ZMS.&BUFPTR"'                                     27964200
&ZMS          SETC  '&ZMS "BUFPTR"'                                     27985100
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 28006000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             28026900
.ZG65A        ANOP  ,                                                   28047800
.*-------------------------------------------------------------------   28068700
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         28089600
&ZXBUFPTR     SETC  'INPUT'     SET IN/OUTPUT                           28110500
&XBUFPTR      SETC  '0'                                                 28131400
              AIF   (K'&BUFPTR(1) LE 0).ZG65B   PARM                    28152300
&XBUFPTR      SETC  '&BUFPTR(1)'                SET XVARIABLE           28173200
              AIF   (N'&BUFPTR GT 1).ZG65B      MULTI PARMS             28194100
&XBUFPTR      SETC  '&BUFPTR'   SET XVARIABLE                           28215000
.ZG65B        ANOP  ,                                                   28235900
.*-------------------------------------------------------------------   28256800
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    28277700
              AIF   (K'&ZXBUFPTR LE 0).ZG65R    NOT I/O                 28298600
              AIF   ('&XBUFPTR'(1,1) NE '(').ZG65R                      28319500
&ZCGPR        SETC  '&XBUFPTR'(2,K'&XBUFPTR-2)                          28340400
              AIF   ('&ZCGPR'(1,1) NE '0').ZG65P                        28361300
              AIF   (K'&ZCGPR GT 2).ZG65Q                               28382200
              AIF   ('&ZCGPR' EQ '0').ZG65Q                             28403100
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       28424000
              AIF   (T'&ZCGPR NE 'N').ZG65Q     INVALID REG NAME        28444900
.ZG65P        ANOP  ,                                                   28465800
              AIF   (T'&ZCGPR NE 'N').ZG65R     NON NUMERIC             28486700
              AIF   ('&ZCGPR' LT '2').ZG65Q                             28507600
              AIF   ('&ZCGPR' LE '12').ZG65R                            28528500
.ZG65Q        ANOP  ,                                                   28549400
&ZMS          SETC  '"BUFPTR='  *KGPRA* MNOTE                           28570300
&ZMS          SETC  '&ZMS.&BUFPTR"'                                     28591200
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           28612100
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    28633000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             28653900
.ZG65R        ANOP  ,                                                   28674800
.*----------------------------------------------------------------***   28695700
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 28716600
              AIF   (N'&BUFSIZE LE 1).ZG67A     CK NUM                  28737500
&ZMS          SETC  '"BUFSIZE='                 *KPOSA* MNOTE           28758400
&ZMS          SETC  '&ZMS.&BUFSIZE"'                                    28779300
&ZMS          SETC  '&ZMS "BUFSIZE"'                                    28800200
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 28821100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             28842000
.ZG67A        ANOP  ,                                                   28843400
.*-------------------------------------------------------------------   28844800
.***AG.KXVAR09 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     28846200
&ZXBUFSIZE    SETC  'INPUT'     SET IN/OUTPUT                           28847600
&XBUFSIZE     SETC  '&BUFSIZE(1)'               SET XVARIABLE           28849000
              AIF   (N'&BUFSIZE GT 1).ZG67B     MULTI PARMS             28850400
&XBUFSIZE     SETC  '&BUFSIZE'  SET XVARIABLE                           28851800
.ZG67B        AIF   (K'&BUFPTR(1) GT 0).ZG67C   KEY                     28853200
              AIF   (K'&BUFSIZE(1) LE 0).ZG67D  PARM                    28854600
&ZMS          SETC  '"BUFSIZE'  *KDEPA* MNOTE                           28856000
&ZMS          SETC  '&ZMS.=&BUFSIZE"'                                   28857400
&ZMS          SETC  '&ZMS CAN ONLY BE SPECIFIED IF'                     28858800
&ZMS          SETC  '&ZMS '                                             28860200
&ZMS          SETC  '&ZMS "BUFPTR"'                                     28861600
              MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                        28863000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             28864400
              AGO   .ZG67E                                              28865800
.*                                                                      28867200
.ZG67C        AIF   (K'&BUFSIZE(1) GT 0).ZG67E  PARM                    28868600
&ZXBUFSIZE    SETC  ''          RESET IN/OUTPUT                         28870000
&ZMS          SETC  ' '         *KRQDA*                                 28871400
&ZMS          SETC  '&ZMS "BUFSIZE" KEY AND ITS'                        28872800
              MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                    28874200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             28875600
.ZG67D        ANOP  ,                                                   28877000
&XBUFSIZE     SETC  '0'         SET DEFAULT                             28878400
.ZG67E        ANOP  ,                                                   28881100
.*-------------------------------------------------------------------   28883800
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                28928200
              AIF   (K'&ZXBUFSIZE LE 0).ZG67R   NOT I/O                 28972600
              AIF   ('&XBUFSIZE'(1,1) NE '(').ZG67R                     29017000
&ZCGPR        SETC  '&XBUFSIZE'(2,K'&XBUFSIZE-2)                        29061400
              AIF   ('&ZCGPR'(1,1) NE '0').ZG67P                        29105800
              AIF   (K'&ZCGPR GT 2).ZG67Q                               29150200
              AIF   ('&ZCGPR' EQ '0').ZG67Q                             29194600
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       29239100
              AIF   (T'&ZCGPR NE 'N').ZG67Q     INVALID REG NAME        29260000
.ZG67P        ANOP  ,                                                   29280900
              AIF   (T'&ZCGPR NE 'N').ZG67R     NON NUMERIC             29301800
              AIF   ('&ZCGPR' LT '2').ZG67Q                             29322700
              AIF   ('&ZCGPR' LE '12').ZG67R                            29343600
.ZG67Q        ANOP  ,                                                   29364500
&ZMS          SETC  '"BUFSIZE='                 *KGPRA* MNOTE           29385400
&ZMS          SETC  '&ZMS.&BUFSIZE"'                                    29406300
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           29427200
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    29448100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             29469000
.ZG67R        ANOP  ,                                                   29519000
.*----------------------------------------------------------------***   29573500
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     29594400
              AIF   (N'&CONSCNT LE 1).ZG71A     CK NUM                  29615300
&ZMS          SETC  '"CONSCNT='                 *KPOSA* MNOTE           29636200
&ZMS          SETC  '&ZMS.&CONSCNT"'                                    29657100
&ZMS          SETC  '&ZMS "CONSCNT"'                                    29678000
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 29698900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             29719800
.ZG71A        ANOP  ,                                                   29740700
.*-------------------------------------------------------------------   29761600
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         29778300
&ZXCONSCNT    SETC  'INPUT'     SET IN/OUTPUT                           29795000
&XCONSCNT     SETC  '0'                                                 29811700
              AIF   (K'&CONSCNT(1) LE 0).ZG71B  PARM                    29828400
&XCONSCNT     SETC  '&CONSCNT(1)'               SET XVARIABLE           29845200
              AIF   (N'&CONSCNT GT 1).ZG71B     MULTI PARMS             29866100
&XCONSCNT     SETC  '&CONSCNT'  SET XVARIABLE                           29887000
.ZG71B        ANOP  ,                                                   29907900
.*-------------------------------------------------------------------   29928800
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    29949700
              AIF   (K'&ZXCONSCNT LE 0).ZG71R   NOT I/O                 29970600
              AIF   ('&XCONSCNT'(1,1) NE '(').ZG71R                     29991500
&ZCGPR        SETC  '&XCONSCNT'(2,K'&XCONSCNT-2)                        30012400
              AIF   ('&ZCGPR'(1,1) NE '0').ZG71P                        32152700
              AIF   (K'&ZCGPR GT 2).ZG71Q                               32153400
              AIF   ('&ZCGPR' EQ '0').ZG71Q                             32154100
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       32154800
              AIF   (T'&ZCGPR NE 'N').ZG71Q     INVALID REG NAME        32155500
.ZG71P        ANOP  ,                                                   32156200
              AIF   (T'&ZCGPR NE 'N').ZG71R     NON NUMERIC             32156900
              AIF   ('&ZCGPR' LT '2').ZG71Q                             32157600
              AIF   ('&ZCGPR' LE '12').ZG71R                            32158300
.ZG71Q        ANOP  ,                                                   32159000
&ZMS          SETC  '"CONSCNT='                 *KGPRA* MNOTE           32159700
&ZMS          SETC  '&ZMS.&CONSCNT"'                                    32160400
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           32161100
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    32161800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             32162500
.ZG71R        ANOP  ,                                                   32163800
.*----------------------------------------------------------------***   32165100
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     32165300
              AIF   (N'&TOKEN LE 1).ZG74A       CK NUM                  32165500
&ZMS          SETC  '"TOKEN='   *KPOSA* MNOTE                           32165700
&ZMS          SETC  '&ZMS.&TOKEN"'                                      32165900
&ZMS          SETC  '&ZMS "TOKEN"'                                      32166100
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 32166300
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             32166500
.ZG74A        ANOP  ,                                                   32166700
.*-------------------------------------------------------------------   32166900
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         32167100
&ZXTOKEN      SETC  'INPUT'     SET IN/OUTPUT                           32167300
&XTOKEN       SETC  '0'                                                 32167500
              AIF   (K'&TOKEN(1) LE 0).ZG74B    PARM                    32167700
&XTOKEN       SETC  '&TOKEN(1)'                 SET XVARIABLE           32167900
              AIF   (N'&TOKEN GT 1).ZG74B       MULTI PARMS             32168100
&XTOKEN       SETC  '&TOKEN'    SET XVARIABLE                           32168300
.ZG74B        ANOP  ,                                                   32168500
.*-------------------------------------------------------------------   32168700
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    32168900
              AIF   (K'&ZXTOKEN LE 0).ZG74R     NOT I/O                 32169100
              AIF   ('&XTOKEN'(1,1) NE '(').ZG74R                       32169300
&ZCGPR        SETC  '&XTOKEN'(2,K'&XTOKEN-2)                            32169500
              AIF   ('&ZCGPR'(1,1) NE '0').ZG74P                        32169700
              AIF   (K'&ZCGPR GT 2).ZG74Q                               32169900
              AIF   ('&ZCGPR' EQ '0').ZG74Q                             32170100
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       32170300
              AIF   (T'&ZCGPR NE 'N').ZG74Q     INVALID REG NAME        32170500
.ZG74P        ANOP  ,                                                   32170700
              AIF   (T'&ZCGPR NE 'N').ZG74R     NON NUMERIC             32170900
              AIF   ('&ZCGPR' LT '2').ZG74Q                             32171100
              AIF   ('&ZCGPR' LE '12').ZG74R                            32171300
.ZG74Q        ANOP  ,                                                   32171500
&ZMS          SETC  '"TOKEN='   *KGPRA* MNOTE                           32171700
&ZMS          SETC  '&ZMS.&TOKEN"'                                      32171900
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           32172100
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    32172300
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             32172500
.ZG74R        ANOP  ,                                                   32172700
.*----------------------------------------------------------------***   32172900
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 32173100
              AIF   (N'&RECSIZE LE 1).ZG76A     CK NUM                  32173300
&ZMS          SETC  '"RECSIZE='                 *KPOSA* MNOTE           32173500
&ZMS          SETC  '&ZMS.&RECSIZE"'                                    32173700
&ZMS          SETC  '&ZMS "RECSIZE"'                                    32173900
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 32174100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             32174300
.ZG76A        ANOP  ,                                                   32174500
.*-------------------------------------------------------------------   32174700
.***AG.KXVAR09 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     32174900
&ZXRECSIZE    SETC  'INPUT'     SET IN/OUTPUT                           32175100
&XRECSIZE     SETC  '&RECSIZE(1)'               SET XVARIABLE           32175300
              AIF   (N'&RECSIZE GT 1).ZG76B     MULTI PARMS             32175500
&XRECSIZE     SETC  '&RECSIZE'  SET XVARIABLE                           32175700
.ZG76B        AIF   (K'&TOKEN(1) GT 0).ZG76C    KEY                     32175900
              AIF   (K'&RECSIZE(1) LE 0).ZG76D  PARM                    32176100
&ZMS          SETC  '"RECSIZE'  *KDEPA* MNOTE                           32176300
&ZMS          SETC  '&ZMS.=&RECSIZE"'                                   32176500
&ZMS          SETC  '&ZMS CAN ONLY BE SPECIFIED IF'                     32176700
&ZMS          SETC  '&ZMS '                                             32176900
&ZMS          SETC  '&ZMS "TOKEN"'                                      32177100
              MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                        32177300
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             32177500
              AGO   .ZG76E                                              32177700
.*                                                                      32177900
.ZG76C        AIF   (K'&RECSIZE(1) GT 0).ZG76E  PARM                    32178100
&ZXRECSIZE    SETC  ''          RESET IN/OUTPUT                         32178300
&ZMS          SETC  ' '         *KRQDA*                                 32178500
&ZMS          SETC  '&ZMS "RECSIZE" KEY AND ITS'                        32178700
              MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                    32178900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             32179100
.ZG76D        ANOP  ,                                                   32179300
&XRECSIZE     SETC  '0'         SET DEFAULT                             32179500
.ZG76E        ANOP  ,                                                   32179700
.*-------------------------------------------------------------------   32179900
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                32180100
              AIF   (K'&ZXRECSIZE LE 0).ZG76R   NOT I/O                 32180300
              AIF   ('&XRECSIZE'(1,1) NE '(').ZG76R                     32180500
&ZCGPR        SETC  '&XRECSIZE'(2,K'&XRECSIZE-2)                        32180700
              AIF   ('&ZCGPR'(1,1) NE '0').ZG76P                        32180900
              AIF   (K'&ZCGPR GT 2).ZG76Q                               32181100
              AIF   ('&ZCGPR' EQ '0').ZG76Q                             32181300
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       32181500
              AIF   (T'&ZCGPR NE 'N').ZG76Q     INVALID REG NAME        32181700
.ZG76P        ANOP  ,                                                   32181900
              AIF   (T'&ZCGPR NE 'N').ZG76R     NON NUMERIC             32182100
              AIF   ('&ZCGPR' LT '2').ZG76Q                             32182300
              AIF   ('&ZCGPR' LE '12').ZG76R                            32182500
.ZG76Q        ANOP  ,                                                   32182700
&ZMS          SETC  '"RECSIZE='                 *KGPRA* MNOTE           32182900
&ZMS          SETC  '&ZMS.&RECSIZE"'                                    32183100
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           32183300
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    32183500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             32183700
.ZG76R        ANOP  ,                                                   32183900
.*----------------------------------------------------------------***   32184100
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    32186000
              AIF   (N'&RETCODE LE 1).ZG80A     CK NUM                  32206900
&ZMS          SETC  '"RETCODE='                 *KPOSA* MNOTE           32227800
&ZMS          SETC  '&ZMS.&RETCODE"'                                    32248700
&ZMS          SETC  '&ZMS "RETCODE"'                                    32269600
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 32290500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             32311400
.ZG80A        ANOP  ,                                                   32361400
.*-------------------------------------------------------------------   32943400
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        32943900
              AIF   (K'&RETCODE(1) LE 0).ZG80C  NO PARM                 32944400
&ZXRETCODE    SETC  'OUTPUT'    SET OUTPUT                              32944900
&XRETCODE     SETC  '&RETCODE(1)'               SET XVARIABLE           32945400
              AIF   (N'&RETCODE GT 1).ZG80C                             32945900
&XRETCODE     SETC  '&RETCODE'  SET XVARIABLE                           32946400
.ZG80C        ANOP  ,                                                   32946900
.*-------------------------------------------------------------------   32947400
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   32947900
              AIF   (K'&ZXRETCODE LE 0).ZG80R   NOT I/O                 32948400
              AIF   ('&XRETCODE'(1,1) NE '(').ZG80R                     32948900
&ZCGPR        SETC  '&XRETCODE'(2,K'&XRETCODE-2)                        32949400
              AIF   ('&ZCGPR'(1,1) NE '0').ZG80P                        32949900
              AIF   (K'&ZCGPR GT 2).ZG80Q                               32950400
              AIF   ('&ZCGPR' EQ '0').ZG80Q                             32950900
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       32951400
              AIF   (T'&ZCGPR NE 'N').ZG80Q     INVALID REG NAME        32951800
.ZG80P        ANOP  ,                                                   32952200
              AIF   (T'&ZCGPR NE 'N').ZG80R     NON NUMERIC             32952600
              AIF   ('&ZCGPR' LT '2').ZG80Q                             32953000
              AIF   ('&ZCGPR' LE '12').ZG80R                            32953400
.ZG80Q        ANOP  ,                                                   32953800
&ZMS          SETC  '"RETCODE='                 *KGPRA* MNOTE           32954500
&ZMS          SETC  '&ZMS.&RETCODE"'                                    32954600
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           32954700
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    32954800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             32954900
.ZG80R        ANOP  ,                                                   32955000
.*----------------------------------------------------------------***   32955100
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    32955200
              AIF   (N'&RSNCODE LE 1).ZG83A     CK NUM                  32955300
&ZMS          SETC  '"RSNCODE='                 *KPOSA* MNOTE           32955400
&ZMS          SETC  '&ZMS.&RSNCODE"'                                    32955500
&ZMS          SETC  '&ZMS "RSNCODE"'                                    32955600
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 32955700
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             32955800
.ZG83A        ANOP  ,                                                   32955900
.*-------------------------------------------------------------------   32956000
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        32956100
              AIF   (K'&RSNCODE(1) LE 0).ZG83C  NO PARM                 32956200
&ZXRSNCODE    SETC  'OUTPUT'    SET OUTPUT                              32956300
&XRSNCODE     SETC  '&RSNCODE(1)'               SET XVARIABLE           32956400
              AIF   (N'&RSNCODE GT 1).ZG83C                             32956500
&XRSNCODE     SETC  '&RSNCODE'  SET XVARIABLE                           32956600
.ZG83C        ANOP  ,                                                   32956700
.*-------------------------------------------------------------------   32956800
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   32956900
              AIF   (K'&ZXRSNCODE LE 0).ZG83R   NOT I/O                 32957000
              AIF   ('&XRSNCODE'(1,1) NE '(').ZG83R                     32957100
&ZCGPR        SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                        32957200
              AIF   ('&ZCGPR'(1,1) NE '0').ZG83P                        32957300
              AIF   (K'&ZCGPR GT 2).ZG83Q                               32957400
              AIF   ('&ZCGPR' EQ '0').ZG83Q                             32957500
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       32957600
              AIF   (T'&ZCGPR NE 'N').ZG83Q     INVALID REG NAME        32957700
.ZG83P        ANOP  ,                                                   32957800
              AIF   (T'&ZCGPR NE 'N').ZG83R     NON NUMERIC             32957900
              AIF   ('&ZCGPR' LT '2').ZG83Q                             32958000
              AIF   ('&ZCGPR' LE '12').ZG83R                            32958100
.ZG83Q        ANOP  ,                                                   32958200
&ZMS          SETC  '"RSNCODE='                 *KGPRA* MNOTE           32958300
&ZMS          SETC  '&ZMS.&RSNCODE"'                                    32958400
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           32958500
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    32958600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             32958700
.ZG83R        ANOP  ,                                                   32959000
.******************************************************************     32959300
.***AH.P00 CHECK STANDALONE POSITIONAL VARIABLES                        32980200
.******************************************************************     33001100
              ACTR  10000                                               33022000
.*----------------------------------------------------------------***   33042900
.***AH.P02 EXTRA POSITIONALS                                            33063800
              AIF   (N'&SYSLIST LE 0).ZGLISTX   NO EXTRAS               33084700
              AIF   (N'&SYSLIST NE 2).ZGLISTX1  NOT NULL                33105600
              AIF   ('&SYSLIST(1)' NE '').ZGLISTX1  NOT NULL            33126500
              AIF   ('&SYSLIST(2)' EQ '').ZGLISTX  NOT NULL             33147400
.ZGLISTX1     ANOP  ,                                                   33168300
&ZCVAL        SETC  ''          ERROR FIELD                             33189200
&ZAWRK        SETA  0           POSITIONAL NUMBER                       33210100
.ZGLIST2      ANOP  ,                                                   33231000
&ZAWRK        SETA  &ZAWRK+1    NEXT POSITIONAL                         33251900
              AIF   (&ZAWRK GT N'&SYSLIST).ZGLIST3  DONE                33272800
&ZCVAL        SETC '&ZCVAL,&SYSLIST(&ZAWRK)'    EXTRA                   33293700
              AGO   .ZGLIST2                                            33314600
.*                                                                      33335500
.ZGLIST3      ANOP  ,                                                   33356400
&ZCVAL        SETC '&ZCVAL'(2,K'&ZCVAL-1)       STRIP COMMA             33377300
&ZMS          SETC  'POSITIONAL ARGUMENT(S),'   *PPOSA* MNOTE           33398200
&ZMS          SETC  '&ZMS "&ZCVAL"'                                     33419100
&ZMS          SETC  '&ZMS CANNOT BE USED.'                              33440000
&ZMS          SETC  '&ZMS NO POSITIONAL ARGUMENTS'                      33460900
              MNOTE 8,' &ZMS ARE ALLOWED.'                              33481800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             33502700
.ZGLISTX      ANOP  ,                                                   33523600
&ZASYSLNDX    SETA  0                                                   33544500
.*-------------------------------------------------------------------   33565400
.***AG.MF04 MF=(LME)                                                    33586300
.ZGMFX        ANOP  ,           END OF FULL SYNTAX CHECK                33607200
.********************************************************************   33628100
.***AE.MF01   PARTIAL MACRO SYNTAX CHECKING                             33649000
.********************************************************************   33669900
              ACTR  10000                                               33690800
.*-------------------------------------------------------------------   33711700
.***AE.MF01 MF=(LME)                                                    33732600
              AIF   ('&XMF' EQ 'L').ZEMFX                               33753500
              AIF   ('&XMFSCK' NE 'NOCHECK').ZEMFX                      33774400
.********************************************************************   33795300
.***AE.KC00 INITIALIZE KEYWORD CONTROL VARIABLES                        33816200
.********************************************************************   33837100
&XREQUEST     SETC  ''          INITIALIZE XVARIABLE                    33858000
&XSTATUS      SETC  ''          INITIALIZE XVARIABLE                    33878900
&XAUTH        SETC  ''          INITIALIZE XVARIABLE                    33885800
&XATTR        SETC  ''          INITIALIZE XVARIABLE                    33892700
&XDOM         SETC  ''          INITIALIZE XVARIABLE                    33899800
.*----------------------------------------------------------------***   33920700
.***AE.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             33941600
              AIF   (N'&REQUEST LE 1).ZE2A      CK NUM                  33962500
&ZMS          SETC  '"REQUEST='                 *KPOSA* MNOTE           33983400
&ZMS          SETC  '&ZMS.&REQUEST"'                                    34004300
&ZMS          SETC  '&ZMS "REQUEST"'                                    34025200
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 34046100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             34067000
.ZE2A         ANOP  ,                                                   34087900
.*-------------------------------------------------------------------   34108800
.***AE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             34129700
.ZE3A   AIF   ('&REQUEST(1)' NE 'COUNT').ZE4A                           34150600
&XREQUEST     SETC  'COUNT'     SET KEYWORD                             34171500
.*-------------------------------------------------------------------   34192400
.***AE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             34213300
.ZE4A   AIF   ('&REQUEST(1)' NE 'SUMMARY').ZE5A                         34234200
&XREQUEST     SETC  'SUMMARY'   SET KEYWORD                             34255100
.*-------------------------------------------------------------------   34276000
.***AE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             34296900
.ZE5A   AIF   ('&REQUEST(1)' NE 'INFO').ZE6A                            34317800
&XREQUEST     SETC  'INFO'      SET KEYWORD                             34338700
.*-------------------------------------------------------------------   34359600
.***AE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             34380500
.ZE6A   AIF   ('&REQUEST(1)' NE 'FULL').ZE7A                            34401400
&XREQUEST     SETC  'FULL'      SET KEYWORD                             34422300
.*-------------------------------------------------------------------   34443200
.***AE.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             34464100
.ZE7A         AIF   (K'&XREQUEST GT 0).ZE7B                             34485000
              AIF   (K'&REQUEST(1) LE 0).ZE7C                           34505900
&ZMS          SETC  '"REQUEST='                 *KUKWA* MNOTE           34526800
&ZMS          SETC  '&ZMS.&REQUEST"'                                    34547700
&ZMS          SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '           34568600
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                 34589500
&ZMS          SETC  '&ZMS "COUNT",'                                     34610400
&ZMS          SETC  '&ZMS "SUMMARY",'                                   34631300
&ZMS          SETC  '&ZMS "INFO",'                                      34652200
&ZMS          SETC  '&ZMS OR "FULL".'                                   34673100
              MNOTE 8,' &ZMS '                                          34694000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             34714900
              AGO   .ZE7C                                               34735800
.*                                                                      34756700
.ZE7B         ANOP  ,                                                   34777600
&ZXREQUEST    SETC  'INPUT'     SET IN/OUTPUT                           34798500
.ZE7C         ANOP  ,                                                   34819400
.*----------------------------------------------------------------***   34840300
.***AE.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             34861200
              AIF   (N'&STATUS LE 1).ZE9A       CK NUM                  34882100
&ZMS          SETC  '"STATUS='  *KPOSA* MNOTE                           34903000
&ZMS          SETC  '&ZMS.&STATUS"'                                     34923900
&ZMS          SETC  '&ZMS "STATUS"'                                     34944800
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 34965700
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             34986600
.ZE9A         ANOP  ,                                                   35007500
.*-------------------------------------------------------------------   35028400
.***AE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             35049300
.ZE10A   AIF   ('&STATUS(1)' NE 'ACTIVE').ZE11A                         35070200
&XSTATUS      SETC  'ACTIVE'    SET KEYWORD                             35091100
.*-------------------------------------------------------------------   35112000
.***AE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             35132900
.ZE11A   AIF   ('&STATUS(1)' NE 'INACTIVE').ZE12A                       35153800
&XSTATUS      SETC  'INACTIVE'  SET KEYWORD                             35174700
.*-------------------------------------------------------------------   35195600
.***AE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             35216500
.ZE12A   AIF   ('&STATUS(1)' NE 'ALL').ZE13A                            35237400
&XSTATUS      SETC  'ALL'       SET KEYWORD                             35258300
.*-------------------------------------------------------------------   35279200
.***AE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             35300100
.ZE13A   AIF   ('&STATUS(1)' NE 'BACKLOG').ZE14A                        35321000
&XSTATUS      SETC  'BACKLOG'   SET KEYWORD                             35341900
.*-------------------------------------------------------------------   35362800
.***AE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             35383700
.ZE14A   AIF   ('&STATUS(1)' NE 'ERR').ZE15A                            35404600
&XSTATUS      SETC  'ERR'       SET KEYWORD                             35425500
.*-------------------------------------------------------------------   35446400
.***AE.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             35467300
.ZE15A        AIF   (K'&XSTATUS GT 0).ZE15B                             35488200
              AIF   (K'&STATUS(1) LE 0).ZE15C                           35509100
&ZMS          SETC  '"STATUS='  *KUKWA* MNOTE                           35530000
&ZMS          SETC  '&ZMS.&STATUS"'                                     35550900
&ZMS          SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '           35571800
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                 35592700
&ZMS          SETC  '&ZMS "ACTIVE",'                                    35613600
&ZMS          SETC  '&ZMS "INACTIVE",'                                  35634500
&ZMS          SETC  '&ZMS "ALL",'                                       35655400
&ZMS          SETC  '&ZMS "BACKLOG",'                                   35676300
&ZMS          SETC  '&ZMS OR "ERR".'                                    35697200
              MNOTE 8,' &ZMS '                                          35718100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             35739000
              AGO   .ZE15C                                              35759900
.*                                                                      35780800
.ZE15B        ANOP  ,                                                   35801700
&ZXSTATUS     SETC  'INPUT'     SET IN/OUTPUT                           35822600
.ZE15C        ANOP  ,                                                   35843500
.*----------------------------------------------------------------***   35864400
.***AE.KXVAR03 NAME, OPT INPUT, KEYS -XVAR KEY                          35885300
              AIF   (N'&BKLG_NUM LE 1).ZE17A    CK NUM                  35906200
&ZMS          SETC  '"BKLG_NUM='                *KPOSA* MNOTE           35927100
&ZMS          SETC  '&ZMS.&BKLG_NUM"'                                   35948000
&ZMS          SETC  '&ZMS "BKLG_NUM"'                                   35968900
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 35989800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             36010700
.ZE17A        ANOP  ,                                                   36031600
.*-------------------------------------------------------------------   36052500
.***AE.KXVAR04 NAME, OPT INPUT, KEYS -XVAR ARGUMENT                     36073400
              AIF   (K'&BKLG_NUM(1) LE 0).ZE17B NO PRM                  36094300
&ZXBKLG_NUM   SETC  'INPUT'     SET IN/OUTPUT                           36115200
&XBKLG_NUM    SETC  '&BKLG_NUM(1)'              SET XVARIABLE           36136100
              AIF   (N'&BKLG_NUM GT 1).ZE17B                            36157000
.*            ANOP              MULTIPLE PARMS                          36177900
&XBKLG_NUM    SETC  '&BKLG_NUM'                 SET XVARIABLE           36198800
.ZE17B        ANOP  ,                                                   36219700
.*-------------------------------------------------------------------   36240600
.***AE.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    36261500
              AIF   (K'&ZXBKLG_NUM LE 0).ZE17R  NOT I/O                 36282400
              AIF   ('&XBKLG_NUM'(1,1) NE '(').ZE17R                    36303300
&ZCGPR        SETC  '&XBKLG_NUM'(2,K'&XBKLG_NUM-2)                      36324200
              AIF   ('&ZCGPR'(1,1) NE '0').ZE17P                        36345100
              AIF   (K'&ZCGPR GT 2).ZE17Q                               36366000
              AIF   ('&ZCGPR' EQ '0').ZE17Q                             36386900
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       36407800
              AIF   (T'&ZCGPR NE 'N').ZE17Q     INVALID REG NAME        36428700
.ZE17P        ANOP  ,                                                   36449600
              AIF   (T'&ZCGPR NE 'N').ZE17R     NON NUMERIC             36470500
              AIF   ('&ZCGPR' LT '2').ZE17Q                             36491400
              AIF   ('&ZCGPR' LE '12').ZE17R                            36512300
.ZE17Q        ANOP  ,                                                   36533200
&ZMS          SETC  '"BKLG_NUM='                *KGPRA* MNOTE           36554100
&ZMS          SETC  '&ZMS.&BKLG_NUM"'                                   36575000
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           36595900
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    36616800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             36637700
.ZE17R        ANOP  ,                                                   36658600
.*----------------------------------------------------------------***   36679500
.***AE.KXVAR03 NAME, OPT INPUT, KEYS -XVAR KEY                          36700400
              AIF   (N'&CN LE 1).ZE20A          CK NUM                  36721300
&ZMS          SETC  '"CN='      *KPOSA* MNOTE                           36742200
&ZMS          SETC  '&ZMS.&CN"'                                         36763100
&ZMS          SETC  '&ZMS "CN"'                                         36784000
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 36804900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             36825800
.ZE20A        ANOP  ,                                                   36846700
.*-------------------------------------------------------------------   36867600
.***AE.KXVAR04 NAME, OPT INPUT, KEYS -XVAR ARGUMENT                     36888500
              AIF   (K'&CN(1) LE 0).ZE20B       NO PRM                  36909400
&ZXCN         SETC  'INPUT'     SET IN/OUTPUT                           36930300
&XCN          SETC  '&CN(1)'    SET XVARIABLE                           36951200
              AIF   (N'&CN GT 1).ZE20B                                  36972100
.*            ANOP              MULTIPLE PARMS                          36993000
&XCN          SETC  '&CN'       SET XVARIABLE                           37013900
.ZE20B        ANOP  ,                                                   37034800
.*-------------------------------------------------------------------   37055700
.***AE.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    37076600
              AIF   (K'&ZXCN LE 0).ZE20R        NOT I/O                 37097500
              AIF   ('&XCN'(1,1) NE '(').ZE20R                          37118400
&ZCGPR        SETC  '&XCN'(2,K'&XCN-2)                                  37139300
              AIF   ('&ZCGPR'(1,1) NE '0').ZE20P                        37160200
              AIF   (K'&ZCGPR GT 2).ZE20Q                               37181100
              AIF   ('&ZCGPR' EQ '0').ZE20Q                             37202000
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       37222900
              AIF   (T'&ZCGPR NE 'N').ZE20Q     INVALID REG NAME        37243800
.ZE20P        ANOP  ,                                                   37264700
              AIF   (T'&ZCGPR NE 'N').ZE20R     NON NUMERIC             37285600
              AIF   ('&ZCGPR' LT '2').ZE20Q                             37306500
              AIF   ('&ZCGPR' LE '12').ZE20R                            37327400
.ZE20Q        ANOP  ,                                                   37348300
&ZMS          SETC  '"CN='      *KGPRA* MNOTE                           37369200
&ZMS          SETC  '&ZMS.&CN"'                                         37390100
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           37411000
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    37431900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             37452800
.ZE20R        ANOP  ,                                                   37473700
.*----------------------------------------------------------------***   37494600
.***AE.KXVAR03 NAME, OPT INPUT, KEYS -XVAR KEY                          37515500
              AIF   (N'&SYS LE 1).ZE23A         CK NUM                  37536400
&ZMS          SETC  '"SYS='     *KPOSA* MNOTE                           37557300
&ZMS          SETC  '&ZMS.&SYS"'                                        37578200
&ZMS          SETC  '&ZMS "SYS"'                                        37599100
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 37620000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             37640900
.ZE23A        ANOP  ,                                                   37690900
.*-------------------------------------------------------------------   38289300
.***AE.KXVAR04 NAME, OPT INPUT, KEYS -XVAR ARGUMENT                     38289500
              AIF   (K'&SYS(1) LE 0).ZE23B      NO PRM                  38289700
&ZXSYS        SETC  'INPUT'     SET IN/OUTPUT                           38289900
&XSYS         SETC  '&SYS(1)'   SET XVARIABLE                           38290100
              AIF   (N'&SYS GT 1).ZE23B                                 38290300
.*            ANOP              MULTIPLE PARMS                          38290500
&XSYS         SETC  '&SYS'      SET XVARIABLE                           38290700
.ZE23B        ANOP  ,                                                   38290900
.*-------------------------------------------------------------------   38291400
.***AE.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    38292100
              AIF   (K'&ZXSYS LE 0).ZE23R       NOT I/O                 38292800
              AIF   ('&XSYS'(1,1) NE '(').ZE23R                         38293500
&ZCGPR        SETC  '&XSYS'(2,K'&XSYS-2)                                38294200
              AIF   ('&ZCGPR'(1,1) NE '0').ZE23P                        38294900
              AIF   (K'&ZCGPR GT 2).ZE23Q                               38295600
              AIF   ('&ZCGPR' EQ '0').ZE23Q                             38296300
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       38297000
              AIF   (T'&ZCGPR NE 'N').ZE23Q     INVALID REG NAME        38297700
.ZE23P        ANOP  ,                                                   38298400
              AIF   (T'&ZCGPR NE 'N').ZE23R     NON NUMERIC             38299100
              AIF   ('&ZCGPR' LT '2').ZE23Q                             38299800
              AIF   ('&ZCGPR' LE '12').ZE23R                            38300500
.ZE23Q        ANOP  ,                                                   38301200
&ZMS          SETC  '"SYS='     *KGPRA* MNOTE                           38301900
&ZMS          SETC  '&ZMS.&SYS"'                                        38302600
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           38303300
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    38304000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             38304700
.ZE23R        ANOP  ,                                                   38305400
.*----------------------------------------------------------------***   38309700
.***AE.KXVAR03 NAME, OPT INPUT, KEYS -XVAR KEY                          38330600
              AIF   (N'&KEY LE 1).ZE26A         CK NUM                  38351500
&ZMS          SETC  '"KEY='     *KPOSA* MNOTE                           38372400
&ZMS          SETC  '&ZMS.&KEY"'                                        38393300
&ZMS          SETC  '&ZMS "KEY"'                                        38414200
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 38435100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             38456000
.ZE26A        ANOP  ,                                                   38476900
.*-------------------------------------------------------------------   38497800
.***AE.KXVAR04 NAME, OPT INPUT, KEYS -XVAR ARGUMENT                     38518700
              AIF   (K'&KEY(1) LE 0).ZE26B      NO PRM                  38539600
&ZXKEY        SETC  'INPUT'     SET IN/OUTPUT                           38560500
&XKEY         SETC  '&KEY(1)'   SET XVARIABLE                           38581400
              AIF   (N'&KEY GT 1).ZE26B                                 38602300
.*            ANOP              MULTIPLE PARMS                          38623200
&XKEY         SETC  '&KEY'      SET XVARIABLE                           38644100
.ZE26B        ANOP  ,                                                   38665000
.*-------------------------------------------------------------------   38685900
.***AE.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    38706800
              AIF   (K'&ZXKEY LE 0).ZE26R       NOT I/O                 38727700
              AIF   ('&XKEY'(1,1) NE '(').ZE26R                         38748600
&ZCGPR        SETC  '&XKEY'(2,K'&XKEY-2)                                38769500
              AIF   ('&ZCGPR'(1,1) NE '0').ZE26P                        38790400
              AIF   (K'&ZCGPR GT 2).ZE26Q                               38811300
              AIF   ('&ZCGPR' EQ '0').ZE26Q                             38832200
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       38853100
              AIF   (T'&ZCGPR NE 'N').ZE26Q     INVALID REG NAME        38874000
.ZE26P        ANOP  ,                                                   38894900
              AIF   (T'&ZCGPR NE 'N').ZE26R     NON NUMERIC             38915800
              AIF   ('&ZCGPR' LT '2').ZE26Q                             38936700
              AIF   ('&ZCGPR' LE '12').ZE26R                            38957600
.ZE26Q        ANOP  ,                                                   38978500
&ZMS          SETC  '"KEY='     *KGPRA* MNOTE                           38999400
&ZMS          SETC  '&ZMS.&KEY"'                                        39020300
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           39041200
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    39062100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             39083000
.ZE26R        ANOP  ,                                                   39103900
.*----------------------------------------------------------------***   39115500
.***AE.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             39127100
              AIF   (N'&AUTH LE 1).ZE29A        CK NUM                  39138700
&ZMS          SETC  '"AUTH='    *KPOSA* MNOTE                           39150300
&ZMS          SETC  '&ZMS.&AUTH"'                                       39161900
&ZMS          SETC  '&ZMS "AUTH"'                                       39173500
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 39185100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             39196700
.ZE29A        ANOP  ,                                                   39208400
.*-------------------------------------------------------------------   39225100
.***AE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             39241800
.ZE30A   AIF   ('&AUTH(1)' NE 'ANY').ZE31A                              39247300
&XAUTH        SETC  'ANY'       SET KEYWORD                             39252800
.*-------------------------------------------------------------------   39258300
.***AE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             39263800
.ZE31A   AIF   ('&AUTH(1)' NE 'MASTER').ZE32A                           39269300
&XAUTH        SETC  'MASTER'    SET KEYWORD                             39275200
.*-------------------------------------------------------------------   39291900
.***AE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             39308600
.ZE32A   AIF   ('&AUTH(1)' NE 'SYS').ZE33A                              39325300
&XAUTH        SETC  'SYS'       SET KEYWORD                             39342000
.*-------------------------------------------------------------------   39358700
.***AE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             39375400
.ZE33A   AIF   ('&AUTH(1)' NE 'IO').ZE34A                               39392100
&XAUTH        SETC  'IO'        SET KEYWORD                             39408800
.*-------------------------------------------------------------------   39425500
.***AE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             39442200
.ZE34A   AIF   ('&AUTH(1)' NE 'CONS').ZE35A                             39458900
&XAUTH        SETC  'CONS'      SET KEYWORD                             39475600
.*-------------------------------------------------------------------   39492300
.***AE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             39509000
.ZE35A   AIF   ('&AUTH(1)' NE 'ALL').ZE36A                              39525700
&XAUTH        SETC  'ALL'       SET KEYWORD                             39542400
.*-------------------------------------------------------------------   39559100
.***AE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             39575800
.ZE36A   AIF   ('&AUTH(1)' NE 'INFO').ZE37A                             39592500
&XAUTH        SETC  'INFO'      SET KEYWORD                             39609200
.*-------------------------------------------------------------------   39625900
.***AE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             39626600
.ZE37A   AIF   ('&AUTH(1)' NE 'SYSONLY').ZE38A                          39627300
&XAUTH        SETC  'SYSONLY'   SET KEYWORD                             39628000
.*-------------------------------------------------------------------   39628700
.***AE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             39629400
.ZE38A   AIF   ('&AUTH(1)' NE 'IOONLY').ZE39A                           39630100
&XAUTH        SETC  'IOONLY'    SET KEYWORD                             39630800
.*-------------------------------------------------------------------   39631500
.***AE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             39632200
.ZE39A   AIF   ('&AUTH(1)' NE 'CONSONLY').ZE40A                         39632900
&XAUTH        SETC  'CONSONLY'  SET KEYWORD                             39633600
.*-------------------------------------------------------------------   39634300
.***AE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             39635000
.ZE40A   AIF   ('&AUTH(1)' NE 'ALLONLY').ZE41A                          39635700
&XAUTH        SETC  'ALLONLY'   SET KEYWORD                             39636400
.*-------------------------------------------------------------------   39637100
.***AE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             39637800
.ZE41A   AIF   ('&AUTH(1)' NE 'INFOONLY').ZE42A                         39638500
&XAUTH        SETC  'INFOONLY'  SET KEYWORD                             39639200
.*-------------------------------------------------------------------   39639900
.***AE.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             39642600
.ZE42A        AIF   (K'&XAUTH GT 0).ZE42B                               39659300
              AIF   (K'&AUTH(1) LE 0).ZE42C                             39676000
&ZMS          SETC  '"AUTH='    *KUKWA* MNOTE                           39692700
&ZMS          SETC  '&ZMS.&AUTH"'                                       39710000
&ZMS          SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '           39741300
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                 39772700
&ZMS          SETC  '&ZMS "ANY",'                                       39785500
&ZMS          SETC  '&ZMS "MASTER",'                                    39798300
&ZMS          SETC  '&ZMS "SYS",'                                       39811100
&ZMS          SETC  '&ZMS "IO",'                                        39823900
&ZMS          SETC  '&ZMS "CONS",'                                      39836700
&ZMS          SETC  '&ZMS "ALL",'                                       39849500
&ZMS          SETC  '&ZMS "INFO",'                                      39862300
&ZMS          SETC  '&ZMS "SYSONLY",'                                   39875100
&ZMS          SETC  '&ZMS "IOONLY",'                                    39887900
&ZMS          SETC  '&ZMS "CONSONLY",'                                  39900700
&ZMS          SETC  '&ZMS "ALLONLY",'                                   39913500
&ZMS          SETC  '&ZMS OR "INFOONLY".'                               39926300
              MNOTE 8,' &ZMS '                                          39939900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             39960800
              AGO   .ZE42C                                              39981700
.*                                                                      40002600
.ZE42B        ANOP  ,                                                   40023500
&ZXAUTH       SETC  'INPUT'     SET IN/OUTPUT                           40044400
.ZE42C        ANOP  ,                                                   40094400
.*----------------------------------------------------------------***   40144400
.***AE.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             40194400
              AIF   (N'&ATTR LE 1).ZE44A        CK NUM                  40244400
&ZMS          SETC  '"ATTR='    *KPOSA* MNOTE                           40294400
&ZMS          SETC  '&ZMS.&ATTR"'                                       40838600
&ZMS          SETC  '&ZMS "ATTR"'                                       40839900
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 40841200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             40842500
.ZE44A        ANOP  ,                                                   40843800
.*-------------------------------------------------------------------   40845100
.***AE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             40846400
.ZE45A   AIF   ('&ATTR(1)' NE 'ANY').ZE46A                              40847700
&XATTR        SETC  'ANY'       SET KEYWORD                             40849000
.*-------------------------------------------------------------------   40850300
.***AE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             40851600
.ZE46A   AIF   ('&ATTR(1)' NE 'YES').ZE47A                              40852000
&XATTR        SETC  'YES'       SET KEYWORD                             40852400
.*-------------------------------------------------------------------   40852800
.***AE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             40853200
.ZE47A   AIF   ('&ATTR(1)' NE 'ROUT').ZE48A                             40853700
&XATTR        SETC  'ROUT'      SET KEYWORD                             40854200
.*-------------------------------------------------------------------   40855500
.***AE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             40856800
.ZE48A   AIF   ('&ATTR(1)' NE 'UD').ZE49A                               40858100
&XATTR        SETC  'UD'        SET KEYWORD                             40859400
.*-------------------------------------------------------------------   40860700
.***AE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             40862000
.ZE49A   AIF   ('&ATTR(1)' NE 'UDN').ZE50A                              40863300
&XATTR        SETC  'UDN'       SET KEYWORD                             40864600
.*-------------------------------------------------------------------   40865900
.***AE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             40867200
.ZE50A   AIF   ('&ATTR(1)' NE 'HC').ZE51A                               40868500
&XATTR        SETC  'HC'        SET KEYWORD                             40869800
.*-------------------------------------------------------------------   40871100
.***AE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             40872400
.ZE51A   AIF   ('&ATTR(1)' NE 'AUTO').ZE52A                             40873700
&XATTR        SETC  'AUTO'      SET KEYWORD                             40875000
.*-------------------------------------------------------------------   40876300
.***AE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             40877600
.ZE52A   AIF   ('&ATTR(1)' NE 'AUTON').ZE53A                            40878900
&XATTR        SETC  'AUTON'     SET KEYWORD                             40880200
.*-------------------------------------------------------------------   40881500
.***AE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             40882800
.ZE53A   AIF   ('&ATTR(1)' NE 'MN').ZE54A                               40884100
&XATTR        SETC  'MN'        SET KEYWORD                             40885400
.*-------------------------------------------------------------------   40886700
.***AE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             40888000
.ZE54A   AIF   ('&ATTR(1)' NE 'NONE').ZE55A                             40889300
&XATTR        SETC  'NONE'      SET KEYWORD                             40890600
.*-------------------------------------------------------------------   40891900
.***AE.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             40893200
.ZE55A        AIF   (K'&XATTR GT 0).ZE55B                               40894500
              AIF   (K'&ATTR(1) LE 0).ZE55C                             40895800
&ZMS          SETC  '"ATTR='    *KUKWA* MNOTE                           40897100
&ZMS          SETC  '&ZMS.&ATTR"'                                       40898400
&ZMS          SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '           40899700
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                 40901300
&ZMS          SETC  '&ZMS "ANY",'                                       40920300
&ZMS          SETC  '&ZMS "YES",'                                       40939300
&ZMS          SETC  '&ZMS "ROUT",'                                      40958300
&ZMS          SETC  '&ZMS "UD",'                                        40977300
&ZMS          SETC  '&ZMS "UDN",'                                       40996300
&ZMS          SETC  '&ZMS "HC",'                                        41015300
&ZMS          SETC  '&ZMS "AUTO",'                                      41034300
&ZMS          SETC  '&ZMS "AUTON",'                                     41053300
&ZMS          SETC  '&ZMS "MN",'                                        41072300
&ZMS          SETC  '&ZMS OR "NONE".'                                   41091300
              MNOTE 8,' &ZMS '                                          41110300
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             41131200
              AGO   .ZE55C                                              41152100
.*                                                                      41173000
.ZE55B        ANOP  ,                                                   41193900
&ZXATTR       SETC  'INPUT'     SET IN/OUTPUT                           41214800
.ZE55C        ANOP  ,                                                   41264800
.*----------------------------------------------------------------***   41340200
.***AE.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             41361100
              AIF   (N'&DOM LE 1).ZE57A         CK NUM                  41382000
&ZMS          SETC  '"DOM='     *KPOSA* MNOTE                           41402900
&ZMS          SETC  '&ZMS.&DOM"'                                        41423800
&ZMS          SETC  '&ZMS "DOM"'                                        41444700
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 41465600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             41486500
.ZE57A        ANOP  ,                                                   41507400
.*-------------------------------------------------------------------   41528300
.***AE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             41549200
.ZE58A   AIF   ('&DOM(1)' NE 'ANY').ZE59A                               41570100
&XDOM         SETC  'ANY'       SET KEYWORD                             41591000
.*-------------------------------------------------------------------   41611900
.***AE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             41632800
.ZE59A   AIF   ('&DOM(1)' NE 'YES').ZE60A                               41639700
&XDOM         SETC  'YES'       SET KEYWORD                             41646600
.*-------------------------------------------------------------------   41653500
.***AE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             41660400
.ZE60A   AIF   ('&DOM(1)' NE 'NORMAL').ZE61A                            41667500
&XDOM         SETC  'NORMAL'    SET KEYWORD                             41674600
.*-------------------------------------------------------------------   41695500
.***AE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             41716400
.ZE61A   AIF   ('&DOM(1)' NE 'ALL').ZE62A                               41737300
&XDOM         SETC  'ALL'       SET KEYWORD                             41758200
.*-------------------------------------------------------------------   41779100
.***AE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             41800000
.ZE62A   AIF   ('&DOM(1)' NE 'NONE').ZE63A                              41820900
&XDOM         SETC  'NONE'      SET KEYWORD                             41841800
.*-------------------------------------------------------------------   41862700
.***AE.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             41883600
.ZE63A        AIF   (K'&XDOM GT 0).ZE63B                                41904500
              AIF   (K'&DOM(1) LE 0).ZE63C                              41925400
&ZMS          SETC  '"DOM='     *KUKWA* MNOTE                           41946300
&ZMS          SETC  '&ZMS.&DOM"'                                        41967200
&ZMS          SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '           41988100
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                 42009000
&ZMS          SETC  '&ZMS "ANY",'                                       42026400
&ZMS          SETC  '&ZMS "YES",'                                       42043800
&ZMS          SETC  '&ZMS "NORMAL",'                                    42061200
&ZMS          SETC  '&ZMS "ALL",'                                       42078600
&ZMS          SETC  '&ZMS OR "NONE".'                                   42096000
              MNOTE 8,' &ZMS '                                          42113500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             42134400
              AGO   .ZE63C                                              42155300
.*                                                                      42176200
.ZE63B        ANOP  ,                                                   42197100
&ZXDOM        SETC  'INPUT'     SET IN/OUTPUT                           42218000
.ZE63C        ANOP  ,                                                   42238900
.*----------------------------------------------------------------***   42259800
.***AE.KXVAR03 NAME, OPT INPUT, KEYS -XVAR KEY                          42280700
              AIF   (N'&BUFPTR LE 1).ZE65A      CK NUM                  42301600
&ZMS          SETC  '"BUFPTR='  *KPOSA* MNOTE                           42322500
&ZMS          SETC  '&ZMS.&BUFPTR"'                                     42343400
&ZMS          SETC  '&ZMS "BUFPTR"'                                     42364300
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 42385200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             42406100
.ZE65A        ANOP  ,                                                   42427000
.*-------------------------------------------------------------------   42447900
.***AE.KXVAR04 NAME, OPT INPUT, KEYS -XVAR ARGUMENT                     42468800
              AIF   (K'&BUFPTR(1) LE 0).ZE65B   NO PRM                  42489700
&ZXBUFPTR     SETC  'INPUT'     SET IN/OUTPUT                           42510600
&XBUFPTR      SETC  '&BUFPTR(1)'                SET XVARIABLE           42531500
              AIF   (N'&BUFPTR GT 1).ZE65B                              42552400
.*            ANOP              MULTIPLE PARMS                          42573300
&XBUFPTR      SETC  '&BUFPTR'   SET XVARIABLE                           42594200
.ZE65B        ANOP  ,                                                   42615100
.*-------------------------------------------------------------------   42636000
.***AE.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    42656900
              AIF   (K'&ZXBUFPTR LE 0).ZE65R    NOT I/O                 42677800
              AIF   ('&XBUFPTR'(1,1) NE '(').ZE65R                      42698700
&ZCGPR        SETC  '&XBUFPTR'(2,K'&XBUFPTR-2)                          42719600
              AIF   ('&ZCGPR'(1,1) NE '0').ZE65P                        42740500
              AIF   (K'&ZCGPR GT 2).ZE65Q                               42761400
              AIF   ('&ZCGPR' EQ '0').ZE65Q                             42782300
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       42803200
              AIF   (T'&ZCGPR NE 'N').ZE65Q     INVALID REG NAME        42824100
.ZE65P        ANOP  ,                                                   42845000
              AIF   (T'&ZCGPR NE 'N').ZE65R     NON NUMERIC             42865900
              AIF   ('&ZCGPR' LT '2').ZE65Q                             42886800
              AIF   ('&ZCGPR' LE '12').ZE65R                            42907700
.ZE65Q        ANOP  ,                                                   42928600
&ZMS          SETC  '"BUFPTR='  *KGPRA* MNOTE                           42949500
&ZMS          SETC  '&ZMS.&BUFPTR"'                                     42970400
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           42991300
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    43012200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             43033100
.ZE65R        ANOP  ,                                                   43054000
.*----------------------------------------------------------------***   43074900
.***AE.KXVAR03 NAME, RQD INPUT, KEYS -XVAR KEY                          43095800
              AIF   (N'&BUFSIZE LE 1).ZE67A     CK NUM                  43116700
&ZMS          SETC  '"BUFSIZE='                 *KPOSA* MNOTE           43137600
&ZMS          SETC  '&ZMS.&BUFSIZE"'                                    43158500
&ZMS          SETC  '&ZMS "BUFSIZE"'                                    43179400
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 43200300
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             43221200
.ZE67A        ANOP  ,                                                   43242100
.*-------------------------------------------------------------------   43263000
.***AE.KXVAR04 NAME, RQD INPUT, KEYS -XVAR ARGUMENT                     43283900
              AIF   (K'&BUFSIZE(1) LE 0).ZE67B  NO PRM                  43304800
&ZXBUFSIZE    SETC  'INPUT'     SET IN/OUTPUT                           43325700
&XBUFSIZE     SETC  '&BUFSIZE(1)'               SET XVARIABLE           43346600
              AIF   (N'&BUFSIZE GT 1).ZE67B                             43367500
.*            ANOP              MULTIPLE PARMS                          43388400
&XBUFSIZE     SETC  '&BUFSIZE'  SET XVARIABLE                           43409300
.ZE67B        ANOP  ,                                                   43430200
.*-------------------------------------------------------------------   43451100
.***AE.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    43472000
              AIF   (K'&ZXBUFSIZE LE 0).ZE67R   NOT I/O                 43492900
              AIF   ('&XBUFSIZE'(1,1) NE '(').ZE67R                     43513800
&ZCGPR        SETC  '&XBUFSIZE'(2,K'&XBUFSIZE-2)                        43534700
              AIF   ('&ZCGPR'(1,1) NE '0').ZE67P                        43555600
              AIF   (K'&ZCGPR GT 2).ZE67Q                               43576500
              AIF   ('&ZCGPR' EQ '0').ZE67Q                             43597400
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       43618300
              AIF   (T'&ZCGPR NE 'N').ZE67Q     INVALID REG NAME        43639200
.ZE67P        ANOP  ,                                                   43660100
              AIF   (T'&ZCGPR NE 'N').ZE67R     NON NUMERIC             43681000
              AIF   ('&ZCGPR' LT '2').ZE67Q                             43701900
              AIF   ('&ZCGPR' LE '12').ZE67R                            43722800
.ZE67Q        ANOP  ,                                                   43743700
&ZMS          SETC  '"BUFSIZE='                 *KGPRA* MNOTE           43764600
&ZMS          SETC  '&ZMS.&BUFSIZE"'                                    43785500
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           43806400
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    43827300
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             43848200
.ZE67R        ANOP  ,                                                   43869100
.*----------------------------------------------------------------***   43890000
.***AE.KXVAR03 NAME, OPT INPUT, KEYS -XVAR KEY                          43910900
              AIF   (N'&CONSCNT LE 1).ZE71A     CK NUM                  43931800
&ZMS          SETC  '"CONSCNT='                 *KPOSA* MNOTE           43952700
&ZMS          SETC  '&ZMS.&CONSCNT"'                                    43973600
&ZMS          SETC  '&ZMS "CONSCNT"'                                    43994500
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 44015400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             44036300
.ZE71A        ANOP  ,                                                   46303500
.*-------------------------------------------------------------------   46304500
.***AE.KXVAR04 NAME, OPT INPUT, KEYS -XVAR ARGUMENT                     46305500
              AIF   (K'&CONSCNT(1) LE 0).ZE71B  NO PRM                  46306500
&ZXCONSCNT    SETC  'INPUT'     SET IN/OUTPUT                           46307500
&XCONSCNT     SETC  '&CONSCNT(1)'               SET XVARIABLE           46308500
              AIF   (N'&CONSCNT GT 1).ZE71B                             46309500
.*            ANOP              MULTIPLE PARMS                          46310500
&XCONSCNT     SETC  '&CONSCNT'  SET XVARIABLE                           46311500
.ZE71B        ANOP  ,                                                   46312500
.*-------------------------------------------------------------------   46313500
.***AE.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    46314500
              AIF   (K'&ZXCONSCNT LE 0).ZE71R   NOT I/O                 46315500
              AIF   ('&XCONSCNT'(1,1) NE '(').ZE71R                     46316500
&ZCGPR        SETC  '&XCONSCNT'(2,K'&XCONSCNT-2)                        46317500
              AIF   ('&ZCGPR'(1,1) NE '0').ZE71P                        46318500
              AIF   (K'&ZCGPR GT 2).ZE71Q                               46319500
              AIF   ('&ZCGPR' EQ '0').ZE71Q                             46320500
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       46321500
              AIF   (T'&ZCGPR NE 'N').ZE71Q     INVALID REG NAME        46322500
.ZE71P        ANOP  ,                                                   46323500
              AIF   (T'&ZCGPR NE 'N').ZE71R     NON NUMERIC             46324500
              AIF   ('&ZCGPR' LT '2').ZE71Q                             46325500
              AIF   ('&ZCGPR' LE '12').ZE71R                            46326500
.ZE71Q        ANOP  ,                                                   46327500
&ZMS          SETC  '"CONSCNT='                 *KGPRA* MNOTE           46328500
&ZMS          SETC  '&ZMS.&CONSCNT"'                                    46329500
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           46330500
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    46331500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             46332500
.ZE71R        ANOP  ,                                                   46333900
.*----------------------------------------------------------------***   46335300
.***AE.KXVAR03 NAME, OPT INPUT, KEYS -XVAR KEY                          46335500
              AIF   (N'&TOKEN LE 1).ZE74A       CK NUM                  46335700
&ZMS          SETC  '"TOKEN='   *KPOSA* MNOTE                           46335900
&ZMS          SETC  '&ZMS.&TOKEN"'                                      46336100
&ZMS          SETC  '&ZMS "TOKEN"'                                      46336300
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 46336500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             46336700
.ZE74A        ANOP  ,                                                   46336900
.*-------------------------------------------------------------------   46337100
.***AE.KXVAR04 NAME, OPT INPUT, KEYS -XVAR ARGUMENT                     46337300
              AIF   (K'&TOKEN(1) LE 0).ZE74B    NO PRM                  46337500
&ZXTOKEN      SETC  'INPUT'     SET IN/OUTPUT                           46337700
&XTOKEN       SETC  '&TOKEN(1)'                 SET XVARIABLE           46337900
              AIF   (N'&TOKEN GT 1).ZE74B                               46338100
.*            ANOP              MULTIPLE PARMS                          46338300
&XTOKEN       SETC  '&TOKEN'    SET XVARIABLE                           46338500
.ZE74B        ANOP  ,                                                   46338700
.*-------------------------------------------------------------------   46338900
.***AE.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    46339100
              AIF   (K'&ZXTOKEN LE 0).ZE74R     NOT I/O                 46339300
              AIF   ('&XTOKEN'(1,1) NE '(').ZE74R                       46339500
&ZCGPR        SETC  '&XTOKEN'(2,K'&XTOKEN-2)                            46339700
              AIF   ('&ZCGPR'(1,1) NE '0').ZE74P                        46339900
              AIF   (K'&ZCGPR GT 2).ZE74Q                               46340100
              AIF   ('&ZCGPR' EQ '0').ZE74Q                             46340300
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       46340500
              AIF   (T'&ZCGPR NE 'N').ZE74Q     INVALID REG NAME        46340700
.ZE74P        ANOP  ,                                                   46340900
              AIF   (T'&ZCGPR NE 'N').ZE74R     NON NUMERIC             46341100
              AIF   ('&ZCGPR' LT '2').ZE74Q                             46341300
              AIF   ('&ZCGPR' LE '12').ZE74R                            46341500
.ZE74Q        ANOP  ,                                                   46341700
&ZMS          SETC  '"TOKEN='   *KGPRA* MNOTE                           46341900
&ZMS          SETC  '&ZMS.&TOKEN"'                                      46342100
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           46342300
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    46342500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             46342700
.ZE74R        ANOP  ,                                                   46342900
.*----------------------------------------------------------------***   46343100
.***AE.KXVAR03 NAME, RQD INPUT, KEYS -XVAR KEY                          46343300
              AIF   (N'&RECSIZE LE 1).ZE76A     CK NUM                  46343500
&ZMS          SETC  '"RECSIZE='                 *KPOSA* MNOTE           46343700
&ZMS          SETC  '&ZMS.&RECSIZE"'                                    46343900
&ZMS          SETC  '&ZMS "RECSIZE"'                                    46344100
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 46344300
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             46344500
.ZE76A        ANOP  ,                                                   46344700
.*-------------------------------------------------------------------   46344900
.***AE.KXVAR04 NAME, RQD INPUT, KEYS -XVAR ARGUMENT                     46345100
              AIF   (K'&RECSIZE(1) LE 0).ZE76B  NO PRM                  46345300
&ZXRECSIZE    SETC  'INPUT'     SET IN/OUTPUT                           46345500
&XRECSIZE     SETC  '&RECSIZE(1)'               SET XVARIABLE           46345700
              AIF   (N'&RECSIZE GT 1).ZE76B                             46345900
.*            ANOP              MULTIPLE PARMS                          46346100
&XRECSIZE     SETC  '&RECSIZE'  SET XVARIABLE                           46346300
.ZE76B        ANOP  ,                                                   46346500
.*-------------------------------------------------------------------   46346700
.***AE.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    46346900
              AIF   (K'&ZXRECSIZE LE 0).ZE76R   NOT I/O                 46347100
              AIF   ('&XRECSIZE'(1,1) NE '(').ZE76R                     46347300
&ZCGPR        SETC  '&XRECSIZE'(2,K'&XRECSIZE-2)                        46347500
              AIF   ('&ZCGPR'(1,1) NE '0').ZE76P                        46347700
              AIF   (K'&ZCGPR GT 2).ZE76Q                               46347900
              AIF   ('&ZCGPR' EQ '0').ZE76Q                             46348100
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       46348300
              AIF   (T'&ZCGPR NE 'N').ZE76Q     INVALID REG NAME        46348500
.ZE76P        ANOP  ,                                                   46348700
              AIF   (T'&ZCGPR NE 'N').ZE76R     NON NUMERIC             46348900
              AIF   ('&ZCGPR' LT '2').ZE76Q                             46349100
              AIF   ('&ZCGPR' LE '12').ZE76R                            46349300
.ZE76Q        ANOP  ,                                                   46349500
&ZMS          SETC  '"RECSIZE='                 *KGPRA* MNOTE           46349700
&ZMS          SETC  '&ZMS.&RECSIZE"'                                    46349900
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           46350100
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    46350300
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             46350500
.ZE76R        ANOP  ,                                                   46350700
.*----------------------------------------------------------------***   46350900
.***AE.KXVAR03 NAME, OPT OUTPUT, KEYS -XVAR KEY                         46356200
              AIF   (N'&RETCODE LE 1).ZE80A     CK NUM                  46377100
&ZMS          SETC  '"RETCODE='                 *KPOSA* MNOTE           46398000
&ZMS          SETC  '&ZMS.&RETCODE"'                                    46418900
&ZMS          SETC  '&ZMS "RETCODE"'                                    46439800
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 46460700
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             46481600
.ZE80A        ANOP  ,                                                   46531600
.*-------------------------------------------------------------------   47134500
.***AE.KXVAR04 NAME, OPT OUTPUT, KEYS -XVAR ARGUMENT                    47135000
              AIF   (K'&RETCODE(1) LE 0).ZE80B  NO PRM                  47135500
&ZXRETCODE    SETC  'OUTPUT'    SET IN/OUTPUT                           47136000
&XRETCODE     SETC  '&RETCODE(1)'               SET XVARIABLE           47136500
              AIF   (N'&RETCODE GT 1).ZE80B                             47137000
.*            ANOP              MULTIPLE PARMS                          47137500
&XRETCODE     SETC  '&RETCODE'  SET XVARIABLE                           47138000
.ZE80B        ANOP  ,                                                   47138500
.*-------------------------------------------------------------------   47139000
.***AE.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   47139500
              AIF   (K'&ZXRETCODE LE 0).ZE80R   NOT I/O                 47140000
              AIF   ('&XRETCODE'(1,1) NE '(').ZE80R                     47140500
&ZCGPR        SETC  '&XRETCODE'(2,K'&XRETCODE-2)                        47141000
              AIF   ('&ZCGPR'(1,1) NE '0').ZE80P                        47141500
              AIF   (K'&ZCGPR GT 2).ZE80Q                               47142000
              AIF   ('&ZCGPR' EQ '0').ZE80Q                             47142500
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       47143000
              AIF   (T'&ZCGPR NE 'N').ZE80Q     INVALID REG NAME        47143500
.ZE80P        ANOP  ,                                                   47144000
              AIF   (T'&ZCGPR NE 'N').ZE80R     NON NUMERIC             47144500
              AIF   ('&ZCGPR' LT '2').ZE80Q                             47145000
              AIF   ('&ZCGPR' LE '12').ZE80R                            47145500
.ZE80Q        ANOP  ,                                                   47146000
&ZMS          SETC  '"RETCODE='                 *KGPRA* MNOTE           47146500
&ZMS          SETC  '&ZMS.&RETCODE"'                                    47147000
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           47147500
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    47148000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             47148500
.ZE80R        ANOP  ,                                                   47149000
.*----------------------------------------------------------------***   47149500
.***AE.KXVAR03 NAME, OPT OUTPUT, KEYS -XVAR KEY                         47150000
              AIF   (N'&RSNCODE LE 1).ZE83A     CK NUM                  47150500
&ZMS          SETC  '"RSNCODE='                 *KPOSA* MNOTE           47151000
&ZMS          SETC  '&ZMS.&RSNCODE"'                                    47151500
&ZMS          SETC  '&ZMS "RSNCODE"'                                    47152000
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 47152500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             47153000
.ZE83A        ANOP  ,                                                   47153500
.*-------------------------------------------------------------------   47154000
.***AE.KXVAR04 NAME, OPT OUTPUT, KEYS -XVAR ARGUMENT                    47154500
              AIF   (K'&RSNCODE(1) LE 0).ZE83B  NO PRM                  47155000
&ZXRSNCODE    SETC  'OUTPUT'    SET IN/OUTPUT                           47155500
&XRSNCODE     SETC  '&RSNCODE(1)'               SET XVARIABLE           47156000
              AIF   (N'&RSNCODE GT 1).ZE83B                             47156500
.*            ANOP              MULTIPLE PARMS                          47157000
&XRSNCODE     SETC  '&RSNCODE'  SET XVARIABLE                           47157500
.ZE83B        ANOP  ,                                                   47158000
.*-------------------------------------------------------------------   47158500
.***AE.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   47159000
              AIF   (K'&ZXRSNCODE LE 0).ZE83R   NOT I/O                 47159500
              AIF   ('&XRSNCODE'(1,1) NE '(').ZE83R                     47160000
&ZCGPR        SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                        47160500
              AIF   ('&ZCGPR'(1,1) NE '0').ZE83P                        47161000
              AIF   (K'&ZCGPR GT 2).ZE83Q                               47161500
              AIF   ('&ZCGPR' EQ '0').ZE83Q                             47162000
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       47162500
              AIF   (T'&ZCGPR NE 'N').ZE83Q     INVALID REG NAME        47163000
.ZE83P        ANOP  ,                                                   47163500
              AIF   (T'&ZCGPR NE 'N').ZE83R     NON NUMERIC             47164000
              AIF   ('&ZCGPR' LT '2').ZE83Q                             47164500
              AIF   ('&ZCGPR' LE '12').ZE83R                            47165000
.ZE83Q        ANOP  ,                                                   47165500
&ZMS          SETC  '"RSNCODE='                 *KGPRA* MNOTE           47166000
&ZMS          SETC  '&ZMS.&RSNCODE"'                                    47166500
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           47167000
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    47167500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             47168000
.ZE83R        ANOP  ,                                                   47168500
.******************************************************************     47169000
.***AF.P00 CHECK STANDALONE POSITIONAL VARIABLES                        47171300
.******************************************************************     47192200
              ACTR  10000                                               47213100
.*----------------------------------------------------------------***   47234000
.***AF.P02 EXTRA POSITIONALS                                            47254900
              AIF   (N'&SYSLIST LE 0).ZELISTX   NO EXTRAS               47275800
&ZCVAL        SETC  ''          ERROR FIELD                             47296700
&ZAWRK        SETA  0           POSITIONAL NUMBER                       47317600
.ZELIST2      ANOP  ,                                                   47338500
&ZAWRK        SETA  &ZAWRK+1    NEXT POSITIONAL                         47359400
              AIF   (&ZAWRK GT N'&SYSLIST).ZELIST3  DONE                47380300
&ZCVAL        SETC '&ZCVAL,&SYSLIST(&ZAWRK)'    EXTRA                   47401200
              AGO   .ZELIST2                                            47422100
.*                                                                      47443000
.ZELIST3      ANOP  ,                                                   47463900
&ZCVAL        SETC '&ZCVAL'(2,K'&ZCVAL-1)       STRIP COMMA             47484800
&ZMS          SETC  'POSITIONAL ARGUMENT(S),'   *PPOSA* MNOTE           47505700
&ZMS          SETC  '&ZMS "&ZCVAL"'                                     47526600
&ZMS          SETC  '&ZMS CANNOT BE USED.'                              47547500
&ZMS          SETC  '&ZMS NO POSITIONAL ARGUMENTS'                      47568400
              MNOTE 8,' &ZMS ARE ALLOWED.'                              47589300
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             47610200
.ZELISTX      ANOP  ,                                                   47631100
&ZASYSLNDX    SETA  0                                                   47652000
.*-------------------------------------------------------------------   47672900
.***AE.MF02 MF=(LME)                                                    47693800
.ZEMFX        ANOP  ,           END OF PARTIAL SYNTAX CHECK             47714700
.*******************************************************************    47735600
.***AE.ZMR01 NO CODE GENERATED IF ERRORS DETECTED                       47756500
.*******************************************************************    47777400
              AIF   (&ZMACRET NE 0).ZLX2        ERROR DETECTED          47798300
.*******************************************************************    47819200
.***AE.01  START OF IEEQEMCS MACRO CODE                                 47840100
.*******************************************************************    47861000
              LCLC  &M0M0001                 NAME                       47881900
&M0M0001      SETC  '&XLABEL'                SET NAME                   47902800
              AIF   (K'&XLABEL NE 0).XLAB2                              47923700
&M0M0001      SETC  'M00M&SYSNDX'            DEFAULT NAME               47944600
.*                                                                      47965500
.XLAB2        ANOP  ,                                                   47986400
              AIF   ('&XMF' EQ 'L').XLAB3                               48007300
&M0M0001 DS    0H                             IEEQEMCS-1                48028200
.XLAB3        ANOP  ,                                                   48049100
.*******************************************************************    48070000
.***AE.PR01 PRINT CONTROLS, DEFAULT IS YES                              48090900
.*******************************************************************    48111800
              PUSH  PRINT                                               48132700
              AIF   ('&ZPRINT' NE 'NO').ZPRINTX  TURN PRINT ON          48153600
              PRINT OFF         ++ PR01                                 48174500
              AGO   .ZPRNTXX                                            48195400
.ZPRINTX      PRINT ON                                                  48216300
.ZPRNTXX      ANOP  ,                                                   48237200
.********************************************************************   48258100
.***AL.L01 INTERNAL ARRAY TO PRODUCE FORMATTED CODE                     48279000
.********************************************************************   48299900
                      LCLA  &ZOPN          LIST INSTRUCTION INDEX       48320800
                      LCLA  &ZOPN1         INVOCATION INDEX             48341700
                      LCLC  &ZOPL(4095)    LABEL                        48362600
                      LCLC  &ZOPO(4095)    OPERATION                    48383500
                      LCLC  &ZOPV(4095)    VALUE                        48404400
                      LCLC  &ZOPD(4095)    DESCRIPTION                  48425300
.*                                                                      48446200
&ZOPN                 SETA  0              INITIAL INST INDEX VALUE     48467100
.******************************************************************     48471200
.***AL.L08 IEEQEMCS FMT=LIST MF=L PARAMETER AREA                        48475300
.******************************************************************     48479400
                      AIF   ('&XMF' NE 'L').ZLMFLX  NOT MF=LIST         48483500
.*-------------------------------------------------------------------   48488000
.***AM.L00  IEEQEMCS FMT=LIST name                                      48488100
                      AIF   ('&XMF' NE 'L').ZLMFSL2M                    48488200
&ZOPN                 SETA &ZOPN+1                                      48488300
&ZOPL(&ZOPN)          SETC '&M0M0001'                                   48488400
&ZOPO(&ZOPN)          SETC 'EQU'                                        48488500
&ZOPV(&ZOPN)          SETC '&XMFCTRL'                                   48488600
&ZOPD(&ZOPN)          SETC '++ IEEQEMCS NAME'                           48488700
.ZLMFSL2M             ANOP  ,                                           48488800
.*-------------------------------------------------------------------   48488900
.***AM.L01  IEEQEMCS FMT=LIST PARAMETERS                                48489000
&ZOPN                 SETA &ZOPN+1                                      48489100
&ZOPL(&ZOPN)          SETC '&XMFCTRL'                                   48489200
&ZOPO(&ZOPN)          SETC 'DS'                                         48489300
&ZOPV(&ZOPN)          SETC '&XMFATTR'                                   48489400
&ZOPD(&ZOPN)          SETC '++ IEEQEMCS PARM LIST'                      48489500
.*-------------------------------------------------------------------   48489600
.***AM.L09  XQEPLACRN CL4                                               48489700
&ZOPN                 SETA &ZOPN+1                                      48489800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XQEPLACRN'                        48489900
&ZOPO(&ZOPN)          SETC 'DS'                                         48490000
&ZOPV(&ZOPN)          SETC 'CL4'                                        48490300
&ZOPD(&ZOPN)          SETC '++ CONSTANT  XQEPLACRN'                     48490600
.*-------------------------------------------------------------------   48491000
.***AM.L09  XPLISTLEN XL2                                               48491100
&ZOPN                 SETA &ZOPN+1                                      48491200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XPLISTLEN'                        48491300
&ZOPO(&ZOPN)          SETC 'DS'                                         48491400
&ZOPV(&ZOPN)          SETC 'XL2'                                        48491500
&ZOPD(&ZOPN)          SETC '++ INPUT  XPLISTLEN'                        48491600
.*-------------------------------------------------------------------   48491700
.***AM.L02 XVERSION XL1                                                 48491800
&ZOPN                 SETA &ZOPN+1                                      48491900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XVERSION'                         48492000
&ZOPO(&ZOPN)          SETC 'DS'                                         48492100
&ZOPV(&ZOPN)          SETC 'XL1'                                        48492200
&ZOPD(&ZOPN)          SETC '++ INPUT XVERSION'                          48492300
.*-------------------------------------------------------------------   48492400
.***AM.L05 XREQUEST XL1                                                 48492500
&ZOPN                 SETA &ZOPN+1                                      48492600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XREQUEST'                         48492700
&ZOPO(&ZOPN)          SETC 'DS'                                         48492800
&ZOPV(&ZOPN)          SETC 'XL1'                                        48492900
&ZOPD(&ZOPN)          SETC '++ &ZXREQUEST XREQUEST'                     48493000
.*                                                                      48493100
&ZOPN                 SETA  &ZOPN+1                                     48493200
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._COUNT'                           48493300
&ZOPO(&ZOPN)          SETC  'EQU'                                       48493400
&ZOPV(&ZOPN)          SETC  '1'                                         48493500
&ZOPD(&ZOPN)          SETC  '++ XREQUEST.'                              48493600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).COUNT'                        48493700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      48493800
.*                                                                      48493900
&ZOPN                 SETA  &ZOPN+1                                     48494000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._SUMMARY'                         48494100
&ZOPO(&ZOPN)          SETC  'EQU'                                       48494200
&ZOPV(&ZOPN)          SETC  '2'                                         48494300
&ZOPD(&ZOPN)          SETC  '++ XREQUEST.'                              48494400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).SUMMARY'                      48494500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      48494600
.*                                                                      48494700
&ZOPN                 SETA  &ZOPN+1                                     48494800
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._INFO'                            48494900
&ZOPO(&ZOPN)          SETC  'EQU'                                       48495000
&ZOPV(&ZOPN)          SETC  '3'                                         48495100
&ZOPD(&ZOPN)          SETC  '++ XREQUEST.'                              48495200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).INFO'                         48495300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      48495400
.*                                                                      48495500
&ZOPN                 SETA  &ZOPN+1                                     48495600
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._FULL'                            48495700
&ZOPO(&ZOPN)          SETC  'EQU'                                       48495800
&ZOPV(&ZOPN)          SETC  '4'                                         48495900
&ZOPD(&ZOPN)          SETC  '++ XREQUEST.'                              48496000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).FULL'                         48496100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      48496200
.*-------------------------------------------------------------------   48496300
.***AM.L03 XSTATUS BL.8                                                 48496400
&ZOPN                 SETA &ZOPN+1                                      48496500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSTATUS'                          48496600
&ZOPO(&ZOPN)          SETC 'DS'                                         48496700
&ZOPV(&ZOPN)          SETC 'BL.8'                                       48496800
&ZOPD(&ZOPN)          SETC '++ INPUT'                                   48496900
.*                                                                      48497000
&ZOPN                 SETA  &ZOPN+1                                     48497100
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._ST_ACTIVE'                       48497200
&ZOPO(&ZOPN)          SETC  'EQU'                                       48497300
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             48497400
&ZOPD(&ZOPN)          SETC  '++ XSTATUS.'                               48497500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).ACTIVE'                       48497600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      48497700
.*                                                                      48497800
&ZOPN                 SETA  &ZOPN+1                                     48497900
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._ST_INACTIVE'                     48498000
&ZOPO(&ZOPN)          SETC  'EQU'                                       48498100
&ZOPV(&ZOPN)          SETC  'B''01000000'''                             48498200
&ZOPD(&ZOPN)          SETC  '++ XSTATUS.'                               48498300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).INACTIVE'                     48498400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      48498500
.*                                                                      48498600
&ZOPN                 SETA  &ZOPN+1                                     48498700
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._ST_ALL'                          48498800
&ZOPO(&ZOPN)          SETC  'EQU'                                       48498900
&ZOPV(&ZOPN)          SETC  'B''00100000'''                             48499000
&ZOPD(&ZOPN)          SETC  '++ XSTATUS.'                               48499100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).ALL'                          48499200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      48499300
.*                                                                      48499400
&ZOPN                 SETA  &ZOPN+1                                     48499500
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._ST_BACKLOG'                      48499600
&ZOPO(&ZOPN)          SETC  'EQU'                                       48499700
&ZOPV(&ZOPN)          SETC  'B''00010000'''                             48499800
&ZOPD(&ZOPN)          SETC  '++ XSTATUS.'                               48499900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).BACKLOG'                      48500000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      48500100
.*                                                                      48500200
&ZOPN                 SETA  &ZOPN+1                                     48500300
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._ST_ERR'                          48500400
&ZOPO(&ZOPN)          SETC  'EQU'                                       48500500
&ZOPV(&ZOPN)          SETC  'B''00001000'''                             48500600
&ZOPD(&ZOPN)          SETC  '++ XSTATUS.'                               48500700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).ERR'                          48500800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      48500900
.*-------------------------------------------------------------------   48501000
.***AM.L03 XFLAG1 BL.8                                                  48501200
&ZOPN                 SETA &ZOPN+1                                      48501400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XFLAG1'                           48501600
&ZOPO(&ZOPN)          SETC 'DS'                                         48501800
&ZOPV(&ZOPN)          SETC 'BL.8'                                       48502000
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             48502100
.*                                                                      48502200
&ZOPN                 SETA  &ZOPN+1                                     48502300
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_CN'                      48502400
&ZOPO(&ZOPN)          SETC  'EQU'                                       48502500
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             48502600
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               48502700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).CN'                           48502800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      48502900
.*                                                                      48503000
&ZOPN                 SETA  &ZOPN+1                                     48503100
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_SYS'                     48503200
&ZOPO(&ZOPN)          SETC  'EQU'                                       48503300
&ZOPV(&ZOPN)          SETC  'B''01000000'''                             48503400
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               48503500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).SYS'                          48503600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      48503700
.*                                                                      48503800
&ZOPN                 SETA  &ZOPN+1                                     48503900
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_KEY'                     48504000
&ZOPO(&ZOPN)          SETC  'EQU'                                       48504100
&ZOPV(&ZOPN)          SETC  'B''00100000'''                             48504200
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               48504300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).KEY'                          48504400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      48504500
.*-------------------------------------------------------------------   48507000
.***AM.L09  XRSV0001 CL2                                                48507100
&ZOPN                 SETA &ZOPN+1                                      48507200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0001'                         48507300
&ZOPO(&ZOPN)          SETC 'DS'                                         48507400
&ZOPV(&ZOPN)          SETC 'CL2'                                        48507500
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV0001'                      48507600
.*-------------------------------------------------------------------   48507700
.***AM.L09  XBKLG_NUM F                                                 48507800
&ZOPN                 SETA &ZOPN+1                                      48507900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XBKLG_NUM'                        48508000
&ZOPO(&ZOPN)          SETC 'DS'                                         48508100
&ZOPV(&ZOPN)          SETC 'F'                                          48508200
&ZOPD(&ZOPN)          SETC '++ &ZXBKLG_NUM  XBKLG_NUM'                  48508300
.*-------------------------------------------------------------------   48508400
.***AM.L09  XCN CL8                                                     48508500
&ZOPN                 SETA &ZOPN+1                                      48508600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCN'                              48508700
&ZOPO(&ZOPN)          SETC 'DS'                                         48508800
&ZOPV(&ZOPN)          SETC 'CL8'                                        48508900
&ZOPD(&ZOPN)          SETC '++ &ZXCN  XCN'                              48509000
.*-------------------------------------------------------------------   48509100
.***AM.L09  XSYS CL8                                                    48509200
&ZOPN                 SETA &ZOPN+1                                      48509300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSYS'                             48509400
&ZOPO(&ZOPN)          SETC 'DS'                                         48509500
&ZOPV(&ZOPN)          SETC 'CL8'                                        48509600
&ZOPD(&ZOPN)          SETC '++ &ZXSYS  XSYS'                            48509700
.*-------------------------------------------------------------------   48509800
.***AM.L09  XKEY CL8                                                    48509900
&ZOPN                 SETA &ZOPN+1                                      48510000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XKEY'                             48510100
&ZOPO(&ZOPN)          SETC 'DS'                                         48510200
&ZOPV(&ZOPN)          SETC 'CL8'                                        48510300
&ZOPD(&ZOPN)          SETC '++ &ZXKEY  XKEY'                            48510400
.*-------------------------------------------------------------------   48510500
.***AM.L03 XAUTH BL.16                                                  48510600
&ZOPN                 SETA &ZOPN+1                                      48510700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XAUTH'                            48510800
&ZOPO(&ZOPN)          SETC 'DS'                                         48510900
&ZOPV(&ZOPN)          SETC 'BL.16'                                      48511000
&ZOPD(&ZOPN)          SETC '++ INPUT'                                   48511100
.*                                                                      48511200
&ZOPN                 SETA  &ZOPN+1                                     48511300
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._AUTH_ANY'                        48511400
&ZOPO(&ZOPN)          SETC  'EQU'                                       48511500
&ZOPV(&ZOPN)          SETC  'B''1000000000000000'''                     48511600
&ZOPD(&ZOPN)          SETC  '++ XAUTH.'                                 48511700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).ANY'                          48511800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      48511900
.*                                                                      48512000
&ZOPN                 SETA  &ZOPN+1                                     48512100
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._AUTH_MASTER'                     48512200
&ZOPO(&ZOPN)          SETC  'EQU'                                       48512300
&ZOPV(&ZOPN)          SETC  'B''0100000000000000'''                     48512400
&ZOPD(&ZOPN)          SETC  '++ XAUTH.'                                 48512500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).MASTER'                       48512600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      48512700
.*                                                                      48512800
&ZOPN                 SETA  &ZOPN+1                                     48512900
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._AUTH_SYS'                        48513000
&ZOPO(&ZOPN)          SETC  'EQU'                                       48513100
&ZOPV(&ZOPN)          SETC  'B''0010000000000000'''                     48513200
&ZOPD(&ZOPN)          SETC  '++ XAUTH.'                                 48513400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).SYS'                          48513600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      48513800
.*                                                                      48514000
&ZOPN                 SETA  &ZOPN+1                                     48514200
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._AUTH_IO'                         48514400
&ZOPO(&ZOPN)          SETC  'EQU'                                       48514600
&ZOPV(&ZOPN)          SETC  'B''0001000000000000'''                     48514800
&ZOPD(&ZOPN)          SETC  '++ XAUTH.'                                 48515000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).IO'                           48515200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      48515400
.*                                                                      48515600
&ZOPN                 SETA  &ZOPN+1                                     48515800
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._AUTH_CONS'                       48516000
&ZOPO(&ZOPN)          SETC  'EQU'                                       48516200
&ZOPV(&ZOPN)          SETC  'B''0000100000000000'''                     48516400
&ZOPD(&ZOPN)          SETC  '++ XAUTH.'                                 48516600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).CONS'                         48516800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      48517000
.*                                                                      48517200
&ZOPN                 SETA  &ZOPN+1                                     48517400
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._AUTH_INFO'                       48517600
&ZOPO(&ZOPN)          SETC  'EQU'                                       48517800
&ZOPV(&ZOPN)          SETC  'B''0000010000000000'''                     48518000
&ZOPD(&ZOPN)          SETC  '++ XAUTH.'                                 48518200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).INFO'                         48518400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      48518600
.*                                                                      48518800
&ZOPN                 SETA  &ZOPN+1                                     48519000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._AUTH_ALL'                        48520800
&ZOPO(&ZOPN)          SETC  'EQU'                                       48521000
&ZOPV(&ZOPN)          SETC  'B''0000001000000000'''                     48521200
&ZOPD(&ZOPN)          SETC  '++ XAUTH.'                                 48521400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).ALL'                          48521600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      48521700
.*                                                                      48521800
&ZOPN                 SETA  &ZOPN+1                                     48521900
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._AUTH_SYSONLY'                    48522000
&ZOPO(&ZOPN)          SETC  'EQU'                                       48522100
&ZOPV(&ZOPN)          SETC  'B''0000000100000000'''                     48522200
&ZOPD(&ZOPN)          SETC  '++ XAUTH.'                                 48522300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).SYSONLY'                      48522400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      48522500
.*                                                                      48522600
&ZOPN                 SETA  &ZOPN+1                                     48522700
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._AUTH_IOONLY'                     48522800
&ZOPO(&ZOPN)          SETC  'EQU'                                       48522900
&ZOPV(&ZOPN)          SETC  'B''0000000010000000'''                     48523000
&ZOPD(&ZOPN)          SETC  '++ XAUTH.'                                 48523100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).IOONLY'                       48523200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      48523300
.*                                                                      48523400
&ZOPN                 SETA  &ZOPN+1                                     48523500
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._AUTH_CONSONLY'                   48523600
&ZOPO(&ZOPN)          SETC  'EQU'                                       48523700
&ZOPV(&ZOPN)          SETC  'B''0000000001000000'''                     48523800
&ZOPD(&ZOPN)          SETC  '++ XAUTH.'                                 48523900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).CONSONLY'                     48524000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      48524100
.*                                                                      48524200
&ZOPN                 SETA  &ZOPN+1                                     48524300
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._AUTH_INFOONLY'                   48524400
&ZOPO(&ZOPN)          SETC  'EQU'                                       48524500
&ZOPV(&ZOPN)          SETC  'B''0000000000100000'''                     48524600
&ZOPD(&ZOPN)          SETC  '++ XAUTH.'                                 48524700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).INFOONLY'                     48524800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      48524900
.*                                                                      48525000
&ZOPN                 SETA  &ZOPN+1                                     48525100
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._AUTH_ALLONLY'                    48525200
&ZOPO(&ZOPN)          SETC  'EQU'                                       48525300
&ZOPV(&ZOPN)          SETC  'B''0000000000010000'''                     48525400
&ZOPD(&ZOPN)          SETC  '++ XAUTH.'                                 48525500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).ALLONLY'                      48525600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      48525700
.*-------------------------------------------------------------------   48525800
.***AM.L03 XATTR BL.16                                                  48525900
&ZOPN                 SETA &ZOPN+1                                      48526000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XATTR'                            48526100
&ZOPO(&ZOPN)          SETC 'DS'                                         48526200
&ZOPV(&ZOPN)          SETC 'BL.16'                                      48526300
&ZOPD(&ZOPN)          SETC '++ INPUT'                                   48526400
.*                                                                      48526500
&ZOPN                 SETA  &ZOPN+1                                     48526600
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._ATTR_ANY'                        48526700
&ZOPO(&ZOPN)          SETC  'EQU'                                       48526800
&ZOPV(&ZOPN)          SETC  'B''1000000000000000'''                     48526900
&ZOPD(&ZOPN)          SETC  '++ XATTR.'                                 48527000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).ANY'                          48527100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      48527200
.*                                                                      48527300
&ZOPN                 SETA  &ZOPN+1                                     48527400
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._ATTR_ROUT'                       48527500
&ZOPO(&ZOPN)          SETC  'EQU'                                       48527600
&ZOPV(&ZOPN)          SETC  'B''0100000000000000'''                     48527700
&ZOPD(&ZOPN)          SETC  '++ XATTR.'                                 48527800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).ROUT'                         48527900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      48528000
.*                                                                      48528100
&ZOPN                 SETA  &ZOPN+1                                     48528200
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._ATTR_UD'                         48528300
&ZOPO(&ZOPN)          SETC  'EQU'                                       48528400
&ZOPV(&ZOPN)          SETC  'B''0010000000000000'''                     48528500
&ZOPD(&ZOPN)          SETC  '++ XATTR.'                                 48528600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).UD'                           48528700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      48528800
.*                                                                      48528900
&ZOPN                 SETA  &ZOPN+1                                     48529000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._ATTR_UDN'                        48529100
&ZOPO(&ZOPN)          SETC  'EQU'                                       48529200
&ZOPV(&ZOPN)          SETC  'B''0001000000000000'''                     48529300
&ZOPD(&ZOPN)          SETC  '++ XATTR.'                                 48529400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).UDN'                          48529500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      48529600
.*                                                                      48529700
&ZOPN                 SETA  &ZOPN+1                                     48529800
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._ATTR_HC'                         48529900
&ZOPO(&ZOPN)          SETC  'EQU'                                       48530000
&ZOPV(&ZOPN)          SETC  'B''0000100000000000'''                     48530100
&ZOPD(&ZOPN)          SETC  '++ XATTR.'                                 48530200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).HC'                           48530300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      48530400
.*                                                                      48530500
&ZOPN                 SETA  &ZOPN+1                                     48530600
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._ATTR_AUTO'                       48530700
&ZOPO(&ZOPN)          SETC  'EQU'                                       48530800
&ZOPV(&ZOPN)          SETC  'B''0000010000000000'''                     48530900
&ZOPD(&ZOPN)          SETC  '++ XATTR.'                                 48531000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).AUTO'                         48531100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      48531200
.*                                                                      48531400
&ZOPN                 SETA  &ZOPN+1                                     48531600
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._ATTR_AUTON'                      48531800
&ZOPO(&ZOPN)          SETC  'EQU'                                       48532000
&ZOPV(&ZOPN)          SETC  'B''0000001000000000'''                     48532200
&ZOPD(&ZOPN)          SETC  '++ XATTR.'                                 48532400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).AUTON'                        48532600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      48532800
.*                                                                      48533000
&ZOPN                 SETA  &ZOPN+1                                     48533200
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._ATTR_MN'                         48533400
&ZOPO(&ZOPN)          SETC  'EQU'                                       48533600
&ZOPV(&ZOPN)          SETC  'B''0000000100000000'''                     48533800
&ZOPD(&ZOPN)          SETC  '++ XATTR.'                                 48534000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).MN'                           48534200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      48534400
.*                                                                      48534600
&ZOPN                 SETA  &ZOPN+1                                     48534800
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._ATTR_NONE'                       48535000
&ZOPO(&ZOPN)          SETC  'EQU'                                       48535200
&ZOPV(&ZOPN)          SETC  'B''0000000010000000'''                     48535400
&ZOPD(&ZOPN)          SETC  '++ XATTR.'                                 48535600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).NONE'                         48535800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      48536000
.*                                                                      48536200
&ZOPN                 SETA  &ZOPN+1                                     48536400
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._ATTR_YES'                        48536600
&ZOPO(&ZOPN)          SETC  'EQU'                                       48536800
&ZOPV(&ZOPN)          SETC  'B''0000000001000000'''                     48537000
&ZOPD(&ZOPN)          SETC  '++ XATTR.'                                 48537200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).YES'                          48537400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      48537600
.*-------------------------------------------------------------------   48537800
.***AM.L03 XDOM BL.8                                                    48538000
&ZOPN                 SETA &ZOPN+1                                      48538200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XDOM'                             48538400
&ZOPO(&ZOPN)          SETC 'DS'                                         48538600
&ZOPV(&ZOPN)          SETC 'BL.8'                                       48538800
&ZOPD(&ZOPN)          SETC '++ INPUT'                                   48539000
.*                                                                      48539200
&ZOPN                 SETA  &ZOPN+1                                     48539400
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._DOM_ANY'                         48539600
&ZOPO(&ZOPN)          SETC  'EQU'                                       48539800
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             48540000
&ZOPD(&ZOPN)          SETC  '++ XDOM.'                                  48540100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).ANY'                          48540200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      48540300
.*                                                                      48540400
&ZOPN                 SETA  &ZOPN+1                                     48540500
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._DOM_NORM'                        48540600
&ZOPO(&ZOPN)          SETC  'EQU'                                       48540700
&ZOPV(&ZOPN)          SETC  'B''01000000'''                             48540800
&ZOPD(&ZOPN)          SETC  '++ XDOM.'                                  48540900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).NORMAL'                       48541000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      48541100
.*                                                                      48541200
&ZOPN                 SETA  &ZOPN+1                                     48541300
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._DOM_ALL'                         48541400
&ZOPO(&ZOPN)          SETC  'EQU'                                       48541500
&ZOPV(&ZOPN)          SETC  'B''00100000'''                             48541600
&ZOPD(&ZOPN)          SETC  '++ XDOM.'                                  48541800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).ALL'                          48542000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      48542200
.*                                                                      48542400
&ZOPN                 SETA  &ZOPN+1                                     48542600
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._DOM_NONE'                        48542800
&ZOPO(&ZOPN)          SETC  'EQU'                                       48543000
&ZOPV(&ZOPN)          SETC  'B''00010000'''                             48543200
&ZOPD(&ZOPN)          SETC  '++ XDOM.'                                  48543400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).NONE'                         48543600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      48543800
.*                                                                      48544000
&ZOPN                 SETA  &ZOPN+1                                     48544200
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._DOM_YES'                         48544400
&ZOPO(&ZOPN)          SETC  'EQU'                                       48544600
&ZOPV(&ZOPN)          SETC  'B''00001000'''                             48544800
&ZOPD(&ZOPN)          SETC  '++ XDOM.'                                  48545000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).YES'                          48545200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      48545400
.*-------------------------------------------------------------------   48545500
.***AM.L09  XRSV0002 CL3                                                48545600
&ZOPN                 SETA &ZOPN+1                                      48545700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0002'                         48545800
&ZOPO(&ZOPN)          SETC 'DS'                                         48545900
&ZOPV(&ZOPN)          SETC 'CL3'                                        48546000
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV0002'                      48546100
.*-------------------------------------------------------------------   48546200
.***AM.L09  XBUFPTR A                                                   48546300
&ZOPN                 SETA &ZOPN+1                                      48546400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XBUFPTR'                          48546500
&ZOPO(&ZOPN)          SETC 'DS'                                         48546600
&ZOPV(&ZOPN)          SETC 'A'                                          48546700
&ZOPD(&ZOPN)          SETC '++ &ZXBUFPTR  XBUFPTR'                      48546800
.*-------------------------------------------------------------------   48546900
.***AM.L09  XBUFSIZE F                                                  48547000
&ZOPN                 SETA &ZOPN+1                                      48547100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XBUFSIZE'                         48547200
&ZOPO(&ZOPN)          SETC 'DS'                                         48547300
&ZOPV(&ZOPN)          SETC 'F'                                          48547400
&ZOPD(&ZOPN)          SETC '++ &ZXBUFSIZE  XBUFSIZE'                    48547500
.*-------------------------------------------------------------------   48547600
.***AM.L09  XRECSIZE A                                                  48547700
&ZOPN                 SETA &ZOPN+1                                      48547800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRECSIZE'                         48547900
&ZOPO(&ZOPN)          SETC 'DS'                                         48548000
&ZOPV(&ZOPN)          SETC 'A'                                          48548100
&ZOPD(&ZOPN)          SETC '++ &ZXRECSIZE  XRECSIZE'                    48548200
.*-------------------------------------------------------------------   48548400
.***AM.L09  XCONSCNT A                                                  48548600
&ZOPN                 SETA &ZOPN+1                                      48548800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCONSCNT'                         48549000
&ZOPO(&ZOPN)          SETC 'DS'                                         48549200
&ZOPV(&ZOPN)          SETC 'A'                                          48549400
&ZOPD(&ZOPN)          SETC '++ &ZXCONSCNT  XCONSCNT'                    48549600
.*-------------------------------------------------------------------   48549800
.***AM.L09  XTOKEN A                                                    48550000
&ZOPN                 SETA &ZOPN+1                                      48550200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XTOKEN'                           48550400
&ZOPO(&ZOPN)          SETC 'DS'                                         48550600
&ZOPV(&ZOPN)          SETC 'A'                                          48550800
&ZOPD(&ZOPN)          SETC '++ &ZXTOKEN  XTOKEN'                        48551000
.*-------------------------------------------------------------------   48551200
.***AM.L10 END OF IEEQEMCS LIST PARAMETERS                              48557800
&ZOPN                 SETA &ZOPN+1                                      48558700
&ZOPL(&ZOPN)          SETC '&XMFCTRL.L'                                 48559600
&ZOPO(&ZOPN)          SETC 'EQU'                                        48560500
&ZOPV(&ZOPN)          SETC '*-&XMFCTRL'                                 48561400
&ZOPD(&ZOPN)          SETC '++ LENGTH OF PLIST'                         48562300
.*                                                                      48563200
&ZOPN                 SETA &ZOPN+1                                      48564100
&ZOPL(&ZOPN)          SETC ' '                                          48565000
&ZOPO(&ZOPN)          SETC 'SPACE'                                      48565900
&ZOPV(&ZOPN)          SETC '1'                                          48566800
&ZOPD(&ZOPN)          SETC ' '                                          48567700
.*-------------------------------------------------------------------   48568600
.***AL.L09 IEEQEMCS FMT=LIST MF=L PARAMETER AREA DEFINED                48569500
                      AGO   .ZMFLX         EXIT, MF=L DONE              48570400
.*                                                                      48571300
.ZLMFLX               ANOP  ,                                           48572200
.*-------------------------------------------------------------------   48573100
.***AL.L13 SET ZPLLEN TO ITS APPROPRIATE VALUE                          48574000
&ZPLLEN               SETA 68                                           48574900
.*                                                                      48575800
.******************************************************************     48576700
.***AI.L01 IEEQEMCS FMT=LIST FILL IN PARAMETER AREA                     48577600
.******************************************************************     48578500
                      ACTR  10000                                       48579400
&ZCVAL                SETC  'LA'           ASSUME XA MODE               48580300
                      AIF   ('&SYSASCE' EQ 'P').ZIMFXA  SYSSTATE PRI    48581200
&ZCVAL                SETC  'LAE'          XAX MODE                     48582100
.ZIMFXA               ANOP ,                                            48583000
.*                                                                      48583900
                      AIF   ('&XMFCTRL'(1,1) NE '(').ZIMFN2  NOT GPR    48584800
&ZCGPR                SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)  GET GPR         48585700
                      AIF   ('&ZCGPR' EQ 'GPR1').ZIMFNX                 48586600
                      AIF   ('&ZCGPR' EQ 'GPR01').ZIMFNX                48587500
                      AIF   ('&ZCGPR' EQ 'REG1').ZIMFNX                 48588400
                      AIF   ('&ZCGPR' EQ 'REG01').ZIMFNX                48589300
                      AIF   ('&ZCGPR' EQ 'R1').ZIMFNX                   48590200
                      AIF   ('&ZCGPR' EQ '1').ZIMFNX                    48591100
                      AIF   ('&ZCGPR' EQ '01').ZIMFNX                   48592000
&ZOPN                 SETA  &ZOPN+1                                     48592900
&ZOPL(&ZOPN)          SETC  ' '                                         48593800
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    48594700
&ZOPV(&ZOPN)          SETC  '1,0(,&ZCGPR)'                              48595600
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       48596500
                      AGO   .ZIMFNX                                     48597400
.*                                                                      48598300
.ZIMFN2               ANOP ,                                            48599200
                      AIF   (&SYSALVL EQ 0).ZIMFNX1                     48599400
                      AIF   ('&XMF' NE 'S').ZIMFNX1                     48599600
                      AIF   ('&ZCVAL' NE 'LAE').ZIMFNX                  48599800
&ZOPN                 SETA  &ZOPN+1                                     48600100
&ZOPL(&ZOPN)          SETC  ' '                                         48600200
&ZOPO(&ZOPN)          SETC  'LAE'                                       48600300
&ZOPV(&ZOPN)          SETC  '1,0(1,0)'                                  48600400
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       48600500
                      AGO   .ZIMFNX                                     48600600
.ZIMFNX1              ANOP ,                                            48600700
&ZOPN                 SETA  &ZOPN+1                                     48600800
&ZOPL(&ZOPN)          SETC  ' '                                         48601000
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    48601900
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL'                                48602800
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       48603700
.ZIMFNX               ANOP ,                                            48604600
.********************************************************************   48605500
.***AI.L02 IEEQEMCS FMT=LIST INITIALIZE PARAMETER AREA                  48606400
.********************************************************************   48607300
.***AI.L03 MF=(LME)                                                     48608200
                      AIF   ('&XMF' EQ 'L').ZIMFLX                      48609100
                      AIF   ('&XMFSCK' NE 'COMPLETE').ZIMFLX            48610000
.*                                                                      48610900
&ZOPN                 SETA  &ZOPN+1                                     48611800
&ZOPL(&ZOPN)          SETC  ' '                                         48612700
&ZOPO(&ZOPN)          SETC  'XC'                                        48613600
&ZOPV(&ZOPN)          SETC  '0(&ZPLLEN,1),0(1)'                         48614500
&ZOPD(&ZOPN)          SETC  '++ INITIALIZE'                             48615400
.ZIMFLX               ANOP  ,                                           48616300
.*-------------------------------------------------------------------   48617200
.***AI.L60 XQEPLACRN CL4                                                48618100
&ZOPN                 SETA  &ZOPN+1                                     48619000
&ZOPL(&ZOPN)          SETC  ' '                                         48619900
&ZOPO(&ZOPN)          SETC  'MVC'                                       48620800
&ZOPV(&ZOPN)          SETC  '0(4,1),=CL4''QEPL'''                       48621700
&ZOPD(&ZOPN)          SETC  '++ CL4 CONSTANT'                           48622600
.*-------------------------------------------------------------------   48623500
.***AI.L04 XPLISTLEN XL2                                                48624400
&ZOPN                 SETA  &ZOPN+1                                     48625300
&ZOPL(&ZOPN)          SETC  ' '                                         48626200
&ZOPO(&ZOPN)          SETC  'MVC'                                       48627100
&ZOPV(&ZOPN)          SETC  '4(2,1),=AL2(&ZPLLEN)'                      48628000
&ZOPD(&ZOPN)          SETC  '++ INPUT XPLISTLEN XL2'                    48628900
.*-------------------------------------------------------------------   48629800
.***AI.L04B XVERSION XL1                                                48629900
                      AIF   (&XPLISTVER EQ 0).ZIMFVX                    48630000
                      AIF   ('&XMFSCK' EQ 'COMPLETE').ZIMFVY            48630100
.ZIMFVX               ANOP  ,                                           48630200
                      AIF   ('&PLISTVER' EQ '').ZIMFVZ                  48630300
                      AIF   ('&XMFSCK' EQ 'COMPLETE').ZIMFVZ            48630400
.ZIMFVY               ANOP  ,                                           48630500
&ZOPN                 SETA  &ZOPN+1                                     48630600
&ZOPL(&ZOPN)          SETC  ' '                                         48630700
&ZOPO(&ZOPN)          SETC  'MVI'                                       48630800
&ZOPV(&ZOPN)          SETC  '6(1),&XPLISTVER'                           48630900
&ZOPD(&ZOPN)          SETC  '++ INPUT XVERSION XL1'                     48631000
.ZIMFVZ               ANOP  ,                                           48631100
.*-------------------------------------------------------------------   48631200
.***AI.L07 XREQUEST AL1                                                 48631300
&ZW                   SETC  ''                                          48631600
.*-------------------------------------------------------------------   48632500
.***AI.L15 XREQUEST "COUNT" AL1                                         48633400
         AIF   ('&XREQUEST' NE 'COUNT').ZI5A                            48634300
&ZW                   SETC  '1'                                         48635200
.ZI5A                 ANOP  ,                                           48636100
.*-------------------------------------------------------------------   48637000
.***AI.L15 XREQUEST "SUMMARY" AL1                                       48637900
         AIF   ('&XREQUEST' NE 'SUMMARY').ZI6A                          48638800
&ZW                   SETC  '2'                                         48639700
.ZI6A                 ANOP  ,                                           48640600
.*-------------------------------------------------------------------   48641500
.***AI.L15 XREQUEST "INFO" AL1                                          48642400
         AIF   ('&XREQUEST' NE 'INFO').ZI7A                             48643300
&ZW                   SETC  '3'                                         48644200
.ZI7A                 ANOP  ,                                           48645100
.*-------------------------------------------------------------------   48646000
.***AI.L15 XREQUEST "FULL" AL1                                          48646900
         AIF   ('&XREQUEST' NE 'FULL').ZI8A                             48647800
&ZW                   SETC  '4'                                         48648700
.ZI8A                 ANOP  ,                                           48649600
.*-------------------------------------------------------------------   48650500
.***AI.L17 XREQUEST AL1                                                 48651400
                      AIF   ('&ZW' NE '0').ZI8C                         48652300
                      AIF   ('&XMFSCK' EQ 'COMPLETE').ZI8B              48653200
.ZI8C                 ANOP  ,                                           48654100
                      AIF   ('&ZW' EQ '').ZI8B                          48655000
.*                                                                      48655900
&ZOPN                 SETA  &ZOPN+1                                     48656800
&ZOPL(&ZOPN)          SETC  ' '                                         48657700
&ZOPO(&ZOPN)          SETC  'MVI'                                       48658600
&ZOPV(&ZOPN)          SETC  '7(1),&ZW'                                  48659500
&ZOPD(&ZOPN)          SETC  '++ &ZXREQUEST XREQUEST'                    48660400
.ZI8B                 ANOP  ,                                           48661300
.*-------------------------------------------------------------------   48662200
.***AI.L05 XSTATUS BL1                                                  48663100
&ZW                   SETC  ''                                          48664000
&ZCLNG                SETC  ''             RESET BIT ON FLAG            48664900
&ZMS                  SETC  ''                                          48665800
&ZC                   SETC  ''                                          48666700
.*-------------------------------------------------------------------   48667600
.***AI.L08 XSTATUS "ACTIVE"                                             48668500
.***      BL1'1XXXXXXX'                                                 48669400
         AIF   ('&XSTATUS' NE 'ACTIVE').ZI10A                           48670300
&ZW                   SETC  '&ZW.1'                                     48671200
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              48672100
&ZMS                  SETC  '&ZMS.1'                                    48673000
                      AGO   .ZI10C                                      48673900
.*                                                                      48674800
.ZI10A                ANOP  ,                                           48675700
&ZW                   SETC  '&ZW.0'                                     48676600
         AIF   ('&ZXSTATUS' EQ '').ZI10B                                48677500
&ZMS                  SETC  '&ZMS.0'                                    48678400
&ZC                   SETC  'YES'          SET BIT OFF FLAG             48679300
                      AGO   .ZI10C                                      48680200
.*                                                                      48681100
.ZI10B                ANOP  ,                                           48682000
&ZMS                  SETC  '&ZMS.1'                                    48682900
.ZI10C                ANOP  ,                                           48683800
.*-------------------------------------------------------------------   48684700
.***AI.L08 XSTATUS "INACTIVE"                                           48685600
.***      BL1'X1XXXXXX'                                                 48686500
         AIF   ('&XSTATUS' NE 'INACTIVE').ZI11A                         48687400
&ZW                   SETC  '&ZW.1'                                     48688300
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              48689200
&ZMS                  SETC  '&ZMS.1'                                    48690100
                      AGO   .ZI11C                                      48691000
.*                                                                      48691900
.ZI11A                ANOP  ,                                           48692800
&ZW                   SETC  '&ZW.0'                                     48693700
         AIF   ('&ZXSTATUS' EQ '').ZI11B                                48694600
&ZMS                  SETC  '&ZMS.0'                                    48695500
&ZC                   SETC  'YES'          SET BIT OFF FLAG             48696400
                      AGO   .ZI11C                                      48697300
.*                                                                      48698200
.ZI11B                ANOP  ,                                           48699100
&ZMS                  SETC  '&ZMS.1'                                    48700000
.ZI11C                ANOP  ,                                           48700900
.*-------------------------------------------------------------------   48701800
.***AI.L08 XSTATUS "ALL"                                                48702700
.***      BL1'XX1XXXXX'                                                 48703600
         AIF   ('&XSTATUS' NE 'ALL').ZI12A                              48704500
&ZW                   SETC  '&ZW.1'                                     48705400
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              48706300
&ZMS                  SETC  '&ZMS.1'                                    48707200
                      AGO   .ZI12C                                      48708100
.*                                                                      48709000
.ZI12A                ANOP  ,                                           48709900
&ZW                   SETC  '&ZW.0'                                     48710800
         AIF   ('&ZXSTATUS' EQ '').ZI12B                                48711700
&ZMS                  SETC  '&ZMS.0'                                    48712600
&ZC                   SETC  'YES'          SET BIT OFF FLAG             48713500
                      AGO   .ZI12C                                      48714400
.*                                                                      48715300
.ZI12B                ANOP  ,                                           48716200
&ZMS                  SETC  '&ZMS.1'                                    48717100
.ZI12C                ANOP  ,                                           48718000
.*-------------------------------------------------------------------   48718900
.***AI.L08 XSTATUS "BACKLOG"                                            48719800
.***      BL1'XXX1XXXX'                                                 48720700
         AIF   ('&XSTATUS' NE 'BACKLOG').ZI13A                          48721600
&ZW                   SETC  '&ZW.1'                                     48722500
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              48723400
&ZMS                  SETC  '&ZMS.1'                                    48724300
                      AGO   .ZI13C                                      48725200
.*                                                                      48726100
.ZI13A                ANOP  ,                                           48727000
&ZW                   SETC  '&ZW.0'                                     48727900
         AIF   ('&ZXSTATUS' EQ '').ZI13B                                48728800
&ZMS                  SETC  '&ZMS.0'                                    48729700
&ZC                   SETC  'YES'          SET BIT OFF FLAG             48730600
                      AGO   .ZI13C                                      48731500
.*                                                                      48732400
.ZI13B                ANOP  ,                                           48733300
&ZMS                  SETC  '&ZMS.1'                                    48734200
.ZI13C                ANOP  ,                                           48735100
.*-------------------------------------------------------------------   48736000
.***AI.L08 XSTATUS "ERR"                                                48736900
.***      BL1'XXXX1XXX'                                                 48737800
         AIF   ('&XSTATUS' NE 'ERR').ZI14A                              48738700
&ZW                   SETC  '&ZW.1000'                                  48739600
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              48740500
&ZMS                  SETC  '&ZMS.1111'                                 48741400
                      AGO   .ZI14C                                      48742300
.*                                                                      48743200
.ZI14A                ANOP  ,                                           48744100
&ZW                   SETC  '&ZW.0000'                                  48745000
         AIF   ('&ZXSTATUS' EQ '').ZI14B                                48745900
&ZMS                  SETC  '&ZMS.0111'                                 48746800
&ZC                   SETC  'YES'          SET BIT OFF FLAG             48747700
                      AGO   .ZI14C                                      48748600
.*                                                                      48749500
.ZI14B                ANOP  ,                                           48750400
&ZMS                  SETC  '&ZMS.1111'                                 48751300
.ZI14C                ANOP  ,                                           48752200
.*-------------------------------------------------------------------   48753100
.***AI.L11 XSTATUS BL1                                                  48754000
                      AIF   ('&XMFSCK' NE 'NOCHECK').ZI14D              48754900
                      AIF   ('&ZC' NE 'YES').ZI14D                      48755800
&ZOPN                 SETA  &ZOPN+1                                     48756700
&ZOPL(&ZOPN)          SETC  ' '                                         48757600
&ZOPO(&ZOPN)          SETC  'NI'                                        48758500
&ZOPV(&ZOPN)          SETC  '8(1),B''&ZMS'''                            48759400
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              48760300
.ZI14D                ANOP  ,                                           48761200
                      AIF   ('&ZCLNG' NE 'YES').ZI14E  ALL ZERO BITS    48762100
&ZOPN                 SETA  &ZOPN+1                                     48763000
&ZOPL(&ZOPN)          SETC  ' '                                         48763900
&ZOPO(&ZOPN)          SETC  'OI'                                        48764800
&ZOPV(&ZOPN)          SETC  '8(1),B''&ZW'''                             48765700
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              48766600
.ZI14E                ANOP  ,                                           48767500
.*-------------------------------------------------------------------   48768400
.***AI.L05 XFLAG1 BL1                                                   48768500
&ZW                   SETC  ''                                          48768600
&ZCLNG                SETC  ''             RESET BIT ON FLAG            48768700
&ZMS                  SETC  ''                                          48768800
&ZC                   SETC  ''                                          48768900
.*-------------------------------------------------------------------   48769000
.***AI.L08 XFLAG1 "CN"                                                  48769100
.***      BL1'1XXXXXXX'                                                 48769200
         AIF   ('&CN' EQ '').ZI16A                                      48769300
         AIF   ('&CN' EQ 'ANY_CONS').ZI16A                              48769400
&ZW                   SETC  '&ZW.1'                                     48769500
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              48769600
&ZMS                  SETC  '&ZMS.0'                                    48769700
                      AGO   .ZI16C                                      48769800
.*                                                                      48769900
.ZI16A                ANOP  ,                                           48770000
&ZW                   SETC  '&ZW.0'                                     48770100
&ZMS                  SETC  '&ZMS.1'                                    48770200
.ZI16C                ANOP  ,                                           48770300
.*-------------------------------------------------------------------   48770400
.***AI.L08 XFLAG1 "SYS"                                                 48770500
.***      BL1'X1XXXXXX'                                                 48770600
         AIF   ('&SYS' EQ '').ZI17A                                     48770700
         AIF   ('&SYS' EQ 'ANY_SYS').ZI17A                              48770800
&ZW                   SETC  '&ZW.1'                                     48770900
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              48771000
&ZMS                  SETC  '&ZMS.0'                                    48771100
                      AGO   .ZI17C                                      48771200
.*                                                                      48771300
.ZI17A                ANOP  ,                                           48771400
&ZW                   SETC  '&ZW.0'                                     48771500
&ZMS                  SETC  '&ZMS.1'                                    48771600
.ZI17C                ANOP  ,                                           48771700
.*-------------------------------------------------------------------   48771800
.***AI.L08 XFLAG1 "KEY"                                                 48771900
.***      BL1'XX1XXXXX'                                                 48772000
         AIF   ('&KEY' EQ '').ZI18A                                     48772100
         AIF   ('&KEY' EQ 'ANY_KEY').ZI18A                              48772200
&ZW                   SETC  '&ZW.100000'                                48772300
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              48772400
&ZMS                  SETC  '&ZMS.011111'                               48772500
                      AGO   .ZI18C                                      48772600
.*                                                                      48772700
.ZI18A                ANOP  ,                                           48772800
&ZW                   SETC  '&ZW.000000'                                48772900
&ZMS                  SETC  '&ZMS.111111'                               48773000
.ZI18C                ANOP  ,                                           48773100
.*-------------------------------------------------------------------   48773200
.***AI.L11 XFLAG1 BL1                                                   48776900
                      AIF   ('&XMFSCK' NE 'NOCHECK').ZI18D              48777000
                      AIF   ('&ZC' NE 'YES').ZI18D                      48777100
&ZOPN                 SETA  &ZOPN+1                                     48777200
&ZOPL(&ZOPN)          SETC  ' '                                         48777300
&ZOPO(&ZOPN)          SETC  'NI'                                        48777400
&ZOPV(&ZOPN)          SETC  '9(1),B''&ZMS'''                            48777500
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              48777600
.ZI18D                ANOP  ,                                           48777700
                      AIF   ('&ZCLNG' NE 'YES').ZI18E  ALL ZERO BITS    48777800
&ZOPN                 SETA  &ZOPN+1                                     48777900
&ZOPL(&ZOPN)          SETC  ' '                                         48778000
&ZOPO(&ZOPN)          SETC  'OI'                                        48778100
&ZOPV(&ZOPN)          SETC  '9(1),B''&ZW'''                             48778200
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              48778300
.ZI18E                ANOP  ,                                           48778400
.*-------------------------------------------------------------------   48778500
.***AI.L25  XBKLG_NUM F                                                 48778600
                      AIF   ('&ZXBKLG_NUM' EQ '').ZI20E                 48778700
                      AIF   ('&ZXBKLG_NUM' EQ 'OUTPUT').ZI20E           48778800
&ZCGPR                SETC  '&XBKLG_NUM'                                48778900
.*                                                                      48779000
                      AIF   ('&XBKLG_NUM'(1,1) NE '(').ZI20B            48779100
&ZCGPR   SETC  '0('.'&XBKLG_NUM'(2,K'&XBKLG_NUM-2).')'                  48779200
                      AGO   .ZI20D                                      48779300
.ZI20B                ANOP  ,                                           48779400
.*                                                                      48779500
&ZC                   SETC  '&XBKLG_NUM'(1,1)                           48779600
                      AIF   (T'&ZC NE 'N').ZI20D                        48779800
&ZC                   SETC  '&XBKLG_NUM'                                48780100
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI20D               48781000
&ZCGPR                SETC  '=FL4''&XBKLG_NUM'''                        48781900
.*                                                                      48782800
.ZI20D                ANOP  ,                                           48783700
.*                                                                      48784600
&ZOPN                 SETA  &ZOPN+1                                     48785500
&ZOPL(&ZOPN)          SETC  ' '                                         48786400
&ZOPO(&ZOPN)          SETC  'MVC'                                       48787300
&ZOPV(&ZOPN)          SETC  '12(4,1),&ZCGPR'                            48788200
&ZOPD(&ZOPN)          SETC  '++ &ZXBKLG_NUM XBKLG_NUM'                  48789100
.*                                                                      48790000
.ZI20E                ANOP  ,                                           48826700
.*-------------------------------------------------------------------   48863400
.***AI.L18  XCN CL8                                                     48863500
         AIF   ('&XCN' NE 'ANY_CONS').ZI21                              48863600
                      AIF   ('&XMFSCK' NE 'COMPLETE').ZI21  CK *        48863700
&ZXCN                 SETC  ''             RESET INPUT/OUTPUT           48863800
.ZI21                 ANOP  ,                                           48863900
.*-------------------------------------------------------------------   48864000
.***AI.L25  XCN CL8                                                     48864100
                      AIF   ('&ZXCN' EQ '').ZI21E                       48864200
                      AIF   ('&ZXCN' EQ 'OUTPUT').ZI21E                 48864300
&ZCGPR                SETC  '&XCN'                                      48864400
         AIF   ('&XCN' NE 'ANY_CONS').ZI21A                             48864500
         AIF   ('&XMFSCK' EQ 'COMPLETE').ZI21E                          48864600
.*                                                                      48864700
&ZCGPR                SETC  '=XL8''00'''                                48864800
.ZI21A                ANOP  ,                                           48864900
.*                                                                      48865000
                      AIF   ('&XCN'(1,1) NE '(').ZI21B                  48865100
&ZCGPR   SETC  '0('.'&XCN'(2,K'&XCN-2).')'                              48865200
.ZI21B                ANOP  ,                                           48865300
.*                                                                      48865400
&ZOPN                 SETA  &ZOPN+1                                     48865500
&ZOPL(&ZOPN)          SETC  ' '                                         48865600
&ZOPO(&ZOPN)          SETC  'MVC'                                       48865700
&ZOPV(&ZOPN)          SETC  '16(8,1),&ZCGPR'                            48866600
&ZOPD(&ZOPN)          SETC  '++ &ZXCN XCN'                              48867600
.*                                                                      48868600
.ZI21E                ANOP  ,                                           48869600
.*-------------------------------------------------------------------   48869700
.***AI.L18  XSYS CL8                                                    48869800
         AIF   ('&XSYS' NE 'ANY_SYS').ZI22                              48869900
                      AIF   ('&XMFSCK' NE 'COMPLETE').ZI22  CK *        48870000
&ZXSYS                SETC  ''             RESET INPUT/OUTPUT           48870100
.ZI22                 ANOP  ,                                           48870200
.*-------------------------------------------------------------------   48870600
.***AI.L25  XSYS CL8                                                    48871600
                      AIF   ('&ZXSYS' EQ '').ZI22E                      48872600
                      AIF   ('&ZXSYS' EQ 'OUTPUT').ZI22E                48873600
&ZCGPR                SETC  '&XSYS'                                     48874600
         AIF   ('&XSYS' NE 'ANY_SYS').ZI22A                             48874700
         AIF   ('&XMFSCK' EQ 'COMPLETE').ZI22E                          48874800
.*                                                                      48874900
&ZCGPR                SETC  '=XL8''00'''                                48875000
.ZI22A                ANOP  ,                                           48875100
.*                                                                      48875600
                      AIF   ('&XSYS'(1,1) NE '(').ZI22B                 48876600
&ZCGPR   SETC  '0('.'&XSYS'(2,K'&XSYS-2).')'                            48877600
.ZI22B                ANOP  ,                                           48879600
.*                                                                      48889600
&ZOPN                 SETA  &ZOPN+1                                     48890600
&ZOPL(&ZOPN)          SETC  ' '                                         48891600
&ZOPO(&ZOPN)          SETC  'MVC'                                       48892600
&ZOPV(&ZOPN)          SETC  '24(8,1),&ZCGPR'                            48893600
&ZOPD(&ZOPN)          SETC  '++ &ZXSYS XSYS'                            48894600
.*                                                                      48895600
.ZI22E                ANOP  ,                                           48896600
.*-------------------------------------------------------------------   48896700
.***AI.L18  XKEY CL8                                                    48896800
         AIF   ('&XKEY' NE 'ANY_KEY').ZI23                              48896900
                      AIF   ('&XMFSCK' NE 'COMPLETE').ZI23  CK *        48897000
&ZXKEY                SETC  ''             RESET INPUT/OUTPUT           48897100
.ZI23                 ANOP  ,                                           48897200
.*-------------------------------------------------------------------   48897600
.***AI.L25  XKEY CL8                                                    48898600
                      AIF   ('&ZXKEY' EQ '').ZI23E                      48899600
                      AIF   ('&ZXKEY' EQ 'OUTPUT').ZI23E                48900600
&ZCGPR                SETC  '&XKEY'                                     48901600
         AIF   ('&XKEY' NE 'ANY_KEY').ZI23A                             48901700
         AIF   ('&XMFSCK' EQ 'COMPLETE').ZI23E                          48901800
.*                                                                      48901900
&ZCGPR                SETC  '=XL8''00'''                                48902000
.ZI23A                ANOP  ,                                           48902100
.*                                                                      48902600
                      AIF   ('&XKEY'(1,1) NE '(').ZI23B                 48903600
&ZCGPR   SETC  '0('.'&XKEY'(2,K'&XKEY-2).')'                            48904600
.ZI23B                ANOP  ,                                           48906600
.*                                                                      48916600
&ZOPN                 SETA  &ZOPN+1                                     48917600
&ZOPL(&ZOPN)          SETC  ' '                                         48918600
&ZOPO(&ZOPN)          SETC  'MVC'                                       48919600
&ZOPV(&ZOPN)          SETC  '32(8,1),&ZCGPR'                            48920600
&ZOPD(&ZOPN)          SETC  '++ &ZXKEY XKEY'                            48921600
.*                                                                      48922600
.ZI23E                ANOP  ,                                           48923600
.*-------------------------------------------------------------------   48924600
.***AI.L05 XAUTH BL2                                                    48925600
&ZW                   SETC  ''                                          48926600
&ZCLNG                SETC  ''             RESET BIT ON FLAG            48927600
&ZMS                  SETC  ''                                          48928600
&ZC                   SETC  ''                                          48929600
.*-------------------------------------------------------------------   48930600
.***AI.L08 XAUTH "ANY"                                                  48931600
.***      BL2'1XXXXXXXXXXXXXXX'                                         48932100
         AIF   ('&XAUTH' NE 'ANY').ZI25A                                48932700
&ZW                   SETC  '&ZW.1'                                     48932800
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              48932900
&ZMS                  SETC  '&ZMS.1'                                    48933000
                      AGO   .ZI25C                                      48933100
.*                                                                      48933200
.ZI25A                ANOP  ,                                           48933300
&ZW                   SETC  '&ZW.0'                                     48933400
         AIF   ('&ZXAUTH' EQ '').ZI25B                                  48933500
&ZMS                  SETC  '&ZMS.0'                                    48933600
&ZC                   SETC  'YES'          SET BIT OFF FLAG             48933700
                      AGO   .ZI25C                                      48933800
.*                                                                      48933900
.ZI25B                ANOP  ,                                           48934000
&ZMS                  SETC  '&ZMS.1'                                    48934100
.ZI25C                ANOP  ,                                           48934200
.*-------------------------------------------------------------------   48934300
.***AI.L08 XAUTH "MASTER"                                               48934400
.***      BL2'X1XXXXXXXXXXXXXX'                                         48934500
         AIF   ('&XAUTH' NE 'MASTER').ZI26A                             48934600
&ZW                   SETC  '&ZW.1'                                     48934700
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              48934800
&ZMS                  SETC  '&ZMS.1'                                    48934900
                      AGO   .ZI26C                                      48935000
.*                                                                      48935100
.ZI26A                ANOP  ,                                           48935200
&ZW                   SETC  '&ZW.0'                                     48935300
         AIF   ('&ZXAUTH' EQ '').ZI26B                                  48935400
&ZMS                  SETC  '&ZMS.0'                                    48935500
&ZC                   SETC  'YES'          SET BIT OFF FLAG             48935600
                      AGO   .ZI26C                                      48935700
.*                                                                      48935800
.ZI26B                ANOP  ,                                           48935900
&ZMS                  SETC  '&ZMS.1'                                    48936000
.ZI26C                ANOP  ,                                           48936100
.*-------------------------------------------------------------------   48936200
.***AI.L08 XAUTH "SYS"                                                  48936300
.***      BL2'XX1XXXXXXXXXXXXX'                                         48936400
         AIF   ('&XAUTH' NE 'SYS').ZI27A                                48936500
&ZW                   SETC  '&ZW.1'                                     48936600
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              48936700
&ZMS                  SETC  '&ZMS.1'                                    48936800
                      AGO   .ZI27C                                      48936900
.*                                                                      48937000
.ZI27A                ANOP  ,                                           48937100
&ZW                   SETC  '&ZW.0'                                     48937200
         AIF   ('&ZXAUTH' EQ '').ZI27B                                  48937300
&ZMS                  SETC  '&ZMS.0'                                    48937400
&ZC                   SETC  'YES'          SET BIT OFF FLAG             48937500
                      AGO   .ZI27C                                      48937600
.*                                                                      48937700
.ZI27B                ANOP  ,                                           48937800
&ZMS                  SETC  '&ZMS.1'                                    48937900
.ZI27C                ANOP  ,                                           48938000
.*-------------------------------------------------------------------   48938100
.***AI.L08 XAUTH "IO"                                                   48938200
.***      BL2'XXX1XXXXXXXXXXXX'                                         48938300
         AIF   ('&XAUTH' NE 'IO').ZI28A                                 48938400
&ZW                   SETC  '&ZW.1'                                     48938500
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              48939400
&ZMS                  SETC  '&ZMS.1'                                    48944800
                      AGO   .ZI28C                                      48951100
.*                                                                      48957400
.ZI28A                ANOP  ,                                           48977600
&ZW                   SETC  '&ZW.0'                                     48977800
         AIF   ('&ZXAUTH' EQ '').ZI28B                                  48978000
&ZMS                  SETC  '&ZMS.0'                                    48978200
&ZC                   SETC  'YES'          SET BIT OFF FLAG             48978300
                      AGO   .ZI28C                                      48978400
.*                                                                      48978500
.ZI28B                ANOP  ,                                           48978600
&ZMS                  SETC  '&ZMS.1'                                    48978700
.ZI28C                ANOP  ,                                           48978800
.*-------------------------------------------------------------------   48978900
.***AI.L08 XAUTH "CONS"                                                 48979100
.***      BL2'XXXX1XXXXXXXXXXX'                                         48979300
         AIF   ('&XAUTH' NE 'CONS').ZI29A                               48979500
&ZW                   SETC  '&ZW.1'                                     48979700
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              48979800
&ZMS                  SETC  '&ZMS.1'                                    48979900
                      AGO   .ZI29C                                      48980000
.*                                                                      48980100
.ZI29A                ANOP  ,                                           48980200
&ZW                   SETC  '&ZW.0'                                     48980300
         AIF   ('&ZXAUTH' EQ '').ZI29B                                  48980400
&ZMS                  SETC  '&ZMS.0'                                    48980500
&ZC                   SETC  'YES'          SET BIT OFF FLAG             48980600
                      AGO   .ZI29C                                      48980700
.*                                                                      48980800
.ZI29B                ANOP  ,                                           48980900
&ZMS                  SETC  '&ZMS.1'                                    48981000
.ZI29C                ANOP  ,                                           48981100
.*-------------------------------------------------------------------   48981200
.***AI.L08 XAUTH "INFO"                                                 48981300
.***      BL2'XXXXX1XXXXXXXXXX'                                         48981400
         AIF   ('&XAUTH' NE 'INFO').ZI30A                               48981500
&ZW                   SETC  '&ZW.1'                                     48981600
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              48981700
&ZMS                  SETC  '&ZMS.1'                                    48981800
                      AGO   .ZI30C                                      48981900
.*                                                                      48982000
.ZI30A                ANOP  ,                                           48982100
&ZW                   SETC  '&ZW.0'                                     48982200
         AIF   ('&ZXAUTH' EQ '').ZI30B                                  48982300
&ZMS                  SETC  '&ZMS.0'                                    48982400
&ZC                   SETC  'YES'          SET BIT OFF FLAG             48982500
                      AGO   .ZI30C                                      48982600
.*                                                                      48982700
.ZI30B                ANOP  ,                                           48982800
&ZMS                  SETC  '&ZMS.1'                                    48982900
.ZI30C                ANOP  ,                                           48983000
.*-------------------------------------------------------------------   48983100
.***AI.L08 XAUTH "ALL"                                                  48983200
.***      BL2'XXXXXX1XXXXXXXXX'                                         48983300
         AIF   ('&XAUTH' NE 'ALL').ZI31A                                48983400
&ZW                   SETC  '&ZW.1'                                     48983500
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              48983600
&ZMS                  SETC  '&ZMS.1'                                    48983700
                      AGO   .ZI31C                                      48983800
.*                                                                      48983900
.ZI31A                ANOP  ,                                           48984000
&ZW                   SETC  '&ZW.0'                                     48984100
         AIF   ('&ZXAUTH' EQ '').ZI31B                                  48984200
&ZMS                  SETC  '&ZMS.0'                                    48984300
&ZC                   SETC  'YES'          SET BIT OFF FLAG             48984400
                      AGO   .ZI31C                                      48984500
.*                                                                      48984600
.ZI31B                ANOP  ,                                           48984700
&ZMS                  SETC  '&ZMS.1'                                    48984800
.ZI31C                ANOP  ,                                           48984900
.*-------------------------------------------------------------------   48985000
.***AI.L08 XAUTH "SYSONLY"                                              48985100
.***      BL2'XXXXXXX1XXXXXXXX'                                         48985200
         AIF   ('&XAUTH' NE 'SYSONLY').ZI32A                            48985300
&ZW                   SETC  '&ZW.1'                                     48985400
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              48985500
&ZMS                  SETC  '&ZMS.1'                                    48985600
                      AGO   .ZI32C                                      48985700
.*                                                                      48985800
.ZI32A                ANOP  ,                                           48985900
&ZW                   SETC  '&ZW.0'                                     48986000
         AIF   ('&ZXAUTH' EQ '').ZI32B                                  48986100
&ZMS                  SETC  '&ZMS.0'                                    48986200
&ZC                   SETC  'YES'          SET BIT OFF FLAG             48986300
                      AGO   .ZI32C                                      48986400
.*                                                                      48986500
.ZI32B                ANOP  ,                                           48986600
&ZMS                  SETC  '&ZMS.1'                                    48986700
.ZI32C                ANOP  ,                                           48986800
.*-------------------------------------------------------------------   48986900
.***AI.L08 XAUTH "IOONLY"                                               48987000
.***      BL2'XXXXXXXX1XXXXXXX'                                         48987100
         AIF   ('&XAUTH' NE 'IOONLY').ZI33A                             48987200
&ZW                   SETC  '&ZW.1'                                     48987300
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              48987400
&ZMS                  SETC  '&ZMS.1'                                    48987500
                      AGO   .ZI33C                                      48987600
.*                                                                      48987700
.ZI33A                ANOP  ,                                           48987800
&ZW                   SETC  '&ZW.0'                                     48987900
         AIF   ('&ZXAUTH' EQ '').ZI33B                                  48988000
&ZMS                  SETC  '&ZMS.0'                                    48988100
&ZC                   SETC  'YES'          SET BIT OFF FLAG             48988200
                      AGO   .ZI33C                                      48988300
.*                                                                      48988400
.ZI33B                ANOP  ,                                           48988500
&ZMS                  SETC  '&ZMS.1'                                    48988600
.ZI33C                ANOP  ,                                           48988700
.*-------------------------------------------------------------------   48988800
.***AI.L08 XAUTH "CONSONLY"                                             48988900
.***      BL2'XXXXXXXXX1XXXXXX'                                         48989000
         AIF   ('&XAUTH' NE 'CONSONLY').ZI34A                           48989100
&ZW                   SETC  '&ZW.1'                                     48989200
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              48989300
&ZMS                  SETC  '&ZMS.1'                                    48989400
                      AGO   .ZI34C                                      48989500
.*                                                                      48989600
.ZI34A                ANOP  ,                                           48989700
&ZW                   SETC  '&ZW.0'                                     48989800
         AIF   ('&ZXAUTH' EQ '').ZI34B                                  48989900
&ZMS                  SETC  '&ZMS.0'                                    48990000
&ZC                   SETC  'YES'          SET BIT OFF FLAG             48990100
                      AGO   .ZI34C                                      48990200
.*                                                                      48990300
.ZI34B                ANOP  ,                                           48990400
&ZMS                  SETC  '&ZMS.1'                                    48990500
.ZI34C                ANOP  ,                                           48990600
.*-------------------------------------------------------------------   48990700
.***AI.L08 XAUTH "INFOONLY"                                             48990800
.***      BL2'XXXXXXXXXX1XXXXX'                                         48990900
         AIF   ('&XAUTH' NE 'INFOONLY').ZI35A                           48991000
&ZW                   SETC  '&ZW.1'                                     48991100
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              48991200
&ZMS                  SETC  '&ZMS.1'                                    48991300
                      AGO   .ZI35C                                      48991400
.*                                                                      48991500
.ZI35A                ANOP  ,                                           48991600
&ZW                   SETC  '&ZW.0'                                     48991700
         AIF   ('&ZXAUTH' EQ '').ZI35B                                  48991800
&ZMS                  SETC  '&ZMS.0'                                    48991900
&ZC                   SETC  'YES'          SET BIT OFF FLAG             48992000
                      AGO   .ZI35C                                      48992100
.*                                                                      48992200
.ZI35B                ANOP  ,                                           48992300
&ZMS                  SETC  '&ZMS.1'                                    48992400
.ZI35C                ANOP  ,                                           48992500
.*-------------------------------------------------------------------   48992600
.***AI.L08 XAUTH "ALLONLY"                                              48992700
.***      BL2'XXXXXXXXXXX1XXXX'                                         48992800
         AIF   ('&XAUTH' NE 'ALLONLY').ZI36A                            48992900
&ZW                   SETC  '&ZW.10000'                                 48993000
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              48993100
&ZMS                  SETC  '&ZMS.11111'                                48993200
                      AGO   .ZI36C                                      48993300
.*                                                                      48993400
.ZI36A                ANOP  ,                                           48993500
&ZW                   SETC  '&ZW.00000'                                 48993600
         AIF   ('&ZXAUTH' EQ '').ZI36B                                  48993700
&ZMS                  SETC  '&ZMS.01111'                                48993800
&ZC                   SETC  'YES'          SET BIT OFF FLAG             48993900
                      AGO   .ZI36C                                      48994000
.*                                                                      48994100
.ZI36B                ANOP  ,                                           48994200
&ZMS                  SETC  '&ZMS.11111'                                48994300
.ZI36C                ANOP  ,                                           48994400
.*-------------------------------------------------------------------   48994500
.***AI.L10 XAUTH BL2                                                    48994600
                      AIF   ('&XMFSCK' NE 'NOCHECK').ZI36D              48994700
                      AIF   ('&ZC' NE 'YES').ZI36D                      48994800
&ZOPN                 SETA  &ZOPN+1                                     48994900
&ZOPL(&ZOPN)          SETC  ' '                                         48995000
&ZOPO(&ZOPN)          SETC  'NC'                                        48995100
&ZOPV(&ZOPN)          SETC  '40(2,1),=BL2''&ZMS'''                      48995200
&ZOPD(&ZOPN)          SETC  '++ INPUT BL2'                              48995300
.ZI36D                ANOP  ,                                           48995400
                      AIF   ('&ZCLNG' NE 'YES').ZI36E  ALL ZERO BITS    48995500
&ZOPN                 SETA  &ZOPN+1                                     48995600
&ZOPL(&ZOPN)          SETC  ' '                                         48995700
&ZOPO(&ZOPN)          SETC  'OC'                                        48995800
&ZOPV(&ZOPN)          SETC  '40(2,1),=BL2''&ZW'''                       48995900
&ZOPD(&ZOPN)          SETC  '++ INPUT BL2'                              48996000
.ZI36E                ANOP  ,                                           48996100
.*-------------------------------------------------------------------   48996200
.***AI.L05 XATTR BL2                                                    48996300
&ZW                   SETC  ''                                          48996400
&ZCLNG                SETC  ''             RESET BIT ON FLAG            48996500
&ZMS                  SETC  ''                                          48996600
&ZC                   SETC  ''                                          48997000
.*-------------------------------------------------------------------   48997900
.***AI.L08 XATTR "ANY"                                                  48998800
.***      BL2'1XXXXXXXXXXXXXXX'                                         48999700
         AIF   ('&XATTR' NE 'ANY').ZI38A                                49049700
&ZW                   SETC  '&ZW.1'                                     49136400
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              49136500
&ZMS                  SETC  '&ZMS.1'                                    49136600
                      AGO   .ZI38C                                      49136700
.*                                                                      49136800
.ZI38A                ANOP  ,                                           49136900
&ZW                   SETC  '&ZW.0'                                     49137000
         AIF   ('&ZXATTR' EQ '').ZI38B                                  49137100
&ZMS                  SETC  '&ZMS.0'                                    49137200
&ZC                   SETC  'YES'          SET BIT OFF FLAG             49137300
                      AGO   .ZI38C                                      49137400
.*                                                                      49137500
.ZI38B                ANOP  ,                                           49137600
&ZMS                  SETC  '&ZMS.1'                                    49137700
.ZI38C                ANOP  ,                                           49137800
.*-------------------------------------------------------------------   49137900
.***AI.L08 XATTR "ROUT"                                                 49138000
.***      BL2'X1XXXXXXXXXXXXXX'                                         49138100
         AIF   ('&XATTR' NE 'ROUT').ZI39A                               49138200
&ZW                   SETC  '&ZW.1'                                     49138300
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              49138400
&ZMS                  SETC  '&ZMS.1'                                    49138500
                      AGO   .ZI39C                                      49138600
.*                                                                      49138700
.ZI39A                ANOP  ,                                           49138800
&ZW                   SETC  '&ZW.0'                                     49138900
         AIF   ('&ZXATTR' EQ '').ZI39B                                  49139000
&ZMS                  SETC  '&ZMS.0'                                    49139100
&ZC                   SETC  'YES'          SET BIT OFF FLAG             49139200
                      AGO   .ZI39C                                      49139300
.*                                                                      49139400
.ZI39B                ANOP  ,                                           49139500
&ZMS                  SETC  '&ZMS.1'                                    49139600
.ZI39C                ANOP  ,                                           49139700
.*-------------------------------------------------------------------   49139800
.***AI.L08 XATTR "UD"                                                   49139900
.***      BL2'XX1XXXXXXXXXXXXX'                                         49140000
         AIF   ('&XATTR' NE 'UD').ZI40A                                 49140100
&ZW                   SETC  '&ZW.1'                                     49140200
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              49140300
&ZMS                  SETC  '&ZMS.1'                                    49140400
                      AGO   .ZI40C                                      49140500
.*                                                                      49140600
.ZI40A                ANOP  ,                                           49140700
&ZW                   SETC  '&ZW.0'                                     49140800
         AIF   ('&ZXATTR' EQ '').ZI40B                                  49140900
&ZMS                  SETC  '&ZMS.0'                                    49141000
&ZC                   SETC  'YES'          SET BIT OFF FLAG             49141100
                      AGO   .ZI40C                                      49141200
.*                                                                      49141300
.ZI40B                ANOP  ,                                           49141400
&ZMS                  SETC  '&ZMS.1'                                    49141500
.ZI40C                ANOP  ,                                           49141600
.*-------------------------------------------------------------------   49141700
.***AI.L08 XATTR "UDN"                                                  49141800
.***      BL2'XXX1XXXXXXXXXXXX'                                         49141900
         AIF   ('&XATTR' NE 'UDN').ZI41A                                49142000
&ZW                   SETC  '&ZW.1'                                     49142100
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              49142200
&ZMS                  SETC  '&ZMS.1'                                    49142300
                      AGO   .ZI41C                                      49142400
.*                                                                      49142500
.ZI41A                ANOP  ,                                           49142600
&ZW                   SETC  '&ZW.0'                                     49142700
         AIF   ('&ZXATTR' EQ '').ZI41B                                  49142800
&ZMS                  SETC  '&ZMS.0'                                    49142900
&ZC                   SETC  'YES'          SET BIT OFF FLAG             49143000
                      AGO   .ZI41C                                      49143100
.*                                                                      49143200
.ZI41B                ANOP  ,                                           49143300
&ZMS                  SETC  '&ZMS.1'                                    49143400
.ZI41C                ANOP  ,                                           49143500
.*-------------------------------------------------------------------   49143600
.***AI.L08 XATTR "HC"                                                   49143700
.***      BL2'XXXX1XXXXXXXXXXX'                                         49143800
         AIF   ('&XATTR' NE 'HC').ZI42A                                 49143900
&ZW                   SETC  '&ZW.1'                                     49144000
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              49144100
&ZMS                  SETC  '&ZMS.1'                                    49144200
                      AGO   .ZI42C                                      49144300
.*                                                                      49144400
.ZI42A                ANOP  ,                                           49144500
&ZW                   SETC  '&ZW.0'                                     49144600
         AIF   ('&ZXATTR' EQ '').ZI42B                                  49144700
&ZMS                  SETC  '&ZMS.0'                                    49144800
&ZC                   SETC  'YES'          SET BIT OFF FLAG             49144900
                      AGO   .ZI42C                                      49145000
.*                                                                      49145100
.ZI42B                ANOP  ,                                           49145200
&ZMS                  SETC  '&ZMS.1'                                    49145300
.ZI42C                ANOP  ,                                           49145400
.*-------------------------------------------------------------------   49145500
.***AI.L08 XATTR "AUTO"                                                 49145600
.***      BL2'XXXXX1XXXXXXXXXX'                                         49145700
         AIF   ('&XATTR' NE 'AUTO').ZI43A                               49145800
&ZW                   SETC  '&ZW.1'                                     49145900
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              49146000
&ZMS                  SETC  '&ZMS.1'                                    49146100
                      AGO   .ZI43C                                      49146200
.*                                                                      49146300
.ZI43A                ANOP  ,                                           49146400
&ZW                   SETC  '&ZW.0'                                     49146500
         AIF   ('&ZXATTR' EQ '').ZI43B                                  49146600
&ZMS                  SETC  '&ZMS.0'                                    49146700
&ZC                   SETC  'YES'          SET BIT OFF FLAG             49146800
                      AGO   .ZI43C                                      49146900
.*                                                                      49147000
.ZI43B                ANOP  ,                                           49147100
&ZMS                  SETC  '&ZMS.1'                                    49147200
.ZI43C                ANOP  ,                                           49147300
.*-------------------------------------------------------------------   49147400
.***AI.L08 XATTR "AUTON"                                                49147500
.***      BL2'XXXXXX1XXXXXXXXX'                                         49147600
         AIF   ('&XATTR' NE 'AUTON').ZI44A                              49147700
&ZW                   SETC  '&ZW.1'                                     49147800
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              49147900
&ZMS                  SETC  '&ZMS.1'                                    49148000
                      AGO   .ZI44C                                      49148100
.*                                                                      49148200
.ZI44A                ANOP  ,                                           49148300
&ZW                   SETC  '&ZW.0'                                     49148400
         AIF   ('&ZXATTR' EQ '').ZI44B                                  49148500
&ZMS                  SETC  '&ZMS.0'                                    49148600
&ZC                   SETC  'YES'          SET BIT OFF FLAG             49148700
                      AGO   .ZI44C                                      49148800
.*                                                                      49148900
.ZI44B                ANOP  ,                                           49149000
&ZMS                  SETC  '&ZMS.1'                                    49149100
.ZI44C                ANOP  ,                                           49149200
.*-------------------------------------------------------------------   49149300
.***AI.L08 XATTR "MN"                                                   49149400
.***      BL2'XXXXXXX1XXXXXXXX'                                         49149500
         AIF   ('&XATTR' NE 'MN').ZI45A                                 49149600
&ZW                   SETC  '&ZW.1'                                     49149700
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              49149800
&ZMS                  SETC  '&ZMS.1'                                    49149900
                      AGO   .ZI45C                                      49150000
.*                                                                      49150100
.ZI45A                ANOP  ,                                           49150200
&ZW                   SETC  '&ZW.0'                                     49150300
         AIF   ('&ZXATTR' EQ '').ZI45B                                  49150400
&ZMS                  SETC  '&ZMS.0'                                    49150500
&ZC                   SETC  'YES'          SET BIT OFF FLAG             49150600
                      AGO   .ZI45C                                      49150700
.*                                                                      49150800
.ZI45B                ANOP  ,                                           49150900
&ZMS                  SETC  '&ZMS.1'                                    49151000
.ZI45C                ANOP  ,                                           49151100
.*-------------------------------------------------------------------   49151200
.***AI.L08 XATTR "NONE"                                                 49151300
.***      BL2'XXXXXXXX1XXXXXXX'                                         49151400
         AIF   ('&XATTR' NE 'NONE').ZI46A                               49151500
&ZW                   SETC  '&ZW.1'                                     49151600
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              49151700
&ZMS                  SETC  '&ZMS.1'                                    49151800
                      AGO   .ZI46C                                      49151900
.*                                                                      49152000
.ZI46A                ANOP  ,                                           49152100
&ZW                   SETC  '&ZW.0'                                     49152200
         AIF   ('&ZXATTR' EQ '').ZI46B                                  49152300
&ZMS                  SETC  '&ZMS.0'                                    49152400
&ZC                   SETC  'YES'          SET BIT OFF FLAG             49152500
                      AGO   .ZI46C                                      49152600
.*                                                                      49152700
.ZI46B                ANOP  ,                                           49152800
&ZMS                  SETC  '&ZMS.1'                                    49152900
.ZI46C                ANOP  ,                                           49153000
.*-------------------------------------------------------------------   49153100
.***AI.L08 XATTR "YES"                                                  49153200
.***      BL2'XXXXXXXXX1XXXXXX'                                         49153300
         AIF   ('&XATTR' NE 'YES').ZI47A                                49153400
&ZW                   SETC  '&ZW.1000000'                               49153500
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              49153600
&ZMS                  SETC  '&ZMS.1111111'                              49153700
                      AGO   .ZI47C                                      49153800
.*                                                                      49153900
.ZI47A                ANOP  ,                                           49154000
&ZW                   SETC  '&ZW.0000000'                               49154100
         AIF   ('&ZXATTR' EQ '').ZI47B                                  49154200
&ZMS                  SETC  '&ZMS.0111111'                              49154300
&ZC                   SETC  'YES'          SET BIT OFF FLAG             49154400
                      AGO   .ZI47C                                      49154500
.*                                                                      49154600
.ZI47B                ANOP  ,                                           49154700
&ZMS                  SETC  '&ZMS.1111111'                              49154800
.ZI47C                ANOP  ,                                           49154900
.*-------------------------------------------------------------------   49155000
.***AI.L10 XATTR BL2                                                    49155100
                      AIF   ('&XMFSCK' NE 'NOCHECK').ZI47D              49155200
                      AIF   ('&ZC' NE 'YES').ZI47D                      49155300
&ZOPN                 SETA  &ZOPN+1                                     49155400
&ZOPL(&ZOPN)          SETC  ' '                                         49155500
&ZOPO(&ZOPN)          SETC  'NC'                                        49155600
&ZOPV(&ZOPN)          SETC  '42(2,1),=BL2''&ZMS'''                      49155700
&ZOPD(&ZOPN)          SETC  '++ INPUT BL2'                              49155800
.ZI47D                ANOP  ,                                           49155900
                      AIF   ('&ZCLNG' NE 'YES').ZI47E  ALL ZERO BITS    49156000
&ZOPN                 SETA  &ZOPN+1                                     49156100
&ZOPL(&ZOPN)          SETC  ' '                                         49156200
&ZOPO(&ZOPN)          SETC  'OC'                                        49156300
&ZOPV(&ZOPN)          SETC  '42(2,1),=BL2''&ZW'''                       49156400
&ZOPD(&ZOPN)          SETC  '++ INPUT BL2'                              49156500
.ZI47E                ANOP  ,                                           49156600
.*-------------------------------------------------------------------   49156700
.***AI.L05 XDOM BL1                                                     49156800
&ZW                   SETC  ''                                          49156900
&ZCLNG                SETC  ''             RESET BIT ON FLAG            49157000
&ZMS                  SETC  ''                                          49157100
&ZC                   SETC  ''                                          49157200
.*-------------------------------------------------------------------   49157300
.***AI.L08 XDOM "ANY"                                                   49157400
.***      BL1'1XXXXXXX'                                                 49158100
         AIF   ('&XDOM' NE 'ANY').ZI49A                                 49158200
&ZW                   SETC  '&ZW.1'                                     49158300
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              49158400
&ZMS                  SETC  '&ZMS.1'                                    49158500
                      AGO   .ZI49C                                      49158600
.*                                                                      49158700
.ZI49A                ANOP  ,                                           49158800
&ZW                   SETC  '&ZW.0'                                     49158900
         AIF   ('&ZXDOM' EQ '').ZI49B                                   49159000
&ZMS                  SETC  '&ZMS.0'                                    49159100
&ZC                   SETC  'YES'          SET BIT OFF FLAG             49159200
                      AGO   .ZI49C                                      49159300
.*                                                                      49159400
.ZI49B                ANOP  ,                                           49159500
&ZMS                  SETC  '&ZMS.1'                                    49159600
.ZI49C                ANOP  ,                                           49159700
.*-------------------------------------------------------------------   49159800
.***AI.L08 XDOM "NORMAL"                                                49159900
.***      BL1'X1XXXXXX'                                                 49160000
         AIF   ('&XDOM' NE 'NORMAL').ZI50A                              49162100
&ZW                   SETC  '&ZW.1'                                     49164300
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              49167400
&ZMS                  SETC  '&ZMS.1'                                    49170500
                      AGO   .ZI50C                                      49173600
.*                                                                      49176700
.ZI50A                ANOP  ,                                           49179800
&ZW                   SETC  '&ZW.0'                                     49182900
         AIF   ('&ZXDOM' EQ '').ZI50B                                   49186000
&ZMS                  SETC  '&ZMS.0'                                    49189100
&ZC                   SETC  'YES'          SET BIT OFF FLAG             49192200
                      AGO   .ZI50C                                      49195300
.*                                                                      49198400
.ZI50B                ANOP  ,                                           49201500
&ZMS                  SETC  '&ZMS.1'                                    49204600
.ZI50C                ANOP  ,                                           49207700
.*-------------------------------------------------------------------   49210800
.***AI.L08 XDOM "ALL"                                                   49213900
.***      BL1'XX1XXXXX'                                                 49217000
         AIF   ('&XDOM' NE 'ALL').ZI51A                                 49221000
&ZW                   SETC  '&ZW.1'                                     49225100
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              49225200
&ZMS                  SETC  '&ZMS.1'                                    49225300
                      AGO   .ZI51C                                      49228200
.*                                                                      49231200
.ZI51A                ANOP  ,                                           49231300
&ZW                   SETC  '&ZW.0'                                     49231400
         AIF   ('&ZXDOM' EQ '').ZI51B                                   49231500
&ZMS                  SETC  '&ZMS.0'                                    49231600
&ZC                   SETC  'YES'          SET BIT OFF FLAG             49231700
                      AGO   .ZI51C                                      49231800
.*                                                                      49231900
.ZI51B                ANOP  ,                                           49232000
&ZMS                  SETC  '&ZMS.1'                                    49232100
.ZI51C                ANOP  ,                                           49232200
.*-------------------------------------------------------------------   49232300
.***AI.L08 XDOM "NONE"                                                  49232400
.***      BL1'XXX1XXXX'                                                 49232500
         AIF   ('&XDOM' NE 'NONE').ZI52A                                49232600
&ZW                   SETC  '&ZW.1'                                     49232700
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              49232800
&ZMS                  SETC  '&ZMS.1'                                    49232900
                      AGO   .ZI52C                                      49233000
.*                                                                      49233100
.ZI52A                ANOP  ,                                           49233200
&ZW                   SETC  '&ZW.0'                                     49233300
         AIF   ('&ZXDOM' EQ '').ZI52B                                   49233400
&ZMS                  SETC  '&ZMS.0'                                    49233500
&ZC                   SETC  'YES'          SET BIT OFF FLAG             49233600
                      AGO   .ZI52C                                      49233700
.*                                                                      49233800
.ZI52B                ANOP  ,                                           49233900
&ZMS                  SETC  '&ZMS.1'                                    49234000
.ZI52C                ANOP  ,                                           49234100
.*-------------------------------------------------------------------   49234200
.***AI.L08 XDOM "YES"                                                   49234300
.***      BL1'XXXX1XXX'                                                 49234400
         AIF   ('&XDOM' NE 'YES').ZI53A                                 49234500
&ZW                   SETC  '&ZW.1000'                                  49234600
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              49234700
&ZMS                  SETC  '&ZMS.1111'                                 49234800
                      AGO   .ZI53C                                      49234900
.*                                                                      49235000
.ZI53A                ANOP  ,                                           49235100
&ZW                   SETC  '&ZW.0000'                                  49235200
         AIF   ('&ZXDOM' EQ '').ZI53B                                   49235300
&ZMS                  SETC  '&ZMS.0111'                                 49235400
&ZC                   SETC  'YES'          SET BIT OFF FLAG             49235500
                      AGO   .ZI53C                                      49235600
.*                                                                      49235700
.ZI53B                ANOP  ,                                           49235800
&ZMS                  SETC  '&ZMS.1111'                                 49235900
.ZI53C                ANOP  ,                                           49236000
.*-------------------------------------------------------------------   49236100
.***AI.L11 XDOM BL1                                                     49238100
                      AIF   ('&XMFSCK' NE 'NOCHECK').ZI53D              49238200
                      AIF   ('&ZC' NE 'YES').ZI53D                      49238300
&ZOPN                 SETA  &ZOPN+1                                     49238400
&ZOPL(&ZOPN)          SETC  ' '                                         49238500
&ZOPO(&ZOPN)          SETC  'NI'                                        49238600
&ZOPV(&ZOPN)          SETC  '44(1),B''&ZMS'''                           49238700
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              49238800
.ZI53D                ANOP  ,                                           49238900
                      AIF   ('&ZCLNG' NE 'YES').ZI53E  ALL ZERO BITS    49239000
&ZOPN                 SETA  &ZOPN+1                                     49239100
&ZOPL(&ZOPN)          SETC  ' '                                         49239200
&ZOPO(&ZOPN)          SETC  'OI'                                        49239300
&ZOPV(&ZOPN)          SETC  '44(1),B''&ZW'''                            49239400
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              49239500
.ZI53E                ANOP  ,                                           49239700
.*-------------------------------------------------------------------   49240000
.***AI.L25  XBUFPTR AL4                                                 49240900
                      AIF   ('&ZXBUFPTR' EQ '').ZI55E                   49241800
                      AIF   ('&ZXBUFPTR' EQ 'OUTPUT').ZI55E             49242700
&ZCGPR                SETC  '&XBUFPTR'                                  49243600
         AIF   ('&XBUFPTR' NE '0').ZI55A                                49244500
         AIF   ('&XMFSCK' EQ 'COMPLETE').ZI55E                          49245400
.*                                                                      49246300
&ZCGPR                SETC  '=XL4''00'''                                49247200
.ZI55A                ANOP  ,                                           49248100
.*                                                                      49249000
                      AIF   ('&XBUFPTR'(1,1) NE '(').ZI55B              49249900
&ZCGPR   SETC  '0('.'&XBUFPTR'(2,K'&XBUFPTR-2).')'                      49250800
                      AGO   .ZI55D                                      49251700
.ZI55B                ANOP  ,                                           49252600
.*                                                                      49253500
&ZC                   SETC  '&XBUFPTR'(1,1)                             49254400
                      AIF   (T'&ZC NE 'N').ZI55D                        49255300
&ZC                   SETC  '&XBUFPTR'                                  49256200
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI55D               49257100
&ZCGPR                SETC  '=AL4(&XBUFPTR)'                            49258000
.*                                                                      49258900
.ZI55D                ANOP  ,                                           49264500
.*                                                                      49270200
&ZOPN                 SETA  &ZOPN+1                                     49270300
&ZOPL(&ZOPN)          SETC  ' '                                         49270400
&ZOPO(&ZOPN)          SETC  'MVC'                                       49270500
&ZOPV(&ZOPN)          SETC  '48(4,1),&ZCGPR'                            49270600
&ZOPD(&ZOPN)          SETC  '++ &ZXBUFPTR XBUFPTR'                      49270700
.*                                                                      49270800
.ZI55E                ANOP  ,                                           49270900
.*-------------------------------------------------------------------   49271000
.***AI.L25  XBUFSIZE F                                                  49271400
                      AIF   ('&ZXBUFSIZE' EQ '').ZI56E                  49271800
                      AIF   ('&ZXBUFSIZE' EQ 'OUTPUT').ZI56E            49272200
&ZCGPR                SETC  '&XBUFSIZE'                                 49272600
         AIF   ('&XBUFSIZE' NE '0').ZI56A                               49273000
         AIF   ('&XMFSCK' EQ 'COMPLETE').ZI56E                          49273400
.*                                                                      49274200
&ZCGPR                SETC  '=XL4''00'''                                49275100
.ZI56A                ANOP  ,                                           49276000
.*                                                                      49276900
                      AIF   ('&XBUFSIZE'(1,1) NE '(').ZI56B             49277800
&ZCGPR   SETC  '0('.'&XBUFSIZE'(2,K'&XBUFSIZE-2).')'                    49278700
                      AGO   .ZI56D                                      49279600
.ZI56B                ANOP  ,                                           49280500
.*                                                                      49281400
&ZC                   SETC  '&XBUFSIZE'(1,1)                            49282400
                      AIF   (T'&ZC NE 'N').ZI56D                        49283400
&ZC                   SETC  '&XBUFSIZE'                                 49284400
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI56D               49285400
&ZCGPR                SETC  '=FL4''&XBUFSIZE'''                         49286400
.*                                                                      49287400
.ZI56D                ANOP  ,                                           49288400
.*                                                                      49289500
&ZOPN                 SETA  &ZOPN+1                                     49290400
&ZOPL(&ZOPN)          SETC  ' '                                         49291300
&ZOPO(&ZOPN)          SETC  'MVC'                                       49292200
&ZOPV(&ZOPN)          SETC  '52(4,1),&ZCGPR'                            49293200
&ZOPD(&ZOPN)          SETC  '++ &ZXBUFSIZE XBUFSIZE'                    49294200
.*                                                                      49295200
.ZI56E                ANOP  ,                                           49296200
.*-------------------------------------------------------------------   49297200
.***AI.L25  XRECSIZE AL4                                                49297300
                      AIF   ('&ZXRECSIZE' EQ '').ZI57E                  49297400
                      AIF   ('&ZXRECSIZE' EQ 'OUTPUT').ZI57E            49297500
&ZCGPR                SETC  '&XRECSIZE'                                 49297600
.*                                                                      49297700
                      AIF   ('&XRECSIZE'(1,1) NE '(').ZI57B             49297800
&ZCGPR   SETC  '0('.'&XRECSIZE'(2,K'&XRECSIZE-2).')'                    49297900
                      AGO   .ZI57D                                      49298000
.ZI57B                ANOP  ,                                           49298100
.*                                                                      49298200
&ZC                   SETC  '&XRECSIZE'(1,1)                            49298300
                      AIF   (T'&ZC NE 'N').ZI57D                        49298400
&ZC                   SETC  '&XRECSIZE'                                 49298500
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI57D               49298600
&ZCGPR                SETC  '=AL4(&XRECSIZE)'                           49298700
.*                                                                      49298800
.ZI57D                ANOP  ,                                           49298900
.*                                                                      49299000
&ZOPN                 SETA  &ZOPN+1                                     49299100
&ZOPL(&ZOPN)          SETC  ' '                                         49299200
&ZOPO(&ZOPN)          SETC  'MVC'                                       49299300
&ZOPV(&ZOPN)          SETC  '56(4,1),&ZCGPR'                            49299400
&ZOPD(&ZOPN)          SETC  '++ &ZXRECSIZE XRECSIZE'                    49299500
.*                                                                      49299600
.ZI57E                ANOP  ,                                           49299700
.*-------------------------------------------------------------------   49299800
.***AI.L25  XCONSCNT AL4                                                49300400
                      AIF   ('&ZXCONSCNT' EQ '').ZI58E                  49301000
                      AIF   ('&ZXCONSCNT' EQ 'OUTPUT').ZI58E            49301600
&ZCGPR                SETC  '&XCONSCNT'                                 49302200
         AIF   ('&XCONSCNT' NE '0').ZI58A                               49302800
         AIF   ('&XMFSCK' EQ 'COMPLETE').ZI58E                          49303400
.*                                                                      49304200
&ZCGPR                SETC  '=XL4''00'''                                49305200
.ZI58A                ANOP  ,                                           49306200
.*                                                                      49307200
                      AIF   ('&XCONSCNT'(1,1) NE '(').ZI58B             49308200
&ZCGPR   SETC  '0('.'&XCONSCNT'(2,K'&XCONSCNT-2).')'                    49309200
                      AGO   .ZI58D                                      49310200
.ZI58B                ANOP  ,                                           49311200
.*                                                                      49312200
&ZC                   SETC  '&XCONSCNT'(1,1)                            49313200
                      AIF   (T'&ZC NE 'N').ZI58D                        49314200
&ZC                   SETC  '&XCONSCNT'                                 49315200
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI58D               49316200
&ZCGPR                SETC  '=AL4(&XCONSCNT)'                           49317200
.*                                                                      49318200
.ZI58D                ANOP  ,                                           49319200
.*                                                                      49320200
&ZOPN                 SETA  &ZOPN+1                                     49321200
&ZOPL(&ZOPN)          SETC  ' '                                         49322200
&ZOPO(&ZOPN)          SETC  'MVC'                                       49323200
&ZOPV(&ZOPN)          SETC  '60(4,1),&ZCGPR'                            49324200
&ZOPD(&ZOPN)          SETC  '++ &ZXCONSCNT XCONSCNT'                    49324300
.*                                                                      49324400
.ZI58E                ANOP  ,                                           49324500
.*-------------------------------------------------------------------   49324600
.***AI.L25  XTOKEN AL4                                                  49324700
                      AIF   ('&ZXTOKEN' EQ '').ZI59E                    49324800
                      AIF   ('&ZXTOKEN' EQ 'OUTPUT').ZI59E              49324900
&ZCGPR                SETC  '&XTOKEN'                                   49325000
         AIF   ('&XTOKEN' NE '0').ZI59A                                 49325100
         AIF   ('&XMFSCK' EQ 'COMPLETE').ZI59E                          49325200
.*                                                                      49325300
&ZCGPR                SETC  '=XL4''00'''                                49325400
.ZI59A                ANOP  ,                                           49325500
.*                                                                      49325600
                      AIF   ('&XTOKEN'(1,1) NE '(').ZI59B               49325700
&ZCGPR   SETC  '0('.'&XTOKEN'(2,K'&XTOKEN-2).')'                        49325800
                      AGO   .ZI59D                                      49325900
.ZI59B                ANOP  ,                                           49326000
.*                                                                      49326100
&ZC                   SETC  '&XTOKEN'(1,1)                              49326200
                      AIF   (T'&ZC NE 'N').ZI59D                        49326300
&ZC                   SETC  '&XTOKEN'                                   49326400
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI59D               49326500
&ZCGPR                SETC  '=AL4(&XTOKEN)'                             49326600
.*                                                                      49326700
.ZI59D                ANOP  ,                                           49326800
.*                                                                      49326900
&ZOPN                 SETA  &ZOPN+1                                     49327000
&ZOPL(&ZOPN)          SETC  ' '                                         49327100
&ZOPO(&ZOPN)          SETC  'MVC'                                       49327200
&ZOPV(&ZOPN)          SETC  '64(4,1),&ZCGPR'                            49327300
&ZOPD(&ZOPN)          SETC  '++ &ZXTOKEN XTOKEN'                        49327400
.*                                                                      49327500
.ZI59E                ANOP  ,                                           49327600
.*-------------------------------------------------------------------   49328200
&ZOPN1                SETA &ZOPN                                        49329100
.*-------------------------------------------------------------------   49330000
.***AI.C00 MF=M CHECK TO BYPASS INVOCATION                              49330900
                      AIF   ('&XMF' EQ 'M').ZMFLX  DONE IF MF=M         49331800
.*******************************************************************    49369900
.***  PROCESS IEEQEMCS OUTPUT PARAMETERS                                49374000
.*******************************************************************    49378100
                      ACTR  10000                                       49382200
.*******************************************************************    49446100
.***AO.X02  RETURN CODE PROCESSING                                      49446600
.*******************************************************************    49447100
                      AIF   (N'&RETCODE LE 0).ZMRETX                    49449400
                      AIF   ('&XRETCODE'(1,1) EQ '(').ZMRET2            49470300
                      AIF   ('&XRETCODE' EQ 'GPR15').ZMRETX             49491200
                      AIF   ('&XRETCODE' EQ 'REG15').ZMRETX             49512100
                      AIF   ('&XRETCODE' EQ 'R15').ZMRETX               49533000
                      AIF   ('&XRETCODE' EQ '15').ZMRETX                49553900
&ZOPN                 SETA  &ZOPN+1                                     49574800
&ZOPL(&ZOPN)          SETC  ' '                                         49595700
&ZOPO(&ZOPN)          SETC  'ST'                                        49616600
&ZOPV(&ZOPN)          SETC  '15,&XRETCODE'                              49637500
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        49658400
                      AGO   .ZMRETX                                     49679300
.*                                                                      49700200
.ZMRET2               ANOP  ,                                           49721100
&ZCGPR                SETC  '&XRETCODE'(2,K'&XRETCODE-2)                49742000
                      AIF   ('&ZCGPR' EQ 'GPR15').ZMRETX                49762900
                      AIF   ('&ZCGPR' EQ 'REG15').ZMRETX                49783800
                      AIF   ('&ZCGPR' EQ 'R15').ZMRETX                  49804700
                      AIF   ('&ZCGPR' EQ '15').ZMRETX                   49825600
&ZOPN                 SETA  &ZOPN+1                                     49846500
&ZOPL(&ZOPN)          SETC  ' '                                         49867400
&ZOPO(&ZOPN)          SETC  'LR'                                        49888300
&ZOPV(&ZOPN)          SETC  '&ZCGPR,15'                                 49909200
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        49930100
.ZMRETX               ANOP  ,                                           49951000
.*******************************************************************    49951500
.***AO.X03  REASON CODE PROCESSING                                      49952000
.*******************************************************************    49952500
                      AIF   (N'&RSNCODE LE 0).ZMRSNX                    49953000
                      AIF   ('&XRSNCODE'(1,1) EQ '(').ZMRSN2            49953500
                      AIF   ('&XRSNCODE' EQ 'GPR0').ZMRSNX              49954000
                      AIF   ('&XRSNCODE' EQ 'GPR00').ZMRSNX             49954500
                      AIF   ('&XRSNCODE' EQ 'REG0').ZMRSNX              49955000
                      AIF   ('&XRSNCODE' EQ 'REG00').ZMRSNX             49955500
                      AIF   ('&XRSNCODE' EQ 'R0').ZMRSNX                49956000
                      AIF   ('&XRSNCODE' EQ '0').ZMRSNX                 49956500
                      AIF   ('&XRSNCODE' EQ '00').ZMRSNX                49957000
&ZOPN                 SETA  &ZOPN+1                                     49957500
&ZOPL(&ZOPN)          SETC  ' '                                         49958000
&ZOPO(&ZOPN)          SETC  'ST'                                        49958500
&ZOPV(&ZOPN)          SETC  '0,&XRSNCODE'                               49959000
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        49959500
                      AGO   .ZMRSNX                                     49960000
.*                                                                      49960500
.ZMRSN2               ANOP  ,                                           49961000
&ZCGPR                SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                49961500
                      AIF   ('&ZCGPR' EQ 'GPR0').ZMRSNX                 49962000
                      AIF   ('&ZCGPR' EQ 'GPR00').ZMRSNX                49962500
                      AIF   ('&ZCGPR' EQ 'REG0').ZMRSNX                 49963000
                      AIF   ('&ZCGPR' EQ 'REG00').ZMRSNX                49963500
                      AIF   ('&ZCGPR' EQ 'R0').ZMRSNX                   49964000
                      AIF   ('&ZCGPR' EQ '0').ZMRSNX                    49964500
                      AIF   ('&ZCGPR' EQ '00').ZMRSNX                   49965000
&ZOPN                 SETA  &ZOPN+1                                     49965500
&ZOPL(&ZOPN)          SETC  ' '                                         49966000
&ZOPO(&ZOPN)          SETC  'LR'                                        49966500
&ZOPV(&ZOPN)          SETC  '&ZCGPR,0'                                  49967000
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        49967500
.ZMRSNX               ANOP  ,                                           49968000
.*******************************************************************    49971900
.***AO.X04  LABEL FOR MF=L PROCESSING                                   49992800
.*******************************************************************    50013700
.ZMFLX                ANOP  ,              MF=L PROCESSING              50034600
.*******************************************************************    50055500
.***AO.X05  FORMAT GENERATED INSTRUCTIONS                               50076400
.*******************************************************************    50097300
                      ACTR  10000                                       50118200
.*                                                                      50139100
                      LCLA  &ZLC           COLUMN POSITION              50160000
                      LCLA  &ZOPX          LIST TABLE INDEX             50180900
                      LCLC  &ZLL           LABEL                        50201800
                      LCLC  &ZLOP          OPERATION                    50222700
                      LCLC  &ZLV           VALUE                        50243600
                      LCLC  &ZLD           DESCRIPTION                  50264500
.*                                                                      50285400
&ZOPX                 SETA  1                                           50306300
.ZL2                  AIF   (&ZOPX GT &ZOPN1).ZLX  B IF DONE            50327200
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              50348100
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              50369000
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              50389900
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              50410800
                      AIF   (K'&ZLD LE 0).ZL5                           50431700
&ZLC                  SETA  35             COMMENT COLUMN               50452600
                      AIF   ('&ZLD'(1,1) NE '*').ZL3                    50473500
&ZLC                  SETA  33             COMMMENT COLUMN              50494400
.ZL3                  AIF   (K'&ZLV GE &ZLC-16-1).ZL4                   50515300
&ZLV                  SETC  '&ZLV'.' '                                  50536200
                      AGO   .ZL3                                        50557100
.*                                                                      50578000
.ZL4                  ANOP  ,                                           50598900
&ZLV                  SETC  '&ZLV'.' '                                  50619800
.ZL5                  ANOP  ,                                           50640700
&ZLV                  SETC  '&ZLV'.'&ZLD'                               50661600
.*                                                                      50682500
&ZLL     &ZLOP &ZLV                                                     50703400
.*                                                                      50724300
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               50745200
                      AGO   .ZL2           CONTINUE LOOPING             50766100
.*                                                                      50787000
.ZLX                  ANOP  ,                                           50807900
                      AIF   ('&XMF' EQ 'L').ZLINKX  MF=L                50809100
                      AIF   ('&XMF' EQ 'M').ZLINKX  MF=M                50810300
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  50811500
.*-----------BAL invocation code-------------                           50812700
.********************************************************************** 50813900
.*                                                                    * 50815100
.*  Invoke PC for Query EMCS Consoles Interface Routine               * 50816300
.*                                                                    * 50817500
.********************************************************************** 50818700
         L     15,16(0,0)         GET ADDRESS OF CVT FROM PSA           50819900
         L     15,772(,15)        GET ADDRESS OF SFT FROM CVT           50821100
         LA    14,20(0,0)         GET IEEQEMCS INDEX IN LINKAGE TABLE   50822300
         AL    14,100(,15)        POINT REG14 TO IEEQEMCS ETD ENTRY     50823500
         PC    0(14)              PC TO IEEQEMCS SERVICE                50824700
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  50825900
.ZLINKX               ANOP  ,                                           50827100
.*******************************************************************    50828800
.***AP.X01  FORMAT GENERATED CODE                                       50849700
.ZL21                 AIF   (&ZOPX GT &ZOPN).ZLX1  B IF DONE            50870600
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              50891500
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              50912400
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              50933300
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              50954200
                      AIF   (K'&ZLD LE 0).ZL51                          50975100
&ZLC                  SETA  35             COMMENT COLUMN               50996000
                      AIF   ('&ZLD'(1,1) NE '*').ZL31                   51016900
&ZLC                  SETA  33             COMMENT COLUMN               51037800
.ZL31                 AIF   (K'&ZLV GE &ZLC-16-1).ZL41                  51058700
&ZLV                  SETC  '&ZLV'.' '                                  51079600
                      AGO   .ZL31                                       51100500
.*                                                                      51121400
.ZL41                 ANOP  ,                                           51142300
&ZLV                  SETC  '&ZLV'.' '                                  51163200
.ZL51                 ANOP  ,                                           51184100
&ZLV                  SETC  '&ZLV'.'&ZLD'                               51205000
.*                                                                      51225900
&ZLL     &ZLOP &ZLV                                                     51246800
.*                                                                      51267700
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               51288600
                      AGO   .ZL21          CONTINUE LOOPING             51309500
.*                                                                      51330400
.ZLX1                 ANOP  ,                                           51351300
.*******************************************************************    51372200
.***AP.X02  END OF IEEQEMCS MACRO                                       51393100
&ZIEEQEMCS            SETC  'YES'          SET IEEQEMCS USED            51414000
         POP   PRINT                                                    51434900
*                                            IEEQEMCS-1                 51455800
         SPACE 1                                                        51476700
.ZLX2                 ANOP  ,                                           51497600
         MEND                                                           51518500
**********************************************************************/ 51539400
*/**** START OF SPECIFICATIONS **************************************** 51560300
*                                                                     * 51581200
*                                                                     * 51602100
*01* MACRO NAME:  IEEQEMCS                              -02/12/00-<1> * 51623000
*                                                                     * 51643900
*                                                                     * 51664800
*01* DESCRIPTIVE NAME:  Query EMCS Console                            * 51685700
*                                                                     * 51706600
*01* PROPRIETARY STATEMENT:                                           * 51727500
*                                                                     * 51748400
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 51769300
*     5647-A01 (C) COPYRIGHT IBM CORP. 1999, 2000                     * 51800600
*                                                                     * 51832000
* STATUS= HBB7703                                                     * 51852900
*                                                                     * 51873800
*                                                                     * 51894700
*                                                                     * 51915600
*01* FUNCTION:                                                        * 51936500
*       See the IEEQEMCS macro prologue for details.                  * 51957400
*                                                                     * 51978300
*01* INPUT:                                                           * 51999200
*                                                                     * 52020100
*            ?IEEQEMCS    [REQUEST(COUNT|SUMMARY|INFO|FULL)]        * 52041000
*                         [STATUS(ACTIVE|INACTIVE|ALL|BACKLOG|ERR)] * 52061900
*                         [BKLG_NUM(xbklg_num|10)]                  * 52082800
*                         [CN(xcn|ANY_CONS)]                        * 52100400
*                         [SYS(xsys|ANY_SYS)]                       * 52118000
*                         [KEY(xkey|ANY_KEY)]                       * 52135600
*                         [AUTH(ANY|MASTER|SYS|IO|CONS|ALL|INFO|     * 52153300
*                                SYSONLY|IOONLY|CONSONLY|ALLONLY|     * 52161100
*                                INFOONLY)]                          * 52168900
*                         [ATTR(ANY|YES|ROUT|UD|UDN|HC|AUTO|AUTON|MN * 52176700
*  |                                                                  * 52192300
*                                NONE)]                              * 52208200
*                         [DOM(ANY|YES|NORMAL|ALL|NONE)]            * 52232500
*                         [BUFPTR(xbufptr|0)                        * 52256900
*                              BUFSIZE(xbufsize)]                     * 52284700
*                         [CONSCNT(xconscnt|0)]                     * 52305600
*                         [TOKEN(xtoken|0)                          * 52326600
*                              RECSIZE(xrecsize)]                     * 52340500
*                         [RETCODE(xretcode)]                         * 52354500
*                         [RSNCODE(xrsncode)]                         * 52364900
*                         [PLISTVER(xplistver|IMPLIED_VERSION)]     * 52375400
*                         MF(E,xmfctrl,COMPLETE|NOCHECK)           * 52396300
*                         MF(L,xmfctrl,xmfattr|BDY(DWORD))         * 52417200
*                         MF(M,xmfctrl,COMPLETE|NOCHECK)           * 52438100
*                                                                     * 52459000
****** END OF SPECIFICATIONS *****************************************/ 52479900
*/*PB.ECHO01 MACRO INVOCATION ECHO-----------------------------------*/ 52500800
*  ANS('@SPACE;') NORESCAN COL(MACLMAR);                                52521700
*  ANS('/* ? IEEQEMCS '||MACLIST||' ')                                  52542600
*      NORESCAN COL(MACLMAR+5);    /* START ECHO */                     52563500
*                                                                       52584400
*  DCL ZELO  FIXED;                                                     52605300
*  DCL ZECOL FIXED;                                                     52626200
*                                                                       52647100
*  ZELO=1;     /* STARTING COLUMN */                                    52668000
*  DO WHILE ZELO<=LENGTH(MACKEYS);  /* PARENTHSIS SCAN */               52688900
*    ZECOL=INDEX(MACKEYS(ZELO:LENGTH(MACKEYS)),')');                    52709800
*    IF ZECOL>0                                                         52730700
*      THEN                                                             52751600
*        DO;   /* PARENTHESIS FOUND */                                  52772500
*          ANS(MACKEYS(ZELO:ZELO+ZECOL-1)||' ')                         52793400
*             NORESCAN COL(MACLMAR+5);                                  52814300
*          ZELO=ZELO+ZECOL;        /* NEXT PORTION */                   52835200
*        END;                                                           52856100
*      ELSE                                                             52877000
*        DO;   /* REMAINING KEYS */                                     52897900
*          ANS(MACKEYS(ZELO:LENGTH(MACKEYS)))                           52918800
*             NORESCAN COL(MACLMAR+5);                                  52939700
*          ZELO=LENGTH(MACKEYS)+1;                                      52960600
*        END;                                                           52981500
*  END;                                                                 53002400
*  ANS(' -02/12/00-1- */')                                              53023300
*      NORESCAN COL(MACLMAR+5);    /* END ECHO */                       53044200
*/********************************************************************/ 53065100
*/*PV.DCL01 MACRO DECLARES AND CODE GENERATION CONTROLS              */ 53086000
*/********************************************************************/ 53106900
*  DCL ZPRINT  EXTERNAL; DEACT ZPRINT; /* YES=PRINT, NO=NO PRINT     */ 53127800
*  DCL ZTEST   EXTERNAL; DEACT ZTEST;  /* YES=TEST, NO=NO TEST       */ 53148700
*  DCL ZSYSTEM EXTERNAL; DEACT ZSYSTEM;/* PCCODE10, MVS, SAK, VM     */ 53169600
*                                                                       53190500
*  DCL   ZIEEQEMCS CHAR EXTERNAL; /* YES=USED AT LEAST ONCE          */ 53211400
*  DEACT ZIEEQEMCS;                                                     53232300
*                                                                       53253200
*  DCL ZMACRET FIXED; DEACT ZMACRET;                                    53274100
*  ZMACRET=0;                   /* MACRO COMPILE RETURN CODE         */ 53295000
*                                                                       53315900
*  DCL ZMS CHAR;   DEACT ZMS;   /* ERROR MESSAGE                     */ 53336800
*  DCL ZCVAL CHAR; DEACT ZCVAL; /* ERROR MESSAGE WORK AREA           */ 53357700
*                                                                       53378600
*  DCL ZI FIXED;  DEACT ZI;     /* INDEX FOR VARIABLE NUM OF PARMS   */ 53399500
*  DCL ZJ FIXED;  DEACT ZJ;     /* INDEX FOR VARIABLE NUM OF PARMS   */ 53420400
*  DCL ZK FIXED;  DEACT ZK;     /* INDEX FOR RANGE COLON (:)         */ 53441300
*  DCL ZL FIXED;  DEACT ZL;     /* INDEX FOR RANGE VALUE CHECKING    */ 53462200
*  DCL ZLO FIXED; DEACT ZLO;    /* LOW RANGE VALUE                   */ 53483100
*  DCL ZHI FIXED; DEACT ZHI;    /* HIGH RANGE VALUE                  */ 53504000
*  DCL ZW CHAR;   DEACT ZW;     /* WORK AREA FOR RANGE VALUE SUBLIST */ 53524900
*  DCL ZN FIXED;  DEACT ZN;     /* NUMERIC WORK VARIABLE             */ 53545800
*  DCL ZC CHAR;   DEACT ZC;     /* CHARACTER WORK VARIABLE           */ 53566700
*  DCL ZMAXINVOCLEN FIXED; DEACT ZMAXINVOCLEN;  /* INVOCATION LENGTH */ 53587600
*  DCL ZPLLEN FIXED; DEACT ZPLLEN;        /* PARAMETER LIST LENGTH   */ 53608500
*                                                                       53629400
*  DCL ZPRMMAX FIXED;           /* MAXIMUM PARM LIST SIZE            */ 53650300
*  DCL ZPRMNUM FIXED;           /* PARAMETER ARRAY INDEX             */ 53671200
*  DCL ZPRM(100);               /* PARAMETER ENTRY                   */ 53692100
*  DCL EHAMAXLEN FIXED EXTERNAL;   /* MAX ILIST SIZE FOR PARM LISTS  */ 53713000
*  DCL EHAREGS CHARACTER EXTERNAL; /* REG DCLS                       */ 53733900
*  DCL EHAREGS64 CHARACTER EXTERNAL; /* REG DCLS                     */ 53744300
*  DCL EHALIST CHARACTER EXTERNAL; /* STANDARD PARM LIST GENERATION  */ 53754800
*/*******************************************************************/  53775700
*/*PV.XVAR01 DECLARE ALL MACRO PARAMETER VARIABLES                  */  53796600
*/*******************************************************************/  53817500
*  DCL XREQUEST;  DEACT XREQUEST;  /***PV.XVAR02 INPUT VALUE */         53838400
*  DCL ZXREQUEST; DEACT ZXREQUEST;  /***INPUT/OUTPUT CONTROL */         53859300
*  DCL XSTATUS;  DEACT XSTATUS;    /***PV.XVAR02 INPUT VALUE */         53880200
*  DCL ZXSTATUS; DEACT ZXSTATUS;   /***INPUT/OUTPUT CONTROL */          53901100
*  DCL XBKLG_NUM;  DEACT XBKLG_NUM;  /***PV.XVAR02 INPUT NAME */        53922000
*  DCL ZXBKLG_NUM; DEACT ZXBKLG_NUM;  /***INPUT/OUTPUT CONTROL */       53942900
*  DCL XCN;  DEACT XCN;            /***PV.XVAR02 INPUT NAME */          53963800
*  DCL ZXCN; DEACT ZXCN;           /***INPUT/OUTPUT CONTROL */          53984700
*  DCL XSYS;  DEACT XSYS;          /***PV.XVAR02 INPUT NAME */          54015900
*  DCL ZXSYS; DEACT ZXSYS;         /***INPUT/OUTPUT CONTROL */          54026500
*  DCL XKEY;  DEACT XKEY;          /***PV.XVAR02 INPUT NAME */          54047400
*  DCL ZXKEY; DEACT ZXKEY;         /***INPUT/OUTPUT CONTROL */          54068300
*  DCL XAUTH;  DEACT XAUTH;        /***PV.XVAR02 INPUT VALUE */         54089200
*  DCL ZXAUTH; DEACT ZXAUTH;       /***INPUT/OUTPUT CONTROL */          54110100
*  DCL XATTR;  DEACT XATTR;        /***PV.XVAR02 INPUT VALUE */         54131000
*  DCL ZXATTR; DEACT ZXATTR;       /***INPUT/OUTPUT CONTROL */          54151900
*  DCL XDOM;  DEACT XDOM;          /***PV.XVAR02 INPUT VALUE */         54172800
*  DCL ZXDOM; DEACT ZXDOM;         /***INPUT/OUTPUT CONTROL */          54193700
*  DCL XBUFPTR;  DEACT XBUFPTR;    /***PV.XVAR02 INPUT NAME */          54214600
*  DCL ZXBUFPTR; DEACT ZXBUFPTR;   /***INPUT/OUTPUT CONTROL */          54235500
*  DCL XBUFSIZE;  DEACT XBUFSIZE;  /***PV.XVAR02 INPUT NAME */          54270300
*  DCL ZXBUFSIZE; DEACT ZXBUFSIZE;  /***INPUT/OUTPUT CONTROL */         54305100
*  DCL XCONSCNT;  DEACT XCONSCNT;  /***PV.XVAR02 INPUT NAME */          54333000
*  DCL ZXCONSCNT; DEACT ZXCONSCNT;  /***INPUT/OUTPUT CONTROL */         54360900
*  DCL XTOKEN;  DEACT XTOKEN;      /***PV.XVAR02 INPUT NAME */          54381800
*  DCL ZXTOKEN; DEACT ZXTOKEN;     /***INPUT/OUTPUT CONTROL */          54402700
*  DCL XRECSIZE;  DEACT XRECSIZE;  /***PV.XVAR02 INPUT NAME */          54409600
*  DCL ZXRECSIZE; DEACT ZXRECSIZE;  /***INPUT/OUTPUT CONTROL */         54416500
*  DCL XRETCODE;  DEACT XRETCODE;  /***PV.XVAR02 OUTPUT NAME */         54423600
*  DCL ZXRETCODE; DEACT ZXRETCODE;  /***INPUT/OUTPUT CONTROL */         54444500
*  DCL XRSNCODE;  DEACT XRSNCODE;  /***PV.XVAR02 OUTPUT NAME */         54451400
*  DCL ZXRSNCODE; DEACT ZXRSNCODE;  /***INPUT/OUTPUT CONTROL */         54458300
*  DCL XPLISTVER FIXED;  DEACT XPLISTVER;  /***PV.XVAR02 INPUT VALUE */ 54465400
*  DCL ZXPLISTVER; DEACT ZXPLISTVER;  /***INPUT/OUTPUT CONTROL */       54486300
*  DCL XMF;  DEACT XMF;            /***PV.XVAR02 INPUT VALUE */         54507200
*  DCL ZXMF; DEACT ZXMF;           /***INPUT/OUTPUT CONTROL */          54528100
*  DCL XMFCTRL;  DEACT XMFCTRL;    /***PV.XVAR02 INPUT NAME */          54549000
*  DCL ZXMFCTRL; DEACT ZXMFCTRL;   /***INPUT/OUTPUT CONTROL */          54569900
*  DCL XMFSCK;  DEACT XMFSCK;      /***PV.XVAR02 INPUT VALUE */         54590800
*  DCL ZXMFSCK; DEACT ZXMFSCK;     /***INPUT/OUTPUT CONTROL */          54611700
*  DCL XMFATTR;  DEACT XMFATTR;    /***PV.XVAR02 INPUT VALUE */         54632600
*  DCL ZXMFATTR; DEACT ZXMFATTR;   /***INPUT/OUTPUT CONTROL */          54653500
*/********************************************************************/ 54674400
*/***PC.PLV01  PROCESS PLISTVER                                      */ 54695300
*/********************************************************************/ 54716200
*  IF PLISTVER(1) = 'MAX' THEN                                          54737100
*    XPLISTVER=1;                                                       54758000
*  ELSE                                                                 54778900
*    XPLISTVER=1;                                                       54799800
*  IF PLISTVER^=''                                                      54820700
*     & PLISTVER(1)^='IMPLIED_VERSION'                                  54841600
*     & PLISTVER(1)^='MAX'                                              54862500
*    THEN                                                               54883400
*      DO;                                                              54904300
*                                                                       54925200
*        ZCVAL='';                           /* ERROR FLAG */           54946100
*        IF PLISTVER='PLISTVER' | PLISTVER='()'  /*CHECK ENTRY*/        54967000
*          THEN                                                         54987900
*            DO;                                                        55008800
*              ZMS=' 8, THE "PLISTVER" KEY'|| /**KOPTP* MSG*/           55029700
*                  ' MUST CONTAIN ONE'||                                55050600
*                  ' (OR MORE) ARGUMENT(S).';                           55071500
*              ANS MSG('?IEEQEMCS ---> '||ZMS);                         55092400
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          55113300
*              ZMACRET=8;                    /* MACRO ERROR */          55134200
*              ZCVAL='NO_ARGUMENT';                                     55155100
*            END;                                                       55176000
*        IF NUMBER(PLISTVER)>1               /* CHECK POSITIONALS */    55196900
*          THEN                                                         55217800
*            DO;                                                        55238700
*              ZMS=' 8, "PLISTVER'||         /**KPOSP* MSG*/            55259600
*                  PLISTVER||                                           55280500
*                  '" "PLISTVER"'||                                     55301400
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        55322300
*              ANS MSG('?IEEQEMCS ---> '||ZMS);                         55343200
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          55364100
*              ZMACRET=8;                    /* MACRO ERROR */          55385000
*            END;                                                       55405900
*                                                                       55426800
*        ZC=PLISTVER(1);                                                55447700
*        DO ZL=1 TO LENGTH(ZC);              /* MUST BE NUMBER */       55468600
*          IF ZC(ZL:ZL)<'0' |                /* MUST BE NUMERIC */      55489500
*             ZC(ZL:ZL)>'9'                  /* MUST BE NUMERIC */      55510400
*            THEN                                                       55531300
*              ZCVAL='NUMERIC';              /* NUMERIC ERROR */        55552200
*        END;                                                           55573100
*        IF ZCVAL=''                                                    55594000
*          THEN                                                         55614900
*            DO;                             /* CHECK RANGE LIMITS */   55635800
*            IF FIXED(PLISTVER(1))>=XPLISTVER                           55656700
*              THEN                                                     55677600
*                XPLISTVER=FIXED(PLISTVER(1));                          55698500
*              ELSE                                                     55719400
*                DO;                                                    55740300
*              ZMS=' 8, PLISTVER='||         /**KVALP* MSG*/            55761200
*                    PLISTVER(1)||                                      55782100
*                  ', BUT PLISTVER OF '||                               55803000
*                    CHAR(XPLISTVER)||                                  55823900
*                  ' IS REQUIRED.';                                     55844800
*              ANS MSG('?IEEQEMCS ---> '||ZMS);                         55865700
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          55886600
*              ZMACRET=8;                    /* MACRO ERROR */          55907500
*                END;                                                   55928400
*              IF XPLISTVER<1 |              /* LOW LIMIT */            55949300
*                 XPLISTVER>1                /* HIGH LIMIT */           55970200
*                THEN                                                   55991100
*                  ZCVAL='RANGE';            /* RANGE ERROR */          56012000
*            END;                                                       56032900
*        IF ZCVAL^=''                                                   56053800
*          THEN                                                         56074700
*            DO;                             /* RANGE ERROR */          56095600
*              ZXPLISTVER='';                /* RESET IN/OUTPUT */      56116500
*              ZMS=' 8, "PLISTVER '||        /**KRNGP* MSG*/            56137400
*                  PLISTVER||                                           56158300
*                  '" THE RANGE IS "1-1"'||                             56179200
*                  ' FOR ARGUMENT 1.';                                  56200100
*              ANS MSG('?IEEQEMCS ---> '||ZMS);                         56221000
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          56241900
*              ZMACRET=8;                    /* MACRO ERROR */          56262800
*            END;                                                       56283700
*      END;                                                             56304600
*                                                                       56325500
*/********************************************************************/ 56346400
*/***PG.MF01  PROCESS MF MACRO FORMS                                 */ 56367300
*/********************************************************************/ 56388200
*/*PG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 56409100
*  XMF='';                                                              56430000
*/*PG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 56450900
*  IF MF(1)='E'                              /* CHECK FOR KEYWORD */    56482200
*    THEN                                                               56513600
*      DO;                                                              56534500
*        XMF='E';                            /* SET XVARIABLE */        56555400
*        IF NUMBER(MF)>3                     /* CHECK POSITIONALS */    56576300
*          THEN                                                         56597200
*            DO;                                                        56618100
*              ZMS=' 8, "MF'||               /**KPOSP* MSG*/            56639000
*                  MF||                                                 56659900
*                  '" "MF"'||                                           56680800
*                  ' CAN HAVE ONLY 3 ARGUMENTS.';                       56701700
*              ANS MSG('?IEEQEMCS ---> '||ZMS);                         56722600
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          56743500
*              ZMACRET=8;                    /* MACRO ERROR */          56764400
*            END;                                                       56785300
*/*PG.KXVAR03 NAME, RQD INPUT, POS(2) -XVARIABLE---------------------*/ 56806200
*  XMFCTRL=MF(2);                            /* SET XVARIABLE */        56827100
*  IF MF(2)=''                               /* CHECK FOR NULL */       56848000
*   THEN                                                                56868900
*    DO;                                     /* KEY IS REQUIRED */      56889800
*        ZXMFCTRL='';                        /* RESET IN/OUTPUT */      56910700
*        ZMS=' 8,  '||                                                  56931600
*            ' FOR THE "MF" KEY, POSITIONAL'||                          56952500
*            ' ARG 2 IS REQUIRED.';          /**KRQDP* MSG*/            56973400
*        ANS MSG('?IEEQEMCS ---> '||ZMS);                               56994300
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                57015200
*        ZMACRET=8;                          /* MACRO ERROR */          57036100
*    END;                                                               57057000
*  ELSE                                                                 57077900
*    ZXMFCTRL='INPUT';                       /* SET IN/OUTPUT */        57098800
*/*PG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 57119700
*  XMFSCK='';                                /* RESET XVARIABLE */      57140600
*  IF MF(3) = 'COMPLETE'                                                57171900
*    THEN                                                               57203300
*      XMFSCK = 'COMPLETE';                  /* SET XVARIABLE */        57224200
*/*PG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 57245100
*  IF MF(3) = 'NOCHECK'                                                 57276400
*    THEN                                                               57307800
*      XMFSCK = 'NOCHECK';                   /* SET XVARIABLE */        57328700
*/*PG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 57349600
*  ZXMFSCK='INPUT';                          /* SET IN/OUTPUT */        57370500
*  IF XMFSCK=''                              /* CHECK FOR KEYWORD */    57391400
*    THEN                                                               57412300
*      DO;                                   /* KEYWORD NOT ENTERED */  57433200
*        XMFSCK='COMPLETE';                  /* SET DEFAULT */          57454100
*        IF MF(3)^=''                                                   57475000
*          THEN                                                         57495900
*            DO;                                                        57516800
*              ZXMFSCK='';                   /* RESET IN/OUTPUT */      57537700
*              ZMS=' 8, "MF'||               /**KUKWP* MSG*/            57558600
*                  MF||'"'||                                            57579500
*                  ' ARGUMENT 3 IS AN UNKNOWN KEYWORD. '||              57600400
*                  ' VALID KEYWORD CHOICE(S) ARE:'||                    57621300
*                  ' "COMPLETE"'||           /* VALID KEYWORD */        57642200
*                  ' OR "NOCHECK".';         /* VALID KEYWORD */        57663100
*              ANS MSG('?IEEQEMCS ---> '||ZMS);                         57684000
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          57704900
*              ZMACRET=8;                    /* MACRO ERROR */          57725800
*            END;                                                       57746700
*      END;                                                             57767600
*/*PG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 57788500
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KYWRDCTL DO GROUP */     57809400
*/*PG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 57830300
*  IF MF(1)='L'                              /* CHECK FOR KEYWORD */    57861600
*    THEN                                                               57893000
*      DO;                                                              57913900
*        XMF='L';                            /* SET XVARIABLE */        57934800
*        IF NUMBER(MF)>3                     /* CHECK POSITIONALS */    57955700
*          THEN                                                         57976600
*            DO;                                                        57997500
*              ZMS=' 8, "MF'||               /**KPOSP* MSG*/            58018400
*                  MF||                                                 58039300
*                  '" "MF"'||                                           58060200
*                  ' CAN HAVE ONLY 3 ARGUMENTS.';                       58081100
*              ANS MSG('?IEEQEMCS ---> '||ZMS);                         58102000
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          58122900
*              ZMACRET=8;                    /* MACRO ERROR */          58143800
*            END;                                                       58164700
*/*PG.KKCTL10 -MF(L) SPECIAL CHECK-----------------------------------*/ 58185600
*        ZMAXINVOCLEN = LENGTH(MF) + 2;                                 58206500
*        IF PLISTVER ^= ''                                              58227400
*          THEN                                                         58248300
*            ZMAXINVOCLEN=ZMAXINVOCLEN + LENGTH(PLISTVER) + 8;          58269200
*        IF LENGTH(MACKEYS) > ZMAXINVOCLEN |                            58290100
*           MACLIST ^= ''                    /* CHECK FOR OTHER PARMS*/ 58311000
*          THEN                                                         58331900
*            DO;                                                        58352800
*              ZMS=' 8, THE "L" FORM OF "MF"'|| /**MFLP* MSG*/          58373700
*                  ' CAN ONLY HAVE'||                                   58394600
*                  ' THE "PLISTVER" KEY'||                              58415500
*                  ' SPECIFIED ON THE INVOCATION.';                     58436400
*              ANS MSG('?IEEQEMCS ---> '||ZMS);                         58457300
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          58478200
*              ZMACRET=8;                    /* MACRO ERROR */          58499100
*            END;                                                       58520000
*/*PG.KXVAR03 NAME, RQD INPUT, POS(2) -XVARIABLE---------------------*/ 58540900
*  XMFCTRL=MF(2);                            /* SET XVARIABLE */        58561800
*  IF MF(2)=''                               /* CHECK FOR NULL */       58582700
*   THEN                                                                58603600
*    DO;                                     /* KEY IS REQUIRED */      58624500
*        ZXMFCTRL='';                        /* RESET IN/OUTPUT */      58645400
*        ZMS=' 8,  '||                                                  58666300
*            ' FOR THE "MF" KEY, POSITIONAL'||                          58687200
*            ' ARG 2 IS REQUIRED.';          /**KRQDP* MSG*/            58708100
*        ANS MSG('?IEEQEMCS ---> '||ZMS);                               58729000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                58749900
*        ZMACRET=8;                          /* MACRO ERROR */          58770800
*    END;                                                               58791700
*  ELSE                                                                 58812600
*    ZXMFCTRL='INPUT';                       /* SET IN/OUTPUT */        58833500
*/*PG.KXVAR13 VALUE, OPT INPUT, POS(3) -XVARIABLE--------------------*/ 58854400
*  ZXMFATTR='INPUT';                         /* SET IN/OUTPUT */        58875300
*  XMFATTR='BDY(DWORD)';                     /* SET DEFAULT */          58896200
*  IF MF(3)^=''                              /* CHECK FOR NULL */       58917100
*    THEN                                                               58938000
*      XMFATTR=MF(3);                        /* SET XVARIABLE */        58958900
*/*PG.KCK01 VALUE, OPT INPUT, POS(3) -CHARACTER LENGTH---------------*/ 58979800
*  IF ZXMFATTR^='' &                         /* NOT IN/OUTPUT */        59000700
*     LENGTH(XMFATTR)>60                                                59021600
*    THEN                                                               59042500
*      DO;                                                              59063400
*        ZXMFATTR='';                        /* RESET IN/OUTPUT */      59084300
*        ZMS=' 8, "MF'||                     /**KLNGP* MSG*/            59105200
*            MF||                                                       59126100
*            '" ARGUMENT 3 EXCEEDS THE MAXIMUM'||                       59147000
*            ' LENGTH OF 60 CHARACTERS. ';                              59167900
*        ANS MSG('?IEEQEMCS ---> '||ZMS);                               59188800
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                59209700
*        ZMACRET=8;                          /* MACRO ERROR */          59230600
*      END;                                                             59251500
*/*PG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 59272400
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KYWRDCTL DO GROUP */     59293300
*/*PG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 59314200
*  IF MF(1)='M'                              /* CHECK FOR KEYWORD */    59345500
*    THEN                                                               59376900
*      DO;                                                              59397800
*        XMF='M';                            /* SET XVARIABLE */        59418700
*        IF NUMBER(MF)>3                     /* CHECK POSITIONALS */    59439600
*          THEN                                                         59460500
*            DO;                                                        59481400
*              ZMS=' 8, "MF'||               /**KPOSP* MSG*/            59502300
*                  MF||                                                 59523200
*                  '" "MF"'||                                           59544100
*                  ' CAN HAVE ONLY 3 ARGUMENTS.';                       59565000
*              ANS MSG('?IEEQEMCS ---> '||ZMS);                         59878500
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          59899400
*              ZMACRET=8;                    /* MACRO ERROR */          59920300
*            END;                                                       59941200
*/*PG.KXVAR03 NAME, RQD INPUT, POS(2) -XVARIABLE---------------------*/ 59962100
*  XMFCTRL=MF(2);                            /* SET XVARIABLE */        59983000
*  IF MF(2)=''                               /* CHECK FOR NULL */       60003900
*   THEN                                                                60024800
*    DO;                                     /* KEY IS REQUIRED */      60045700
*        ZXMFCTRL='';                        /* RESET IN/OUTPUT */      60066600
*        ZMS=' 8,  '||                                                  60087500
*            ' FOR THE "MF" KEY, POSITIONAL'||                          60108400
*            ' ARG 2 IS REQUIRED.';          /**KRQDP* MSG*/            60129300
*        ANS MSG('?IEEQEMCS ---> '||ZMS);                               60150200
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                60171100
*        ZMACRET=8;                          /* MACRO ERROR */          60192000
*    END;                                                               60212900
*  ELSE                                                                 60233800
*    ZXMFCTRL='INPUT';                       /* SET IN/OUTPUT */        60254700
*/*PG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 60275600
*  XMFSCK='';                                /* RESET XVARIABLE */      60296500
*  IF MF(3) = 'COMPLETE'                                                60327800
*    THEN                                                               60359200
*      XMFSCK = 'COMPLETE';                  /* SET XVARIABLE */        60380100
*/*PG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 60401000
*  IF MF(3) = 'NOCHECK'                                                 60432300
*    THEN                                                               60463700
*      XMFSCK = 'NOCHECK';                   /* SET XVARIABLE */        60484600
*/*PG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 60505500
*  ZXMFSCK='INPUT';                          /* SET IN/OUTPUT */        60526400
*  IF XMFSCK=''                              /* CHECK FOR KEYWORD */    60547300
*    THEN                                                               60568200
*      DO;                                   /* KEYWORD NOT ENTERED */  60589100
*        XMFSCK='COMPLETE';                  /* SET DEFAULT */          60610000
*        IF MF(3)^=''                                                   60630900
*          THEN                                                         60651800
*            DO;                                                        60672700
*              ZXMFSCK='';                   /* RESET IN/OUTPUT */      60693600
*              ZMS=' 8, "MF'||               /**KUKWP* MSG*/            60714500
*                  MF||'"'||                                            60735400
*                  ' ARGUMENT 3 IS AN UNKNOWN KEYWORD. '||              60756300
*                  ' VALID KEYWORD CHOICE(S) ARE:'||                    60777200
*                  ' "COMPLETE"'||           /* VALID KEYWORD */        60798100
*                  ' OR "NOCHECK".';         /* VALID KEYWORD */        60819000
*              ANS MSG('?IEEQEMCS ---> '||ZMS);                         60839900
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          60860800
*              ZMACRET=8;                    /* MACRO ERROR */          60881700
*            END;                                                       60902600
*      END;                                                             60923500
*/*PG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 60944400
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KYWRDCTL DO GROUP */     60965300
*/*PG.KKCTL06 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 60986200
*  IF MF='MF'                                                           61007100
*    | MF='()'                               /*CHECK ENTRY*/            61028000
*     THEN                                                              61048900
*       DO;                                                             61069800
*              ZMS=' 8, THE "MF" KEY'||      /**KOPTP* MSG*/            61090700
*                  ' MUST CONTAIN ONE'||                                61111600
*                  ' (OR MORE) ARGUMENT(S).';                           61132500
*              ANS MSG('?IEEQEMCS ---> '||ZMS);                         61153400
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          61174300
*              ZMACRET=8;                    /* MACRO ERROR */          61195200
*       END;                                                            61216100
*  ELSE                                                                 61237000
*    DO;                                                                61257900
*      ZXMF='INPUT';                         /* SET IN/OUTPUT */        61278800
*      IF XMF=''                             /* CHECK FOR KEYWORD */    61299700
*        THEN                                                           61320600
*          DO;                               /* KEYWORD NOT ENTERED */  61341500
*            XMF='E';                        /* SET DEFAULT */          61362400
*            IF MF(1)^=''                    /* CHECK FOR KEYWORD */    61383300
*              THEN                                                     61404200
*                DO;                                                    61425100
*                  ZXMF='';                  /* RESET IN/OUTPUT */      61446000
*              ZMS=' 8, "MF'||               /**KUKWP* MSG*/            61466900
*                  MF||'"'||                                            61487800
*                  ' ARGUMENT 1 IS AN UNKNOWN KEYWORD. '||              61508700
*                  ' VALID KEYWORD CHOICE(S) ARE:'||                    61529600
*                  ' "E",'||                 /* VALID KEYWORD */        61550500
*                  ' "L",'||                 /* VALID KEYWORD */        61571400
*                  ' OR "M".';               /* VALID KEYWORD */        61592300
*              ANS MSG('?IEEQEMCS ---> '||ZMS);                         61613200
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          61634100
*              ZMACRET=8;                    /* MACRO ERROR */          61655000
*                END;                                                   61675900
*          END;                                                         61696800
*    END;                                                               61717700
*/*PG.KKCTL07 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 61738600
*  IF MF(1)=''                               /* CHECK FOR KEYWORD */    61759500
*    THEN                                                               61780400
*      DO;                                                              61801300
*        ZXMF='';                            /* RESET IN/OUTPUT */      61822200
*        ZMS=' 8, THE'||                     /**KRKWP* MSG*/            61843100
*            ' "MF" KEY AND ITS'||                                      61864000
*            ' ARGUMENT ARE REQUIRED.'||                                61884900
*            ' VALID KEYWORD CHOICE(S) ARE:'||                          61905800
*            ' "E",'||                       /* VALID KEYWORD */        61926700
*            ' "L",'||                       /* VALID KEYWORD */        61947600
*            ' OR "M".';                     /* VALID KEYWORD */        61968500
*        ANS MSG('?IEEQEMCS ---> '||ZMS);                               61989400
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                62010300
*        ZMACRET=8;                          /* MACRO ERROR */          62031200
*      END;                                                             62052100
*/********************************************************************/ 62073000
*/***PD.P01 FULL DEFAULT CHECKING                                    */ 62093900
*/********************************************************************/ 62114800
*  IF PLISTVER=''                                                       62135700
*     | PLISTVER(1)='IMPLIED_VERSION'                                   62156600
*    THEN                                                               62177500
*      ZC='ON';                              /* DEFAULT FLAG ON */      62198400
*    ELSE                                                               62219300
*      ZC='OFF';                             /* DEFAULT FLAG OFF */     62240200
*/********************************************************************/ 62261100
*/***PD.P02 DEFAULT ECHO                                             */ 62282000
*/********************************************************************/ 62302900
*/*PD.P02 XMF^='L' & XMFSCK='COMPLETE' ------------------------------*/ 62323800
*  IF XMF^='L'                                                          62344700
*     & XMFSCK='COMPLETE'                                               62365600
*    THEN                                                               62386500
*      DO;                                   /* FULL SYNTAX CHECK */    62407400
*        ANS('/*DEFAULT(S): */')                                        62428300
*           NORESCAN COL(MACLMAR+5);                                    62449200
*/*PD.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 62470100
*  XREQUEST='COUNT';                         /* RESET XVARIABLE */      62491000
*  IF REQUEST(1)=''                                                     62511900
*    THEN                                                               62532800
*        ZC='ON';                            /* DEFAULT FLAG ON */      62553700
*  IF REQUEST(1)='COUNT'                                                62585000
*    THEN                                                               62616400
*        XREQUEST='';                        /* SET XVARIABLE */        62637300
*  IF REQUEST(1)='SUMMARY'                                              62668600
*    THEN                                                               62700000
*        XREQUEST='';                        /* SET XVARIABLE */        62720900
*  IF REQUEST(1)='INFO'                                                 62752200
*    THEN                                                               62783600
*        XREQUEST='';                        /* SET XVARIABLE */        62804500
*  IF REQUEST(1)='FULL'                                                 62835800
*    THEN                                                               62867200
*        XREQUEST='';                        /* SET XVARIABLE */        62888100
*/*PD.DFLT02 PRINT DEFAULT(S) IF APPROPRIATE ------------------------*/ 62909000
*  IF XREQUEST^=''                                                      62929900
*    THEN                                                               62950800
*      ANS('/* REQUEST('||                                              62971700
*          XREQUEST||                                                   62992600
*          ')*/')                                                       63013500
*          NORESCAN COL(MACLMAR+5);                                     63034400
*/*PD.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 63055300
*  XSTATUS='ACTIVE';                         /* RESET XVARIABLE */      63076200
*  IF STATUS(1)=''                                                      63097100
*    THEN                                                               63118000
*        ZC='ON';                            /* DEFAULT FLAG ON */      63138900
*  IF STATUS(1)='ACTIVE'                                                63170200
*    THEN                                                               63201600
*        XSTATUS='';                         /* SET XVARIABLE */        63222500
*  IF STATUS(1)='INACTIVE'                                              63253800
*    THEN                                                               63285200
*        XSTATUS='';                         /* SET XVARIABLE */        63306100
*  IF STATUS(1)='ALL'                                                   63337400
*    THEN                                                               63368800
*        XSTATUS='';                         /* SET XVARIABLE */        63389700
*  IF STATUS(1)='BACKLOG'                                               63421000
*    THEN                                                               63452400
*        XSTATUS='';                         /* SET XVARIABLE */        63473300
*  IF STATUS(1)='ERR'                                                   63504600
*    THEN                                                               63536000
*        XSTATUS='';                         /* SET XVARIABLE */        63556900
*/*PD.DFLT02 PRINT DEFAULT(S) IF APPROPRIATE ------------------------*/ 63577800
*  IF XSTATUS^=''                                                       63598700
*    THEN                                                               63619600
*      ANS('/* STATUS('||                                               63640500
*          XSTATUS||                                                    63661400
*          ')*/')                                                       63682300
*          NORESCAN COL(MACLMAR+5);                                     63703200
*/*PD.KXVAR01 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 63724100
*  XBKLG_NUM='';                                                        63745000
*  IF BKLG_NUM(1)=''                                                    63765900
*    THEN                                                               63786800
*      DO;                                                              63807700
*        XBKLG_NUM='10';                     /* SET DEFAULT */          63828600
*        ZC='ON';                            /* DEFAULT FLAG ON */      63849500
*      END;                                                             63870400
*/*PD.DFLT02 PRINT DEFAULT(S) IF APPROPRIATE ------------------------*/ 63891300
*  IF XBKLG_NUM^=''                                                     63912200
*    THEN                                                               63933100
*      ANS('/* BKLG_NUM('||                                             63954000
*          XBKLG_NUM||                                                  63974900
*          ')*/')                                                       63995800
*          NORESCAN COL(MACLMAR+5);                                     64016700
*/*PD.KXVAR01 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 64037600
*  XCN='';                                                              64058500
*  IF CN(1)=''                                                          64079400
*    THEN                                                               64100300
*      DO;                                                              64121200
*        XCN='ANY_CONS';                     /* SET DEFAULT */          64142100
*        ZC='ON';                            /* DEFAULT FLAG ON */      64163000
*      END;                                                             64183900
*/*PD.DFLT02 PRINT DEFAULT(S) IF APPROPRIATE ------------------------*/ 64204800
*  IF XCN^=''                                                           64225700
*    THEN                                                               64246600
*      ANS('/* CN('||                                                   64267500
*          XCN||                                                        64288400
*          ')*/')                                                       64309300
*          NORESCAN COL(MACLMAR+5);                                     64330200
*/*PD.KXVAR01 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 64461300
*  XSYS='';                                                             64468200
*  IF SYS(1)=''                                                         64475100
*    THEN                                                               64482000
*      DO;                                                              64488900
*        XSYS='ANY_SYS';                     /* SET DEFAULT */          64495800
*        ZC='ON';                            /* DEFAULT FLAG ON */      64502700
*      END;                                                             64509600
*/*PD.DFLT02 PRINT DEFAULT(S) IF APPROPRIATE ------------------------*/ 64518300
*  IF XSYS^=''                                                          64539200
*    THEN                                                               64560100
*      ANS('/* SYS('||                                                  64581000
*          XSYS||                                                       64601900
*          ')*/')                                                       64622800
*          NORESCAN COL(MACLMAR+5);                                     64643700
*/*PD.KXVAR01 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 64664600
*  XKEY='';                                                             64685500
*  IF KEY(1)=''                                                         64706400
*    THEN                                                               64727300
*      DO;                                                              64748200
*        XKEY='ANY_KEY';                     /* SET DEFAULT */          64769100
*        ZC='ON';                            /* DEFAULT FLAG ON */      64790000
*      END;                                                             64810900
*/*PD.DFLT02 PRINT DEFAULT(S) IF APPROPRIATE ------------------------*/ 64831800
*  IF XKEY^=''                                                          64852700
*    THEN                                                               64873600
*      ANS('/* KEY('||                                                  64894500
*          XKEY||                                                       64915400
*          ')*/')                                                       64936300
*          NORESCAN COL(MACLMAR+5);                                     64957200
*/*PD.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 64978100
*  XAUTH='ANY';                              /* RESET XVARIABLE */      64999000
*  IF AUTH(1)=''                                                        65019900
*    THEN                                                               65040800
*        ZC='ON';                            /* DEFAULT FLAG ON */      65046000
*  IF AUTH(1)='ANY'                                                     65047300
*    THEN                                                               65048600
*        XAUTH='';                           /* SET XVARIABLE */        65049900
*  IF AUTH(1)='MASTER'                                                  65051200
*    THEN                                                               65056400
*        XAUTH='';                           /* SET XVARIABLE */        65061600
*  IF AUTH(1)='SYS'                                                     65066800
*    THEN                                                               65072000
*        XAUTH='';                           /* SET XVARIABLE */        65077200
*  IF AUTH(1)='IO'                                                      65082400
*    THEN                                                               65087600
*        XAUTH='';                           /* SET XVARIABLE */        65092800
*  IF AUTH(1)='CONS'                                                    65098000
*    THEN                                                               65103200
*        XAUTH='';                           /* SET XVARIABLE */        65108400
*  IF AUTH(1)='ALL'                                                     65113600
*    THEN                                                               65118800
*        XAUTH='';                           /* SET XVARIABLE */        65124000
*  IF AUTH(1)='INFO'                                                    65129200
*    THEN                                                               65134400
*        XAUTH='';                           /* SET XVARIABLE */        65139600
*  IF AUTH(1)='SYSONLY'                                                 65139900
*    THEN                                                               65140200
*        XAUTH='';                           /* SET XVARIABLE */        65140500
*  IF AUTH(1)='IOONLY'                                                  65140800
*    THEN                                                               65141100
*        XAUTH='';                           /* SET XVARIABLE */        65141400
*  IF AUTH(1)='CONSONLY'                                                65141700
*    THEN                                                               65142000
*        XAUTH='';                           /* SET XVARIABLE */        65142300
*  IF AUTH(1)='ALLONLY'                                                 65142600
*    THEN                                                               65142900
*        XAUTH='';                           /* SET XVARIABLE */        65143200
*  IF AUTH(1)='INFOONLY'                                                65143500
*    THEN                                                               65143800
*        XAUTH='';                           /* SET XVARIABLE */        65144100
*/*PD.DFLT02 PRINT DEFAULT(S) IF APPROPRIATE ------------------------*/ 65145300
*  IF XAUTH^=''                                                         65166200
*    THEN                                                               65187100
*      ANS('/* AUTH('||                                                 65208000
*          XAUTH||                                                      65228900
*          ')*/')                                                       65249800
*          NORESCAN COL(MACLMAR+5);                                     65270700
*/*PD.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 65291600
*  XATTR='ANY';                              /* RESET XVARIABLE */      65312500
*  IF ATTR(1)=''                                                        65333400
*    THEN                                                               65354300
*        ZC='ON';                            /* DEFAULT FLAG ON */      65357900
*  IF ATTR(1)='ANY'                                                     65361500
*    THEN                                                               65362400
*        XATTR='';                           /* SET XVARIABLE */        65363300
*  IF ATTR(1)='YES'                                                     65364200
*    THEN                                                               65365100
*        XATTR='';                           /* SET XVARIABLE */        65368700
*  IF ATTR(1)='ROUT'                                                    65372300
*    THEN                                                               65375900
*        XATTR='';                           /* SET XVARIABLE */        65379500
*  IF ATTR(1)='UD'                                                      65383100
*    THEN                                                               65386700
*        XATTR='';                           /* SET XVARIABLE */        65390300
*  IF ATTR(1)='UDN'                                                     65393900
*    THEN                                                               65397500
*        XATTR='';                           /* SET XVARIABLE */        65401100
*  IF ATTR(1)='HC'                                                      65404700
*    THEN                                                               65408300
*        XATTR='';                           /* SET XVARIABLE */        65411900
*  IF ATTR(1)='AUTO'                                                    65415500
*    THEN                                                               65419100
*        XATTR='';                           /* SET XVARIABLE */        65422700
*  IF ATTR(1)='AUTON'                                                   65426300
*    THEN                                                               65429900
*        XATTR='';                           /* SET XVARIABLE */        65433500
*  IF ATTR(1)='MN'                                                      65437100
*    THEN                                                               65440700
*        XATTR='';                           /* SET XVARIABLE */        65444300
*  IF ATTR(1)='NONE'                                                    65447900
*    THEN                                                               65451500
*        XATTR='';                           /* SET XVARIABLE */        65455100
*/*PD.DFLT02 PRINT DEFAULT(S) IF APPROPRIATE ------------------------*/ 65458800
*  IF XATTR^=''                                                         65479700
*    THEN                                                               65500600
*      ANS('/* ATTR('||                                                 65521500
*          XATTR||                                                      65542400
*          ')*/')                                                       65563300
*          NORESCAN COL(MACLMAR+5);                                     65584200
*/*PD.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 65605100
*  XDOM='ANY';                               /* RESET XVARIABLE */      65626000
*  IF DOM(1)=''                                                         65646900
*    THEN                                                               65667800
*        ZC='ON';                            /* DEFAULT FLAG ON */      65688700
*  IF DOM(1)='ANY'                                                      65720000
*    THEN                                                               65727800
*        XDOM='';                            /* SET XVARIABLE */        65735600
*  IF DOM(1)='YES'                                                      65743400
*    THEN                                                               65751400
*        XDOM='';                            /* SET XVARIABLE */        65772300
*  IF DOM(1)='NORMAL'                                                   65803600
*    THEN                                                               65835000
*        XDOM='';                            /* SET XVARIABLE */        65855900
*  IF DOM(1)='ALL'                                                      65887200
*    THEN                                                               65918600
*        XDOM='';                            /* SET XVARIABLE */        65939500
*  IF DOM(1)='NONE'                                                     65970800
*    THEN                                                               66002200
*        XDOM='';                            /* SET XVARIABLE */        66023100
*/*PD.DFLT02 PRINT DEFAULT(S) IF APPROPRIATE ------------------------*/ 66044000
*  IF XDOM^=''                                                          66064900
*    THEN                                                               66085800
*      ANS('/* DOM('||                                                  66106700
*          XDOM||                                                       66127600
*          ')*/')                                                       66148500
*          NORESCAN COL(MACLMAR+5);                                     66169400
*/*PD.KXVAR01 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 66190300
*  XBUFPTR='';                                                          66211200
*  IF BUFPTR(1)=''                                                      66232100
*    THEN                                                               66253000
*      DO;                                                              66273900
*        XBUFPTR='0';                        /* SET DEFAULT */          66294800
*        ZC='ON';                            /* DEFAULT FLAG ON */      66315700
*      END;                                                             66336600
*/*PD.DFLT02 PRINT DEFAULT(S) IF APPROPRIATE ------------------------*/ 66357500
*  IF XBUFPTR^=''                                                       66378400
*    THEN                                                               66399300
*      ANS('/* BUFPTR('||                                               66420200
*          XBUFPTR||                                                    66441100
*          ')*/')                                                       66464400
*          NORESCAN COL(MACLMAR+5);                                     66487700
*/*PD.KXVAR01 NAME, OPT RQD INPUT, KEYS -XVARIABLE-------------------*/ 66511000
*  XBUFSIZE='';                                                         66534300
*  IF BUFSIZE(1)=''                                                     66557600
*    THEN                                                               66580900
*      DO;                                                              66604200
*        XBUFSIZE='0';                       /* SET DEFAULT */          66627500
*        ZC='ON';                            /* DEFAULT FLAG ON */      66650800
*      END;                                                             66674100
*/*PD.DFLT02 PRINT DEFAULT(S) IF APPROPRIATE ------------------------*/ 66697400
*  IF XBUFSIZE^=''                                                      66720700
*    THEN                                                               66744000
*      ANS('/* BUFSIZE('||                                              66767300
*          XBUFSIZE||                                                   66790600
*          ')*/')                                                       66814600
*          NORESCAN COL(MACLMAR+5);                                     66815900
*/*PD.KXVAR01 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 66817200
*  XCONSCNT='';                                                         66818500
*  IF CONSCNT(1)=''                                                     66819800
*    THEN                                                               66821100
*      DO;                                                              66822400
*        XCONSCNT='0';                       /* SET DEFAULT */          66823700
*        ZC='ON';                            /* DEFAULT FLAG ON */      66825000
*      END;                                                             66826300
*/*PD.DFLT02 PRINT DEFAULT(S) IF APPROPRIATE ------------------------*/ 66827600
*  IF XCONSCNT^=''                                                      66828900
*    THEN                                                               66830200
*      ANS('/* CONSCNT('||                                              66831500
*          XCONSCNT||                                                   66832800
*          ')*/')                                                       66834100
*          NORESCAN COL(MACLMAR+5);                                     66835400
*/*PD.KXVAR01 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 66836700
*  XTOKEN='';                                                           66838200
*  IF TOKEN(1)=''                                                       66859100
*    THEN                                                               66880000
*      DO;                                                              66900900
*        XTOKEN='0';                         /* SET DEFAULT */          66921800
*        ZC='ON';                            /* DEFAULT FLAG ON */      66942700
*      END;                                                             66963600
*/*PD.DFLT02 PRINT DEFAULT(S) IF APPROPRIATE ------------------------*/ 66984500
*  IF XTOKEN^=''                                                        67005400
*    THEN                                                               67026300
*      ANS('/* TOKEN('||                                                67047200
*          XTOKEN||                                                     67068100
*          ')*/')                                                       67069400
*          NORESCAN COL(MACLMAR+5);                                     67070700
*/*PD.KXVAR01 NAME, OPT RQD INPUT, KEYS -XVARIABLE-------------------*/ 67072000
*  XRECSIZE='';                                                         67073300
*  IF RECSIZE(1)=''                                                     67074600
*    THEN                                                               67075900
*      DO;                                                              67077200
*        XRECSIZE='0';                       /* SET DEFAULT */          67078500
*        ZC='ON';                            /* DEFAULT FLAG ON */      67079800
*      END;                                                             67081100
*/*PD.DFLT02 PRINT DEFAULT(S) IF APPROPRIATE ------------------------*/ 67082400
*  IF XRECSIZE^=''                                                      67083700
*    THEN                                                               67085000
*      ANS('/* RECSIZE('||                                              67086300
*          XRECSIZE||                                                   67087600
*          ')*/')                                                       67089000
*          NORESCAN COL(MACLMAR+5);                                     67109900
*/*PD.DFLT02 PRINT DEFAULT(S) IF APPROPRIATE ------------------------*/ 67130800
*  IF PLISTVER=''                                                       67151700
*    THEN                                                               67172600
*      ANS('/* PLISTVER('||                                             67193500
*          CHAR(XPLISTVER)||                                            67214400
*          ')*/')                                                       67235300
*          NORESCAN COL(MACLMAR+5);                                     67256200
*  IF ZC='OFF'                               /*NO DEFAULTS TAKEN */     67277100
*    THEN                                                               67298000
*      ANS('/* NONE. */')                                               67318900
*         NORESCAN COL(MACLMAR+5);                                      67339800
*/*PD.P04 END DEFAULT ECHO ------------------------------------------*/ 67360700
*      END;                                                             67381600
*/********************************************************************/ 67402500
*/*PB.SYSL01 INVOKE SP LEVEL AND SYSTEM STATE MACROS                 */ 67423400
*/********************************************************************/ 67444300
*  DCL SYSSPLV CHAR EXTERNAL; DEACT SYSSPLV;/* SPLEVEL 1,2,3         */ 67465200
*  DCL SYSASCE CHAR EXTERNAL; DEACT SYSASCE;/* STATE ANY P AR */        67486100
*  DCL SYSAM64 CHAR EXTERNAL; DEACT SYSAM64;                            67493000
*  DCL SYSALVL FIXED EXTERNAL; DEACT SYSALVL;                           67499900
*                                                                       67507000
*  IF SYSASCE=''                                                        67527900
*    THEN                                                               67548800
*      DO;                                                              67569700
*        IF SYSSPLV=''                                                  67590600
*          THEN                                                         67611500
*            ANS('?SPLEVEL  (TEST);') COL(MACLMAR);                     67632400
*        IF SYSSPLV^='1' & SYSSPLV^='2'                                 67653300
*          THEN                                                         67674200
*            ANS('?SYSSTATE (TEST);') COL(MACLMAR);                     67695100
*          ELSE                                                         67716000
*            SYSASCE='P';                    /* SYSSTATE DEFAULT*/      67736900
*      END;                                                             67757800
*/********************************************************************/ 69450700
*/***PG.P01 FULL MACRO SYNTAX CHECKING                               */ 69471600
*/********************************************************************/ 69492500
*/*PG.P02 XMF^='L' & XMFSCK='COMPLETE' ------------------------------*/ 69513400
*  IF XMF^='L'                                                          69534300
*     & XMFSCK='COMPLETE'                                               69555200
*    THEN                                                               69576100
*      DO;                                   /* FULL SYNTAX CHECK */    69597000
*/*PG.P03 EXCESSIVE POSITIONAL ARGUMENTS-----------------------------*/ 69617900
*  IF NUMBER(MACLIST)>0                      /* CHECK POSITIONALS */    69638800
*    THEN                                                               69659700
*      DO;                                                              69680600
*        ZMS=' 8, POSITIONAL ARGUMENT(S),'|| /**PPOSP* MSG*/            69701500
*            ' "'||MACLIST||'"'||                                       69722400
*            ' CANNOT BE USED.'||                                       69743300
*            ' NO POSITIONAL ARGUMENTS'||                               69764200
*            ' ARE ALLOWED.';                                           69785100
*        ANS MSG('?IEEQEMCS ---> '||ZMS);                               69806000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                69826900
*        ZMACRET=8;                          /* MACRO ERROR */          69847800
*      END;                                                             69868700
*/*PG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 69889600
*  IF REQUEST='REQUEST'                      /* CHECK ENTRY */          69910500
*    THEN                                                               69931400
*      DO;                                                              69952300
*        ZMS=' 8, THE "REQUEST" KEY'||       /**KOPTP* MSG*/            69973200
*            ' MUST CONTAIN ONE'||                                      69994100
*            ' (OR MORE) ARGUMENT(S).';                                 70015000
*        ANS MSG('?IEEQEMCS ---> '||ZMS);                               70035900
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                70056800
*        ZMACRET=8;                          /* MACRO ERROR */          70077700
*      END;                                                             70098600
*  IF NUMBER(REQUEST)>1                      /* CHECK POSITIONALS */    70119500
*    THEN                                                               70140400
*      DO;                                                              70161300
*        ZMS=' 8, "REQUEST'||                /**KPOSP* MSG*/            70182200
*            REQUEST||                                                  70203100
*            '" "REQUEST"'||                                            70224000
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              70244900
*        ANS MSG('?IEEQEMCS ---> '||ZMS);                               70265800
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                70286700
*        ZMACRET=8;                          /* MACRO ERROR */          70307600
*      END;                                                             70328500
*/*PG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 70349400
*  XREQUEST='';                              /* RESET XVARIABLE */      70370300
*  IF REQUEST(1) = 'COUNT'                                              70401600
*    THEN                                                               70433000
*      XREQUEST = 'COUNT';                   /* SET XVARIABLE */        70453900
*/*PG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 70474800
*  IF REQUEST(1) = 'SUMMARY'                                            70506100
*    THEN                                                               70537500
*      XREQUEST = 'SUMMARY';                 /* SET XVARIABLE */        70558400
*/*PG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 70579300
*  IF REQUEST(1) = 'INFO'                                               70610600
*    THEN                                                               70642000
*      XREQUEST = 'INFO';                    /* SET XVARIABLE */        70662900
*/*PG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 70683800
*  IF REQUEST(1) = 'FULL'                                               70715100
*    THEN                                                               70746500
*      XREQUEST = 'FULL';                    /* SET XVARIABLE */        70767400
*/*PG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 70788300
*  ZXREQUEST='INPUT';                        /* SET IN/OUTPUT */        70809200
*  IF XREQUEST=''                            /* CHECK FOR KEYWORD */    70830100
*    THEN                                                               70851000
*      DO;                                   /* KEYWORD NOT ENTERED */  70871900
*        XREQUEST='COUNT';                   /* SET DEFAULT */          70892800
*        IF REQUEST(1)^=''                                              70913700
*          THEN                                                         70934600
*            DO;                                                        70955500
*              ZXREQUEST='';                 /* RESET IN/OUTPUT */      70976400
*              ZMS=' 8, "REQUEST'||          /**KUKWP* MSG*/            70997300
*                  REQUEST||'"'||                                       71018200
*                  ' ARGUMENT 1 IS AN UNKNOWN KEYWORD. '||              71039100
*                  ' VALID KEYWORD CHOICE(S) ARE:'||                    71060000
*                  ' "COUNT",'||             /* VALID KEYWORD */        71080900
*                  ' "SUMMARY",'||           /* VALID KEYWORD */        71101800
*                  ' "INFO",'||              /* VALID KEYWORD */        71122700
*                  ' OR "FULL".';            /* VALID KEYWORD */        71143600
*              ANS MSG('?IEEQEMCS ---> '||ZMS);                         71164500
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          71185400
*              ZMACRET=8;                    /* MACRO ERROR */          71206300
*            END;                                                       71227200
*      END;                                                             71248100
*/*PG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 71269000
*  IF STATUS='STATUS'                        /* CHECK ENTRY */          71289900
*    THEN                                                               71310800
*      DO;                                                              71331700
*        ZMS=' 8, THE "STATUS" KEY'||        /**KOPTP* MSG*/            71352600
*            ' MUST CONTAIN ONE'||                                      71373500
*            ' (OR MORE) ARGUMENT(S).';                                 71394400
*        ANS MSG('?IEEQEMCS ---> '||ZMS);                               71415300
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                71436200
*        ZMACRET=8;                          /* MACRO ERROR */          71457100
*      END;                                                             71478000
*  IF NUMBER(STATUS)>1                       /* CHECK POSITIONALS */    71498900
*    THEN                                                               71519800
*      DO;                                                              71540700
*        ZMS=' 8, "STATUS'||                 /**KPOSP* MSG*/            71561600
*            STATUS||                                                   71582500
*            '" "STATUS"'||                                             71603400
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              71624300
*        ANS MSG('?IEEQEMCS ---> '||ZMS);                               71645200
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                71666100
*        ZMACRET=8;                          /* MACRO ERROR */          71687000
*      END;                                                             71707900
*/*PG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 71728800
*  XSTATUS='';                               /* RESET XVARIABLE */      71749700
*  IF STATUS(1) = 'ACTIVE'                                              71781000
*    THEN                                                               71812400
*      XSTATUS = 'ACTIVE';                   /* SET XVARIABLE */        71833300
*/*PG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 71854200
*  IF STATUS(1) = 'INACTIVE'                                            71885500
*    THEN                                                               71916900
*      XSTATUS = 'INACTIVE';                 /* SET XVARIABLE */        71937800
*/*PG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 71958700
*  IF STATUS(1) = 'ALL'                                                 71990000
*    THEN                                                               72021400
*      XSTATUS = 'ALL';                      /* SET XVARIABLE */        72042300
*/*PG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 72063200
*  IF STATUS(1) = 'BACKLOG'                                             72094500
*    THEN                                                               72125900
*      XSTATUS = 'BACKLOG';                  /* SET XVARIABLE */        72146800
*/*PG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 72167700
*  IF STATUS(1) = 'ERR'                                                 72199000
*    THEN                                                               72230400
*      XSTATUS = 'ERR';                      /* SET XVARIABLE */        72251300
*/*PG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 72272200
*  ZXSTATUS='INPUT';                         /* SET IN/OUTPUT */        72293100
*  IF XSTATUS=''                             /* CHECK FOR KEYWORD */    72314000
*    THEN                                                               72334900
*      DO;                                   /* KEYWORD NOT ENTERED */  72355800
*        XSTATUS='ACTIVE';                   /* SET DEFAULT */          72376700
*        IF STATUS(1)^=''                                               72397600
*          THEN                                                         72418500
*            DO;                                                        72439400
*              ZXSTATUS='';                  /* RESET IN/OUTPUT */      72460300
*              ZMS=' 8, "STATUS'||           /**KUKWP* MSG*/            72481200
*                  STATUS||'"'||                                        72502100
*                  ' ARGUMENT 1 IS AN UNKNOWN KEYWORD. '||              72523000
*                  ' VALID KEYWORD CHOICE(S) ARE:'||                    72543900
*                  ' "ACTIVE",'||            /* VALID KEYWORD */        72564800
*                  ' "INACTIVE",'||          /* VALID KEYWORD */        72585700
*                  ' "ALL",'||               /* VALID KEYWORD */        72606600
*                  ' "BACKLOG",'||           /* VALID KEYWORD */        72627500
*                  ' OR "ERR".';             /* VALID KEYWORD */        72648400
*              ANS MSG('?IEEQEMCS ---> '||ZMS);                         72669300
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          72690200
*              ZMACRET=8;                    /* MACRO ERROR */          72711100
*            END;                                                       72732000
*      END;                                                             72752900
*/*PG.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 72773800
*  IF BKLG_NUM='BKLG_NUM' | BKLG_NUM='()'    /*CHECK ENTRY*/            72794700
*    THEN                                                               72815600
*      DO;                                                              72836500
*        ZMS=' 8, THE "BKLG_NUM" KEY'||      /**KOPTP* MSG*/            72857400
*            ' MUST CONTAIN ONE'||                                      72878300
*            ' (OR MORE) ARGUMENT(S).';                                 72899200
*        ANS MSG('?IEEQEMCS ---> '||ZMS);                               72920100
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                72941000
*        ZMACRET=8;                          /* MACRO ERROR */          72961900
*      END;                                                             72982800
*  IF NUMBER(BKLG_NUM)>1                     /* CHECK POSITIONALS */    73003700
*    THEN                                                               73024600
*      DO;                                                              73045500
*        ZMS=' 8, "BKLG_NUM'||               /**KPOSP* MSG*/            73066400
*            BKLG_NUM||                                                 73087300
*            '" "BKLG_NUM"'||                                           73108200
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              73129100
*        ANS MSG('?IEEQEMCS ---> '||ZMS);                               73150000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                73170900
*        ZMACRET=8;                          /* MACRO ERROR */          73191800
*      END;                                                             73212700
*/*PG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 73233600
*  ZXBKLG_NUM='INPUT';                       /* SET IN/OUTPUT */        73254500
*  XBKLG_NUM='10';                           /* SET DEFAULT */          73275400
*  IF BKLG_NUM(1)^=''                        /* CHECK FOR NULL */       73296300
*    THEN                                                               73317200
*      XBKLG_NUM=BKLG_NUM(1);                /* SET XVARIABLE */        73338100
*/*PG.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 73359000
*  IF CN='CN' | CN='()'                      /*CHECK ENTRY*/            73379900
*    THEN                                                               73400800
*      DO;                                                              73421700
*        ZMS=' 8, THE "CN" KEY'||            /**KOPTP* MSG*/            73442600
*            ' MUST CONTAIN ONE'||                                      73463500
*            ' (OR MORE) ARGUMENT(S).';                                 73484400
*        ANS MSG('?IEEQEMCS ---> '||ZMS);                               73505300
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                73526200
*        ZMACRET=8;                          /* MACRO ERROR */          73547100
*      END;                                                             73568000
*  IF NUMBER(CN)>1                           /* CHECK POSITIONALS */    73588900
*    THEN                                                               73609800
*      DO;                                                              73630700
*        ZMS=' 8, "CN'||                     /**KPOSP* MSG*/            73651600
*            CN||                                                       73672500
*            '" "CN"'||                                                 73693400
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              73714300
*        ANS MSG('?IEEQEMCS ---> '||ZMS);                               73735200
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                73756100
*        ZMACRET=8;                          /* MACRO ERROR */          73777000
*      END;                                                             73797900
*/*PG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 73818800
*  ZXCN='INPUT';                             /* SET IN/OUTPUT */        73839700
*  XCN='ANY_CONS';                           /* SET DEFAULT */          73860600
*  IF CN(1)^=''                              /* CHECK FOR NULL */       73881500
*    THEN                                                               73902400
*      XCN=CN(1);                            /* SET XVARIABLE */        73923300
*/*PG.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 73944200
*  IF SYS='SYS' | SYS='()'                   /*CHECK ENTRY*/            73965100
*    THEN                                                               73986000
*      DO;                                                              74006900
*        ZMS=' 8, THE "SYS" KEY'||           /**KOPTP* MSG*/            74027800
*            ' MUST CONTAIN ONE'||                                      74048700
*            ' (OR MORE) ARGUMENT(S).';                                 74069600
*        ANS MSG('?IEEQEMCS ---> '||ZMS);                               74090500
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                74111400
*        ZMACRET=8;                          /* MACRO ERROR */          74132300
*      END;                                                             74153200
*  IF NUMBER(SYS)>1                          /* CHECK POSITIONALS */    74174100
*    THEN                                                               74195000
*      DO;                                                              74215900
*        ZMS=' 8, "SYS'||                    /**KPOSP* MSG*/            74236800
*            SYS||                                                      74257700
*            '" "SYS"'||                                                74278600
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              74299500
*        ANS MSG('?IEEQEMCS ---> '||ZMS);                               74320400
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                74341300
*        ZMACRET=8;                          /* MACRO ERROR */          74362200
*      END;                                                             74383100
*/*PG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 74404000
*  ZXSYS='INPUT';                            /* SET IN/OUTPUT */        74424900
*  XSYS='ANY_SYS';                           /* SET DEFAULT */          74445800
*  IF SYS(1)^=''                             /* CHECK FOR NULL */       74466700
*    THEN                                                               74487600
*      XSYS=SYS(1);                          /* SET XVARIABLE */        74508500
*/*PG.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 74529400
*  IF KEY='KEY' | KEY='()'                   /*CHECK ENTRY*/            74550300
*    THEN                                                               74571200
*      DO;                                                              74592100
*        ZMS=' 8, THE "KEY" KEY'||           /**KOPTP* MSG*/            74613000
*            ' MUST CONTAIN ONE'||                                      74633900
*            ' (OR MORE) ARGUMENT(S).';                                 74654800
*        ANS MSG('?IEEQEMCS ---> '||ZMS);                               74675700
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                74696600
*        ZMACRET=8;                          /* MACRO ERROR */          74717500
*      END;                                                             74738400
*  IF NUMBER(KEY)>1                          /* CHECK POSITIONALS */    74759300
*    THEN                                                               74780200
*      DO;                                                              74801100
*        ZMS=' 8, "KEY'||                    /**KPOSP* MSG*/            74822000
*            KEY||                                                      74842900
*            '" "KEY"'||                                                74863800
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              74884700
*        ANS MSG('?IEEQEMCS ---> '||ZMS);                               74905600
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                74926500
*        ZMACRET=8;                          /* MACRO ERROR */          74947400
*      END;                                                             74968300
*/*PG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 74989200
*  ZXKEY='INPUT';                            /* SET IN/OUTPUT */        75010100
*  XKEY='ANY_KEY';                           /* SET DEFAULT */          75031000
*  IF KEY(1)^=''                             /* CHECK FOR NULL */       75051900
*    THEN                                                               75072800
*      XKEY=KEY(1);                          /* SET XVARIABLE */        75093700
*/*PG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 75112600
*  IF AUTH='AUTH'                            /* CHECK ENTRY */          75131500
*    THEN                                                               75150400
*      DO;                                                              75169300
*        ZMS=' 8, THE "AUTH" KEY'||          /**KOPTP* MSG*/            75188200
*            ' MUST CONTAIN ONE'||                                      75207100
*            ' (OR MORE) ARGUMENT(S).';                                 75226000
*        ANS MSG('?IEEQEMCS ---> '||ZMS);                               75244900
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                75263800
*        ZMACRET=8;                          /* MACRO ERROR */          75282700
*      END;                                                             75301600
*  IF NUMBER(AUTH)>1                         /* CHECK POSITIONALS */    75320500
*    THEN                                                               75339400
*      DO;                                                              75358300
*        ZMS=' 8, "AUTH'||                   /**KPOSP* MSG*/            75377200
*            AUTH||                                                     75396100
*            '" "AUTH"'||                                               75415000
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              75433900
*        ANS MSG('?IEEQEMCS ---> '||ZMS);                               75452800
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                75471700
*        ZMACRET=8;                          /* MACRO ERROR */          75490600
*      END;                                                             75509500
*/*PG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 75528400
*  XAUTH='';                                 /* RESET XVARIABLE */      75547300
*  IF AUTH(1) = 'ANY'                                                   75551000
*    THEN                                                               75554700
*      XAUTH = 'ANY';                        /* SET XVARIABLE */        75558400
*/*PG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 75562100
*  IF AUTH(1) = 'MASTER'                                                75566200
*    THEN                                                               75585100
*      XAUTH = 'MASTER';                     /* SET XVARIABLE */        75604000
*/*PG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 75622900
*  IF AUTH(1) = 'SYS'                                                   75641800
*    THEN                                                               75660700
*      XAUTH = 'SYS';                        /* SET XVARIABLE */        75679600
*/*PG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 75698500
*  IF AUTH(1) = 'IO'                                                    75717400
*    THEN                                                               75736300
*      XAUTH = 'IO';                         /* SET XVARIABLE */        75755200
*/*PG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 75774100
*  IF AUTH(1) = 'CONS'                                                  75793000
*    THEN                                                               75811900
*      XAUTH = 'CONS';                       /* SET XVARIABLE */        75830800
*/*PG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 75849700
*  IF AUTH(1) = 'ALL'                                                   75868600
*    THEN                                                               75887500
*      XAUTH = 'ALL';                        /* SET XVARIABLE */        75906400
*/*PG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 75925300
*  IF AUTH(1) = 'INFO'                                                  75944200
*    THEN                                                               75963100
*      XAUTH = 'INFO';                       /* SET XVARIABLE */        75982000
*/*PG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 75982900
*  IF AUTH(1) = 'SYSONLY'                                               75983800
*    THEN                                                               75984700
*      XAUTH = 'SYSONLY';                    /* SET XVARIABLE */        75985600
*/*PG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 75986500
*  IF AUTH(1) = 'IOONLY'                                                75987400
*    THEN                                                               75988300
*      XAUTH = 'IOONLY';                     /* SET XVARIABLE */        75989200
*/*PG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 75990100
*  IF AUTH(1) = 'CONSONLY'                                              75991000
*    THEN                                                               75991900
*      XAUTH = 'CONSONLY';                   /* SET XVARIABLE */        75992800
*/*PG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 75993700
*  IF AUTH(1) = 'ALLONLY'                                               75994600
*    THEN                                                               75995500
*      XAUTH = 'ALLONLY';                    /* SET XVARIABLE */        75996400
*/*PG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 75997300
*  IF AUTH(1) = 'INFOONLY'                                              75998200
*    THEN                                                               75999100
*      XAUTH = 'INFOONLY';                   /* SET XVARIABLE */        76000000
*/*PG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 76000900
*  ZXAUTH='INPUT';                           /* SET IN/OUTPUT */        76019800
*  IF XAUTH=''                               /* CHECK FOR KEYWORD */    76038700
*    THEN                                                               76057600
*      DO;                                   /* KEYWORD NOT ENTERED */  76076500
*        XAUTH='ANY';                        /* SET DEFAULT */          76095400
*        IF AUTH(1)^=''                                                 76114300
*          THEN                                                         76133200
*            DO;                                                        76152100
*              ZXAUTH='';                    /* RESET IN/OUTPUT */      76171000
*              ZMS=' 8, "AUTH'||             /**KUKWP* MSG*/            76189900
*                  AUTH||'"'||                                          76208800
*                  ' ARGUMENT 1 IS AN UNKNOWN KEYWORD. '||              76227700
*                  ' VALID KEYWORD CHOICE(S) ARE:'||                    76246600
*                  ' "ANY",'||               /* VALID KEYWORD */        76256000
*                  ' "MASTER",'||            /* VALID KEYWORD */        76265500
*                  ' "SYS",'||               /* VALID KEYWORD */        76284400
*                  ' "IO",'||                /* VALID KEYWORD */        76303300
*                  ' "CONS",'||              /* VALID KEYWORD */        76322200
*                  ' "ALL",'||               /* VALID KEYWORD */        76341100
*                  ' "INFO",'||              /* VALID KEYWORD */        76346500
*                  ' "SYSONLY",'||           /* VALID KEYWORD */        76351900
*                  ' "IOONLY",'||            /* VALID KEYWORD */        76357300
*                  ' "CONSONLY",'||          /* VALID KEYWORD */        76362700
*                  ' "ALLONLY",'||           /* VALID KEYWORD */        76368100
*                  ' OR "INFOONLY".';        /* VALID KEYWORD */        76373500
*              ANS MSG('?IEEQEMCS ---> '||ZMS);                         76378900
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          76397800
*              ZMACRET=8;                    /* MACRO ERROR */          76416700
*            END;                                                       76435600
*      END;                                                             76454500
*/*PG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 76473400
*  IF ATTR='ATTR'                            /* CHECK ENTRY */          76492300
*    THEN                                                               76511200
*      DO;                                                              76530100
*        ZMS=' 8, THE "ATTR" KEY'||          /**KOPTP* MSG*/            76549000
*            ' MUST CONTAIN ONE'||                                      76567900
*            ' (OR MORE) ARGUMENT(S).';                                 76586800
*        ANS MSG('?IEEQEMCS ---> '||ZMS);                               76605700
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                76624600
*        ZMACRET=8;                          /* MACRO ERROR */          76643500
*      END;                                                             76662400
*  IF NUMBER(ATTR)>1                         /* CHECK POSITIONALS */    76681300
*    THEN                                                               76700200
*      DO;                                                              76719100
*        ZMS=' 8, "ATTR'||                   /**KPOSP* MSG*/            76738000
*            ATTR||                                                     76756900
*            '" "ATTR"'||                                               76775800
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              76794700
*        ANS MSG('?IEEQEMCS ---> '||ZMS);                               76813600
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                76832500
*        ZMACRET=8;                          /* MACRO ERROR */          76851400
*      END;                                                             76870300
*/*PG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 76889200
*  XATTR='';                                 /* RESET XVARIABLE */      76908100
*  IF ATTR(1) = 'ANY'                                                   76927000
*    THEN                                                               76945900
*      XATTR = 'ANY';                        /* SET XVARIABLE */        76964800
*/*PG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 76968500
*  IF ATTR(1) = 'YES'                                                   76972200
*    THEN                                                               76975900
*      XATTR = 'YES';                        /* SET XVARIABLE */        76979600
*/*PG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 76983700
*  IF ATTR(1) = 'ROUT'                                                  77002600
*    THEN                                                               77021500
*      XATTR = 'ROUT';                       /* SET XVARIABLE */        77040400
*/*PG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 77059300
*  IF ATTR(1) = 'UD'                                                    77078200
*    THEN                                                               77097100
*      XATTR = 'UD';                         /* SET XVARIABLE */        77116000
*/*PG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 77134900
*  IF ATTR(1) = 'UDN'                                                   77153800
*    THEN                                                               77172700
*      XATTR = 'UDN';                        /* SET XVARIABLE */        77191600
*/*PG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 77210500
*  IF ATTR(1) = 'HC'                                                    77229400
*    THEN                                                               77248300
*      XATTR = 'HC';                         /* SET XVARIABLE */        77267200
*/*PG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 77286100
*  IF ATTR(1) = 'AUTO'                                                  77305000
*    THEN                                                               77323900
*      XATTR = 'AUTO';                       /* SET XVARIABLE */        77342800
*/*PG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 77361700
*  IF ATTR(1) = 'AUTON'                                                 77380600
*    THEN                                                               77399500
*      XATTR = 'AUTON';                      /* SET XVARIABLE */        77418400
*/*PG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 77437300
*  IF ATTR(1) = 'MN'                                                    77456200
*    THEN                                                               77475100
*      XATTR = 'MN';                         /* SET XVARIABLE */        77494000
*/*PG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 77512900
*  IF ATTR(1) = 'NONE'                                                  77531800
*    THEN                                                               77550700
*      XATTR = 'NONE';                       /* SET XVARIABLE */        77569600
*/*PG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 77588500
*  ZXATTR='INPUT';                           /* SET IN/OUTPUT */        77607400
*  IF XATTR=''                               /* CHECK FOR KEYWORD */    77626300
*    THEN                                                               77645200
*      DO;                                   /* KEYWORD NOT ENTERED */  77664100
*        XATTR='ANY';                        /* SET DEFAULT */          77683000
*        IF ATTR(1)^=''                                                 77701900
*          THEN                                                         77720800
*            DO;                                                        77739700
*              ZXATTR='';                    /* RESET IN/OUTPUT */      77758600
*              ZMS=' 8, "ATTR'||             /**KUKWP* MSG*/            77777500
*                  ATTR||'"'||                                          77796400
*                  ' ARGUMENT 1 IS AN UNKNOWN KEYWORD. '||              77815300
*                  ' VALID KEYWORD CHOICE(S) ARE:'||                    77834200
*                  ' "ANY",'||               /* VALID KEYWORD */        77853100
*                  ' "YES",'||               /* VALID KEYWORD */        77862500
*                  ' "ROUT",'||              /* VALID KEYWORD */        77872000
*                  ' "UD",'||                /* VALID KEYWORD */        77890900
*                  ' "UDN",'||               /* VALID KEYWORD */        77909800
*                  ' "HC",'||                /* VALID KEYWORD */        77928700
*                  ' "AUTO",'||              /* VALID KEYWORD */        77947600
*                  ' "AUTON",'||             /* VALID KEYWORD */        77966500
*                  ' "MN",'||                /* VALID KEYWORD */        77985400
*                  ' OR "NONE".';            /* VALID KEYWORD */        78004300
*              ANS MSG('?IEEQEMCS ---> '||ZMS);                         78023200
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          78042100
*              ZMACRET=8;                    /* MACRO ERROR */          78061000
*            END;                                                       78079900
*      END;                                                             78103300
*/*PG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 78124200
*  IF DOM='DOM'                              /* CHECK ENTRY */          78145100
*    THEN                                                               78166000
*      DO;                                                              78186900
*        ZMS=' 8, THE "DOM" KEY'||           /**KOPTP* MSG*/            78207800
*            ' MUST CONTAIN ONE'||                                      78228700
*            ' (OR MORE) ARGUMENT(S).';                                 78249600
*        ANS MSG('?IEEQEMCS ---> '||ZMS);                               78270500
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                78291400
*        ZMACRET=8;                          /* MACRO ERROR */          78312300
*      END;                                                             78333200
*  IF NUMBER(DOM)>1                          /* CHECK POSITIONALS */    78354100
*    THEN                                                               78375000
*      DO;                                                              78395900
*        ZMS=' 8, "DOM'||                    /**KPOSP* MSG*/            78416800
*            DOM||                                                      78437700
*            '" "DOM"'||                                                78458600
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              78479500
*        ANS MSG('?IEEQEMCS ---> '||ZMS);                               78500400
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                78521300
*        ZMACRET=8;                          /* MACRO ERROR */          78542200
*      END;                                                             78563100
*/*PG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 78584000
*  XDOM='';                                  /* RESET XVARIABLE */      78604900
*  IF DOM(1) = 'ANY'                                                    78636200
*    THEN                                                               78667600
*      XDOM = 'ANY';                         /* SET XVARIABLE */        78688500
*/*PG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 78692600
*  IF DOM(1) = 'YES'                                                    78696700
*    THEN                                                               78700800
*      XDOM = 'YES';                         /* SET XVARIABLE */        78704900
*/*PG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 78709400
*  IF DOM(1) = 'NORMAL'                                                 78740700
*    THEN                                                               78772100
*      XDOM = 'NORMAL';                      /* SET XVARIABLE */        78793000
*/*PG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 78813900
*  IF DOM(1) = 'ALL'                                                    78845200
*    THEN                                                               78876600
*      XDOM = 'ALL';                         /* SET XVARIABLE */        78897500
*/*PG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 78918400
*  IF DOM(1) = 'NONE'                                                   78949700
*    THEN                                                               78981100
*      XDOM = 'NONE';                        /* SET XVARIABLE */        79002000
*/*PG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 79022900
*  ZXDOM='INPUT';                            /* SET IN/OUTPUT */        79043800
*  IF XDOM=''                                /* CHECK FOR KEYWORD */    79064700
*    THEN                                                               79085600
*      DO;                                   /* KEYWORD NOT ENTERED */  79106500
*        XDOM='ANY';                         /* SET DEFAULT */          79127400
*        IF DOM(1)^=''                                                  79148300
*          THEN                                                         79169200
*            DO;                                                        79190100
*              ZXDOM='';                     /* RESET IN/OUTPUT */      79211000
*              ZMS=' 8, "DOM'||              /**KUKWP* MSG*/            79231900
*                  DOM||'"'||                                           79252800
*                  ' ARGUMENT 1 IS AN UNKNOWN KEYWORD. '||              79273700
*                  ' VALID KEYWORD CHOICE(S) ARE:'||                    79294600
*                  ' "ANY",'||               /* VALID KEYWORD */        79315500
*                  ' "YES",'||               /* VALID KEYWORD */        79325900
*                  ' "NORMAL",'||            /* VALID KEYWORD */        79336400
*                  ' "ALL",'||               /* VALID KEYWORD */        79357300
*                  ' OR "NONE".';            /* VALID KEYWORD */        79378200
*              ANS MSG('?IEEQEMCS ---> '||ZMS);                         79399100
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          79420000
*              ZMACRET=8;                    /* MACRO ERROR */          79440900
*            END;                                                       79461800
*      END;                                                             79482700
*/*PG.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 79503600
*  IF BUFPTR='BUFPTR' | BUFPTR='()'          /*CHECK ENTRY*/            79524500
*    THEN                                                               79545400
*      DO;                                                              79566300
*        ZMS=' 8, THE "BUFPTR" KEY'||        /**KOPTP* MSG*/            79587200
*            ' MUST CONTAIN ONE'||                                      79608100
*            ' (OR MORE) ARGUMENT(S).';                                 79629000
*        ANS MSG('?IEEQEMCS ---> '||ZMS);                               79649900
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                79670800
*        ZMACRET=8;                          /* MACRO ERROR */          79691700
*      END;                                                             79712600
*  IF NUMBER(BUFPTR)>1                       /* CHECK POSITIONALS */    79733500
*    THEN                                                               79754400
*      DO;                                                              79775300
*        ZMS=' 8, "BUFPTR'||                 /**KPOSP* MSG*/            79796200
*            BUFPTR||                                                   79817100
*            '" "BUFPTR"'||                                             79838000
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              79858900
*        ANS MSG('?IEEQEMCS ---> '||ZMS);                               79879800
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                79900700
*        ZMACRET=8;                          /* MACRO ERROR */          79921600
*      END;                                                             79942500
*/*PG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 79992500
*  ZXBUFPTR='INPUT';                         /* SET IN/OUTPUT */        80042500
*  XBUFPTR='0';                              /* SET DEFAULT */          80092500
*  IF BUFPTR(1)^=''                          /* CHECK FOR NULL */       80142500
*    THEN                                                               80192500
*      XBUFPTR=BUFPTR(1);                    /* SET XVARIABLE */        80242500
*/*PG.KXVAR01 NAME, OPT RQD INPUT, KEYS -EXCESSIVE ARGUMENTS---------*/ 80292500
*  IF NUMBER(BUFSIZE)>1                      /* CHECK POSITIONALS */    80342500
*    THEN                                                               80799400
*      DO;                                                              80820300
*        ZMS=' 8, "BUFSIZE'||                /**KPOSP* MSG*/            80825400
*            BUFSIZE||                                                  80830500
*            '" "BUFSIZE"'||                                            80835600
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              80840700
*        ANS MSG('?IEEQEMCS ---> '||ZMS);                               80845800
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                80850900
*        ZMACRET=8;                          /* MACRO ERROR */          80856000
*      END;                                                             80861100
*/*PG.KXVAR07 NAME, OPT RQD INPUT, KEYS -XVARIABLE-------------------*/ 80866200
*  ZXBUFSIZE='INPUT';                        /* SET IN/OUTPUT*/         80871300
*  XBUFSIZE=BUFSIZE(1);                      /* SET XVARIABLE */        80876400
*  IF BUFPTR(1)=''                           /* CHECK KEY */            80881500
*    THEN                                                               80886600
*      DO;                                                              80891700
*        IF BUFSIZE(1)=''                    /* CHECK PARM */           80896800
*          THEN                                                         80901900
*            XBUFSIZE='0';                   /* SET DEFAULT */          80907000
*          ELSE                                                         80912300
*            DO;                                                        80935300
*            ZMS=' 8, "BUFSIZE'||            /**KDEPP* MSG*/            80958300
*                BUFSIZE||'"'||                                         80981300
*                ' CAN ONLY BE SPECIFIED IF'||                          81004300
*                ' '||                                                  81027300
*                ' "BUFPTR"'||                                          81050300
*                ' IS ALSO SPECIFIED.';                                 81073300
*            ANS MSG('?IEEQEMCS ---> '||ZMS);                           81096300
*            ANS(COMMENT(ZMS)) COL(MACLMAR);                            81119300
*            ZMACRET=8;                      /* MACRO ERROR */          81142300
*            END;                                                       81165300
*      END;                                                             81188300
*    ELSE                                                               81211300
*      IF BUFSIZE(1)=''                      /* CHECK PARM */           81234300
*        THEN                                                           81257300
*          DO;                                                          81280300
*            ZXBUFSIZE='';                   /* RESET IN/OUTPUT*/       81303300
*            ZMS=' 8,  '||                                              81326300
*                ' "BUFSIZE" KEY AND ITS'||                             81349300
*                ' ARGUMENT ARE REQUIRED.';  /**KRQDP* MSG*/            81372300
*            ANS MSG('?IEEQEMCS ---> '||ZMS);                           81395300
*            ANS(COMMENT(ZMS)) COL(MACLMAR);                            81418300
*            ZMACRET=8;                      /* MACRO ERROR */          81441300
*          END;                                                         81464300
*/*PG.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 81514300
*  IF CONSCNT='CONSCNT' | CONSCNT='()'       /*CHECK ENTRY*/            81593600
*    THEN                                                               81614500
*      DO;                                                              81635400
*        ZMS=' 8, THE "CONSCNT" KEY'||       /**KOPTP* MSG*/            81656300
*            ' MUST CONTAIN ONE'||                                      81677200
*            ' (OR MORE) ARGUMENT(S).';                                 81698100
*        ANS MSG('?IEEQEMCS ---> '||ZMS);                               81719000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                81739900
*        ZMACRET=8;                          /* MACRO ERROR */          81760800
*      END;                                                             81781700
*  IF NUMBER(CONSCNT)>1                      /* CHECK POSITIONALS */    81802600
*    THEN                                                               81823500
*      DO;                                                              81844400
*        ZMS=' 8, "CONSCNT'||                /**KPOSP* MSG*/            81865300
*            CONSCNT||                                                  81886200
*            '" "CONSCNT"'||                                            81907100
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              81928000
*        ANS MSG('?IEEQEMCS ---> '||ZMS);                               81948900
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                81969800
*        ZMACRET=8;                          /* MACRO ERROR */          81990700
*      END;                                                             82011600
*/*PG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 82022000
*  ZXCONSCNT='INPUT';                        /* SET IN/OUTPUT */        82032400
*  XCONSCNT='0';                             /* SET DEFAULT */          82042800
*  IF CONSCNT(1)^=''                         /* CHECK FOR NULL */       82053400
*    THEN                                                               82074300
*      XCONSCNT=CONSCNT(1);                  /* SET XVARIABLE */        82124300
*/*PG.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 82174300
*  IF TOKEN='TOKEN' | TOKEN='()'             /*CHECK ENTRY*/            82325100
*    THEN                                                               82346000
*      DO;                                                              82366900
*        ZMS=' 8, THE "TOKEN" KEY'||         /**KOPTP* MSG*/            82387800
*            ' MUST CONTAIN ONE'||                                      82408700
*            ' (OR MORE) ARGUMENT(S).';                                 82429600
*        ANS MSG('?IEEQEMCS ---> '||ZMS);                               82450500
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                82471400
*        ZMACRET=8;                          /* MACRO ERROR */          82492300
*      END;                                                             82513200
*  IF NUMBER(TOKEN)>1                        /* CHECK POSITIONALS */    82534100
*    THEN                                                               82555000
*      DO;                                                              82575900
*        ZMS=' 8, "TOKEN'||                  /**KPOSP* MSG*/            82596800
*            TOKEN||                                                    82617700
*            '" "TOKEN"'||                                              82638600
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              82659500
*        ANS MSG('?IEEQEMCS ---> '||ZMS);                               82680400
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                82701300
*        ZMACRET=8;                          /* MACRO ERROR */          82722200
*      END;                                                             82743100
*/*PG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 82764000
*  ZXTOKEN='INPUT';                          /* SET IN/OUTPUT */        82784900
*  XTOKEN='0';                               /* SET DEFAULT */          82805800
*  IF TOKEN(1)^=''                           /* CHECK FOR NULL */       82826700
*    THEN                                                               82847600
*      XTOKEN=TOKEN(1);                      /* SET XVARIABLE */        82868500
*/*PG.KXVAR01 NAME, OPT RQD INPUT, KEYS -EXCESSIVE ARGUMENTS---------*/ 82868900
*  IF NUMBER(RECSIZE)>1                      /* CHECK POSITIONALS */    82869300
*    THEN                                                               82869700
*      DO;                                                              82870100
*        ZMS=' 8, "RECSIZE'||                /**KPOSP* MSG*/            82870500
*            RECSIZE||                                                  82870900
*            '" "RECSIZE"'||                                            82871300
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              82871700
*        ANS MSG('?IEEQEMCS ---> '||ZMS);                               82872100
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                82872500
*        ZMACRET=8;                          /* MACRO ERROR */          82872900
*      END;                                                             82873300
*/*PG.KXVAR07 NAME, OPT RQD INPUT, KEYS -XVARIABLE-------------------*/ 82873700
*  ZXRECSIZE='INPUT';                        /* SET IN/OUTPUT*/         82874100
*  XRECSIZE=RECSIZE(1);                      /* SET XVARIABLE */        82874500
*  IF TOKEN(1)=''                            /* CHECK KEY */            82874900
*    THEN                                                               82875300
*      DO;                                                              82875700
*        IF RECSIZE(1)=''                    /* CHECK PARM */           82876100
*          THEN                                                         82876500
*            ZXRECSIZE='';                   /* RESET IN/OUTPUT*/       82876900
*          ELSE                                                         82877300
*            DO;                                                        82877700
*            ZMS=' 8, "RECSIZE'||            /**KDEPP* MSG*/            82878100
*                RECSIZE||'"'||                                         82878500
*                ' CAN ONLY BE SPECIFIED IF'||                          82878900
*                ' '||                                                  82879300
*                ' "TOKEN"'||                                           82879700
*                ' IS ALSO SPECIFIED.';                                 82880100
*            ANS MSG('?IEEQEMCS ---> '||ZMS);                           82880500
*            ANS(COMMENT(ZMS)) COL(MACLMAR);                            82880900
*            ZMACRET=8;                      /* MACRO ERROR */          82881300
*            END;                                                       82881700
*      END;                                                             82882100
*    ELSE                                                               82882500
*      IF RECSIZE(1)=''                      /* CHECK PARM */           82882900
*        THEN                                                           82883300
*          DO;                                                          82883700
*            ZXRECSIZE='';                   /* RESET IN/OUTPUT*/       82884100
*            ZMS=' 8,  '||                                              82884500
*                ' "RECSIZE" KEY AND ITS'||                             82884900
*                ' ARGUMENT ARE REQUIRED.';  /**KRQDP* MSG*/            82885300
*            ANS MSG('?IEEQEMCS ---> '||ZMS);                           82885700
*            ANS(COMMENT(ZMS)) COL(MACLMAR);                            82886100
*            ZMACRET=8;                      /* MACRO ERROR */          82886500
*          END;                                                         82886900
*/*PG.KXVAR01 NAME, OPT OUTPUT, KEYS -EXCESSIVE ARGUMENTS------------*/ 82889400
*  IF RETCODE='RETCODE' | RETCODE='()'       /*CHECK ENTRY*/            82910300
*    THEN                                                               82931200
*      DO;                                                              82952100
*        ZMS=' 8, THE "RETCODE" KEY'||       /**KOPTP* MSG*/            82973000
*            ' MUST CONTAIN ONE'||                                      82993900
*            ' (OR MORE) ARGUMENT(S).';                                 83014800
*        ANS MSG('?IEEQEMCS ---> '||ZMS);                               83035700
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                83056600
*        ZMACRET=8;                          /* MACRO ERROR */          83077500
*      END;                                                             83098400
*  IF NUMBER(RETCODE)>1                      /* CHECK POSITIONALS */    83119300
*    THEN                                                               83140200
*      DO;                                                              83161100
*        ZMS=' 8, "RETCODE'||                /**KPOSP* MSG*/            83182000
*            RETCODE||                                                  83202900
*            '" "RETCODE"'||                                            83223800
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              83244700
*        ANS MSG('?IEEQEMCS ---> '||ZMS);                               83265600
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                83286500
*        ZMACRET=8;                          /* MACRO ERROR */          83307400
*      END;                                                             83328300
*/*PG.KXVAR15 NAME, OPT OUTPUT, KEYS -XVARIABLE----------------------*/ 83349200
*  IF RETCODE(1)^=''                         /* CHECK FOR NULL */       83370100
*    THEN                                                               83391000
*      DO;                                                              83411900
*        XRETCODE=RETCODE(1);                /* SET XVARIABLE */        83432800
*        ZXRETCODE='OUTPUT';                 /* SET OUTPUT */           83453700
*      END;                                                             83474600
*  ELSE                                                                 83495500
*    IF ZXRETCODE^=''                                                   83516400
*      THEN                                                             83537300
*        ZXRETCODE='';                       /* RESET OUTPUT */         83558200
*/*PG.KXVAR01 NAME, OPT OUTPUT, KEYS -EXCESSIVE ARGUMENTS------------*/ 83558800
*  IF RSNCODE='RSNCODE' | RSNCODE='()'       /*CHECK ENTRY*/            83559400
*    THEN                                                               83560000
*      DO;                                                              83560600
*        ZMS=' 8, THE "RSNCODE" KEY'||       /**KOPTP* MSG*/            83561200
*            ' MUST CONTAIN ONE'||                                      83561800
*            ' (OR MORE) ARGUMENT(S).';                                 83562400
*        ANS MSG('?IEEQEMCS ---> '||ZMS);                               83563000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                83563600
*        ZMACRET=8;                          /* MACRO ERROR */          83564200
*      END;                                                             83564800
*  IF NUMBER(RSNCODE)>1                      /* CHECK POSITIONALS */    83565400
*    THEN                                                               83566000
*      DO;                                                              83566600
*        ZMS=' 8, "RSNCODE'||                /**KPOSP* MSG*/            83567200
*            RSNCODE||                                                  83567800
*            '" "RSNCODE"'||                                            83568400
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              83569000
*        ANS MSG('?IEEQEMCS ---> '||ZMS);                               83569600
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                83570200
*        ZMACRET=8;                          /* MACRO ERROR */          83570800
*      END;                                                             83571400
*/*PG.KXVAR15 NAME, OPT OUTPUT, KEYS -XVARIABLE----------------------*/ 83572000
*  IF RSNCODE(1)^=''                         /* CHECK FOR NULL */       83572600
*    THEN                                                               83573200
*      DO;                                                              83573800
*        XRSNCODE=RSNCODE(1);                /* SET XVARIABLE */        83574400
*        ZXRSNCODE='OUTPUT';                 /* SET OUTPUT */           83575000
*      END;                                                             83575600
*  ELSE                                                                 83576200
*    IF ZXRSNCODE^=''                                                   83576800
*      THEN                                                             83577400
*        ZXRSNCODE='';                       /* RESET OUTPUT */         83578000
*/*PG.P04 XMF^='L' & XMFSCK='COMPLETE' ------------------------------*/ 83579100
*      END;                                  /* END COMPLETE CHECKING*/ 83600000
*/********************************************************************/ 83620900
*/***PE.MF00 PARTIAL MACRO SYNTAX CHECKING                           */ 83641800
*/********************************************************************/ 83662700
*/*PE.MF01 XMF^='L' & XMFSCK='NOCHECK' ------------------------------*/ 83683600
*  IF XMF^='L' & XMFSCK='NOCHECK'                                       83704500
*    THEN                                                               83725400
*      DO;                                   /* PARTIAL SYNTAX CHECK */ 83746300
*/*PE.KC00 INITIALIZE KEYWORD CONTROL VARIABLES----------------------*/ 83767200
*  XREQUEST='';                        /*ejb rmp93*/                    83788100
*  XSTATUS='';                        /*ejb rmp93*/                     83809000
*  XAUTH='';                        /*ejb rmp93*/                       83815900
*  XATTR='';                        /*ejb rmp93*/                       83822800
*  XDOM='';                        /*ejb rmp93*/                        83829900
*/*PE.P01 EXCESSIVE POSITIONALS--------------------------------------*/ 83850800
*  IF NUMBER(MACLIST)>0                      /* CHECK POSITIONALS */    83871700
*    THEN                                                               83892600
*      DO;                                                              83913500
*        ZMS=' 8, POSITIONAL ARGUMENT(S),'|| /**PPOSP* MSG*/            83934400
*            ' "'||MACLIST||'"'||                                       83955300
*            ' CANNOT BE USED.'||                                       83976200
*            ' NO POSITIONAL ARGUMENTS'||                               83997100
*            ' ARE ALLOWED.';                                           84018000
*        ANS MSG('?IEEQEMCS ---> '||ZMS);                               84038900
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                84059800
*        ZMACRET=8;                          /* MACRO ERROR */          84080700
*      END;                                                             84101600
*/*PE.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 84122500
*  IF REQUEST='REQUEST'                      /* CHECK ENTRY */          84143400
*    THEN                                                               84164300
*      DO;                                                              84185200
*        ZMS=' 8, THE "REQUEST" KEY'||       /**KOPTP* MSG*/            84206100
*            ' MUST CONTAIN ONE'||                                      84227000
*            ' (OR MORE) ARGUMENT(S).';                                 84247900
*        ANS MSG('?IEEQEMCS ---> '||ZMS);                               84268800
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                84289700
*        ZMACRET=8;                          /* MACRO ERROR */          84310600
*      END;                                                             84331500
*  IF NUMBER(REQUEST)>1                      /* CHECK POSITIONALS */    84352400
*    THEN                                                               84373300
*      DO;                                                              84394200
*        ZMS=' 8, "REQUEST'||                /**KPOSP* MSG*/            84415100
*            REQUEST||                                                  84436000
*            '" "REQUEST"'||                                            84456900
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              84477800
*        ANS MSG('?IEEQEMCS ---> '||ZMS);                               84498700
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                84519600
*        ZMACRET=8;                          /* MACRO ERROR */          84540500
*      END;                                                             84561400
*/*PE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 84582300
*  IF REQUEST(1) = 'COUNT'                                              84603200
*    THEN                                                               84624100
*      XREQUEST = 'COUNT';                   /* SET XVARIABLE */        84645000
*/*PE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 84665900
*  IF REQUEST(1) = 'SUMMARY'                                            84686800
*    THEN                                                               84707700
*      XREQUEST = 'SUMMARY';                 /* SET XVARIABLE */        84728600
*/*PE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 84749500
*  IF REQUEST(1) = 'INFO'                                               84770400
*    THEN                                                               84791300
*      XREQUEST = 'INFO';                    /* SET XVARIABLE */        84812200
*/*PE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 84833100
*  IF REQUEST(1) = 'FULL'                                               84854000
*    THEN                                                               84874900
*      XREQUEST = 'FULL';                    /* SET XVARIABLE */        84895800
*/*PE.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 84916700
*  IF XREQUEST^=''                           /* CHECK FOR KEYWORD */    84937600
*    THEN                                                               84958500
*      ZXREQUEST='INPUT';                    /* SET IN/OUTPUT */        84979400
*    ELSE                                                               85000300
*      DO;                                   /* KEYWORD NOT ENTERED */  85021200
*        IF REQUEST(1)^=''                                              85042100
*          THEN                                                         85063000
*            DO;                                                        85083900
*              ZMS=' 8, "REQUEST'||          /**KUKWP* MSG*/            85104800
*                  REQUEST||'"'||                                       85125700
*                  ' ARGUMENT 1 IS AN UNKNOWN KEYWORD. '||              85146600
*                  ' VALID KEYWORD CHOICE(S) ARE:'||                    85167500
*                  ' "COUNT",'||             /* VALID KEYWORD */        85188400
*                  ' "SUMMARY",'||           /* VALID KEYWORD */        85209300
*                  ' "INFO",'||              /* VALID KEYWORD */        85230200
*                  ' OR "FULL".';            /* VALID KEYWORD */        85251100
*              ANS MSG('?IEEQEMCS ---> '||ZMS);                         85272000
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          85292900
*              ZMACRET=8;                    /* MACRO ERROR */          85313800
*            END;                                                       85334700
*      END;                                                             85355600
*/*PE.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 85376500
*  IF STATUS='STATUS'                        /* CHECK ENTRY */          85397400
*    THEN                                                               85418300
*      DO;                                                              85439200
*        ZMS=' 8, THE "STATUS" KEY'||        /**KOPTP* MSG*/            85460100
*            ' MUST CONTAIN ONE'||                                      85481000
*            ' (OR MORE) ARGUMENT(S).';                                 85501900
*        ANS MSG('?IEEQEMCS ---> '||ZMS);                               85522800
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                85543700
*        ZMACRET=8;                          /* MACRO ERROR */          85564600
*      END;                                                             85585500
*  IF NUMBER(STATUS)>1                       /* CHECK POSITIONALS */    85606400
*    THEN                                                               85627300
*      DO;                                                              85648200
*        ZMS=' 8, "STATUS'||                 /**KPOSP* MSG*/            85669100
*            STATUS||                                                   85690000
*            '" "STATUS"'||                                             85710900
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              85731800
*        ANS MSG('?IEEQEMCS ---> '||ZMS);                               85752700
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                85773600
*        ZMACRET=8;                          /* MACRO ERROR */          85794500
*      END;                                                             85815400
*/*PE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 85836300
*  IF STATUS(1) = 'ACTIVE'                                              85857200
*    THEN                                                               85878100
*      XSTATUS = 'ACTIVE';                   /* SET XVARIABLE */        85899000
*/*PE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 85919900
*  IF STATUS(1) = 'INACTIVE'                                            85940800
*    THEN                                                               85961700
*      XSTATUS = 'INACTIVE';                 /* SET XVARIABLE */        85982600
*/*PE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 86003500
*  IF STATUS(1) = 'ALL'                                                 86024400
*    THEN                                                               86045300
*      XSTATUS = 'ALL';                      /* SET XVARIABLE */        86066200
*/*PE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 86087100
*  IF STATUS(1) = 'BACKLOG'                                             86108000
*    THEN                                                               86128900
*      XSTATUS = 'BACKLOG';                  /* SET XVARIABLE */        86149800
*/*PE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 86170700
*  IF STATUS(1) = 'ERR'                                                 86191600
*    THEN                                                               86212500
*      XSTATUS = 'ERR';                      /* SET XVARIABLE */        86233400
*/*PE.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 86254300
*  IF XSTATUS^=''                            /* CHECK FOR KEYWORD */    86275200
*    THEN                                                               86296100
*      ZXSTATUS='INPUT';                     /* SET IN/OUTPUT */        86317000
*    ELSE                                                               86337900
*      DO;                                   /* KEYWORD NOT ENTERED */  86358800
*        IF STATUS(1)^=''                                               86379700
*          THEN                                                         86400600
*            DO;                                                        86421500
*              ZMS=' 8, "STATUS'||           /**KUKWP* MSG*/            86442400
*                  STATUS||'"'||                                        86463300
*                  ' ARGUMENT 1 IS AN UNKNOWN KEYWORD. '||              86484200
*                  ' VALID KEYWORD CHOICE(S) ARE:'||                    86505100
*                  ' "ACTIVE",'||            /* VALID KEYWORD */        86526000
*                  ' "INACTIVE",'||          /* VALID KEYWORD */        86546900
*                  ' "ALL",'||               /* VALID KEYWORD */        86567800
*                  ' "BACKLOG",'||           /* VALID KEYWORD */        86588700
*                  ' OR "ERR".';             /* VALID KEYWORD */        86609600
*              ANS MSG('?IEEQEMCS ---> '||ZMS);                         86630500
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          86651400
*              ZMACRET=8;                    /* MACRO ERROR */          86672300
*            END;                                                       86693200
*      END;                                                             86714100
*/*PE.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 86735000
*  IF BKLG_NUM='BKLG_NUM'                    /* CHECK ENTRY */          86755900
*    THEN                                                               86776800
*      DO;                                                              86797700
*        ZMS=' 8, THE "BKLG_NUM" KEY'||      /**KOPTP* MSG*/            86818600
*            ' MUST CONTAIN ONE'||                                      86839500
*            ' (OR MORE) ARGUMENT(S).';                                 86860400
*        ANS MSG('?IEEQEMCS ---> '||ZMS);                               86881300
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                86902200
*        ZMACRET=8;                          /* MACRO ERROR */          86923100
*      END;                                                             86944000
*  IF NUMBER(BKLG_NUM)>1                     /* CHECK POSITIONALS */    86964900
*    THEN                                                               86985800
*      DO;                                                              87006700
*        ZMS=' 8, "BKLG_NUM'||               /**KPOSP* MSG*/            87027600
*            BKLG_NUM||                                                 87048500
*            '" "BKLG_NUM"'||                                           87069400
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              87090300
*        ANS MSG('?IEEQEMCS ---> '||ZMS);                               87111200
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                87132100
*        ZMACRET=8;                          /* MACRO ERROR */          87153000
*      END;                                                             87173900
*/*PE.KXVAR03 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 87194800
*  IF BKLG_NUM(1)^=''                        /* CHECK FOR NULL */       87215700
*    THEN                                                               87236600
*      DO;                                                              87257500
*        XBKLG_NUM=BKLG_NUM(1);              /* SET XVARIABLE */        87278400
*        ZXBKLG_NUM='INPUT';                 /* SET IN/OUTPUT */        87299300
*      END;                                                             87320200
*/*PE.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 87341100
*  IF CN='CN'                                /* CHECK ENTRY */          87362000
*    THEN                                                               87382900
*      DO;                                                              87403800
*        ZMS=' 8, THE "CN" KEY'||            /**KOPTP* MSG*/            87424700
*            ' MUST CONTAIN ONE'||                                      87445600
*            ' (OR MORE) ARGUMENT(S).';                                 87466500
*        ANS MSG('?IEEQEMCS ---> '||ZMS);                               87487400
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                87508300
*        ZMACRET=8;                          /* MACRO ERROR */          87529200
*      END;                                                             87550100
*  IF NUMBER(CN)>1                           /* CHECK POSITIONALS */    87571000
*    THEN                                                               87591900
*      DO;                                                              87612800
*        ZMS=' 8, "CN'||                     /**KPOSP* MSG*/            87633700
*            CN||                                                       87654600
*            '" "CN"'||                                                 87675500
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              87696400
*        ANS MSG('?IEEQEMCS ---> '||ZMS);                               87717300
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                87738200
*        ZMACRET=8;                          /* MACRO ERROR */          87759100
*      END;                                                             87780000
*/*PE.KXVAR03 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 87800900
*  IF CN(1)^=''                              /* CHECK FOR NULL */       87821800
*    THEN                                                               87842700
*      DO;                                                              87863600
*        XCN=CN(1);                          /* SET XVARIABLE */        87884500
*        ZXCN='INPUT';                       /* SET IN/OUTPUT */        87905400
*      END;                                                             87926300
*/*PE.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 87947200
*  IF SYS='SYS'                              /* CHECK ENTRY */          87968100
*    THEN                                                               87989000
*      DO;                                                              88003800
*        ZMS=' 8, THE "SYS" KEY'||           /**KOPTP* MSG*/            88018600
*            ' MUST CONTAIN ONE'||                                      88033400
*            ' (OR MORE) ARGUMENT(S).';                                 88048200
*        ANS MSG('?IEEQEMCS ---> '||ZMS);                               88063000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                88077800
*        ZMACRET=8;                          /* MACRO ERROR */          88092600
*      END;                                                             88107400
*  IF NUMBER(SYS)>1                          /* CHECK POSITIONALS */    88122200
*    THEN                                                               88137000
*      DO;                                                              88151800
*        ZMS=' 8, "SYS'||                    /**KPOSP* MSG*/            88166600
*            SYS||                                                      88181400
*            '" "SYS"'||                                                88196200
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              88211000
*        ANS MSG('?IEEQEMCS ---> '||ZMS);                               88225800
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                88240600
*        ZMACRET=8;                          /* MACRO ERROR */          88255400
*      END;                                                             88270200
*/*PE.KXVAR03 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 88285000
*  IF SYS(1)^=''                             /* CHECK FOR NULL */       88299800
*    THEN                                                               88314600
*      DO;                                                              88329400
*        XSYS=SYS(1);                        /* SET XVARIABLE */        88344600
*        ZXSYS='INPUT';                      /* SET IN/OUTPUT */        88395400
*      END;                                                             88532400
*/*PE.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 88553300
*  IF KEY='KEY'                              /* CHECK ENTRY */          88574200
*    THEN                                                               88595100
*      DO;                                                              88616000
*        ZMS=' 8, THE "KEY" KEY'||           /**KOPTP* MSG*/            88636900
*            ' MUST CONTAIN ONE'||                                      88657800
*            ' (OR MORE) ARGUMENT(S).';                                 88678700
*        ANS MSG('?IEEQEMCS ---> '||ZMS);                               88699600
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                88720500
*        ZMACRET=8;                          /* MACRO ERROR */          88741400
*      END;                                                             88762300
*  IF NUMBER(KEY)>1                          /* CHECK POSITIONALS */    88783200
*    THEN                                                               88804100
*      DO;                                                              88825000
*        ZMS=' 8, "KEY'||                    /**KPOSP* MSG*/            88845900
*            KEY||                                                      88866800
*            '" "KEY"'||                                                88887700
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              88908600
*        ANS MSG('?IEEQEMCS ---> '||ZMS);                               88929500
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                88950400
*        ZMACRET=8;                          /* MACRO ERROR */          88971300
*      END;                                                             88992200
*/*PE.KXVAR03 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 89013100
*  IF KEY(1)^=''                             /* CHECK FOR NULL */       89034000
*    THEN                                                               89054900
*      DO;                                                              89075800
*        XKEY=KEY(1);                        /* SET XVARIABLE */        89096700
*        ZXKEY='INPUT';                      /* SET IN/OUTPUT */        89117600
*      END;                                                             89138500
*/*PE.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 89156000
*  IF AUTH='AUTH'                            /* CHECK ENTRY */          89173500
*    THEN                                                               89191000
*      DO;                                                              89208500
*        ZMS=' 8, THE "AUTH" KEY'||          /**KOPTP* MSG*/            89226000
*            ' MUST CONTAIN ONE'||                                      89243500
*            ' (OR MORE) ARGUMENT(S).';                                 89261000
*        ANS MSG('?IEEQEMCS ---> '||ZMS);                               89278500
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                89296000
*        ZMACRET=8;                          /* MACRO ERROR */          89313500
*      END;                                                             89331000
*  IF NUMBER(AUTH)>1                         /* CHECK POSITIONALS */    89348500
*    THEN                                                               89366000
*      DO;                                                              89383500
*        ZMS=' 8, "AUTH'||                   /**KPOSP* MSG*/            89401000
*            AUTH||                                                     89418500
*            '" "AUTH"'||                                               89436000
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              89453500
*        ANS MSG('?IEEQEMCS ---> '||ZMS);                               89471000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                89488500
*        ZMACRET=8;                          /* MACRO ERROR */          89506000
*      END;                                                             89523500
*/*PE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 89541000
*  IF AUTH(1) = 'ANY'                                                   89544500
*    THEN                                                               89548000
*      XAUTH = 'ANY';                        /* SET XVARIABLE */        89551500
*/*PE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 89555000
*  IF AUTH(1) = 'MASTER'                                                89558500
*    THEN                                                               89576000
*      XAUTH = 'MASTER';                     /* SET XVARIABLE */        89593500
*/*PE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 89611000
*  IF AUTH(1) = 'SYS'                                                   89628500
*    THEN                                                               89646000
*      XAUTH = 'SYS';                        /* SET XVARIABLE */        89663500
*/*PE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 89681000
*  IF AUTH(1) = 'IO'                                                    89698500
*    THEN                                                               89716000
*      XAUTH = 'IO';                         /* SET XVARIABLE */        89733500
*/*PE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 89751000
*  IF AUTH(1) = 'CONS'                                                  89768500
*    THEN                                                               89786000
*      XAUTH = 'CONS';                       /* SET XVARIABLE */        89803500
*/*PE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 89821000
*  IF AUTH(1) = 'ALL'                                                   89838500
*    THEN                                                               89856000
*      XAUTH = 'ALL';                        /* SET XVARIABLE */        89873500
*/*PE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 89891000
*  IF AUTH(1) = 'INFO'                                                  89908500
*    THEN                                                               89926000
*      XAUTH = 'INFO';                       /* SET XVARIABLE */        89943500
*/*PE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 89944300
*  IF AUTH(1) = 'SYSONLY'                                               89945100
*    THEN                                                               89945900
*      XAUTH = 'SYSONLY';                    /* SET XVARIABLE */        89946700
*/*PE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 89947500
*  IF AUTH(1) = 'IOONLY'                                                89948300
*    THEN                                                               89949100
*      XAUTH = 'IOONLY';                     /* SET XVARIABLE */        89949900
*/*PE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 89950700
*  IF AUTH(1) = 'CONSONLY'                                              89951500
*    THEN                                                               89952300
*      XAUTH = 'CONSONLY';                   /* SET XVARIABLE */        89953100
*/*PE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 89953900
*  IF AUTH(1) = 'ALLONLY'                                               89954700
*    THEN                                                               89955500
*      XAUTH = 'ALLONLY';                    /* SET XVARIABLE */        89956300
*/*PE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 89957100
*  IF AUTH(1) = 'INFOONLY'                                              89957900
*    THEN                                                               89958700
*      XAUTH = 'INFOONLY';                   /* SET XVARIABLE */        89959500
*/*PE.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 89961000
*  IF XAUTH^=''                              /* CHECK FOR KEYWORD */    89978500
*    THEN                                                               89996000
*      ZXAUTH='INPUT';                       /* SET IN/OUTPUT */        90013500
*    ELSE                                                               90031000
*      DO;                                   /* KEYWORD NOT ENTERED */  90048500
*        IF AUTH(1)^=''                                                 90066000
*          THEN                                                         90083500
*            DO;                                                        90101000
*              ZMS=' 8, "AUTH'||             /**KUKWP* MSG*/            90118500
*                  AUTH||'"'||                                          90136000
*                  ' ARGUMENT 1 IS AN UNKNOWN KEYWORD. '||              90153500
*                  ' VALID KEYWORD CHOICE(S) ARE:'||                    90171000
*                  ' "ANY",'||               /* VALID KEYWORD */        90179700
*                  ' "MASTER",'||            /* VALID KEYWORD */        90188500
*                  ' "SYS",'||               /* VALID KEYWORD */        90206000
*                  ' "IO",'||                /* VALID KEYWORD */        90223500
*                  ' "CONS",'||              /* VALID KEYWORD */        90241000
*                  ' "ALL",'||               /* VALID KEYWORD */        90258500
*                  ' "INFO",'||              /* VALID KEYWORD */        90263500
*                  ' "SYSONLY",'||           /* VALID KEYWORD */        90268500
*                  ' "IOONLY",'||            /* VALID KEYWORD */        90273500
*                  ' "CONSONLY",'||          /* VALID KEYWORD */        90278500
*                  ' "ALLONLY",'||           /* VALID KEYWORD */        90283500
*                  ' OR "INFOONLY".';        /* VALID KEYWORD */        90288500
*              ANS MSG('?IEEQEMCS ---> '||ZMS);                         90293500
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          90311000
*              ZMACRET=8;                    /* MACRO ERROR */          90328500
*            END;                                                       90346000
*      END;                                                             90363500
*/*PE.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 90381000
*  IF ATTR='ATTR'                            /* CHECK ENTRY */          90398500
*    THEN                                                               90416000
*      DO;                                                              90433500
*        ZMS=' 8, THE "ATTR" KEY'||          /**KOPTP* MSG*/            90451000
*            ' MUST CONTAIN ONE'||                                      90468500
*            ' (OR MORE) ARGUMENT(S).';                                 90486000
*        ANS MSG('?IEEQEMCS ---> '||ZMS);                               90503500
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                90521000
*        ZMACRET=8;                          /* MACRO ERROR */          90538500
*      END;                                                             90556000
*  IF NUMBER(ATTR)>1                         /* CHECK POSITIONALS */    90573500
*    THEN                                                               90591000
*      DO;                                                              90608500
*        ZMS=' 8, "ATTR'||                   /**KPOSP* MSG*/            90626000
*            ATTR||                                                     90643500
*            '" "ATTR"'||                                               90661000
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              90678500
*        ANS MSG('?IEEQEMCS ---> '||ZMS);                               90696000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                90713500
*        ZMACRET=8;                          /* MACRO ERROR */          90731000
*      END;                                                             90748500
*/*PE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 90766000
*  IF ATTR(1) = 'ANY'                                                   90783500
*    THEN                                                               90801000
*      XATTR = 'ANY';                        /* SET XVARIABLE */        90818500
*/*PE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 90822000
*  IF ATTR(1) = 'YES'                                                   90825500
*    THEN                                                               90829000
*      XATTR = 'YES';                        /* SET XVARIABLE */        90832500
*/*PE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 90836000
*  IF ATTR(1) = 'ROUT'                                                  90853500
*    THEN                                                               90871000
*      XATTR = 'ROUT';                       /* SET XVARIABLE */        90888500
*/*PE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 90906000
*  IF ATTR(1) = 'UD'                                                    90923500
*    THEN                                                               90941000
*      XATTR = 'UD';                         /* SET XVARIABLE */        90958500
*/*PE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 90976000
*  IF ATTR(1) = 'UDN'                                                   90993500
*    THEN                                                               91011000
*      XATTR = 'UDN';                        /* SET XVARIABLE */        91028500
*/*PE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 91046000
*  IF ATTR(1) = 'HC'                                                    91063500
*    THEN                                                               91081000
*      XATTR = 'HC';                         /* SET XVARIABLE */        91098500
*/*PE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 91116000
*  IF ATTR(1) = 'AUTO'                                                  91133500
*    THEN                                                               91151000
*      XATTR = 'AUTO';                       /* SET XVARIABLE */        91168500
*/*PE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 91186000
*  IF ATTR(1) = 'AUTON'                                                 91203500
*    THEN                                                               91221000
*      XATTR = 'AUTON';                      /* SET XVARIABLE */        91238500
*/*PE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 91256000
*  IF ATTR(1) = 'MN'                                                    91273500
*    THEN                                                               91291000
*      XATTR = 'MN';                         /* SET XVARIABLE */        91308500
*/*PE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 91326000
*  IF ATTR(1) = 'NONE'                                                  91343500
*    THEN                                                               91361000
*      XATTR = 'NONE';                       /* SET XVARIABLE */        91378500
*/*PE.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 91396000
*  IF XATTR^=''                              /* CHECK FOR KEYWORD */    91413500
*    THEN                                                               91431000
*      ZXATTR='INPUT';                       /* SET IN/OUTPUT */        91448500
*    ELSE                                                               91466000
*      DO;                                   /* KEYWORD NOT ENTERED */  91483500
*        IF ATTR(1)^=''                                                 91501000
*          THEN                                                         91518500
*            DO;                                                        91536000
*              ZMS=' 8, "ATTR'||             /**KUKWP* MSG*/            91553500
*                  ATTR||'"'||                                          91571000
*                  ' ARGUMENT 1 IS AN UNKNOWN KEYWORD. '||              91588500
*                  ' VALID KEYWORD CHOICE(S) ARE:'||                    91606000
*                  ' "ANY",'||               /* VALID KEYWORD */        91623500
*                  ' "YES",'||               /* VALID KEYWORD */        91632200
*                  ' "ROUT",'||              /* VALID KEYWORD */        91641000
*                  ' "UD",'||                /* VALID KEYWORD */        91658500
*                  ' "UDN",'||               /* VALID KEYWORD */        91676000
*                  ' "HC",'||                /* VALID KEYWORD */        91693500
*                  ' "AUTO",'||              /* VALID KEYWORD */        91711000
*                  ' "AUTON",'||             /* VALID KEYWORD */        91728500
*                  ' "MN",'||                /* VALID KEYWORD */        91746000
*                  ' OR "NONE".';            /* VALID KEYWORD */        91763500
*              ANS MSG('?IEEQEMCS ---> '||ZMS);                         91781000
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          91798500
*              ZMACRET=8;                    /* MACRO ERROR */          91816000
*            END;                                                       91833500
*      END;                                                             91855500
*/*PE.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 91876400
*  IF DOM='DOM'                              /* CHECK ENTRY */          91897300
*    THEN                                                               91918200
*      DO;                                                              91939100
*        ZMS=' 8, THE "DOM" KEY'||           /**KOPTP* MSG*/            91960000
*            ' MUST CONTAIN ONE'||                                      91980900
*            ' (OR MORE) ARGUMENT(S).';                                 92001800
*        ANS MSG('?IEEQEMCS ---> '||ZMS);                               92022700
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                92043600
*        ZMACRET=8;                          /* MACRO ERROR */          92064500
*      END;                                                             92085400
*  IF NUMBER(DOM)>1                          /* CHECK POSITIONALS */    92106300
*    THEN                                                               92127200
*      DO;                                                              92148100
*        ZMS=' 8, "DOM'||                    /**KPOSP* MSG*/            92169000
*            DOM||                                                      92189900
*            '" "DOM"'||                                                92210800
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              92231700
*        ANS MSG('?IEEQEMCS ---> '||ZMS);                               92252600
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                92273500
*        ZMACRET=8;                          /* MACRO ERROR */          92294400
*      END;                                                             92315300
*/*PE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 92336200
*  IF DOM(1) = 'ANY'                                                    92357100
*    THEN                                                               92378000
*      XDOM = 'ANY';                         /* SET XVARIABLE */        92398900
*/*PE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 92403000
*  IF DOM(1) = 'YES'                                                    92407100
*    THEN                                                               92411200
*      XDOM = 'YES';                         /* SET XVARIABLE */        92415300
*/*PE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 92419800
*  IF DOM(1) = 'NORMAL'                                                 92440700
*    THEN                                                               92461600
*      XDOM = 'NORMAL';                      /* SET XVARIABLE */        92482500
*/*PE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 92503400
*  IF DOM(1) = 'ALL'                                                    92524300
*    THEN                                                               92545200
*      XDOM = 'ALL';                         /* SET XVARIABLE */        92566100
*/*PE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 92587000
*  IF DOM(1) = 'NONE'                                                   92607900
*    THEN                                                               92628800
*      XDOM = 'NONE';                        /* SET XVARIABLE */        92649700
*/*PE.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 92670600
*  IF XDOM^=''                               /* CHECK FOR KEYWORD */    92691500
*    THEN                                                               92712400
*      ZXDOM='INPUT';                        /* SET IN/OUTPUT */        92733300
*    ELSE                                                               92754200
*      DO;                                   /* KEYWORD NOT ENTERED */  92775100
*        IF DOM(1)^=''                                                  92796000
*          THEN                                                         92816900
*            DO;                                                        92837800
*              ZMS=' 8, "DOM'||              /**KUKWP* MSG*/            92858700
*                  DOM||'"'||                                           92879600
*                  ' ARGUMENT 1 IS AN UNKNOWN KEYWORD. '||              92900500
*                  ' VALID KEYWORD CHOICE(S) ARE:'||                    92921400
*                  ' "ANY",'||               /* VALID KEYWORD */        92942300
*                  ' "YES",'||               /* VALID KEYWORD */        92952700
*                  ' "NORMAL",'||            /* VALID KEYWORD */        92963200
*                  ' "ALL",'||               /* VALID KEYWORD */        92984100
*                  ' OR "NONE".';            /* VALID KEYWORD */        93005000
*              ANS MSG('?IEEQEMCS ---> '||ZMS);                         93025900
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          93046800
*              ZMACRET=8;                    /* MACRO ERROR */          93067700
*            END;                                                       93088600
*      END;                                                             93109500
*/*PE.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 93130400
*  IF BUFPTR='BUFPTR'                        /* CHECK ENTRY */          93151300
*    THEN                                                               93172200
*      DO;                                                              93193100
*        ZMS=' 8, THE "BUFPTR" KEY'||        /**KOPTP* MSG*/            93214000
*            ' MUST CONTAIN ONE'||                                      93234900
*            ' (OR MORE) ARGUMENT(S).';                                 93255800
*        ANS MSG('?IEEQEMCS ---> '||ZMS);                               93276700
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                93297600
*        ZMACRET=8;                          /* MACRO ERROR */          93318500
*      END;                                                             93339400
*  IF NUMBER(BUFPTR)>1                       /* CHECK POSITIONALS */    93360300
*    THEN                                                               93381200
*      DO;                                                              93402100
*        ZMS=' 8, "BUFPTR'||                 /**KPOSP* MSG*/            93423000
*            BUFPTR||                                                   93443900
*            '" "BUFPTR"'||                                             93464800
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              93485700
*        ANS MSG('?IEEQEMCS ---> '||ZMS);                               93506600
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                93527500
*        ZMACRET=8;                          /* MACRO ERROR */          93548400
*      END;                                                             93569300
*/*PE.KXVAR03 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 93590200
*  IF BUFPTR(1)^=''                          /* CHECK FOR NULL */       93611100
*    THEN                                                               93632000
*      DO;                                                              93652900
*        XBUFPTR=BUFPTR(1);                  /* SET XVARIABLE */        93673800
*        ZXBUFPTR='INPUT';                   /* SET IN/OUTPUT */        93694700
*      END;                                                             93744700
*/*PE.KXVAR01 NAME, OPT RQD INPUT, KEYS -EXCESSIVE ARGUMENTS---------*/ 93794700
*  IF NUMBER(BUFSIZE)>1                      /* CHECK POSITIONALS */    93844700
*    THEN                                                               93894700
*      DO;                                                              93944700
*        ZMS=' 8, "BUFSIZE'||                /**KPOSP* MSG*/            93994700
*            BUFSIZE||                                                  94044700
*            '" "BUFSIZE"'||                                            94094700
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              94144700
*        ANS MSG('?IEEQEMCS ---> '||ZMS);                               94194700
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                94244700
*        ZMACRET=8;                          /* MACRO ERROR */          94294700
*      END;                                                             94344700
*/*PE.KXVAR03 NAME, OPT RQD INPUT, KEYS -XVARIABLE-------------------*/ 94394700
*  IF BUFSIZE(1)^=''                         /* CHECK FOR NULL */       94444700
*    THEN                                                               94494700
*      DO;                                                              94544700
*        XBUFSIZE=BUFSIZE(1);                /* SET XVARIABLE */        94594700
*        ZXBUFSIZE='INPUT';                  /* SET IN/OUTPUT */        94644700
*      END;                                                             94927800
*/*PE.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 94948700
*  IF CONSCNT='CONSCNT'                      /* CHECK ENTRY */          94969600
*    THEN                                                               94990500
*      DO;                                                              95011400
*        ZMS=' 8, THE "CONSCNT" KEY'||       /**KOPTP* MSG*/            95032300
*            ' MUST CONTAIN ONE'||                                      95053200
*            ' (OR MORE) ARGUMENT(S).';                                 95074100
*        ANS MSG('?IEEQEMCS ---> '||ZMS);                               95095000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                95115900
*        ZMACRET=8;                          /* MACRO ERROR */          95136800
*      END;                                                             95157700
*  IF NUMBER(CONSCNT)>1                      /* CHECK POSITIONALS */    95178600
*    THEN                                                               95199500
*      DO;                                                              95220400
*        ZMS=' 8, "CONSCNT'||                /**KPOSP* MSG*/            95241300
*            CONSCNT||                                                  95262200
*            '" "CONSCNT"'||                                            95283100
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              95304000
*        ANS MSG('?IEEQEMCS ---> '||ZMS);                               95324900
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                95345800
*        ZMACRET=8;                          /* MACRO ERROR */          95366700
*      END;                                                             95387600
*/*PE.KXVAR03 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 95408500
*  IF CONSCNT(1)^=''                         /* CHECK FOR NULL */       95429400
*    THEN                                                               95450300
*      DO;                                                              95471200
*        XCONSCNT=CONSCNT(1);                /* SET XVARIABLE */        95492100
*        ZXCONSCNT='INPUT';                  /* SET IN/OUTPUT */        95513000
*      END;                                                             95533900
*/*PE.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 95554800
*  IF TOKEN='TOKEN'                          /* CHECK ENTRY */          95575700
*    THEN                                                               95596600
*      DO;                                                              95617500
*        ZMS=' 8, THE "TOKEN" KEY'||         /**KOPTP* MSG*/            95638400
*            ' MUST CONTAIN ONE'||                                      95659300
*            ' (OR MORE) ARGUMENT(S).';                                 95680200
*        ANS MSG('?IEEQEMCS ---> '||ZMS);                               95701100
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                95722000
*        ZMACRET=8;                          /* MACRO ERROR */          95742900
*      END;                                                             95763800
*  IF NUMBER(TOKEN)>1                        /* CHECK POSITIONALS */    95784700
*    THEN                                                               95805600
*      DO;                                                              95826500
*        ZMS=' 8, "TOKEN'||                  /**KPOSP* MSG*/            95847400
*            TOKEN||                                                    95868300
*            '" "TOKEN"'||                                              95889200
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              95910100
*        ANS MSG('?IEEQEMCS ---> '||ZMS);                               95931000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                95951900
*        ZMACRET=8;                          /* MACRO ERROR */          95972800
*      END;                                                             95993700
*/*PE.KXVAR03 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 96014600
*  IF TOKEN(1)^=''                           /* CHECK FOR NULL */       96035500
*    THEN                                                               96056400
*      DO;                                                              96077300
*        XTOKEN=TOKEN(1);                    /* SET XVARIABLE */        96098200
*        ZXTOKEN='INPUT';                    /* SET IN/OUTPUT */        96109100
*      END;                                                             96120100
*/*PE.KXVAR01 NAME, OPT RQD INPUT, KEYS -EXCESSIVE ARGUMENTS---------*/ 96121100
*  IF NUMBER(RECSIZE)>1                      /* CHECK POSITIONALS */    96122100
*    THEN                                                               96123100
*      DO;                                                              96124100
*        ZMS=' 8, "RECSIZE'||                /**KPOSP* MSG*/            96125100
*            RECSIZE||                                                  96126100
*            '" "RECSIZE"'||                                            96127100
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              96128100
*        ANS MSG('?IEEQEMCS ---> '||ZMS);                               96129100
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                96130100
*        ZMACRET=8;                          /* MACRO ERROR */          96131100
*      END;                                                             96132100
*/*PE.KXVAR03 NAME, OPT RQD INPUT, KEYS -XVARIABLE-------------------*/ 96133100
*  IF RECSIZE(1)^=''                         /* CHECK FOR NULL */       96134100
*    THEN                                                               96135100
*      DO;                                                              96136100
*        XRECSIZE=RECSIZE(1);                /* SET XVARIABLE */        96137400
*        ZXRECSIZE='INPUT';                  /* SET IN/OUTPUT */        96138700
*      END;                                                             96140000
*/*PE.KXVAR01 NAME, OPT OUTPUT, KEYS -EXCESSIVE ARGUMENTS------------*/ 96160900
*  IF RETCODE='RETCODE'                      /* CHECK ENTRY */          96181800
*    THEN                                                               96202700
*      DO;                                                              96223600
*        ZMS=' 8, THE "RETCODE" KEY'||       /**KOPTP* MSG*/            96244500
*            ' MUST CONTAIN ONE'||                                      96265400
*            ' (OR MORE) ARGUMENT(S).';                                 96286300
*        ANS MSG('?IEEQEMCS ---> '||ZMS);                               96307200
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                96328100
*        ZMACRET=8;                          /* MACRO ERROR */          96349000
*      END;                                                             96369900
*  IF NUMBER(RETCODE)>1                      /* CHECK POSITIONALS */    96390800
*    THEN                                                               96411700
*      DO;                                                              96432600
*        ZMS=' 8, "RETCODE'||                /**KPOSP* MSG*/            96453500
*            RETCODE||                                                  96474400
*            '" "RETCODE"'||                                            96495300
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              96516200
*        ANS MSG('?IEEQEMCS ---> '||ZMS);                               96537100
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                96558000
*        ZMACRET=8;                          /* MACRO ERROR */          96578900
*      END;                                                             96599800
*/*PE.KXVAR03 NAME, OPT OUTPUT, KEYS -XVARIABLE----------------------*/ 96620700
*  IF RETCODE(1)^=''                         /* CHECK FOR NULL */       96641600
*    THEN                                                               96662500
*      DO;                                                              96683400
*        XRETCODE=RETCODE(1);                /* SET XVARIABLE */        96704300
*        ZXRETCODE='OUTPUT';                 /* SET IN/OUTPUT */        96725200
*      END;                                                             96746100
*/*PE.KXVAR01 NAME, OPT OUTPUT, KEYS -EXCESSIVE ARGUMENTS------------*/ 96746700
*  IF RSNCODE='RSNCODE'                      /* CHECK ENTRY */          96747300
*    THEN                                                               96747900
*      DO;                                                              96748500
*        ZMS=' 8, THE "RSNCODE" KEY'||       /**KOPTP* MSG*/            96749100
*            ' MUST CONTAIN ONE'||                                      96749700
*            ' (OR MORE) ARGUMENT(S).';                                 96750300
*        ANS MSG('?IEEQEMCS ---> '||ZMS);                               96750900
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                96751500
*        ZMACRET=8;                          /* MACRO ERROR */          96752100
*      END;                                                             96752700
*  IF NUMBER(RSNCODE)>1                      /* CHECK POSITIONALS */    96753300
*    THEN                                                               96753900
*      DO;                                                              96754500
*        ZMS=' 8, "RSNCODE'||                /**KPOSP* MSG*/            96755100
*            RSNCODE||                                                  96755700
*            '" "RSNCODE"'||                                            96756300
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              96756900
*        ANS MSG('?IEEQEMCS ---> '||ZMS);                               96757500
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                96758100
*        ZMACRET=8;                          /* MACRO ERROR */          96758700
*      END;                                                             96759300
*/*PE.KXVAR03 NAME, OPT OUTPUT, KEYS -XVARIABLE----------------------*/ 96759900
*  IF RSNCODE(1)^=''                         /* CHECK FOR NULL */       96760500
*    THEN                                                               96761100
*      DO;                                                              96761700
*        XRSNCODE=RSNCODE(1);                /* SET XVARIABLE */        96762300
*        ZXRSNCODE='OUTPUT';                 /* SET IN/OUTPUT */        96762900
*      END;                                                             96763500
*/*PE.MF02 XMF^='L' & XMFSCK='NOCHECK' ------------------------------*/ 96767000
*      END;                                  /* END PARTIAL CHECK */    96787900
*/********************************************************************/ 96808800
*/***PE.MR01 GENERATE CODE IF ZMACRET=0                              */ 96829700
*/********************************************************************/ 96850600
*  IF ZMACRET = 0                                                       96871500
*    THEN                                                               96892400
*      DO;                                                              96913300
*/********************************************************************/ 96934200
*/***PE.PR01 PRINT CONTROLS, DEFAULT IS YES                          */ 96955100
*/********************************************************************/ 96976000
*  ANS(MACCONC||'LIST PUSH;') NORESCAN COL(MACLMAR);                    96996900
*  IF ZPRINT='NO'                            /* PRINT IS OFF */         97017800
*    THEN                                                               97038700
*      ANS(MACCONC||'LIST OFF;') NORESCAN COL(MACLMAR);                 97059600
*    ELSE                                                               97080500
*      ANS(MACCONC||'LIST ON;')  NORESCAN COL(MACLMAR);                 97101400
*/********************************************************************/ 97122300
*/*PE.DO02 OUTER MACRO DO STATEMENT----------------------------------*/ 97143200
*  IF XMF^='L'                                                          97164100
*    THEN                                                               97185000
*      ANS('DO; /* IEEQEMCS-PLISTVER */')                               97205900
*          NORESCAN COL(MACLMAR);                                       97226800
*/*PL.LL01 ?IEEQEMCS MF=L PARAMETER LIST-----------------------------*/ 97227400
*  IF XMF='L'                                                           97228000
*    THEN                                                               97228600
*      DO;                                                              97229200
*        ANS('DCL 1 '||XMFCTRL||' '||XMFATTR||', '||                    97229800
*            '/* ?IEEQEMCS PARM LIST*/')                                97230400
*            NORESCAN COL(MACLMAR);                                     97231000
*/*PL.LL13  XQEPLACRN CHAR(4) CONSTANT-------------------------------*/ 97231100
*        ANS('2 '||XMFCTRL||                                            97231200
*            '_XQEPLACRN CHAR(4), '||                                   97232100
*            '/* '||ZXQEPLACRN||' XQEPLACRN */')                        97233000
*            NORESCAN COL(MACLMAR+2);                                   97234000
*/*PL.LL02  XPLISTLEN FIXED(16) BDY(BYTE) INPUT----------------------*/ 97234600
*        ANS('2 '||XMFCTRL||                                            97235200
*            '_XPLISTLEN FIXED(16) BDY(BYTE), '||                       97235800
*            '/* INPUT XPLISTLEN*/')                                    97236400
*            NORESCAN COL(MACLMAR+2);                                   97236500
*/*PL.LL02  XVERSION FIXED(8) INPUT----------------------------------*/ 97236600
*        ANS('2 '||XMFCTRL||                                            97236700
*            '_XVERSION FIXED(8), '||                                   97236800
*            '/* INPUT XVERSION*/')                                     97236900
*            NORESCAN COL(MACLMAR+2);                                   97237000
*/*PL.LL04  XREQUEST FIXED(8) INPUT----------------------------------*/ 97237600
*        ANS('2 '||XMFCTRL||                                            97238200
*            '_XREQUEST FIXED(8), '||                                   97238800
*            '/* '||ZXREQUEST||' XREQUEST */')                          97239400
*            NORESCAN COL(MACLMAR+2);                                   97239500
*/*PL.LL04  XSTATUS BIT(8) INPUT-------------------------------------*/ 97239600
*        ANS('2 '||XMFCTRL||                                            97239700
*            '_XSTATUS BIT(8), '||                                      97239800
*            '/* '||ZXSTATUS||' XSTATUS */')                            97239900
*            NORESCAN COL(MACLMAR+2);                                   97240000
*/*PL.LL09 BIT 1XXXXXXX----------------------------------------------*/ 97240100
*          ANS('3 '||XMFCTRL||                                          97240200
*              '_ST_ACTIVE BIT(1), '||                                  97240300
*              '/* BIT */')                                             97240400
*              NORESCAN COL(MACLMAR+2);                                 97240500
*/*PL.LL09 BIT X1XXXXXX----------------------------------------------*/ 97240600
*          ANS('3 '||XMFCTRL||                                          97240700
*              '_ST_INACTIVE BIT(1), '||                                97240800
*              '/* BIT */')                                             97240900
*              NORESCAN COL(MACLMAR+2);                                 97241000
*/*PL.LL09 BIT XX1XXXXX----------------------------------------------*/ 97241100
*          ANS('3 '||XMFCTRL||                                          97241200
*              '_ST_ALL BIT(1), '||                                     97241300
*              '/* BIT */')                                             97241400
*              NORESCAN COL(MACLMAR+2);                                 97241500
*/*PL.LL09 BIT XXX1XXXX----------------------------------------------*/ 97241600
*          ANS('3 '||XMFCTRL||                                          97241700
*              '_ST_BACKLOG BIT(1), '||                                 97241800
*              '/* BIT */')                                             97241900
*              NORESCAN COL(MACLMAR+2);                                 97242000
*/*PL.LL09 BIT XXXX1XXX----------------------------------------------*/ 97242100
*          ANS('3 '||XMFCTRL||                                          97242200
*              '_ST_ERR BIT(1), '||                                     97242300
*              '/* BIT */')                                             97242400
*              NORESCAN COL(MACLMAR+2);                                 97242500
*/*PL.LL10 RESERVED BIT----------------------------------------------*/ 97242600
*          ANS('3 '||XMFCTRL||                                          97242700
*              '__RSVD1 BIT(3), '||                                     97242800
*              '/* BIT */')                                             97242900
*              NORESCAN COL(MACLMAR+2);                                 97243000
*/*PL.LL04  XFLAG1 BIT(8) FIELD_LABEL--------------------------------*/ 97243100
*        ANS('2 '||XMFCTRL||                                            97243200
*            '_XFLAG1 BIT(8), '||                                       97243300
*            '/* FIELD_LABEL */')                                       97243400
*            NORESCAN COL(MACLMAR+2);                                   97243500
*/*PL.LL09 BIT 1XXXXXXX----------------------------------------------*/ 97243600
*          ANS('3 '||XMFCTRL||                                          97243700
*              '_KEYUSED_CN BIT(1), '||                                 97243800
*              '/* BIT */')                                             97243900
*              NORESCAN COL(MACLMAR+2);                                 97244000
*/*PL.LL09 BIT X1XXXXXX----------------------------------------------*/ 97244100
*          ANS('3 '||XMFCTRL||                                          97244200
*              '_KEYUSED_SYS BIT(1), '||                                97244300
*              '/* BIT */')                                             97244400
*              NORESCAN COL(MACLMAR+2);                                 97244500
*/*PL.LL09 BIT XX1XXXXX----------------------------------------------*/ 97244600
*          ANS('3 '||XMFCTRL||                                          97244700
*              '_KEYUSED_KEY BIT(1), '||                                97244800
*              '/* BIT */')                                             97244900
*              NORESCAN COL(MACLMAR+2);                                 97245000
*/*PL.LL10 RESERVED BIT----------------------------------------------*/ 97246600
*          ANS('3 '||XMFCTRL||                                          97246700
*              '_XFLAG1_RSVD1 BIT(5), '||                               97246800
*              '/* BIT */')                                             97246900
*              NORESCAN COL(MACLMAR+2);                                 97247000
*/*PL.LL13  XRSV0001 CHAR(2) RESERVED--------------------------------*/ 97247100
*        ANS('2 '||XMFCTRL||                                            97247200
*            '_XRSV0001 CHAR(2), '||                                    97247300
*            '/* RESERVED */')                                          97247400
*            NORESCAN COL(MACLMAR+2);                                   97247500
*/*PL.LL13  XBKLG_NUM FIXED(31) INPUT--------------------------------*/ 97247600
*        ANS('2 '||XMFCTRL||                                            97247700
*            '_XBKLG_NUM FIXED(31), '||                                 97247800
*            '/* '||ZXBKLG_NUM||' XBKLG_NUM */')                        97247900
*            NORESCAN COL(MACLMAR+2);                                   97248000
*/*PL.LL13  XCN CHAR(8) INPUT----------------------------------------*/ 97248100
*        ANS('2 '||XMFCTRL||                                            97248200
*            '_XCN CHAR(8), '||                                         97248300
*            '/* '||ZXCN||' XCN */')                                    97248400
*            NORESCAN COL(MACLMAR+2);                                   97248500
*/*PL.LL13  XSYS CHAR(8) INPUT---------------------------------------*/ 97248600
*        ANS('2 '||XMFCTRL||                                            97248700
*            '_XSYS CHAR(8), '||                                        97248800
*            '/* '||ZXSYS||' XSYS */')                                  97248900
*            NORESCAN COL(MACLMAR+2);                                   97249000
*/*PL.LL13  XKEY CHAR(8) INPUT---------------------------------------*/ 97249100
*        ANS('2 '||XMFCTRL||                                            97249200
*            '_XKEY CHAR(8), '||                                        97249300
*            '/* '||ZXKEY||' XKEY */')                                  97249400
*            NORESCAN COL(MACLMAR+2);                                   97249500
*/*PL.LL04  XAUTH BIT(16) INPUT--------------------------------------*/ 97249600
*        ANS('2 '||XMFCTRL||                                            97249700
*            '_XAUTH BIT(16), '||                                       97249800
*            '/* '||ZXAUTH||' XAUTH */')                                97249900
*            NORESCAN COL(MACLMAR+2);                                   97250000
*/*PL.LL09 BIT 1XXXXXXXXXXXXXXX--------------------------------------*/ 97250100
*          ANS('3 '||XMFCTRL||                                          97250200
*              '_AUTH_ANY BIT(1), '||                                   97250300
*              '/* BIT */')                                             97250400
*              NORESCAN COL(MACLMAR+2);                                 97250500
*/*PL.LL09 BIT X1XXXXXXXXXXXXXX--------------------------------------*/ 97250600
*          ANS('3 '||XMFCTRL||                                          97250700
*              '_AUTH_MASTER BIT(1), '||                                97250800
*              '/* BIT */')                                             97250900
*              NORESCAN COL(MACLMAR+2);                                 97251000
*/*PL.LL09 BIT XX1XXXXXXXXXXXXX--------------------------------------*/ 97251100
*          ANS('3 '||XMFCTRL||                                          97251200
*              '_AUTH_SYS BIT(1), '||                                   97251300
*              '/* BIT */')                                             97251400
*              NORESCAN COL(MACLMAR+2);                                 97251500
*/*PL.LL09 BIT XXX1XXXXXXXXXXXX--------------------------------------*/ 97251600
*          ANS('3 '||XMFCTRL||                                          97251700
*              '_AUTH_IO BIT(1), '||                                    97251800
*              '/* BIT */')                                             97251900
*              NORESCAN COL(MACLMAR+2);                                 97252000
*/*PL.LL09 BIT XXXX1XXXXXXXXXXX--------------------------------------*/ 97252100
*          ANS('3 '||XMFCTRL||                                          97252200
*              '_AUTH_CONS BIT(1), '||                                  97252300
*              '/* BIT */')                                             97252400
*              NORESCAN COL(MACLMAR+2);                                 97252500
*/*PL.LL09 BIT XXXXX1XXXXXXXXXX--------------------------------------*/ 97252600
*          ANS('3 '||XMFCTRL||                                          97252700
*              '_AUTH_INFO BIT(1), '||                                  97252800
*              '/* BIT */')                                             97252900
*              NORESCAN COL(MACLMAR+2);                                 97253000
*/*PL.LL09 BIT XXXXXX1XXXXXXXXX--------------------------------------*/ 97253100
*          ANS('3 '||XMFCTRL||                                          97253200
*              '_AUTH_ALL BIT(1), '||                                   97253300
*              '/* BIT */')                                             97253400
*              NORESCAN COL(MACLMAR+2);                                 97253500
*/*PL.LL09 BIT XXXXXXX1XXXXXXXX--------------------------------------*/ 97253600
*          ANS('3 '||XMFCTRL||                                          97253700
*              '_AUTH_SYSONLY BIT(1), '||                               97253800
*              '/* BIT */')                                             97253900
*              NORESCAN COL(MACLMAR+2);                                 97254000
*/*PL.LL09 BIT XXXXXXXX1XXXXXXX--------------------------------------*/ 97254100
*          ANS('3 '||XMFCTRL||                                          97254200
*              '_AUTH_IOONLY BIT(1), '||                                97254300
*              '/* BIT */')                                             97254400
*              NORESCAN COL(MACLMAR+2);                                 97254500
*/*PL.LL09 BIT XXXXXXXXX1XXXXXX--------------------------------------*/ 97254600
*          ANS('3 '||XMFCTRL||                                          97254700
*              '_AUTH_CONSONLY BIT(1), '||                              97254800
*              '/* BIT */')                                             97254900
*              NORESCAN COL(MACLMAR+2);                                 97255000
*/*PL.LL09 BIT XXXXXXXXXX1XXXXX--------------------------------------*/ 97255100
*          ANS('3 '||XMFCTRL||                                          97255200
*              '_AUTH_INFOONLY BIT(1), '||                              97255300
*              '/* BIT */')                                             97255400
*              NORESCAN COL(MACLMAR+2);                                 97255500
*/*PL.LL09 BIT XXXXXXXXXXX1XXXX--------------------------------------*/ 97255600
*          ANS('3 '||XMFCTRL||                                          97255700
*              '_AUTH_ALLONLY BIT(1), '||                               97255800
*              '/* BIT */')                                             97255900
*              NORESCAN COL(MACLMAR+2);                                 97256000
*/*PL.LL10 RESERVED BIT----------------------------------------------*/ 97256100
*          ANS('3 '||XMFCTRL||                                          97256200
*              '_XFLAG1_RSVD1 BIT(4), '||                               97256300
*              '/* BIT */')                                             97256400
*              NORESCAN COL(MACLMAR+2);                                 97256500
*/*PL.LL04  XATTR BIT(16) INPUT--------------------------------------*/ 97256600
*        ANS('2 '||XMFCTRL||                                            97256700
*            '_XATTR BIT(16), '||                                       97256800
*            '/* '||ZXATTR||' XATTR */')                                97256900
*            NORESCAN COL(MACLMAR+2);                                   97257000
*/*PL.LL09 BIT 1XXXXXXXXXXXXXXX--------------------------------------*/ 97257100
*          ANS('3 '||XMFCTRL||                                          97257200
*              '_ATTR_ANY BIT(1), '||                                   97257300
*              '/* BIT */')                                             97257400
*              NORESCAN COL(MACLMAR+2);                                 97257500
*/*PL.LL09 BIT X1XXXXXXXXXXXXXX--------------------------------------*/ 97257600
*          ANS('3 '||XMFCTRL||                                          97257700
*              '_ATTR_ROUT BIT(1), '||                                  97257800
*              '/* BIT */')                                             97257900
*              NORESCAN COL(MACLMAR+2);                                 97258000
*/*PL.LL09 BIT XX1XXXXXXXXXXXXX--------------------------------------*/ 97258100
*          ANS('3 '||XMFCTRL||                                          97258200
*              '_ATTR_UD BIT(1), '||                                    97258300
*              '/* BIT */')                                             97258400
*              NORESCAN COL(MACLMAR+2);                                 97258500
*/*PL.LL09 BIT XXX1XXXXXXXXXXXX--------------------------------------*/ 97258600
*          ANS('3 '||XMFCTRL||                                          97258700
*              '_ATTR_UDN BIT(1), '||                                   97258800
*              '/* BIT */')                                             97258900
*              NORESCAN COL(MACLMAR+2);                                 97259000
*/*PL.LL09 BIT XXXX1XXXXXXXXXXX--------------------------------------*/ 97259100
*          ANS('3 '||XMFCTRL||                                          97259200
*              '_ATTR_HC BIT(1), '||                                    97259300
*              '/* BIT */')                                             97259400
*              NORESCAN COL(MACLMAR+2);                                 97259500
*/*PL.LL09 BIT XXXXX1XXXXXXXXXX--------------------------------------*/ 97259600
*          ANS('3 '||XMFCTRL||                                          97259700
*              '_ATTR_AUTO BIT(1), '||                                  97259800
*              '/* BIT */')                                             97259900
*              NORESCAN COL(MACLMAR+2);                                 97260000
*/*PL.LL09 BIT XXXXXX1XXXXXXXXX--------------------------------------*/ 97260100
*          ANS('3 '||XMFCTRL||                                          97260200
*              '_ATTR_AUTON BIT(1), '||                                 97260300
*              '/* BIT */')                                             97260400
*              NORESCAN COL(MACLMAR+2);                                 97260500
*/*PL.LL09 BIT XXXXXXX1XXXXXXXX--------------------------------------*/ 97260600
*          ANS('3 '||XMFCTRL||                                          97260700
*              '_ATTR_MN BIT(1), '||                                    97260800
*              '/* BIT */')                                             97260900
*              NORESCAN COL(MACLMAR+2);                                 97261000
*/*PL.LL09 BIT XXXXXXXX1XXXXXXX--------------------------------------*/ 97261100
*          ANS('3 '||XMFCTRL||                                          97261200
*              '_ATTR_NONE BIT(1), '||                                  97261300
*              '/* BIT */')                                             97261400
*              NORESCAN COL(MACLMAR+2);                                 97261500
*/*PL.LL09 BIT XXXXXXXXX1XXXXXX--------------------------------------*/ 97261600
*          ANS('3 '||XMFCTRL||                                          97261700
*              '_ATTR_YES BIT(1), '||                                   97261800
*              '/* BIT */')                                             97261900
*              NORESCAN COL(MACLMAR+2);                                 97262000
*/*PL.LL10 RESERVED BIT----------------------------------------------*/ 97262100
*          ANS('3 '||XMFCTRL||                                          97262200
*              '_XFLAG1_RSVD1 BIT(6), '||                               97262300
*              '/* BIT */')                                             97262400
*              NORESCAN COL(MACLMAR+2);                                 97262500
*/*PL.LL04  XDOM BIT(8) INPUT----------------------------------------*/ 97262600
*        ANS('2 '||XMFCTRL||                                            97262700
*            '_XDOM BIT(8), '||                                         97262800
*            '/* '||ZXDOM||' XDOM */')                                  97262900
*            NORESCAN COL(MACLMAR+2);                                   97263000
*/*PL.LL09 BIT 1XXXXXXX----------------------------------------------*/ 97263100
*          ANS('3 '||XMFCTRL||                                          97263200
*              '_DOM_ANY BIT(1), '||                                    97263300
*              '/* BIT */')                                             97263400
*              NORESCAN COL(MACLMAR+2);                                 97263500
*/*PL.LL09 BIT X1XXXXXX----------------------------------------------*/ 97263600
*          ANS('3 '||XMFCTRL||                                          97263700
*              '_DOM_NORM BIT(1), '||                                   97263900
*              '/* BIT */')                                             97264100
*              NORESCAN COL(MACLMAR+2);                                 97264300
*/*PL.LL09 BIT XX1XXXXX----------------------------------------------*/ 97264500
*          ANS('3 '||XMFCTRL||                                          97264700
*              '_DOM_ALL BIT(1), '||                                    97264900
*              '/* BIT */')                                             97265100
*              NORESCAN COL(MACLMAR+2);                                 97265300
*/*PL.LL09 BIT XXX1XXXX----------------------------------------------*/ 97265500
*          ANS('3 '||XMFCTRL||                                          97265700
*              '_DOM_NONE BIT(1), '||                                   97265900
*              '/* BIT */')                                             97266100
*              NORESCAN COL(MACLMAR+2);                                 97266300
*/*PL.LL09 BIT XXXX1XXX----------------------------------------------*/ 97266500
*          ANS('3 '||XMFCTRL||                                          97266700
*              '_DOM_YES BIT(1), '||                                    97266900
*              '/* BIT */')                                             97267100
*              NORESCAN COL(MACLMAR+2);                                 97267300
*/*PL.LL10 RESERVED BIT----------------------------------------------*/ 97267500
*          ANS('3 '||XMFCTRL||                                          97267700
*              '_XFLAG1_RSVD1 BIT(3), '||                               97267900
*              '/* BIT */')                                             97268100
*              NORESCAN COL(MACLMAR+2);                                 97268200
*/*PL.LL13  XRSV0002 CHAR(3) RESERVED--------------------------------*/ 97268300
*        ANS('2 '||XMFCTRL||                                            97268400
*            '_XRSV0002 CHAR(3), '||                                    97268500
*            '/* RESERVED */')                                          97268600
*            NORESCAN COL(MACLMAR+2);                                   97268700
*/*PL.LL13  XBUFPTR PTR(31) INPUT------------------------------------*/ 97268800
*        ANS('2 '||XMFCTRL||                                            97268900
*            '_XBUFPTR PTR(31), '||                                     97269000
*            '/* '||ZXBUFPTR||' XBUFPTR */')                            97269100
*            NORESCAN COL(MACLMAR+2);                                   97269300
*/*PL.LL13  XBUFSIZE FIXED(31) INPUT---------------------------------*/ 97269500
*        ANS('2 '||XMFCTRL||                                            97269700
*            '_XBUFSIZE FIXED(31), '||                                  97269900
*            '/* '||ZXBUFSIZE||' XBUFSIZE */')                          97270100
*            NORESCAN COL(MACLMAR+2);                                   97270300
*/*PL.LL13  XRECSIZE PTR(31) INPUT-----------------------------------*/ 97270500
*        ANS('2 '||XMFCTRL||                                            97270700
*            '_XRECSIZE PTR(31), '||                                    97270900
*            '/* '||ZXRECSIZE||' XRECSIZE */')                          97271100
*            NORESCAN COL(MACLMAR+2);                                   97271300
*/*PL.LL13  XCONSCNT PTR(31) INPUT-----------------------------------*/ 97271500
*        ANS('2 '||XMFCTRL||                                            97271700
*            '_XCONSCNT PTR(31), '||                                    97271900
*            '/* '||ZXCONSCNT||' XCONSCNT */')                          97272100
*            NORESCAN COL(MACLMAR+2);                                   97272300
*/*PL.LL13  XTOKEN PTR(31) INPUT-------------------------------------*/ 97272500
*        ANS('2 '||XMFCTRL||                                            97272700
*            '_XTOKEN PTR(31), '||                                      97272900
*            '/* '||ZXTOKEN||' XTOKEN */')                              97273100
*            NORESCAN COL(MACLMAR+2);                                   97273300
*/*PL.LL18 ----------------------------------------------------------*/ 97273500
*        ANS('2 * CHAR(0);')                                            97273700
*            NORESCAN COL(MACLMAR+2);                                   97273900
*/*PL.LL15 XREQUEST.COUNT--------------------------------------------*/ 97274100
*        ANS('DCL '||XMFCTRL||                                          97274300
*            '_COUNT FIXED(8) '||                                       97274500
*            'CONSTANT(1); '||                                          97274700
*            '/* XREQUEST */')                                          97274900
*            NORESCAN COL(MACLMAR+2);                                   97275100
*/*PL.LL15 XREQUEST.SUMMARY------------------------------------------*/ 97275300
*        ANS('DCL '||XMFCTRL||                                          97275500
*            '_SUMMARY FIXED(8) '||                                     97275700
*            'CONSTANT(2); '||                                          97275900
*            '/* XREQUEST */')                                          97276100
*            NORESCAN COL(MACLMAR+2);                                   97276300
*/*PL.LL15 XREQUEST.INFO---------------------------------------------*/ 97276500
*        ANS('DCL '||XMFCTRL||                                          97276700
*            '_INFO FIXED(8) '||                                        97276900
*            'CONSTANT(3); '||                                          97277100
*            '/* XREQUEST */')                                          97277300
*            NORESCAN COL(MACLMAR+2);                                   97277500
*/*PL.LL15 XREQUEST.FULL---------------------------------------------*/ 97277700
*        ANS('DCL '||XMFCTRL||                                          97277900
*            '_FULL FIXED(8) '||                                        97278100
*            'CONSTANT(4); '||                                          97278300
*            '/* XREQUEST */')                                          97278500
*            NORESCAN COL(MACLMAR+2);                                   97278700
*/*PL.LL17 END OF MF=L PARAMETER LIST--------------------------------*/ 97278900
*      END;                                                             97279100
*/*PL.L01 MACRO WORK VARIABLES---------------------------------------*/ 97279300
*  DCL ZPRMLINE CHAR;          /* ZPRM ARRAY ENTRY ACCUMULATOR      */  97279500
*  DEACT ZPRMLINE;                                                      97279700
*  DCL ZNDX CHAR;              /* UNIQUE LIST STRUCTURE NAME        */  97279900
*  DEACT ZNDX;                                                          97280100
*  ZNDX=MACINDEX;              /* MACINDEX                          */  97280300
*  DCL XVERSION CHAR;                                                   97280500
*  DEACT XVERSION;                                                      97280700
*/*PL.L02 ?IEEQEMCS PARAMETER LIST-----------------------------------*/ 97280900
*  IF XMF^='L'                                                          97281100
*    THEN                                                               97289500
*      DO;                                                              97290200
*/*PL.L04 ?IEEQEMCS PARAMETER LIST-----------------------------------*/ 97290900
*        ZPRMLINE='DCL 1 #Z'||ZNDX||' DEF('||XMFCTRL||'),'||            97291600
*                 ' /* ?IEEQEMCS PARM LIST*/';                          97292300
*/*PL.L08  XQEPLACRN CHAR(4) CONSTANT--------------------------------*/ 97292400
*        ZPRMLINE=ZPRMLINE||' 2 #Z'||ZNDX||                             97292500
*                 '_XQEPLACRN CHAR(4), '||                              97293600
*                 '/* '||ZXQEPLACRN||' XQEPLACRN */';                   97294700
*/*PL.L05  XPLISTLEN FIXED(16) BDY(BYTE) INPUT-----------------------*/ 97295800
*        ZPRMLINE=ZPRMLINE||' 2 #Z'||ZNDX||                             97296500
*                 '_XPLISTLEN FIXED(16) BDY(BYTE), '||                  97297200
*                 '/* INPUT XPLISTLEN*/';                               97297900
*/*PL.L05  XVERSION FIXED(8) INPUT-----------------------------------*/ 97298000
*        ZPRMLINE=ZPRMLINE||' 2 #Z'||ZNDX||                             97298100
*                 '_XVERSION FIXED(8), '||                              97298200
*                 '/* INPUT XVERSION*/';                                97298300
*/*PL.L08  XREQUEST FIXED(8) INPUT-----------------------------------*/ 97298600
*        ZPRMLINE=ZPRMLINE||' 2 #Z'||ZNDX||                             97299300
*                 '_XREQUEST FIXED(8), '||                              97300000
*                 '/* '||ZXREQUEST||' XREQUEST */';                     97300700
*/*PL.L08  XSTATUS BIT(8) INPUT--------------------------------------*/ 97300800
*        ZPRMLINE=ZPRMLINE||' 2 #Z'||ZNDX||                             97300900
*                 '_XSTATUS BIT(8), '||                                 97301000
*                 '/* '||ZXSTATUS||' XSTATUS */';                       97301100
*/*PL.L08  XFLAG1 BIT(8) FIELD_LABEL---------------------------------*/ 97301200
*        ZPRMLINE=ZPRMLINE||' 2 #Z'||ZNDX||                             97301300
*                 '_XFLAG1 BIT(8), '||                                  97301400
*                 '/* FIELD_LABEL */';                                  97301500
*/*PL.L08  XRSV0001 CHAR(2) RESERVED---------------------------------*/ 97301600
*        ZPRMLINE=ZPRMLINE||' 2 #Z'||ZNDX||                             97301700
*                 '_XRSV0001 CHAR(2), '||                               97301800
*                 '/* RESERVED */';                                     97301900
*/*PL.L08  XBKLG_NUM FIXED(31) INPUT---------------------------------*/ 97302000
*        ZPRMLINE=ZPRMLINE||' 2 #Z'||ZNDX||                             97302100
*                 '_XBKLG_NUM FIXED(31), '||                            97302200
*                 '/* '||ZXBKLG_NUM||' XBKLG_NUM */';                   97302300
*/*PL.L08  XCN CHAR(8) INPUT-----------------------------------------*/ 97302400
*        ZPRMLINE=ZPRMLINE||' 2 #Z'||ZNDX||                             97302500
*                 '_XCN CHAR(8), '||                                    97302600
*                 '/* '||ZXCN||' XCN */';                               97302700
*/*PL.L08  XSYS CHAR(8) INPUT----------------------------------------*/ 97302800
*        ZPRMLINE=ZPRMLINE||' 2 #Z'||ZNDX||                             97302900
*                 '_XSYS CHAR(8), '||                                   97303000
*                 '/* '||ZXSYS||' XSYS */';                             97303100
*/*PL.L08  XKEY CHAR(8) INPUT----------------------------------------*/ 97303200
*        ZPRMLINE=ZPRMLINE||' 2 #Z'||ZNDX||                             97303300
*                 '_XKEY CHAR(8), '||                                   97303400
*                 '/* '||ZXKEY||' XKEY */';                             97303500
*/*PL.L08  XAUTH BIT(16) INPUT---------------------------------------*/ 97303600
*        ZPRMLINE=ZPRMLINE||' 2 #Z'||ZNDX||                             97303700
*                 '_XAUTH BIT(16), '||                                  97303800
*                 '/* '||ZXAUTH||' XAUTH */';                           97303900
*/*PL.L08  XATTR BIT(16) INPUT---------------------------------------*/ 97304000
*        ZPRMLINE=ZPRMLINE||' 2 #Z'||ZNDX||                             97304100
*                 '_XATTR BIT(16), '||                                  97304200
*                 '/* '||ZXATTR||' XATTR */';                           97304300
*/*PL.L08  XDOM BIT(8) INPUT-----------------------------------------*/ 97304400
*        ZPRMLINE=ZPRMLINE||' 2 #Z'||ZNDX||                             97304500
*                 '_XDOM BIT(8), '||                                    97304600
*                 '/* '||ZXDOM||' XDOM */';                             97304700
*/*PL.L08  XRSV0002 CHAR(3) RESERVED---------------------------------*/ 97304800
*        ZPRMLINE=ZPRMLINE||' 2 #Z'||ZNDX||                             97304900
*                 '_XRSV0002 CHAR(3), '||                               97305000
*                 '/* RESERVED */';                                     97305100
*/*PL.L08  XBUFPTR PTR(31) INPUT-------------------------------------*/ 97305200
*        ZPRMLINE=ZPRMLINE||' 2 #Z'||ZNDX||                             97305300
*                 '_XBUFPTR PTR(31), '||                                97305400
*                 '/* '||ZXBUFPTR||' XBUFPTR */';                       97305500
*/*PL.L08  XBUFSIZE FIXED(31) INPUT----------------------------------*/ 97305600
*        ZPRMLINE=ZPRMLINE||' 2 #Z'||ZNDX||                             97305700
*                 '_XBUFSIZE FIXED(31), '||                             97305800
*                 '/* '||ZXBUFSIZE||' XBUFSIZE */';                     97305900
*/*PL.L08  XRECSIZE PTR(31) INPUT------------------------------------*/ 97306000
*        ZPRMLINE=ZPRMLINE||' 2 #Z'||ZNDX||                             97306100
*                 '_XRECSIZE PTR(31), '||                               97306200
*                 '/* '||ZXRECSIZE||' XRECSIZE */';                     97306300
*/*PL.L08  XCONSCNT PTR(31) INPUT------------------------------------*/ 97306400
*        ZPRMLINE=ZPRMLINE||' 2 #Z'||ZNDX||                             97306500
*                 '_XCONSCNT PTR(31), '||                               97306600
*                 '/* '||ZXCONSCNT||' XCONSCNT */';                     97306700
*/*PL.L08  XTOKEN PTR(31) INPUT--------------------------------------*/ 97306800
*        ZPRMLINE=ZPRMLINE||' 2 #Z'||ZNDX||                             97306900
*                 '_XTOKEN PTR(31), '||                                 97307000
*                 '/* '||ZXTOKEN||' XTOKEN */';                         97307100
*/*PL.L11 CONSTANT TO ENSURE THAT LIST FORM IS LONG ENOUGH ----------*/ 97308200
*        ZPRMNUM=ZPRMNUM+1;                                             97308300
*        ZPRM(ZPRMNUM)=ZPRMLINE||' 2 * CHAR(0);';                       97308400
*        IF XPLISTVER^=1                                                97308500
*          THEN                                                         97308600
*            DO;                                                        97308700
*              ZPRMNUM=ZPRMNUM+1;                                       97308800
*              ZPRM(ZPRMNUM)=                                           97308900
*               'DCL #Z'||ZNDX||'_LENCHECK FIXED(32) CONSTANT('||       97309000
*               'LENGTH('||XMFCTRL||')-LENGTH(#Z'||ZNDX||'));'||        97309100
*               '/* CONSTANT TO ENSURE THAT THE LIST FORM'||            97309200
*               ' IS LONG ENOUGH */';                                   97309300
*            END;                                                       97309800
*/*PL.L12 PARAMETER LIST SIZE----------------------------------------*/ 97310500
*        ZPLLEN=68;                                                     97311200
*        IF ZPRMMAX<ZPLLEN                                              97311900
*           & XMF^='E'                                                  97312600
*           & XMF^='M'                                                  97313300
*          THEN                                                         97314000
*            ZPRMMAX=ZPLLEN;                                            97314700
*/*PL.L13 -----------------------------------------------------------*/ 97315400
*      END;                                                             97316100
*/*PI.L01 XMF^='L' & XMFSCK='COMPLETE' ------------------------------*/ 97316800
*  IF XMF^='L'                                                          97317500
*    THEN                                                               97318200
*      DO;                                                              97318900
*/*PI.L03 CLEAR PARAMETER LIST --------------------------------------*/ 97319600
*  IF XMFSCK='COMPLETE'                                                 97320300
*    THEN                                                               97321000
*            ANS('#Z'||ZNDX||'=''''B;'||                                97321700
*                '/* CLEAR PARAMETER AREA */')                          97322400
*                NORESCAN COL(MACLMAR);                                 97322600
*/*PI.L28 XQEPLACRN  CHAR(4)-----------------------------------------*/ 97322800
*        ANS('#Z'||ZNDX||'_XQEPLACRN=''QEPL'';'||                       97323000
*            '/* XQEPLACRN CHAR(4) CONSTANT */')                        97323200
*            NORESCAN COL(MACLMAR);                                     97323400
*/*PI.L05C XPLISTLEN FIXED(16)---------------------------------------*/ 97323800
*        ANS('#Z'||ZNDX||'_XPLISTLEN=LENGTH(#Z'||ZNDX||');'||           97324500
*            '/* XPLISTLEN FIXED(16) */')                               97325200
*            NORESCAN COL(MACLMAR);                                     97325900
*/*PI.L05B XVERSION FIXED(8)-----------------------------------------*/ 97326000
*        IF (XPLISTVER^=0 &                                             97326100
*            XMFSCK='COMPLETE')|                                        97326200
*           (PLISTVER^='' &                                             97326300
*            XMFSCK^='COMPLETE')                                        97326400
*          THEN                                                         97326500
*            ANS('#Z'||ZNDX||'_XVERSION='||CHAR(XPLISTVER)||'; '||      97326600
*                '/* XVERSION FIXED(8) */')                             97326700
*                NORESCAN COL(MACLMAR);                                 97326800
*/*PI.L06 XREQUEST FIXED(8)------------------------------------------*/ 97326900
*        ZW='';                                                         97327300
*        ZMS='';                                                        97328000
*/*PI.L12 XREQUEST FIXED(8)------------------------------------------*/ 97328700
*        IF XREQUEST='COUNT'                                            97329400
*          THEN                                                         97330100
*            ZW='1';                                                    97330800
*/*PI.L12 XREQUEST FIXED(8)------------------------------------------*/ 97331500
*        IF XREQUEST='SUMMARY'                                          97332200
*          THEN                                                         97332900
*            ZW='2';                                                    97333600
*/*PI.L12 XREQUEST FIXED(8)------------------------------------------*/ 97334300
*        IF XREQUEST='INFO'                                             97335000
*          THEN                                                         97335700
*            ZW='3';                                                    97336400
*/*PI.L12 XREQUEST FIXED(8)------------------------------------------*/ 97337100
*        IF XREQUEST='FULL'                                             97337800
*          THEN                                                         97338500
*            ZW='4';                                                    97339200
*/*PI.L13 XREQUEST FIXED(8)------------------------------------------*/ 97339900
*        IF ZW^=''                                                      97340600
*          & (ZW^='0' | XMFSCK^='COMPLETE')                             97341300
*          THEN                                                         97342000
*            ANS('#Z'||ZNDX||'_XREQUEST='||                             97342700
*                ZW||'; '||                                             97343400
*                '/* XREQUEST FIXED(8) */')                             97344100
*                NORESCAN COL(MACLMAR);                                 97344800
*/*PI.L06 XSTATUS BIT(8)---------------------------------------------*/ 97344900
*        ZW='';                                                         97345000
*        ZMS='';                                                        97345100
*/*PI.L07 XSTATUS BIT(8) 1XXXXXXX------------------------------------*/ 97345200
*        IF XSTATUS='ACTIVE'                                            97345300
*          THEN                                                         97345400
*            DO;                                                        97345500
*              ZW=ZW||'1';                                              97345600
*              ZMS=ZMS||'1';                                            97345700
*            END;                                                       97345800
*          ELSE                                                         97345900
*            DO;                                                        97346000
*              ZW=ZW||'0';                                              97346100
*              IF ZXSTATUS^=''                                          97346200
*                THEN                                                   97346300
*                  ZMS=ZMS||'0';                                        97346400
*                ELSE                                                   97346500
*                  ZMS=ZMS||'1';                                        97346600
*            END;                                                       97346700
*/*PI.L07 XSTATUS BIT(8) X1XXXXXX------------------------------------*/ 97346800
*        IF XSTATUS='INACTIVE'                                          97346900
*          THEN                                                         97347000
*            DO;                                                        97347100
*              ZW=ZW||'1';                                              97347200
*              ZMS=ZMS||'1';                                            97347300
*            END;                                                       97347400
*          ELSE                                                         97347500
*            DO;                                                        97347600
*              ZW=ZW||'0';                                              97347700
*              IF ZXSTATUS^=''                                          97347800
*                THEN                                                   97347900
*                  ZMS=ZMS||'0';                                        97348000
*                ELSE                                                   97348100
*                  ZMS=ZMS||'1';                                        97348200
*            END;                                                       97348300
*/*PI.L07 XSTATUS BIT(8) XX1XXXXX------------------------------------*/ 97348400
*        IF XSTATUS='ALL'                                               97348500
*          THEN                                                         97348600
*            DO;                                                        97348700
*              ZW=ZW||'1';                                              97348800
*              ZMS=ZMS||'1';                                            97348900
*            END;                                                       97349000
*          ELSE                                                         97349100
*            DO;                                                        97349200
*              ZW=ZW||'0';                                              97349300
*              IF ZXSTATUS^=''                                          97349400
*                THEN                                                   97349500
*                  ZMS=ZMS||'0';                                        97349600
*                ELSE                                                   97349700
*                  ZMS=ZMS||'1';                                        97349800
*            END;                                                       97349900
*/*PI.L07 XSTATUS BIT(8) XXX1XXXX------------------------------------*/ 97350000
*        IF XSTATUS='BACKLOG'                                           97350100
*          THEN                                                         97350200
*            DO;                                                        97350300
*              ZW=ZW||'1';                                              97350400
*              ZMS=ZMS||'1';                                            97350500
*            END;                                                       97350600
*          ELSE                                                         97350700
*            DO;                                                        97350800
*              ZW=ZW||'0';                                              97350900
*              IF ZXSTATUS^=''                                          97351000
*                THEN                                                   97351100
*                  ZMS=ZMS||'0';                                        97351200
*                ELSE                                                   97351300
*                  ZMS=ZMS||'1';                                        97351400
*            END;                                                       97351500
*/*PI.L07 XSTATUS BIT(8) XXXX1XXX------------------------------------*/ 97351600
*        IF XSTATUS='ERR'                                               97351700
*          THEN                                                         97351800
*            DO;                                                        97351900
*              ZW=ZW||'1000';                                           97352000
*              ZMS=ZMS||'1111';                                         97352100
*            END;                                                       97352200
*          ELSE                                                         97352300
*            DO;                                                        97352400
*              ZW=ZW||'0000';                                           97352500
*              IF ZXSTATUS^=''                                          97352600
*                THEN                                                   97352700
*                  ZMS=ZMS||'0111';                                     97352800
*                ELSE                                                   97352900
*                  ZMS=ZMS||'1111';                                     97353000
*            END;                                                       97353100
*/*PI.L09 XSTATUS BIT(8)---------------------------------------------*/ 97353200
*        IF XMFSCK='NOCHECK'                                            97353300
*          THEN                                                         97353400
*            IF INDEX(ZMS,'0')^=0                                       97353500
*              THEN                                                     97353600
*                ANS('#Z'||ZNDX||'_XSTATUS='||                          97353700
*                    '#Z'||ZNDX||'_XSTATUS & '||                        97353800
*                    ''''||ZMS||'''B; '||                               97353900
*                    '/* BIT(8) */')                                    97354000
*                    NORESCAN COL(MACLMAR);                             97354100
*        IF INDEX(ZW,'1')^=0                                            97354200
*          THEN                                                         97354300
*            ANS('#Z'||ZNDX||'_XSTATUS='||                              97354400
*                '#Z'||ZNDX||'_XSTATUS | '||                            97354500
*                ''''||ZW||'''B; '||                                    97354600
*                '/* BIT(8) */')                                        97354700
*                NORESCAN COL(MACLMAR);                                 97354800
*/*PI.L06 XFLAG1 BIT(8)----------------------------------------------*/ 97354900
*        ZW='';                                                         97355000
*        ZMS='';                                                        97355100
*/*PI.L07 XFLAG1 BIT(8) 1XXXXXXX-------------------------------------*/ 97355200
*        IF CN^=''                                                      97355300
*          & XCN^='ANY_CONS'                                            97355400
*          THEN                                                         97355500
*            DO;                                                        97355600
*              ZW=ZW||'1';                                              97355700
*              ZMS=ZMS||'0';                                            97355800
*            END;                                                       97355900
*          ELSE                                                         97356000
*            DO;                                                        97356100
*              ZW=ZW||'0';                                              97356200
*              ZMS=ZMS||'1';                                            97356300
*            END;                                                       97356400
*/*PI.L07 XFLAG1 BIT(8) X1XXXXXX-------------------------------------*/ 97356500
*        IF SYS^=''                                                     97356600
*          & XSYS^='ANY_SYS'                                            97356700
*          THEN                                                         97356800
*            DO;                                                        97356900
*              ZW=ZW||'1';                                              97357000
*              ZMS=ZMS||'0';                                            97357100
*            END;                                                       97357200
*          ELSE                                                         97357300
*            DO;                                                        97357400
*              ZW=ZW||'0';                                              97357500
*              ZMS=ZMS||'1';                                            97357600
*            END;                                                       97357700
*/*PI.L07 XFLAG1 BIT(8) XX1XXXXX-------------------------------------*/ 97357800
*        IF KEY^=''                                                     97357900
*          & XKEY^='ANY_KEY'                                            97358000
*          THEN                                                         97358100
*            DO;                                                        97358200
*              ZW=ZW||'100000';                                         97358300
*              ZMS=ZMS||'011111';                                       97358400
*            END;                                                       97358500
*          ELSE                                                         97358600
*            DO;                                                        97358700
*              ZW=ZW||'000000';                                         97360100
*              ZMS=ZMS||'111111';                                       97361500
*            END;                                                       97362900
*/*PI.L09 XFLAG1 BIT(8)----------------------------------------------*/ 97363000
*        IF XMFSCK='NOCHECK'                                            97363100
*          THEN                                                         97363200
*            IF INDEX(ZMS,'0')^=0                                       97363300
*              THEN                                                     97363400
*                ANS('#Z'||ZNDX||'_XFLAG1='||                           97363500
*                    '#Z'||ZNDX||'_XFLAG1 & '||                         97363600
*                    ''''||ZMS||'''B; '||                               97363700
*                    '/* BIT(8) */')                                    97363800
*                    NORESCAN COL(MACLMAR);                             97363900
*        IF INDEX(ZW,'1')^=0                                            97364000
*          THEN                                                         97364100
*            ANS('#Z'||ZNDX||'_XFLAG1='||                               97364200
*                '#Z'||ZNDX||'_XFLAG1 | '||                             97364300
*                ''''||ZW||'''B; '||                                    97364400
*                '/* BIT(8) */')                                        97364500
*                NORESCAN COL(MACLMAR);                                 97364600
*/*PI.L17 XBKLG_NUM FIXED(31)----------------------------------------*/ 97364700
*        IF ZXBKLG_NUM='INPUT' |                                        97364800
*           ZXBKLG_NUM='INOUT'                                          97364900
*          THEN                                                         97365000
*            ANS('#Z'||ZNDX||'_XBKLG_NUM='||                            97365100
*                XBKLG_NUM||';'||                                       97365200
*                '/* XBKLG_NUM FIXED(31) */')                           97365300
*                NORESCAN COL(MACLMAR);                                 97365400
*/*PI.L14 CHECK FOR * AS THE CHAR(8) ARGUMENT------------------------*/ 97365500
*        IF XCN='ANY_CONS'                                              97365600
*           & XMFSCK='COMPLETE'                                         97365700
*          THEN                                                         97365800
*            ZXCN='';                        /* RESET INPUT/INOUT */    97365900
*/*PI.L21 XCN NAME CHAR(8)-------------------------------------------*/ 97366000
*        IF ZXCN='INPUT' |                                              97366100
*           ZXCN='INOUT'                                                97366200
*          THEN                                                         97366300
*            DO;                                                        97366400
*            IF (XCN='ANY_CONS' & XMFSCK^='COMPLETE')                   97366500
*              THEN                                                     97366600
*                ANS('#Z'||ZNDX||'_XCN=''''B;'||                        97366700
*                    '/* XCN CHAR(8) */')                               97366800
*                    NORESCAN COL(MACLMAR);                             97366900
*            IF XCN^='ANY_CONS'                                         97367000
*              THEN                                                     97367100
*                ANS('#Z'||ZNDX||'_XCN='||                              97367200
*                    XCN||';'||                                         97367300
*                    '/* XCN CHAR(8) */')                               97367400
*                    NORESCAN COL(MACLMAR);                             97367500
*            END;                                                       97367600
*/*PI.L14 CHECK FOR * AS THE CHAR(8) ARGUMENT------------------------*/ 97367700
*        IF XSYS='ANY_SYS'                                              97367800
*           & XMFSCK='COMPLETE'                                         97367900
*          THEN                                                         97368000
*            ZXSYS='';                       /* RESET INPUT/INOUT */    97368100
*/*PI.L21 XSYS NAME CHAR(8)------------------------------------------*/ 97368200
*        IF ZXSYS='INPUT' |                                             97368300
*           ZXSYS='INOUT'                                               97368400
*          THEN                                                         97368500
*            DO;                                                        97368600
*            IF (XSYS='ANY_SYS' & XMFSCK^='COMPLETE')                   97368700
*              THEN                                                     97368800
*                ANS('#Z'||ZNDX||'_XSYS=''''B;'||                       97368900
*                    '/* XSYS CHAR(8) */')                              97369000
*                    NORESCAN COL(MACLMAR);                             97369100
*            IF XSYS^='ANY_SYS'                                         97369200
*              THEN                                                     97369300
*                ANS('#Z'||ZNDX||'_XSYS='||                             97369400
*                    XSYS||';'||                                        97369500
*                    '/* XSYS CHAR(8) */')                              97369600
*                    NORESCAN COL(MACLMAR);                             97369700
*            END;                                                       97369800
*/*PI.L14 CHECK FOR * AS THE CHAR(8) ARGUMENT------------------------*/ 97369900
*        IF XKEY='ANY_KEY'                                              97370000
*           & XMFSCK='COMPLETE'                                         97370100
*          THEN                                                         97370200
*            ZXKEY='';                       /* RESET INPUT/INOUT */    97370300
*/*PI.L21 XKEY NAME CHAR(8)------------------------------------------*/ 97370400
*        IF ZXKEY='INPUT' |                                             97370500
*           ZXKEY='INOUT'                                               97370600
*          THEN                                                         97370700
*            DO;                                                        97370800
*            IF (XKEY='ANY_KEY' & XMFSCK^='COMPLETE')                   97370900
*              THEN                                                     97371000
*                ANS('#Z'||ZNDX||'_XKEY=''''B;'||                       97371100
*                    '/* XKEY CHAR(8) */')                              97371200
*                    NORESCAN COL(MACLMAR);                             97371300
*            IF XKEY^='ANY_KEY'                                         97371400
*              THEN                                                     97371500
*                ANS('#Z'||ZNDX||'_XKEY='||                             97371600
*                    XKEY||';'||                                        97371700
*                    '/* XKEY CHAR(8) */')                              97371800
*                    NORESCAN COL(MACLMAR);                             97371900
*            END;                                                       97372000
*/*PI.L06 XAUTH BIT(16)----------------------------------------------*/ 97372100
*        ZW='';                                                         97372200
*        ZMS='';                                                        97372300
*/*PI.L07 XAUTH BIT(16) 1XXXXXXXXXXXXXXX-----------------------------*/ 97372400
*        IF XAUTH='ANY'                                                 97372500
*          THEN                                                         97372600
*            DO;                                                        97372700
*              ZW=ZW||'1';                                              97372800
*              ZMS=ZMS||'1';                                            97372900
*            END;                                                       97373000
*          ELSE                                                         97373100
*            DO;                                                        97373200
*              ZW=ZW||'0';                                              97373300
*              IF ZXAUTH^=''                                            97373400
*                THEN                                                   97373500
*                  ZMS=ZMS||'0';                                        97373600
*                ELSE                                                   97373700
*                  ZMS=ZMS||'1';                                        97373800
*            END;                                                       97373900
*/*PI.L07 XAUTH BIT(16) X1XXXXXXXXXXXXXX-----------------------------*/ 97374000
*        IF XAUTH='MASTER'                                              97374100
*          THEN                                                         97374200
*            DO;                                                        97374300
*              ZW=ZW||'1';                                              97374400
*              ZMS=ZMS||'1';                                            97374500
*            END;                                                       97374600
*          ELSE                                                         97374700
*            DO;                                                        97374800
*              ZW=ZW||'0';                                              97374900
*              IF ZXAUTH^=''                                            97375000
*                THEN                                                   97375100
*                  ZMS=ZMS||'0';                                        97375200
*                ELSE                                                   97375300
*                  ZMS=ZMS||'1';                                        97375400
*            END;                                                       97375500
*/*PI.L07 XAUTH BIT(16) XX1XXXXXXXXXXXXX-----------------------------*/ 97375600
*        IF XAUTH='SYS'                                                 97375700
*          THEN                                                         97375800
*            DO;                                                        97375900
*              ZW=ZW||'1';                                              97376000
*              ZMS=ZMS||'1';                                            97376100
*            END;                                                       97376200
*          ELSE                                                         97376300
*            DO;                                                        97376400
*              ZW=ZW||'0';                                              97376500
*              IF ZXAUTH^=''                                            97376600
*                THEN                                                   97376700
*                  ZMS=ZMS||'0';                                        97376800
*                ELSE                                                   97376900
*                  ZMS=ZMS||'1';                                        97377000
*            END;                                                       97377100
*/*PI.L07 XAUTH BIT(16) XXX1XXXXXXXXXXXX-----------------------------*/ 97377200
*        IF XAUTH='IO'                                                  97377300
*          THEN                                                         97377400
*            DO;                                                        97377500
*              ZW=ZW||'1';                                              97377600
*              ZMS=ZMS||'1';                                            97377700
*            END;                                                       97377800
*          ELSE                                                         97377900
*            DO;                                                        97378000
*              ZW=ZW||'0';                                              97378100
*              IF ZXAUTH^=''                                            97378200
*                THEN                                                   97378300
*                  ZMS=ZMS||'0';                                        97378400
*                ELSE                                                   97378500
*                  ZMS=ZMS||'1';                                        97378600
*            END;                                                       97378700
*/*PI.L07 XAUTH BIT(16) XXXX1XXXXXXXXXXX-----------------------------*/ 97378800
*        IF XAUTH='CONS'                                                97378900
*          THEN                                                         97379000
*            DO;                                                        97379100
*              ZW=ZW||'1';                                              97379200
*              ZMS=ZMS||'1';                                            97379300
*            END;                                                       97379400
*          ELSE                                                         97379500
*            DO;                                                        97379600
*              ZW=ZW||'0';                                              97379700
*              IF ZXAUTH^=''                                            97379800
*                THEN                                                   97379900
*                  ZMS=ZMS||'0';                                        97380000
*                ELSE                                                   97380100
*                  ZMS=ZMS||'1';                                        97380200
*            END;                                                       97380300
*/*PI.L07 XAUTH BIT(16) XXXXX1XXXXXXXXXX-----------------------------*/ 97380400
*        IF XAUTH='INFO'                                                97380500
*          THEN                                                         97380600
*            DO;                                                        97380700
*              ZW=ZW||'1';                                              97380800
*              ZMS=ZMS||'1';                                            97380900
*            END;                                                       97381000
*          ELSE                                                         97381100
*            DO;                                                        97381200
*              ZW=ZW||'0';                                              97381300
*              IF ZXAUTH^=''                                            97381400
*                THEN                                                   97381500
*                  ZMS=ZMS||'0';                                        97381600
*                ELSE                                                   97381700
*                  ZMS=ZMS||'1';                                        97381800
*            END;                                                       97381900
*/*PI.L07 XAUTH BIT(16) XXXXXX1XXXXXXXXX-----------------------------*/ 97382000
*        IF XAUTH='ALL'                                                 97382100
*          THEN                                                         97382200
*            DO;                                                        97382300
*              ZW=ZW||'1';                                              97382400
*              ZMS=ZMS||'1';                                            97382500
*            END;                                                       97382600
*          ELSE                                                         97382700
*            DO;                                                        97382800
*              ZW=ZW||'0';                                              97382900
*              IF ZXAUTH^=''                                            97383000
*                THEN                                                   97383100
*                  ZMS=ZMS||'0';                                        97383200
*                ELSE                                                   97383300
*                  ZMS=ZMS||'1';                                        97383400
*            END;                                                       97383500
*/*PI.L07 XAUTH BIT(16) XXXXXXX1XXXXXXXX-----------------------------*/ 97383600
*        IF XAUTH='SYSONLY'                                             97383700
*          THEN                                                         97383800
*            DO;                                                        97383900
*              ZW=ZW||'1';                                              97384000
*              ZMS=ZMS||'1';                                            97384100
*            END;                                                       97384200
*          ELSE                                                         97384300
*            DO;                                                        97384400
*              ZW=ZW||'0';                                              97384500
*              IF ZXAUTH^=''                                            97384600
*                THEN                                                   97384700
*                  ZMS=ZMS||'0';                                        97384800
*                ELSE                                                   97384900
*                  ZMS=ZMS||'1';                                        97385000
*            END;                                                       97385100
*/*PI.L07 XAUTH BIT(16) XXXXXXXX1XXXXXXX-----------------------------*/ 97385200
*        IF XAUTH='IOONLY'                                              97385300
*          THEN                                                         97385400
*            DO;                                                        97385500
*              ZW=ZW||'1';                                              97385600
*              ZMS=ZMS||'1';                                            97385700
*            END;                                                       97385800
*          ELSE                                                         97385900
*            DO;                                                        97386000
*              ZW=ZW||'0';                                              97386100
*              IF ZXAUTH^=''                                            97386200
*                THEN                                                   97386300
*                  ZMS=ZMS||'0';                                        97386400
*                ELSE                                                   97386500
*                  ZMS=ZMS||'1';                                        97386600
*            END;                                                       97386700
*/*PI.L07 XAUTH BIT(16) XXXXXXXXX1XXXXXX-----------------------------*/ 97386800
*        IF XAUTH='CONSONLY'                                            97386900
*          THEN                                                         97387000
*            DO;                                                        97387100
*              ZW=ZW||'1';                                              97387200
*              ZMS=ZMS||'1';                                            97387300
*            END;                                                       97387400
*          ELSE                                                         97387500
*            DO;                                                        97387600
*              ZW=ZW||'0';                                              97387700
*              IF ZXAUTH^=''                                            97387800
*                THEN                                                   97387900
*                  ZMS=ZMS||'0';                                        97388000
*                ELSE                                                   97388100
*                  ZMS=ZMS||'1';                                        97388200
*            END;                                                       97388300
*/*PI.L07 XAUTH BIT(16) XXXXXXXXXX1XXXXX-----------------------------*/ 97388400
*        IF XAUTH='INFOONLY'                                            97388500
*          THEN                                                         97388600
*            DO;                                                        97388700
*              ZW=ZW||'1';                                              97388800
*              ZMS=ZMS||'1';                                            97388900
*            END;                                                       97389000
*          ELSE                                                         97389100
*            DO;                                                        97389200
*              ZW=ZW||'0';                                              97389300
*              IF ZXAUTH^=''                                            97389400
*                THEN                                                   97389500
*                  ZMS=ZMS||'0';                                        97389600
*                ELSE                                                   97389700
*                  ZMS=ZMS||'1';                                        97389800
*            END;                                                       97389900
*/*PI.L07 XAUTH BIT(16) XXXXXXXXXXX1XXXX-----------------------------*/ 97390000
*        IF XAUTH='ALLONLY'                                             97390100
*          THEN                                                         97390200
*            DO;                                                        97390300
*              ZW=ZW||'10000';                                          97390400
*              ZMS=ZMS||'11111';                                        97390500
*            END;                                                       97390600
*          ELSE                                                         97390700
*            DO;                                                        97390800
*              ZW=ZW||'00000';                                          97390900
*              IF ZXAUTH^=''                                            97391000
*                THEN                                                   97391100
*                  ZMS=ZMS||'01111';                                    97391200
*                ELSE                                                   97391300
*                  ZMS=ZMS||'11111';                                    97391400
*            END;                                                       97391500
*/*PI.L09 XAUTH BIT(16)----------------------------------------------*/ 97391600
*        IF XMFSCK='NOCHECK'                                            97391700
*          THEN                                                         97391800
*            IF INDEX(ZMS,'0')^=0                                       97391900
*              THEN                                                     97392000
*                ANS('#Z'||ZNDX||'_XAUTH='||                            97392100
*                    '#Z'||ZNDX||'_XAUTH & '||                          97392200
*                    ''''||ZMS||'''B; '||                               97392300
*                    '/* BIT(16) */')                                   97392400
*                    NORESCAN COL(MACLMAR);                             97392500
*        IF INDEX(ZW,'1')^=0                                            97392600
*          THEN                                                         97392700
*            ANS('#Z'||ZNDX||'_XAUTH='||                                97392800
*                '#Z'||ZNDX||'_XAUTH | '||                              97392900
*                ''''||ZW||'''B; '||                                    97393000
*                '/* BIT(16) */')                                       97393100
*                NORESCAN COL(MACLMAR);                                 97393200
*/*PI.L06 XATTR BIT(16)----------------------------------------------*/ 97393300
*        ZW='';                                                         97393400
*        ZMS='';                                                        97393500
*/*PI.L07 XATTR BIT(16) 1XXXXXXXXXXXXXXX-----------------------------*/ 97393600
*        IF XATTR='ANY'                                                 97393700
*          THEN                                                         97393800
*            DO;                                                        97393900
*              ZW=ZW||'1';                                              97394000
*              ZMS=ZMS||'1';                                            97394100
*            END;                                                       97394200
*          ELSE                                                         97394300
*            DO;                                                        97394400
*              ZW=ZW||'0';                                              97394500
*              IF ZXATTR^=''                                            97394600
*                THEN                                                   97394700
*                  ZMS=ZMS||'0';                                        97394800
*                ELSE                                                   97394900
*                  ZMS=ZMS||'1';                                        97395000
*            END;                                                       97395100
*/*PI.L07 XATTR BIT(16) X1XXXXXXXXXXXXXX-----------------------------*/ 97395200
*        IF XATTR='ROUT'                                                97395300
*          THEN                                                         97395400
*            DO;                                                        97395500
*              ZW=ZW||'1';                                              97395600
*              ZMS=ZMS||'1';                                            97395700
*            END;                                                       97395800
*          ELSE                                                         97395900
*            DO;                                                        97396000
*              ZW=ZW||'0';                                              97396100
*              IF ZXATTR^=''                                            97396200
*                THEN                                                   97396300
*                  ZMS=ZMS||'0';                                        97396400
*                ELSE                                                   97396500
*                  ZMS=ZMS||'1';                                        97396600
*            END;                                                       97396700
*/*PI.L07 XATTR BIT(16) XX1XXXXXXXXXXXXX-----------------------------*/ 97396800
*        IF XATTR='UD'                                                  97396900
*          THEN                                                         97397000
*            DO;                                                        97397100
*              ZW=ZW||'1';                                              97397200
*              ZMS=ZMS||'1';                                            97397300
*            END;                                                       97397400
*          ELSE                                                         97397500
*            DO;                                                        97397600
*              ZW=ZW||'0';                                              97397700
*              IF ZXATTR^=''                                            97397800
*                THEN                                                   97397900
*                  ZMS=ZMS||'0';                                        97398000
*                ELSE                                                   97398100
*                  ZMS=ZMS||'1';                                        97398200
*            END;                                                       97398300
*/*PI.L07 XATTR BIT(16) XXX1XXXXXXXXXXXX-----------------------------*/ 97398400
*        IF XATTR='UDN'                                                 97398500
*          THEN                                                         97398600
*            DO;                                                        97398700
*              ZW=ZW||'1';                                              97398800
*              ZMS=ZMS||'1';                                            97398900
*            END;                                                       97399000
*          ELSE                                                         97399100
*            DO;                                                        97399200
*              ZW=ZW||'0';                                              97399300
*              IF ZXATTR^=''                                            97399400
*                THEN                                                   97399500
*                  ZMS=ZMS||'0';                                        97399600
*                ELSE                                                   97399700
*                  ZMS=ZMS||'1';                                        97399800
*            END;                                                       97399900
*/*PI.L07 XATTR BIT(16) XXXX1XXXXXXXXXXX-----------------------------*/ 97400000
*        IF XATTR='HC'                                                  97400100
*          THEN                                                         97400200
*            DO;                                                        97400300
*              ZW=ZW||'1';                                              97400400
*              ZMS=ZMS||'1';                                            97400500
*            END;                                                       97400600
*          ELSE                                                         97400700
*            DO;                                                        97400800
*              ZW=ZW||'0';                                              97400900
*              IF ZXATTR^=''                                            97401000
*                THEN                                                   97401100
*                  ZMS=ZMS||'0';                                        97401200
*                ELSE                                                   97401300
*                  ZMS=ZMS||'1';                                        97401400
*            END;                                                       97401500
*/*PI.L07 XATTR BIT(16) XXXXX1XXXXXXXXXX-----------------------------*/ 97401600
*        IF XATTR='AUTO'                                                97401700
*          THEN                                                         97401800
*            DO;                                                        97401900
*              ZW=ZW||'1';                                              97402000
*              ZMS=ZMS||'1';                                            97402100
*            END;                                                       97402200
*          ELSE                                                         97402300
*            DO;                                                        97402400
*              ZW=ZW||'0';                                              97402500
*              IF ZXATTR^=''                                            97402600
*                THEN                                                   97402700
*                  ZMS=ZMS||'0';                                        97402800
*                ELSE                                                   97402900
*                  ZMS=ZMS||'1';                                        97403000
*            END;                                                       97403100
*/*PI.L07 XATTR BIT(16) XXXXXX1XXXXXXXXX-----------------------------*/ 97403200
*        IF XATTR='AUTON'                                               97403300
*          THEN                                                         97403400
*            DO;                                                        97403500
*              ZW=ZW||'1';                                              97403600
*              ZMS=ZMS||'1';                                            97403700
*            END;                                                       97403800
*          ELSE                                                         97403900
*            DO;                                                        97404000
*              ZW=ZW||'0';                                              97404100
*              IF ZXATTR^=''                                            97404200
*                THEN                                                   97404300
*                  ZMS=ZMS||'0';                                        97404400
*                ELSE                                                   97404500
*                  ZMS=ZMS||'1';                                        97404600
*            END;                                                       97404700
*/*PI.L07 XATTR BIT(16) XXXXXXX1XXXXXXXX-----------------------------*/ 97404800
*        IF XATTR='MN'                                                  97404900
*          THEN                                                         97405000
*            DO;                                                        97405100
*              ZW=ZW||'1';                                              97405200
*              ZMS=ZMS||'1';                                            97405300
*            END;                                                       97405400
*          ELSE                                                         97405500
*            DO;                                                        97405600
*              ZW=ZW||'0';                                              97405700
*              IF ZXATTR^=''                                            97405800
*                THEN                                                   97405900
*                  ZMS=ZMS||'0';                                        97406000
*                ELSE                                                   97406100
*                  ZMS=ZMS||'1';                                        97406200
*            END;                                                       97406300
*/*PI.L07 XATTR BIT(16) XXXXXXXX1XXXXXXX-----------------------------*/ 97406400
*        IF XATTR='NONE'                                                97406500
*          THEN                                                         97406600
*            DO;                                                        97406700
*              ZW=ZW||'1';                                              97406800
*              ZMS=ZMS||'1';                                            97406900
*            END;                                                       97407000
*          ELSE                                                         97407100
*            DO;                                                        97407200
*              ZW=ZW||'0';                                              97407300
*              IF ZXATTR^=''                                            97407400
*                THEN                                                   97407500
*                  ZMS=ZMS||'0';                                        97407600
*                ELSE                                                   97407700
*                  ZMS=ZMS||'1';                                        97407800
*            END;                                                       97407900
*/*PI.L07 XATTR BIT(16) XXXXXXXXX1XXXXXX-----------------------------*/ 97408000
*        IF XATTR='YES'                                                 97408100
*          THEN                                                         97408200
*            DO;                                                        97408300
*              ZW=ZW||'1000000';                                        97408400
*              ZMS=ZMS||'1111111';                                      97408500
*            END;                                                       97408600
*          ELSE                                                         97408700
*            DO;                                                        97408800
*              ZW=ZW||'0000000';                                        97408900
*              IF ZXATTR^=''                                            97409000
*                THEN                                                   97409100
*                  ZMS=ZMS||'0111111';                                  97409200
*                ELSE                                                   97409300
*                  ZMS=ZMS||'1111111';                                  97409400
*            END;                                                       97409500
*/*PI.L09 XATTR BIT(16)----------------------------------------------*/ 97409600
*        IF XMFSCK='NOCHECK'                                            97409700
*          THEN                                                         97409800
*            IF INDEX(ZMS,'0')^=0                                       97409900
*              THEN                                                     97410000
*                ANS('#Z'||ZNDX||'_XATTR='||                            97410100
*                    '#Z'||ZNDX||'_XATTR & '||                          97410200
*                    ''''||ZMS||'''B; '||                               97410300
*                    '/* BIT(16) */')                                   97410400
*                    NORESCAN COL(MACLMAR);                             97410500
*        IF INDEX(ZW,'1')^=0                                            97410600
*          THEN                                                         97410700
*            ANS('#Z'||ZNDX||'_XATTR='||                                97410800
*                '#Z'||ZNDX||'_XATTR | '||                              97410900
*                ''''||ZW||'''B; '||                                    97411000
*                '/* BIT(16) */')                                       97411100
*                NORESCAN COL(MACLMAR);                                 97411200
*/*PI.L06 XDOM BIT(8)------------------------------------------------*/ 97411300
*        ZW='';                                                         97411400
*        ZMS='';                                                        97411500
*/*PI.L07 XDOM BIT(8) 1XXXXXXX---------------------------------------*/ 97411600
*        IF XDOM='ANY'                                                  97411700
*          THEN                                                         97411800
*            DO;                                                        97411900
*              ZW=ZW||'1';                                              97412000
*              ZMS=ZMS||'1';                                            97412100
*            END;                                                       97412200
*          ELSE                                                         97412300
*            DO;                                                        97412400
*              ZW=ZW||'0';                                              97412500
*              IF ZXDOM^=''                                             97412600
*                THEN                                                   97412700
*                  ZMS=ZMS||'0';                                        97412800
*                ELSE                                                   97412900
*                  ZMS=ZMS||'1';                                        97413000
*            END;                                                       97413100
*/*PI.L07 XDOM BIT(8) X1XXXXXX---------------------------------------*/ 97413200
*        IF XDOM='NORMAL'                                               97413300
*          THEN                                                         97413400
*            DO;                                                        97413500
*              ZW=ZW||'1';                                              97413600
*              ZMS=ZMS||'1';                                            97413700
*            END;                                                       97413800
*          ELSE                                                         97413900
*            DO;                                                        97414000
*              ZW=ZW||'0';                                              97414100
*              IF ZXDOM^=''                                             97414200
*                THEN                                                   97414300
*                  ZMS=ZMS||'0';                                        97414400
*                ELSE                                                   97414500
*                  ZMS=ZMS||'1';                                        97414600
*            END;                                                       97414700
*/*PI.L07 XDOM BIT(8) XX1XXXXX---------------------------------------*/ 97414800
*        IF XDOM='ALL'                                                  97414900
*          THEN                                                         97415000
*            DO;                                                        97415100
*              ZW=ZW||'1';                                              97415200
*              ZMS=ZMS||'1';                                            97415300
*            END;                                                       97415400
*          ELSE                                                         97415500
*            DO;                                                        97415600
*              ZW=ZW||'0';                                              97415700
*              IF ZXDOM^=''                                             97415800
*                THEN                                                   97415900
*                  ZMS=ZMS||'0';                                        97416000
*                ELSE                                                   97416100
*                  ZMS=ZMS||'1';                                        97416200
*            END;                                                       97416300
*/*PI.L07 XDOM BIT(8) XXX1XXXX---------------------------------------*/ 97416400
*        IF XDOM='NONE'                                                 97416500
*          THEN                                                         97416600
*            DO;                                                        97416700
*              ZW=ZW||'1';                                              97416800
*              ZMS=ZMS||'1';                                            97416900
*            END;                                                       97417000
*          ELSE                                                         97417100
*            DO;                                                        97417200
*              ZW=ZW||'0';                                              97417300
*              IF ZXDOM^=''                                             97417400
*                THEN                                                   97417500
*                  ZMS=ZMS||'0';                                        97417600
*                ELSE                                                   97417700
*                  ZMS=ZMS||'1';                                        97417800
*            END;                                                       97417900
*/*PI.L07 XDOM BIT(8) XXXX1XXX---------------------------------------*/ 97418000
*        IF XDOM='YES'                                                  97418100
*          THEN                                                         97418200
*            DO;                                                        97418300
*              ZW=ZW||'1000';                                           97418400
*              ZMS=ZMS||'1111';                                         97418500
*            END;                                                       97418600
*          ELSE                                                         97418700
*            DO;                                                        97418800
*              ZW=ZW||'0000';                                           97418900
*              IF ZXDOM^=''                                             97419000
*                THEN                                                   97419100
*                  ZMS=ZMS||'0111';                                     97419200
*                ELSE                                                   97419300
*                  ZMS=ZMS||'1111';                                     97419400
*            END;                                                       97419500
*/*PI.L09 XDOM BIT(8)------------------------------------------------*/ 97419600
*        IF XMFSCK='NOCHECK'                                            97419700
*          THEN                                                         97419800
*            IF INDEX(ZMS,'0')^=0                                       97419900
*              THEN                                                     97420000
*                ANS('#Z'||ZNDX||'_XDOM='||                             97420100
*                    '#Z'||ZNDX||'_XDOM & '||                           97420200
*                    ''''||ZMS||'''B; '||                               97420300
*                    '/* BIT(8) */')                                    97420400
*                    NORESCAN COL(MACLMAR);                             97420500
*        IF INDEX(ZW,'1')^=0                                            97420600
*          THEN                                                         97420700
*            ANS('#Z'||ZNDX||'_XDOM='||                                 97420800
*                '#Z'||ZNDX||'_XDOM | '||                               97420900
*                ''''||ZW||'''B; '||                                    97421000
*                '/* BIT(8) */')                                        97421100
*                NORESCAN COL(MACLMAR);                                 97421200
*/*PI.L17 XBUFPTR PTR(31)--------------------------------------------*/ 97421300
*        IF ZXBUFPTR='INPUT' |                                          97421400
*           ZXBUFPTR='INOUT'                                            97421500
*          THEN                                                         97421600
*            DO;                                                        97421700
*            IF (XBUFPTR='0' & XMFSCK^='COMPLETE')                      97421800
*              THEN                                                     97421900
*                ANS('#Z'||ZNDX||'_XBUFPTR=0;'||                        97422000
*                    '/* XBUFPTR PTR(31) */')                           97422100
*                    NORESCAN COL(MACLMAR);                             97422200
*            IF XBUFPTR^='0'                                            97422300
*              THEN                                                     97422400
*                ANS('#Z'||ZNDX||'_XBUFPTR='||                          97422500
*                    XBUFPTR||';'||                                     97422600
*                    '/* XBUFPTR PTR(31) */')                           97422700
*                    NORESCAN COL(MACLMAR);                             97422800
*            END;                                                       97422900
*/*PI.L17 XBUFSIZE FIXED(31)-----------------------------------------*/ 97423000
*        IF ZXBUFSIZE='INPUT' |                                         97423100
*           ZXBUFSIZE='INOUT'                                           97423200
*          THEN                                                         97423300
*            DO;                                                        97423400
*            IF (XBUFSIZE='0' & XMFSCK^='COMPLETE')                     97423500
*              THEN                                                     97423600
*                ANS('#Z'||ZNDX||'_XBUFSIZE=0;'||                       97423700
*                    '/* XBUFSIZE FIXED(31) */')                        97423800
*                    NORESCAN COL(MACLMAR);                             97423900
*            IF XBUFSIZE^='0'                                           97424000
*              THEN                                                     97424100
*                ANS('#Z'||ZNDX||'_XBUFSIZE='||                         97424200
*                    XBUFSIZE||';'||                                    97424300
*                    '/* XBUFSIZE FIXED(31) */')                        97424400
*                    NORESCAN COL(MACLMAR);                             97424500
*            END;                                                       97424600
*/*PI.L17 XRECSIZE PTR(31)-------------------------------------------*/ 97424700
*        IF ZXRECSIZE='INPUT' |                                         97425500
*           ZXRECSIZE='INOUT'                                           97436600
*          THEN                                                         97447700
*            ANS('#Z'||ZNDX||'_XRECSIZE='||                             97458800
*                XRECSIZE||';'||                                        97469900
*                '/* XRECSIZE PTR(31) */')                              97481000
*                NORESCAN COL(MACLMAR);                                 97492100
*/*PI.L17 XCONSCNT PTR(31)-------------------------------------------*/ 97493300
*        IF ZXCONSCNT='INPUT' |                                         97494500
*           ZXCONSCNT='INOUT'                                           97495700
*          THEN                                                         97496900
*            DO;                                                        97497300
*            IF (XCONSCNT='0' & XMFSCK^='COMPLETE')                     97497700
*              THEN                                                     97498100
*                ANS('#Z'||ZNDX||'_XCONSCNT=0;'||                       97498500
*                    '/* XCONSCNT PTR(31) */')                          97498900
*                    NORESCAN COL(MACLMAR);                             97499300
*            IF XCONSCNT^='0'                                           97499700
*              THEN                                                     97500100
*                ANS('#Z'||ZNDX||'_XCONSCNT='||                         97500500
*                    XCONSCNT||';'||                                    97500900
*                    '/* XCONSCNT PTR(31) */')                          97501300
*                    NORESCAN COL(MACLMAR);                             97501700
*            END;                                                       97502100
*/*PI.L17 XTOKEN PTR(31)---------------------------------------------*/ 97503200
*        IF ZXTOKEN='INPUT' |                                           97514300
*           ZXTOKEN='INOUT'                                             97525400
*          THEN                                                         97536500
*            DO;                                                        97547600
*            IF (XTOKEN='0' & XMFSCK^='COMPLETE')                       97558700
*              THEN                                                     97569800
*                ANS('#Z'||ZNDX||'_XTOKEN=0;'||                         97580900
*                    '/* XTOKEN PTR(31) */')                            97592000
*                    NORESCAN COL(MACLMAR);                             97603100
*            IF XTOKEN^='0'                                             97614200
*              THEN                                                     97625300
*                ANS('#Z'||ZNDX||'_XTOKEN='||                           97636400
*                    XTOKEN||';'||                                      97647500
*                    '/* XTOKEN PTR(31) */')                            97658600
*                    NORESCAN COL(MACLMAR);                             97669700
*            END;                                                       97680800
*/*PI.L29 NOT MF=M MACRO FORM----------------------------------------*/ 97692700
*        IF XMF^='M'                                                    97706400
*          THEN                                                         97720100
*            DO;                                                        97733800
*/*PI.L31 INVOKE FUNCTION--------------------------------------------*/ 97749300
*              IF NUMBER(RSNCODE)>0                                     97754500
*                THEN                                                   97759700
*                  ANS('RFY GPR00F RSTD;') NORESCAN COL(MACLMAR);       97764900
*              ANS('RFY GPR01P RSTD;') NORESCAN COL(MACLMAR);           97770200
*              ANS('GPR01P=ADDR(#Z'||ZNDX||');'||                       97772500
*                  '/* PARAMETER LIST */')                              97774800
*                  NORESCAN COL(MACLMAR);                               97777100
*              IF SYSASCE^='P'                                          97779400
*                THEN                                                   97781700
*                  ANS('SAR(GPR01P,ALET(#Z'||ZNDX||'));'||              97784000
*                      '/* PARAMETER LIST AR */')                       97786300
*                      NORESCAN COL(MACLMAR);                           97788600
*/*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*/  97875500
 /********************************************************************/ 97876300
 /*                                                                  */ 97877100
 /* Define external macro variables                                  */ 97877900
 /*                                                                  */ 97878700
 /********************************************************************/ 97879500
       DECLARE EHAMAPS CHAR EXTERNAL; /* Declare EHAMAPS            */  97880300
       IF INDEX(EHAMAPS,'XM@')=0 THEN /* Was XM@ used before        */  97881100
         EHAMAPS = EHAMAPS || 'XM@';  /* No, add it to list         */  97881900
       IF INDEX(EHAREGS,'15F')=0 THEN /* Was 15F used before        */  97882700
         EHAREGS = EHAREGS || '15F';  /* No, add it to list         */  97883500
 /********************************************************************/ 97884300
 /*                                                                  */ 97885100
 /* Invoke PC for Query EMCS Consoles Interface Routine              */ 97885900
 /*                                                                  */ 97886700
 /********************************************************************/ 97887500
       ANS NORESCAN                                                     97888300
         ('RFY GPR15F RSTD;          /* RESTRICT REGISTER 15   */');    97889100
       ANS NORESCAN                                                     97889900
         ('GPR15F = XM@(26) + 20;    /* GET IEEQEMCS PC NUMBER */');    97890700
       ANS NORESCAN                                                     97891500
         ('PC(GPR15F);               /* PC TO IEEQEMCS ROUTINE */');    97892300
       ANS NORESCAN                                                     97893100
         ('RFY GPR15F UNRSTD;        /* UNRESTRICT REGISTER 15 */');    97893900
*/*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*/  97894700
*              ANS('RFY GPR01P UNRSTD;') NORESCAN COL(MACLMAR);         97895600
*              IF NUMBER(RETCODE)>0                                     97895700
*                THEN                                                   97895800
*                  ANS('RFY GPR15F RSTD;') NORESCAN COL(MACLMAR);       97895900
*/*PO.L08 XRETCODE RETURN CODE---------------------------------------*/ 97916500
*              IF NUMBER(RETCODE)>0                                     97937400
*                THEN                                                   97958300
*                    ANS(XRETCODE||                                     97979200
*                     '=GPR15F; /* SET RETURN CODE */')                 98000100
*                      NORESCAN COL(MACLMAR);                           98021000
*/*PO.L09 XRSNCODE REASON CODE---------------------------------------*/ 98023900
*              IF NUMBER(RSNCODE)>0                                     98026800
*                THEN                                                   98029700
*                    ANS(XRSNCODE||                                     98032600
*                     '=GPR00F; /* SET REASON CODE */')                 98035500
*                      NORESCAN COL(MACLMAR);                           98038400
*/*PO.L10 REMOVE REGISTER RESTRICTIONS-------------------------------*/ 98041900
*              IF NUMBER(RSNCODE)>0                                     98047100
*                THEN                                                   98052300
*              ANS('RFY GPR00F UNRSTD;') NORESCAN COL(MACLMAR);         98057500
*              IF NUMBER(RETCODE)>0                                     98062800
*                THEN                                                   98083700
*              ANS('RFY GPR15F UNRSTD;') NORESCAN COL(MACLMAR);         98104600
*/*PO.L11 END OF FUNCTION INVOCATION---------------------------------*/ 98125500
*            END;                                                       98146400
*/*PO.L12 END OF PARAMETER LIST PROCESSING---------------------------*/ 98167300
*      END;                                                             98188200
*/*PO.L13 IEEQEMCS USAGE INDICATOR-----------------------------------*/ 98209100
*  ZIEEQEMCS='YES';                          /* SET IEEQEMCS USED */    98230000
*/*PO.L15 END OF EXECUTABLE IEEQEMCS-PLISTVER MACRO------------------*/ 98250900
*  IF XMF^='L'                                                          98271800
*    THEN                                                               98292700
*      ANS('END; /* IEEQEMCS-PLISTVER */')                              98313600
*          NORESCAN COL(MACLMAR);                                       98334500
*/*PO.L16 RESTORE PRINT CONTROLS-------------------------------------*/ 98355400
*  ANS(MACCONC||'LIST POP;') NORESCAN COL(MACLMAR);                     98376300
*/*PO.L17 END OF IEEQEMCS MACRO--------------------------------------*/ 98397200
*  ANS(MACCONC||'SPACE;') NORESCAN COL(MACLMAR);                        98418100
*  ANS(' ') NORESCAN COL(MACLMAR);                                      98439000
*/*******************************************************************/  98459900
*/*  PO.L18 END OF CODE TO BE BYPASSED WHEN ZMACRET ^= 0            */  98480800
*/*******************************************************************/  98501700
*      END;                                                             98522600
*/*******************************************************************/  98543500
*/*  MVS ONLY     -CHECK IF AMG PARM LISTS ARE PRESENT              */  98564400
*/*               -ROUND MAX AMG PARM LIST TO DOUBLEWORD MULTIPLES  */  98585300
*/*******************************************************************/  98606200
*  IF ZPRMNUM>0                   /* NUMBER OF AMG PARM LIST ENTRIES*/  98627100
*    THEN                                                               98648000
*      DO;                                                              98668900
*        ZPRMMAX=((ZPRMMAX+7)/8)*8; /* ROUND PARM LIST SIZE UP TO       98689800
*                                      DOUBLEWORD MULTIPLES        */   98710700
*/*******************************************************************/  98731600
*/*  MVS -GENERATE PARM LIST DCL TO OVERLAY ?EPILOG'S ILIST AREA    */  98752500
*/*******************************************************************/  98773400
*        IF XMF ^= 'M' & XMF ^= 'E'                                     98794300
*          THEN                                                         98815200
*            DO;                                                        98836100
*              IF INDEX(EHALIST,',AMG,')=0 /* HAS DECLARE BEEN DONE?*/  98857000
*                THEN                                                   98877900
*                  DO;                                                  98898800
*                    ANS('?EPILOG                                       98919700
*                        STRING(''DCL #ZPLIST DEF(ILIST);'');');        98940600
*                    EHALIST=EHALIST||',AMG,';                          98961500
*                  END;                                                 98982400
*            END;                                                       99003300
*/*******************************************************************/  99024200
*/*  MVS  -EXTRACT PARM LISTS FROM AMG GLOBAL MACRO ARRAYS          */  99045100
*/*******************************************************************/  99066000
*        IF XMF ^= 'M' & XMF ^= 'E'                                     99086900
*          THEN                                                         99107800
*            DO;                                                        99128700
*              IF ZPRMMAX>EHAMAXLEN                                     99149600
*                THEN                                                   99170500
*                  EHAMAXLEN=ZPRMMAX; /* SET MAX PARM LIST SIZE     */  99191400
*            END;                                                       99212300
*        DO ZI=1 TO ZPRMNUM; /* EXTRACT AMG PARM LISTS               */ 99233200
*          ANS('?EPILOG STRING('''||ZPRM(ZI)||''');')                   99254100
*              COL(MACLMAR);                                            99275000
*        END;                                                           99295900
*      END;                                                             99316800
*/*-----------------------------------------------------------------*/  99337700
*/*  MVS  -ENSURE THAT GPRS NEEDED BY AMG MACROS WILL BE PROVIDED   */  99358600
*/*        BY ?EPILOG                                               */  99379500
*/*-----------------------------------------------------------------*/  99400400
*        IF INDEX(EHAREGS,'01P')=0                                      99421300
*          THEN                                                         99442200
*            EHAREGS=EHAREGS||'01P'; /* GPR01P                      */  99463100
*        IF INDEX(EHAREGS,'00F')=0                                      99467200
*          & NUMBER(RSNCODE)>0                                          99471300
*          THEN                                                         99475400
*            EHAREGS=EHAREGS||'00F'; /* GPR00F                      */  99479500
*        IF INDEX(EHAREGS,'15F')=0                                      99484000
*          THEN                                                         99504900
*            EHAREGS=EHAREGS||'15F'; /* GPR15F                      */  99525800
*  RETURN CODE(ZMACRET);                                                99546700
*%END IEEQEMCS;                                                         99567600
