*/**** START OF SPECIFICATIONS **************************************** 00000100
*                                                                     * 00000200
*                                                                     * 00000300
*01* MACRO NAME:  IWMELEAV                              -05/02/96-<0> * 00000400
*                                                                     * 00000500
*                                                                     * 00000600
*01* DESCRIPTIVE NAME:  WLM Enclave Leave Service                     * 00000700
*                                                                     * 00000800
*01* PROPRIETARY STATEMENT:                                           * 00000900
*                                                                     * 00001000
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 00001100
*     THIS MACRO IS "RESTRICTED MATERIALS OF IBM"                     * 00001200
*     5645-001 (C) COPYRIGHT IBM CORP. 1997                           * 00001300
*                                                                     * 00001400
* STATUS= HBB6603                                                     * 00001500
*                                                                     * 00001600
*                                                                     * 00001700
*                                                                     * 00001800
*01* FUNCTION:                                                        * 00001900
*                                                                     * 00002000
*                                                                     * 00002100
*      The purpose of this service is to allow the task (TCB)         * 00002200
*      invoking this service to leave an Enclave.  For the purpose of * 00002300
*      performance management, the task will become associated with   * 00002400
*      its home address space.  The scope of this service affects the * 00002500
*      current TCB at the time the service is invoked.                * 00002600
*                                                                     * 00002700
*      Note that a task may only leave an Enclave if it explicitly    * 00002800
*      joined the Enclave. A subtask which inherited the Enclave      * 00002900
*      attribute from its mother task is not allowed to use IWMELEAV  * 00003000
*      to explicitly leave the Enclave. The subtask would only leave  * 00003100
*      the Enclave upon its own (task) termination or when the        * 00003200
*      Enclave is deleted (IWMEDELE).  Also, a task which             * 00003300
*      successfully establishes a Begin environment (IWMSTBGN) may    * 00003400
*      not invoke Enclave Join, nor is the task allowed to use        * 00003500
*      Enclave Leave while this Begin environment exists.             * 00003600
*                                                                     * 00003700
*      Upon successful completion of this service, the CPU time for   * 00003800
*      the TCB (and any subsequently attached subtasks) will be       * 00003900
*      attributed to the home address space for the purpose of        * 00004000
*      service unit calculations and performance period switches,     * 00004100
*      rather than being attributed to the Enclave.                   * 00004200
*                                                                     * 00004300
*01* EXTERNAL CLASSIFICATION:  GUPI                                   * 00004400
*                                                                     * 00004500
*01* END OF EXTERNAL CLASSIFICATION:                                  * 00004600
*                                                                     * 00004700
*01* ENVIRONMENT:                                                     * 00004800
*                                                                     * 00004900
*                                                                     * 00005000
*      Minimum authorization: Supervisor state or program key mask    * 00005100
*                        (PKM) allowing keys 0-7.                     * 00005200
*                                                                     * 00005300
*      Dispatchable unit mode: Task mode.                             * 00005400
*                                                                     * 00005500
*      Cross Memory Mode: Any PASN, any HASN, any SASN.               * 00005600
*                                                                     * 00005700
*      AMODE:            31-bit.                                      * 00005800
*                                                                     * 00005900
*      ASC mode:         Primary.                                     * 00006000
*                                                                     * 00006100
*      Interrupt status: Enabled for I/O and external interrupts.     * 00006200
*                                                                     * 00006300
*      Locks:            No locks held.                               * 00006400
*                                                                     * 00006500
*      Control parameters: Control parameters must be in the primary  * 00006600
*                        address space.                               * 00006700
*                                                                     * 00006800
*                                                                     * 00006900
*                                                                     * 00007000
*01* PROGRAMMING REQUIREMENTS:                                        * 00007100
*                                                                     * 00007200
*                                                                     * 00007300
*    1.  The macro CVT must be included to use this macro.            * 00007400
*                                                                     * 00007500
*    2.  The macro IWMYCON must be included to use this macro.        * 00007600
*                                                                     * 00007700
*    3.  The macro IWMPB must be in the library concatenation, since  * 00007800
*        it is included by IWMYCON.                                   * 00007900
*                                                                     * 00008000
*    4.  Note that the high order halfword of register 0, and the     * 00008100
*        reason code variable when specified, may be non-zero and     * 00008200
*        represents diagnostic data which is NOT part of the external * 00008300
*        interface.  The high order halfword should thus be excluded  * 00008400
*        from comparison with the reason code values described above. * 00008500
*        The constant, IWMRSNCODE_MASK_CONST defined in IWMYCON, may  * 00008600
*        be used for this purpose.                                    * 00008700
*                                                                     * 00008800
*    5.  All character data, unless otherwise specified, is assumed   * 00008900
*        to be left justified and padded with blanks on the right, as * 00009000
*        needed, to occupy the specified number of bytes.             * 00009100
*                                                                     * 00009200
*                                                                     * 00009300
*                                                                     * 00009400
*01* RESTRICTIONS:                                                    * 00009500
*                                                                     * 00009600
*                                                                     * 00009700
*    1.  This macro may not be used prior to the completion of WLM    * 00009800
*        address space initialization.                                * 00009900
*                                                                     * 00010000
*    2.  This macro may only be used on MVS/ESA HBB6603 or higher.    * 00010100
*                                                                     * 00010200
*    3.  The caller cannot have an EUT FRR established.               * 00010300
*                                                                     * 00010400
*                                                                     * 00010500
*                                                                     * 00010600
*01* INPUT REGISTER INFORMATION:                                      * 00010700
*                                                                     * 00010800
*    Before issuing the IWMELEAV macro, the caller does not have to   * 00010900
*    place any information into any register unless using it in       * 00011000
*    register notation for a particular parameter, or using it as a   * 00011100
*    base register.                                                   * 00011200
*                                                                     * 00011300
*01* OUTPUT REGISTER INFORMATION:                                     * 00011400
*                                                                     * 00011500
*    When control returns to the caller, the GPRs contain:            * 00011600
*                                                                     * 00011700
*                                                                     * 00011800
*    REGISTER  CONTENTS                                               * 00011900
*                                                                     * 00012000
*    0         Reason code if GR15 return code is non-zero            * 00012100
*                                                                     * 00012200
*    1         Used as work registers by the system                   * 00012300
*                                                                     * 00012400
*    2-13      Unchanged                                              * 00012500
*                                                                     * 00012600
*    14        Used as work registers by the system                   * 00012700
*                                                                     * 00012800
*    15        Return code                                            * 00012900
*                                                                     * 00013000
*                                                                     * 00013100
*                                                                     * 00013200
*    When control returns to the caller, the ARs contain:             * 00013300
*                                                                     * 00013400
*                                                                     * 00013500
*    REGISTER  CONTENTS                                               * 00013600
*                                                                     * 00013700
*    0-1       Used as work registers by the system                   * 00013800
*                                                                     * 00013900
*    2-13      Unchanged                                              * 00014000
*                                                                     * 00014100
*    14-15     Used as work registers by the system                   * 00014200
*                                                                     * 00014300
*                                                                     * 00014400
*                                                                     * 00014500
*    Some callers depend on register contents remaining the same      * 00014600
*    before and after issuing a service.  If the system changes the   * 00014700
*    contents of registers on which the caller depends, the caller    * 00014800
*    must save them before issuing the service, and restore them      * 00014900
*    after the system returns control.                                * 00015000
*                                                                     * 00015100
*01* PERFORMANCE IMPLICATIONS:                                        * 00015200
*                                                                     * 00015300
*    None                                                             * 00015400
*                                                                     * 00015500
*01* SYNTAX:                                                          * 00015600
*                                                                     * 00015700
*[xlabel]  IWMELEAV     ETOKEN=xetoken                                * 00015800
*                     [,RETCODE=xretcode]                             * 00015900
*                     [,RSNCODE=xrsncode]                             * 00016000
*                     [,PLISTVER=xplistver|IMPLIED_VERSION]         * 00016100
*                    [,MF=S]                                         * 00016200
*                    [,MF=(L,xmfctrl,xmfattr|0D)]                  * 00016300
*                    [,MF=(E,xmfctrl,COMPLETE)]                    * 00016400
*                                                                     * 00016500
*                                                                     * 00016600
*      Where:                                                         * 00016700
*                                                                     * 00016800
*                                                                     * 00016900
*      [xlabel]                                                       * 00017000
*          is an optional symbol, starting in column 1, that is the   * 00017100
*          name on the IWMELEAV macro invocation.  The name must      * 00017200
*          conform to the rules for an ordinary assembler language    * 00017300
*          symbol.                                                    * 00017400
*          DEFAULT: No name.                                          * 00017500
*                                                                     * 00017600
*                                                                     * 00017700
*                                                                     * 00017800
*                                                                     * 00017900
*      ETOKEN=xetoken                                                 * 00018000
*          is the name (RS-type), or address in register (2)-(12), of * 00018100
*          a required 8 character input which contains the Enclave    * 00018200
*          token associated with the work request as returned by      * 00018300
*          IWMECREA.                                                  * 00018400
*                                                                     * 00018500
*                                                                     * 00018600
*                                                                     * 00018700
*                                                                     * 00018800
*      [RETCODE=xretcode]                                             * 00018900
*          is the name (RS-type) of an optional fullword output       * 00019000
*          variable, or register (2)-(12), into which the return code * 00019100
*          is to be copied from GPR 15.                               * 00019200
*                                                                     * 00019300
*                                                                     * 00019400
*                                                                     * 00019500
*                                                                     * 00019600
*      [RSNCODE=xrsncode]                                             * 00019700
*          is the name (RS-type) of an optional fullword output       * 00019800
*          variable, or register (2)-(12), into which the reason code * 00019900
*          is to be copied from GPR 0.                                * 00020000
*                                                                     * 00020100
*                                                                     * 00020200
*                                                                     * 00020300
*                                                                     * 00020400
*      [PLISTVER=xplistver|IMPLIED_VERSION]                         * 00020500
*          is an optional byte input decimal value in the "0-0" range * 00020600
*          that specifies the macro version.  PLISTVER is the only    * 00020700
*          key allowed on the list form of MF and determines which    * 00020800
*          parameter list is generated.  Note that MAX may be         * 00020900
*          specified instead of a number, and the parameter list will * 00021000
*          be of the largest size currently supported. This size may  * 00021100
*          grow from release to release (thus possibly affecting the  * 00021200
*          amount of storage needed by your program).  If your        * 00021300
*          program can tolerate this, IBM recommends that you always  * 00021400
*          specify MAX when creating the list form parameter list as  * 00021500
*          that will ensure that the list form parameter list is      * 00021600
*          always long enough to hold whatever parameters might be    * 00021700
*          specified on the execute form.                             * 00021800
*          DEFAULT: IMPLIED_VERSION.  When PLISTVER is omitted, the   * 00021900
*          default is the lowest version which allows all of the      * 00022000
*          parameters specified on the invocation to be processed.    * 00022100
*                                                                     * 00022200
*                                                                     * 00022300
*                                                                     * 00022400
*                                                                     * 00022500
*      [MF=S|L|E]                                                   * 00022600
*          is an optional keyword input which specifies the macro     * 00022700
*          form.                                                      * 00022800
*          DEFAULT: S                                                 * 00022900
*                                                                     * 00023000
*                                                                     * 00023100
*          [MF=S]                                                     * 00023200
*              specifies the standard form of the macro.  The "S"     * 00023300
*              form generates code to put the parameters into an      * 00023400
*              in-line parameter list and invoke the desired service. * 00023500
*              Full checking for required macro keys is done along    * 00023600
*              with supplying defaults for omitted optional           * 00023700
*              parameters.                                            * 00023800
*                                                                     * 00023900
*          [MF=(L,xmfctrl,xmfattr|0D)]                              * 00024000
*              specifies the list form of the macro.  The "L" form    * 00024100
*              defines an area to be used for the parameter list.     * 00024200
*              Only the PLISTVER key may be specified on the          * 00024300
*              invocation.  All other macro parameters are flagged as * 00024400
*              errors.  If PLISTVER is not specified, the original    * 00024500
*              parameter list definition is used.                     * 00024600
*                                                                     * 00024700
*            ,xmfctrl                                                 * 00024800
*              is a required input.  It is the name of a storage area * 00024900
*              for the parameter list.                                * 00025000
*                                                                     * 00025100
*            ,xmfattr|0D                                            * 00025200
*              is an optional 60 character input string that varies   * 00025300
*              from 1 to 60 characters. It can contain any value that * 00025400
*              is valid on an assembler DS pseudo-op. You can use     * 00025500
*              this parameter to force boundary alignment of the      * 00025600
*              parameter list.                                        * 00025700
*              DEFAULT: 0D which forces the parameter list to a       * 00025800
*              doubleword boundary.                                   * 00025900
*                                                                     * 00026000
*          [MF=(E,xmfctrl,COMPLETE)]                                * 00026100
*              specifies the execute form of the macro.  The "E" form * 00026200
*              generates code to put the parameters into the          * 00026300
*              parameter list specified by xmfctrl and provides full  * 00026400
*              syntax checking with default setting.                  * 00026500
*                                                                     * 00026600
*            ,xmfctrl                                                 * 00026700
*              is a required input.  It is the name (RS-type), or     * 00026800
*              address in register (1)-(12), of a storage area for    * 00026900
*              the parameter list.                                    * 00027000
*                                                                     * 00027100
*            ,COMPLETE                                              * 00027200
*              is an optional keyword input which specifies the       * 00027300
*              degree of macro parameter syntax checking.             * 00027400
*              DEFAULT: COMPLETE                                      * 00027500
*                                                                     * 00027600
*                                                                     * 00027700
*              COMPLETE                                               * 00027800
*                  Checking for required macro keys is done and       * 00027900
*                  defaults are supplied for omitted optional         * 00028000
*                  parameters.                                        * 00028100
*                                                                     * 00028200
*                                                                     * 00028300
*                                                                     * 00028400
*                                                                     * 00028500
*                                                                     * 00028600
*                                                                     * 00028700
*                                                                     * 00028800
*01* ABEND CODES:  None.                                              * 00028900
*                                                                     * 00029000
*01* RETURN CODES:                                                    * 00029100
*                                                                     * 00029200
*                                                                     * 00029300
*            0    Name: IwmRetCodeOk                                  * 00029400
*                                                                     * 00029500
*                 Meaning: Successful completion.                     * 00029600
*                                                                     * 00029700
*                 Action: None required.                              * 00029800
*                                                                     * 00029900
*            4    Name: IwmRetCodeWarning                             * 00030000
*                                                                     * 00030100
*                 Meaning: Successful completion, unusual conditions  * 00030200
*                 noted.                                              * 00030300
*                                                                     * 00030400
*                                                                     * 00030500
*                 HEX REASON  MEANING/ACTION                          * 00030600
*                 CODE                                                * 00030700
*                                                                     * 00030800
*                 xxxx041C    Name: IwmRsnCodeNotEnclave              * 00030900
*                                                                     * 00031000
*                             Meaning:  The current dispatchable      * 00031100
*                             workunit is not associated with an      * 00031200
*                             Enclave.                                * 00031300
*                                                                     * 00031400
*                             Action: Check for possible asynchronous * 00031500
*                             events which may have deleted the       * 00031600
*                             Enclave.                                * 00031700
*                                                                     * 00031800
*                                                                     * 00031900
*                                                                     * 00032000
*            8    Name: IwmRetCodeInvocError                          * 00032100
*                                                                     * 00032200
*                 Meaning: Invalid invocation environment or          * 00032300
*                 parameters.                                         * 00032400
*                                                                     * 00032500
*                                                                     * 00032600
*                 HEX REASON  MEANING/ACTION                          * 00032700
*                 CODE                                                * 00032800
*                                                                     * 00032900
*                 xxxx0801    Name: IwmRsnCodeSrbMode                 * 00033000
*                                                                     * 00033100
*                             Meaning:  Caller is in SRB mode.        * 00033200
*                                                                     * 00033300
*                             Action: Avoid requesting this function  * 00033400
*                             while in SRB mode.                      * 00033500
*                                                                     * 00033600
*                 xxxx0803    Name: IwmRsnCodeDisabled                * 00033700
*                                                                     * 00033800
*                             Meaning: Caller is disabled.            * 00033900
*                                                                     * 00034000
*                             Action: Avoid requesting this function  * 00034100
*                             while disabled.                         * 00034200
*                                                                     * 00034300
*                 xxxx0804    Name: IwmRsnCodeLocked                  * 00034400
*                                                                     * 00034500
*                             Meaning: Caller is locked.              * 00034600
*                                                                     * 00034700
*                             Action: Avoid requesting this function  * 00034800
*                             while locked.                           * 00034900
*                                                                     * 00035000
*                 xxxx080B    Name: IwmRsnCodeBadPl                   * 00035100
*                                                                     * 00035200
*                             Meaning: Error accessing parameter      * 00035300
*                             list.                                   * 00035400
*                                                                     * 00035500
*                             Action: Check for possible storage      * 00035600
*                             overlay.                                * 00035700
*                                                                     * 00035800
*                 xxxx0810    Name: IwmRsnCodeEutFrr                  * 00035900
*                                                                     * 00036000
*                             Meaning: Caller has EUT FRR             * 00036100
*                             established.                            * 00036200
*                                                                     * 00036300
*                             Action: Avoid requesting this function  * 00036400
*                             with an EUT FRR set.                    * 00036500
*                                                                     * 00036600
*                 xxxx0823    Name: IwmRsnCodeDatoff                  * 00036700
*                                                                     * 00036800
*                             Meaning: Caller invoked service while   * 00036900
*                             DATOFF                                  * 00037000
*                                                                     * 00037100
*                             Action: Avoid requesting this function  * 00037200
*                             in this environment.                    * 00037300
*                                                                     * 00037400
*                 xxxx0824    Name: IwmRsnCodeAmode24                 * 00037500
*                                                                     * 00037600
*                             Meaning: Caller invoked service but was * 00037700
*                             in 24 bit addressing mode.              * 00037800
*                                                                     * 00037900
*                             Action: Request this function only when * 00038000
*                             you are in 31 bit addressing mode.      * 00038100
*                                                                     * 00038200
*                 xxxx0825    Name: IwmRsnCodeAscModeNotPrimary       * 00038300
*                                                                     * 00038400
*                             Meaning: Caller invoked service but was * 00038500
*                             not DAT on Primary ASC mode.            * 00038600
*                                                                     * 00038700
*                             Action: Avoid requesting this function  * 00038800
*                             in this environment.                    * 00038900
*                                                                     * 00039000
*                 xxxx0826    Name: IwmRsnCodeTaskTerm                * 00039100
*                                                                     * 00039200
*                             Meaning: Caller invoked service while   * 00039300
*                             task termination is in progress for the * 00039400
*                             current TCB.                            * 00039500
*                                                                     * 00039600
*                             Action: Avoid requesting this function  * 00039700
*                             while task termination is in progress.  * 00039800
*                                                                     * 00039900
*                 xxxx0828    Name: IwmRsnCodeBadVersion              * 00040000
*                                                                     * 00040100
*                             Meaning: Version number in parameter    * 00040200
*                             list is not valid or version length     * 00040300
*                             field is not valid.                     * 00040400
*                                                                     * 00040500
*                             Action: Check for possible storage      * 00040600
*                             overlay of the parameter list.          * 00040700
*                                                                     * 00040800
*                 xxxx083A    Name: IwmRsnCodeBadEnclave              * 00040900
*                                                                     * 00041000
*                             Meaning: Enclave token does not pass    * 00041100
*                             verification.                           * 00041200
*                                                                     * 00041300
*                             Action: Check for possible storage      * 00041400
*                             overlay of the Enclave token.           * 00041500
*                                                                     * 00041600
*                 xxxx0845    Name: IwmRsnCodeWrongEnclave            * 00041700
*                                                                     * 00041800
*                             Meaning: The current dispatchable       * 00041900
*                             workunit is not associated with the     * 00042000
*                             input Enclave.                          * 00042100
*                                                                     * 00042200
*                             Action: Check for possible storage      * 00042300
*                             overlay of the Enclave token.           * 00042400
*                                                                     * 00042500
*                 xxxx0850    Name: IwmRsnCodeBeginEnvOutstanding     * 00042600
*                                                                     * 00042700
*                             Meaning: Current dispatchable workunit  * 00042800
*                             is operating under an outstanding Begin * 00042900
*                             environment, Enclave leave is not       * 00043000
*                             allowed. IWMSTEND is the required       * 00043100
*                             operation.                              * 00043200
*                                                                     * 00043300
*                             Action: Avoid requesting this function  * 00043400
*                             in this environment.                    * 00043500
*                                                                     * 00043600
*                 xxxx0858    Name: IwmRsnCodeNotEjoinedTcb           * 00043700
*                                                                     * 00043800
*                             Meaning: The current dispatchable       * 00043900
*                             workunit did not issue Enclave Join,    * 00044000
*                             but only inherited Enclave attribute    * 00044100
*                             from mother TCB.                        * 00044200
*                                                                     * 00044300
*                             Action: Avoid requesting this function  * 00044400
*                             in this environment.                    * 00044500
*                                                                     * 00044600
*                 xxxx0859    Name: IwmRsnCodeEnclaveSubTaskExists    * 00044700
*                                                                     * 00044800
*                             Meaning: The current dispatchable       * 00044900
*                             workunit has residual subtasks          * 00045000
*                             propagated to the Enclave which are     * 00045100
*                             still associated with the Enclave.      * 00045200
*                                                                     * 00045300
*                             Action: Avoid requesting this function  * 00045400
*                             in this environment.                    * 00045500
*                                                                     * 00045600
*                                                                     * 00045700
*                                                                     * 00045800
*            10   Name: IwmRetCodeCompError                           * 00045900
*                                                                     * 00046000
*                 Meaning: Component error.                           * 00046100
*                                                                     * 00046200
*                 Action: Contact your system programmer.             * 00046300
*                                                                     * 00046400
*                                                                     * 00046500
*                                                                     * 00046600
*01* REASON CODES:                                                    * 00046700
*                                                                     * 00046800
*       A unique reason code will be returned whenever the return     * 00046900
*       code is non-zero.  Reason codes, as appropriate, are defined  * 00047000
*       under their corresponding return code.  Reason code and       * 00047100
*       return code constants are defined within IWMYCON.  Note that  * 00047200
*       the high order halfword of register 0, and the reason code    * 00047300
*       variable when specified, may be non-zero and represents       * 00047400
*       diagnostic data which is NOT part of the external interface.  * 00047500
*       The high order halfword should thus be excluded from          * 00047600
*       comparison with the reason code values described above.  The  * 00047700
*       constant, IWMRSNCODE_MASK_CONST defined in IWMYCON, may be    * 00047800
*       used for this purpose.                                        * 00047900
*                                                                     * 00048000
*01* MODULE TYPE:  ASSEM MACRO                                        * 00048100
*                                                                     * 00048200
*02*   PROCESSOR:  ASSEM                                              * 00048300
*                                                                     * 00048400
*01* COMPONENT:  SCWLM                                                * 00048500
*                                                                     * 00048600
*01* DISTRIBUTION LIBRARY: AMACLIB                                    * 00048700
*                                                                     * 00048800
*01* EXAMPLES:                                                        * 00048900
*                                                                     * 00049000
*    To cause the current task to leave its Enclave environment:      * 00049100
*                                                                     * 00049200
*               IWMELEAV ETOKEN=ENCTOKEN,RETCODE=RC,RSNCODE=RSN       * 00049300
*      *                                                              * 00049400
*      * Storage areas                                                * 00049500
*      *                                                              * 00049600
*      ENCTOKEN DS    CL8             Contains the Enclave token      * 00049700
*      *                              associated with the work        * 00049800
*      *                              request as returned by IWMECREA * 00049900
*      RC       DS    F               Return code                     * 00050000
*      RSN      DS    F               Reason code                     * 00050100
*                                                                     * 00050200
*                                                                     * 00050300
*01* MACRO USAGE NOTES:                                               * 00050400
*                                                                     * 00050500
*                                                                     * 00050600
*    1.  Printing of the macro expansion is controlled by the ZPRINT  * 00050700
*        global macro variable.  Any value other than 'NO' will       * 00050800
*        result in the macro expansion being printed.  The default is * 00050900
*        'YES'.  The following examples illustrate how the ZPRINT     * 00051000
*        variable should be set.                                      * 00051100
*                                                                     * 00051200
*                    GBLC &ZPRINT                                     * 00051300
*            &ZPRINT SETC 'YES'          &ZPRINT SETC 'NO'            * 00051400
*                                                                     * 00051500
*                                                                     * 00051600
*    2.  All   keys   currently   contained  in  the  IWMELEAV  macro * 00051700
*        correspond  to  version  0.   If you specify PLISTVER, use a * 00051800
*        value of 0 or MAX.                                           * 00051900
*                                                                     * 00052000
*                                                                     * 00052100
*                                                                     * 00052200
*                                                                     * 00052300
*01* CHANGE ACTIVITY:                                                 * 00052400
*                                                                     * 00052500
*   Flag LineItem  FMID    Date   ID    Comment                       * 00052600
*                                                                     * 00052700
*    $L0=WLMP0AMG HBB6603 950426 PD16:  DB2 Stored SQL Procedure      * 00052800
****** END OF SPECIFICATIONS *****************************************/ 00052900
*/********************************************************************* 00053000
         MACRO                                                          00053100
&XLABEL  IWMELEAV &ETOKEN=,&RETCODE=,&RSNCODE=,&PLISTVER=,&MF=          00053200
.*                                                                      00053300
*              MACDATE -05/02/96-<0>                                    00053400
.*                                                                      00053500
.*******************************************************************    00053600
.***AB.02  GLOBAL VARIABLES TO CONTROL PRINT AND CODE GENERATION        00053700
.*******************************************************************    00053800
              GBLC  &ZPRINT     YES=PRINT NO=NO PRINT                   00053900
              GBLC  &ZTEST      YES=TEST NO=NO TEST                     00054000
              GBLC  &ZSYSTEM    PCCODE10, MVS, SAK, VM, XAX             00054100
.*                                                                      00054200
              GBLC  &ZIWMELEAV  YES=MACRO USED AT LEAST ONCE            00054300
.*******************************************************************    00054400
.***AB.03  COMMONLY USED LOCAL MACRO VARIABLES                          00054500
.*******************************************************************    00054600
              LCLC  &ZMS        ERROR MESSAGE WORK AREA                 00054700
              LCLC  &ZCNDX      LAST THREE SYSNDX CHARACTERS            00054800
              LCLC  &ZCLNG      USED WHEN LENGTH IS NEEDED              00054900
              LCLC  &ZCGPR      USED WHEN VALUE IS IN A GPR             00055000
              LCLC  &ZCVAL      USED TO CONTAIN FIXED VALUE             00055100
              LCLA  &ZAWRK      USED AS A WORK AREA                     00055200
              LCLA  &ZASIZ      USED FOR SIZE OF VALUE                  00055300
              LCLA  &ZN         NUMERIC WORK VARIABLE                   00055400
              LCLC  &ZC         CHARACTER WORK VARIABLE                 00055500
              LCLC  &ZTLC       CHARACTER TOO LONG VARIABLE             00055600
              LCLA  &ZTLA       VALUE TOO LONG VARIABLE                 00055700
              LCLA  &ZMACRET    MACRO RETURN CODE                       00055800
&ZMACRET      SETA  0           ASSUME NO ERRORS                        00055900
.*                                                                      00056000
              LCLC  &ZCSYSLIST(255)             NONXKEY, POS ARRAY      00056100
              LCLA  &ZASYSLNDX  WORK INDEX FOR ZCSYSLIST()              00056200
              LCLA  &ZPLLEN     PARAMETER LIST LENGTH                   00056300
              LCLC  &ZENDBASEPL                 End of base PL          00056400
              LCLA  &ZPLWORKA   PARAMETER LIST LENGTH                   00056500
.*******************************************************************    00056600
.***AB.04  MACRO VARIABLES FOR RANGES AND SETS OF ARGUMENTS             00056700
.*******************************************************************    00056800
              LCLA  &ZI         INDEX FOR ARRAY                         00056900
              LCLA  &ZJ         INDEX FOR PARMS                         00057000
              LCLA  &ZK         INDEX FOR PARSE                         00057100
              LCLA  &ZLO        LOW RANGE VALUE                         00057200
              LCLA  &ZHI        HIGH RANGE VALUE                        00057300
              LCLC  &ZW         WORK AREA FOR PARM                      00057400
.********************************************************************   00057500
.***AB.05  INVOKE MVS MACROS TO CONTROL CODE GENERATION                 00057600
.********************************************************************   00057700
              GBLC  &SYSSPLV    SP LEVEL 1,2,3 -SPLEVEL                 00057800
              GBLC  &SYSASCE    SYSTEM STATE P ANY AR-SYSSTATE          00057900
.*                                                                      00058000
              AIF   (K'&SYSASCE GT 0).ZSYS4     SYS STATE DEFINED       00058100
              AIF   (K'&SYSSPLV GT 0).ZSYS2     SP LEVEL DEFINED        00058200
              SPLEVEL  TEST                                             00058300
.ZSYS2        ANOP  ,                                                   00058400
              AIF   ('&SYSSPLV' EQ '1').ZSYS3   PRE SP 3.1              00058500
              AIF   ('&SYSSPLV' EQ '2').ZSYS3   PRE SP 3.1              00058600
              SYSSTATE TEST                                             00058700
              AGO   .ZSYS4                                              00058800
.ZSYS3        ANOP  ,                                                   00058900
&SYSASCE      SETC  'P'         ASSUME SYSSTATE PRIMARY                 00059000
.ZSYS4        ANOP  ,                                                   00059100
.*******************************************************************    00059200
.***AB.07  DEFINE ALL MACRO VARIABLES                                   00059300
.*******************************************************************    00059400
              LCLC  &XETOKEN    ++ NAME                                 00059500
              LCLC  &XRETCODE   ++ NAME                                 00059600
              LCLC  &XRSNCODE   ++ NAME                                 00059700
              LCLA  &XPLISTVER  ++ VALUE                                00059800
              LCLC  &XMF        ++ VALUE                                00059900
              LCLC  &XMFCTRL    ++ NAME                                 00060000
              LCLC  &XMFATTR    ++ VALUE                                00060100
              LCLC  &XMFSCK     ++ VALUE                                00060200
.*******************************************************************    00060300
.***AB.13  DEFINE MACRO VARIABLES FOR INPUT/OUTPUT PROCESSING           00060400
.*******************************************************************    00060500
              LCLC  &ZXETOKEN   ++ INPUT NAME                           00060600
              LCLC  &ZXRETCODE  ++ OUTPUT NAME                          00060700
              LCLC  &ZXRSNCODE  ++ OUTPUT NAME                          00060800
              LCLC  &ZXPLISTVER                 ++ INPUT VALUE          00060900
              LCLC  &ZXMF       ++ INPUT VALUE                          00061000
              LCLC  &ZXMFCTRL   ++ INPUT NAME                           00061100
              LCLC  &ZXMFATTR   ++ INPUT VALUE                          00061200
              LCLC  &ZXMFSCK    ++ INPUT VALUE                          00061300
.********************************************************************   00061400
.***AC.PLV01  PROCESS PLISTVER                                      *   00061500
.********************************************************************   00061600
&XPLISTVER      SETA  0                                                 00061700
                AIF   (K'&PLISTVER(1) LE 0).ZPLV0                       00061800
                AIF   ('&PLISTVER(1)' NE 'MAX').ZPLV0                   00061900
&XPLISTVER      SETA  0                                                 00062000
.ZPLV0          ANOP  ,                                                 00062100
.*                                                                      00062200
                AIF   (K'&PLISTVER(1) LE 0).ZPVCKE                      00062300
                AIF   ('&PLISTVER(1)' EQ 'IMPLIED_VERSION').ZPVCKE      00062400
                AIF   ('&PLISTVER(1)' EQ 'MAX').ZPVCKE                  00062500
.*-------------------------------------------------------------------   00062600
                AIF   (N'&PLISTVER LE 1).ZPVCK3  CK NUM                 00062700
&ZMS            SETC  '"PLISTVER='         *KPOSA* MNOTE                00062800
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00062900
&ZMS            SETC  '&ZMS "PLISTVER"'                                 00063000
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00063100
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00063200
                AGO   .ZPVCK2                                           00063300
.ZPVCK3         ANOP  ,                                                 00063400
.*-------------------------------------------------------------------   00063500
                AIF   ('&PLISTVER'(1,1) NE '(').ZPVCK2                  00063600
&ZMS            SETC  '"PLISTVER='         *KGPRA* MNOTE                00063700
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00063800
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         00063900
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'                 00064000
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00064100
                AGO   .ZPVCKE                                           00064200
.ZPVCK2         ANOP  ,                                                 00064300
.*-------------------------------------------------------------------   00064400
&ZN             SETA   &PLISTVER(1)        CONVERT TO ARITHMETIC        00064500
                AIF   (&ZN GE &XPLISTVER).ZPVCK4                        00064600
&ZMS            SETC  'PLISTVER='          *KVALA* MNOTE                00064700
&ZMS            SETC  '&ZMS.&PLISTVER(1)'                               00064800
&ZMS            SETC  '&ZMS., BUT PLISTVER OF'                          00064900
&ZMS            SETC  '&ZMS &XPLISTVER'                                 00065000
                MNOTE 8,' &ZMS IS REQUIRED.'                            00065100
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00065200
                AGO   .ZPVCK5                                           00065300
.ZPVCK4         ANOP  ,                                                 00065400
&XPLISTVER      SETA  &PLISTVER(1)                                      00065500
.ZPVCK5         ANOP  ,                                                 00065600
.*-------------------------------------------------------------------   00065700
&ZCVAL          SETC  '&PLISTVER(1)'                                    00065800
                AIF   ('&ZCVAL'(1,1) EQ '(').ZPVCKE  IN GPR             00065900
                AIF   (T'&ZCVAL NE 'N').ZPVCK6  NUMERIC ERR             00066000
                AIF   (&XPLISTVER LT 0).ZPVCK6  TOO LOW                 00066100
                AIF   (&XPLISTVER LE 0).ZPVCKE  NOT HIGH                00066200
.ZPVCK6         ANOP   ,                                                00066300
&ZMS            SETC  '"PLISTVER='         *KRNGA* MNOTE                00066400
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00066500
&ZMS            SETC  '&ZMS THE RANGE IS "0-0"'                         00066600
                MNOTE 8,' &ZMS FOR ARGUMENT 1.'                         00066700
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00066800
.ZPVCKE         ANOP   ,                                                00066900
.********************************************************************   00067000
.***AG.MF01 PROCESS MF MACRO FORMS                                      00067100
.********************************************************************   00067200
              ACTR  10000                                               00067300
.*------------------------------------------------------------------    00067400
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00067500
&XMF          SETC  ''          INITIALIZE XVARIABLE                    00067600
.*-------------------------------------------------------------------   00067700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00067800
.ZG15         ANOP  ,                                                   00067900
&ZTLC         SETC 'S'                                                  00068000
              AIF   ('&MF(1)' NE '&ZTLC').ZG16                          00068100
&XMF          SETC  'S'         SET KEYWORD                             00068200
              AIF   (N'&MF LE 1).ZG15A          CK NUM                  00068300
&ZMS          SETC  '"MF='      *KPOSA* MNOTE                           00068400
&ZMS          SETC  '&ZMS.&MF"'                                         00068500
&ZMS          SETC  '&ZMS "MF"'                                         00068600
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00068700
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00068800
.ZG15A        ANOP  ,                                                   00068900
.*-------------------------------------------------------------------   00069000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00069100
.ZG16         ANOP  ,                                                   00069200
&ZTLC         SETC 'L'                                                  00069300
              AIF   ('&MF(1)' NE '&ZTLC').ZG23                          00069400
&XMF          SETC  'L'         SET KEYWORD                             00069500
              AIF   (N'&MF LE 3).ZG16A          CK NUM                  00069600
&ZMS          SETC  '"MF='      *KPOSA* MNOTE                           00069700
&ZMS          SETC  '&ZMS.&MF"'                                         00069800
&ZMS          SETC  '&ZMS "MF"'                                         00069900
              MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'                00070000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00070100
.ZG16A        ANOP  ,                                                   00070200
.*-------------------------------------------------------------------   00070300
.***AG.KKCTL08 -MF(L) SPECIAL CHECK                                     00070400
              AIF   (N'&SYSLIST NE 0).ZG16B     POSITIONALS?            00070500
              AIF   ('&ETOKEN' NE '').ZG16B     KEYS?                   00070600
              AIF   ('&RETCODE' NE '').ZG16B    KEYS?                   00070700
              AIF   ('&RSNCODE' NE '').ZG16B    KEYS?                   00070800
              AGO    .ZG16C     INVOCATION OKAY                         00070900
.ZG16B        ANOP  ,                                                   00071000
&ZMS          SETC  'THE "L" FORM OF "MF"'      *MFLA* MNOTE            00071100
&ZMS          SETC  '&ZMS CAN ONLY HAVE'                                00071200
&ZMS          SETC  '&ZMS THE "PLISTVER" KEY'                           00071300
              MNOTE 8,' &ZMS SPECIFIED ON THE INVOCATION.'              00071400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00071500
.ZG16C        ANOP  ,                                                   00071600
.*-------------------------------------------------------------------   00071700
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00071800
&ZXMFCTRL     SETC  'INPUT'     SET IN/OUTPUT                           00071900
&XMFCTRL      SETC  '&MF(2,1)'  SET XVARIABLE                           00072000
              AIF   (N'&MF(2) GT 1).ZG18B       MULTI PARMS             00072100
&XMFCTRL      SETC  '&MF(2)'    SET XVARIABLE                           00072200
.ZG18B        AIF   (K'&MF(2) GT 0).ZG18C                               00072300
&ZXMFCTRL     SETC  ''          RESET IN/OUTPUT                         00072400
&ZMS          SETC  'WHEN "L" IS SPECIFIED'     *KRQDA*                 00072500
&ZMS          SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'                 00072600
              MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                        00072700
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00072800
.ZG18C        ANOP  ,                                                   00072900
.*-------------------------------------------------------------------   00073000
.***AG.KCK01 NAME, OPT RQD INPUT, POS(2) -GPR NOT ALLOWED               00073100
              AIF   (K'&ZXMFCTRL LE 0).ZG18P    NOT I/O                 00073200
              AIF   ('&XMFCTRL'(1,1) NE '(').ZG18P                      00073300
&ZXMFCTRL     SETC  ''          RESET IN/OUTPUT                         00073400
&ZMS          SETC  '"MF='      *KGPRA* MNOTE                           00073500
&ZMS          SETC  '&ZMS.&MF"'                                         00073600
&ZMS          SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'           00073700
              MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 2.'                   00073800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00073900
.ZG18P        ANOP  ,                                                   00074000
.*-------------------------------------------------------------------   00074100
.***AG.KXVAR13 VALUE, OPT INPUT, POS(3) -XVARIABLE                      00074200
&ZXMFATTR     SETC  'INPUT'     SET IN/OUTPUT                           00074300
&XMFATTR      SETC  '0D'                                                00074400
              AIF   (K'&MF(3) LE 0).ZG21B       PARM                    00074500
&XMFATTR      SETC  '&MF(3,1)'  SET XVARIABLE                           00074600
              AIF   (N'&MF(3) GT 1).ZG21B       MULTI PARMS             00074700
&XMFATTR      SETC  '&MF(3)'    SET XVARIABLE                           00074800
.ZG21B        ANOP  ,                                                   00074900
.*-------------------------------------------------------------------   00075000
.***AG.KCK01 VALUE, OPT INPUT, POS(3) -GPR NOT ALLOWED                  00075100
              AIF   (K'&ZXMFATTR LE 0).ZG21P    NOT I/O                 00075200
              AIF   ('&XMFATTR'(1,1) NE '(').ZG21P                      00075300
&ZXMFATTR     SETC  ''          RESET IN/OUTPUT                         00075400
&ZMS          SETC  '"MF='      *KGPRA* MNOTE                           00075500
&ZMS          SETC  '&ZMS.&MF"'                                         00075600
&ZMS          SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'           00075700
              MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 3.'                   00075800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00075900
.ZG21P        ANOP  ,                                                   00076000
.*-------------------------------------------------------------------   00076100
.***AG.KCK03 VALUE, OPT INPUT, POS(3) -CHARACTER LENGTH                 00076200
              AIF   (K'&ZXMFATTR LE 0).ZG21S    NOT I/O                 00076300
              AIF   (K'&XMFATTR LE 60).ZG21S    LNG OK                  00076400
&ZXMFATTR     SETC  ''          RESET IN/OUTPUT                         00076500
&ZMS          SETC  '"MF='      *KLNGA* MNOTE                           00076600
&ZMS          SETC  '&ZMS.&MF"'                                         00076700
&ZMS          SETC  '&ZMS ARGUMENT 3 EXCEEDS THE MAXIMUM'               00076800
              MNOTE 8,' &ZMS LENGTH OF 60 CHARACTERS.'                  00076900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00077000
.ZG21S        ANOP  ,                                                   00077100
.*-------------------------------------------------------------------   00077200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00077300
.ZG23         ANOP  ,                                                   00077400
&ZTLC         SETC 'E'                                                  00077500
              AIF   ('&MF(1)' NE '&ZTLC').ZG31                          00077600
&XMF          SETC  'E'         SET KEYWORD                             00077700
              AIF   (N'&MF LE 3).ZG23A          CK NUM                  00077800
&ZMS          SETC  '"MF='      *KPOSA* MNOTE                           00077900
&ZMS          SETC  '&ZMS.&MF"'                                         00078000
&ZMS          SETC  '&ZMS "MF"'                                         00078100
              MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'                00078200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00078300
.ZG23A        ANOP  ,                                                   00078400
.*-------------------------------------------------------------------   00078500
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00078600
&ZXMFCTRL     SETC  'INPUT'     SET IN/OUTPUT                           00078700
&XMFCTRL      SETC  '&MF(2,1)'  SET XVARIABLE                           00078800
              AIF   (N'&MF(2) GT 1).ZG25B       MULTI PARMS             00078900
&XMFCTRL      SETC  '&MF(2)'    SET XVARIABLE                           00079000
.ZG25B        AIF   (K'&MF(2) GT 0).ZG25C                               00079100
&ZXMFCTRL     SETC  ''          RESET IN/OUTPUT                         00079200
&ZMS          SETC  'WHEN "E" IS SPECIFIED'     *KRQDA*                 00079300
&ZMS          SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'                 00079400
              MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                        00079500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00079600
.ZG25C        ANOP  ,                                                   00079700
.*-------------------------------------------------------------------   00079800
.***AG.KCK02 NAME, OPT RQD INPUT, POS(2) -GPR OUT OF RANGE              00079900
              AIF   (K'&ZXMFCTRL LE 0).ZG25R    NOT I/O                 00080000
              AIF   ('&XMFCTRL'(1,1) NE '(').ZG25R                      00080100
&ZCGPR        SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)                          00080200
              AIF   ('&ZCGPR'(1,1) NE '0').ZG25P                        00080300
              AIF   (K'&ZCGPR GT 2).ZG25Q                               00080400
              AIF   ('&ZCGPR' EQ '0').ZG25Q                             00080500
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00080600
              AIF   (T'&ZCGPR NE 'N').ZG25Q     INVALID REG NAME        00080700
.ZG25P        ANOP  ,                                                   00080800
              AIF   (T'&ZCGPR NE 'N').ZG25R     NON NUMERIC             00080900
              AIF   ('&ZCGPR' LT '1').ZG25Q                             00081000
              AIF   ('&ZCGPR' LE '12').ZG25R                            00081100
.ZG25Q        ANOP  ,                                                   00081200
&ZMS          SETC  '"MF='      *KGPRA* MNOTE                           00081300
&ZMS          SETC  '&ZMS.&MF"'                                         00081400
&ZMS          SETC  '&ZMS ARGUMENT 2 MUST SPECIFY A REGISTER'           00081500
              MNOTE 8,' &ZMS IN THE RANGE (1)-(12).'                    00081600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00081700
.ZG25R        ANOP  ,                                                   00081800
.*-------------------------------------------------------------------   00081900
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00082000
&XMFSCK       SETC  ''          INITIALIZE XVARIABLE                    00082100
.ZG29A   AIF   ('&MF(3)' NE 'COMPLETE').ZG30A                           00082200
&XMFSCK       SETC  'COMPLETE'  SET KEYWORD                             00082300
.*-------------------------------------------------------------------   00082400
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00082500
.ZG30A        AIF   (K'&XMFSCK GT 0).ZG30C      KEYWORD                 00082600
              AIF   (K'&MF(3) LE 0).ZG30B                               00082700
&ZMS          SETC  '"MF='      *KUKWA* MNOTE                           00082800
&ZMS          SETC  '&ZMS.&MF"'                                         00082900
&ZMS          SETC  '&ZMS ARGUMENT 3 IS AN UNKNOWN KEYWORD. '           00083000
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                 00083100
&ZMS          SETC  '&ZMS "COMPLETE".'          VALID KEYWORD           00083200
              MNOTE 8,' &ZMS '                                          00083300
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00083400
.ZG30B        ANOP  ,                                                   00083500
&XMFSCK       SETC  'COMPLETE'  SET DEFAULT KEYWORD                     00083600
.ZG30C        ANOP  ,                                                   00083700
&ZXMFSCK      SETC  'INPUT'     SET IN/OUTPUT                           00083800
.*------------------------------------------------------------------    00083900
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00084000
.ZG31         ANOP  ,                                                   00084100
&ZXMF         SETC  'INPUT'     SET IN/OUTPUT                           00084200
              AIF   (K'&XMF GT 0).ZG31E         VALID ARG               00084300
              AIF   (T'&MF EQ 'O').ZG31D        OMITTED                 00084400
&ZASYSLNDX    SETA  0                                                   00084500
.ZG31A        ANOP  ,           POSITIONAL MACRO KEY                    00084600
&ZASYSLNDX    SETA  &ZASYSLNDX+1                                        00084700
              AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG31C                    00084800
&ZTLC         SETC 'MF'                                                 00084900
              AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG31A           00085000
.ZG31B        ANOP  ,                                                   00085100
&ZXMF         SETC  ''          RESET IN/OUTPUT                         00085200
&ZMS          SETC  'THE "MF" KEY'              *KOPTA* MNOTE           00085300
&ZMS          SETC  '&ZMS MUST CONTAIN ONE'                             00085400
              MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                    00085500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00085600
              AGO   .ZG31E                                              00085700
.ZG31C        ANOP  ,                                                   00085800
&ZXMF         SETC  ''          RESET IN/OUTPUT                         00085900
&ZMS          SETC  '"MF='      *KUKWA* MNOTE                           00086000
&ZMS          SETC  '&ZMS.&MF"'                                         00086100
&ZMS          SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '           00086200
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                 00086300
&ZMS          SETC  '&ZMS "S",'                 VALID KEYWORD           00086400
&ZMS          SETC  '&ZMS "L",'                 VALID KEYWORD           00086500
&ZMS          SETC  '&ZMS OR "E".'              VALID KEYWORD           00086600
              MNOTE 8,' &ZMS '                                          00086700
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00086800
              AGO   .ZG31E                                              00086900
.ZG31D        ANOP  ,                                                   00087000
&XMF          SETC  'S'         SET DEFAULT KEYWORD                     00087100
&XMFSCK       SETC  'COMPLETE'  COMPLETE CHECKING                       00087200
.ZG31E        ANOP  ,                                                   00087300
.********************************************************************   00087400
.***AG.MF02  FULL MACRO SYNTAX CHECKING                                 00087500
.********************************************************************   00087600
              ACTR  10000                                               00087700
.*-------------------------------------------------------------------   00087800
.***AG.MF03 MF=(SLE)                                                    00087900
              AIF   ('&XMF' EQ 'L').ZGMFX                               00088000
.*----------------------------------------------------------------***   00088100
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00088200
              AIF   (N'&ETOKEN LE 1).ZG2A       CK NUM                  00088300
&ZMS          SETC  '"ETOKEN='  *KPOSA* MNOTE                           00088400
&ZMS          SETC  '&ZMS.&ETOKEN"'                                     00088500
&ZMS          SETC  '&ZMS "ETOKEN"'                                     00088600
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00088700
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00088800
.ZG2A         ANOP  ,                                                   00088900
.*-------------------------------------------------------------------   00089000
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00089100
&ZXETOKEN     SETC  'INPUT'     SET IN/OUTPUT                           00089200
&XETOKEN      SETC  '&ETOKEN(1)'                SET XVARIABLE           00089300
              AIF   (N'&ETOKEN GT 1).ZG2B       MULTI PARMS             00089400
&XETOKEN      SETC  '&ETOKEN'   SET XVARIABLE                           00089500
.ZG2B         AIF   (K'&ETOKEN(1) GT 0).ZG2C                            00089600
&ZXETOKEN     SETC  ''          RESET IN/OUTPUT                         00089700
&ZMS          SETC  ' '         *KRQDA*                                 00089800
&ZMS          SETC  '&ZMS "ETOKEN" KEY AND ITS ARGUMENT'                00089900
              MNOTE 8,' &ZMS ARE REQUIRED.'                             00090000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00090100
.ZG2C         ANOP  ,                                                   00090200
.*-------------------------------------------------------------------   00090300
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00090400
              AIF   (K'&ZXETOKEN LE 0).ZG2R     NOT I/O                 00090500
              AIF   ('&XETOKEN'(1,1) NE '(').ZG2R                       00090600
&ZCGPR        SETC  '&XETOKEN'(2,K'&XETOKEN-2)                          00090700
              AIF   ('&ZCGPR'(1,1) NE '0').ZG2P                         00090800
              AIF   (K'&ZCGPR GT 2).ZG2Q                                00090900
              AIF   ('&ZCGPR' EQ '0').ZG2Q                              00091000
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00091100
              AIF   (T'&ZCGPR NE 'N').ZG2Q      INVALID REG NAME        00091200
.ZG2P         ANOP  ,                                                   00091300
              AIF   (T'&ZCGPR NE 'N').ZG2R      NON NUMERIC             00091400
              AIF   ('&ZCGPR' LT '2').ZG2Q                              00091500
              AIF   ('&ZCGPR' LE '12').ZG2R                             00091600
.ZG2Q         ANOP  ,                                                   00091700
&ZMS          SETC  '"ETOKEN='  *KGPRA* MNOTE                           00091800
&ZMS          SETC  '&ZMS.&ETOKEN"'                                     00091900
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00092000
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00092100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00092200
.ZG2R         ANOP  ,                                                   00092300
.*----------------------------------------------------------------***   00092400
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00092500
              AIF   (N'&RETCODE LE 1).ZG5A      CK NUM                  00092600
&ZMS          SETC  '"RETCODE='                 *KPOSA* MNOTE           00092700
&ZMS          SETC  '&ZMS.&RETCODE"'                                    00092800
&ZMS          SETC  '&ZMS "RETCODE"'                                    00092900
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00093000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00093100
.ZG5A         ANOP  ,                                                   00093200
.*-------------------------------------------------------------------   00093300
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00093400
              AIF   (K'&RETCODE(1) LE 0).ZG5C   NO PARM                 00093500
&ZXRETCODE    SETC  'OUTPUT'    SET OUTPUT                              00093600
&XRETCODE     SETC  '&RETCODE(1)'               SET XVARIABLE           00093700
              AIF   (N'&RETCODE GT 1).ZG5C                              00093800
&XRETCODE     SETC  '&RETCODE'  SET XVARIABLE                           00093900
.ZG5C         ANOP  ,                                                   00094000
.*-------------------------------------------------------------------   00094100
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00094200
              AIF   (K'&ZXRETCODE LE 0).ZG5R    NOT I/O                 00094300
              AIF   ('&XRETCODE'(1,1) NE '(').ZG5R                      00094400
&ZCGPR        SETC  '&XRETCODE'(2,K'&XRETCODE-2)                        00094500
              AIF   ('&ZCGPR'(1,1) NE '0').ZG5P                         00094600
              AIF   (K'&ZCGPR GT 2).ZG5Q                                00094700
              AIF   ('&ZCGPR' EQ '0').ZG5Q                              00094800
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00094900
              AIF   (T'&ZCGPR NE 'N').ZG5Q      INVALID REG NAME        00095000
.ZG5P         ANOP  ,                                                   00095100
              AIF   (T'&ZCGPR NE 'N').ZG5R      NON NUMERIC             00095200
              AIF   ('&ZCGPR' LT '2').ZG5Q                              00095300
              AIF   ('&ZCGPR' LE '12').ZG5R                             00095400
.ZG5Q         ANOP  ,                                                   00095500
&ZMS          SETC  '"RETCODE='                 *KGPRA* MNOTE           00095600
&ZMS          SETC  '&ZMS.&RETCODE"'                                    00095700
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00095800
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00095900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00096000
.ZG5R         ANOP  ,                                                   00096100
.*----------------------------------------------------------------***   00096200
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00096300
              AIF   (N'&RSNCODE LE 1).ZG8A      CK NUM                  00096400
&ZMS          SETC  '"RSNCODE='                 *KPOSA* MNOTE           00096500
&ZMS          SETC  '&ZMS.&RSNCODE"'                                    00096600
&ZMS          SETC  '&ZMS "RSNCODE"'                                    00096700
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00096800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00096900
.ZG8A         ANOP  ,                                                   00097000
.*-------------------------------------------------------------------   00097100
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00097200
              AIF   (K'&RSNCODE(1) LE 0).ZG8C   NO PARM                 00097300
&ZXRSNCODE    SETC  'OUTPUT'    SET OUTPUT                              00097400
&XRSNCODE     SETC  '&RSNCODE(1)'               SET XVARIABLE           00097500
              AIF   (N'&RSNCODE GT 1).ZG8C                              00097600
&XRSNCODE     SETC  '&RSNCODE'  SET XVARIABLE                           00097700
.ZG8C         ANOP  ,                                                   00097800
.*-------------------------------------------------------------------   00097900
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00098000
              AIF   (K'&ZXRSNCODE LE 0).ZG8R    NOT I/O                 00098100
              AIF   ('&XRSNCODE'(1,1) NE '(').ZG8R                      00098200
&ZCGPR        SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                        00098300
              AIF   ('&ZCGPR'(1,1) NE '0').ZG8P                         00098400
              AIF   (K'&ZCGPR GT 2).ZG8Q                                00098500
              AIF   ('&ZCGPR' EQ '0').ZG8Q                              00098600
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00098700
              AIF   (T'&ZCGPR NE 'N').ZG8Q      INVALID REG NAME        00098800
.ZG8P         ANOP  ,                                                   00098900
              AIF   (T'&ZCGPR NE 'N').ZG8R      NON NUMERIC             00099000
              AIF   ('&ZCGPR' LT '2').ZG8Q                              00099100
              AIF   ('&ZCGPR' LE '12').ZG8R                             00099200
.ZG8Q         ANOP  ,                                                   00099300
&ZMS          SETC  '"RSNCODE='                 *KGPRA* MNOTE           00099400
&ZMS          SETC  '&ZMS.&RSNCODE"'                                    00099500
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00099600
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00099700
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00099800
.ZG8R         ANOP  ,                                                   00099900
.******************************************************************     00100000
.***AH.P00 CHECK STANDALONE POSITIONAL VARIABLES                        00100100
.******************************************************************     00100200
              ACTR  10000                                               00100300
.*----------------------------------------------------------------***   00100400
.***AH.P02 EXTRA POSITIONALS                                            00100500
              AIF   (N'&SYSLIST LE 0).ZGLISTX   NO EXTRAS               00100600
              AIF   (N'&SYSLIST NE 2).ZGLISTX1  NOT NULL                00100700
              AIF   ('&SYSLIST(1)' NE '').ZGLISTX1  NOT NULL            00100800
              AIF   ('&SYSLIST(2)' EQ '').ZGLISTX  NOT NULL             00100900
.ZGLISTX1     ANOP  ,                                                   00101000
&ZCVAL        SETC  ''          ERROR FIELD                             00101100
&ZAWRK        SETA  0           POSITIONAL NUMBER                       00101200
.ZGLIST2      ANOP  ,                                                   00101300
&ZAWRK        SETA  &ZAWRK+1    NEXT POSITIONAL                         00101400
              AIF   (&ZAWRK GT N'&SYSLIST).ZGLIST3  DONE                00101500
&ZCVAL        SETC '&ZCVAL,&SYSLIST(&ZAWRK)'    EXTRA                   00101600
              AGO   .ZGLIST2                                            00101700
.*                                                                      00101800
.ZGLIST3      ANOP  ,                                                   00101900
&ZCVAL        SETC '&ZCVAL'(2,K'&ZCVAL-1)       STRIP COMMA             00102000
&ZMS          SETC  'POSITIONAL ARGUMENT(S),'   *PPOSA* MNOTE           00102100
&ZMS          SETC  '&ZMS "&ZCVAL"'                                     00102200
&ZMS          SETC  '&ZMS CANNOT BE USED.'                              00102300
&ZMS          SETC  '&ZMS NO POSITIONAL ARGUMENTS'                      00102400
              MNOTE 8,' &ZMS ARE ALLOWED.'                              00102500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00102600
.ZGLISTX      ANOP  ,                                                   00102700
&ZASYSLNDX    SETA  0                                                   00102800
.*-------------------------------------------------------------------   00102900
.***AG.MF04 MF=(SLE)                                                    00103000
.ZGMFX        ANOP  ,           END OF FULL SYNTAX CHECK                00103100
.*******************************************************************    00103200
.***AE.ZMR01 NO CODE GENERATED IF ERRORS DETECTED                       00103300
.*******************************************************************    00103400
              AIF   (&ZMACRET NE 0).ZLX2        ERROR DETECTED          00103500
.*******************************************************************    00103600
.***AE.01  START OF IWMELEAV MACRO CODE                                 00103700
.*******************************************************************    00103800
              LCLC  &M0M0001                 NAME                       00103900
&M0M0001      SETC  '&XLABEL'                SET NAME                   00104000
              AIF   (K'&XLABEL NE 0).XLAB2                              00104100
&M0M0001      SETC  'M00M&SYSNDX'            DEFAULT NAME               00104200
.*                                                                      00104300
.XLAB2        ANOP  ,                                                   00104400
&M0M0001 DS    0H                             IWMELEAV-0                00104500
.*******************************************************************    00104600
.***AE.PR01 PRINT CONTROLS, DEFAULT IS YES                              00104700
.*******************************************************************    00104800
              PUSH  PRINT                                               00104900
              AIF   ('&ZPRINT' NE 'NO').ZPRINTX  TURN PRINT ON          00105000
              PRINT OFF         ++ PR01                                 00105100
              AGO   .ZPRNTXX                                            00105200
.ZPRINTX      PRINT ON                                                  00105300
.ZPRNTXX      ANOP  ,                                                   00105400
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00105500
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00105600
.********************************************************************   00105700
.***AL.L01 INTERNAL ARRAY TO PRODUCE FORMATTED CODE                     00105800
.********************************************************************   00105900
                      LCLA  &ZOPN          LIST INSTRUCTION INDEX       00106000
                      LCLA  &ZOPN1         INVOCATION INDEX             00106100
                      LCLC  &ZOPL(4095)    LABEL                        00106200
                      LCLC  &ZOPO(4095)    OPERATION                    00106300
                      LCLC  &ZOPV(4095)    VALUE                        00106400
                      LCLC  &ZOPD(4095)    DESCRIPTION                  00106500
.*                                                                      00106600
&ZOPN                 SETA  0              INITIAL INST INDEX VALUE     00106700
.******************************************************************     00106800
.***AL.L10 IWMELEAV FMT=LIST MF=S|L PARAMETERS                          00106900
.******************************************************************     00107000
                      AIF   ('&XMF' EQ 'L').ZLMFSL2                     00107100
                      AIF   ('&XMF' NE 'S').ZLMFSLX                     00107200
&XMFCTRL              SETC  '#Z'.'&SYSNDX'(1,4).'A'                     00107300
&XMFATTR              SETC  '0D'                                        00107400
.*                                                                      00107500
&ZOPN                 SETA  &ZOPN+1                                     00107600
&ZOPL(&ZOPN)          SETC  ' '                                         00107700
&ZOPO(&ZOPN)          SETC  'B'                                         00107800
&ZOPV(&ZOPN)          SETC  '&XMFCTRL.S'                                00107900
&ZOPD(&ZOPN)          SETC  '++ IWMELEAV ARG PARMS'                     00108000
.*                                                                      00108100
&ZOPN                 SETA  &ZOPN+1                                     00108200
&ZOPL(&ZOPN)          SETC  ' '                                         00108300
&ZOPO(&ZOPN)          SETC  'SPACE'                                     00108400
&ZOPV(&ZOPN)          SETC  '1'                                         00108500
&ZOPD(&ZOPN)          SETC  ' '                                         00108600
.*                                                                      00108700
.ZLMFSL2              ANOP  ,                                           00108800
.*-------------------------------------------------------------------   00108900
.***AM.L01  IWMELEAV FMT=LIST PARAMETERS                                00109000
&ZOPN                 SETA &ZOPN+1                                      00109100
&ZOPL(&ZOPN)          SETC '&XMFCTRL'                                   00109200
&ZOPO(&ZOPN)          SETC 'DS'                                         00109300
&ZOPV(&ZOPN)          SETC '&XMFATTR'                                   00109400
&ZOPD(&ZOPN)          SETC '++ IWMELEAV PARM LIST'                      00109500
.*-------------------------------------------------------------------   00109600
.***AM.L02 XVERSION XL1                                                 00109700
&ZOPN                 SETA &ZOPN+1                                      00109800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XVERSION'                         00109900
&ZOPO(&ZOPN)          SETC 'DS'                                         00110000
&ZOPV(&ZOPN)          SETC 'XL1'                                        00110100
&ZOPD(&ZOPN)          SETC '++ INPUT XVERSION'                          00110200
.*-------------------------------------------------------------------   00110300
.***AM.L09  XRSV001 CL1                                                 00110400
&ZOPN                 SETA &ZOPN+1                                      00110500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV001'                          00110600
&ZOPO(&ZOPN)          SETC 'DS'                                         00110700
&ZOPV(&ZOPN)          SETC 'CL1'                                        00110800
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV001'                       00110900
.*-------------------------------------------------------------------   00111000
.***AM.L09  XPLISTLEN XL2                                               00111100
&ZOPN                 SETA &ZOPN+1                                      00111200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XPLISTLEN'                        00111300
&ZOPO(&ZOPN)          SETC 'DS'                                         00111400
&ZOPV(&ZOPN)          SETC 'XL2'                                        00111500
&ZOPD(&ZOPN)          SETC '++ INPUT  XPLISTLEN'                        00111600
.*-------------------------------------------------------------------   00111700
.***AM.L09  XETOKEN CL8                                                 00111800
&ZOPN                 SETA &ZOPN+1                                      00111900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XETOKEN'                          00112000
&ZOPO(&ZOPN)          SETC 'DS'                                         00112100
&ZOPV(&ZOPN)          SETC 'CL8'                                        00112200
&ZOPD(&ZOPN)          SETC '++ &ZXETOKEN  XETOKEN'                      00112300
.*-------------------------------------------------------------------   00112400
.***AM.L10 END OF IWMELEAV LIST PARAMETERS                              00112500
&ZOPN                 SETA &ZOPN+1                                      00112600
&ZOPL(&ZOPN)          SETC '&XMFCTRL.L'                                 00112700
&ZOPO(&ZOPN)          SETC 'EQU'                                        00112800
&ZOPV(&ZOPN)          SETC '*-&XMFCTRL'                                 00112900
&ZOPD(&ZOPN)          SETC '++ LENGTH OF PLIST'                         00113000
.*                                                                      00113100
&ZOPN                 SETA &ZOPN+1                                      00113200
&ZOPL(&ZOPN)          SETC ' '                                          00113300
&ZOPO(&ZOPN)          SETC 'SPACE'                                      00113400
&ZOPV(&ZOPN)          SETC '1'                                          00113500
&ZOPD(&ZOPN)          SETC ' '                                          00113600
.*-------------------------------------------------------------------   00113700
.***AL.L12 IWMELEAV FMT=LIST MF=S|L PARAMETERS                          00113800
                      AIF   ('&XMF' EQ 'L').ZMFLX  DONE IF MF=L         00113900
.*                                                                      00114000
&ZOPN                 SETA  &ZOPN+1                                     00114100
&ZOPL(&ZOPN)          SETC  '&XMFCTRL.S'                                00114200
&ZOPO(&ZOPN)          SETC  'DC'                                        00114300
&ZOPV(&ZOPN)          SETC  '0H''0'''                                   00114400
&ZOPD(&ZOPN)          SETC  '++ IWMELEAV ARG PARMS'                     00114500
.*                                                                      00114600
.ZLMFSLX              ANOP  ,                                           00114700
.*-------------------------------------------------------------------   00114800
.***AL.L13 SET ZPLLEN TO ITS APPROPRIATE VALUE                          00114900
&ZPLLEN               SETA 12                                           00115000
.*                                                                      00115100
.******************************************************************     00115200
.***AI.L01 IWMELEAV FMT=LIST FILL IN PARAMETER AREA                     00115300
.******************************************************************     00115400
                      ACTR  10000                                       00115500
&ZCVAL                SETC  'LA'           ASSUME XA MODE               00115600
                      AIF   ('&SYSASCE' EQ 'P').ZIMFXA  SYSSTATE PRI    00115700
&ZCVAL                SETC  'LAE'          XAX MODE                     00115800
.ZIMFXA               ANOP ,                                            00115900
.*                                                                      00116000
                      AIF   ('&XMFCTRL'(1,1) NE '(').ZIMFN2  NOT GPR    00116100
&ZCGPR                SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)  GET GPR         00116200
                      AIF   ('&ZCGPR' EQ 'GPR1').ZIMFNX                 00116300
                      AIF   ('&ZCGPR' EQ 'GPR01').ZIMFNX                00116400
                      AIF   ('&ZCGPR' EQ 'REG1').ZIMFNX                 00116500
                      AIF   ('&ZCGPR' EQ 'REG01').ZIMFNX                00116600
                      AIF   ('&ZCGPR' EQ 'R1').ZIMFNX                   00116700
                      AIF   ('&ZCGPR' EQ '1').ZIMFNX                    00116800
                      AIF   ('&ZCGPR' EQ '01').ZIMFNX                   00116900
&ZOPN                 SETA  &ZOPN+1                                     00117000
&ZOPL(&ZOPN)          SETC  ' '                                         00117100
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00117200
&ZOPV(&ZOPN)          SETC  '1,0(,&ZCGPR)'                              00117300
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00117400
                      AGO   .ZIMFNX                                     00117500
.*                                                                      00117600
.ZIMFN2               ANOP ,                                            00117700
&ZOPN                 SETA  &ZOPN+1                                     00117800
&ZOPL(&ZOPN)          SETC  ' '                                         00117900
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00118000
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL'                                00118100
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00118200
.ZIMFNX               ANOP ,                                            00118300
.********************************************************************   00118400
.***AI.L02 IWMELEAV FMT=LIST INITIALIZE PARAMETER AREA                  00118500
.********************************************************************   00118600
.***AI.L03 MF=(SLE)                                                     00118700
                      AIF   ('&XMF' EQ 'L').ZIMFLX                      00118800
.*                                                                      00118900
&ZOPN                 SETA  &ZOPN+1                                     00119000
&ZOPL(&ZOPN)          SETC  ' '                                         00119100
&ZOPO(&ZOPN)          SETC  'XC'                                        00119200
&ZOPV(&ZOPN)          SETC  '0(&ZPLLEN,1),0(1)'                         00119300
&ZOPD(&ZOPN)          SETC  '++ INITIALIZE'                             00119400
.ZIMFLX               ANOP  ,                                           00119500
.*-------------------------------------------------------------------   00119600
.***AI.L04 XPLISTLEN XL2                                                00119700
&ZOPN                 SETA  &ZOPN+1                                     00119800
&ZOPL(&ZOPN)          SETC  ' '                                         00119900
&ZOPO(&ZOPN)          SETC  'MVC'                                       00120000
&ZOPV(&ZOPN)          SETC  '2(2,1),=AL2(&ZPLLEN)'                      00120100
&ZOPD(&ZOPN)          SETC  '++ INPUT XPLISTLEN XL2'                    00120200
.*-------------------------------------------------------------------   00120300
.***AI.L25  XETOKEN CL8                                                 00120400
                      AIF   ('&ZXETOKEN' EQ '').ZI4E                    00120500
                      AIF   ('&ZXETOKEN' EQ 'OUTPUT').ZI4E              00120600
&ZCGPR                SETC  '&XETOKEN'                                  00120700
.*                                                                      00120800
                      AIF   ('&XETOKEN'(1,1) NE '(').ZI4B               00120900
&ZCGPR   SETC  '0('.'&XETOKEN'(2,K'&XETOKEN-2).')'                      00121000
.ZI4B                 ANOP  ,                                           00121100
.*                                                                      00121200
&ZOPN                 SETA  &ZOPN+1                                     00121300
&ZOPL(&ZOPN)          SETC  ' '                                         00121400
&ZOPO(&ZOPN)          SETC  'MVC'                                       00121500
&ZOPV(&ZOPN)          SETC  '4(8,1),&ZCGPR'                             00121600
&ZOPD(&ZOPN)          SETC  '++ &ZXETOKEN XETOKEN'                      00121700
.*                                                                      00121800
.ZI4E                 ANOP  ,                                           00121900
.*-------------------------------------------------------------------   00122000
&ZOPN1                SETA &ZOPN                                        00122100
.*******************************************************************    00122200
.***  PROCESS IWMELEAV OUTPUT PARAMETERS                                00122300
.*******************************************************************    00122400
                      ACTR  10000                                       00122500
.*******************************************************************    00122600
.***AO.X02  RETURN CODE PROCESSING                                      00122700
.*******************************************************************    00122800
                      AIF   (N'&RETCODE LE 0).ZMRETX                    00122900
                      AIF   ('&XRETCODE'(1,1) EQ '(').ZMRET2            00123000
                      AIF   ('&XRETCODE' EQ 'GPR15').ZMRETX             00123100
                      AIF   ('&XRETCODE' EQ 'REG15').ZMRETX             00123200
                      AIF   ('&XRETCODE' EQ 'R15').ZMRETX               00123300
                      AIF   ('&XRETCODE' EQ '15').ZMRETX                00123400
&ZOPN                 SETA  &ZOPN+1                                     00123500
&ZOPL(&ZOPN)          SETC  ' '                                         00123600
&ZOPO(&ZOPN)          SETC  'ST'                                        00123700
&ZOPV(&ZOPN)          SETC  '15,&XRETCODE'                              00123800
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00123900
                      AGO   .ZMRETX                                     00124000
.*                                                                      00124100
.ZMRET2               ANOP  ,                                           00124200
&ZCGPR                SETC  '&XRETCODE'(2,K'&XRETCODE-2)                00124300
                      AIF   ('&ZCGPR' EQ 'GPR15').ZMRETX                00124400
                      AIF   ('&ZCGPR' EQ 'REG15').ZMRETX                00124500
                      AIF   ('&ZCGPR' EQ 'R15').ZMRETX                  00124600
                      AIF   ('&ZCGPR' EQ '15').ZMRETX                   00124700
&ZOPN                 SETA  &ZOPN+1                                     00124800
&ZOPL(&ZOPN)          SETC  ' '                                         00124900
&ZOPO(&ZOPN)          SETC  'LR'                                        00125000
&ZOPV(&ZOPN)          SETC  '&ZCGPR,15'                                 00125100
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00125200
.ZMRETX               ANOP  ,                                           00125300
.*******************************************************************    00125400
.***AO.X03  REASON CODE PROCESSING                                      00125500
.*******************************************************************    00125600
                      AIF   (N'&RSNCODE LE 0).ZMRSNX                    00125700
                      AIF   ('&XRSNCODE'(1,1) EQ '(').ZMRSN2            00125800
                      AIF   ('&XRSNCODE' EQ 'GPR0').ZMRSNX              00125900
                      AIF   ('&XRSNCODE' EQ 'GPR00').ZMRSNX             00126000
                      AIF   ('&XRSNCODE' EQ 'REG0').ZMRSNX              00126100
                      AIF   ('&XRSNCODE' EQ 'REG00').ZMRSNX             00126200
                      AIF   ('&XRSNCODE' EQ 'R0').ZMRSNX                00126300
                      AIF   ('&XRSNCODE' EQ '0').ZMRSNX                 00126400
                      AIF   ('&XRSNCODE' EQ '00').ZMRSNX                00126500
&ZOPN                 SETA  &ZOPN+1                                     00126600
&ZOPL(&ZOPN)          SETC  ' '                                         00126700
&ZOPO(&ZOPN)          SETC  'ST'                                        00126800
&ZOPV(&ZOPN)          SETC  '0,&XRSNCODE'                               00126900
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00127000
                      AGO   .ZMRSNX                                     00127100
.*                                                                      00127200
.ZMRSN2               ANOP  ,                                           00127300
&ZCGPR                SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                00127400
                      AIF   ('&ZCGPR' EQ 'GPR0').ZMRSNX                 00127500
                      AIF   ('&ZCGPR' EQ 'GPR00').ZMRSNX                00127600
                      AIF   ('&ZCGPR' EQ 'REG0').ZMRSNX                 00127700
                      AIF   ('&ZCGPR' EQ 'REG00').ZMRSNX                00127800
                      AIF   ('&ZCGPR' EQ 'R0').ZMRSNX                   00127900
                      AIF   ('&ZCGPR' EQ '0').ZMRSNX                    00128000
                      AIF   ('&ZCGPR' EQ '00').ZMRSNX                   00128100
&ZOPN                 SETA  &ZOPN+1                                     00128200
&ZOPL(&ZOPN)          SETC  ' '                                         00128300
&ZOPO(&ZOPN)          SETC  'LR'                                        00128400
&ZOPV(&ZOPN)          SETC  '&ZCGPR,0'                                  00128500
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00128600
.ZMRSNX               ANOP  ,                                           00128700
.*******************************************************************    00128800
.***AO.X04  LABEL FOR MF=L PROCESSING                                   00128900
.*******************************************************************    00129000
.ZMFLX                ANOP  ,              MF=L PROCESSING              00129100
.*******************************************************************    00129200
.***AO.X05  FORMAT GENERATED INSTRUCTIONS                               00129300
.*******************************************************************    00129400
                      ACTR  10000                                       00129500
.*                                                                      00129600
                      LCLA  &ZLC           COLUMN POSITION              00129700
                      LCLA  &ZOPX          LIST TABLE INDEX             00129800
                      LCLC  &ZLL           LABEL                        00129900
                      LCLC  &ZLOP          OPERATION                    00130000
                      LCLC  &ZLV           VALUE                        00130100
                      LCLC  &ZLD           DESCRIPTION                  00130200
.*                                                                      00130300
&ZOPX                 SETA  1                                           00130400
.ZL2                  AIF   (&ZOPX GT &ZOPN1).ZLX  B IF DONE            00130500
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00130600
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00130700
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00130800
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00130900
                      AIF   (K'&ZLD LE 0).ZL5                           00131000
&ZLC                  SETA  35             COMMENT COLUMN               00131100
                      AIF   ('&ZLD'(1,1) NE '*').ZL3                    00131200
&ZLC                  SETA  33             COMMMENT COLUMN              00131300
.ZL3                  AIF   (K'&ZLV GE &ZLC-16-1).ZL4                   00131400
&ZLV                  SETC  '&ZLV'.' '                                  00131500
                      AGO   .ZL3                                        00131600
.*                                                                      00131700
.ZL4                  ANOP  ,                                           00131800
&ZLV                  SETC  '&ZLV'.' '                                  00131900
.ZL5                  ANOP  ,                                           00132000
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00132100
.*                                                                      00132200
&ZLL     &ZLOP &ZLV                                                     00132300
.*                                                                      00132400
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00132500
                      AGO   .ZL2           CONTINUE LOOPING             00132600
.*                                                                      00132700
.ZLX                  ANOP  ,                                           00132800
                      AIF   ('&XMF' EQ 'L').ZLINKX  MF=L                00132900
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00133000
     L     14,16(0,0)              GET CVT ADDRESS                      00133100
     L     14,772(14,0)            GET SFT ADDRESS                      00133200
     L     14,380(14,0)            GET LX FOR SERVICE ROUTINE           00133300
     LA    15,46                   GET EX FOR SERVICE ROUTINE           00133400
     OR    14,15                   GET PC NUMBER                        00133500
     PC    0(14)                                                        00133600
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00133700
.ZLINKX               ANOP  ,                                           00133800
.*******************************************************************    00133900
.***AP.X01  FORMAT GENERATED CODE                                       00134000
.ZL21                 AIF   (&ZOPX GT &ZOPN).ZLX1  B IF DONE            00134100
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00134200
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00134300
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00134400
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00134500
                      AIF   (K'&ZLD LE 0).ZL51                          00134600
&ZLC                  SETA  35             COMMENT COLUMN               00134700
                      AIF   ('&ZLD'(1,1) NE '*').ZL31                   00134800
&ZLC                  SETA  33             COMMENT COLUMN               00134900
.ZL31                 AIF   (K'&ZLV GE &ZLC-16-1).ZL41                  00135000
&ZLV                  SETC  '&ZLV'.' '                                  00135100
                      AGO   .ZL31                                       00135200
.*                                                                      00135300
.ZL41                 ANOP  ,                                           00135400
&ZLV                  SETC  '&ZLV'.' '                                  00135500
.ZL51                 ANOP  ,                                           00135600
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00135700
.*                                                                      00135800
&ZLL     &ZLOP &ZLV                                                     00135900
.*                                                                      00136000
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00136100
                      AGO   .ZL21          CONTINUE LOOPING             00136200
.*                                                                      00136300
.ZLX1                 ANOP  ,                                           00136400
.*******************************************************************    00136500
.***AP.X02  END OF IWMELEAV MACRO                                       00136600
&ZIWMELEAV            SETC  'YES'          SET IWMELEAV USED            00136700
         POP   PRINT                                                    00136800
*                                            IWMELEAV-0                 00136900
         SPACE 1                                                        00137000
.ZLX2                 ANOP  ,                                           00137100
         MEND                                                           00137200
**********************************************************************/ 00137300
*/*PB.OC01 INVOKE MACRO---------------------------------------------*/  00137400
*%IWMELEAV: MACRO KEYS(ETOKEN,RETCODE,RSNCODE,PLISTVER,MF);             00137500
*  ANS('?'||MACLABEL||' '||'IWMELEAP '||MACLIST||                       00137600
*         ' '||MACKEYS||';') COL(MACLMAR);                              00137700
*%END IWMELEAV;                                                         00137800
