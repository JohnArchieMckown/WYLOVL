*/**  Start of Specifications for BLSRXSSP ***************************/ 00050000
*/*                                                                  */ 00100000
*/* $MAC(BLSRXSSP) COMP(SC132) PROD(HBB7703): Symbol service parmlist*/ 00150000
*/*                                                                  */ 00200000
*/*                                                                  */ 00205600
*/* PROPRIETARY STATEMENT:                                           */ 00209800
*/*                                                                  */ 00214000
*/*   LICENSED MATERIALS - PROPERTY OF IBM                           */ 00214900
*/*   THIS MACRO IS "RESTRICTED MATERIALS OF IBM"                    */ 00215800
*/*   5647-A01 (C) COPYRIGHT IBM CORP. 1986, 2000                    */ 00216700
*/*                                                                  */ 00217600
*/* STATUS= HBB7703                                                  */ 00218500
*/*                                                                  */ 00219600
*/* External classification: PI                                      */ 00222400
*/* End of external classification:                                  */ 00225200
*/*                                                                  */ 00228000
*/* DESCRIPTIVE NAME: IPCS Symbol Service Parameter List             */ 00230800
*/*   ACRONYM:  BLSRXSSP                                             */ 00233600
*/*                                                                  */ 00236400
*/* MACRO NAME: BLSRXSSP                                             */ 00239200
*/* DSECT NAME: Selected by user of macro                            */ 00242000
*/* COMPONENT:  IPCS (SC132)                                         */ 00244800
*/* EYE-CATCHER: XSSP                                                */ 00247600
*/*     OFFSET:  0                                                   */ 00250400
*/*     LENGTH:  4                                                   */ 00253200
*/*                                                                  */ 00256000
*/* STORAGE ATTRIBUTES:                                              */ 00258800
*/*   SUBPOOL:  Any that may be altered by key 8 programs            */ 00261600
*/*   KEY:  8                                                        */ 00264400
*/*   RESIDENCY:  LOC(ANY,ANY)                                       */ 00267200
*/*   MAIN STORAGE:  No                                              */ 00270000
*/*   AUXILIARY STORAGE:  Yes                                        */ 00272800
*/*   VIRTUAL STORAGE:  No                                           */ 00275600
*/*   DATA SPACE: No                                                 */ 00278400
*/*                                                                  */ 00281200
*/* SIZE: 64 bytes                                                   */ 00284000
*/*                                                                  */ 00286800
*/* CREATED BY: Calling program in the IPCS host environment         */ 00289600
*/* POINTED TO BY: N/A                                               */ 00292400
*/* SERIALIZATION: None                                              */ 00295200
*/*                                                                  */ 00300000
*/* FUNCTION = This parameter list is used by IPCS exits to request  */ 00650000
*/*            services involving the Equate Symbol records.         */ 00700000
*/*                                                                  */ 00750000
*/*   OPERATION = Create a mapping for BLSRXSSP                      */ 00800000
*/*                                                                  */ 00850000
*/*    METHOD OF ACCESS:                                             */ 00900000
*/*                                                                  */ 00950000
*/*     PLS = The macro can expand in a LIST or SUBLIST format.      */ 01000000
*/*                                                                  */ 01050000
*/*       Set macro variable EHBENDCHAR to comma or semicolon.       */ 01100000
*/*       Defaults to semicolon for LIST form and must be set        */ 01150000
*/*       for the SUBLIST form.  For example:                        */ 01200000
*/*                                                                  */ 01250000
*/*         %DCL EHBENDCHAR EXTERNAL CHAR                            */ 01300000
*/*         %EHBENDCHAR=','                                          */ 01350000
*/*                                                                  */ 01400000
*/*                                                                  */ 01450000
*/*      LIST FORM    = ?BLSRXSSP MF(LIST,PREFIX,STORCLASS)          */ 01500000
*/*                                                                  */ 01550000
*/*      SUBLIST FORM = ?BLSRXSSP MF(SUBLIST,PREFIX,STORCLASS,LEVEL) */ 01600000
*/*                                                                  */ 01650000
*/*        MF                                                        */ 01700000
*/*       PARM  Meaning                                              */ 01750000
*/*       ----  ---------------------------------------------------  */ 01800000
*/*                                                                  */ 01850000
*/*        1    LIST or L for LIST form                              */ 01900000
*/*             SUBLIST or S for SUBLIST form                        */ 01950000
*/*                                                                  */ 02000000
*/*        2    PREFIX is from 1 to 4 alpha-numeric starting with    */ 02050000
*/*             an alpha character. e.g. 'XSSP'                      */ 02100000
*/*                                                                  */ 02150000
*/*        3    STORAGE CLASS and initialization attribute           */ 02200000
*/*             COMPLETE keyword will cause initial values to        */ 02250000
*/*             be generated.  Default storage class with COMPLETE   */ 02300000
*/*             is STATIC LOCAL.  Can specify BASED, DEFINED ...     */ 02350000
*/*                                                                  */ 02400000
*/*        4    Structure level number to start with.  This can      */ 02450000
*/*             only be specified on the SUBLIST form.               */ 02500000
*/*                                                                  */ 02550000
*/*    ASM = The assembler format takes the form                     */ 02600000
*/*                                                                  */ 02650000
*/*          LABEL  BLSRXSSP DSECT=YES                               */ 02700000
*/*                               NO                                 */ 02750000
*/*                                                                  */ 02800000
*/*          The LABEL is used as the prefix for all the             */ 02850000
*/*          field names.  The label cannot exceed 4 characters.     */ 02900000
*/*          For example code 'XSSP   BLSRXSSP DSECT=YES'            */ 02950000
*/*                                                                  */ 03000000
*/*          DSECT=YES will cause a DSECT to be generated.           */ 03050000
*/*                    The initial values will be ignored.           */ 03100000
*/*                                                                  */ 03150000
*/*          DSECT=NO  will cause a set of initialized DCs           */ 03200000
*/*                    to be generated.                              */ 03250000
*/*                                                                  */ 03300000
*/* NOTES =                                                          */ 03350000
*/*   DEPENDENCIES = This macro requires external macro variables    */ 03400000
*/*                  be declared in one of the two following ways:   */ 03450000
*/*                                                                  */ 03500000
*/*                  1. Use the BLSRPROC macro to generate the       */ 03550000
*/*                     PROC statement and macro declares.           */ 03600000
*/*                                                                  */ 03650000
*/*                  2. Use the BLSRMAC0 macro to generate only      */ 03700000
*/*                     the declares.                                */ 03750000
*/*                                                                  */ 03800000
*/* ================================================================ */ 03850000
*/*                                                                  */ 04025000
*/* CHANGE ACTIVITY =                                                */ 04050000
*/*                                                                  */ 04100000
*/*   Products =                                                     */ 04150000
*/* $L0= IPCSENH,HBB3310,86101,PDG7: Symbol service support          */ 04200000
*/* $L1= IPCSENH,HBB3310,86101,PDG7: Same as L0, copied code         */ 04250000
*/*    = IPCSENH,JBB4430,90243,PDE4: Add stacking function           */ 04255500
*/*                                                                  */ 04261000
*/* ---------------------------------------------------------------- */ 04266500
*/*                                                                  */ 04272000
*/*   Hardware =                                                     */ 04277500
*/* $H1= 64BIT,HBB7703,90090,PDE1: 64-bit addressing                 */ 04283000
*/*                                                                  */ 04288500
*/* ---------------------------------------------------------------- */ 04294000
*/*                                                                  */ 04300000
*/*   Design changes = none                                          */ 04311100
*/*                                                                  */ 04314800
*/* ---------------------------------------------------------------- */ 04318500
*/*                                                                  */ 04322200
*/*   PTMs =                                                         */ 04333300
*/* $P1= PC40529,HBB3310,86346,PDG7: Macro needs to be bilingual     */ 04351800
*/* $P2= PC41785,HBB3310,87327,PDE1: Define correct constants for    */ 04370300
*/*      assembly-language function codes                            */ 04388800
*/* $P3= PXD0208,HBB7703,99193,PDE1: Fix continuation error          */ 04394400
*/*                                                                  */ 04400000
*/* ---------------------------------------------------------------- */ 04416600
*/*                                                                  */ 04433200
*/*   Maintenance = none                                             */ 04450000
*/*                                                                  */ 04500000
*/** End of Specifications for BLSRXSSP ******************************* 04550000
         MACRO                                                          04600000
&P       BLSRXSSP &DSECT=YES                                       @L1P 04650000
         GBLB    &EXSSP           Blurb produced once in assembly  @L1P 04700000
         IEZBITS ,                Define symbolic bits             @L1P 04750000
         AIF   ('&DSECT' EQ 'NO').L010 No DSECT statement          @L1P 04800000
&P       DSECT ,                  IPCS symbol service parameter list    04850000
         AGO   .L020              Define structure of record       @L1P 04900000
.L010    ANOP  ,                  No DSECT statement               @L1P 04950000
         DS    0D                 Align on doubleword boundary     @L1P 05000000
&P       DS    0CL64              IPCS symbol service parameter list   *05033300
                                                                   @L1P 05066600
.L020    ANOP  ,                  Define structure of record       @L1P 05100000
&P.000   DS    0C                 Begin BLSRXSSP               #MD99193 05150000
         AIF   (&EXSSP).L030      One blurb is enough              @L1P 05200000
&EXSSP   SETB  1                  Blurb produced once in assembly  @L1P 05250000
*-----------------------------------------------------------------      05300000
* A symbol service (XSSP) parameter list contains fields pointing       05350000
* to an Equate Symbol record and a buffer address in which to place     05400000
* data.  The type of service requested is identified in field XSSPCODE. 05450000
*-----------------------------------------------------------------      05500000
.L030    ANOP  ,                  Blurb produced once in assembly  @L1P 05550000
&P.ID    DS    0CL5               Symbol service parameter identifier  *05581800
                                                                   @L1P 05613600
&P.IDC   DC    CL4'XSSP'          XSSP acronym                     @L1C 05645400
&P.IDL   DC    CL1'1'             XSSP level indicator             @L1P 05677200
&P.PFLG  DS    0BL3               Processing flags                 @L1C 05709000
&P.PFL1  DC    BL1'0'             First byte of flags              @L1C 05740800
&P.NOMS  EQU   BIT0               No error or diagnostic messages to   *05772600
                                  be issued                        @L1C 05804400
&P.DCS   EQU   BIT1               Data characteristics have been       *05836200
                                  supplied                         @L1C 05868000
&P.BIT64 EQU   BIT2               BLSRESSY structures should be        *05878600
                                  returned in ABITS(64) format     @P3C 05889300
         DC    BL2'0'             Reserved                         @L1P 05900000
&P.MODN  DC    CL8'        '      Name of module requesting the        *05950000
                                  service                          @L1P 06000000
&P.ESR   DC    A(0)               Address of Equate Symbol record      *06029400
                                  being processed                  @L1C 06058800
&P.BUF   DC    A(0)               Pointer to user buffer to contain    *06088200
                                  accessed storage                 @L1C 06117600
         DC    A(0)               Reserved pointer                      06147000
&P.CODE  DC    Y(0)               Function code bytes                   06176400
&P.EQU   EQU   1,2,C'Y'           Store Equate Symbol record       @P2C 06205800
&P.GET   EQU   2,2,C'Y'           Get Equate Symbol record for symbol  *06235200
                                  passed                           @P2C 06264600
&P.ACC   EQU   3,2,C'Y'           Access storage described by Equate   *06294000
                                  Symbol record                    @P2C 06323400
&P.ACCN  EQU   4,2,C'Y'           Resolve symbol definition and access *06343000
                                  storage                          @P2C 06362600
&P.VAL   EQU   5,2,C'Y'           Validity check storage           @P2C 06382200
&P.ACTV  EQU   6,2,C'Y'           Check for active task            @P2C 06411600
&P.ACCV  EQU   7,2,C'Y'           Validity check and access stg.   @P2C 06426300
&P.RV2   DC    XL34'00'           Reserved                         @L1P 06441000
&P.999   DS    0C                 End BLSRXSSP                 #MD99193 06470500
         MEND  ,                  End assembler macro BLSRXSSP       */ 06500000
*                                                                       06525000
*%BLSRXSSP:                         /* Symbol service parm list  @L1P*/ 06550000
*   MACRO KEYS(MF);                 /*                           @L1P*/ 06600000
*                                                                       06625000
*/*------------------------------------------------------------------*/ 06650000
*/* Define Macro-Variables                                           */ 06700000
*/*------------------------------------------------------------------*/ 06750000
*                                                                       06800000
*   DECLARE                         /* External macro variables      */ 06850000
*     ELSRXSSP CHARACTER EXTERNAL,  /* BLSRXSSP global data      @L1P*/ 06900000
*     EHBENDCHAR CHARACTER EXTERNAL, /* Final punctuation        @L1P*/ 06950000
*     EHBBLRPENDESS CHARACTER EXTERNAL, /* Deferred macro requests      07000000
*                                                                @L1P*/ 07050000
*     EHBLVL1  CHARACTER EXTERNAL,  /* First level number        @L1P*/ 07100000
*     EHBLVL2  CHARACTER EXTERNAL,  /* Second level number       @L1P*/ 07150000
*     EHBLVL3  CHARACTER EXTERNAL,  /* Third level number        @L1P*/ 07200000
*     EHBLVL4  CHARACTER EXTERNAL,  /* Fourth level number       @L1P*/ 07250000
*     EHBMF1   CHARACTER EXTERNAL,  /* Macro form                @L1P*/ 07300000
*     EHBMF2   CHARACTER EXTERNAL,  /* Prefix characters         @L1P*/ 07350000
*     EHBMF3   CHARACTER EXTERNAL,  /* Scope/storage class       @L1P*/ 07400000
*     EHBMF3A  CHARACTER EXTERNAL,  /* Complete initialization flag     07450000
*                                                                @L1P*/ 07500000
*     BLSRENDDECLARE CHARACTER EXTERNAL, /* Deferred declarations       07550000
*                                                                @L1P*/ 07600000
*     EHBCOL1  FIXED EXTERNAL,      /* First indentation column  @L1P*/ 07650000
*     EHBCOL2  FIXED EXTERNAL,      /* Second indentation column @L1P*/ 07700000
*     EHBCOL3  FIXED EXTERNAL,      /* Third indentation column  @L1P*/ 07750000
*     EHBCOL4  FIXED EXTERNAL,      /* Fourth indentation column @L1P*/ 07800000
*     EHBCSECT CHARACTER EXTERNAL,  /* CSECT name                @L1P*/ 07850000
*     EHBRC    FIXED EXTERNAL;      /* Macro return code         @L1P*/ 07900000
*   DEACTIVATE ELSRXSSP,BLSRENDDECLARE; /* Prevent accidents     @L1P*/ 07950000
*   DECLARE                         /* Internal macro variables      */ 08000000
*     CENDCHAR CHARACTER INTERNAL,  /* Final punctuation         @L1P*/ 08050000
*     CLVL2    CHARACTER INTERNAL,  /* Second level number       @L1P*/ 08100000
*     CLVL3    CHARACTER INTERNAL,  /* Third level number        @L1P*/ 08150000
*     CLVL4    CHARACTER INTERNAL,  /* Fourth level number       @L1P*/ 08200000
*     CMF1     CHARACTER INTERNAL,  /* Macro form                @L1P*/ 08250000
*     CMF2     CHARACTER INTERNAL,  /* Prefix characters         @L1P*/ 08300000
*     CMF3A    CHARACTER INTERNAL,  /* Complete initialization flag     08350000
*                                                                @L1P*/ 08400000
*     CQCOMPLETE CHARACTER INTERNAL, /* Literal                  @L1P*/ 08450000
*     CQINITIAL CHARACTER INTERNAL, /* Literal                   @L1P*/ 08500000
*     FCOL2    FIXED INTERNAL,      /* Second indentation column @L1P*/ 08550000
*     FCOL3    FIXED INTERNAL,      /* Third indentation column  @L1P*/ 08600000
*     FCOL4    FIXED INTERNAL,      /* Fourth indentation column @L1P*/ 08650000
*     FRC      FIXED INTERNAL,      /* Macro return code         @L1P*/ 08700000
*     F1       FIXED INTERNAL;      /* Utility variable          @L1P*/ 08750000
*   DEACTIVATE CENDCHAR,CLVL2,CLVL3,CLVL4,CMF1,CMF2,CMF3A,CQCOMPLETE,   08800000
*       CQINITIAL,FCOL2,FCOL3,FCOL4,FRC,F1; /* Prevent accidents @L1P*/ 08850000
*   CQINITIAL = ' INITIAL(';        /* Literal                   @L1P*/ 08900000
*   CQCOMPLETE = 'COMPLETE';        /* Literal                   @L1P*/ 08950000
*   ANSWER('?'||MACLABEL||'BLRMF('||MF||') FORMS(L,S);'); /*     @L1P*/ 09000000
*   CENDCHAR = EHBENDCHAR;          /* Final punctuation         @L1P*/ 09050000
*   EHBENDCHAR = ',';               /* Final punctuation         @L1P*/ 09100000
*   CLVL2 = EHBLVL2;                /* Second level number       @L1P*/ 09150000
*   CLVL3 = EHBLVL3;                /* Third level number        @L1P*/ 09200000
*   CLVL4 = EHBLVL4;                /* Fourth level number       @L1P*/ 09250000
*   CMF1 = EHBMF1;                  /* Macro form                @L1P*/ 09300000
*   CMF2 = EHBMF2;                  /* Prefix characters         @L1P*/ 09350000
*   CMF3A = EHBMF3A;                /* Complete initialization flag     09400000
*                                                                @L1P*/ 09450000
*   FCOL2 = EHBCOL2;                /* Second indentation column @L1P*/ 09500000
*   FCOL3 = EHBCOL3;                /* Third indentation column  @L1P*/ 09550000
*   FCOL4 = EHBCOL4;                /* Fourth indentation column @L1P*/ 09600000
*   FRC = EHBRC;                    /* Macro return code         @L1P*/ 09650000
*                                                                       09657600
*/*                                                                  */ 09665200
*/* ================================================================ */ 09672800
*/* Queue declaration of constants.  If this is a list form of       */ 09680400
*/* invocation, it is appropriate to declare them immediately.       */ 09688000
*/* If this is a sublist form, a declaration of a structure has      */ 09695600
*/* been partially completed, and the constants will need to be      */ 09703200
*/* declared later.                                                  */ 09710800
*/* ================================================================ */ 09718400
*/*                                                                  */ 09726000
*                                                                       09733600
*   BLSRENDDECLARE = BLSRENDDECLARE || CMF2 || /*                @H1C*/ 09741200
*       'XSSP CHAR(5) CONSTANT(''XSSP1''),' ||                          09750000
*       '/*XSSP identifier constant used to fill in XSSPID.*/' || CMF2  09800000
*       || 'EQU CONSTANT(1),/*Add or replace Equate Symbol record.*/'   09828500
*       || CMF2 ||                                                      09857000
*       'GET CONSTANT(2),/*Get Equate Symbol record for symbol passed*/'09885500
*       || CMF2 ||                                                      09914000
*       'ACC CONSTANT(3),/*Access storage described by symbol record*/' 09942500
*       || CMF2 ||                                                      09971000
*'ACCN CONSTANT(4),/*Resolve symbol definition and access storage*/' || 09999500
*       CMF2 || 'VAL CONSTANT(5),/*Validity check storage*/' || CMF2 || 10028000
*       'ACTV CONSTANT(6),/*Check for active task*/' || CMF2 ||         10056500
*       'ACCV CONSTANT(7),/*Validity check and access storage*/';       10085000
*                                                                       10113500
*/*                                                                  */ 10142000
*/* ================================================================ */ 10170500
*/* Declare the parameter list as a level 1 structure or as a        */ 10199000
*/* substructure of a larger structure.  If complete initialization  */ 10227500
*/* has been requested, supply initial values for all fields         */ 10256000
*/* declared.                                                        */ 10284500
*/* ================================================================ */ 10313000
*/*                                                                  */ 10341500
*                                                                       10370000
*   IF CMF1 = 'LIST' THEN           /* List form                 @L1P*/ 10400000
*     ANSWER('DECLARE/*BLSRXSSP #MD99193*/') COLUMN(5); /*       @H1C*/ 10450000
*   ANSWER(EHBLVL1||CMF2||' BOUNDARY(WORD)'||EHBMF3||',/*BLSRXSSP'||    10500000
*       MACLIST||' '||MACKEYS||'*/') COLUMN(EHBCOL1);                   10550000
*   IF CMF1 = 'LIST' THEN           /* List form                 @L1P*/ 10600000
*     IF INDEX(ELSRXSSP,',BLURB') = 0 THEN /* Produce blurb      @L1P*/ 10650000
*       DO;                         /* Multiple answers for comment  */ 10700000
*         ANSWER('/*'||REPEAT('-',65)||                                 10750000
*'*/ /* A symbol service (XSSP) parameter list contains fields '||      10800000
*'pointing  */ /* to an Equate Symbol record and a buffer address in'|| 10850000
*' which to      */ /* place data.  The type of service requested is'|| 10900000
*             ' identified in      */ /* field XSSPCODE.'||REPEAT(' ',  10950000
*             49)||'*/ /*'||REPEAT('-',65)||'*/') COLUMN(2); /*  @P1C*/ 11000000
*         ELSRXSSP = ELSRXSSP || ',BLURB'; /* Blurb produced         */ 11050000
*       END;                        /* Multiple answers for comment  */ 11100000
*   ANSWER(CLVL2||CMF2||'ID CHAR(5)') COLUMN(FCOL2); /*          @L1P*/ 11150000
*   IF CMF3A = CQCOMPLETE THEN      /*                           @L1P*/ 11200000
*     ANSWER(CQINITIAL||'''XSSP1'')');                                  11250000
*   ANSWER(',/*Symbol service parameter list identifier*/');            11300000
*   ANSWER(CLVL3||CMF2||'IDC CHARACTER(4),/*XSSP acronym*/') COLUMN(    11350000
*       FCOL3);                                                         11400000
*   ANSWER(CLVL3||CMF2||'IDL CHARACTER(1),/*XSSP level indicator*/')    11450000
*       COLUMN(FCOL3);                                                  11500000
*   ANSWER(CLVL2||CMF2||'PFLG BIT(24),/*Processing flags*/') COLUMN(    11550000
*       FCOL3);                     /*                           @L1P*/ 11600000
*   ANSWER(CLVL3||CMF2||'FL1 BIT(8)') COLUMN(FCOL3);                    11650000
*   IF CMF3A = CQCOMPLETE THEN      /* Initialization required?  @L1P*/ 11700000
*     ANSWER(CQINITIAL||'''00''X)'); /*                          @L1P*/ 11750000
*   ANSWER(',/*First flag byte*/'); /*                           @L1P*/ 11800000
*   ANSWER(CLVL4||CMF2||                                                11850000
*       'NOMS BIT(1),/*No error or diagnostic message to be issued*/')  11900000
*       COLUMN(FCOL4);              /*                           @L1P*/ 11950000
*   ANSWER(CLVL4||CMF2||                                                11970000
*       'DCS BIT(1),/*Data characteristics have been supplied*/')       11990000
*       COLUMN(FCOL4);              /*                           @L1P*/ 12010000
*   ANSWER(CLVL4||CMF2||'BIT64 BIT(1),/*BLSRESSY structures should be re12020000
*turned in ABITS(64) format*/') COLUMN(FCOL4); /*                @H1A*/ 12030000
*   ANSWER(CLVL4||'* BIT(5),/*Reserved*/') COLUMN(FCOL4); /*     @H1C*/ 12040000
*   ANSWER(CLVL3||'* BIT(16)') COLUMN(FCOL3);                           12050000
*   IF CMF3A = CQCOMPLETE THEN      /* Initialization required?  @L1P*/ 12100000
*     ANSWER(CQINITIAL||'''00''X)'); /*                          @L1P*/ 12150000
*   ANSWER(',/*Reserved*/');        /*                           @L1P*/ 12200000
*   ANSWER(CLVL2||CMF2||'MODN CHAR(8)') COLUMN(FCOL2); /*        @L1P*/ 12250000
*   IF CMF3A = CQCOMPLETE THEN      /*                           @L1P*/ 12300000
*     IF LENGTH(EHBCSECT) >= 8 THEN /* CSECT name defined by BLRPROC    12350000
*                                                                @L1P*/ 12400000
*       ANSWER(CQINITIAL||QUOTE(EHBCSECT(1:8))||')'); /*         @L1P*/ 12450000
*     ELSE                          /* No token specified        @L1P*/ 12500000
*       ANSWER(CQINITIAL||'''        '')'); /* Default is blanks @L1P*/ 12550000
*   ANSWER(',/*Name of module requesting the service*/'); /*     @L1P*/ 12600000
*   ANSWER(CLVL2||CMF2||'ESR POINTER(32)') COLUMN(FCOL2);               12650000
*   IF CMF3A = CQCOMPLETE THEN      /*                           @L1P*/ 12700000
*     ANSWER(CQINITIAL||'ZZZZNULL)'); /*                         @L1P*/ 12750000
*   ANSWER(',/*Address of Equate Symbol record being processed*/');     12800000
*   ANSWER(CLVL2||CMF2||'BUF POINTER(32)') COLUMN(FCOL2);               12850000
*   IF CMF3A = CQCOMPLETE THEN      /*                           @L1P*/ 12900000
*     ANSWER(CQINITIAL||'ZZZZNULL)'); /*                         @L1P*/ 12950000
*   ANSWER(',/*Pointer to user buffer to contain accessed storage*/');  13000000
*   ANSWER(CLVL2||'* POINTER(32)') COLUMN(FCOL2);                       13050000
*   IF CMF3A = CQCOMPLETE THEN      /*                           @L1P*/ 13100000
*     ANSWER(CQINITIAL||'ZZZZNULL)'); /*                         @L1P*/ 13150000
*   ANSWER(',/*Reserved*/');                                            13200000
*   ANSWER(CLVL2||CMF2||'CODE UNSIGNED BINARY(16)') COLUMN(FCOL3); /*   13250000
*                                                                @L1P*/ 13300000
*   IF CMF3A = CQCOMPLETE THEN      /* Initialization required?  @L1P*/ 13350000
*     ANSWER(CQINITIAL||'''00''X)'); /*                          @L1P*/ 13400000
*   ANSWER(',/*Function code bytes*/');                                 13450000
*   ANSWER(CLVL2||'* BIT(272)') COLUMN(FCOL2); /*                @L1P*/ 13500000
*   IF CMF3A = CQCOMPLETE THEN      /*                           @L1P*/ 13550000
*     ANSWER(CQINITIAL||'''00''X)'); /*                          @L1P*/ 13600000
*   ANSWER(',/*Reserved*/');        /*                           @L1P*/ 13650000
*   ANSWER(CLVL2||CMF2||'999 CHARACTER(0)'||CENDCHAR||                  13700000
*       '/*BLSRXSSP #MD99193*/') COLUMN(FCOL2); /*               @H1C*/ 13750000
*   IF CENDCHAR = ';' THEN          /*                           @L1P*/ 13800000
*     ANSWER('?BLSR002;');          /* Process deferred declarations    13850000
*                                                                @L1P*/ 13900000
*   ANSWER('?BLR003(BLSRXSSP,'||CHAR(EHBRC)||');'); /*           @L1P*/ 13950000
*   RETURN CODE(FRC);               /*                           @L1P*/ 14000000
*   %END BLSRXSSP;                                                      14050000
