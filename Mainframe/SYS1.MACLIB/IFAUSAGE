*%IFAUSAGE: MACRO KEYS(REQUEST,PRODOWNER,PRODNAME,PRODVERS,PRODQUAL,    00001100
*                 PRODID,DOMAIN,SCOPE,PRTOKEN,LINKAGE,ENDTIME,ENDDATA,  00002200
*                 BEGTIME,DATA,FORMAT,CURRENTDATA,RETCODE,MF);          00003300
*/**** START OF SPECIFICATIONS **************************************** 00004400
*                                                                     * 00005500
*                                                                     * 00006600
*01* MACRO NAME:  IFAUSAGE                              -93/11/02-<1> * 00007700
*                                                                     * 00008800
*                                                                     * 00009900
*01* DESCRIPTIVE NAME:  SMF Usage Data Collection Service             * 00011000
*                                                                     * 00012100
*01* PROPRIETARY STATEMENT:                                           * 00013200
*                                                                     * 00014300
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 00015400
*     THIS MACRO IS "RESTRICTED MATERIALS OF IBM"                     * 00016500
*     5685-001 (C) COPYRIGHT IBM CORP. 1989                           * 00017600
*     SEE COPYRIGHT INSTRUCTIONS                                      * 00018700
*                                                                     * 00019800
* STATUS= JBB3313                                                     * 00020900
*                                                                     * 00022000
*                                                                     * 00023100
*                                                                     * 00024200
*01* FUNCTION:                                                        * 00025300
*                                                                     * 00026400
*      Provide program access to the "SMF Usage Data Collection"      * 00027500
*      Service.                                                       * 00028600
*                                                                     * 00029700
*02*   OPERATION:                                                     * 00030800
*                                                                     * 00031900
*                                                                     * 00033000
*        This macro provides the product with program level access to * 00034100
*        the SMF Usage Data Collection Services.  The macro supports  * 00035200
*        the following requests:                                      * 00036300
*                                                                     * 00037400
*                                                                     * 00038500
*        REGISTER  Identify the Product to the Collection Services    * 00039600
*                  and specify the Domain and Scope values for the    * 00040700
*                  product.                                           * 00041800
*                                                                     * 00042900
*        DEREGISTER  Complete the collection of usage data for the    * 00044000
*                  specified product in the current domain and scope. * 00045100
*                                                                     * 00046200
*        FUNCTIONBEGIN  Begin the Collection of Usage Data for the    * 00047300
*                  product at the "function" level with in the        * 00048400
*                  current task.                                      * 00049500
*                                                                     * 00050600
*        FUNCTIONDATA  Provide Product-Specific Usage data to the     * 00051700
*                  collection service; this function is only needed   * 00052800
*                  if the product chooses not to use the default      * 00053900
*                  collection of CPU Time.                            * 00055000
*                                                                     * 00056100
*        FUNCTIONEND  End the collection of usage data for the        * 00057200
*                  product in the current task.                       * 00058300
*                                                                     * 00059400
*        STATUS    Returns an indication of the Installation and      * 00060500
*                  Active Status of the Usage Data Collection         * 00061600
*                  Services.                                          * 00062700
*                                                                     * 00063800
*                                                                     * 00064900
*                                                                     * 00066000
*        In all cases the macro will generate inline code which will  * 00067100
*        define and build an internal parameter list and invoke the   * 00068200
*        requested services using the specified linkage.              * 00069300
*                                                                     * 00070400
*        For all functions, the sucesss or failure of the request is  * 00071500
*        indicated to the invoker via a return code value that is     * 00072600
*        returned on the request.                                     * 00073700
*                                                                     * 00074800
*        Most of the requests only support a branch interface, which  * 00075900
*        means that the macro will generate a standard CALL statement * 00077000
*        of a based entry point as the means for transferring control * 00078100
*        to the service.  The REGISTER request also supports an SVC   * 00079200
*        interface which allows unauthorized callers to register      * 00080300
*        their product with the service.  The use of the unauthorized * 00081400
*        REGISTER interface is limited to TWO calls per DOMAIN total. * 00082500
*        The STATUS request also supports an SVC interface which      * 00083600
*        allows unauthorized callers to check the status of the       * 00084700
*        services.                                                    * 00085800
*                                                                     * 00086900
*01* EXTERNAL CLASSIFICATION:  GUPI                                   * 00088000
*                                                                     * 00089100
*01* END OF EXTERNAL CLASSIFICATION:                                  * 00090200
*                                                                     * 00091300
*01* ENVIRONMENT:                                                     * 00092400
*                                                                     * 00093500
*                                                                     * 00094600
*      Minimum authorization: Problem or Supervisor state.  Any PSW   * 00095700
*                        key.  LINKAGE=BRANCH Requires that the       * 00096800
*                        calling program must be Supervisor State.    * 00097900
*                                                                     * 00099000
*      Dispatchable unit mode: Task mode.                             * 00100100
*                                                                     * 00101200
*      Cross Memory Mode: PASN=HASN=SASN.                             * 00102300
*                                                                     * 00103400
*      AMODE:            31-bit.                                      * 00104500
*                                                                     * 00105600
*      ASC mode:                                                      * 00106700
*                                                                     * 00107800
*      Interrupt status: Enabled for I/O and external interrupts.     * 00108900
*                                                                     * 00110000
*      Locks:            No locks held.                               * 00111100
*                                                                     * 00112200
*      Control parameters: None.                                      * 00113300
*                                                                     * 00114400
*                                                                     * 00115500
*                                                                     * 00116600
*01* PROGRAMMING REQUIREMENTS:                                        * 00117700
*                                                                     * 00118800
*    None                                                             * 00119900
*                                                                     * 00121000
*01* RESTRICTIONS:                                                    * 00122100
*                                                                     * 00123200
*    None                                                             * 00124300
*                                                                     * 00125400
*01* INPUT REGISTER INFORMATION:                                      * 00126500
*                                                                     * 00127600
*    None                                                             * 00128700
*                                                                     * 00129800
*01* OUTPUT REGISTER INFORMATION:                                     * 00130900
*                                                                     * 00132000
*    None                                                             * 00133100
*                                                                     * 00134200
*01* PERFORMANCE IMPLICATIONS:                                        * 00135300
*                                                                     * 00136400
*    None.                                                            * 00137500
*                                                                     * 00138600
*01* INPUT REGISTERS:  GR0-GR12    Undefined                          * 00139700
*                      GR13        Address of a 72 byte savearea for  * 00140800
*                                  LINKAGE=BRANCH callers             * 00141900
*                      GR14-GR15   Undefined                          * 00143000
*                                                                     * 00144100
*01* OUTPUT REGISTERS: GR0-GR14    Unchanged                          * 00145200
*                      GR15        Return Code                        * 00146300
*                                                                     * 00147400
*01* SYNTAX:                                                          * 00148500
*                                                                     * 00149600
*[xlabel]  IFAUSAGE    REQUEST=REGISTER                              * 00150700
*                    |     ,PRODOWNER=xprodowner                      * 00151800
*                    |     ,PRODNAME=xprodname                        * 00152900
*                    |    [,PRODVERS=xprodvers|None]                * 00154000
*                    |    [,PRODQUAL=xprodqual|None]                * 00155100
*                    |    [,PRODID=xprodid|None]                    * 00156200
*                    |   [,DOMAIN=ADDRSP]                            * 00157300
*                    |   [,DOMAIN=TASK                               * 00158400
*                    |        [,SCOPE=ALL|FUNCTION]]                * 00159500
*                    |    [,PRTOKEN=xprtoken]                         * 00160600
*                    |    [,LINKAGE=SVC|BRANCH]                     * 00161700
*                     ,REQUEST=DEREGISTER                            * 00162800
*                    |    ,PRODOWNER=xprodowner                      * 00163900
*                    |   |     ,PRODNAME=xprodname                    * 00165000
*                    |   |    [,PRODVERS=xprodvers|None]            * 00166100
*                    |   |    [,PRODQUAL=xprodqual|None]            * 00167200
*                    |   |    [,PRODID=xprodid|None]                * 00168300
*                    |    ,PRTOKEN=xprtoken                          * 00169400
*                    |    [,ENDTIME=xendtime]                         * 00170500
*                    |    [,ENDDATA=xenddata]                         * 00171600
*                    |    [,LINKAGE=SVC|BRANCH]                     * 00172700
*                     ,REQUEST=FUNCTIONBEGIN                         * 00173800
*                    |    ,PRODOWNER=xprodowner                      * 00174900
*                    |   |     ,PRODNAME=xprodname                    * 00176000
*                    |   |    [,PRODVERS=xprodvers|None]            * 00177100
*                    |   |    [,PRODQUAL=xprodqual|None]            * 00178200
*                    |   |    [,PRODID=xprodid|None]                * 00179300
*                    |    ,PRTOKEN=xprtoken                          * 00180400
*                    |    [,BEGTIME=xbegtime]                         * 00181500
*                    |    [,LINKAGE=SVC|BRANCH]                     * 00182600
*                     ,REQUEST=FUNCTIONDATA                          * 00183700
*                    |    ,PRODOWNER=xprodowner                      * 00184800
*                    |   |     ,PRODNAME=xprodname                    * 00185900
*                    |   |    [,PRODVERS=xprodvers|None]            * 00187000
*                    |   |    [,PRODQUAL=xprodqual|None]            * 00188100
*                    |   |    [,PRODID=xprodid|None]                * 00189200
*                    |    ,PRTOKEN=xprtoken                          * 00190300
*                    |     ,DATA=xdata                                * 00191400
*                    |    [,FORMAT=CPUTIME|BINARY|FLOAT]            * 00192500
*                    |    [,CURRENTDATA=xcurrentdata]                 * 00193600
*                    |    [,LINKAGE=SVC|BRANCH]                     * 00194700
*                     ,REQUEST=FUNCTIONEND                           * 00195800
*                    |    ,PRODOWNER=xprodowner                      * 00196900
*                    |   |     ,PRODNAME=xprodname                    * 00198000
*                    |   |    [,PRODVERS=xprodvers|None]            * 00199100
*                    |   |    [,PRODQUAL=xprodqual|None]            * 00200200
*                    |   |    [,PRODID=xprodid|None]                * 00201300
*                    |    ,PRTOKEN=xprtoken                          * 00202400
*                    |    [,ENDTIME=xendtime]                         * 00203500
*                    |    [,ENDDATA=xenddata]                         * 00204600
*                    |    [,LINKAGE=SVC|BRANCH]                     * 00205700
*                     ,REQUEST=STATUS                                * 00206800
*                         [,LINKAGE=SVC|BRANCH]                     * 00207900
*                     [,RETCODE=xretcode]                             * 00209000
*                    [,MF=S]                                         * 00210100
*                    [,MF=(L,xmfctrl,xmfattr|0D)]                  * 00211200
*                    [,MF=(M,xmfctrl,COMPLETE|NOCHECK)]            * 00212300
*                    [,MF=(E,xmfctrl,COMPLETE|NOCHECK)]            * 00213400
*                                                                     * 00214500
*                                                                     * 00215600
*      Where:                                                         * 00216700
*                                                                     * 00217800
*                                                                     * 00218900
*      [xlabel]                                                       * 00220000
*          is an optional symbol, starting in column 1, that is the   * 00221100
*          name on the IFAUSAGE macro invocation.  The name must      * 00222200
*          conform to the rules for an ordinary assembler language    * 00223300
*          symbol.                                                    * 00224400
*          DEFAULT: No name.                                          * 00225500
*                                                                     * 00226600
*                                                                     * 00227700
*                                                                     * 00228800
*                                                                     * 00229900
*       REQUEST(REGISTER|DEREGISTER|FUNCTIONBEGIN|FUNCTIONDATA|FUNCT * 00231000
*          IONEND|STATUS)                                            * 00232100
*          is a required keyword input Specify the Service to be      * 00233200
*          invoked.                                                   * 00234300
*                                                                     * 00235400
*                                                                     * 00236500
*           REQUEST(REGISTER)                                         * 00237600
*              Request: Identify Product for Usage Data Collection    * 00238700
*              and provide the Domain and Scope options to be used.   * 00239800
*                                                                     * 00240900
*                                                                     * 00242000
*              PRODOWNER(xprodowner)                                  * 00243100
*                  is the name (RS-type) (or address in register      * 00244200
*                  (2)-(12) ASM only) of a required 16 character      * 00245300
*                  input containing the Product's Owner or Vendor     * 00246400
*                  Name for this request.                             * 00247500
*                                                                     * 00248600
*              PRODNAME(xprodname)                                    * 00249700
*                  is the name (RS-type) (or address in register      * 00250800
*                  (2)-(12) ASM only) of a required 16 character      * 00251900
*                  input field containing the Name of the product for * 00253000
*                  the request.                                       * 00254100
*                                                                     * 00255200
*                                                                     * 00256300
*                                                                     * 00257400
*                                                                     * 00258500
*              [PRODVERS(xprodvers|None)]                           * 00259600
*                  is the name (RS-type) (or address in register      * 00260700
*                  (2)-(12) ASM only) of an optional 8 character      * 00261800
*                  input field containing the Version of the product  * 00262900
*                  for the request.                                   * 00264000
*                  DEFAULT: None                                      * 00265100
*                                                                     * 00266200
*              [PRODQUAL(xprodqual|None)]                           * 00267300
*                  is the name (RS-type) (or address in register      * 00268400
*                  (2)-(12) ASM only) of an optional 8 character      * 00269500
*                  input field containing the Qualifier of the        * 00270600
*                  product for the request.                           * 00271700
*                  DEFAULT: None                                      * 00272800
*                                                                     * 00273900
*              [PRODID(xprodid|None)]                               * 00275000
*                  is the name (RS-type) (or address in register      * 00276100
*                  (2)-(12) ASM only) of an optional 8 character      * 00277200
*                  input field containing the ID of the Product (for  * 00278300
*                  example the 'PID' Number).                         * 00279400
*                  DEFAULT: None                                      * 00280500
*                                                                     * 00281600
*                                                                     * 00282700
*                                                                     * 00283800
*                                                                     * 00284900
*              [DOMAIN(ADDRSP|TASK)]                                * 00286000
*                  is an optional keyword input Specifies the level   * 00287100
*                  of data to be collected for this product.          * 00288200
*                  DEFAULT: ADDRSP                                    * 00289300
*                                                                     * 00290400
*                                                                     * 00291500
*                  [DOMAIN(ADDRSP)]                                   * 00292600
*                      Provide Data Collection at the Address Space   * 00293700
*                      Level                                          * 00294800
*                                                                     * 00295900
*                  [DOMAIN(TASK)                                      * 00297000
*                      Request Data Collection for the current task.  * 00298100
*                                                                     * 00299200
*                                                                     * 00300300
*                      [SCOPE(ALL|FUNCTION)]]                       * 00301400
*                          is an optional keyword input Define the    * 00302500
*                          level of data collection with in the task  * 00303600
*                          that is being requested.                   * 00304700
*                          DEFAULT: ALL                               * 00305800
*                                                                     * 00306900
*                                                                     * 00308000
*                          ALL       Requests that all the CPU Time   * 00309100
*                                    in the Task be associated with   * 00310200
*                                    the requesting product.          * 00311300
*                                                                     * 00312400
*                          FUNCTION   Requests that only the CPU time * 00313500
*                                    that is accumulated during the   * 00314600
*                                    invocation of the FUNCTION -     * 00315700
*                                    BEGIN and END requests be        * 00316800
*                                    associated with this product.    * 00317900
*                                    Additional invocations of the    * 00319000
*                                    IFAUSAGE macro for FUNCTION -    * 00320100
*                                    BEGIN and and requests is        * 00321200
*                                    expected.                        * 00322300
*                                                                     * 00323400
*                                                                     * 00324500
*                                                                     * 00325600
*                                                                     * 00326700
*                                                                     * 00327800
*                                                                     * 00328900
*                                                                     * 00330000
*                                                                     * 00331100
*                                                                     * 00332200
*                                                                     * 00333300
*              [PRTOKEN(xprtoken)]                                    * 00334400
*                  is the name (RS-type) (or address in register      * 00335500
*                  (2)-(12) ASM only) of an optional 8 character      * 00336600
*                  output variable to hold Usage "product" token that * 00337700
*                  can be used in subsequent service invocations.     * 00338800
*                  Use of this token will provide a shortened         * 00339900
*                  pathlength on those requests, but is not required. * 00341000
*                                                                     * 00342100
*                                                                     * 00343200
*                                                                     * 00344300
*                                                                     * 00345400
*              [LINKAGE(SVC|BRANCH)]                                * 00346500
*                  is an optional keyword input that specifies the    * 00347600
*                  level interface to the Data Collection Service     * 00348700
*                  that is to be generated.                           * 00349800
*                  DEFAULT: SVC                                       * 00350900
*                                                                     * 00352000
*                                                                     * 00353100
*                  SVC       Requests that an SVC-type invocation of  * 00354200
*                            the service be generated.                * 00355300
*                                                                     * 00356400
*                  BRANCH    Requests that a direct CALL be used to   * 00357500
*                            invoke the service.  LINKAGE=BRANCH      * 00358600
*                            callers must be Supervisor State.        * 00359700
*                                                                     * 00360800
*                                                                     * 00361900
*                                                                     * 00363000
*                                                                     * 00364100
*                                                                     * 00365200
*           REQUEST(DEREGISTER)                                       * 00366300
*              Request: End Data Collection for the Product in the    * 00367400
*              current Domain and Scope.                              * 00368500
*                                                                     * 00369600
*                                                                     * 00370700
*              The following is a set of mutually exclusive keys.     * 00371800
*              This set is required; only one key must be specified.  * 00372900
*                                                                     * 00374000
*                                                                     * 00375100
*              PRODOWNER(xprodowner)                                  * 00376200
*                  belongs to a set of mutually exclusive keys. It    * 00377300
*                  is the name (RS-type) (or address in register      * 00378400
*                  (2)-(12) ASM only) of a 16 character input         * 00379500
*                  containing the Product's Owner or Vendor Name for  * 00380600
*                  this request.                                      * 00381700
*                  PRODOWNER can not be specified if PRTOKEN is       * 00382800
*                  specified.                                         * 00383900
*                                                                     * 00385000
*                                                                     * 00386100
*                  PRODNAME(xprodname)                                * 00387200
*                      is the name (RS-type) (or address in register  * 00388300
*                      (2)-(12) ASM only) of a required 16 character  * 00389400
*                      input field containing the Name of the product * 00390500
*                      for the request.                               * 00391600
*                      PRODNAME must be specified if PRODOWNER is     * 00392700
*                      specified.                                     * 00393800
*                                                                     * 00394900
*                                                                     * 00396000
*                                                                     * 00397100
*                                                                     * 00398200
*                  [PRODVERS(xprodvers|None)]                       * 00399300
*                      is the name (RS-type) (or address in register  * 00400400
*                      (2)-(12) ASM only) of an optional 8 character  * 00401500
*                      input field containing the Version of the      * 00402600
*                      product for the request.                       * 00403700
*                      PRODVERS can only be specified if PRODOWNER is * 00404800
*                      specified.                                     * 00405900
*                      DEFAULT: None                                  * 00407000
*                                                                     * 00408100
*                  [PRODQUAL(xprodqual|None)]                       * 00409200
*                      is the name (RS-type) (or address in register  * 00410300
*                      (2)-(12) ASM only) of an optional 8 character  * 00411400
*                      input field containing the Qualifier of the    * 00412500
*                      product for the request.                       * 00413600
*                      PRODQUAL can only be specified if PRODOWNER is * 00414700
*                      specified.                                     * 00415800
*                      DEFAULT: None                                  * 00416900
*                                                                     * 00418000
*                  [PRODID(xprodid|None)]                           * 00419100
*                      is the name (RS-type) (or address in register  * 00420200
*                      (2)-(12) ASM only) of an optional 8 character  * 00421300
*                      input field containing the ID of the Product   * 00422400
*                      (for example the 'PID' Number).                * 00423500
*                      PRODID can only be specified if PRODOWNER is   * 00424600
*                      specified.                                     * 00425700
*                      DEFAULT: None                                  * 00426800
*                                                                     * 00427900
*                                                                     * 00429000
*                                                                     * 00430100
*              PRTOKEN(xprtoken)                                      * 00431200
*                  belongs to a set of mutually exclusive keys. It    * 00432300
*                  is the name (RS-type) (or address in register      * 00433400
*                  (2)-(12) ASM only) of an 8 character input Name of * 00434500
*                  "Product" Token returned on the associated         * 00435600
*                  REGISTER request.                                  * 00436700
*                  PRTOKEN can not be specified if PRODOWNER is       * 00437800
*                  specified.                                         * 00438900
*                                                                     * 00440000
*                                                                     * 00441100
*                                                                     * 00442200
*              End of a set of mutually exclusive required keys.      * 00443300
*                                                                     * 00444400
*                                                                     * 00445500
*                                                                     * 00446600
*              [ENDTIME(xendtime)]                                    * 00447700
*                  is the name (RS-type) (or address in register      * 00448800
*                  (2)-(12) ASM only) of an optional 8 character      * 00449900
*                  output variable where ending TCB time level will   * 00451000
*                  be returned to the invoker.                        * 00452100
*                                                                     * 00453200
*              [ENDDATA(xenddata)]                                    * 00454300
*                  is the name (RS-type) (or address in register      * 00455400
*                  (2)-(12) ASM only) of an optional 8 character      * 00456500
*                  output variable where ending product specific data * 00457600
*                  will be returned to the invoker.                   * 00458700
*                                                                     * 00459800
*                                                                     * 00460900
*                                                                     * 00462000
*                                                                     * 00463100
*              [LINKAGE(SVC|BRANCH)]                                * 00464200
*                  is an optional keyword input that specifies the    * 00465300
*                  level interface to the Data Collection Service     * 00466400
*                  that is to be generated.                           * 00467500
*                  DEFAULT: SVC                                       * 00468600
*                                                                     * 00469700
*                                                                     * 00470800
*                  SVC       Requests that an SVC-type invocation of  * 00471900
*                            the service be generated.                * 00473000
*                                                                     * 00474100
*                  BRANCH    Requests that a direct CALL be used to   * 00475200
*                            invoke the service.  LINKAGE=BRANCH      * 00476300
*                            callers must be Supervisor State.        * 00477400
*                                                                     * 00478500
*                                                                     * 00479600
*                                                                     * 00480700
*                                                                     * 00481800
*                                                                     * 00482900
*           REQUEST(FUNCTIONBEGIN)                                    * 00484000
*              Request: Start Collecting Function-level Data for the  * 00485100
*              Product in the current Domain and Scope.               * 00486200
*                                                                     * 00487300
*                                                                     * 00488400
*              The following is a set of mutually exclusive keys.     * 00489500
*              This set is required; only one key must be specified.  * 00490600
*                                                                     * 00491700
*                                                                     * 00492800
*              PRODOWNER(xprodowner)                                  * 00493900
*                  belongs to a set of mutually exclusive keys. It    * 00495000
*                  is the name (RS-type) (or address in register      * 00496100
*                  (2)-(12) ASM only) of a 16 character input         * 00497200
*                  containing the Product's Owner or Vendor Name for  * 00498300
*                  this request.                                      * 00499400
*                  PRODOWNER can not be specified if PRTOKEN is       * 00500500
*                  specified.                                         * 00501600
*                                                                     * 00502700
*                                                                     * 00503800
*                  PRODNAME(xprodname)                                * 00504900
*                      is the name (RS-type) (or address in register  * 00506000
*                      (2)-(12) ASM only) of a required 16 character  * 00507100
*                      input field containing the Name of the product * 00508200
*                      for the request.                               * 00509300
*                      PRODNAME must be specified if PRODOWNER is     * 00510400
*                      specified.                                     * 00511500
*                                                                     * 00512600
*                                                                     * 00513700
*                                                                     * 00514800
*                                                                     * 00515900
*                  [PRODVERS(xprodvers|None)]                       * 00517000
*                      is the name (RS-type) (or address in register  * 00518100
*                      (2)-(12) ASM only) of an optional 8 character  * 00519200
*                      input field containing the Version of the      * 00520300
*                      product for the request.  the product.         * 00521400
*                      PRODVERS can only be specified if PRODOWNER is * 00522500
*                      specified.                                     * 00523600
*                      DEFAULT: None                                  * 00524700
*                                                                     * 00525800
*                  [PRODQUAL(xprodqual|None)]                       * 00526900
*                      is the name (RS-type) (or address in register  * 00528000
*                      (2)-(12) ASM only) of an optional 8 character  * 00529100
*                      input field containing the Qualifier of the    * 00530200
*                      product for the request.                       * 00531300
*                      PRODQUAL can only be specified if PRODOWNER is * 00532400
*                      specified.                                     * 00533500
*                      DEFAULT: None                                  * 00534600
*                                                                     * 00535700
*                  [PRODID(xprodid|None)]                           * 00536800
*                      is the name (RS-type) (or address in register  * 00537900
*                      (2)-(12) ASM only) of an optional 8 character  * 00539000
*                      input field containing the ID of the Product   * 00540100
*                      (for example the 'PID' Number).                * 00541200
*                      PRODID can only be specified if PRODOWNER is   * 00542300
*                      specified.                                     * 00543400
*                      DEFAULT: None                                  * 00544500
*                                                                     * 00545600
*                                                                     * 00546700
*                                                                     * 00547800
*              PRTOKEN(xprtoken)                                      * 00548900
*                  belongs to a set of mutually exclusive keys. It    * 00550000
*                  is the name (RS-type) (or address in register      * 00551100
*                  (2)-(12) ASM only) of an 8 character input Name of * 00552200
*                  "Product" Token returned on the associated         * 00553300
*                  REGISTER request.                                  * 00554400
*                  PRTOKEN can not be specified if PRODOWNER is       * 00555500
*                  specified.                                         * 00556600
*                                                                     * 00557700
*                                                                     * 00558800
*                                                                     * 00559900
*              End of a set of mutually exclusive required keys.      * 00561000
*                                                                     * 00562100
*                                                                     * 00563200
*                                                                     * 00564300
*              [BEGTIME(xbegtime)]                                    * 00565400
*                  is the name (RS-type) (or address in register      * 00566500
*                  (2)-(12) ASM only) of an optional 8 character      * 00567600
*                  output variable where beginning CPU time level     * 00568700
*                  will be returned.                                  * 00569800
*                                                                     * 00570900
*                                                                     * 00572000
*                                                                     * 00573100
*                                                                     * 00574200
*              [LINKAGE(SVC|BRANCH)]                                * 00575300
*                  is an optional keyword input that specifies the    * 00576400
*                  level interface to the Data Collection Service     * 00577500
*                  that is to be generated.                           * 00578600
*                  DEFAULT: SVC                                       * 00579700
*                                                                     * 00580800
*                                                                     * 00581900
*                  SVC       Requests that an SVC-type invocation of  * 00583000
*                            the service be generated.                * 00584100
*                                                                     * 00585200
*                  BRANCH    Requests that a direct CALL be used to   * 00586300
*                            invoke the service.  LINKAGE=BRANCH      * 00587400
*                            callers must be Supervisor State.        * 00588500
*                                                                     * 00589600
*                                                                     * 00590700
*                                                                     * 00591800
*                                                                     * 00592900
*                                                                     * 00594000
*           REQUEST(FUNCTIONDATA)                                     * 00595100
*              Request: Provide Product-Specific Usage Data for the   * 00596200
*              Product in the current Domain and Scope.               * 00597300
*                                                                     * 00598400
*                                                                     * 00599500
*              The following is a set of mutually exclusive keys.     * 00600600
*              This set is required; only one key must be specified.  * 00601700
*                                                                     * 00602800
*                                                                     * 00603900
*              PRODOWNER(xprodowner)                                  * 00605000
*                  belongs to a set of mutually exclusive keys. It    * 00606100
*                  is the name (RS-type) (or address in register      * 00607200
*                  (2)-(12) ASM only) of a 16 character input         * 00608300
*                  containing the Product's Owner or Vendor Name for  * 00609400
*                  this request.                                      * 00610500
*                  PRODOWNER can not be specified if PRTOKEN is       * 00611600
*                  specified.                                         * 00612700
*                                                                     * 00613800
*                                                                     * 00614900
*                  PRODNAME(xprodname)                                * 00616000
*                      is the name (RS-type) (or address in register  * 00617100
*                      (2)-(12) ASM only) of a required 16 character  * 00618200
*                      input field containing the Name of the product * 00619300
*                      for the request.                               * 00620400
*                      PRODNAME must be specified if PRODOWNER is     * 00621500
*                      specified.                                     * 00622600
*                                                                     * 00623700
*                                                                     * 00624800
*                                                                     * 00625900
*                                                                     * 00627000
*                  [PRODVERS(xprodvers|None)]                       * 00628100
*                      is the name (RS-type) (or address in register  * 00629200
*                      (2)-(12) ASM only) of an optional 8 character  * 00630300
*                      input field containing the Version of the      * 00631400
*                      product for the request.                       * 00632500
*                      PRODVERS can only be specified if PRODOWNER is * 00633600
*                      specified.                                     * 00634700
*                      DEFAULT: None                                  * 00635800
*                                                                     * 00636900
*                  [PRODQUAL(xprodqual|None)]                       * 00638000
*                      is the name (RS-type) (or address in register  * 00639100
*                      (2)-(12) ASM only) of an optional 8 character  * 00640200
*                      input field containing the Qualifier of the    * 00641300
*                      product for the request.                       * 00642400
*                      PRODQUAL can only be specified if PRODOWNER is * 00643500
*                      specified.                                     * 00644600
*                      DEFAULT: None                                  * 00645700
*                                                                     * 00646800
*                  [PRODID(xprodid|None)]                           * 00647900
*                      is the name (RS-type) (or address in register  * 00649000
*                      (2)-(12) ASM only) of an optional 8 character  * 00650100
*                      input field containing the ID of the Product   * 00651200
*                      (for example the 'PID' Number).                * 00652300
*                      PRODID can only be specified if PRODOWNER is   * 00653400
*                      specified.                                     * 00654500
*                      DEFAULT: None                                  * 00655600
*                                                                     * 00656700
*                                                                     * 00657800
*                                                                     * 00658900
*              PRTOKEN(xprtoken)                                      * 00660000
*                  belongs to a set of mutually exclusive keys. It    * 00661100
*                  is the name (RS-type) (or address in register      * 00662200
*                  (2)-(12) ASM only) of an 8 character input Name of * 00663300
*                  "Product" Token returned on the associated         * 00664400
*                  REGISTER request.                                  * 00665500
*                  PRTOKEN can not be specified if PRODOWNER is       * 00666600
*                  specified.                                         * 00667700
*                                                                     * 00668800
*                                                                     * 00669900
*                                                                     * 00671000
*              End of a set of mutually exclusive required keys.      * 00672100
*                                                                     * 00673200
*                                                                     * 00674300
*                                                                     * 00675400
*              DATA(xdata)                                            * 00676500
*                  is the name (RS-type) (or address in register      * 00677600
*                  (2)-(12) ASM only) of a required 8 character input * 00678700
*                  variable containing resource data to be            * 00679800
*                  accumulated.  Fixed-type data should be right      * 00680900
*                  justified and padded with hex 0's.                 * 00682000
*                                                                     * 00683100
*                                                                     * 00684200
*                                                                     * 00685300
*                                                                     * 00686400
*              [FORMAT(CPUTIME|BINARY|FLOAT)]                       * 00687500
*                  is an optional keyword input Datatype of value in  * 00688600
*                  DATA parameter.                                    * 00689700
*                  DEFAULT: CPUTIME                                   * 00690800
*                                                                     * 00691900
*                                                                     * 00693000
*                  CPUTIME   The value in the DATA option is a CPU    * 00694100
*                            Time, in STCK format                     * 00695200
*                                                                     * 00696300
*                  BINARY    The value in the DATA option is in       * 00697400
*                            64-bit binary format.                    * 00698500
*                                                                     * 00699600
*                  FLOAT     The value in the DATA option is in long  * 00700700
*                            floating point hex format,               * 00701800
*                                                                     * 00702900
*                                                                     * 00704000
*                                                                     * 00705100
*                                                                     * 00706200
*                                                                     * 00707300
*                                                                     * 00708400
*              [CURRENTDATA(xcurrentdata)]                            * 00709500
*                  is the name (RS-type) (or address in register      * 00710600
*                  (2)-(12) ASM only) of an optional 8 character      * 00711700
*                  output variable where current resource level will  * 00712800
*                  be returned to the invoker (after adding the input * 00713900
*                  value).                                            * 00715000
*                                                                     * 00716100
*                                                                     * 00717200
*                                                                     * 00718300
*                                                                     * 00719400
*              [LINKAGE(SVC|BRANCH)]                                * 00720500
*                  is an optional keyword input that specifies the    * 00721600
*                  level interface to the Data Collection Service     * 00722700
*                  that is to be generated.                           * 00723800
*                  DEFAULT: SVC                                       * 00724900
*                                                                     * 00726000
*                                                                     * 00727100
*                  SVC       Requests that an SVC-type invocation of  * 00728200
*                            the service be generated.                * 00729300
*                                                                     * 00730400
*                  BRANCH    Requests that a direct CALL be used to   * 00731500
*                            invoke the service.  LINKAGE=BRANCH      * 00732600
*                            callers must be Supervisor State.        * 00733700
*                                                                     * 00734800
*                                                                     * 00735900
*                                                                     * 00737000
*                                                                     * 00738100
*                                                                     * 00739200
*           REQUEST(FUNCTIONEND)                                      * 00740300
*              Request: End Collecting Function-level Data for the    * 00741400
*              Product in the current Domain and Scope.               * 00742500
*                                                                     * 00743600
*                                                                     * 00744700
*              The following is a set of mutually exclusive keys.     * 00745800
*              This set is required; only one key must be specified.  * 00746900
*                                                                     * 00748000
*                                                                     * 00749100
*              PRODOWNER(xprodowner)                                  * 00750200
*                  belongs to a set of mutually exclusive keys. It    * 00751300
*                  is the name (RS-type) (or address in register      * 00752400
*                  (2)-(12) ASM only) of a 16 character input         * 00753500
*                  containing the Product's Owner or Vendor Name for  * 00754600
*                  this request.                                      * 00755700
*                  PRODOWNER can not be specified if PRTOKEN is       * 00756800
*                  specified.                                         * 00757900
*                                                                     * 00759000
*                                                                     * 00760100
*                  PRODNAME(xprodname)                                * 00761200
*                      is the name (RS-type) (or address in register  * 00762300
*                      (2)-(12) ASM only) of a required 16 character  * 00763400
*                      input field containing the Name of the product * 00764500
*                      for the request.                               * 00765600
*                      PRODNAME must be specified if PRODOWNER is     * 00766700
*                      specified.                                     * 00767800
*                                                                     * 00768900
*                                                                     * 00770000
*                                                                     * 00771100
*                                                                     * 00772200
*                  [PRODVERS(xprodvers|None)]                       * 00773300
*                      is the name (RS-type) (or address in register  * 00774400
*                      (2)-(12) ASM only) of an optional 8 character  * 00775500
*                      input field containing the Version of the      * 00776600
*                      product for the request.                       * 00777700
*                      PRODVERS can only be specified if PRODOWNER is * 00778800
*                      specified.                                     * 00779900
*                      DEFAULT: None                                  * 00781000
*                                                                     * 00782100
*                  [PRODQUAL(xprodqual|None)]                       * 00783200
*                      is the name (RS-type) (or address in register  * 00784300
*                      (2)-(12) ASM only) of an optional 8 character  * 00785400
*                      input field containing the Qualifier of the    * 00786500
*                      product for the request.                       * 00787600
*                      PRODQUAL can only be specified if PRODOWNER is * 00788700
*                      specified.                                     * 00789800
*                      DEFAULT: None                                  * 00790900
*                                                                     * 00792000
*                  [PRODID(xprodid|None)]                           * 00793100
*                      is the name (RS-type) (or address in register  * 00794200
*                      (2)-(12) ASM only) of an optional 8 character  * 00795300
*                      input field containing the ID of the Product   * 00796400
*                      (for example the 'PID' Number).                * 00797500
*                      PRODID can only be specified if PRODOWNER is   * 00798600
*                      specified.                                     * 00799700
*                      DEFAULT: None                                  * 00800800
*                                                                     * 00801900
*                                                                     * 00803000
*                                                                     * 00804100
*              PRTOKEN(xprtoken)                                      * 00805200
*                  belongs to a set of mutually exclusive keys. It    * 00806300
*                  is the name (RS-type) (or address in register      * 00807400
*                  (2)-(12) ASM only) of an 8 character input Name of * 00808500
*                  "Product" Token returned on the associated         * 00809600
*                  REGISTER request.                                  * 00810700
*                  PRTOKEN can not be specified if PRODOWNER is       * 00811800
*                  specified.                                         * 00812900
*                                                                     * 00814000
*                                                                     * 00815100
*                                                                     * 00816200
*              End of a set of mutually exclusive required keys.      * 00817300
*                                                                     * 00818400
*                                                                     * 00819500
*                                                                     * 00820600
*              [ENDTIME(xendtime)]                                    * 00821700
*                  is the name (RS-type) (or address in register      * 00822800
*                  (2)-(12) ASM only) of an optional 8 character      * 00823900
*                  output variable where ending TCB time level will   * 00825000
*                  be returned to the invoker.                        * 00826100
*                                                                     * 00827200
*              [ENDDATA(xenddata)]                                    * 00828300
*                  is the name (RS-type) (or address in register      * 00829400
*                  (2)-(12) ASM only) of an optional 8 character      * 00830500
*                  output variable where ending resource level will   * 00831600
*                  be returned to the invoker.                        * 00832700
*                                                                     * 00833800
*                                                                     * 00834900
*                                                                     * 00836000
*                                                                     * 00837100
*              [LINKAGE(SVC|BRANCH)]                                * 00838200
*                  is an optional keyword input that specifies the    * 00839300
*                  level interface to the Data Collection Service     * 00840400
*                  that is to be generated.                           * 00841500
*                  DEFAULT: SVC                                       * 00842600
*                                                                     * 00843700
*                                                                     * 00844800
*                  SVC       Requests that an SVC-type invocation of  * 00845900
*                            the service be generated.                * 00847000
*                                                                     * 00848100
*                  BRANCH    Requests that a direct CALL be used to   * 00849200
*                            invoke the service.  LINKAGE=BRANCH      * 00850300
*                            callers must be Supervisor State.        * 00851400
*                                                                     * 00852500
*                                                                     * 00853600
*                                                                     * 00854700
*                                                                     * 00855800
*                                                                     * 00856900
*           REQUEST(STATUS)                                           * 00858000
*              Request: Generate code which will check the status     * 00859100
*              (Available and Active) of the Usage Data Collection    * 00860200
*              Service and the installation recording request for the * 00861300
*              Sytem-Wide Usage Data Record (Type 89); the status is  * 00862400
*              returned via a return code.  The return code value     * 00863500
*              will be in Register 15 (if RETCODE is not specified)   * 00864600
*              or the variable specified by the RETCODE option.  See  * 00865700
*              the Return Code descriptions for the list of values    * 00866800
*              that can be returned.                                  * 00867900
*                                                                     * 00869000
*                                                                     * 00870100
*              [LINKAGE(SVC|BRANCH)]                                * 00871200
*                  is an optional keyword input that specifies the    * 00872300
*                  level interface to the Data Collection Service     * 00873400
*                  that is to be generated.                           * 00874500
*                  DEFAULT: SVC                                       * 00875600
*                                                                     * 00876700
*                                                                     * 00877800
*                  SVC       Requests that an SVC-type invocation of  * 00878900
*                            the service be generated.                * 00880000
*                                                                     * 00881100
*                  BRANCH    Requests that a direct CALL be used to   * 00882200
*                            invoke the service.  LINKAGE=BRANCH      * 00883300
*                            callers must be Supervisor State.        * 00884400
*                                                                     * 00885500
*                                                                     * 00886600
*                                                                     * 00887700
*                                                                     * 00888800
*                                                                     * 00889900
*                                                                     * 00891000
*                                                                     * 00892100
*                                                                     * 00893200
*                                                                     * 00894300
*                                                                     * 00895400
*      [RETCODE(xretcode)]                                            * 00896500
*          is the name (RS-type) of an optional fullword output       * 00897600
*          variable (or register (2)-(12) ASM only) into which the    * 00898700
*          return code is to be copied from GPR 15.                   * 00899800
*                                                                     * 00900900
*                                                                     * 00902000
*                                                                     * 00903100
*                                                                     * 00904200
*      [MF(S|L|M|E)]                                                * 00905300
*          is an optional keyword input which specifies the macro     * 00906400
*          form.                                                      * 00907500
*          DEFAULT: S                                                 * 00908600
*                                                                     * 00909700
*                                                                     * 00910800
*          [MF(S)]                                                    * 00911900
*              specifies the standard form of the macro.  The "S"     * 00913000
*              form generates code to put the parameters into the     * 00914100
*              parameter list and invoke the desired service.  Full   * 00915200
*              checking for required macro keys is done along with    * 00916300
*              supplying defaults for omitted optional parameters.    * 00917400
*              The ?EPILOG macro must be invoked at the end of the    * 00918500
*              module.                                                * 00919600
*                                                                     * 00920700
*              For assembly language code modules, the "S" form       * 00921800
*              generates code to put the parameters into an in-line   * 00922900
*              parameter list and invoke the desired service.  Full   * 00924000
*              checking for required macro keys is done along with    * 00925100
*              supplying defaults for omitted optional parameters.    * 00926200
*                                                                     * 00927300
*          [MF(L,xmfctrl,xmfattr|BDY(DWORD))]                       * 00928400
*              specifies the list form of the macro.  The "L" form    * 00929500
*              defines an area to be used for the parameter list.     * 00930600
*              Any other macro parameters are flagged as errors.      * 00931700
*                                                                     * 00932800
*            ,xmfctrl                                                 * 00933900
*              is a required input.  It is the name of a storage area * 00935000
*              for the parameter list.                                * 00936100
*                                                                     * 00937200
*            ,xmfattr|BDY(DWORD)                                    * 00938300
*              is an optional 60 character input string that varies   * 00939400
*              from 1 to 60 characters. It can contain any value that * 00940500
*              is valid on an assembler DS pseudo-op                  * 00941600
*              (assembler-only). You can use this parameter to force  * 00942700
*              boundary alignment of the parameter list.              * 00943800
*              DEFAULT: 0D for Assembler, BDY(DWORD) for PL/AS, which * 00944900
*              forces the parameter list to a doubleword boundary.    * 00946000
*                                                                     * 00947100
*          [MF(M,xmfctrl,COMPLETE|NOCHECK)]                         * 00948200
*              specifies the modify form of the macro.  The "M" form  * 00949300
*              generates code to put the parameters into the          * 00950400
*              parameter list specified by xmfctrl.                   * 00951500
*                                                                     * 00952600
*            ,xmfctrl                                                 * 00953700
*              is a required input.  It is the name (RS-type) (or     * 00954800
*              address in register (1)-(12) ASM only) of a storage    * 00955900
*              area for the parameter list.                           * 00957000
*                                                                     * 00958100
*            ,COMPLETE|NOCHECK]                                     * 00959200
*              is an optional keyword input which specifies the       * 00960300
*              degree of macro parameter syntax checking.             * 00961400
*              DEFAULT: COMPLETE                                      * 00962500
*                                                                     * 00963600
*                                                                     * 00964700
*              COMPLETE   Checking for required macro keys is done    * 00965800
*                        and defaults are supplied for omitted        * 00966900
*                        optional parameters.  (See Macro Usage Note  * 00968000
*                        2).                                          * 00969100
*                                                                     * 00970200
*              NOCHECK   Checking for required macro keys is not done * 00971300
*                        nor are defaults supplied for omitted        * 00972400
*                        optional parameters.                         * 00973500
*                                                                     * 00974600
*                                                                     * 00975700
*                                                                     * 00976800
*          [MF(E,xmfctrl,COMPLETE|NOCHECK)]                         * 00977900
*              specifies the execute form of the macro.  The "E" form * 00979000
*              generates code to put the parameters into the          * 00980100
*              parameter list specified by xmfctrl and invoke the     * 00981200
*              desired service.                                       * 00982300
*                                                                     * 00983400
*            ,xmfctrl                                                 * 00984500
*              is a required input.  It is the name (RS-type) (or     * 00985600
*              address in register (1)-(12) ASM only) of a storage    * 00986700
*              area for the parameter list.                           * 00987800
*                                                                     * 00988900
*            ,COMPLETE|NOCHECK                                      * 00990000
*              is an optional keyword input which specifies the       * 00991100
*              degree of macro parameter syntax checking.             * 00992200
*              DEFAULT: COMPLETE                                      * 00993300
*                                                                     * 00994400
*                                                                     * 00995500
*              COMPLETE   Checking for required macro keys is done    * 00996600
*                        and defaults are supplied for omitted        * 00997700
*                        optional parameters.  (See Macro Usage Note  * 00998800
*                        2).                                          * 00999900
*                                                                     * 01001000
*              NOCHECK   Checking for required macro keys is not done * 01002100
*                        nor are defaults supplied for omitted        * 01003200
*                        optional parameters.                         * 01004300
*                                                                     * 01005400
*                                                                     * 01006500
*                                                                     * 01007600
*                                                                     * 01008700
*                                                                     * 01009800
*                                                                     * 01010900
*                                                                     * 01012000
*01* RETURN CODES:                                                    * 01013100
*                                                                     * 01014200
*                                                                     * 01015300
*            00   Request = <all>  - The request function was         * 01016400
*                 completed successful                                * 01017500
*                                                                     * 01018600
*            04   Request = REGISTER - Warning, another product has   * 01019700
*                 already regist for this domain.  The current        * 01020800
*                 request is accepted; however, there will be         * 01021900
*                 duplicate recording of data for both products.      * 01023000
*                                                                     * 01024100
*            04   Request = FUNCTIONDATA - Warning, input data type   * 01025200
*                 differs from initial data type specified; the       * 01026300
*                 accumulation is not done.                           * 01027400
*                                                                     * 01028500
*            04   Request = STATUS - Warning, the usage data          * 01029600
*                 collection service is available on the system but   * 01030700
*                 the installation is not collecting the System-Wide  * 01031800
*                 data record (89).                                   * 01032900
*                                                                     * 01034000
*            08   Request = REGISTER - The unauthored request being   * 01035100
*                 made would cause the unauthorized request limit to  * 01036200
*                 be exceeded; the request is failed.                 * 01037300
*                                                                     * 01038400
*            08   Request = DEREGISTER - Error, a usage function has  * 01039500
*                 been requested but there is no active REGISTER for  * 01040600
*                 the specified product; the request is failed.       * 01041700
*                                                                     * 01042800
*            08   Request = FUNCTIONBEGIN - Error, a usage function   * 01043900
*                 has been requested but there is no active REGISTER  * 01045000
*                 for the specified product; the request is failed.   * 01046100
*                                                                     * 01047200
*            08   Request = FUNCTIONDATA - Error, a function request  * 01048300
*                 has been requested but there is no active FUNCTION  * 01049400
*                 for the specified product; the request is failed.   * 01050500
*                                                                     * 01051600
*            08   Request = FUNCTIONEND - Error, a function request   * 01052700
*                 has been requested but there is no active FUNCTION  * 01053800
*                 for the specified product; the request is failed.   * 01054900
*                                                                     * 01056000
*            12   Request = <all> - Error, the specified product or   * 01057100
*                 function token is not defined; the request is       * 01058200
*                 failed.                                             * 01059300
*                                                                     * 01060400
*            16   Request = <all> - Usage Data Collection Function is * 01061500
*                 not available on this system                        * 01062600
*                                                                     * 01063700
*            20   Request = <all> - Invalid request or internal       * 01064800
*                 parameter error.                                    * 01065900
*                                                                     * 01067000
*                                                                     * 01068100
*                                                                     * 01069200
*01* REASON CODES:  None.                                             * 01070300
*                                                                     * 01071400
*01* MODULE TYPE:  ASSEM-PL/AS MACRO                                  * 01072500
*                                                                     * 01073600
*02*   PROCESSOR:  ASSEM-PL/AS                                        * 01074700
*                                                                     * 01075800
*01* COMPONENT:  SC100                                                * 01076900
*                                                                     * 01078000
*01* DISTRIBUTION LIBRARY: MACLIB                                     * 01079100
*                                                                     * 01080200
*01* MACRO USAGE NOTES:                                               * 01081300
*                                                                     * 01082400
*                                                                     * 01083500
*    1.  Printing of the macro expansion is controlled by the ZPRINT  * 01084600
*        global macro variable.  Any value other than 'NO' will       * 01085700
*        result in the macro expansion being printed.  The default is * 01086800
*        'YES'.  The following examples illustrate how the ZPRINT     * 01087900
*        variable should be set.                                      * 01089000
*                                                                     * 01090100
*                    GBLC &ZPRINT                                     * 01091200
*            &ZPRINT SETC 'YES'          &ZPRINT SETC 'NO'            * 01092300
*                                                                     * 01093400
*                                                                     * 01094500
*    2.  When using the NOCHECK option in conjunction with the Modify * 01095600
*        and/or  Execute  forms,  be  sure  that  it is preceded by a * 01096700
*        Modify   or  Execute  form  invocation  which  specifies  or * 01097800
*        defaults  to  the  COMPLETE  option.   This insures that the * 01098900
*        parameter list is initialized completely.                    * 01100000
*                                                                     * 01101100
*                                                                     * 01102200
*                                                                     * 01103300
*01* CHANGE ACTIVITY:                                                 * 01104400
*                                                                     * 01105500
*   Flag LineItem  FMID    Date   ID    Comment                       * 01106600
*                                                                     * 01107700
*    $00=USAGEAMG JBB3313 931011 PDBR:  SMF Usage Data Collection     * 01108800
*                                         Macro                       * 01109900
*    $01=OYxxxxx  JBB3313 931014 PDBR:  Add PL/AS and ASM Code        * 01111000
****** END OF SPECIFICATIONS *****************************************/ 01112100
*/********************************************************************* 01113200
         MACRO                                                          01114300
&XLABEL  IFAUSAGE &REQUEST=,&PRODOWNER=,&PRODNAME=,&PRODVERS=,         *01115400
               &PRODQUAL=,&PRODID=,&DOMAIN=,&SCOPE=,&PRTOKEN=,         *01116500
               &LINKAGE=,&ENDTIME=,&ENDDATA=,&BEGTIME=,&DATA=,&FORMAT=,*01117600
               &CURRENTDATA=,&RETCODE=,&MF=                             01118700
.*                                                                      01200000
*                   MACDATE -93/11/02-<1>                               01250000
.*                                                                      01450000
.*******************************************************************    01471400
.***AB.02  GLOBAL VARIABLES TO CONTROL PRINT AND CODE GENERATION        01492800
.*******************************************************************    01514200
                   GBLC  &ZPRINT     YES=PRINT NO=NO PRINT              01535600
                   GBLC  &ZTEST      YES=TEST NO=NO TEST                01557000
                   GBLC  &ZSYSTEM    PCCODE10, MVS, SAK, VM, XAX        01578400
.*                                                                      01600000
                   GBLC  &ZIFAUSAGE  YES=MACRO USED AT LEAST ONCE       01608300
.*******************************************************************    01616600
.***AB.03  COMMONLY USED LOCAL MACRO VARIABLES                          01624900
.*******************************************************************    01633200
                   LCLC  &ZMS        ERROR MESSAGE WORK AREA            01641500
                   LCLC  &ZCNDX      LAST THREE SYSNDX CHARACTERS       01649800
                   LCLC  &ZCLNG      USED WHEN LENGTH IS NEEDED         01658100
                   LCLC  &ZCGPR      USED WHEN VALUE IS IN A GPR        01666400
                   LCLC  &ZCVAL      USED TO CONTAIN FIXED VALUE        01674700
                   LCLA  &ZAWRK      USED AS A WORK AREA                01683000
                   LCLA  &ZASIZ      USED FOR SIZE OF VALUE             01691300
                   LCLA  &ZN         NUMERIC WORK VARIABLE              01699600
                   LCLC  &ZC         CHARACTER WORK VARIABLE            01707900
                   LCLC  &ZTLC       CHARACTER TOO LONG VARIABLE        01716200
                   LCLA  &ZTLA       VALUE TOO LONG VARIABLE            01724500
                   LCLA  &ZMACRET    MACRO RETURN CODE                  01732800
&ZMACRET           SETA  0           ASSUME NO ERRORS                   01741100
.*                                                                      01750000
                   LCLC  &ZCSYSLIST(255)        NONXKEY, POS ARRAY      01750100
                   LCLA  &ZASYSLNDX  WORK INDEX FOR ZCSYSLIST()         01750200
                   LCLA  &ZPLLEN     PARAMETER LIST LENGTH              01750300
                   LCLC  &ZENDBASEPL            End of base PL          01750400
.*******************************************************************    01750500
.***AB.07  DEFINE ALL MACRO VARIABLES                                   01750600
.*******************************************************************    01750700
                   LCLC  &XREQUEST   ++ VALUE                           01750800
                   LCLC  &XPRODOWNER            ++ NAME                 01750900
                   LCLC  &XPRODNAME  ++ NAME                            01751000
                   LCLC  &XPRODVERS  ++ NAME                            01751100
                   LCLC  &XPRODQUAL  ++ NAME                            01751200
                   LCLC  &XPRODID    ++ NAME                            01751300
                   LCLC  &XDOMAIN    ++ VALUE                           01751400
                   LCLC  &XSCOPE     ++ VALUE                           01751500
                   LCLC  &XPRTOKEN   ++ NAME                            01751600
                   LCLC  &XLINKAGE   ++ VALUE                           01751700
                   LCLC  &XDEREGPRODNAME        ++ NAME                 01751800
                   LCLC  &XENDTIME   ++ NAME                            01751900
                   LCLC  &XENDDATA   ++ NAME                            01752000
                   LCLC  &XBEGINPRODNAME        ++ NAME                 01752100
                   LCLC  &XBEGTIME   ++ NAME                            01752200
                   LCLC  &XDATAPRODNAME         ++ NAME                 01752300
                   LCLC  &XDATA      ++ NAME                            01752400
                   LCLC  &XFORMAT    ++ VALUE                           01752500
                   LCLC  &XCURRENTDATA          ++ NAME                 01752600
                   LCLC  &XENDPRODNAME          ++ NAME                 01752700
                   LCLC  &XRETCODE   ++ NAME                            01752800
                   LCLC  &XMF        ++ VALUE                           01752900
                   LCLC  &XMFCTRL    ++ NAME                            01753000
                   LCLC  &XMFATTR    ++ VALUE                           01753100
                   LCLC  &XMFSCK     ++ VALUE                           01753200
.*******************************************************************    01753300
.***AB.13  DEFINE MACRO VARIABLES FOR INPUT/OUTPUT PROCESSING           01753400
.*******************************************************************    01753500
                   LCLC  &ZXREQUEST  ++ INPUT VALUE                     01753600
                   LCLC  &ZXPRODOWNER           ++ INPUT NAME           01753700
                   LCLC  &ZXPRODNAME            ++ INPUT NAME           01753800
                   LCLC  &ZXPRODVERS            ++ INPUT NAME           01753900
                   LCLC  &ZXPRODQUAL            ++ INPUT NAME           01754000
                   LCLC  &ZXPRODID   ++ INPUT NAME                      01754100
                   LCLC  &ZXDOMAIN   ++ INPUT VALUE                     01754200
                   LCLC  &ZXSCOPE    ++ INPUT VALUE                     01754300
                   LCLC  &ZXPRTOKEN  ++ OUTPUT NAME                     01754400
                   LCLC  &ZXLINKAGE  ++ INPUT VALUE                     01754500
                   LCLC  &ZXDEREGPRODNAME       ++ INPUT NAME           01754600
                   LCLC  &ZXENDTIME  ++ OUTPUT NAME                     01754700
                   LCLC  &ZXENDDATA  ++ OUTPUT NAME                     01754800
                   LCLC  &ZXBEGINPRODNAME       ++ INPUT NAME           01754900
                   LCLC  &ZXBEGTIME  ++ OUTPUT NAME                     01755000
                   LCLC  &ZXDATAPRODNAME        ++ INPUT NAME           01755100
                   LCLC  &ZXDATA     ++ INPUT NAME                      01755200
                   LCLC  &ZXFORMAT   ++ INPUT VALUE                     01755300
                   LCLC  &ZXCURRENTDATA         ++ OUTPUT NAME          01755400
                   LCLC  &ZXENDPRODNAME         ++ INPUT NAME           01755500
                   LCLC  &ZXRETCODE  ++ OUTPUT NAME                     01755600
                   LCLC  &ZXMF       ++ INPUT VALUE                     01755700
                   LCLC  &ZXMFCTRL   ++ INPUT NAME                      01755800
                   LCLC  &ZXMFATTR   ++ INPUT VALUE                     01755900
                   LCLC  &ZXMFSCK    ++ INPUT VALUE                     01756000
.********************************************************************   01756100
.***AG.MF01 PROCESS MF MACRO FORMS                                      01756200
.********************************************************************   01756300
                   ACTR  10000                                          01756400
.*------------------------------------------------------------------    01756500
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01756600
&XMF               SETC  ''          INITIALIZE XVARIABLE               01756700
.*-------------------------------------------------------------------   01756800
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01756900
.ZG138             ANOP  ,                                              01757000
&ZTLC              SETC 'S'                                             01757100
                   AIF   ('&MF(1)' NE '&ZTLC').ZG139                    01757200
&XMF               SETC  'S'         SET KEYWORD                        01757300
&XMFSCK            SETC  'COMPLETE'  SET XMFSCK                         01757400
                   AIF   (N'&MF LE 1).ZG138A    CK NUM                  01757500
&ZMS               SETC  '"MF='      *KPOSA* MNOTE                      01757600
&ZMS               SETC  '&ZMS.&MF"'                                    01757700
&ZMS               SETC  '&ZMS "MF"'                                    01757800
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            01757900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        01758000
.ZG138A            ANOP  ,                                              01758100
.*-------------------------------------------------------------------   01758200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01758300
.ZG139             ANOP  ,                                              01758400
&ZTLC              SETC 'L'                                             01758500
                   AIF   ('&MF(1)' NE '&ZTLC').ZG146                    01758600
&XMF               SETC  'L'         SET KEYWORD                        01758700
                   AIF   (N'&MF LE 3).ZG139A    CK NUM                  01758800
&ZMS               SETC  '"MF='      *KPOSA* MNOTE                      01758900
&ZMS               SETC  '&ZMS.&MF"'                                    01759000
&ZMS               SETC  '&ZMS "MF"'                                    01759100
                   MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'           01759200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        01759300
.ZG139A            ANOP  ,                                              01759400
.*-------------------------------------------------------------------   01759500
.***AG.KKCTL08 -MF(L) SPECIAL CHECK                                     01759600
                   AIF   (N'&SYSLIST NE 0).ZG139B  POSITIONALS?         01759700
                   AIF   ('&REQUEST' NE '').ZG139B  KEYS?               01759800
                   AIF   ('&PRODOWNER' NE '').ZG139B  KEYS?             01759900
                   AIF   ('&PRODNAME' NE '').ZG139B  KEYS?              01760000
                   AIF   ('&PRODVERS' NE '').ZG139B  KEYS?              01760100
                   AIF   ('&PRODQUAL' NE '').ZG139B  KEYS?              01760200
                   AIF   ('&PRODID' NE '').ZG139B  KEYS?                01760300
                   AIF   ('&DOMAIN' NE '').ZG139B  KEYS?                01760400
                   AIF   ('&SCOPE' NE '').ZG139B  KEYS?                 01760500
                   AIF   ('&PRTOKEN' NE '').ZG139B  KEYS?               01760600
                   AIF   ('&LINKAGE' NE '').ZG139B  KEYS?               01760700
                   AIF   ('&ENDTIME' NE '').ZG139B  KEYS?               01760800
                   AIF   ('&ENDDATA' NE '').ZG139B  KEYS?               01760900
                   AIF   ('&BEGTIME' NE '').ZG139B  KEYS?               01761000
                   AIF   ('&DATA' NE '').ZG139B  KEYS?                  01761100
                   AIF   ('&FORMAT' NE '').ZG139B  KEYS?                01761200
                   AIF   ('&CURRENTDATA' NE '').ZG139B  KEYS?           01761300
                   AIF   ('&RETCODE' NE '').ZG139B  KEYS?               01761400
                   AGO    .ZG139C    INVOCATION OKAY                    01761500
.ZG139B            ANOP  ,                                              01761600
&ZMS               SETC  'THE "L" FORM OF "MF" CANNOT'  *MFLA* MNOTE    01761700
&ZMS               SETC  '&ZMS HAVE ANY OTHER KEYWORDS OR'              01761800
&ZMS               SETC  '&ZMS POSITIONAL PARAMETERS SPECIFIED'         01761900
                   MNOTE 8,' &ZMS ON THE INVOCATION.'                   01762000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        01762100
.ZG139C            ANOP  ,                                              01762200
.*-------------------------------------------------------------------   01762300
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   01762400
&ZXMFCTRL          SETC  'INPUT'     SET IN/OUTPUT                      01762500
&XMFCTRL           SETC  '&MF(2,1)'  SET XVARIABLE                      01762600
                   AIF   (N'&MF(2) GT 1).ZG141B  MULTI PARMS            01762700
&XMFCTRL           SETC  '&MF(2)'    SET XVARIABLE                      01762800
.ZG141B            AIF   (K'&MF(2) GT 0).ZG141C                         01762900
&ZXMFCTRL          SETC  ''          RESET IN/OUTPUT                    01763000
&ZMS               SETC  'WHEN "L" IS SPECIFIED'  *KRQDA*               01763100
&ZMS               SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'            01763200
                   MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                   01763300
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        01763400
.ZG141C            ANOP  ,                                              01763500
.*-------------------------------------------------------------------   01763600
.***AG.KCK01 NAME, OPT RQD INPUT, POS(2) -GPR NOT ALLOWED               01763700
                   AIF   (K'&ZXMFCTRL LE 0).ZG141P  NOT I/O             01763800
                   AIF   ('&XMFCTRL'(1,1) NE '(').ZG141P                01763900
&ZXMFCTRL          SETC  ''          RESET IN/OUTPUT                    01764000
&ZMS               SETC  '"MF='      *KGPRA* MNOTE                      01764100
&ZMS               SETC  '&ZMS.&MF"'                                    01764200
&ZMS               SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'      01764300
                   MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 2.'              01764400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        01764500
.ZG141P            ANOP  ,                                              01764600
.*-------------------------------------------------------------------   01764700
.***AG.KXVAR13 VALUE, OPT INPUT, POS(3) -XVARIABLE                      01764800
&ZXMFATTR          SETC  'INPUT'     SET IN/OUTPUT                      01764900
&XMFATTR           SETC  '0D'                                           01765000
                   AIF   (K'&MF(3) LE 0).ZG144B  PARM                   01765100
&XMFATTR           SETC  '&MF(3,1)'  SET XVARIABLE                      01765200
                   AIF   (N'&MF(3) GT 1).ZG144B  MULTI PARMS            01765300
&XMFATTR           SETC  '&MF(3)'    SET XVARIABLE                      01765400
.ZG144B            ANOP  ,                                              01765500
.*-------------------------------------------------------------------   01765600
.***AG.KCK01 VALUE, OPT INPUT, POS(3) -GPR NOT ALLOWED                  01765700
                   AIF   (K'&ZXMFATTR LE 0).ZG144P  NOT I/O             01765800
                   AIF   ('&XMFATTR'(1,1) NE '(').ZG144P                01765900
&ZXMFATTR          SETC  ''          RESET IN/OUTPUT                    01766000
&ZMS               SETC  '"MF='      *KGPRA* MNOTE                      01766100
&ZMS               SETC  '&ZMS.&MF"'                                    01766200
&ZMS               SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'      01766300
                   MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 3.'              01766400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        01766500
.ZG144P            ANOP  ,                                              01766600
.*-------------------------------------------------------------------   01766700
.***AG.KCK03 VALUE, OPT INPUT, POS(3) -CHARACTER LENGTH                 01766800
                   AIF   (K'&ZXMFATTR LE 0).ZG144S  NOT I/O             01766900
                   AIF   (K'&XMFATTR LE 60).ZG144S  LNG OK              01767000
&ZXMFATTR          SETC  ''          RESET IN/OUTPUT                    01767100
&ZMS               SETC  '"MF='      *KLNGA* MNOTE                      01767200
&ZMS               SETC  '&ZMS.&MF"'                                    01767300
&ZMS               SETC  '&ZMS ARGUMENT 3 EXCEEDS THE MAXIMUM'          01767400
                   MNOTE 8,' &ZMS LENGTH OF 60 CHARACTERS.'             01767500
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        01767600
.ZG144S            ANOP  ,                                              01767700
.*-------------------------------------------------------------------   01767800
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01767900
.ZG146             ANOP  ,                                              01768000
&ZTLC              SETC 'M'                                             01768100
                   AIF   ('&MF(1)' NE '&ZTLC').ZG155                    01768200
&XMF               SETC  'M'         SET KEYWORD                        01768300
                   AIF   (N'&MF LE 3).ZG146A    CK NUM                  01768400
&ZMS               SETC  '"MF='      *KPOSA* MNOTE                      01768500
&ZMS               SETC  '&ZMS.&MF"'                                    01768600
&ZMS               SETC  '&ZMS "MF"'                                    01768700
                   MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'           01768800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        01768900
.ZG146A            ANOP  ,                                              01769000
.*-------------------------------------------------------------------   01769100
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   01769200
&ZXMFCTRL          SETC  'INPUT'     SET IN/OUTPUT                      01769300
&XMFCTRL           SETC  '&MF(2,1)'  SET XVARIABLE                      01769400
                   AIF   (N'&MF(2) GT 1).ZG148B  MULTI PARMS            01769500
&XMFCTRL           SETC  '&MF(2)'    SET XVARIABLE                      01769600
.ZG148B            AIF   (K'&MF(2) GT 0).ZG148C                         01769700
&ZXMFCTRL          SETC  ''          RESET IN/OUTPUT                    01769800
&ZMS               SETC  'WHEN "M" IS SPECIFIED'  *KRQDA*               01769900
&ZMS               SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'            01770000
                   MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                   01770100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        01770200
.ZG148C            ANOP  ,                                              01770300
.*-------------------------------------------------------------------   01770400
.***AG.KCK02 NAME, OPT RQD INPUT, POS(2) -GPR OUT OF RANGE              01770500
                   AIF   (K'&ZXMFCTRL LE 0).ZG148R  NOT I/O             01770600
                   AIF   ('&XMFCTRL'(1,1) NE '(').ZG148R                01770700
&ZCGPR             SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)                     01770800
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG148P                  01770900
                   AIF   (K'&ZCGPR GT 2).ZG148Q                         01771000
                   AIF   ('&ZCGPR' EQ '0').ZG148Q                       01771100
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  01771200
                   AIF   (T'&ZCGPR NE 'N').ZG148Q  INVALID REG NAME     01771300
.ZG148P            ANOP  ,                                              01771400
                   AIF   (T'&ZCGPR NE 'N').ZG148R  NON NUMERIC          01771500
                   AIF   ('&ZCGPR' LT '1').ZG148Q                       01771600
                   AIF   ('&ZCGPR' LE '12').ZG148R                      01771700
.ZG148Q            ANOP  ,                                              01771800
&ZMS               SETC  '"MF='      *KGPRA* MNOTE                      01771900
&ZMS               SETC  '&ZMS.&MF"'                                    01772000
&ZMS               SETC  '&ZMS ARGUMENT 2 MUST SPECIFY A REGISTER'      01772100
                   MNOTE 8,' &ZMS IN THE RANGE (1)-(12).'               01772200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        01772300
.ZG148R            ANOP  ,                                              01772400
.*-------------------------------------------------------------------   01772500
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01772600
&XMFSCK            SETC  ''          INITIALIZE XVARIABLE               01772700
.ZG152A   AIF   ('&MF(3)' NE 'COMPLETE').ZG153A                         01772800
&XMFSCK            SETC  'COMPLETE'  SET KEYWORD                        01772900
.*-------------------------------------------------------------------   01773000
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01773100
.ZG153A   AIF   ('&MF(3)' NE 'NOCHECK').ZG154A                          01773200
&XMFSCK            SETC  'NOCHECK'   SET KEYWORD                        01773300
.*-------------------------------------------------------------------   01773400
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01773500
.ZG154A            AIF   (K'&XMFSCK GT 0).ZG154C  KEYWORD               01773600
                   AIF   (K'&MF(3) LE 0).ZG154B                         01773700
&ZMS               SETC  '"MF='      *KUKWA* MNOTE                      01773800
&ZMS               SETC  '&ZMS.&MF"'                                    01773900
&ZMS               SETC  '&ZMS ARGUMENT 3 IS AN UNKNOWN KEYWORD. '      01774000
&ZMS               SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'            01774100
&ZMS               SETC  '&ZMS "COMPLETE"'      VALID KEYWORD           01774200
&ZMS               SETC  '&ZMS OR "NOCHECK".'   VALID KEYWORD           01774300
                   MNOTE 8,' &ZMS '                                     01774400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        01774500
.ZG154B            ANOP  ,                                              01774600
&XMFSCK            SETC  'COMPLETE'  SET DEFAULT KEYWORD                01774700
.ZG154C            ANOP  ,                                              01774800
&ZXMFSCK           SETC  'INPUT'     SET IN/OUTPUT                      01774900
.*-------------------------------------------------------------------   01775000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01775100
.ZG155             ANOP  ,                                              01775200
&ZTLC              SETC 'E'                                             01775300
                   AIF   ('&MF(1)' NE '&ZTLC').ZG164                    01775400
&XMF               SETC  'E'         SET KEYWORD                        01775500
                   AIF   (N'&MF LE 3).ZG155A    CK NUM                  01775600
&ZMS               SETC  '"MF='      *KPOSA* MNOTE                      01775700
&ZMS               SETC  '&ZMS.&MF"'                                    01775800
&ZMS               SETC  '&ZMS "MF"'                                    01775900
                   MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'           01776000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        01776100
.ZG155A            ANOP  ,                                              01776200
.*-------------------------------------------------------------------   01776300
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   01776400
&ZXMFCTRL          SETC  'INPUT'     SET IN/OUTPUT                      01776500
&XMFCTRL           SETC  '&MF(2,1)'  SET XVARIABLE                      01776600
                   AIF   (N'&MF(2) GT 1).ZG157B  MULTI PARMS            01776700
&XMFCTRL           SETC  '&MF(2)'    SET XVARIABLE                      01776800
.ZG157B            AIF   (K'&MF(2) GT 0).ZG157C                         01776900
&ZXMFCTRL          SETC  ''          RESET IN/OUTPUT                    01777000
&ZMS               SETC  'WHEN "E" IS SPECIFIED'  *KRQDA*               01777100
&ZMS               SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'            01777200
                   MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                   01777300
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        01777400
.ZG157C            ANOP  ,                                              01777500
.*-------------------------------------------------------------------   01777600
.***AG.KCK02 NAME, OPT RQD INPUT, POS(2) -GPR OUT OF RANGE              01777700
                   AIF   (K'&ZXMFCTRL LE 0).ZG157R  NOT I/O             01777800
                   AIF   ('&XMFCTRL'(1,1) NE '(').ZG157R                01777900
&ZCGPR             SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)                     01778000
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG157P                  01778100
                   AIF   (K'&ZCGPR GT 2).ZG157Q                         01778200
                   AIF   ('&ZCGPR' EQ '0').ZG157Q                       01778300
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  01778400
                   AIF   (T'&ZCGPR NE 'N').ZG157Q  INVALID REG NAME     01778500
.ZG157P            ANOP  ,                                              01778600
                   AIF   (T'&ZCGPR NE 'N').ZG157R  NON NUMERIC          01778700
                   AIF   ('&ZCGPR' LT '1').ZG157Q                       01778800
                   AIF   ('&ZCGPR' LE '12').ZG157R                      01778900
.ZG157Q            ANOP  ,                                              01779000
&ZMS               SETC  '"MF='      *KGPRA* MNOTE                      01779100
&ZMS               SETC  '&ZMS.&MF"'                                    01779200
&ZMS               SETC  '&ZMS ARGUMENT 2 MUST SPECIFY A REGISTER'      01779300
                   MNOTE 8,' &ZMS IN THE RANGE (1)-(12).'               01779400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        01779500
.ZG157R            ANOP  ,                                              01779600
.*-------------------------------------------------------------------   01779700
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01779800
&XMFSCK            SETC  ''          INITIALIZE XVARIABLE               01779900
.ZG161A   AIF   ('&MF(3)' NE 'COMPLETE').ZG162A                         01780000
&XMFSCK            SETC  'COMPLETE'  SET KEYWORD                        01780100
.*-------------------------------------------------------------------   01780200
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01780300
.ZG162A   AIF   ('&MF(3)' NE 'NOCHECK').ZG163A                          01780400
&XMFSCK            SETC  'NOCHECK'   SET KEYWORD                        01780500
.*-------------------------------------------------------------------   01780600
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01780700
.ZG163A            AIF   (K'&XMFSCK GT 0).ZG163C  KEYWORD               01780800
                   AIF   (K'&MF(3) LE 0).ZG163B                         01780900
&ZMS               SETC  '"MF='      *KUKWA* MNOTE                      01781000
&ZMS               SETC  '&ZMS.&MF"'                                    01781100
&ZMS               SETC  '&ZMS ARGUMENT 3 IS AN UNKNOWN KEYWORD. '      01781200
&ZMS               SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'            01781300
&ZMS               SETC  '&ZMS "COMPLETE"'      VALID KEYWORD           01781400
&ZMS               SETC  '&ZMS OR "NOCHECK".'   VALID KEYWORD           01781500
                   MNOTE 8,' &ZMS '                                     01781600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        01781700
.ZG163B            ANOP  ,                                              01781800
&XMFSCK            SETC  'COMPLETE'  SET DEFAULT KEYWORD                01781900
.ZG163C            ANOP  ,                                              01782000
&ZXMFSCK           SETC  'INPUT'     SET IN/OUTPUT                      01782100
.*------------------------------------------------------------------    01782200
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01782300
.ZG164             ANOP  ,                                              01782400
&ZXMF              SETC  'INPUT'     SET IN/OUTPUT                      01782500
                   AIF   (K'&XMF GT 0).ZG164E   VALID ARG               01782600
                   AIF   (T'&MF EQ 'O').ZG164D  OMITTED                 01782700
&ZASYSLNDX         SETA  0                                              01782800
.ZG164A            ANOP  ,           POSITIONAL MACRO KEY               01782900
&ZASYSLNDX         SETA  &ZASYSLNDX+1                                   01783000
                   AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG164C              01783100
&ZTLC              SETC 'MF'                                            01783200
                   AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG164A     01783300
.ZG164B            ANOP  ,                                              01783400
&ZXMF              SETC  ''          RESET IN/OUTPUT                    01783500
&ZMS               SETC  'THE "MF" KEY'         *KOPTA* MNOTE           01783600
&ZMS               SETC  '&ZMS MUST CONTAIN ONE'                        01783700
                   MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'               01783800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        01783900
                   AGO   .ZG164E                                        01784000
.ZG164C            ANOP  ,                                              01784100
&ZXMF              SETC  ''          RESET IN/OUTPUT                    01784200
&ZMS               SETC  '"MF='      *KUKWA* MNOTE                      01784300
&ZMS               SETC  '&ZMS.&MF"'                                    01784400
&ZMS               SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '      01784500
&ZMS               SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'            01784600
&ZMS               SETC  '&ZMS "S",'            VALID KEYWORD           01784700
&ZMS               SETC  '&ZMS "L",'            VALID KEYWORD           01784800
&ZMS               SETC  '&ZMS "M",'            VALID KEYWORD           01784900
&ZMS               SETC  '&ZMS OR "E".'         VALID KEYWORD           01785000
                   MNOTE 8,' &ZMS '                                     01785100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        01785200
                   AGO   .ZG164E                                        01785300
.ZG164D            ANOP  ,                                              01785400
&XMF               SETC  'S'         SET DEFAULT KEYWORD                01785500
&XMFSCK            SETC  'COMPLETE'  COMPLETE CHECKING                  01785600
.ZG164E            ANOP  ,                                              01785700
.********************************************************************   01785800
.***AG.MF02  FULL MACRO SYNTAX CHECKING                                 01785900
.********************************************************************   01786000
                   ACTR  10000                                          01786100
.*-------------------------------------------------------------------   01786200
.***AG.MF03 MF=(SLME)                                                   01786300
                   AIF   ('&XMF' EQ 'L').ZGMFX                          01786400
                   AIF   ('&XMFSCK' NE 'COMPLETE').ZGMFX                01786500
.*------------------------------------------------------------------    01786600
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           01786700
&XREQUEST          SETC  ''          INITIALIZE XVARIABLE               01786800
.*-------------------------------------------------------------------   01786900
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           01787000
.ZG3               ANOP  ,                                              01787100
                   AIF   (K'&REQUEST(1) LE 0).ZG3A                      01787200
&ZTLC              SETC 'REGISTER'                                      01787300
                   AIF   ('&REQUEST(1)' NE '&ZTLC').ZG31                01787400
&XREQUEST          SETC  'REGISTER'  SET KEYWORD                        01787500
                   AIF   (N'&REQUEST LE 1).ZG3A  CK NUM                 01787600
&ZMS               SETC  '"REQUEST='            *KPOSA* MNOTE           01787700
&ZMS               SETC  '&ZMS.&REQUEST"'                               01787800
&ZMS               SETC  '&ZMS "REQUEST"'                               01787900
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            01788000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        01788100
.ZG3A              ANOP  ,                                              01788200
.*------------------------------------------------------------------    01788300
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           01788400
&ZCVAL             SETC ''           CLEAR ERROR KEY ACCUMULATOR        01788500
.ZG3A0             AIF   (K'&ENDTIME LE 0).ZG3A1  OK                    01788600
&ZCVAL             SETC '&ZCVAL ENDTIME'        INCORRECT KEY USED      01788700
.ZG3A1             AIF   (K'&ENDDATA LE 0).ZG3A2  OK                    01788800
&ZCVAL             SETC '&ZCVAL ENDDATA'        INCORRECT KEY USED      01788900
.ZG3A2             AIF   (K'&BEGTIME LE 0).ZG3A3  OK                    01789000
&ZCVAL             SETC '&ZCVAL BEGTIME'        INCORRECT KEY USED      01789100
.ZG3A3             AIF   (K'&DATA LE 0).ZG3A4   OK                      01789200
&ZCVAL             SETC '&ZCVAL DATA'           INCORRECT KEY USED      01789300
.ZG3A4             AIF   (K'&FORMAT LE 0).ZG3A5  OK                     01789400
&ZCVAL             SETC '&ZCVAL FORMAT'         INCORRECT KEY USED      01789500
.ZG3A5             AIF   (K'&CURRENTDATA LE 0).ZG3A6  OK                01789600
&ZCVAL             SETC '&ZCVAL CURRENTDATA'    INCORRECT KEY USED      01789700
.ZG3A6             AIF   (K'&ZCVAL LE 0).ZG3A7  OK                      01789800
&ZCVAL             SETC '&ZCVAL'(2,K'&ZCVAL-1)                          01789900
&ZMS               SETC  '"REQUEST'  *KMEIA* MNOTE                      01790000
&ZMS               SETC  '&ZMS.=&REQUEST"'                              01790100
&ZMS               SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'           01790200
                   MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'           01790300
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        01790400
.ZG3A7             ANOP  ,                                              01790500
.*----------------------------------------------------------------***   01790600
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     01790700
                   AIF   (N'&PRODOWNER LE 1).ZG5A  CK NUM               01790800
&ZMS               SETC  '"PRODOWNER='          *KPOSA* MNOTE           01790900
&ZMS               SETC  '&ZMS.&PRODOWNER"'                             01791000
&ZMS               SETC  '&ZMS "PRODOWNER"'                             01791100
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            01791200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        01791300
.ZG5A              ANOP  ,                                              01791400
.*-------------------------------------------------------------------   01791500
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         01791600
&ZXPRODOWNER       SETC  'INPUT'     SET IN/OUTPUT                      01791700
&XPRODOWNER        SETC  '&PRODOWNER(1)'        SET XVARIABLE           01791800
                   AIF   (N'&PRODOWNER GT 1).ZG5B  MULTI PARMS          01791900
&XPRODOWNER        SETC  '&PRODOWNER'           SET XVARIABLE           01792000
.ZG5B              AIF   (K'&PRODOWNER(1) GT 0).ZG5C                    01792100
&ZXPRODOWNER       SETC  ''          RESET IN/OUTPUT                    01792200
&ZMS               SETC  ' '         *KRQDA*                            01792300
&ZMS               SETC  '&ZMS "PRODOWNER" KEY AND ITS ARGUMENT'        01792400
                   MNOTE 8,' &ZMS ARE REQUIRED.'                        01792500
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        01792600
.ZG5C              ANOP  ,                                              01792700
.*-------------------------------------------------------------------   01792800
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    01792900
                   AIF   (K'&ZXPRODOWNER LE 0).ZG5R  NOT I/O            01793000
                   AIF   ('&XPRODOWNER'(1,1) NE '(').ZG5R               01793100
&ZCGPR             SETC  '&XPRODOWNER'(2,K'&XPRODOWNER-2)               01793200
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG5P                    01793300
                   AIF   (K'&ZCGPR GT 2).ZG5Q                           01793400
                   AIF   ('&ZCGPR' EQ '0').ZG5Q                         01793500
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  01793600
                   AIF   (T'&ZCGPR NE 'N').ZG5Q  INVALID REG NAME       01793700
.ZG5P              ANOP  ,                                              01793800
                   AIF   (T'&ZCGPR NE 'N').ZG5R  NON NUMERIC            01793900
                   AIF   ('&ZCGPR' LT '2').ZG5Q                         01794000
                   AIF   ('&ZCGPR' LE '12').ZG5R                        01794100
.ZG5Q              ANOP  ,                                              01794200
&ZMS               SETC  '"PRODOWNER='          *KGPRA* MNOTE           01794300
&ZMS               SETC  '&ZMS.&PRODOWNER"'                             01794400
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      01794500
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               01794600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        01794700
.ZG5R              ANOP  ,                                              01794800
.*----------------------------------------------------------------***   01794900
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     01795000
                   AIF   (N'&PRODNAME LE 1).ZG6A  CK NUM                01795100
&ZMS               SETC  '"PRODNAME='           *KPOSA* MNOTE           01795200
&ZMS               SETC  '&ZMS.&PRODNAME"'                              01795300
&ZMS               SETC  '&ZMS "PRODNAME"'                              01795400
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            01795500
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        01795600
.ZG6A              ANOP  ,                                              01795700
.*-------------------------------------------------------------------   01795800
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         01795900
&ZXPRODNAME        SETC  'INPUT'     SET IN/OUTPUT                      01796000
&XPRODNAME         SETC  '&PRODNAME(1)'         SET XVARIABLE           01796100
                   AIF   (N'&PRODNAME GT 1).ZG6B  MULTI PARMS           01796200
&XPRODNAME         SETC  '&PRODNAME'            SET XVARIABLE           01796300
.ZG6B              AIF   (K'&PRODNAME(1) GT 0).ZG6C                     01796400
&ZXPRODNAME        SETC  ''          RESET IN/OUTPUT                    01796500
&ZMS               SETC  ' '         *KRQDA*                            01796600
&ZMS               SETC  '&ZMS "PRODNAME" KEY AND ITS ARGUMENT'         01796700
                   MNOTE 8,' &ZMS ARE REQUIRED.'                        01796800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        01796900
.ZG6C              ANOP  ,                                              01797000
.*-------------------------------------------------------------------   01797100
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    01797200
                   AIF   (K'&ZXPRODNAME LE 0).ZG6R  NOT I/O             01797300
                   AIF   ('&XPRODNAME'(1,1) NE '(').ZG6R                01797400
&ZCGPR             SETC  '&XPRODNAME'(2,K'&XPRODNAME-2)                 01797500
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG6P                    01797600
                   AIF   (K'&ZCGPR GT 2).ZG6Q                           01797700
                   AIF   ('&ZCGPR' EQ '0').ZG6Q                         01797800
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  01797900
                   AIF   (T'&ZCGPR NE 'N').ZG6Q  INVALID REG NAME       01798000
.ZG6P              ANOP  ,                                              01798100
                   AIF   (T'&ZCGPR NE 'N').ZG6R  NON NUMERIC            01798200
                   AIF   ('&ZCGPR' LT '2').ZG6Q                         01798300
                   AIF   ('&ZCGPR' LE '12').ZG6R                        01798400
.ZG6Q              ANOP  ,                                              01798500
&ZMS               SETC  '"PRODNAME='           *KGPRA* MNOTE           01798600
&ZMS               SETC  '&ZMS.&PRODNAME"'                              01798700
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      01798800
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               01798900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        01799000
.ZG6R              ANOP  ,                                              01799100
.*----------------------------------------------------------------***   01799200
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     01799300
                   AIF   (N'&PRODVERS LE 1).ZG9A  CK NUM                01799400
&ZMS               SETC  '"PRODVERS='           *KPOSA* MNOTE           01799500
&ZMS               SETC  '&ZMS.&PRODVERS"'                              01799600
&ZMS               SETC  '&ZMS "PRODVERS"'                              01799700
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            01799800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        01799900
.ZG9A              ANOP  ,                                              01800000
.*-------------------------------------------------------------------   01800100
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         01800200
&ZXPRODVERS        SETC  'INPUT'     SET IN/OUTPUT                      01800300
&XPRODVERS         SETC  'NONE'                                         01800400
                   AIF   (K'&PRODVERS(1) LE 0).ZG9B  PARM               01800500
&XPRODVERS         SETC  '&PRODVERS(1)'         SET XVARIABLE           01800600
                   AIF   (N'&PRODVERS GT 1).ZG9B  MULTI PARMS           01800700
&XPRODVERS         SETC  '&PRODVERS'            SET XVARIABLE           01800800
.ZG9B              ANOP  ,                                              01800900
.*-------------------------------------------------------------------   01801000
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    01801100
                   AIF   (K'&ZXPRODVERS LE 0).ZG9R  NOT I/O             01801200
                   AIF   ('&XPRODVERS'(1,1) NE '(').ZG9R                01801300
&ZCGPR             SETC  '&XPRODVERS'(2,K'&XPRODVERS-2)                 01801400
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG9P                    01801500
                   AIF   (K'&ZCGPR GT 2).ZG9Q                           01801600
                   AIF   ('&ZCGPR' EQ '0').ZG9Q                         01801700
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  01801800
                   AIF   (T'&ZCGPR NE 'N').ZG9Q  INVALID REG NAME       01801900
.ZG9P              ANOP  ,                                              01802000
                   AIF   (T'&ZCGPR NE 'N').ZG9R  NON NUMERIC            01802100
                   AIF   ('&ZCGPR' LT '2').ZG9Q                         01802200
                   AIF   ('&ZCGPR' LE '12').ZG9R                        01802300
.ZG9Q              ANOP  ,                                              01802400
&ZMS               SETC  '"PRODVERS='           *KGPRA* MNOTE           01802500
&ZMS               SETC  '&ZMS.&PRODVERS"'                              01802600
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      01802700
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               01802800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        01802900
.ZG9R              ANOP  ,                                              01803000
.*----------------------------------------------------------------***   01803100
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     01803200
                   AIF   (N'&PRODQUAL LE 1).ZG10A  CK NUM               01803300
&ZMS               SETC  '"PRODQUAL='           *KPOSA* MNOTE           01803400
&ZMS               SETC  '&ZMS.&PRODQUAL"'                              01803500
&ZMS               SETC  '&ZMS "PRODQUAL"'                              01803600
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            01803700
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        01803800
.ZG10A             ANOP  ,                                              01803900
.*-------------------------------------------------------------------   01804000
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         01804100
&ZXPRODQUAL        SETC  'INPUT'     SET IN/OUTPUT                      01804200
&XPRODQUAL         SETC  'NONE'                                         01804300
                   AIF   (K'&PRODQUAL(1) LE 0).ZG10B  PARM              01804400
&XPRODQUAL         SETC  '&PRODQUAL(1)'         SET XVARIABLE           01804500
                   AIF   (N'&PRODQUAL GT 1).ZG10B  MULTI PARMS          01804600
&XPRODQUAL         SETC  '&PRODQUAL'            SET XVARIABLE           01804700
.ZG10B             ANOP  ,                                              01804800
.*-------------------------------------------------------------------   01804900
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    01805000
                   AIF   (K'&ZXPRODQUAL LE 0).ZG10R  NOT I/O            01805100
                   AIF   ('&XPRODQUAL'(1,1) NE '(').ZG10R               01805200
&ZCGPR             SETC  '&XPRODQUAL'(2,K'&XPRODQUAL-2)                 01805300
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG10P                   01805400
                   AIF   (K'&ZCGPR GT 2).ZG10Q                          01805500
                   AIF   ('&ZCGPR' EQ '0').ZG10Q                        01805600
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  01805700
                   AIF   (T'&ZCGPR NE 'N').ZG10Q  INVALID REG NAME      01805800
.ZG10P             ANOP  ,                                              01805900
                   AIF   (T'&ZCGPR NE 'N').ZG10R  NON NUMERIC           01806000
                   AIF   ('&ZCGPR' LT '2').ZG10Q                        01806100
                   AIF   ('&ZCGPR' LE '12').ZG10R                       01806200
.ZG10Q             ANOP  ,                                              01806300
&ZMS               SETC  '"PRODQUAL='           *KGPRA* MNOTE           01806400
&ZMS               SETC  '&ZMS.&PRODQUAL"'                              01806500
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      01806600
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               01806700
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        01806800
.ZG10R             ANOP  ,                                              01806900
.*----------------------------------------------------------------***   01807000
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     01807100
                   AIF   (N'&PRODID LE 1).ZG11A  CK NUM                 01807200
&ZMS               SETC  '"PRODID='  *KPOSA* MNOTE                      01807300
&ZMS               SETC  '&ZMS.&PRODID"'                                01807400
&ZMS               SETC  '&ZMS "PRODID"'                                01807500
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            01807600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        01807700
.ZG11A             ANOP  ,                                              01807800
.*-------------------------------------------------------------------   01807900
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         01808000
&ZXPRODID          SETC  'INPUT'     SET IN/OUTPUT                      01808100
&XPRODID           SETC  'NONE'                                         01808200
                   AIF   (K'&PRODID(1) LE 0).ZG11B  PARM                01808300
&XPRODID           SETC  '&PRODID(1)'           SET XVARIABLE           01808400
                   AIF   (N'&PRODID GT 1).ZG11B  MULTI PARMS            01808500
&XPRODID           SETC  '&PRODID'   SET XVARIABLE                      01808600
.ZG11B             ANOP  ,                                              01808700
.*-------------------------------------------------------------------   01808800
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    01808900
                   AIF   (K'&ZXPRODID LE 0).ZG11R  NOT I/O              01809000
                   AIF   ('&XPRODID'(1,1) NE '(').ZG11R                 01809100
&ZCGPR             SETC  '&XPRODID'(2,K'&XPRODID-2)                     01809200
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG11P                   01809300
                   AIF   (K'&ZCGPR GT 2).ZG11Q                          01809400
                   AIF   ('&ZCGPR' EQ '0').ZG11Q                        01809500
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  01809600
                   AIF   (T'&ZCGPR NE 'N').ZG11Q  INVALID REG NAME      01809700
.ZG11P             ANOP  ,                                              01809800
                   AIF   (T'&ZCGPR NE 'N').ZG11R  NON NUMERIC           01809900
                   AIF   ('&ZCGPR' LT '2').ZG11Q                        01810000
                   AIF   ('&ZCGPR' LE '12').ZG11R                       01810100
.ZG11Q             ANOP  ,                                              01810200
&ZMS               SETC  '"PRODID='  *KGPRA* MNOTE                      01810300
&ZMS               SETC  '&ZMS.&PRODID"'                                01810400
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      01810500
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               01810600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        01810700
.ZG11R             ANOP  ,                                              01810800
.*------------------------------------------------------------------    01810900
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01811000
&XDOMAIN           SETC  ''          INITIALIZE XVARIABLE               01811100
.*-------------------------------------------------------------------   01811200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01811300
.ZG15              ANOP  ,                                              01811400
                   AIF   (K'&DOMAIN(1) LE 0).ZG15A                      01811500
&ZTLC              SETC 'ADDRSP'                                        01811600
                   AIF   ('&DOMAIN(1)' NE '&ZTLC').ZG16                 01811700
&XDOMAIN           SETC  'ADDRSP'    SET KEYWORD                        01811800
                   AIF   (N'&DOMAIN LE 1).ZG15A  CK NUM                 01811900
&ZMS               SETC  '"DOMAIN='  *KPOSA* MNOTE                      01812000
&ZMS               SETC  '&ZMS.&DOMAIN"'                                01812100
&ZMS               SETC  '&ZMS "DOMAIN"'                                01812200
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            01812300
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        01812400
.ZG15A             ANOP  ,                                              01812500
.*------------------------------------------------------------------    01812600
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01812700
&ZCVAL             SETC ''           CLEAR ERROR KEY ACCUMULATOR        01812800
.ZG15A0            AIF   (K'&SCOPE LE 0).ZG15A1  OK                     01812900
&ZCVAL             SETC '&ZCVAL SCOPE'          INCORRECT KEY USED      01813000
.ZG15A1            AIF   (K'&ZCVAL LE 0).ZG15A2  OK                     01813100
&ZCVAL             SETC '&ZCVAL'(2,K'&ZCVAL-1)                          01813200
&ZMS               SETC  '"DOMAIN'   *KMEIA* MNOTE                      01813300
&ZMS               SETC  '&ZMS.=&DOMAIN"'                               01813400
&ZMS               SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'           01813500
                   MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'           01813600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        01813700
.ZG15A2            ANOP  ,                                              01813800
.*-------------------------------------------------------------------   01813900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01814000
.ZG16              ANOP  ,                                              01814100
&ZTLC              SETC 'TASK'                                          01814200
                   AIF   ('&DOMAIN(1)' NE '&ZTLC').ZG22                 01814300
&XDOMAIN           SETC  'TASK'      SET KEYWORD                        01814400
                   AIF   (N'&DOMAIN LE 1).ZG16A  CK NUM                 01814500
&ZMS               SETC  '"DOMAIN='  *KPOSA* MNOTE                      01814600
&ZMS               SETC  '&ZMS.&DOMAIN"'                                01814700
&ZMS               SETC  '&ZMS "DOMAIN"'                                01814800
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            01814900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        01815000
.ZG16A             ANOP  ,                                              01815100
.*----------------------------------------------------------------***   01815200
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01815300
                   AIF   (N'&SCOPE LE 1).ZG18A  CK NUM                  01815400
&ZMS               SETC  '"SCOPE='   *KPOSA* MNOTE                      01815500
&ZMS               SETC  '&ZMS.&SCOPE"'                                 01815600
&ZMS               SETC  '&ZMS "SCOPE"'                                 01815700
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            01815800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        01815900
.ZG18A             ANOP  ,                                              01816000
.*-------------------------------------------------------------------   01816100
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01816200
&XSCOPE            SETC  ''          INITIALIZE XVARIABLE               01816300
.ZG19A   AIF   ('&SCOPE(1)' NE 'ALL').ZG20A                             01816400
&XSCOPE            SETC  'ALL'       SET KEYWORD                        01816500
.*-------------------------------------------------------------------   01816600
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01816700
.ZG20A   AIF   ('&SCOPE(1)' NE 'FUNCTION').ZG21A                        01816800
&XSCOPE            SETC  'FUNCTION'  SET KEYWORD                        01816900
.*-------------------------------------------------------------------   01817000
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01817100
.ZG21A             AIF   (K'&XSCOPE GT 0).ZG21C  KEYWORD                01817200
                   AIF   (K'&SCOPE(1) LE 0).ZG21B                       01817300
&ZMS               SETC  '"SCOPE='   *KUKWA* MNOTE                      01817400
&ZMS               SETC  '&ZMS.&SCOPE"'                                 01817500
&ZMS               SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '      01817600
&ZMS               SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'            01817700
&ZMS               SETC  '&ZMS "ALL"'           VALID KEYWORD           01817800
&ZMS               SETC  '&ZMS OR "FUNCTION".'  VALID KEYWORD           01817900
                   MNOTE 8,' &ZMS '                                     01818000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        01818100
.ZG21B             ANOP  ,                                              01818200
&XSCOPE            SETC  'ALL'       SET DEFAULT KEYWORD                01818300
.ZG21C             ANOP  ,                                              01818400
&ZXSCOPE           SETC  'INPUT'     SET IN/OUTPUT                      01818500
.*------------------------------------------------------------------    01818600
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01818700
.ZG22              ANOP  ,                                              01818800
&ZXDOMAIN          SETC  'INPUT'     SET IN/OUTPUT                      01818900
                   AIF   (K'&XDOMAIN GT 0).ZG22E  VALID ARG             01819000
                   AIF   (T'&DOMAIN EQ 'O').ZG22D  OMITTED              01819100
&ZASYSLNDX         SETA  0                                              01819200
.ZG22A             ANOP  ,           POSITIONAL MACRO KEY               01819300
&ZASYSLNDX         SETA  &ZASYSLNDX+1                                   01819400
                   AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG22C               01819500
&ZTLC              SETC 'DOMAIN'                                        01819600
                   AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG22A      01819700
.ZG22B             ANOP  ,                                              01819800
&ZXDOMAIN          SETC  ''          RESET IN/OUTPUT                    01819900
&ZMS               SETC  'THE "DOMAIN" KEY'     *KOPTA* MNOTE           01820000
&ZMS               SETC  '&ZMS MUST CONTAIN ONE'                        01820100
                   MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'               01820200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        01820300
                   AGO   .ZG22E                                         01820400
.ZG22C             ANOP  ,                                              01820500
&ZXDOMAIN          SETC  ''          RESET IN/OUTPUT                    01820600
&ZMS               SETC  '"DOMAIN='  *KUKWA* MNOTE                      01820700
&ZMS               SETC  '&ZMS.&DOMAIN"'                                01820800
&ZMS               SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '      01820900
&ZMS               SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'            01821000
&ZMS               SETC  '&ZMS "ADDRSP"'        VALID KEYWORD           01821100
&ZMS               SETC  '&ZMS OR "TASK".'      VALID KEYWORD           01821200
                   MNOTE 8,' &ZMS '                                     01821300
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        01821400
                   AGO   .ZG22E                                         01821500
.ZG22D             ANOP  ,                                              01821600
&XDOMAIN           SETC  'ADDRSP'    SET DEFAULT KEYWORD                01821700
.ZG22E             ANOP  ,                                              01821800
.*----------------------------------------------------------------***   01821900
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    01822000
                   AIF   (N'&PRTOKEN LE 1).ZG24A  CK NUM                01822100
&ZMS               SETC  '"PRTOKEN='            *KPOSA* MNOTE           01822200
&ZMS               SETC  '&ZMS.&PRTOKEN"'                               01822300
&ZMS               SETC  '&ZMS "PRTOKEN"'                               01822400
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            01822500
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        01822600
.ZG24A             ANOP  ,                                              01822700
.*-------------------------------------------------------------------   01822800
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        01822900
                   AIF   (K'&PRTOKEN(1) LE 0).ZG24C  NO PARM            01823000
&ZXPRTOKEN         SETC  'OUTPUT'    SET OUTPUT                         01823100
&XPRTOKEN          SETC  '&PRTOKEN(1)'          SET XVARIABLE           01823200
                   AIF   (N'&PRTOKEN GT 1).ZG24C                        01823300
&XPRTOKEN          SETC  '&PRTOKEN'  SET XVARIABLE                      01823400
.ZG24C             ANOP  ,                                              01823500
.*-------------------------------------------------------------------   01823600
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   01823700
                   AIF   (K'&ZXPRTOKEN LE 0).ZG24R  NOT I/O             01823800
                   AIF   ('&XPRTOKEN'(1,1) NE '(').ZG24R                01823900
&ZCGPR             SETC  '&XPRTOKEN'(2,K'&XPRTOKEN-2)                   01824000
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG24P                   01824100
                   AIF   (K'&ZCGPR GT 2).ZG24Q                          01824200
                   AIF   ('&ZCGPR' EQ '0').ZG24Q                        01824300
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  01824400
                   AIF   (T'&ZCGPR NE 'N').ZG24Q  INVALID REG NAME      01824500
.ZG24P             ANOP  ,                                              01824600
                   AIF   (T'&ZCGPR NE 'N').ZG24R  NON NUMERIC           01824700
                   AIF   ('&ZCGPR' LT '2').ZG24Q                        01824800
                   AIF   ('&ZCGPR' LE '12').ZG24R                       01824900
.ZG24Q             ANOP  ,                                              01825000
&ZMS               SETC  '"PRTOKEN='            *KGPRA* MNOTE           01825100
&ZMS               SETC  '&ZMS.&PRTOKEN"'                               01825200
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      01825300
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               01825400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        01825500
.ZG24R             ANOP  ,                                              01825600
.*----------------------------------------------------------------***   01825700
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01825800
                   AIF   (N'&LINKAGE LE 1).ZG27A  CK NUM                01825900
&ZMS               SETC  '"LINKAGE='            *KPOSA* MNOTE           01826000
&ZMS               SETC  '&ZMS.&LINKAGE"'                               01826100
&ZMS               SETC  '&ZMS "LINKAGE"'                               01826200
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            01826300
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        01826400
.ZG27A             ANOP  ,                                              01826500
.*-------------------------------------------------------------------   01826600
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01826700
&XLINKAGE          SETC  ''          INITIALIZE XVARIABLE               01826800
.ZG28A   AIF   ('&LINKAGE(1)' NE 'SVC').ZG29A                           01826900
&XLINKAGE          SETC  'SVC'       SET KEYWORD                        01827000
.*-------------------------------------------------------------------   01827100
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01827200
.ZG29A   AIF   ('&LINKAGE(1)' NE 'BRANCH').ZG30A                        01827300
&XLINKAGE          SETC  'BRANCH'    SET KEYWORD                        01827400
.*-------------------------------------------------------------------   01827500
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01827600
.ZG30A             AIF   (K'&XLINKAGE GT 0).ZG30C  KEYWORD              01827700
                   AIF   (K'&LINKAGE(1) LE 0).ZG30B                     01827800
&ZMS               SETC  '"LINKAGE='            *KUKWA* MNOTE           01827900
&ZMS               SETC  '&ZMS.&LINKAGE"'                               01828000
&ZMS               SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '      01828100
&ZMS               SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'            01828200
&ZMS               SETC  '&ZMS "SVC"'           VALID KEYWORD           01828300
&ZMS               SETC  '&ZMS OR "BRANCH".'    VALID KEYWORD           01828400
                   MNOTE 8,' &ZMS '                                     01828500
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        01828600
.ZG30B             ANOP  ,                                              01828700
&XLINKAGE          SETC  'SVC'       SET DEFAULT KEYWORD                01828800
.ZG30C             ANOP  ,                                              01828900
&ZXLINKAGE         SETC  'INPUT'     SET IN/OUTPUT                      01829000
.*-------------------------------------------------------------------   01829100
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           01829200
.ZG31              ANOP  ,                                              01829300
&ZTLC              SETC 'DEREGISTER'                                    01829400
                   AIF   ('&REQUEST(1)' NE '&ZTLC').ZG53                01829500
&XREQUEST          SETC  'DEREGISTER'           SET KEYWORD             01829600
                   AIF   (N'&REQUEST LE 1).ZG31A  CK NUM                01829700
&ZMS               SETC  '"REQUEST='            *KPOSA* MNOTE           01829800
&ZMS               SETC  '&ZMS.&REQUEST"'                               01829900
&ZMS               SETC  '&ZMS "REQUEST"'                               01830000
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            01830100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        01830200
.ZG31A             ANOP  ,                                              01830300
.*------------------------------------------------------------------    01830400
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           01830500
&ZCVAL             SETC ''           CLEAR ERROR KEY ACCUMULATOR        01830600
.ZG31A0            AIF   (K'&DOMAIN LE 0).ZG31A1  OK                    01830700
&ZCVAL             SETC '&ZCVAL DOMAIN'         INCORRECT KEY USED      01830800
.ZG31A1            AIF   (K'&SCOPE LE 0).ZG31A2  OK                     01830900
&ZCVAL             SETC '&ZCVAL SCOPE'          INCORRECT KEY USED      01831000
.ZG31A2            AIF   (K'&BEGTIME LE 0).ZG31A3  OK                   01831100
&ZCVAL             SETC '&ZCVAL BEGTIME'        INCORRECT KEY USED      01831200
.ZG31A3            AIF   (K'&DATA LE 0).ZG31A4  OK                      01831300
&ZCVAL             SETC '&ZCVAL DATA'           INCORRECT KEY USED      01831400
.ZG31A4            AIF   (K'&FORMAT LE 0).ZG31A5  OK                    01831500
&ZCVAL             SETC '&ZCVAL FORMAT'         INCORRECT KEY USED      01831600
.ZG31A5            AIF   (K'&CURRENTDATA LE 0).ZG31A6  OK               01831700
&ZCVAL             SETC '&ZCVAL CURRENTDATA'    INCORRECT KEY USED      01831800
.ZG31A6            AIF   (K'&ZCVAL LE 0).ZG31A7  OK                     01831900
&ZCVAL             SETC '&ZCVAL'(2,K'&ZCVAL-1)                          01832000
&ZMS               SETC  '"REQUEST'  *KMEIA* MNOTE                      01832100
&ZMS               SETC  '&ZMS.=&REQUEST"'                              01832200
&ZMS               SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'           01832300
                   MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'           01832400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        01832500
.ZG31A7            ANOP  ,                                              01832600
.*----------------------------------------------------------------***   01832700
.***AG.KMEKY01 NAME, RQD INPUT, ME KEYS -XVARIABLE                      01832800
&XDEREGPRODNAME    SETC  ''          INITIALIZE XVARIABLE               01832900
                   AIF   (K'&PRODOWNER LE 0).ZG33C                      01833000
&ZXDEREGPRODNAME   SETC  'INPUT'     SET IN/OUTPUT                      01833100
&XDEREGPRODNAME    SETC  'PRODOWNER'            SET XVARIABLE           01833200
&ZXPRODOWNER       SETC  'INPUT'     SET IN/OUTPUT                      01833300
&XPRODOWNER        SETC  '&PRODOWNER(1)'        SET XVARIABLE PARM      01833400
                   AIF   (N'&PRODOWNER GT 1).ZG33A  MULTIPLE PARMS      01833500
&XPRODOWNER        SETC  '&PRODOWNER'           SET XVARIABLE PARM      01833600
.ZG33A             AIF   (N'&PRODOWNER LE 1).ZG33B  CK NUM              01833700
&ZMS               SETC  '"PRODOWNER='          *KPOSA* MNOTE           01833800
&ZMS               SETC  '&ZMS.&PRODOWNER"'                             01833900
&ZMS               SETC  '&ZMS "PRODOWNER"'                             01834000
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            01834100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        01834200
.ZG33B             AIF   (K'&XPRODOWNER GT 0).ZG33C  ONE PARM           01834300
&ZXDEREGPRODNAME   SETC  ''          RESET IN/OUTPUT                    01834400
&ZXPRODOWNER       SETC  ''          RESET IN/OUTPUT                    01834500
&ZMS               SETC  ' '         *KRQDA*                            01834600
&ZMS               SETC  '&ZMS "PRODOWNER" KEY AND ITS ARGUMENT'        01834700
                   MNOTE 8,' &ZMS ARE REQUIRED.'                        01834800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        01834900
.ZG33C             ANOP  ,                                              01835000
.*----------------------------------------------------------------***   01835100
.***AG.KMEKY02 NAME, RQD INPUT, ME KEYS -XVARIABLE                      01835200
                   AIF   (K'&PRTOKEN LE 0).ZG42D  NO ME KEY             01835300
                   AIF   (N'&PRTOKEN LE 1).ZG42A  CK NUM                01835400
&ZMS               SETC  '"PRTOKEN='            *KPOSA* MNOTE           01835500
&ZMS               SETC  '&ZMS.&PRTOKEN"'                               01835600
&ZMS               SETC  '&ZMS "PRTOKEN"'                               01835700
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            01835800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        01835900
.ZG42A             AIF   (K'&XDEREGPRODNAME LE 0).ZG42B                 01836000
&ZMS               SETC  '"PRTOKEN'  *KMEKA* MNOTE                      01836100
&ZMS               SETC  '&ZMS.=&PRTOKEN"'                              01836200
&ZMS               SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'          01836300
&ZMS               SETC  '&ZMS "&XDEREGPRODNAME"'                       01836400
                   MNOTE 8,' &ZMS KEY.'                                 01836500
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        01836600
                   AGO   .ZG42D                                         01836700
.*                                                                      01900000
.ZG42B             ANOP  ,                                              01900400
&ZXDEREGPRODNAME   SETC  'INPUT'     SET IN/OUTPUT                      01900800
&XDEREGPRODNAME    SETC  'PRTOKEN'   SET XVARIABLE                      01901200
&ZXPRTOKEN         SETC  'INPUT'     SET IN/OUTPUT                      01901600
&XPRTOKEN          SETC  '&PRTOKEN(1)'          SET XVARIABLE PARM      01902000
                   AIF   (N'&PRTOKEN GT 1).ZG42C  MULTIPLE PARMS        01902400
&XPRTOKEN          SETC  '&PRTOKEN'  SET XVARIABLE PARM                 01902800
.ZG42C             AIF   (K'&XPRTOKEN GT 0).ZG42D  ONE PARM             01903200
&ZXDEREGPRODNAME   SETC  ''          RESET IN/OUTPUT                    01903600
&ZXPRTOKEN         SETC  ''          RESET IN/OUTPUT                    01904000
&ZMS               SETC  ' '         *KRQDA*                            01904400
&ZMS               SETC  '&ZMS "PRTOKEN" KEY AND ITS ARGUMENT'          01904800
                   MNOTE 8,' &ZMS ARE REQUIRED.'                        01905200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        01905600
.ZG42D             ANOP  ,                                              01906000
.*------------------------------------------------------------------    01906400
.***AG.KME4Y09 NAME, RQD INPUT, ME KEYS -CHECK IF KEY ENTERED           01906800
                   AIF   (K'&XDEREGPRODNAME GT 0).ZG43B                 01907200
&ZXDEREGPRODNAME   SETC  ''          RESET IN/OUTPUT                    01907600
&ZXPRODOWNER       SETC  ''          RESET IN/OUTPUT                    01908000
&XDEREGPRODNAME    SETC  ''          ENSURE NULL                        01908400
&XPRODOWNER        SETC  ''          ENSURE NULL                        01908800
&ZMS               SETC  'ONE OF THE FOLLOWING'  *KMERA* MNOTE          01909200
&ZMS               SETC  '&ZMS MUTUALLY EXCLUSIVE KEY(S) IS'            01909600
&ZMS               SETC  '&ZMS REQUIRED:'                               01910000
&ZMS               SETC  '&ZMS "PRODOWNER"'     VALID ME KEY            01910400
&ZMS               SETC  '&ZMS OR "PRTOKEN".'   VALID ME KEY            01910800
                   MNOTE 8,' &ZMS '                                     01911200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        01911600
.ZG43B             ANOP  ,                                              01912000
.*-------------------------------------------------------------------   01912400
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           01912800
.ZG33              AIF   ('&XDEREGPRODNAME' NE 'PRODOWNER').ZG42        01913200
.*-------------------------------------------------------------------   01913600
.***AG.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 01914000
                   AIF   (K'&ZXPRODOWNER LE 0).ZG33R  NOT I/O           01914400
                   AIF   ('&XPRODOWNER'(1,1) NE '(').ZG33R              01914800
&ZCGPR             SETC  '&XPRODOWNER'(2,K'&XPRODOWNER-2)               01915200
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG33P                   01915600
                   AIF   (K'&ZCGPR GT 2).ZG33Q                          01916000
                   AIF   ('&ZCGPR' EQ '0').ZG33Q                        01916400
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  01916800
                   AIF   (T'&ZCGPR NE 'N').ZG33Q  INVALID REG NAME      01917200
.ZG33P             ANOP  ,                                              01917600
                   AIF   (T'&ZCGPR NE 'N').ZG33R  NON NUMERIC           01918000
                   AIF   ('&ZCGPR' LT '2').ZG33Q                        01918400
                   AIF   ('&ZCGPR' LE '12').ZG33R                       01918800
.ZG33Q             ANOP  ,                                              01919200
&ZMS               SETC  '"PRODOWNER='          *KGPRA* MNOTE           01919600
&ZMS               SETC  '&ZMS.&PRODOWNER"'                             01920000
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      01920400
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               01920800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        01921200
.ZG33R             ANOP  ,                                              01921600
.*----------------------------------------------------------------***   01922000
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     01922400
                   AIF   (N'&PRODNAME LE 1).ZG35A  CK NUM               01922800
&ZMS               SETC  '"PRODNAME='           *KPOSA* MNOTE           01923200
&ZMS               SETC  '&ZMS.&PRODNAME"'                              01923600
&ZMS               SETC  '&ZMS "PRODNAME"'                              01924000
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            01924400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        01924800
.ZG35A             ANOP  ,                                              01925200
.*-------------------------------------------------------------------   01925600
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         01926000
&ZXPRODNAME        SETC  'INPUT'     SET IN/OUTPUT                      01926400
&XPRODNAME         SETC  '&PRODNAME(1)'         SET XVARIABLE           01926800
                   AIF   (N'&PRODNAME GT 1).ZG35B  MULTI PARMS          01927200
&XPRODNAME         SETC  '&PRODNAME'            SET XVARIABLE           01927600
.ZG35B             AIF   (K'&PRODNAME(1) GT 0).ZG35C                    01928000
&ZXPRODNAME        SETC  ''          RESET IN/OUTPUT                    01928400
&ZMS               SETC  ' '         *KRQDA*                            01928800
&ZMS               SETC  '&ZMS "PRODNAME" KEY AND ITS ARGUMENT'         01929200
                   MNOTE 8,' &ZMS ARE REQUIRED.'                        01929600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        01930000
.ZG35C             ANOP  ,                                              01930400
.*-------------------------------------------------------------------   01930800
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    01931200
                   AIF   (K'&ZXPRODNAME LE 0).ZG35R  NOT I/O            01931600
                   AIF   ('&XPRODNAME'(1,1) NE '(').ZG35R               01932000
&ZCGPR             SETC  '&XPRODNAME'(2,K'&XPRODNAME-2)                 01932400
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG35P                   01932800
                   AIF   (K'&ZCGPR GT 2).ZG35Q                          01933200
                   AIF   ('&ZCGPR' EQ '0').ZG35Q                        01933600
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  01934000
                   AIF   (T'&ZCGPR NE 'N').ZG35Q  INVALID REG NAME      01934400
.ZG35P             ANOP  ,                                              01934800
                   AIF   (T'&ZCGPR NE 'N').ZG35R  NON NUMERIC           01935200
                   AIF   ('&ZCGPR' LT '2').ZG35Q                        01935600
                   AIF   ('&ZCGPR' LE '12').ZG35R                       01936000
.ZG35Q             ANOP  ,                                              01936400
&ZMS               SETC  '"PRODNAME='           *KGPRA* MNOTE           01936800
&ZMS               SETC  '&ZMS.&PRODNAME"'                              01937200
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      01937600
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               01938000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        01938400
.ZG35R             ANOP  ,                                              01938800
.*----------------------------------------------------------------***   01939200
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     01939600
                   AIF   (N'&PRODVERS LE 1).ZG38A  CK NUM               01940000
&ZMS               SETC  '"PRODVERS='           *KPOSA* MNOTE           01940400
&ZMS               SETC  '&ZMS.&PRODVERS"'                              01940800
&ZMS               SETC  '&ZMS "PRODVERS"'                              01941200
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            01941600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        01942000
.ZG38A             ANOP  ,                                              01942400
.*-------------------------------------------------------------------   01942800
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         01943200
&ZXPRODVERS        SETC  'INPUT'     SET IN/OUTPUT                      01943600
&XPRODVERS         SETC  'NONE'                                         01944000
                   AIF   (K'&PRODVERS(1) LE 0).ZG38B  PARM              01944400
&XPRODVERS         SETC  '&PRODVERS(1)'         SET XVARIABLE           01944800
                   AIF   (N'&PRODVERS GT 1).ZG38B  MULTI PARMS          01945200
&XPRODVERS         SETC  '&PRODVERS'            SET XVARIABLE           01945600
.ZG38B             ANOP  ,                                              01946000
.*-------------------------------------------------------------------   01946400
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    01946800
                   AIF   (K'&ZXPRODVERS LE 0).ZG38R  NOT I/O            01947200
                   AIF   ('&XPRODVERS'(1,1) NE '(').ZG38R               01947600
&ZCGPR             SETC  '&XPRODVERS'(2,K'&XPRODVERS-2)                 01948000
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG38P                   01948400
                   AIF   (K'&ZCGPR GT 2).ZG38Q                          01948800
                   AIF   ('&ZCGPR' EQ '0').ZG38Q                        01949200
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  01949600
                   AIF   (T'&ZCGPR NE 'N').ZG38Q  INVALID REG NAME      01950000
.ZG38P             ANOP  ,                                              01950400
                   AIF   (T'&ZCGPR NE 'N').ZG38R  NON NUMERIC           01950800
                   AIF   ('&ZCGPR' LT '2').ZG38Q                        01951200
                   AIF   ('&ZCGPR' LE '12').ZG38R                       01951600
.ZG38Q             ANOP  ,                                              01952000
&ZMS               SETC  '"PRODVERS='           *KGPRA* MNOTE           01952400
&ZMS               SETC  '&ZMS.&PRODVERS"'                              01952800
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      01953200
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               01953600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        01954000
.ZG38R             ANOP  ,                                              01954400
.*----------------------------------------------------------------***   01954800
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     01955200
                   AIF   (N'&PRODQUAL LE 1).ZG39A  CK NUM               01955600
&ZMS               SETC  '"PRODQUAL='           *KPOSA* MNOTE           01956000
&ZMS               SETC  '&ZMS.&PRODQUAL"'                              01956400
&ZMS               SETC  '&ZMS "PRODQUAL"'                              01956800
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            01957200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        01957600
.ZG39A             ANOP  ,                                              01958000
.*-------------------------------------------------------------------   01958400
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         01958800
&ZXPRODQUAL        SETC  'INPUT'     SET IN/OUTPUT                      01959200
&XPRODQUAL         SETC  'NONE'                                         01959600
                   AIF   (K'&PRODQUAL(1) LE 0).ZG39B  PARM              01960000
&XPRODQUAL         SETC  '&PRODQUAL(1)'         SET XVARIABLE           01960400
                   AIF   (N'&PRODQUAL GT 1).ZG39B  MULTI PARMS          01960800
&XPRODQUAL         SETC  '&PRODQUAL'            SET XVARIABLE           01961200
.ZG39B             ANOP  ,                                              01961600
.*-------------------------------------------------------------------   01962000
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    01962400
                   AIF   (K'&ZXPRODQUAL LE 0).ZG39R  NOT I/O            01962800
                   AIF   ('&XPRODQUAL'(1,1) NE '(').ZG39R               01963200
&ZCGPR             SETC  '&XPRODQUAL'(2,K'&XPRODQUAL-2)                 01963600
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG39P                   01964000
                   AIF   (K'&ZCGPR GT 2).ZG39Q                          01964400
                   AIF   ('&ZCGPR' EQ '0').ZG39Q                        01964800
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  01965200
                   AIF   (T'&ZCGPR NE 'N').ZG39Q  INVALID REG NAME      01965600
.ZG39P             ANOP  ,                                              01966000
                   AIF   (T'&ZCGPR NE 'N').ZG39R  NON NUMERIC           01966400
                   AIF   ('&ZCGPR' LT '2').ZG39Q                        01966800
                   AIF   ('&ZCGPR' LE '12').ZG39R                       01967200
.ZG39Q             ANOP  ,                                              01967600
&ZMS               SETC  '"PRODQUAL='           *KGPRA* MNOTE           01968000
&ZMS               SETC  '&ZMS.&PRODQUAL"'                              01968400
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      01968800
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               01969200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        01969600
.ZG39R             ANOP  ,                                              01970000
.*----------------------------------------------------------------***   01970400
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     01970800
                   AIF   (N'&PRODID LE 1).ZG40A  CK NUM                 01971200
&ZMS               SETC  '"PRODID='  *KPOSA* MNOTE                      01971600
&ZMS               SETC  '&ZMS.&PRODID"'                                01972000
&ZMS               SETC  '&ZMS "PRODID"'                                01972400
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            01972800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        01973200
.ZG40A             ANOP  ,                                              01973600
.*-------------------------------------------------------------------   01974000
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         01974400
&ZXPRODID          SETC  'INPUT'     SET IN/OUTPUT                      01974800
&XPRODID           SETC  'NONE'                                         01975200
                   AIF   (K'&PRODID(1) LE 0).ZG40B  PARM                01975600
&XPRODID           SETC  '&PRODID(1)'           SET XVARIABLE           01976000
                   AIF   (N'&PRODID GT 1).ZG40B  MULTI PARMS            01976400
&XPRODID           SETC  '&PRODID'   SET XVARIABLE                      01976800
.ZG40B             ANOP  ,                                              01977200
.*-------------------------------------------------------------------   01977600
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    01978000
                   AIF   (K'&ZXPRODID LE 0).ZG40R  NOT I/O              01978400
                   AIF   ('&XPRODID'(1,1) NE '(').ZG40R                 01978800
&ZCGPR             SETC  '&XPRODID'(2,K'&XPRODID-2)                     01979200
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG40P                   01979600
                   AIF   (K'&ZCGPR GT 2).ZG40Q                          01980000
                   AIF   ('&ZCGPR' EQ '0').ZG40Q                        01980400
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  01980800
                   AIF   (T'&ZCGPR NE 'N').ZG40Q  INVALID REG NAME      01981200
.ZG40P             ANOP  ,                                              01981600
                   AIF   (T'&ZCGPR NE 'N').ZG40R  NON NUMERIC           01982000
                   AIF   ('&ZCGPR' LT '2').ZG40Q                        01982400
                   AIF   ('&ZCGPR' LE '12').ZG40R                       01982800
.ZG40Q             ANOP  ,                                              01983200
&ZMS               SETC  '"PRODID='  *KGPRA* MNOTE                      01983600
&ZMS               SETC  '&ZMS.&PRODID"'                                01984000
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      01984400
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               01984800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        01985200
.ZG40R             ANOP  ,                                              01985600
.*-------------------------------------------------------------------   01986000
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           01986400
.ZG42              AIF   ('&XDEREGPRODNAME' NE 'PRTOKEN').ZG43          01986800
.*-------------------------------------------------------------------   01987200
.***AG.KMEKY14 NAME, RQD INPUT, ME KEYS -DISALLOWED KEYS                01987600
&ZCVAL             SETC ''           ERROR KEY FIELD                    01988000
.ZG42I0            AIF   (K'&PRODNAME LE 0).ZG42I1                      01988400
&ZCVAL             SETC '&ZCVAL PRODNAME'       DISALLOWED KEY          01988800
.ZG42I1            AIF   (K'&PRODVERS LE 0).ZG42I2                      01989200
&ZCVAL             SETC '&ZCVAL PRODVERS'       DISALLOWED KEY          01989600
.ZG42I2            AIF   (K'&PRODQUAL LE 0).ZG42I3                      01990000
&ZCVAL             SETC '&ZCVAL PRODQUAL'       DISALLOWED KEY          01990400
.ZG42I3            AIF   (K'&PRODID LE 0).ZG42I4                        01990800
&ZCVAL             SETC '&ZCVAL PRODID'         DISALLOWED KEY          01991200
.ZG42I4            AIF   (K'&ZCVAL LE 0).ZG42J  KEY                     01991600
&ZCVAL             SETC '&ZCVAL'(2,K'&ZCVAL-1)                          01992000
&ZMS               SETC  '"PRTOKEN'  *KMEIA* MNOTE                      01992400
&ZMS               SETC  '&ZMS.=&PRTOKEN"'                              01992800
&ZMS               SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'           01993200
                   MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'           01993600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        01994000
.ZG42J             ANOP  ,                                              01994400
.*-------------------------------------------------------------------   01994800
.***AG.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 01995200
                   AIF   (K'&ZXPRTOKEN LE 0).ZG42R  NOT I/O             01995600
                   AIF   ('&XPRTOKEN'(1,1) NE '(').ZG42R                01996000
&ZCGPR             SETC  '&XPRTOKEN'(2,K'&XPRTOKEN-2)                   01996400
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG42P                   01996800
                   AIF   (K'&ZCGPR GT 2).ZG42Q                          01997200
                   AIF   ('&ZCGPR' EQ '0').ZG42Q                        01997600
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  01998000
                   AIF   (T'&ZCGPR NE 'N').ZG42Q  INVALID REG NAME      01998400
.ZG42P             ANOP  ,                                              01998800
                   AIF   (T'&ZCGPR NE 'N').ZG42R  NON NUMERIC           01999200
                   AIF   ('&ZCGPR' LT '2').ZG42Q                        01999600
                   AIF   ('&ZCGPR' LE '12').ZG42R                       02000000
.ZG42Q             ANOP  ,                                              02000400
&ZMS               SETC  '"PRTOKEN='            *KGPRA* MNOTE           02000800
&ZMS               SETC  '&ZMS.&PRTOKEN"'                               02001200
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      02001600
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               02002000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        02002400
.ZG42R             ANOP  ,                                              02002800
.*-------------------------------------------------------------------   02003200
.***AG.KMEKY15 NAME, RQD INPUT, ME KEYS -END                            02003600
.ZG43              ANOP  ,           END MUTUALLY EXCLUSIVE KEYS        02004000
.*----------------------------------------------------------------***   02004400
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    02004800
                   AIF   (N'&ENDTIME LE 1).ZG45A  CK NUM                02005200
&ZMS               SETC  '"ENDTIME='            *KPOSA* MNOTE           02005600
&ZMS               SETC  '&ZMS.&ENDTIME"'                               02006000
&ZMS               SETC  '&ZMS "ENDTIME"'                               02006400
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            02006800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        02007200
.ZG45A             ANOP  ,                                              02007600
.*-------------------------------------------------------------------   02008000
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        02008400
                   AIF   (K'&ENDTIME(1) LE 0).ZG45C  NO PARM            02008800
&ZXENDTIME         SETC  'OUTPUT'    SET OUTPUT                         02009200
&XENDTIME          SETC  '&ENDTIME(1)'          SET XVARIABLE           02009600
                   AIF   (N'&ENDTIME GT 1).ZG45C                        02010000
&XENDTIME          SETC  '&ENDTIME'  SET XVARIABLE                      02010400
.ZG45C             ANOP  ,                                              02010800
.*-------------------------------------------------------------------   02011200
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   02011600
                   AIF   (K'&ZXENDTIME LE 0).ZG45R  NOT I/O             02012000
                   AIF   ('&XENDTIME'(1,1) NE '(').ZG45R                02012400
&ZCGPR             SETC  '&XENDTIME'(2,K'&XENDTIME-2)                   02012800
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG45P                   02013200
                   AIF   (K'&ZCGPR GT 2).ZG45Q                          02013600
                   AIF   ('&ZCGPR' EQ '0').ZG45Q                        02014000
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  02014400
                   AIF   (T'&ZCGPR NE 'N').ZG45Q  INVALID REG NAME      02014800
.ZG45P             ANOP  ,                                              02015200
                   AIF   (T'&ZCGPR NE 'N').ZG45R  NON NUMERIC           02015600
                   AIF   ('&ZCGPR' LT '2').ZG45Q                        02016000
                   AIF   ('&ZCGPR' LE '12').ZG45R                       02016400
.ZG45Q             ANOP  ,                                              02016800
&ZMS               SETC  '"ENDTIME='            *KGPRA* MNOTE           02017200
&ZMS               SETC  '&ZMS.&ENDTIME"'                               02017600
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      02018000
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               02018400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        02018800
.ZG45R             ANOP  ,                                              02019200
.*----------------------------------------------------------------***   02019600
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    02020000
                   AIF   (N'&ENDDATA LE 1).ZG46A  CK NUM                02020400
&ZMS               SETC  '"ENDDATA='            *KPOSA* MNOTE           02020800
&ZMS               SETC  '&ZMS.&ENDDATA"'                               02021200
&ZMS               SETC  '&ZMS "ENDDATA"'                               02021600
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            02022000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        02022400
.ZG46A             ANOP  ,                                              02022800
.*-------------------------------------------------------------------   02023200
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        02023600
                   AIF   (K'&ENDDATA(1) LE 0).ZG46C  NO PARM            02024000
&ZXENDDATA         SETC  'OUTPUT'    SET OUTPUT                         02024400
&XENDDATA          SETC  '&ENDDATA(1)'          SET XVARIABLE           02024800
                   AIF   (N'&ENDDATA GT 1).ZG46C                        02025200
&XENDDATA          SETC  '&ENDDATA'  SET XVARIABLE                      02025600
.ZG46C             ANOP  ,                                              02026000
.*-------------------------------------------------------------------   02026400
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   02026800
                   AIF   (K'&ZXENDDATA LE 0).ZG46R  NOT I/O             02027200
                   AIF   ('&XENDDATA'(1,1) NE '(').ZG46R                02027600
&ZCGPR             SETC  '&XENDDATA'(2,K'&XENDDATA-2)                   02028000
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG46P                   02028400
                   AIF   (K'&ZCGPR GT 2).ZG46Q                          02028800
                   AIF   ('&ZCGPR' EQ '0').ZG46Q                        02029200
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  02029600
                   AIF   (T'&ZCGPR NE 'N').ZG46Q  INVALID REG NAME      02030000
.ZG46P             ANOP  ,                                              02030400
                   AIF   (T'&ZCGPR NE 'N').ZG46R  NON NUMERIC           02030800
                   AIF   ('&ZCGPR' LT '2').ZG46Q                        02031200
                   AIF   ('&ZCGPR' LE '12').ZG46R                       02031600
.ZG46Q             ANOP  ,                                              02032000
&ZMS               SETC  '"ENDDATA='            *KGPRA* MNOTE           02032400
&ZMS               SETC  '&ZMS.&ENDDATA"'                               02032800
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      02033200
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               02033600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        02034000
.ZG46R             ANOP  ,                                              02034400
.*----------------------------------------------------------------***   02034800
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02035200
                   AIF   (N'&LINKAGE LE 1).ZG49A  CK NUM                02035600
&ZMS               SETC  '"LINKAGE='            *KPOSA* MNOTE           02036000
&ZMS               SETC  '&ZMS.&LINKAGE"'                               02036400
&ZMS               SETC  '&ZMS "LINKAGE"'                               02036800
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            02037200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        02037600
.ZG49A             ANOP  ,                                              02038000
.*-------------------------------------------------------------------   02038400
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02038800
&XLINKAGE          SETC  ''          INITIALIZE XVARIABLE               02039200
.ZG50A   AIF   ('&LINKAGE(1)' NE 'SVC').ZG51A                           02039600
&XLINKAGE          SETC  'SVC'       SET KEYWORD                        02040000
.*-------------------------------------------------------------------   02040400
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02040800
.ZG51A   AIF   ('&LINKAGE(1)' NE 'BRANCH').ZG52A                        02041200
&XLINKAGE          SETC  'BRANCH'    SET KEYWORD                        02041600
.*-------------------------------------------------------------------   02042000
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02042400
.ZG52A             AIF   (K'&XLINKAGE GT 0).ZG52C  KEYWORD              02042800
                   AIF   (K'&LINKAGE(1) LE 0).ZG52B                     02043200
&ZMS               SETC  '"LINKAGE='            *KUKWA* MNOTE           02043600
&ZMS               SETC  '&ZMS.&LINKAGE"'                               02044000
&ZMS               SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '      02044400
&ZMS               SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'            02044800
&ZMS               SETC  '&ZMS "SVC"'           VALID KEYWORD           02045200
&ZMS               SETC  '&ZMS OR "BRANCH".'    VALID KEYWORD           02045600
                   MNOTE 8,' &ZMS '                                     02046000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        02046400
.ZG52B             ANOP  ,                                              02046800
&XLINKAGE          SETC  'SVC'       SET DEFAULT KEYWORD                02047200
.ZG52C             ANOP  ,                                              02047600
&ZXLINKAGE         SETC  'INPUT'     SET IN/OUTPUT                      02048000
.*-------------------------------------------------------------------   02048400
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           02048800
.ZG53              ANOP  ,                                              02049200
&ZTLC              SETC 'FUNCTIONBEGIN'                                 02049600
                   AIF   ('&REQUEST(1)' NE '&ZTLC').ZG74                02050000
&XREQUEST          SETC  'FUNCTIONBEGIN'        SET KEYWORD             02050400
                   AIF   (N'&REQUEST LE 1).ZG53A  CK NUM                02050800
&ZMS               SETC  '"REQUEST='            *KPOSA* MNOTE           02051200
&ZMS               SETC  '&ZMS.&REQUEST"'                               02051600
&ZMS               SETC  '&ZMS "REQUEST"'                               02052000
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            02052400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        02052800
.ZG53A             ANOP  ,                                              02053200
.*------------------------------------------------------------------    02053600
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           02054000
&ZCVAL             SETC ''           CLEAR ERROR KEY ACCUMULATOR        02054400
.ZG53A0            AIF   (K'&DOMAIN LE 0).ZG53A1  OK                    02054800
&ZCVAL             SETC '&ZCVAL DOMAIN'         INCORRECT KEY USED      02055200
.ZG53A1            AIF   (K'&SCOPE LE 0).ZG53A2  OK                     02055600
&ZCVAL             SETC '&ZCVAL SCOPE'          INCORRECT KEY USED      02056000
.ZG53A2            AIF   (K'&ENDTIME LE 0).ZG53A3  OK                   02056400
&ZCVAL             SETC '&ZCVAL ENDTIME'        INCORRECT KEY USED      02056800
.ZG53A3            AIF   (K'&ENDDATA LE 0).ZG53A4  OK                   02057200
&ZCVAL             SETC '&ZCVAL ENDDATA'        INCORRECT KEY USED      02057600
.ZG53A4            AIF   (K'&DATA LE 0).ZG53A5  OK                      02058000
&ZCVAL             SETC '&ZCVAL DATA'           INCORRECT KEY USED      02058400
.ZG53A5            AIF   (K'&FORMAT LE 0).ZG53A6  OK                    02058800
&ZCVAL             SETC '&ZCVAL FORMAT'         INCORRECT KEY USED      02059200
.ZG53A6            AIF   (K'&CURRENTDATA LE 0).ZG53A7  OK               02059600
&ZCVAL             SETC '&ZCVAL CURRENTDATA'    INCORRECT KEY USED      02060000
.ZG53A7            AIF   (K'&ZCVAL LE 0).ZG53A8  OK                     02060400
&ZCVAL             SETC '&ZCVAL'(2,K'&ZCVAL-1)                          02060800
&ZMS               SETC  '"REQUEST'  *KMEIA* MNOTE                      02061200
&ZMS               SETC  '&ZMS.=&REQUEST"'                              02061600
&ZMS               SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'           02062000
                   MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'           02062400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        02062800
.ZG53A8            ANOP  ,                                              02063200
.*----------------------------------------------------------------***   02063600
.***AG.KMEKY01 NAME, RQD INPUT, ME KEYS -XVARIABLE                      02064000
&XBEGINPRODNAME    SETC  ''          INITIALIZE XVARIABLE               02064400
                   AIF   (K'&PRODOWNER LE 0).ZG55C                      02064800
&ZXBEGINPRODNAME   SETC  'INPUT'     SET IN/OUTPUT                      02065200
&XBEGINPRODNAME    SETC  'PRODOWNER'            SET XVARIABLE           02065600
&ZXPRODOWNER       SETC  'INPUT'     SET IN/OUTPUT                      02066000
&XPRODOWNER        SETC  '&PRODOWNER(1)'        SET XVARIABLE PARM      02066400
                   AIF   (N'&PRODOWNER GT 1).ZG55A  MULTIPLE PARMS      02066800
&XPRODOWNER        SETC  '&PRODOWNER'           SET XVARIABLE PARM      02067200
.ZG55A             AIF   (N'&PRODOWNER LE 1).ZG55B  CK NUM              02067600
&ZMS               SETC  '"PRODOWNER='          *KPOSA* MNOTE           02068000
&ZMS               SETC  '&ZMS.&PRODOWNER"'                             02068400
&ZMS               SETC  '&ZMS "PRODOWNER"'                             02068800
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            02069200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        02069600
.ZG55B             AIF   (K'&XPRODOWNER GT 0).ZG55C  ONE PARM           02070000
&ZXBEGINPRODNAME   SETC  ''          RESET IN/OUTPUT                    02070400
&ZXPRODOWNER       SETC  ''          RESET IN/OUTPUT                    02070800
&ZMS               SETC  ' '         *KRQDA*                            02071200
&ZMS               SETC  '&ZMS "PRODOWNER" KEY AND ITS ARGUMENT'        02071600
                   MNOTE 8,' &ZMS ARE REQUIRED.'                        02072000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        02072400
.ZG55C             ANOP  ,                                              02072800
.*----------------------------------------------------------------***   02073200
.***AG.KMEKY02 NAME, RQD INPUT, ME KEYS -XVARIABLE                      02073600
                   AIF   (K'&PRTOKEN LE 0).ZG64D  NO ME KEY             02074000
                   AIF   (N'&PRTOKEN LE 1).ZG64A  CK NUM                02074400
&ZMS               SETC  '"PRTOKEN='            *KPOSA* MNOTE           02074800
&ZMS               SETC  '&ZMS.&PRTOKEN"'                               02075200
&ZMS               SETC  '&ZMS "PRTOKEN"'                               02075600
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            02076000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        02076400
.ZG64A             AIF   (K'&XBEGINPRODNAME LE 0).ZG64B                 02076800
&ZMS               SETC  '"PRTOKEN'  *KMEKA* MNOTE                      02077200
&ZMS               SETC  '&ZMS.=&PRTOKEN"'                              02077600
&ZMS               SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'          02078000
&ZMS               SETC  '&ZMS "&XBEGINPRODNAME"'                       02078400
                   MNOTE 8,' &ZMS KEY.'                                 02078800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        02079200
                   AGO   .ZG64D                                         02079600
.*                                                                      02100000
.ZG64B             ANOP  ,                                              02100300
&ZXBEGINPRODNAME   SETC  'INPUT'     SET IN/OUTPUT                      02100600
&XBEGINPRODNAME    SETC  'PRTOKEN'   SET XVARIABLE                      02100900
&ZXPRTOKEN         SETC  'INPUT'     SET IN/OUTPUT                      02101200
&XPRTOKEN          SETC  '&PRTOKEN(1)'          SET XVARIABLE PARM      02101500
                   AIF   (N'&PRTOKEN GT 1).ZG64C  MULTIPLE PARMS        02101800
&XPRTOKEN          SETC  '&PRTOKEN'  SET XVARIABLE PARM                 02102100
.ZG64C             AIF   (K'&XPRTOKEN GT 0).ZG64D  ONE PARM             02102400
&ZXBEGINPRODNAME   SETC  ''          RESET IN/OUTPUT                    02102700
&ZXPRTOKEN         SETC  ''          RESET IN/OUTPUT                    02103000
&ZMS               SETC  ' '         *KRQDA*                            02103300
&ZMS               SETC  '&ZMS "PRTOKEN" KEY AND ITS ARGUMENT'          02103600
                   MNOTE 8,' &ZMS ARE REQUIRED.'                        02103900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        02104200
.ZG64D             ANOP  ,                                              02104500
.*------------------------------------------------------------------    02104800
.***AG.KME4Y09 NAME, RQD INPUT, ME KEYS -CHECK IF KEY ENTERED           02105100
                   AIF   (K'&XBEGINPRODNAME GT 0).ZG65B                 02105400
&ZXBEGINPRODNAME   SETC  ''          RESET IN/OUTPUT                    02105700
&ZXPRODOWNER       SETC  ''          RESET IN/OUTPUT                    02106000
&XBEGINPRODNAME    SETC  ''          ENSURE NULL                        02106300
&XPRODOWNER        SETC  ''          ENSURE NULL                        02106600
&ZMS               SETC  'ONE OF THE FOLLOWING'  *KMERA* MNOTE          02106900
&ZMS               SETC  '&ZMS MUTUALLY EXCLUSIVE KEY(S) IS'            02107200
&ZMS               SETC  '&ZMS REQUIRED:'                               02107500
&ZMS               SETC  '&ZMS "PRODOWNER"'     VALID ME KEY            02107800
&ZMS               SETC  '&ZMS OR "PRTOKEN".'   VALID ME KEY            02108100
                   MNOTE 8,' &ZMS '                                     02108400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        02108700
.ZG65B             ANOP  ,                                              02109000
.*-------------------------------------------------------------------   02109300
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           02109600
.ZG55              AIF   ('&XBEGINPRODNAME' NE 'PRODOWNER').ZG64        02109900
.*-------------------------------------------------------------------   02110200
.***AG.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 02110500
                   AIF   (K'&ZXPRODOWNER LE 0).ZG55R  NOT I/O           02110800
                   AIF   ('&XPRODOWNER'(1,1) NE '(').ZG55R              02111100
&ZCGPR             SETC  '&XPRODOWNER'(2,K'&XPRODOWNER-2)               02111400
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG55P                   02111700
                   AIF   (K'&ZCGPR GT 2).ZG55Q                          02112000
                   AIF   ('&ZCGPR' EQ '0').ZG55Q                        02112300
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  02112600
                   AIF   (T'&ZCGPR NE 'N').ZG55Q  INVALID REG NAME      02112900
.ZG55P             ANOP  ,                                              02113200
                   AIF   (T'&ZCGPR NE 'N').ZG55R  NON NUMERIC           02113500
                   AIF   ('&ZCGPR' LT '2').ZG55Q                        02113800
                   AIF   ('&ZCGPR' LE '12').ZG55R                       02114100
.ZG55Q             ANOP  ,                                              02114400
&ZMS               SETC  '"PRODOWNER='          *KGPRA* MNOTE           02114700
&ZMS               SETC  '&ZMS.&PRODOWNER"'                             02115000
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      02115300
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               02115600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        02115900
.ZG55R             ANOP  ,                                              02116200
.*----------------------------------------------------------------***   02116500
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     02116800
                   AIF   (N'&PRODNAME LE 1).ZG57A  CK NUM               02117100
&ZMS               SETC  '"PRODNAME='           *KPOSA* MNOTE           02117400
&ZMS               SETC  '&ZMS.&PRODNAME"'                              02117700
&ZMS               SETC  '&ZMS "PRODNAME"'                              02118000
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            02118300
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        02118600
.ZG57A             ANOP  ,                                              02118900
.*-------------------------------------------------------------------   02119200
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         02119500
&ZXPRODNAME        SETC  'INPUT'     SET IN/OUTPUT                      02119800
&XPRODNAME         SETC  '&PRODNAME(1)'         SET XVARIABLE           02120100
                   AIF   (N'&PRODNAME GT 1).ZG57B  MULTI PARMS          02120400
&XPRODNAME         SETC  '&PRODNAME'            SET XVARIABLE           02120700
.ZG57B             AIF   (K'&PRODNAME(1) GT 0).ZG57C                    02121000
&ZXPRODNAME        SETC  ''          RESET IN/OUTPUT                    02121300
&ZMS               SETC  ' '         *KRQDA*                            02121600
&ZMS               SETC  '&ZMS "PRODNAME" KEY AND ITS ARGUMENT'         02121900
                   MNOTE 8,' &ZMS ARE REQUIRED.'                        02122200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        02122500
.ZG57C             ANOP  ,                                              02122800
.*-------------------------------------------------------------------   02123100
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    02123400
                   AIF   (K'&ZXPRODNAME LE 0).ZG57R  NOT I/O            02123700
                   AIF   ('&XPRODNAME'(1,1) NE '(').ZG57R               02124000
&ZCGPR             SETC  '&XPRODNAME'(2,K'&XPRODNAME-2)                 02124300
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG57P                   02124600
                   AIF   (K'&ZCGPR GT 2).ZG57Q                          02124900
                   AIF   ('&ZCGPR' EQ '0').ZG57Q                        02125200
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  02125500
                   AIF   (T'&ZCGPR NE 'N').ZG57Q  INVALID REG NAME      02125800
.ZG57P             ANOP  ,                                              02126100
                   AIF   (T'&ZCGPR NE 'N').ZG57R  NON NUMERIC           02126400
                   AIF   ('&ZCGPR' LT '2').ZG57Q                        02126700
                   AIF   ('&ZCGPR' LE '12').ZG57R                       02127000
.ZG57Q             ANOP  ,                                              02127300
&ZMS               SETC  '"PRODNAME='           *KGPRA* MNOTE           02127600
&ZMS               SETC  '&ZMS.&PRODNAME"'                              02127900
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      02128200
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               02128500
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        02128800
.ZG57R             ANOP  ,                                              02129100
.*----------------------------------------------------------------***   02129400
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     02129700
                   AIF   (N'&PRODVERS LE 1).ZG60A  CK NUM               02130000
&ZMS               SETC  '"PRODVERS='           *KPOSA* MNOTE           02130300
&ZMS               SETC  '&ZMS.&PRODVERS"'                              02130600
&ZMS               SETC  '&ZMS "PRODVERS"'                              02130900
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            02131200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        02131500
.ZG60A             ANOP  ,                                              02131800
.*-------------------------------------------------------------------   02132100
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         02132400
&ZXPRODVERS        SETC  'INPUT'     SET IN/OUTPUT                      02132700
&XPRODVERS         SETC  'NONE'                                         02133000
                   AIF   (K'&PRODVERS(1) LE 0).ZG60B  PARM              02133300
&XPRODVERS         SETC  '&PRODVERS(1)'         SET XVARIABLE           02133600
                   AIF   (N'&PRODVERS GT 1).ZG60B  MULTI PARMS          02133900
&XPRODVERS         SETC  '&PRODVERS'            SET XVARIABLE           02134200
.ZG60B             ANOP  ,                                              02134500
.*-------------------------------------------------------------------   02134800
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    02135100
                   AIF   (K'&ZXPRODVERS LE 0).ZG60R  NOT I/O            02135400
                   AIF   ('&XPRODVERS'(1,1) NE '(').ZG60R               02135700
&ZCGPR             SETC  '&XPRODVERS'(2,K'&XPRODVERS-2)                 02136000
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG60P                   02136300
                   AIF   (K'&ZCGPR GT 2).ZG60Q                          02136600
                   AIF   ('&ZCGPR' EQ '0').ZG60Q                        02136900
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  02137200
                   AIF   (T'&ZCGPR NE 'N').ZG60Q  INVALID REG NAME      02137500
.ZG60P             ANOP  ,                                              02137800
                   AIF   (T'&ZCGPR NE 'N').ZG60R  NON NUMERIC           02138100
                   AIF   ('&ZCGPR' LT '2').ZG60Q                        02138400
                   AIF   ('&ZCGPR' LE '12').ZG60R                       02138700
.ZG60Q             ANOP  ,                                              02139000
&ZMS               SETC  '"PRODVERS='           *KGPRA* MNOTE           02139300
&ZMS               SETC  '&ZMS.&PRODVERS"'                              02139600
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      02139900
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               02140200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        02140500
.ZG60R             ANOP  ,                                              02140800
.*----------------------------------------------------------------***   02141100
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     02141400
                   AIF   (N'&PRODQUAL LE 1).ZG61A  CK NUM               02141700
&ZMS               SETC  '"PRODQUAL='           *KPOSA* MNOTE           02142000
&ZMS               SETC  '&ZMS.&PRODQUAL"'                              02142300
&ZMS               SETC  '&ZMS "PRODQUAL"'                              02142600
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            02142900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        02143200
.ZG61A             ANOP  ,                                              02143500
.*-------------------------------------------------------------------   02143800
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         02144100
&ZXPRODQUAL        SETC  'INPUT'     SET IN/OUTPUT                      02144400
&XPRODQUAL         SETC  'NONE'                                         02144700
                   AIF   (K'&PRODQUAL(1) LE 0).ZG61B  PARM              02145000
&XPRODQUAL         SETC  '&PRODQUAL(1)'         SET XVARIABLE           02145300
                   AIF   (N'&PRODQUAL GT 1).ZG61B  MULTI PARMS          02145600
&XPRODQUAL         SETC  '&PRODQUAL'            SET XVARIABLE           02145900
.ZG61B             ANOP  ,                                              02146200
.*-------------------------------------------------------------------   02146500
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    02146800
                   AIF   (K'&ZXPRODQUAL LE 0).ZG61R  NOT I/O            02147100
                   AIF   ('&XPRODQUAL'(1,1) NE '(').ZG61R               02147400
&ZCGPR             SETC  '&XPRODQUAL'(2,K'&XPRODQUAL-2)                 02147700
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG61P                   02148000
                   AIF   (K'&ZCGPR GT 2).ZG61Q                          02148300
                   AIF   ('&ZCGPR' EQ '0').ZG61Q                        02148600
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  02148900
                   AIF   (T'&ZCGPR NE 'N').ZG61Q  INVALID REG NAME      02149200
.ZG61P             ANOP  ,                                              02149500
                   AIF   (T'&ZCGPR NE 'N').ZG61R  NON NUMERIC           02149800
                   AIF   ('&ZCGPR' LT '2').ZG61Q                        02150100
                   AIF   ('&ZCGPR' LE '12').ZG61R                       02150400
.ZG61Q             ANOP  ,                                              02150700
&ZMS               SETC  '"PRODQUAL='           *KGPRA* MNOTE           02151000
&ZMS               SETC  '&ZMS.&PRODQUAL"'                              02151300
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      02151600
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               02151900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        02152200
.ZG61R             ANOP  ,                                              02152500
.*----------------------------------------------------------------***   02152800
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     02153100
                   AIF   (N'&PRODID LE 1).ZG62A  CK NUM                 02153400
&ZMS               SETC  '"PRODID='  *KPOSA* MNOTE                      02153700
&ZMS               SETC  '&ZMS.&PRODID"'                                02154000
&ZMS               SETC  '&ZMS "PRODID"'                                02154300
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            02154600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        02154900
.ZG62A             ANOP  ,                                              02155200
.*-------------------------------------------------------------------   02155500
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         02155800
&ZXPRODID          SETC  'INPUT'     SET IN/OUTPUT                      02156100
&XPRODID           SETC  'NONE'                                         02156400
                   AIF   (K'&PRODID(1) LE 0).ZG62B  PARM                02156700
&XPRODID           SETC  '&PRODID(1)'           SET XVARIABLE           02157000
                   AIF   (N'&PRODID GT 1).ZG62B  MULTI PARMS            02157300
&XPRODID           SETC  '&PRODID'   SET XVARIABLE                      02157600
.ZG62B             ANOP  ,                                              02157900
.*-------------------------------------------------------------------   02158200
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    02158500
                   AIF   (K'&ZXPRODID LE 0).ZG62R  NOT I/O              02158800
                   AIF   ('&XPRODID'(1,1) NE '(').ZG62R                 02159100
&ZCGPR             SETC  '&XPRODID'(2,K'&XPRODID-2)                     02159400
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG62P                   02159700
                   AIF   (K'&ZCGPR GT 2).ZG62Q                          02160000
                   AIF   ('&ZCGPR' EQ '0').ZG62Q                        02160300
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  02160600
                   AIF   (T'&ZCGPR NE 'N').ZG62Q  INVALID REG NAME      02160900
.ZG62P             ANOP  ,                                              02161200
                   AIF   (T'&ZCGPR NE 'N').ZG62R  NON NUMERIC           02161500
                   AIF   ('&ZCGPR' LT '2').ZG62Q                        02161800
                   AIF   ('&ZCGPR' LE '12').ZG62R                       02162100
.ZG62Q             ANOP  ,                                              02162400
&ZMS               SETC  '"PRODID='  *KGPRA* MNOTE                      02162700
&ZMS               SETC  '&ZMS.&PRODID"'                                02163000
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      02163300
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               02163600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        02163900
.ZG62R             ANOP  ,                                              02164200
.*-------------------------------------------------------------------   02164500
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           02164800
.ZG64              AIF   ('&XBEGINPRODNAME' NE 'PRTOKEN').ZG65          02165100
.*-------------------------------------------------------------------   02165400
.***AG.KMEKY14 NAME, RQD INPUT, ME KEYS -DISALLOWED KEYS                02165700
&ZCVAL             SETC ''           ERROR KEY FIELD                    02166000
.ZG64I0            AIF   (K'&PRODNAME LE 0).ZG64I1                      02166300
&ZCVAL             SETC '&ZCVAL PRODNAME'       DISALLOWED KEY          02166600
.ZG64I1            AIF   (K'&PRODVERS LE 0).ZG64I2                      02166900
&ZCVAL             SETC '&ZCVAL PRODVERS'       DISALLOWED KEY          02167200
.ZG64I2            AIF   (K'&PRODQUAL LE 0).ZG64I3                      02167500
&ZCVAL             SETC '&ZCVAL PRODQUAL'       DISALLOWED KEY          02167800
.ZG64I3            AIF   (K'&PRODID LE 0).ZG64I4                        02168100
&ZCVAL             SETC '&ZCVAL PRODID'         DISALLOWED KEY          02168400
.ZG64I4            AIF   (K'&ZCVAL LE 0).ZG64J  KEY                     02168700
&ZCVAL             SETC '&ZCVAL'(2,K'&ZCVAL-1)                          02169000
&ZMS               SETC  '"PRTOKEN'  *KMEIA* MNOTE                      02169300
&ZMS               SETC  '&ZMS.=&PRTOKEN"'                              02169600
&ZMS               SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'           02169900
                   MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'           02170200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        02170500
.ZG64J             ANOP  ,                                              02170800
.*-------------------------------------------------------------------   02171100
.***AG.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 02171400
                   AIF   (K'&ZXPRTOKEN LE 0).ZG64R  NOT I/O             02171700
                   AIF   ('&XPRTOKEN'(1,1) NE '(').ZG64R                02172000
&ZCGPR             SETC  '&XPRTOKEN'(2,K'&XPRTOKEN-2)                   02172300
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG64P                   02172600
                   AIF   (K'&ZCGPR GT 2).ZG64Q                          02172900
                   AIF   ('&ZCGPR' EQ '0').ZG64Q                        02173200
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  02173500
                   AIF   (T'&ZCGPR NE 'N').ZG64Q  INVALID REG NAME      02173800
.ZG64P             ANOP  ,                                              02174100
                   AIF   (T'&ZCGPR NE 'N').ZG64R  NON NUMERIC           02174400
                   AIF   ('&ZCGPR' LT '2').ZG64Q                        02174700
                   AIF   ('&ZCGPR' LE '12').ZG64R                       02175000
.ZG64Q             ANOP  ,                                              02175300
&ZMS               SETC  '"PRTOKEN='            *KGPRA* MNOTE           02175600
&ZMS               SETC  '&ZMS.&PRTOKEN"'                               02175900
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      02176200
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               02176500
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        02176800
.ZG64R             ANOP  ,                                              02177100
.*-------------------------------------------------------------------   02177400
.***AG.KMEKY15 NAME, RQD INPUT, ME KEYS -END                            02177700
.ZG65              ANOP  ,           END MUTUALLY EXCLUSIVE KEYS        02178000
.*----------------------------------------------------------------***   02178300
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    02178600
                   AIF   (N'&BEGTIME LE 1).ZG67A  CK NUM                02178900
&ZMS               SETC  '"BEGTIME='            *KPOSA* MNOTE           02179200
&ZMS               SETC  '&ZMS.&BEGTIME"'                               02179500
&ZMS               SETC  '&ZMS "BEGTIME"'                               02179800
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            02180100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        02180400
.ZG67A             ANOP  ,                                              02180700
.*-------------------------------------------------------------------   02181000
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        02181300
                   AIF   (K'&BEGTIME(1) LE 0).ZG67C  NO PARM            02181600
&ZXBEGTIME         SETC  'OUTPUT'    SET OUTPUT                         02181900
&XBEGTIME          SETC  '&BEGTIME(1)'          SET XVARIABLE           02182200
                   AIF   (N'&BEGTIME GT 1).ZG67C                        02182500
&XBEGTIME          SETC  '&BEGTIME'  SET XVARIABLE                      02182800
.ZG67C             ANOP  ,                                              02183100
.*-------------------------------------------------------------------   02183400
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   02183700
                   AIF   (K'&ZXBEGTIME LE 0).ZG67R  NOT I/O             02184000
                   AIF   ('&XBEGTIME'(1,1) NE '(').ZG67R                02184300
&ZCGPR             SETC  '&XBEGTIME'(2,K'&XBEGTIME-2)                   02184600
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG67P                   02184900
                   AIF   (K'&ZCGPR GT 2).ZG67Q                          02185200
                   AIF   ('&ZCGPR' EQ '0').ZG67Q                        02185500
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  02185800
                   AIF   (T'&ZCGPR NE 'N').ZG67Q  INVALID REG NAME      02186100
.ZG67P             ANOP  ,                                              02186400
                   AIF   (T'&ZCGPR NE 'N').ZG67R  NON NUMERIC           02186700
                   AIF   ('&ZCGPR' LT '2').ZG67Q                        02187000
                   AIF   ('&ZCGPR' LE '12').ZG67R                       02187300
.ZG67Q             ANOP  ,                                              02187600
&ZMS               SETC  '"BEGTIME='            *KGPRA* MNOTE           02187900
&ZMS               SETC  '&ZMS.&BEGTIME"'                               02188200
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      02188500
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               02188800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        02189100
.ZG67R             ANOP  ,                                              02189400
.*----------------------------------------------------------------***   02189700
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02190000
                   AIF   (N'&LINKAGE LE 1).ZG70A  CK NUM                02190300
&ZMS               SETC  '"LINKAGE='            *KPOSA* MNOTE           02190600
&ZMS               SETC  '&ZMS.&LINKAGE"'                               02190900
&ZMS               SETC  '&ZMS "LINKAGE"'                               02191200
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            02191500
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        02191800
.ZG70A             ANOP  ,                                              02192100
.*-------------------------------------------------------------------   02192400
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02192700
&XLINKAGE          SETC  ''          INITIALIZE XVARIABLE               02193000
.ZG71A   AIF   ('&LINKAGE(1)' NE 'SVC').ZG72A                           02193300
&XLINKAGE          SETC  'SVC'       SET KEYWORD                        02193600
.*-------------------------------------------------------------------   02193900
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02194200
.ZG72A   AIF   ('&LINKAGE(1)' NE 'BRANCH').ZG73A                        02194500
&XLINKAGE          SETC  'BRANCH'    SET KEYWORD                        02194800
.*-------------------------------------------------------------------   02195100
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02195400
.ZG73A             AIF   (K'&XLINKAGE GT 0).ZG73C  KEYWORD              02195700
                   AIF   (K'&LINKAGE(1) LE 0).ZG73B                     02196000
&ZMS               SETC  '"LINKAGE='            *KUKWA* MNOTE           02196300
&ZMS               SETC  '&ZMS.&LINKAGE"'                               02196600
&ZMS               SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '      02196900
&ZMS               SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'            02197200
&ZMS               SETC  '&ZMS "SVC"'           VALID KEYWORD           02197500
&ZMS               SETC  '&ZMS OR "BRANCH".'    VALID KEYWORD           02197800
                   MNOTE 8,' &ZMS '                                     02198100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        02198400
.ZG73B             ANOP  ,                                              02198700
&XLINKAGE          SETC  'SVC'       SET DEFAULT KEYWORD                02199000
.ZG73C             ANOP  ,                                              02199300
&ZXLINKAGE         SETC  'INPUT'     SET IN/OUTPUT                      02199600
.*-------------------------------------------------------------------   02199900
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           02200200
.ZG74              ANOP  ,                                              02200500
&ZTLC              SETC 'FUNCTIONDATA'                                  02200800
                   AIF   ('&REQUEST(1)' NE '&ZTLC').ZG104               02201100
&XREQUEST          SETC  'FUNCTIONDATA'         SET KEYWORD             02201400
                   AIF   (N'&REQUEST LE 1).ZG74A  CK NUM                02201700
&ZMS               SETC  '"REQUEST='            *KPOSA* MNOTE           02202000
&ZMS               SETC  '&ZMS.&REQUEST"'                               02202300
&ZMS               SETC  '&ZMS "REQUEST"'                               02202600
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            02202900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        02203200
.ZG74A             ANOP  ,                                              02203500
.*------------------------------------------------------------------    02203800
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           02204100
&ZCVAL             SETC ''           CLEAR ERROR KEY ACCUMULATOR        02204400
.ZG74A0            AIF   (K'&DOMAIN LE 0).ZG74A1  OK                    02204700
&ZCVAL             SETC '&ZCVAL DOMAIN'         INCORRECT KEY USED      02205000
.ZG74A1            AIF   (K'&SCOPE LE 0).ZG74A2  OK                     02205300
&ZCVAL             SETC '&ZCVAL SCOPE'          INCORRECT KEY USED      02205600
.ZG74A2            AIF   (K'&ENDTIME LE 0).ZG74A3  OK                   02205900
&ZCVAL             SETC '&ZCVAL ENDTIME'        INCORRECT KEY USED      02206200
.ZG74A3            AIF   (K'&ENDDATA LE 0).ZG74A4  OK                   02206500
&ZCVAL             SETC '&ZCVAL ENDDATA'        INCORRECT KEY USED      02206800
.ZG74A4            AIF   (K'&BEGTIME LE 0).ZG74A5  OK                   02207100
&ZCVAL             SETC '&ZCVAL BEGTIME'        INCORRECT KEY USED      02207400
.ZG74A5            AIF   (K'&ZCVAL LE 0).ZG74A6  OK                     02207700
&ZCVAL             SETC '&ZCVAL'(2,K'&ZCVAL-1)                          02208000
&ZMS               SETC  '"REQUEST'  *KMEIA* MNOTE                      02208300
&ZMS               SETC  '&ZMS.=&REQUEST"'                              02208600
&ZMS               SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'           02208900
                   MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'           02209200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        02209500
.ZG74A6            ANOP  ,                                              02209800
.*----------------------------------------------------------------***   02210100
.***AG.KMEKY01 NAME, RQD INPUT, ME KEYS -XVARIABLE                      02210400
&XDATAPRODNAME     SETC  ''          INITIALIZE XVARIABLE               02210700
                   AIF   (K'&PRODOWNER LE 0).ZG76C                      02211000
&ZXDATAPRODNAME    SETC  'INPUT'     SET IN/OUTPUT                      02211300
&XDATAPRODNAME     SETC  'PRODOWNER'            SET XVARIABLE           02211600
&ZXPRODOWNER       SETC  'INPUT'     SET IN/OUTPUT                      02211900
&XPRODOWNER        SETC  '&PRODOWNER(1)'        SET XVARIABLE PARM      02212200
                   AIF   (N'&PRODOWNER GT 1).ZG76A  MULTIPLE PARMS      02212500
&XPRODOWNER        SETC  '&PRODOWNER'           SET XVARIABLE PARM      02212800
.ZG76A             AIF   (N'&PRODOWNER LE 1).ZG76B  CK NUM              02213100
&ZMS               SETC  '"PRODOWNER='          *KPOSA* MNOTE           02213400
&ZMS               SETC  '&ZMS.&PRODOWNER"'                             02213700
&ZMS               SETC  '&ZMS "PRODOWNER"'                             02214000
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            02214300
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        02214600
.ZG76B             AIF   (K'&XPRODOWNER GT 0).ZG76C  ONE PARM           02214900
&ZXDATAPRODNAME    SETC  ''          RESET IN/OUTPUT                    02215200
&ZXPRODOWNER       SETC  ''          RESET IN/OUTPUT                    02215500
&ZMS               SETC  ' '         *KRQDA*                            02215800
&ZMS               SETC  '&ZMS "PRODOWNER" KEY AND ITS ARGUMENT'        02216100
                   MNOTE 8,' &ZMS ARE REQUIRED.'                        02216400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        02216700
.ZG76C             ANOP  ,                                              02217000
.*----------------------------------------------------------------***   02217300
.***AG.KMEKY02 NAME, RQD INPUT, ME KEYS -XVARIABLE                      02217600
                   AIF   (K'&PRTOKEN LE 0).ZG85D  NO ME KEY             02217900
                   AIF   (N'&PRTOKEN LE 1).ZG85A  CK NUM                02218200
&ZMS               SETC  '"PRTOKEN='            *KPOSA* MNOTE           02218500
&ZMS               SETC  '&ZMS.&PRTOKEN"'                               02218800
&ZMS               SETC  '&ZMS "PRTOKEN"'                               02219100
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            02219400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        02219700
.ZG85A             AIF   (K'&XDATAPRODNAME LE 0).ZG85B                  02220000
&ZMS               SETC  '"PRTOKEN'  *KMEKA* MNOTE                      02220300
&ZMS               SETC  '&ZMS.=&PRTOKEN"'                              02220600
&ZMS               SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'          02220900
&ZMS               SETC  '&ZMS "&XDATAPRODNAME"'                        02221200
                   MNOTE 8,' &ZMS KEY.'                                 02221500
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        02221800
                   AGO   .ZG85D                                         02222100
.*                                                                      02250000
.ZG85B             ANOP  ,                                              02250400
&ZXDATAPRODNAME    SETC  'INPUT'     SET IN/OUTPUT                      02250800
&XDATAPRODNAME     SETC  'PRTOKEN'   SET XVARIABLE                      02251200
&ZXPRTOKEN         SETC  'INPUT'     SET IN/OUTPUT                      02251600
&XPRTOKEN          SETC  '&PRTOKEN(1)'          SET XVARIABLE PARM      02252000
                   AIF   (N'&PRTOKEN GT 1).ZG85C  MULTIPLE PARMS        02252400
&XPRTOKEN          SETC  '&PRTOKEN'  SET XVARIABLE PARM                 02252800
.ZG85C             AIF   (K'&XPRTOKEN GT 0).ZG85D  ONE PARM             02253200
&ZXDATAPRODNAME    SETC  ''          RESET IN/OUTPUT                    02253600
&ZXPRTOKEN         SETC  ''          RESET IN/OUTPUT                    02254000
&ZMS               SETC  ' '         *KRQDA*                            02254400
&ZMS               SETC  '&ZMS "PRTOKEN" KEY AND ITS ARGUMENT'          02254800
                   MNOTE 8,' &ZMS ARE REQUIRED.'                        02255200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        02255600
.ZG85D             ANOP  ,                                              02256000
.*------------------------------------------------------------------    02256400
.***AG.KME4Y09 NAME, RQD INPUT, ME KEYS -CHECK IF KEY ENTERED           02256800
                   AIF   (K'&XDATAPRODNAME GT 0).ZG86B                  02257200
&ZXDATAPRODNAME    SETC  ''          RESET IN/OUTPUT                    02257600
&ZXPRODOWNER       SETC  ''          RESET IN/OUTPUT                    02258000
&XDATAPRODNAME     SETC  ''          ENSURE NULL                        02258400
&XPRODOWNER        SETC  ''          ENSURE NULL                        02258800
&ZMS               SETC  'ONE OF THE FOLLOWING'  *KMERA* MNOTE          02259200
&ZMS               SETC  '&ZMS MUTUALLY EXCLUSIVE KEY(S) IS'            02259600
&ZMS               SETC  '&ZMS REQUIRED:'                               02260000
&ZMS               SETC  '&ZMS "PRODOWNER"'     VALID ME KEY            02260400
&ZMS               SETC  '&ZMS OR "PRTOKEN".'   VALID ME KEY            02260800
                   MNOTE 8,' &ZMS '                                     02261200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        02261600
.ZG86B             ANOP  ,                                              02262000
.*-------------------------------------------------------------------   02262400
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           02262800
.ZG76              AIF   ('&XDATAPRODNAME' NE 'PRODOWNER').ZG85         02263200
.*-------------------------------------------------------------------   02263600
.***AG.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 02264000
                   AIF   (K'&ZXPRODOWNER LE 0).ZG76R  NOT I/O           02264400
                   AIF   ('&XPRODOWNER'(1,1) NE '(').ZG76R              02264800
&ZCGPR             SETC  '&XPRODOWNER'(2,K'&XPRODOWNER-2)               02265200
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG76P                   02265600
                   AIF   (K'&ZCGPR GT 2).ZG76Q                          02266000
                   AIF   ('&ZCGPR' EQ '0').ZG76Q                        02266400
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  02266800
                   AIF   (T'&ZCGPR NE 'N').ZG76Q  INVALID REG NAME      02267200
.ZG76P             ANOP  ,                                              02267600
                   AIF   (T'&ZCGPR NE 'N').ZG76R  NON NUMERIC           02268000
                   AIF   ('&ZCGPR' LT '2').ZG76Q                        02268400
                   AIF   ('&ZCGPR' LE '12').ZG76R                       02268800
.ZG76Q             ANOP  ,                                              02269200
&ZMS               SETC  '"PRODOWNER='          *KGPRA* MNOTE           02269600
&ZMS               SETC  '&ZMS.&PRODOWNER"'                             02270000
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      02270400
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               02270800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        02271200
.ZG76R             ANOP  ,                                              02271600
.*----------------------------------------------------------------***   02272000
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     02272400
                   AIF   (N'&PRODNAME LE 1).ZG78A  CK NUM               02272800
&ZMS               SETC  '"PRODNAME='           *KPOSA* MNOTE           02273200
&ZMS               SETC  '&ZMS.&PRODNAME"'                              02273600
&ZMS               SETC  '&ZMS "PRODNAME"'                              02274000
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            02274400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        02274800
.ZG78A             ANOP  ,                                              02275200
.*-------------------------------------------------------------------   02275600
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         02276000
&ZXPRODNAME        SETC  'INPUT'     SET IN/OUTPUT                      02276400
&XPRODNAME         SETC  '&PRODNAME(1)'         SET XVARIABLE           02276800
                   AIF   (N'&PRODNAME GT 1).ZG78B  MULTI PARMS          02277200
&XPRODNAME         SETC  '&PRODNAME'            SET XVARIABLE           02277600
.ZG78B             AIF   (K'&PRODNAME(1) GT 0).ZG78C                    02278000
&ZXPRODNAME        SETC  ''          RESET IN/OUTPUT                    02278400
&ZMS               SETC  ' '         *KRQDA*                            02278800
&ZMS               SETC  '&ZMS "PRODNAME" KEY AND ITS ARGUMENT'         02279200
                   MNOTE 8,' &ZMS ARE REQUIRED.'                        02279600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        02280000
.ZG78C             ANOP  ,                                              02280400
.*-------------------------------------------------------------------   02280800
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    02281200
                   AIF   (K'&ZXPRODNAME LE 0).ZG78R  NOT I/O            02281600
                   AIF   ('&XPRODNAME'(1,1) NE '(').ZG78R               02282000
&ZCGPR             SETC  '&XPRODNAME'(2,K'&XPRODNAME-2)                 02282400
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG78P                   02282800
                   AIF   (K'&ZCGPR GT 2).ZG78Q                          02283200
                   AIF   ('&ZCGPR' EQ '0').ZG78Q                        02283600
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  02284000
                   AIF   (T'&ZCGPR NE 'N').ZG78Q  INVALID REG NAME      02284400
.ZG78P             ANOP  ,                                              02284800
                   AIF   (T'&ZCGPR NE 'N').ZG78R  NON NUMERIC           02285200
                   AIF   ('&ZCGPR' LT '2').ZG78Q                        02285600
                   AIF   ('&ZCGPR' LE '12').ZG78R                       02286000
.ZG78Q             ANOP  ,                                              02286400
&ZMS               SETC  '"PRODNAME='           *KGPRA* MNOTE           02286800
&ZMS               SETC  '&ZMS.&PRODNAME"'                              02287200
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      02287600
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               02288000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        02288400
.ZG78R             ANOP  ,                                              02288800
.*----------------------------------------------------------------***   02289200
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     02289600
                   AIF   (N'&PRODVERS LE 1).ZG81A  CK NUM               02290000
&ZMS               SETC  '"PRODVERS='           *KPOSA* MNOTE           02290400
&ZMS               SETC  '&ZMS.&PRODVERS"'                              02290800
&ZMS               SETC  '&ZMS "PRODVERS"'                              02291200
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            02291600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        02292000
.ZG81A             ANOP  ,                                              02292400
.*-------------------------------------------------------------------   02292800
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         02293200
&ZXPRODVERS        SETC  'INPUT'     SET IN/OUTPUT                      02293600
&XPRODVERS         SETC  'NONE'                                         02294000
                   AIF   (K'&PRODVERS(1) LE 0).ZG81B  PARM              02294400
&XPRODVERS         SETC  '&PRODVERS(1)'         SET XVARIABLE           02294800
                   AIF   (N'&PRODVERS GT 1).ZG81B  MULTI PARMS          02295200
&XPRODVERS         SETC  '&PRODVERS'            SET XVARIABLE           02295600
.ZG81B             ANOP  ,                                              02296000
.*-------------------------------------------------------------------   02296400
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    02296800
                   AIF   (K'&ZXPRODVERS LE 0).ZG81R  NOT I/O            02297200
                   AIF   ('&XPRODVERS'(1,1) NE '(').ZG81R               02297600
&ZCGPR             SETC  '&XPRODVERS'(2,K'&XPRODVERS-2)                 02298000
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG81P                   02298400
                   AIF   (K'&ZCGPR GT 2).ZG81Q                          02298800
                   AIF   ('&ZCGPR' EQ '0').ZG81Q                        02299200
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  02299600
                   AIF   (T'&ZCGPR NE 'N').ZG81Q  INVALID REG NAME      02300000
.ZG81P             ANOP  ,                                              02300400
                   AIF   (T'&ZCGPR NE 'N').ZG81R  NON NUMERIC           02300800
                   AIF   ('&ZCGPR' LT '2').ZG81Q                        02301200
                   AIF   ('&ZCGPR' LE '12').ZG81R                       02301600
.ZG81Q             ANOP  ,                                              02302000
&ZMS               SETC  '"PRODVERS='           *KGPRA* MNOTE           02302400
&ZMS               SETC  '&ZMS.&PRODVERS"'                              02302800
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      02303200
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               02303600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        02304000
.ZG81R             ANOP  ,                                              02304400
.*----------------------------------------------------------------***   02304800
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     02305200
                   AIF   (N'&PRODQUAL LE 1).ZG82A  CK NUM               02305600
&ZMS               SETC  '"PRODQUAL='           *KPOSA* MNOTE           02306000
&ZMS               SETC  '&ZMS.&PRODQUAL"'                              02306400
&ZMS               SETC  '&ZMS "PRODQUAL"'                              02306800
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            02307200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        02307600
.ZG82A             ANOP  ,                                              02308000
.*-------------------------------------------------------------------   02308400
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         02308800
&ZXPRODQUAL        SETC  'INPUT'     SET IN/OUTPUT                      02309200
&XPRODQUAL         SETC  'NONE'                                         02309600
                   AIF   (K'&PRODQUAL(1) LE 0).ZG82B  PARM              02310000
&XPRODQUAL         SETC  '&PRODQUAL(1)'         SET XVARIABLE           02310400
                   AIF   (N'&PRODQUAL GT 1).ZG82B  MULTI PARMS          02310800
&XPRODQUAL         SETC  '&PRODQUAL'            SET XVARIABLE           02311200
.ZG82B             ANOP  ,                                              02311600
.*-------------------------------------------------------------------   02312000
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    02312400
                   AIF   (K'&ZXPRODQUAL LE 0).ZG82R  NOT I/O            02312800
                   AIF   ('&XPRODQUAL'(1,1) NE '(').ZG82R               02313200
&ZCGPR             SETC  '&XPRODQUAL'(2,K'&XPRODQUAL-2)                 02313600
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG82P                   02314000
                   AIF   (K'&ZCGPR GT 2).ZG82Q                          02314400
                   AIF   ('&ZCGPR' EQ '0').ZG82Q                        02314800
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  02315200
                   AIF   (T'&ZCGPR NE 'N').ZG82Q  INVALID REG NAME      02315600
.ZG82P             ANOP  ,                                              02316000
                   AIF   (T'&ZCGPR NE 'N').ZG82R  NON NUMERIC           02316400
                   AIF   ('&ZCGPR' LT '2').ZG82Q                        02316800
                   AIF   ('&ZCGPR' LE '12').ZG82R                       02317200
.ZG82Q             ANOP  ,                                              02317600
&ZMS               SETC  '"PRODQUAL='           *KGPRA* MNOTE           02318000
&ZMS               SETC  '&ZMS.&PRODQUAL"'                              02318400
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      02318800
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               02319200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        02319600
.ZG82R             ANOP  ,                                              02320000
.*----------------------------------------------------------------***   02320400
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     02320800
                   AIF   (N'&PRODID LE 1).ZG83A  CK NUM                 02321200
&ZMS               SETC  '"PRODID='  *KPOSA* MNOTE                      02321600
&ZMS               SETC  '&ZMS.&PRODID"'                                02322000
&ZMS               SETC  '&ZMS "PRODID"'                                02322400
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            02322800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        02323200
.ZG83A             ANOP  ,                                              02323600
.*-------------------------------------------------------------------   02324000
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         02324400
&ZXPRODID          SETC  'INPUT'     SET IN/OUTPUT                      02324800
&XPRODID           SETC  'NONE'                                         02325200
                   AIF   (K'&PRODID(1) LE 0).ZG83B  PARM                02325600
&XPRODID           SETC  '&PRODID(1)'           SET XVARIABLE           02326000
                   AIF   (N'&PRODID GT 1).ZG83B  MULTI PARMS            02326400
&XPRODID           SETC  '&PRODID'   SET XVARIABLE                      02326800
.ZG83B             ANOP  ,                                              02327200
.*-------------------------------------------------------------------   02327600
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    02328000
                   AIF   (K'&ZXPRODID LE 0).ZG83R  NOT I/O              02328400
                   AIF   ('&XPRODID'(1,1) NE '(').ZG83R                 02328800
&ZCGPR             SETC  '&XPRODID'(2,K'&XPRODID-2)                     02329200
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG83P                   02329600
                   AIF   (K'&ZCGPR GT 2).ZG83Q                          02330000
                   AIF   ('&ZCGPR' EQ '0').ZG83Q                        02330400
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  02330800
                   AIF   (T'&ZCGPR NE 'N').ZG83Q  INVALID REG NAME      02331200
.ZG83P             ANOP  ,                                              02331600
                   AIF   (T'&ZCGPR NE 'N').ZG83R  NON NUMERIC           02332000
                   AIF   ('&ZCGPR' LT '2').ZG83Q                        02332400
                   AIF   ('&ZCGPR' LE '12').ZG83R                       02332800
.ZG83Q             ANOP  ,                                              02333200
&ZMS               SETC  '"PRODID='  *KGPRA* MNOTE                      02333600
&ZMS               SETC  '&ZMS.&PRODID"'                                02334000
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      02334400
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               02334800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        02335200
.ZG83R             ANOP  ,                                              02335600
.*-------------------------------------------------------------------   02336000
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           02336400
.ZG85              AIF   ('&XDATAPRODNAME' NE 'PRTOKEN').ZG86           02336800
.*-------------------------------------------------------------------   02337200
.***AG.KMEKY14 NAME, RQD INPUT, ME KEYS -DISALLOWED KEYS                02337600
&ZCVAL             SETC ''           ERROR KEY FIELD                    02338000
.ZG85I0            AIF   (K'&PRODNAME LE 0).ZG85I1                      02338400
&ZCVAL             SETC '&ZCVAL PRODNAME'       DISALLOWED KEY          02338800
.ZG85I1            AIF   (K'&PRODVERS LE 0).ZG85I2                      02339200
&ZCVAL             SETC '&ZCVAL PRODVERS'       DISALLOWED KEY          02339600
.ZG85I2            AIF   (K'&PRODQUAL LE 0).ZG85I3                      02340000
&ZCVAL             SETC '&ZCVAL PRODQUAL'       DISALLOWED KEY          02340400
.ZG85I3            AIF   (K'&PRODID LE 0).ZG85I4                        02340800
&ZCVAL             SETC '&ZCVAL PRODID'         DISALLOWED KEY          02341200
.ZG85I4            AIF   (K'&ZCVAL LE 0).ZG85J  KEY                     02341600
&ZCVAL             SETC '&ZCVAL'(2,K'&ZCVAL-1)                          02342000
&ZMS               SETC  '"PRTOKEN'  *KMEIA* MNOTE                      02342400
&ZMS               SETC  '&ZMS.=&PRTOKEN"'                              02342800
&ZMS               SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'           02343200
                   MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'           02343600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        02344000
.ZG85J             ANOP  ,                                              02344400
.*-------------------------------------------------------------------   02344800
.***AG.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 02345200
                   AIF   (K'&ZXPRTOKEN LE 0).ZG85R  NOT I/O             02345600
                   AIF   ('&XPRTOKEN'(1,1) NE '(').ZG85R                02346000
&ZCGPR             SETC  '&XPRTOKEN'(2,K'&XPRTOKEN-2)                   02346400
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG85P                   02346800
                   AIF   (K'&ZCGPR GT 2).ZG85Q                          02347200
                   AIF   ('&ZCGPR' EQ '0').ZG85Q                        02347600
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  02348000
                   AIF   (T'&ZCGPR NE 'N').ZG85Q  INVALID REG NAME      02348400
.ZG85P             ANOP  ,                                              02348800
                   AIF   (T'&ZCGPR NE 'N').ZG85R  NON NUMERIC           02349200
                   AIF   ('&ZCGPR' LT '2').ZG85Q                        02349600
                   AIF   ('&ZCGPR' LE '12').ZG85R                       02350000
.ZG85Q             ANOP  ,                                              02350400
&ZMS               SETC  '"PRTOKEN='            *KGPRA* MNOTE           02350800
&ZMS               SETC  '&ZMS.&PRTOKEN"'                               02351200
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      02351600
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               02352000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        02352400
.ZG85R             ANOP  ,                                              02352800
.*-------------------------------------------------------------------   02353200
.***AG.KMEKY15 NAME, RQD INPUT, ME KEYS -END                            02353600
.ZG86              ANOP  ,           END MUTUALLY EXCLUSIVE KEYS        02354000
.*----------------------------------------------------------------***   02354400
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     02354800
                   AIF   (N'&DATA LE 1).ZG88A   CK NUM                  02355200
&ZMS               SETC  '"DATA='    *KPOSA* MNOTE                      02355600
&ZMS               SETC  '&ZMS.&DATA"'                                  02356000
&ZMS               SETC  '&ZMS "DATA"'                                  02356400
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            02356800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        02357200
.ZG88A             ANOP  ,                                              02357600
.*-------------------------------------------------------------------   02358000
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         02358400
&ZXDATA            SETC  'INPUT'     SET IN/OUTPUT                      02358800
&XDATA             SETC  '&DATA(1)'  SET XVARIABLE                      02359200
                   AIF   (N'&DATA GT 1).ZG88B   MULTI PARMS             02359600
&XDATA             SETC  '&DATA'     SET XVARIABLE                      02360000
.ZG88B             AIF   (K'&DATA(1) GT 0).ZG88C                        02360400
&ZXDATA            SETC  ''          RESET IN/OUTPUT                    02360800
&ZMS               SETC  ' '         *KRQDA*                            02361200
&ZMS               SETC  '&ZMS "DATA" KEY AND ITS ARGUMENT'             02361600
                   MNOTE 8,' &ZMS ARE REQUIRED.'                        02362000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        02362400
.ZG88C             ANOP  ,                                              02362800
.*-------------------------------------------------------------------   02363200
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    02363600
                   AIF   (K'&ZXDATA LE 0).ZG88R  NOT I/O                02364000
                   AIF   ('&XDATA'(1,1) NE '(').ZG88R                   02364400
&ZCGPR             SETC  '&XDATA'(2,K'&XDATA-2)                         02364800
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG88P                   02365200
                   AIF   (K'&ZCGPR GT 2).ZG88Q                          02365600
                   AIF   ('&ZCGPR' EQ '0').ZG88Q                        02366000
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  02366400
                   AIF   (T'&ZCGPR NE 'N').ZG88Q  INVALID REG NAME      02366800
.ZG88P             ANOP  ,                                              02367200
                   AIF   (T'&ZCGPR NE 'N').ZG88R  NON NUMERIC           02367600
                   AIF   ('&ZCGPR' LT '2').ZG88Q                        02368000
                   AIF   ('&ZCGPR' LE '12').ZG88R                       02368400
.ZG88Q             ANOP  ,                                              02368800
&ZMS               SETC  '"DATA='    *KGPRA* MNOTE                      02369200
&ZMS               SETC  '&ZMS.&DATA"'                                  02369600
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      02370000
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               02370400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        02370800
.ZG88R             ANOP  ,                                              02371200
.*----------------------------------------------------------------***   02371600
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02372000
                   AIF   (N'&FORMAT LE 1).ZG91A  CK NUM                 02372400
&ZMS               SETC  '"FORMAT='  *KPOSA* MNOTE                      02372800
&ZMS               SETC  '&ZMS.&FORMAT"'                                02373200
&ZMS               SETC  '&ZMS "FORMAT"'                                02373600
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            02374000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        02374400
.ZG91A             ANOP  ,                                              02374800
.*-------------------------------------------------------------------   02375200
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02375600
&XFORMAT           SETC  ''          INITIALIZE XVARIABLE               02376000
.ZG92A   AIF   ('&FORMAT(1)' NE 'CPUTIME').ZG93A                        02376400
&XFORMAT           SETC  'CPUTIME'   SET KEYWORD                        02376800
.*-------------------------------------------------------------------   02377200
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02377600
.ZG93A   AIF   ('&FORMAT(1)' NE 'BINARY').ZG94A                         02378000
&XFORMAT           SETC  'BINARY'    SET KEYWORD                        02378400
.*-------------------------------------------------------------------   02378800
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02379200
.ZG94A   AIF   ('&FORMAT(1)' NE 'FLOAT').ZG95A                          02379600
&XFORMAT           SETC  'FLOAT'     SET KEYWORD                        02380000
.*-------------------------------------------------------------------   02380400
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02380800
.ZG95A             AIF   (K'&XFORMAT GT 0).ZG95C  KEYWORD               02381200
                   AIF   (K'&FORMAT(1) LE 0).ZG95B                      02381600
&ZMS               SETC  '"FORMAT='  *KUKWA* MNOTE                      02382000
&ZMS               SETC  '&ZMS.&FORMAT"'                                02382400
&ZMS               SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '      02382800
&ZMS               SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'            02383200
&ZMS               SETC  '&ZMS "CPUTIME",'      VALID KEYWORD           02383600
&ZMS               SETC  '&ZMS "BINARY",'       VALID KEYWORD           02384000
&ZMS               SETC  '&ZMS OR "FLOAT".'     VALID KEYWORD           02384400
                   MNOTE 8,' &ZMS '                                     02384800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        02385200
.ZG95B             ANOP  ,                                              02385600
&XFORMAT           SETC  'CPUTIME'   SET DEFAULT KEYWORD                02386000
.ZG95C             ANOP  ,                                              02386400
&ZXFORMAT          SETC  'INPUT'     SET IN/OUTPUT                      02386800
.*----------------------------------------------------------------***   02387200
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    02387600
                   AIF   (N'&CURRENTDATA LE 1).ZG97A  CK NUM            02388000
&ZMS               SETC  '"CURRENTDATA='        *KPOSA* MNOTE           02388400
&ZMS               SETC  '&ZMS.&CURRENTDATA"'                           02388800
&ZMS               SETC  '&ZMS "CURRENTDATA"'                           02389200
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            02389600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        02390000
.ZG97A             ANOP  ,                                              02390400
.*-------------------------------------------------------------------   02390800
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        02391200
                   AIF   (K'&CURRENTDATA(1) LE 0).ZG97C  NO PARM        02391600
&ZXCURRENTDATA     SETC  'OUTPUT'    SET OUTPUT                         02392000
&XCURRENTDATA      SETC  '&CURRENTDATA(1)'      SET XVARIABLE           02392400
                   AIF   (N'&CURRENTDATA GT 1).ZG97C                    02392800
&XCURRENTDATA      SETC  '&CURRENTDATA'         SET XVARIABLE           02393200
.ZG97C             ANOP  ,                                              02393600
.*-------------------------------------------------------------------   02394000
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   02394400
                   AIF   (K'&ZXCURRENTDATA LE 0).ZG97R  NOT I/O         02394800
                   AIF   ('&XCURRENTDATA'(1,1) NE '(').ZG97R            02395200
&ZCGPR             SETC  '&XCURRENTDATA'(2,K'&XCURRENTDATA-2)           02395600
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG97P                   02396000
                   AIF   (K'&ZCGPR GT 2).ZG97Q                          02396400
                   AIF   ('&ZCGPR' EQ '0').ZG97Q                        02396800
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  02397200
                   AIF   (T'&ZCGPR NE 'N').ZG97Q  INVALID REG NAME      02397600
.ZG97P             ANOP  ,                                              02398000
                   AIF   (T'&ZCGPR NE 'N').ZG97R  NON NUMERIC           02398400
                   AIF   ('&ZCGPR' LT '2').ZG97Q                        02398800
                   AIF   ('&ZCGPR' LE '12').ZG97R                       02399200
.ZG97Q             ANOP  ,                                              02399600
&ZMS               SETC  '"CURRENTDATA='        *KGPRA* MNOTE           02400000
&ZMS               SETC  '&ZMS.&CURRENTDATA"'                           02400400
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      02400800
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               02401200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        02401600
.ZG97R             ANOP  ,                                              02402000
.*----------------------------------------------------------------***   02402400
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02402800
                   AIF   (N'&LINKAGE LE 1).ZG100A  CK NUM               02403200
&ZMS               SETC  '"LINKAGE='            *KPOSA* MNOTE           02403600
&ZMS               SETC  '&ZMS.&LINKAGE"'                               02404000
&ZMS               SETC  '&ZMS "LINKAGE"'                               02404400
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            02404800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        02405200
.ZG100A            ANOP  ,                                              02405600
.*-------------------------------------------------------------------   02406000
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02406400
&XLINKAGE          SETC  ''          INITIALIZE XVARIABLE               02406800
.ZG101A   AIF   ('&LINKAGE(1)' NE 'SVC').ZG102A                         02407200
&XLINKAGE          SETC  'SVC'       SET KEYWORD                        02407600
.*-------------------------------------------------------------------   02408000
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02408400
.ZG102A   AIF   ('&LINKAGE(1)' NE 'BRANCH').ZG103A                      02408800
&XLINKAGE          SETC  'BRANCH'    SET KEYWORD                        02409200
.*-------------------------------------------------------------------   02409600
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02410000
.ZG103A            AIF   (K'&XLINKAGE GT 0).ZG103C  KEYWORD             02410400
                   AIF   (K'&LINKAGE(1) LE 0).ZG103B                    02410800
&ZMS               SETC  '"LINKAGE='            *KUKWA* MNOTE           02411200
&ZMS               SETC  '&ZMS.&LINKAGE"'                               02411600
&ZMS               SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '      02412000
&ZMS               SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'            02412400
&ZMS               SETC  '&ZMS "SVC"'           VALID KEYWORD           02412800
&ZMS               SETC  '&ZMS OR "BRANCH".'    VALID KEYWORD           02413200
                   MNOTE 8,' &ZMS '                                     02413600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        02414000
.ZG103B            ANOP  ,                                              02414400
&XLINKAGE          SETC  'SVC'       SET DEFAULT KEYWORD                02414800
.ZG103C            ANOP  ,                                              02415200
&ZXLINKAGE         SETC  'INPUT'     SET IN/OUTPUT                      02415600
.*-------------------------------------------------------------------   02416000
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           02416400
.ZG104             ANOP  ,                                              02416800
&ZTLC              SETC 'FUNCTIONEND'                                   02417200
                   AIF   ('&REQUEST(1)' NE '&ZTLC').ZG126               02417600
&XREQUEST          SETC  'FUNCTIONEND'          SET KEYWORD             02418000
                   AIF   (N'&REQUEST LE 1).ZG104A  CK NUM               02418400
&ZMS               SETC  '"REQUEST='            *KPOSA* MNOTE           02418800
&ZMS               SETC  '&ZMS.&REQUEST"'                               02419200
&ZMS               SETC  '&ZMS "REQUEST"'                               02419600
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            02420000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        02420400
.ZG104A            ANOP  ,                                              02420800
.*------------------------------------------------------------------    02421200
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           02421600
&ZCVAL             SETC ''           CLEAR ERROR KEY ACCUMULATOR        02422000
.ZG104A0           AIF   (K'&DOMAIN LE 0).ZG104A1  OK                   02422400
&ZCVAL             SETC '&ZCVAL DOMAIN'         INCORRECT KEY USED      02422800
.ZG104A1           AIF   (K'&SCOPE LE 0).ZG104A2  OK                    02423200
&ZCVAL             SETC '&ZCVAL SCOPE'          INCORRECT KEY USED      02423600
.ZG104A2           AIF   (K'&BEGTIME LE 0).ZG104A3  OK                  02424000
&ZCVAL             SETC '&ZCVAL BEGTIME'        INCORRECT KEY USED      02424400
.ZG104A3           AIF   (K'&DATA LE 0).ZG104A4  OK                     02424800
&ZCVAL             SETC '&ZCVAL DATA'           INCORRECT KEY USED      02425200
.ZG104A4           AIF   (K'&FORMAT LE 0).ZG104A5  OK                   02425600
&ZCVAL             SETC '&ZCVAL FORMAT'         INCORRECT KEY USED      02426000
.ZG104A5           AIF   (K'&CURRENTDATA LE 0).ZG104A6  OK              02426400
&ZCVAL             SETC '&ZCVAL CURRENTDATA'    INCORRECT KEY USED      02426800
.ZG104A6           AIF   (K'&ZCVAL LE 0).ZG104A7  OK                    02427200
&ZCVAL             SETC '&ZCVAL'(2,K'&ZCVAL-1)                          02427600
&ZMS               SETC  '"REQUEST'  *KMEIA* MNOTE                      02428000
&ZMS               SETC  '&ZMS.=&REQUEST"'                              02428400
&ZMS               SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'           02428800
                   MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'           02429200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        02429600
.ZG104A7           ANOP  ,                                              02430000
.*----------------------------------------------------------------***   02430400
.***AG.KMEKY01 NAME, RQD INPUT, ME KEYS -XVARIABLE                      02430800
&XENDPRODNAME      SETC  ''          INITIALIZE XVARIABLE               02431200
                   AIF   (K'&PRODOWNER LE 0).ZG106C                     02431600
&ZXENDPRODNAME     SETC  'INPUT'     SET IN/OUTPUT                      02432000
&XENDPRODNAME      SETC  'PRODOWNER'            SET XVARIABLE           02432400
&ZXPRODOWNER       SETC  'INPUT'     SET IN/OUTPUT                      02432800
&XPRODOWNER        SETC  '&PRODOWNER(1)'        SET XVARIABLE PARM      02433200
                   AIF   (N'&PRODOWNER GT 1).ZG106A  MULTIPLE PARMS     02433600
&XPRODOWNER        SETC  '&PRODOWNER'           SET XVARIABLE PARM      02434000
.ZG106A            AIF   (N'&PRODOWNER LE 1).ZG106B  CK NUM             02434400
&ZMS               SETC  '"PRODOWNER='          *KPOSA* MNOTE           02434800
&ZMS               SETC  '&ZMS.&PRODOWNER"'                             02435200
&ZMS               SETC  '&ZMS "PRODOWNER"'                             02435600
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            02436000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        02436400
.ZG106B            AIF   (K'&XPRODOWNER GT 0).ZG106C  ONE PARM          02436800
&ZXENDPRODNAME     SETC  ''          RESET IN/OUTPUT                    02437200
&ZXPRODOWNER       SETC  ''          RESET IN/OUTPUT                    02437600
&ZMS               SETC  ' '         *KRQDA*                            02438000
&ZMS               SETC  '&ZMS "PRODOWNER" KEY AND ITS ARGUMENT'        02438400
                   MNOTE 8,' &ZMS ARE REQUIRED.'                        02438800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        02439200
.ZG106C            ANOP  ,                                              02439600
.*----------------------------------------------------------------***   02440000
.***AG.KMEKY02 NAME, RQD INPUT, ME KEYS -XVARIABLE                      02440400
                   AIF   (K'&PRTOKEN LE 0).ZG115D  NO ME KEY            02440800
                   AIF   (N'&PRTOKEN LE 1).ZG115A  CK NUM               02441200
&ZMS               SETC  '"PRTOKEN='            *KPOSA* MNOTE           02441600
&ZMS               SETC  '&ZMS.&PRTOKEN"'                               02442000
&ZMS               SETC  '&ZMS "PRTOKEN"'                               02442400
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            02442800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        02443200
.ZG115A            AIF   (K'&XENDPRODNAME LE 0).ZG115B                  02443600
&ZMS               SETC  '"PRTOKEN'  *KMEKA* MNOTE                      02444000
&ZMS               SETC  '&ZMS.=&PRTOKEN"'                              02444400
&ZMS               SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'          02444800
&ZMS               SETC  '&ZMS "&XENDPRODNAME"'                         02445200
                   MNOTE 8,' &ZMS KEY.'                                 02445600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        02446000
                   AGO   .ZG115D                                        02446400
.*                                                                      02450000
.ZG115B            ANOP  ,                                              02450300
&ZXENDPRODNAME     SETC  'INPUT'     SET IN/OUTPUT                      02450600
&XENDPRODNAME      SETC  'PRTOKEN'   SET XVARIABLE                      02450900
&ZXPRTOKEN         SETC  'INPUT'     SET IN/OUTPUT                      02451200
&XPRTOKEN          SETC  '&PRTOKEN(1)'          SET XVARIABLE PARM      02451500
                   AIF   (N'&PRTOKEN GT 1).ZG115C  MULTIPLE PARMS       02451800
&XPRTOKEN          SETC  '&PRTOKEN'  SET XVARIABLE PARM                 02452100
.ZG115C            AIF   (K'&XPRTOKEN GT 0).ZG115D  ONE PARM            02452400
&ZXENDPRODNAME     SETC  ''          RESET IN/OUTPUT                    02452700
&ZXPRTOKEN         SETC  ''          RESET IN/OUTPUT                    02453000
&ZMS               SETC  ' '         *KRQDA*                            02453300
&ZMS               SETC  '&ZMS "PRTOKEN" KEY AND ITS ARGUMENT'          02453600
                   MNOTE 8,' &ZMS ARE REQUIRED.'                        02453900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        02454200
.ZG115D            ANOP  ,                                              02454500
.*------------------------------------------------------------------    02454800
.***AG.KME4Y09 NAME, RQD INPUT, ME KEYS -CHECK IF KEY ENTERED           02455100
                   AIF   (K'&XENDPRODNAME GT 0).ZG116B                  02455400
&ZXENDPRODNAME     SETC  ''          RESET IN/OUTPUT                    02455700
&ZXPRODOWNER       SETC  ''          RESET IN/OUTPUT                    02456000
&XENDPRODNAME      SETC  ''          ENSURE NULL                        02456300
&XPRODOWNER        SETC  ''          ENSURE NULL                        02456600
&ZMS               SETC  'ONE OF THE FOLLOWING'  *KMERA* MNOTE          02456900
&ZMS               SETC  '&ZMS MUTUALLY EXCLUSIVE KEY(S) IS'            02457200
&ZMS               SETC  '&ZMS REQUIRED:'                               02457500
&ZMS               SETC  '&ZMS "PRODOWNER"'     VALID ME KEY            02457800
&ZMS               SETC  '&ZMS OR "PRTOKEN".'   VALID ME KEY            02458100
                   MNOTE 8,' &ZMS '                                     02458400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        02458700
.ZG116B            ANOP  ,                                              02459000
.*-------------------------------------------------------------------   02459300
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           02459600
.ZG106             AIF   ('&XENDPRODNAME' NE 'PRODOWNER').ZG115         02459900
.*-------------------------------------------------------------------   02460200
.***AG.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 02460500
                   AIF   (K'&ZXPRODOWNER LE 0).ZG106R  NOT I/O          02460800
                   AIF   ('&XPRODOWNER'(1,1) NE '(').ZG106R             02461100
&ZCGPR             SETC  '&XPRODOWNER'(2,K'&XPRODOWNER-2)               02461400
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG106P                  02461700
                   AIF   (K'&ZCGPR GT 2).ZG106Q                         02462000
                   AIF   ('&ZCGPR' EQ '0').ZG106Q                       02462300
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  02462600
                   AIF   (T'&ZCGPR NE 'N').ZG106Q  INVALID REG NAME     02462900
.ZG106P            ANOP  ,                                              02463200
                   AIF   (T'&ZCGPR NE 'N').ZG106R  NON NUMERIC          02463500
                   AIF   ('&ZCGPR' LT '2').ZG106Q                       02463800
                   AIF   ('&ZCGPR' LE '12').ZG106R                      02464100
.ZG106Q            ANOP  ,                                              02464400
&ZMS               SETC  '"PRODOWNER='          *KGPRA* MNOTE           02464700
&ZMS               SETC  '&ZMS.&PRODOWNER"'                             02465000
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      02465300
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               02465600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        02465900
.ZG106R            ANOP  ,                                              02466200
.*----------------------------------------------------------------***   02466500
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     02466800
                   AIF   (N'&PRODNAME LE 1).ZG108A  CK NUM              02467100
&ZMS               SETC  '"PRODNAME='           *KPOSA* MNOTE           02467400
&ZMS               SETC  '&ZMS.&PRODNAME"'                              02467700
&ZMS               SETC  '&ZMS "PRODNAME"'                              02468000
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            02468300
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        02468600
.ZG108A            ANOP  ,                                              02468900
.*-------------------------------------------------------------------   02469200
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         02469500
&ZXPRODNAME        SETC  'INPUT'     SET IN/OUTPUT                      02469800
&XPRODNAME         SETC  '&PRODNAME(1)'         SET XVARIABLE           02470100
                   AIF   (N'&PRODNAME GT 1).ZG108B  MULTI PARMS         02470400
&XPRODNAME         SETC  '&PRODNAME'            SET XVARIABLE           02470700
.ZG108B            AIF   (K'&PRODNAME(1) GT 0).ZG108C                   02471000
&ZXPRODNAME        SETC  ''          RESET IN/OUTPUT                    02471300
&ZMS               SETC  ' '         *KRQDA*                            02471600
&ZMS               SETC  '&ZMS "PRODNAME" KEY AND ITS ARGUMENT'         02471900
                   MNOTE 8,' &ZMS ARE REQUIRED.'                        02472200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        02472500
.ZG108C            ANOP  ,                                              02472800
.*-------------------------------------------------------------------   02473100
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    02473400
                   AIF   (K'&ZXPRODNAME LE 0).ZG108R  NOT I/O           02473700
                   AIF   ('&XPRODNAME'(1,1) NE '(').ZG108R              02474000
&ZCGPR             SETC  '&XPRODNAME'(2,K'&XPRODNAME-2)                 02474300
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG108P                  02474600
                   AIF   (K'&ZCGPR GT 2).ZG108Q                         02474900
                   AIF   ('&ZCGPR' EQ '0').ZG108Q                       02475200
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  02475500
                   AIF   (T'&ZCGPR NE 'N').ZG108Q  INVALID REG NAME     02475800
.ZG108P            ANOP  ,                                              02476100
                   AIF   (T'&ZCGPR NE 'N').ZG108R  NON NUMERIC          02476400
                   AIF   ('&ZCGPR' LT '2').ZG108Q                       02476700
                   AIF   ('&ZCGPR' LE '12').ZG108R                      02477000
.ZG108Q            ANOP  ,                                              02477300
&ZMS               SETC  '"PRODNAME='           *KGPRA* MNOTE           02477600
&ZMS               SETC  '&ZMS.&PRODNAME"'                              02477900
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      02478200
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               02478500
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        02478800
.ZG108R            ANOP  ,                                              02479100
.*----------------------------------------------------------------***   02479400
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     02479700
                   AIF   (N'&PRODVERS LE 1).ZG111A  CK NUM              02480000
&ZMS               SETC  '"PRODVERS='           *KPOSA* MNOTE           02480300
&ZMS               SETC  '&ZMS.&PRODVERS"'                              02480600
&ZMS               SETC  '&ZMS "PRODVERS"'                              02480900
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            02481200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        02481500
.ZG111A            ANOP  ,                                              02481800
.*-------------------------------------------------------------------   02482100
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         02482400
&ZXPRODVERS        SETC  'INPUT'     SET IN/OUTPUT                      02482700
&XPRODVERS         SETC  'NONE'                                         02483000
                   AIF   (K'&PRODVERS(1) LE 0).ZG111B  PARM             02483300
&XPRODVERS         SETC  '&PRODVERS(1)'         SET XVARIABLE           02483600
                   AIF   (N'&PRODVERS GT 1).ZG111B  MULTI PARMS         02483900
&XPRODVERS         SETC  '&PRODVERS'            SET XVARIABLE           02484200
.ZG111B            ANOP  ,                                              02484500
.*-------------------------------------------------------------------   02484800
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    02485100
                   AIF   (K'&ZXPRODVERS LE 0).ZG111R  NOT I/O           02485400
                   AIF   ('&XPRODVERS'(1,1) NE '(').ZG111R              02485700
&ZCGPR             SETC  '&XPRODVERS'(2,K'&XPRODVERS-2)                 02486000
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG111P                  02486300
                   AIF   (K'&ZCGPR GT 2).ZG111Q                         02486600
                   AIF   ('&ZCGPR' EQ '0').ZG111Q                       02486900
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  02487200
                   AIF   (T'&ZCGPR NE 'N').ZG111Q  INVALID REG NAME     02487500
.ZG111P            ANOP  ,                                              02487800
                   AIF   (T'&ZCGPR NE 'N').ZG111R  NON NUMERIC          02488100
                   AIF   ('&ZCGPR' LT '2').ZG111Q                       02488400
                   AIF   ('&ZCGPR' LE '12').ZG111R                      02488700
.ZG111Q            ANOP  ,                                              02489000
&ZMS               SETC  '"PRODVERS='           *KGPRA* MNOTE           02489300
&ZMS               SETC  '&ZMS.&PRODVERS"'                              02489600
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      02489900
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               02490200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        02490500
.ZG111R            ANOP  ,                                              02490800
.*----------------------------------------------------------------***   02491100
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     02491400
                   AIF   (N'&PRODQUAL LE 1).ZG112A  CK NUM              02491700
&ZMS               SETC  '"PRODQUAL='           *KPOSA* MNOTE           02492000
&ZMS               SETC  '&ZMS.&PRODQUAL"'                              02492300
&ZMS               SETC  '&ZMS "PRODQUAL"'                              02492600
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            02492900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        02493200
.ZG112A            ANOP  ,                                              02493500
.*-------------------------------------------------------------------   02493800
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         02494100
&ZXPRODQUAL        SETC  'INPUT'     SET IN/OUTPUT                      02494400
&XPRODQUAL         SETC  'NONE'                                         02494700
                   AIF   (K'&PRODQUAL(1) LE 0).ZG112B  PARM             02495000
&XPRODQUAL         SETC  '&PRODQUAL(1)'         SET XVARIABLE           02495300
                   AIF   (N'&PRODQUAL GT 1).ZG112B  MULTI PARMS         02495600
&XPRODQUAL         SETC  '&PRODQUAL'            SET XVARIABLE           02495900
.ZG112B            ANOP  ,                                              02496200
.*-------------------------------------------------------------------   02496500
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    02496800
                   AIF   (K'&ZXPRODQUAL LE 0).ZG112R  NOT I/O           02497100
                   AIF   ('&XPRODQUAL'(1,1) NE '(').ZG112R              02497400
&ZCGPR             SETC  '&XPRODQUAL'(2,K'&XPRODQUAL-2)                 02497700
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG112P                  02498000
                   AIF   (K'&ZCGPR GT 2).ZG112Q                         02498300
                   AIF   ('&ZCGPR' EQ '0').ZG112Q                       02498600
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  02498900
                   AIF   (T'&ZCGPR NE 'N').ZG112Q  INVALID REG NAME     02499200
.ZG112P            ANOP  ,                                              02499500
                   AIF   (T'&ZCGPR NE 'N').ZG112R  NON NUMERIC          02499800
                   AIF   ('&ZCGPR' LT '2').ZG112Q                       02500100
                   AIF   ('&ZCGPR' LE '12').ZG112R                      02500400
.ZG112Q            ANOP  ,                                              02500700
&ZMS               SETC  '"PRODQUAL='           *KGPRA* MNOTE           02501000
&ZMS               SETC  '&ZMS.&PRODQUAL"'                              02501300
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      02501600
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               02501900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        02502200
.ZG112R            ANOP  ,                                              02502500
.*----------------------------------------------------------------***   02502800
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     02503100
                   AIF   (N'&PRODID LE 1).ZG113A  CK NUM                02503400
&ZMS               SETC  '"PRODID='  *KPOSA* MNOTE                      02503700
&ZMS               SETC  '&ZMS.&PRODID"'                                02504000
&ZMS               SETC  '&ZMS "PRODID"'                                02504300
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            02504600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        02504900
.ZG113A            ANOP  ,                                              02505200
.*-------------------------------------------------------------------   02505500
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         02505800
&ZXPRODID          SETC  'INPUT'     SET IN/OUTPUT                      02506100
&XPRODID           SETC  'NONE'                                         02506400
                   AIF   (K'&PRODID(1) LE 0).ZG113B  PARM               02506700
&XPRODID           SETC  '&PRODID(1)'           SET XVARIABLE           02507000
                   AIF   (N'&PRODID GT 1).ZG113B  MULTI PARMS           02507300
&XPRODID           SETC  '&PRODID'   SET XVARIABLE                      02507600
.ZG113B            ANOP  ,                                              02507900
.*-------------------------------------------------------------------   02508200
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    02508500
                   AIF   (K'&ZXPRODID LE 0).ZG113R  NOT I/O             02508800
                   AIF   ('&XPRODID'(1,1) NE '(').ZG113R                02509100
&ZCGPR             SETC  '&XPRODID'(2,K'&XPRODID-2)                     02509400
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG113P                  02509700
                   AIF   (K'&ZCGPR GT 2).ZG113Q                         02510000
                   AIF   ('&ZCGPR' EQ '0').ZG113Q                       02510300
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  02510600
                   AIF   (T'&ZCGPR NE 'N').ZG113Q  INVALID REG NAME     02510900
.ZG113P            ANOP  ,                                              02511200
                   AIF   (T'&ZCGPR NE 'N').ZG113R  NON NUMERIC          02511500
                   AIF   ('&ZCGPR' LT '2').ZG113Q                       02511800
                   AIF   ('&ZCGPR' LE '12').ZG113R                      02512100
.ZG113Q            ANOP  ,                                              02512400
&ZMS               SETC  '"PRODID='  *KGPRA* MNOTE                      02512700
&ZMS               SETC  '&ZMS.&PRODID"'                                02513000
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      02513300
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               02513600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        02513900
.ZG113R            ANOP  ,                                              02514200
.*-------------------------------------------------------------------   02514500
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           02514800
.ZG115             AIF   ('&XENDPRODNAME' NE 'PRTOKEN').ZG116           02515100
.*-------------------------------------------------------------------   02515400
.***AG.KMEKY14 NAME, RQD INPUT, ME KEYS -DISALLOWED KEYS                02515700
&ZCVAL             SETC ''           ERROR KEY FIELD                    02516000
.ZG115I0           AIF   (K'&PRODNAME LE 0).ZG115I1                     02516300
&ZCVAL             SETC '&ZCVAL PRODNAME'       DISALLOWED KEY          02516600
.ZG115I1           AIF   (K'&PRODVERS LE 0).ZG115I2                     02516900
&ZCVAL             SETC '&ZCVAL PRODVERS'       DISALLOWED KEY          02517200
.ZG115I2           AIF   (K'&PRODQUAL LE 0).ZG115I3                     02517500
&ZCVAL             SETC '&ZCVAL PRODQUAL'       DISALLOWED KEY          02517800
.ZG115I3           AIF   (K'&PRODID LE 0).ZG115I4                       02518100
&ZCVAL             SETC '&ZCVAL PRODID'         DISALLOWED KEY          02518400
.ZG115I4           AIF   (K'&ZCVAL LE 0).ZG115J  KEY                    02518700
&ZCVAL             SETC '&ZCVAL'(2,K'&ZCVAL-1)                          02519000
&ZMS               SETC  '"PRTOKEN'  *KMEIA* MNOTE                      02519300
&ZMS               SETC  '&ZMS.=&PRTOKEN"'                              02519600
&ZMS               SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'           02519900
                   MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'           02520200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        02520500
.ZG115J            ANOP  ,                                              02520800
.*-------------------------------------------------------------------   02521100
.***AG.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 02521400
                   AIF   (K'&ZXPRTOKEN LE 0).ZG115R  NOT I/O            02521700
                   AIF   ('&XPRTOKEN'(1,1) NE '(').ZG115R               02522000
&ZCGPR             SETC  '&XPRTOKEN'(2,K'&XPRTOKEN-2)                   02522300
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG115P                  02522600
                   AIF   (K'&ZCGPR GT 2).ZG115Q                         02522900
                   AIF   ('&ZCGPR' EQ '0').ZG115Q                       02523200
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  02523500
                   AIF   (T'&ZCGPR NE 'N').ZG115Q  INVALID REG NAME     02523800
.ZG115P            ANOP  ,                                              02524100
                   AIF   (T'&ZCGPR NE 'N').ZG115R  NON NUMERIC          02524400
                   AIF   ('&ZCGPR' LT '2').ZG115Q                       02524700
                   AIF   ('&ZCGPR' LE '12').ZG115R                      02525000
.ZG115Q            ANOP  ,                                              02525300
&ZMS               SETC  '"PRTOKEN='            *KGPRA* MNOTE           02525600
&ZMS               SETC  '&ZMS.&PRTOKEN"'                               02525900
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      02526200
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               02526500
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        02526800
.ZG115R            ANOP  ,                                              02527100
.*-------------------------------------------------------------------   02527400
.***AG.KMEKY15 NAME, RQD INPUT, ME KEYS -END                            02527700
.ZG116             ANOP  ,           END MUTUALLY EXCLUSIVE KEYS        02528000
.*----------------------------------------------------------------***   02528300
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    02528600
                   AIF   (N'&ENDTIME LE 1).ZG118A  CK NUM               02528900
&ZMS               SETC  '"ENDTIME='            *KPOSA* MNOTE           02529200
&ZMS               SETC  '&ZMS.&ENDTIME"'                               02529500
&ZMS               SETC  '&ZMS "ENDTIME"'                               02529800
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            02530100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        02530400
.ZG118A            ANOP  ,                                              02530700
.*-------------------------------------------------------------------   02531000
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        02531300
                   AIF   (K'&ENDTIME(1) LE 0).ZG118C  NO PARM           02531600
&ZXENDTIME         SETC  'OUTPUT'    SET OUTPUT                         02531900
&XENDTIME          SETC  '&ENDTIME(1)'          SET XVARIABLE           02532200
                   AIF   (N'&ENDTIME GT 1).ZG118C                       02532500
&XENDTIME          SETC  '&ENDTIME'  SET XVARIABLE                      02532800
.ZG118C            ANOP  ,                                              02533100
.*-------------------------------------------------------------------   02533400
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   02533700
                   AIF   (K'&ZXENDTIME LE 0).ZG118R  NOT I/O            02534000
                   AIF   ('&XENDTIME'(1,1) NE '(').ZG118R               02534300
&ZCGPR             SETC  '&XENDTIME'(2,K'&XENDTIME-2)                   02534600
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG118P                  02534900
                   AIF   (K'&ZCGPR GT 2).ZG118Q                         02535200
                   AIF   ('&ZCGPR' EQ '0').ZG118Q                       02535500
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  02535800
                   AIF   (T'&ZCGPR NE 'N').ZG118Q  INVALID REG NAME     02536100
.ZG118P            ANOP  ,                                              02536400
                   AIF   (T'&ZCGPR NE 'N').ZG118R  NON NUMERIC          02536700
                   AIF   ('&ZCGPR' LT '2').ZG118Q                       02537000
                   AIF   ('&ZCGPR' LE '12').ZG118R                      02537300
.ZG118Q            ANOP  ,                                              02537600
&ZMS               SETC  '"ENDTIME='            *KGPRA* MNOTE           02537900
&ZMS               SETC  '&ZMS.&ENDTIME"'                               02538200
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      02538500
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               02538800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        02539100
.ZG118R            ANOP  ,                                              02539400
.*----------------------------------------------------------------***   02539700
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    02540000
                   AIF   (N'&ENDDATA LE 1).ZG119A  CK NUM               02540300
&ZMS               SETC  '"ENDDATA='            *KPOSA* MNOTE           02540600
&ZMS               SETC  '&ZMS.&ENDDATA"'                               02540900
&ZMS               SETC  '&ZMS "ENDDATA"'                               02541200
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            02541500
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        02541800
.ZG119A            ANOP  ,                                              02542100
.*-------------------------------------------------------------------   02542400
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        02542700
                   AIF   (K'&ENDDATA(1) LE 0).ZG119C  NO PARM           02543000
&ZXENDDATA         SETC  'OUTPUT'    SET OUTPUT                         02543300
&XENDDATA          SETC  '&ENDDATA(1)'          SET XVARIABLE           02543600
                   AIF   (N'&ENDDATA GT 1).ZG119C                       02543900
&XENDDATA          SETC  '&ENDDATA'  SET XVARIABLE                      02544200
.ZG119C            ANOP  ,                                              02544500
.*-------------------------------------------------------------------   02544800
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   02545100
                   AIF   (K'&ZXENDDATA LE 0).ZG119R  NOT I/O            02545400
                   AIF   ('&XENDDATA'(1,1) NE '(').ZG119R               02545700
&ZCGPR             SETC  '&XENDDATA'(2,K'&XENDDATA-2)                   02546000
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG119P                  02546300
                   AIF   (K'&ZCGPR GT 2).ZG119Q                         02546600
                   AIF   ('&ZCGPR' EQ '0').ZG119Q                       02546900
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  02547200
                   AIF   (T'&ZCGPR NE 'N').ZG119Q  INVALID REG NAME     02547500
.ZG119P            ANOP  ,                                              02547800
                   AIF   (T'&ZCGPR NE 'N').ZG119R  NON NUMERIC          02548100
                   AIF   ('&ZCGPR' LT '2').ZG119Q                       02548400
                   AIF   ('&ZCGPR' LE '12').ZG119R                      02548700
.ZG119Q            ANOP  ,                                              02549000
&ZMS               SETC  '"ENDDATA='            *KGPRA* MNOTE           02549300
&ZMS               SETC  '&ZMS.&ENDDATA"'                               02549600
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      02549900
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               02550200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        02550500
.ZG119R            ANOP  ,                                              02550800
.*----------------------------------------------------------------***   02551100
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02551400
                   AIF   (N'&LINKAGE LE 1).ZG122A  CK NUM               02551700
&ZMS               SETC  '"LINKAGE='            *KPOSA* MNOTE           02552000
&ZMS               SETC  '&ZMS.&LINKAGE"'                               02552300
&ZMS               SETC  '&ZMS "LINKAGE"'                               02552600
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            02552900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        02553200
.ZG122A            ANOP  ,                                              02553500
.*-------------------------------------------------------------------   02553800
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02554100
&XLINKAGE          SETC  ''          INITIALIZE XVARIABLE               02554400
.ZG123A   AIF   ('&LINKAGE(1)' NE 'SVC').ZG124A                         02554700
&XLINKAGE          SETC  'SVC'       SET KEYWORD                        02555000
.*-------------------------------------------------------------------   02555300
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02555600
.ZG124A   AIF   ('&LINKAGE(1)' NE 'BRANCH').ZG125A                      02555900
&XLINKAGE          SETC  'BRANCH'    SET KEYWORD                        02556200
.*-------------------------------------------------------------------   02556500
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02556800
.ZG125A            AIF   (K'&XLINKAGE GT 0).ZG125C  KEYWORD             02557100
                   AIF   (K'&LINKAGE(1) LE 0).ZG125B                    02557400
&ZMS               SETC  '"LINKAGE='            *KUKWA* MNOTE           02557700
&ZMS               SETC  '&ZMS.&LINKAGE"'                               02558000
&ZMS               SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '      02558300
&ZMS               SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'            02558600
&ZMS               SETC  '&ZMS "SVC"'           VALID KEYWORD           02558900
&ZMS               SETC  '&ZMS OR "BRANCH".'    VALID KEYWORD           02559200
                   MNOTE 8,' &ZMS '                                     02559500
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        02559800
.ZG125B            ANOP  ,                                              02560100
&XLINKAGE          SETC  'SVC'       SET DEFAULT KEYWORD                02560400
.ZG125C            ANOP  ,                                              02560700
&ZXLINKAGE         SETC  'INPUT'     SET IN/OUTPUT                      02561000
.*-------------------------------------------------------------------   02561300
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           02561600
.ZG126             ANOP  ,                                              02561900
&ZTLC              SETC 'STATUS'                                        02562200
                   AIF   ('&REQUEST(1)' NE '&ZTLC').ZG132               02562500
&XREQUEST          SETC  'STATUS'    SET KEYWORD                        02562800
                   AIF   (N'&REQUEST LE 1).ZG126A  CK NUM               02563100
&ZMS               SETC  '"REQUEST='            *KPOSA* MNOTE           02563400
&ZMS               SETC  '&ZMS.&REQUEST"'                               02563700
&ZMS               SETC  '&ZMS "REQUEST"'                               02564000
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            02564300
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        02564600
.ZG126A            ANOP  ,                                              02564900
.*------------------------------------------------------------------    02565200
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           02565500
&ZCVAL             SETC ''           CLEAR ERROR KEY ACCUMULATOR        02565800
.ZG126A0           AIF   (K'&PRODOWNER LE 0).ZG126A1  OK                02566100
&ZCVAL             SETC '&ZCVAL PRODOWNER'      INCORRECT KEY USED      02566400
.ZG126A1           AIF   (K'&PRODNAME LE 0).ZG126A2  OK                 02566700
&ZCVAL             SETC '&ZCVAL PRODNAME'       INCORRECT KEY USED      02567000
.ZG126A2           AIF   (K'&PRODVERS LE 0).ZG126A3  OK                 02567300
&ZCVAL             SETC '&ZCVAL PRODVERS'       INCORRECT KEY USED      02567600
.ZG126A3           AIF   (K'&PRODQUAL LE 0).ZG126A4  OK                 02567900
&ZCVAL             SETC '&ZCVAL PRODQUAL'       INCORRECT KEY USED      02568200
.ZG126A4           AIF   (K'&PRODID LE 0).ZG126A5  OK                   02568500
&ZCVAL             SETC '&ZCVAL PRODID'         INCORRECT KEY USED      02568800
.ZG126A5           AIF   (K'&DOMAIN LE 0).ZG126A6  OK                   02569100
&ZCVAL             SETC '&ZCVAL DOMAIN'         INCORRECT KEY USED      02569400
.ZG126A6           AIF   (K'&SCOPE LE 0).ZG126A7  OK                    02569700
&ZCVAL             SETC '&ZCVAL SCOPE'          INCORRECT KEY USED      02570000
.ZG126A7           AIF   (K'&PRTOKEN LE 0).ZG126A8  OK                  02570300
&ZCVAL             SETC '&ZCVAL PRTOKEN'        INCORRECT KEY USED      02570600
.ZG126A8           AIF   (K'&ENDTIME LE 0).ZG126A9  OK                  02570900
&ZCVAL             SETC '&ZCVAL ENDTIME'        INCORRECT KEY USED      02571200
.ZG126A9           AIF   (K'&ENDDATA LE 0).ZG126A10  OK                 02571500
&ZCVAL             SETC '&ZCVAL ENDDATA'        INCORRECT KEY USED      02571800
.ZG126A10          AIF   (K'&BEGTIME LE 0).ZG126A11  OK                 02572100
&ZCVAL             SETC '&ZCVAL BEGTIME'        INCORRECT KEY USED      02572400
.ZG126A11          AIF   (K'&DATA LE 0).ZG126A12  OK                    02572700
&ZCVAL             SETC '&ZCVAL DATA'           INCORRECT KEY USED      02573000
.ZG126A12          AIF   (K'&FORMAT LE 0).ZG126A13  OK                  02573300
&ZCVAL             SETC '&ZCVAL FORMAT'         INCORRECT KEY USED      02573600
.ZG126A13          AIF   (K'&CURRENTDATA LE 0).ZG126A14  OK             02573900
&ZCVAL             SETC '&ZCVAL CURRENTDATA'    INCORRECT KEY USED      02574200
.ZG126A14          AIF   (K'&ZCVAL LE 0).ZG126A15  OK                   02574500
&ZCVAL             SETC '&ZCVAL'(2,K'&ZCVAL-1)                          02574800
&ZMS               SETC  '"REQUEST'  *KMEIA* MNOTE                      02575100
&ZMS               SETC  '&ZMS.=&REQUEST"'                              02575400
&ZMS               SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'           02575700
                   MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'           02576000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        02576300
.ZG126A15          ANOP  ,                                              02576600
.*----------------------------------------------------------------***   02576900
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02577200
                   AIF   (N'&LINKAGE LE 1).ZG128A  CK NUM               02577500
&ZMS               SETC  '"LINKAGE='            *KPOSA* MNOTE           02577800
&ZMS               SETC  '&ZMS.&LINKAGE"'                               02578100
&ZMS               SETC  '&ZMS "LINKAGE"'                               02578400
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            02578700
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        02579000
.ZG128A            ANOP  ,                                              02579300
.*-------------------------------------------------------------------   02579600
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02579900
&XLINKAGE          SETC  ''          INITIALIZE XVARIABLE               02580200
.ZG129A   AIF   ('&LINKAGE(1)' NE 'SVC').ZG130A                         02580500
&XLINKAGE          SETC  'SVC'       SET KEYWORD                        02580800
.*-------------------------------------------------------------------   02581100
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02581400
.ZG130A   AIF   ('&LINKAGE(1)' NE 'BRANCH').ZG131A                      02581700
&XLINKAGE          SETC  'BRANCH'    SET KEYWORD                        02582000
.*-------------------------------------------------------------------   02582300
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02582600
.ZG131A            AIF   (K'&XLINKAGE GT 0).ZG131C  KEYWORD             02582900
                   AIF   (K'&LINKAGE(1) LE 0).ZG131B                    02583200
&ZMS               SETC  '"LINKAGE='            *KUKWA* MNOTE           02583500
&ZMS               SETC  '&ZMS.&LINKAGE"'                               02583800
&ZMS               SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '      02584100
&ZMS               SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'            02584400
&ZMS               SETC  '&ZMS "SVC"'           VALID KEYWORD           02584700
&ZMS               SETC  '&ZMS OR "BRANCH".'    VALID KEYWORD           02585000
                   MNOTE 8,' &ZMS '                                     02585300
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        02585600
.ZG131B            ANOP  ,                                              02585900
&XLINKAGE          SETC  'SVC'       SET DEFAULT KEYWORD                02586200
.ZG131C            ANOP  ,                                              02586500
&ZXLINKAGE         SETC  'INPUT'     SET IN/OUTPUT                      02586800
.*------------------------------------------------------------------    02587100
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           02587400
.ZG132             ANOP  ,                                              02587700
&ZXREQUEST         SETC  'INPUT'     SET IN/OUTPUT                      02588000
                   AIF   (K'&XREQUEST GT 0).ZG132E  VALID ARG           02588300
                   AIF   (T'&REQUEST EQ 'O').ZG132D  OMITTED            02588600
&ZASYSLNDX         SETA  0                                              02588900
.ZG132A            ANOP  ,           POSITIONAL MACRO KEY               02589200
&ZASYSLNDX         SETA  &ZASYSLNDX+1                                   02589500
                   AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG132C              02589800
&ZTLC              SETC 'REQUEST'                                       02590100
                   AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG132A     02590400
.ZG132B            ANOP  ,                                              02590700
&ZXREQUEST         SETC  ''          RESET IN/OUTPUT                    02591000
&ZMS               SETC  'THE "REQUEST" KEY'    *KOPTA* MNOTE           02591300
&ZMS               SETC  '&ZMS MUST CONTAIN ONE'                        02591600
                   MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'               02591900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        02592200
                   AGO   .ZG132E                                        02592500
.ZG132C            ANOP  ,                                              02592800
&ZXREQUEST         SETC  ''          RESET IN/OUTPUT                    02593100
&ZMS               SETC  '"REQUEST='            *KUKWA* MNOTE           02593400
&ZMS               SETC  '&ZMS.&REQUEST"'                               02593700
&ZMS               SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '      02594000
&ZMS               SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'            02594300
&ZMS               SETC  '&ZMS "REGISTER",'     VALID KEYWORD           02594600
&ZMS               SETC  '&ZMS "DEREGISTER",'   VALID KEYWORD           02594900
&ZMS               SETC  '&ZMS "FUNCTIONBEGIN",'  VALID KEYWORD         02595200
&ZMS               SETC  '&ZMS "FUNCTIONDATA",'  VALID KEYWORD          02595500
&ZMS               SETC  '&ZMS "FUNCTIONEND",'  VALID KEYWORD           02595800
&ZMS               SETC  '&ZMS OR "STATUS".'    VALID KEYWORD           02596100
                   MNOTE 8,' &ZMS '                                     02596400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        02596700
                   AGO   .ZG132E                                        02597000
.ZG132D            ANOP  ,                                              02597300
&XREQUEST          SETC  'REGISTER'  SET DEFAULT KEYWORD                02597600
.ZG132E            ANOP  ,                                              02597900
.*------------------------------------------------------------------    02598200
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           02598500
                   AIF   (K'&REQUEST(1) GT 0).ZG132F  PARM              02598800
&XREQUEST          SETC  ''          ENSURE NULL KEYWORD                02599100
&ZXREQUEST         SETC  ''          RESET IN/OUTPUT                    02599400
&ZMS               SETC  'THE'                                          02599700
&ZMS               SETC  '&ZMS "REQUEST" KEY AND ITS ARGUMENT'          02600000
&ZMS               SETC  '&ZMS ARE REQUIRED.'                           02600300
&ZMS               SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'            02600600
&ZMS               SETC  '&ZMS "REGISTER",'     VALID KEYWORD           02600900
&ZMS               SETC  '&ZMS "DEREGISTER",'   VALID KEYWORD           02601200
&ZMS               SETC  '&ZMS "FUNCTIONBEGIN",'  VALID KEYWORD         02601500
&ZMS               SETC  '&ZMS "FUNCTIONDATA",'  VALID KEYWORD          02601800
&ZMS               SETC  '&ZMS "FUNCTIONEND",'  VALID KEYWORD           02602100
&ZMS               SETC  '&ZMS OR "STATUS".'    VALID KEYWORD           02602400
                   MNOTE 8,' &ZMS '                                     02602700
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        02603000
.ZG132F            ANOP  ,                                              02603300
.*----------------------------------------------------------------***   02603600
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    02603900
                   AIF   (N'&RETCODE LE 1).ZG134A  CK NUM               02604200
&ZMS               SETC  '"RETCODE='            *KPOSA* MNOTE           02604500
&ZMS               SETC  '&ZMS.&RETCODE"'                               02604800
&ZMS               SETC  '&ZMS "RETCODE"'                               02605100
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            02605400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        02605700
.ZG134A            ANOP  ,                                              02606000
.*-------------------------------------------------------------------   02606300
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        02606600
                   AIF   (K'&RETCODE(1) LE 0).ZG134C  NO PARM           02606900
&ZXRETCODE         SETC  'OUTPUT'    SET OUTPUT                         02607200
&XRETCODE          SETC  '&RETCODE(1)'          SET XVARIABLE           02607500
                   AIF   (N'&RETCODE GT 1).ZG134C                       02607800
&XRETCODE          SETC  '&RETCODE'  SET XVARIABLE                      02608100
.ZG134C            ANOP  ,                                              02608400
.*-------------------------------------------------------------------   02608700
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   02609000
                   AIF   (K'&ZXRETCODE LE 0).ZG134R  NOT I/O            02609300
                   AIF   ('&XRETCODE'(1,1) NE '(').ZG134R               02609600
&ZCGPR             SETC  '&XRETCODE'(2,K'&XRETCODE-2)                   02609900
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG134P                  02610200
                   AIF   (K'&ZCGPR GT 2).ZG134Q                         02610500
                   AIF   ('&ZCGPR' EQ '0').ZG134Q                       02610800
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  02611100
                   AIF   (T'&ZCGPR NE 'N').ZG134Q  INVALID REG NAME     02611400
.ZG134P            ANOP  ,                                              02611700
                   AIF   (T'&ZCGPR NE 'N').ZG134R  NON NUMERIC          02612000
                   AIF   ('&ZCGPR' LT '2').ZG134Q                       02612300
                   AIF   ('&ZCGPR' LE '12').ZG134R                      02612600
.ZG134Q            ANOP  ,                                              02612900
&ZMS               SETC  '"RETCODE='            *KGPRA* MNOTE           02613200
&ZMS               SETC  '&ZMS.&RETCODE"'                               02613500
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      02613800
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               02614100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        02614400
.ZG134R            ANOP  ,                                              02614700
.******************************************************************     02615000
.***AH.P00 CHECK STANDALONE POSITIONAL VARIABLES                        02615300
.******************************************************************     02615600
                   ACTR  10000                                          02615900
.*----------------------------------------------------------------***   02616200
.***AH.P02 EXTRA POSITIONALS                                            02616500
                   AIF   (N'&SYSLIST LE 0).ZGLISTX  NO EXTRAS           02616800
&ZCVAL             SETC  ''          ERROR FIELD                        02617100
&ZAWRK             SETA  0           POSITIONAL NUMBER                  02617400
.ZGLIST2           ANOP  ,                                              02617700
&ZAWRK             SETA  &ZAWRK+1    NEXT POSITIONAL                    02618000
                   AIF   (&ZAWRK GT N'&SYSLIST).ZGLIST3  DONE           02618300
&ZCVAL             SETC '&ZCVAL,&SYSLIST(&ZAWRK)'  EXTRA                02618600
                   AGO   .ZGLIST2                                       02618900
.*                                                                      02650000
.ZGLIST3           ANOP  ,                                              02650600
&ZCVAL             SETC '&ZCVAL'(2,K'&ZCVAL-1)  STRIP COMMA             02651200
&ZMS               SETC  'POSITIONAL ARGUMENT(S),'  *PPOSA* MNOTE       02651800
&ZMS               SETC  '&ZMS "&ZCVAL"'                                02652400
&ZMS               SETC  '&ZMS CANNOT BE USED.'                         02653000
&ZMS               SETC  '&ZMS NO POSITIONAL ARGUMENTS'                 02653600
                   MNOTE 8,' &ZMS ARE ALLOWED.'                         02654200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        02654800
.ZGLISTX           ANOP  ,                                              02655400
&ZASYSLNDX         SETA  0                                              02656000
.*-------------------------------------------------------------------   02656600
.***AG.MF04 MF=(SLME)                                                   02657200
.ZGMFX             ANOP  ,           END OF FULL SYNTAX CHECK           02657800
.********************************************************************   02658400
.***AE.MF01   PARTIAL MACRO SYNTAX CHECKING                             02659000
.********************************************************************   02659600
                   ACTR  10000                                          02660200
.*-------------------------------------------------------------------   02660800
.***AE.MF01 MF=(SLME)                                                   02661400
                   AIF   ('&XMF' EQ 'L').ZEMFX                          02662000
                   AIF   ('&XMFSCK' NE 'NOCHECK').ZEMFX                 02662600
.********************************************************************   02663200
.***AE.KC00 INITIALIZE KEYWORD CONTROL VARIABLES                        02663800
.********************************************************************   02664400
&XREQUEST          SETC  ''          INITIALIZE XVARIABLE               02665000
&XDOMAIN           SETC  ''          INITIALIZE XVARIABLE               02665600
&XSCOPE            SETC  ''          INITIALIZE XVARIABLE               02666200
&XLINKAGE          SETC  ''          INITIALIZE XVARIABLE               02666800
&XFORMAT           SETC  ''          INITIALIZE XVARIABLE               02667400
.*-------------------------------------------------------------------   02668000
.***AE.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           02668600
&ZTLC              SETC 'REGISTER'                                      02669200
                   AIF   ('&REQUEST(1)' NE '&ZTLC').ZE3A                02669800
&XREQUEST          SETC  'REGISTER'  SET KEYWORD                        02670400
                   AIF   (N'&REQUEST LE 1).ZE3A  CK NUM                 02671000
&ZMS               SETC  '"REQUEST='            *KPOSA* MNOTE           02671600
&ZMS               SETC  '&ZMS.&REQUEST"'                               02672200
&ZMS               SETC  '&ZMS "REQUEST"'                               02672800
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            02673400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        02674000
.ZE3A              ANOP  ,                                              02674600
.*----------------------------------------------------------------***   02675200
.***AE.KXVAR03 NAME, RQD INPUT, KEYS -XVAR KEY                          02675800
                   AIF   (N'&PRODOWNER LE 1).ZE5A  CK NUM               02676400
&ZMS               SETC  '"PRODOWNER='          *KPOSA* MNOTE           02677000
&ZMS               SETC  '&ZMS.&PRODOWNER"'                             02677600
&ZMS               SETC  '&ZMS "PRODOWNER"'                             02678200
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            02678800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        02679400
.ZE5A              ANOP  ,                                              02680000
.*-------------------------------------------------------------------   02680600
.***AE.KXVAR04 NAME, RQD INPUT, KEYS -XVAR ARGUMENT                     02681200
                   AIF   (K'&PRODOWNER(1) LE 0).ZE5B NO PRM             02681800
&ZXPRODOWNER       SETC  'INPUT'     SET IN/OUTPUT                      02682400
&XPRODOWNER        SETC  '&PRODOWNER(1)'        SET XVARIABLE           02683000
                   AIF   (N'&PRODOWNER GT 1).ZE5B                       02683600
.*                 ANOP              MULTIPLE PARMS                     02684200
&XPRODOWNER        SETC  '&PRODOWNER'           SET XVARIABLE           02684800
.ZE5B              ANOP  ,                                              02685400
.*-------------------------------------------------------------------   02686000
.***AE.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    02686600
                   AIF   (K'&ZXPRODOWNER LE 0).ZE5R  NOT I/O            02687200
                   AIF   ('&XPRODOWNER'(1,1) NE '(').ZE5R               02687800
&ZCGPR             SETC  '&XPRODOWNER'(2,K'&XPRODOWNER-2)               02688400
                   AIF   ('&ZCGPR'(1,1) NE '0').ZE5P                    02689000
                   AIF   (K'&ZCGPR GT 2).ZE5Q                           02689600
                   AIF   ('&ZCGPR' EQ '0').ZE5Q                         02690200
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  02690800
                   AIF   (T'&ZCGPR NE 'N').ZE5Q  INVALID REG NAME       02691400
.ZE5P              ANOP  ,                                              02692000
                   AIF   (T'&ZCGPR NE 'N').ZE5R  NON NUMERIC            02692600
                   AIF   ('&ZCGPR' LT '2').ZE5Q                         02693200
                   AIF   ('&ZCGPR' LE '12').ZE5R                        02693800
.ZE5Q              ANOP  ,                                              02694400
&ZMS               SETC  '"PRODOWNER='          *KGPRA* MNOTE           02695000
&ZMS               SETC  '&ZMS.&PRODOWNER"'                             02695600
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      02696200
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               02696800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        02697400
.ZE5R              ANOP  ,                                              02698000
.*----------------------------------------------------------------***   02698600
.***AE.KXVAR03 NAME, RQD INPUT, KEYS -XVAR KEY                          02699200
                   AIF   (N'&PRODNAME LE 1).ZE6A  CK NUM                02699800
&ZMS               SETC  '"PRODNAME='           *KPOSA* MNOTE           02700400
&ZMS               SETC  '&ZMS.&PRODNAME"'                              02701000
&ZMS               SETC  '&ZMS "PRODNAME"'                              02701600
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            02702200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        02702800
.ZE6A              ANOP  ,                                              02703400
.*-------------------------------------------------------------------   02704000
.***AE.KXVAR04 NAME, RQD INPUT, KEYS -XVAR ARGUMENT                     02704600
                   AIF   (K'&PRODNAME(1) LE 0).ZE6B NO PRM              02705200
&ZXPRODNAME        SETC  'INPUT'     SET IN/OUTPUT                      02705800
&XPRODNAME         SETC  '&PRODNAME(1)'         SET XVARIABLE           02706400
                   AIF   (N'&PRODNAME GT 1).ZE6B                        02707000
.*                 ANOP              MULTIPLE PARMS                     02707600
&XPRODNAME         SETC  '&PRODNAME'            SET XVARIABLE           02708200
.ZE6B              ANOP  ,                                              02708800
.*-------------------------------------------------------------------   02709400
.***AE.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    02710000
                   AIF   (K'&ZXPRODNAME LE 0).ZE6R  NOT I/O             02710600
                   AIF   ('&XPRODNAME'(1,1) NE '(').ZE6R                02711200
&ZCGPR             SETC  '&XPRODNAME'(2,K'&XPRODNAME-2)                 02711800
                   AIF   ('&ZCGPR'(1,1) NE '0').ZE6P                    02712400
                   AIF   (K'&ZCGPR GT 2).ZE6Q                           02713000
                   AIF   ('&ZCGPR' EQ '0').ZE6Q                         02713600
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  02714200
                   AIF   (T'&ZCGPR NE 'N').ZE6Q  INVALID REG NAME       02714800
.ZE6P              ANOP  ,                                              02715400
                   AIF   (T'&ZCGPR NE 'N').ZE6R  NON NUMERIC            02716000
                   AIF   ('&ZCGPR' LT '2').ZE6Q                         02716600
                   AIF   ('&ZCGPR' LE '12').ZE6R                        02717200
.ZE6Q              ANOP  ,                                              02717800
&ZMS               SETC  '"PRODNAME='           *KGPRA* MNOTE           02718400
&ZMS               SETC  '&ZMS.&PRODNAME"'                              02719000
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      02719600
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               02720200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        02720800
.ZE6R              ANOP  ,                                              02721400
.*----------------------------------------------------------------***   02722000
.***AE.KXVAR03 NAME, OPT INPUT, KEYS -XVAR KEY                          02722600
                   AIF   (N'&PRODVERS LE 1).ZE9A  CK NUM                02723200
&ZMS               SETC  '"PRODVERS='           *KPOSA* MNOTE           02723800
&ZMS               SETC  '&ZMS.&PRODVERS"'                              02724400
&ZMS               SETC  '&ZMS "PRODVERS"'                              02725000
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            02725600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        02726200
.ZE9A              ANOP  ,                                              02726800
.*-------------------------------------------------------------------   02727400
.***AE.KXVAR04 NAME, OPT INPUT, KEYS -XVAR ARGUMENT                     02728000
                   AIF   (K'&PRODVERS(1) LE 0).ZE9B NO PRM              02728600
&ZXPRODVERS        SETC  'INPUT'     SET IN/OUTPUT                      02729200
&XPRODVERS         SETC  '&PRODVERS(1)'         SET XVARIABLE           02729800
                   AIF   (N'&PRODVERS GT 1).ZE9B                        02730400
.*                 ANOP              MULTIPLE PARMS                     02731000
&XPRODVERS         SETC  '&PRODVERS'            SET XVARIABLE           02731600
.ZE9B              ANOP  ,                                              02732200
.*-------------------------------------------------------------------   02732800
.***AE.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    02733400
                   AIF   (K'&ZXPRODVERS LE 0).ZE9R  NOT I/O             02734000
                   AIF   ('&XPRODVERS'(1,1) NE '(').ZE9R                02734600
&ZCGPR             SETC  '&XPRODVERS'(2,K'&XPRODVERS-2)                 02735200
                   AIF   ('&ZCGPR'(1,1) NE '0').ZE9P                    02735800
                   AIF   (K'&ZCGPR GT 2).ZE9Q                           02736400
                   AIF   ('&ZCGPR' EQ '0').ZE9Q                         02737000
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  02737600
                   AIF   (T'&ZCGPR NE 'N').ZE9Q  INVALID REG NAME       02738200
.ZE9P              ANOP  ,                                              02738800
                   AIF   (T'&ZCGPR NE 'N').ZE9R  NON NUMERIC            02739400
                   AIF   ('&ZCGPR' LT '2').ZE9Q                         02740000
                   AIF   ('&ZCGPR' LE '12').ZE9R                        02740600
.ZE9Q              ANOP  ,                                              02741200
&ZMS               SETC  '"PRODVERS='           *KGPRA* MNOTE           02741800
&ZMS               SETC  '&ZMS.&PRODVERS"'                              02742400
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      02743000
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               02743600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        02744200
.ZE9R              ANOP  ,                                              02744800
.*----------------------------------------------------------------***   02745400
.***AE.KXVAR03 NAME, OPT INPUT, KEYS -XVAR KEY                          02746000
                   AIF   (N'&PRODQUAL LE 1).ZE10A  CK NUM               02746600
&ZMS               SETC  '"PRODQUAL='           *KPOSA* MNOTE           02747200
&ZMS               SETC  '&ZMS.&PRODQUAL"'                              02747800
&ZMS               SETC  '&ZMS "PRODQUAL"'                              02748400
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            02749000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        02749600
.ZE10A             ANOP  ,                                              02750200
.*-------------------------------------------------------------------   02750800
.***AE.KXVAR04 NAME, OPT INPUT, KEYS -XVAR ARGUMENT                     02751400
                   AIF   (K'&PRODQUAL(1) LE 0).ZE10B NO PRM             02752000
&ZXPRODQUAL        SETC  'INPUT'     SET IN/OUTPUT                      02752600
&XPRODQUAL         SETC  '&PRODQUAL(1)'         SET XVARIABLE           02753200
                   AIF   (N'&PRODQUAL GT 1).ZE10B                       02753800
.*                 ANOP              MULTIPLE PARMS                     02754400
&XPRODQUAL         SETC  '&PRODQUAL'            SET XVARIABLE           02755000
.ZE10B             ANOP  ,                                              02755600
.*-------------------------------------------------------------------   02756200
.***AE.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    02756800
                   AIF   (K'&ZXPRODQUAL LE 0).ZE10R  NOT I/O            02757400
                   AIF   ('&XPRODQUAL'(1,1) NE '(').ZE10R               02758000
&ZCGPR             SETC  '&XPRODQUAL'(2,K'&XPRODQUAL-2)                 02758600
                   AIF   ('&ZCGPR'(1,1) NE '0').ZE10P                   02759200
                   AIF   (K'&ZCGPR GT 2).ZE10Q                          02759800
                   AIF   ('&ZCGPR' EQ '0').ZE10Q                        02760400
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  02761000
                   AIF   (T'&ZCGPR NE 'N').ZE10Q  INVALID REG NAME      02761600
.ZE10P             ANOP  ,                                              02762200
                   AIF   (T'&ZCGPR NE 'N').ZE10R  NON NUMERIC           02762800
                   AIF   ('&ZCGPR' LT '2').ZE10Q                        02763400
                   AIF   ('&ZCGPR' LE '12').ZE10R                       02764000
.ZE10Q             ANOP  ,                                              02764600
&ZMS               SETC  '"PRODQUAL='           *KGPRA* MNOTE           02765200
&ZMS               SETC  '&ZMS.&PRODQUAL"'                              02765800
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      02766400
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               02767000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        02767600
.ZE10R             ANOP  ,                                              02768200
.*----------------------------------------------------------------***   02768800
.***AE.KXVAR03 NAME, OPT INPUT, KEYS -XVAR KEY                          02769400
                   AIF   (N'&PRODID LE 1).ZE11A  CK NUM                 02770000
&ZMS               SETC  '"PRODID='  *KPOSA* MNOTE                      02770600
&ZMS               SETC  '&ZMS.&PRODID"'                                02771200
&ZMS               SETC  '&ZMS "PRODID"'                                02771800
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            02772400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        02773000
.ZE11A             ANOP  ,                                              02773600
.*-------------------------------------------------------------------   02774200
.***AE.KXVAR04 NAME, OPT INPUT, KEYS -XVAR ARGUMENT                     02774800
                   AIF   (K'&PRODID(1) LE 0).ZE11B NO PRM               02775400
&ZXPRODID          SETC  'INPUT'     SET IN/OUTPUT                      02776000
&XPRODID           SETC  '&PRODID(1)'           SET XVARIABLE           02776600
                   AIF   (N'&PRODID GT 1).ZE11B                         02777200
.*                 ANOP              MULTIPLE PARMS                     02777800
&XPRODID           SETC  '&PRODID'   SET XVARIABLE                      02778400
.ZE11B             ANOP  ,                                              02779000
.*-------------------------------------------------------------------   02779600
.***AE.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    02780200
                   AIF   (K'&ZXPRODID LE 0).ZE11R  NOT I/O              02780800
                   AIF   ('&XPRODID'(1,1) NE '(').ZE11R                 02781400
&ZCGPR             SETC  '&XPRODID'(2,K'&XPRODID-2)                     02782000
                   AIF   ('&ZCGPR'(1,1) NE '0').ZE11P                   02782600
                   AIF   (K'&ZCGPR GT 2).ZE11Q                          02783200
                   AIF   ('&ZCGPR' EQ '0').ZE11Q                        02783800
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  02784400
                   AIF   (T'&ZCGPR NE 'N').ZE11Q  INVALID REG NAME      02785000
.ZE11P             ANOP  ,                                              02785600
                   AIF   (T'&ZCGPR NE 'N').ZE11R  NON NUMERIC           02786200
                   AIF   ('&ZCGPR' LT '2').ZE11Q                        02786800
                   AIF   ('&ZCGPR' LE '12').ZE11R                       02787400
.ZE11Q             ANOP  ,                                              02788000
&ZMS               SETC  '"PRODID='  *KGPRA* MNOTE                      02788600
&ZMS               SETC  '&ZMS.&PRODID"'                                02789200
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      02789800
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               02790400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        02791000
.ZE11R             ANOP  ,                                              02791600
.*-------------------------------------------------------------------   02792200
.***AE.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02792800
&ZTLC              SETC 'ADDRSP'                                        02793400
                   AIF   ('&DOMAIN(1)' NE '&ZTLC').ZE15A                02794000
&XDOMAIN           SETC  'ADDRSP'    SET KEYWORD                        02794600
                   AIF   (N'&DOMAIN LE 1).ZE15A  CK NUM                 02795200
&ZMS               SETC  '"DOMAIN='  *KPOSA* MNOTE                      02795800
&ZMS               SETC  '&ZMS.&DOMAIN"'                                02796400
&ZMS               SETC  '&ZMS "DOMAIN"'                                02797000
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            02797600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        02798200
.ZE15A             ANOP  ,                                              02798800
.*-------------------------------------------------------------------   02799400
.***AE.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02800000
&ZTLC              SETC 'TASK'                                          02800600
                   AIF   ('&DOMAIN(1)' NE '&ZTLC').ZE16A                02801200
&XDOMAIN           SETC  'TASK'      SET KEYWORD                        02801800
                   AIF   (N'&DOMAIN LE 1).ZE16A  CK NUM                 02802400
&ZMS               SETC  '"DOMAIN='  *KPOSA* MNOTE                      02803000
&ZMS               SETC  '&ZMS.&DOMAIN"'                                02803600
&ZMS               SETC  '&ZMS "DOMAIN"'                                02804200
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            02804800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        02805400
.ZE16A             ANOP  ,                                              02806000
.*----------------------------------------------------------------***   02806600
.***AE.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02807200
                   AIF   (N'&SCOPE LE 1).ZE18A  CK NUM                  02807800
&ZMS               SETC  '"SCOPE='   *KPOSA* MNOTE                      02808400
&ZMS               SETC  '&ZMS.&SCOPE"'                                 02809000
&ZMS               SETC  '&ZMS "SCOPE"'                                 02809600
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            02810200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        02810800
.ZE18A             ANOP  ,                                              02811400
.*-------------------------------------------------------------------   02812000
.***AE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02812600
.ZE19A   AIF   ('&SCOPE(1)' NE 'ALL').ZE20A                             02813200
&XSCOPE            SETC  'ALL'       SET KEYWORD                        02813800
.*-------------------------------------------------------------------   02814400
.***AE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02815000
.ZE20A   AIF   ('&SCOPE(1)' NE 'FUNCTION').ZE21A                        02815600
&XSCOPE            SETC  'FUNCTION'  SET KEYWORD                        02816200
.*-------------------------------------------------------------------   02816800
.***AE.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02817400
.ZE21A             AIF   (K'&XSCOPE GT 0).ZE21B  KEYWORD                02818000
                   AIF   (K'&SCOPE(1) LE 0).ZE21C                       02818600
&ZMS               SETC  '"SCOPE='   *KUKWA* MNOTE                      02819200
&ZMS               SETC  '&ZMS.&SCOPE"'                                 02819800
&ZMS               SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '      02820400
&ZMS               SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'            02821000
&ZMS               SETC  '&ZMS "ALL"'           VALID KEYWORD           02821600
&ZMS               SETC  '&ZMS OR "FUNCTION".'  VALID KEYWORD           02822200
                   MNOTE 8,' &ZMS '                                     02822800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        02823400
                   AGO   .ZE21C                                         02824000
.*                                                                      02850000
.ZE21B             ANOP  ,                                              02876400
&ZXSCOPE           SETC  'INPUT'     SET IN/OUTPUT                      02902800
.ZE21C             ANOP  ,                                              02929200
.*------------------------------------------------------------------    02955600
.***AE.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           02982000
.ZE22              AIF   (K'&XDOMAIN GT 0).ZE22A  VALID                 03008400
                   AIF   (K'&DOMAIN(1) LE 0).ZE22B                      03034800
&ZMS               SETC  '"DOMAIN='  *KUKWA* MNOTE                      03061200
&ZMS               SETC  '&ZMS.&DOMAIN"'                                03087600
&ZMS               SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '      03114000
&ZMS               SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'            03140400
&ZMS               SETC  '&ZMS "ADDRSP"'        VALID KEYWORD           03166800
&ZMS               SETC  '&ZMS OR "TASK".'      VALID KEYWORD           03193200
                   MNOTE 8,' &ZMS '                                     03219600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        03246000
                   AGO   .ZE22B                                         03272400
.*                                                                      03300000
.ZE22A             ANOP  ,                                              03350000
&ZXDOMAIN          SETC  'INPUT'     SET IN/OUTPUT                      03400000
.ZE22B             ANOP  ,                                              03450000
.*----------------------------------------------------------------***   03500000
.***AE.KXVAR03 NAME, OPT OUTPUT, KEYS -XVAR KEY                         03550000
                   AIF   (N'&PRTOKEN LE 1).ZE24A  CK NUM                03600000
&ZMS               SETC  '"PRTOKEN='            *KPOSA* MNOTE           03650000
&ZMS               SETC  '&ZMS.&PRTOKEN"'                               03700000
&ZMS               SETC  '&ZMS "PRTOKEN"'                               03750000
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            03800000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        03850000
.ZE24A             ANOP  ,                                              03900000
.*-------------------------------------------------------------------   03950000
.***AE.KXVAR04 NAME, OPT OUTPUT, KEYS -XVAR ARGUMENT                    04000000
                   AIF   (K'&PRTOKEN(1) LE 0).ZE24B NO PRM              04050000
&ZXPRTOKEN         SETC  'OUTPUT'    SET IN/OUTPUT                      04100000
&XPRTOKEN          SETC  '&PRTOKEN(1)'          SET XVARIABLE           04150000
                   AIF   (N'&PRTOKEN GT 1).ZE24B                        04200000
.*                 ANOP              MULTIPLE PARMS                     04250000
&XPRTOKEN          SETC  '&PRTOKEN'  SET XVARIABLE                      04300000
.ZE24B             ANOP  ,                                              04350000
.*-------------------------------------------------------------------   04400000
.***AE.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   04450000
                   AIF   (K'&ZXPRTOKEN LE 0).ZE24R  NOT I/O             04500000
                   AIF   ('&XPRTOKEN'(1,1) NE '(').ZE24R                04550000
&ZCGPR             SETC  '&XPRTOKEN'(2,K'&XPRTOKEN-2)                   04600000
                   AIF   ('&ZCGPR'(1,1) NE '0').ZE24P                   04650000
                   AIF   (K'&ZCGPR GT 2).ZE24Q                          04700000
                   AIF   ('&ZCGPR' EQ '0').ZE24Q                        04750000
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  04800000
                   AIF   (T'&ZCGPR NE 'N').ZE24Q  INVALID REG NAME      04850000
.ZE24P             ANOP  ,                                              04900000
                   AIF   (T'&ZCGPR NE 'N').ZE24R  NON NUMERIC           04950000
                   AIF   ('&ZCGPR' LT '2').ZE24Q                        05000000
                   AIF   ('&ZCGPR' LE '12').ZE24R                       05050000
.ZE24Q             ANOP  ,                                              05100000
&ZMS               SETC  '"PRTOKEN='            *KGPRA* MNOTE           05150000
&ZMS               SETC  '&ZMS.&PRTOKEN"'                               05200000
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      05250000
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               05300000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        05350000
.ZE24R             ANOP  ,                                              05400000
.*----------------------------------------------------------------***   05450000
.***AE.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             05500000
                   AIF   (N'&LINKAGE LE 1).ZE27A  CK NUM                05550000
&ZMS               SETC  '"LINKAGE='            *KPOSA* MNOTE           05600000
&ZMS               SETC  '&ZMS.&LINKAGE"'                               05650000
&ZMS               SETC  '&ZMS "LINKAGE"'                               05700000
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            05750000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        05800000
.ZE27A             ANOP  ,                                              05850000
.*-------------------------------------------------------------------   05900000
.***AE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             05950000
.ZE28A   AIF   ('&LINKAGE(1)' NE 'SVC').ZE29A                           06000000
&XLINKAGE          SETC  'SVC'       SET KEYWORD                        06050000
.*-------------------------------------------------------------------   06100000
.***AE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             06150000
.ZE29A   AIF   ('&LINKAGE(1)' NE 'BRANCH').ZE30A                        06200000
&XLINKAGE          SETC  'BRANCH'    SET KEYWORD                        06250000
.*-------------------------------------------------------------------   06300000
.***AE.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             06350000
.ZE30A             AIF   (K'&XLINKAGE GT 0).ZE30B  KEYWORD              06400000
                   AIF   (K'&LINKAGE(1) LE 0).ZE30C                     06450000
&ZMS               SETC  '"LINKAGE='            *KUKWA* MNOTE           06500000
&ZMS               SETC  '&ZMS.&LINKAGE"'                               06550000
&ZMS               SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '      06600000
&ZMS               SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'            06650000
&ZMS               SETC  '&ZMS "SVC"'           VALID KEYWORD           06700000
&ZMS               SETC  '&ZMS OR "BRANCH".'    VALID KEYWORD           06750000
                   MNOTE 8,' &ZMS '                                     06800000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        06850000
                   AGO   .ZE30C                                         06900000
.*                                                                      40950000
.ZE30B             ANOP  ,                                              40951800
&ZXLINKAGE         SETC  'INPUT'     SET IN/OUTPUT                      40953600
.ZE30C             ANOP  ,                                              40955400
.*-------------------------------------------------------------------   40957200
.***AE.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           40959000
&ZTLC              SETC 'DEREGISTER'                                    40960800
                   AIF   ('&REQUEST(1)' NE '&ZTLC').ZE31A               40962600
&XREQUEST          SETC  'DEREGISTER'           SET KEYWORD             40964400
                   AIF   (N'&REQUEST LE 1).ZE31A  CK NUM                40966200
&ZMS               SETC  '"REQUEST='            *KPOSA* MNOTE           40968000
&ZMS               SETC  '&ZMS.&REQUEST"'                               40969800
&ZMS               SETC  '&ZMS "REQUEST"'                               40971600
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            40973400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        40975200
.ZE31A             ANOP  ,                                              40977000
.*----------------------------------------------------------------***   40978800
.***AE.KMEKY01 NAME, RQD INPUT, ME KEYS -XVARIABLE                      40980600
&XDEREGPRODNAME    SETC  ''          INITIALIZE XVARIABLE               40982400
                   AIF   (K'&PRODOWNER LE 0).ZE33C                      40984200
&ZXDEREGPRODNAME   SETC  'INPUT'     SET IN/OUTPUT                      40986000
&XDEREGPRODNAME    SETC  'PRODOWNER'            SET XVARIABLE           40987800
&ZXPRODOWNER       SETC  'INPUT'     SET IN/OUTPUT                      40989600
&XPRODOWNER        SETC  '&PRODOWNER(1)'        SET XVARIABLE PARM      40991400
                   AIF   (N'&PRODOWNER GT 1).ZE33A  MULTIPLE PARMS      40993200
&XPRODOWNER        SETC  '&PRODOWNER'           SET XVARIABLE PARM      40995000
.ZE33A             AIF   (N'&PRODOWNER LE 1).ZE33B  CK NUM              40996800
&ZMS               SETC  '"PRODOWNER='          *KPOSA* MNOTE           40998600
&ZMS               SETC  '&ZMS.&PRODOWNER"'                             41000400
&ZMS               SETC  '&ZMS "PRODOWNER"'                             41002200
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            41004000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        41005800
.ZE33B             AIF   (K'&XPRODOWNER GT 0).ZE33C  ONE PARM           41007600
&ZXDEREGPRODNAME   SETC  ''          RESET IN/OUTPUT                    41009400
&ZXPRODOWNER       SETC  ''          RESET IN/OUTPUT                    41011200
.ZE33C             ANOP  ,                                              41013000
.*----------------------------------------------------------------***   41014800
.***AE.KMEKY02 NAME, RQD INPUT, ME KEYS -NON-XVAR KEY                   41016600
                   AIF   (K'&PRTOKEN LE 0).ZE42D  NO ME KEY             41018400
                   AIF   (N'&PRTOKEN LE 1).ZE42A  CK NUM                41020200
&ZMS               SETC  '"PRTOKEN='            *KPOSA* MNOTE           41022000
&ZMS               SETC  '&ZMS.&PRTOKEN"'                               41023800
&ZMS               SETC  '&ZMS "PRTOKEN"'                               41025600
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            41027400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        41029200
.ZE42A             AIF   (K'&XDEREGPRODNAME LE 0).ZE42B                 41031000
&ZMS               SETC  '"PRTOKEN'  *KMEKA* MNOTE                      41032800
&ZMS               SETC  '&ZMS.=&PRTOKEN"'                              41034600
&ZMS               SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'          41036400
&ZMS               SETC  '&ZMS "&XDEREGPRODNAME"'                       41038200
                   MNOTE 8,' &ZMS KEY.'                                 41040000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        41041800
                   AGO   .ZE42D                                         41043600
.*                                                                      41050000
.ZE42B             ANOP  ,                                              41050800
&ZXDEREGPRODNAME   SETC  'INPUT'     SET IN/OUTPUT                      41051600
&XDEREGPRODNAME    SETC  'PRTOKEN'   SET XVARIABLE                      41052400
&ZXPRTOKEN         SETC  'INPUT'     SET IN/OUTPUT                      41053200
&XPRTOKEN          SETC  '&PRTOKEN(1)'          SET PARM                41054000
                   AIF   (N'&PRTOKEN GT 1).ZE42C  MULTIPLE PARMS        41054800
&XPRTOKEN          SETC  '&PRTOKEN'  SET PARM                           41055600
.ZE42C             AIF   (K'&XPRTOKEN GT 0).ZE42D  ONE PARM             41056400
&ZXDEREGPRODNAME   SETC  ''          RESET IN/OUTPUT                    41057200
&ZXPRTOKEN         SETC  ''          RESET IN/OUTPUT                    41058000
.ZE42D             ANOP  ,                                              41058800
.*------------------------------------------------------------------    41059600
.***AE.KMEKY07 NAME, RQD INPUT, ME KEYS -CHECK IF ENTERED               41060400
                   AIF   (K'&XDEREGPRODNAME GT 0).ZE43B                 41061200
&ZXDEREGPRODNAME   SETC  ''          RESET IN/OUTPUT                    41062000
&XDEREGPRODNAME    SETC  ''          SET NULL                           41062800
&ZXPRODOWNER       SETC  ''          RESET OUTPUT                       41063600
&XPRODOWNER        SETC  ''          SET NULL PARM                      41064400
.ZE43B             ANOP  ,                                              41065200
.*-------------------------------------------------------------------   41066000
.***AE.KMEKY08 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           41066800
.ZE33     AIF   ('&XDEREGPRODNAME' NE 'PRODOWNER').ZE42                 41067600
.*-------------------------------------------------------------------   41068400
.***AE.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 41069200
                   AIF   (K'&ZXPRODOWNER LE 0).ZE33R  NOT I/O           41070000
                   AIF   ('&XPRODOWNER'(1,1) NE '(').ZE33R              41070800
&ZCGPR             SETC  '&XPRODOWNER'(2,K'&XPRODOWNER-2)               41071600
                   AIF   ('&ZCGPR'(1,1) NE '0').ZE33P                   41072400
                   AIF   (K'&ZCGPR GT 2).ZE33Q                          41073200
                   AIF   ('&ZCGPR' EQ '0').ZE33Q                        41074000
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  41074800
                   AIF   (T'&ZCGPR NE 'N').ZE33Q  INVALID REG NAME      41075600
.ZE33P             ANOP  ,                                              41076400
                   AIF   (T'&ZCGPR NE 'N').ZE33R  NON NUMERIC           41077200
                   AIF   ('&ZCGPR' LT '2').ZE33Q                        41078000
                   AIF   ('&ZCGPR' LE '12').ZE33R                       41078800
.ZE33Q             ANOP  ,                                              41079600
&ZMS               SETC  '"PRODOWNER='          *KGPRA* MNOTE           41080400
&ZMS               SETC  '&ZMS.&PRODOWNER"'                             41081200
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      41082000
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               41082800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        41083600
.ZE33R             ANOP  ,                                              41084400
.*----------------------------------------------------------------***   41085200
.***AE.KXVAR03 NAME, RQD INPUT, KEYS -XVAR KEY                          41086000
                   AIF   (N'&PRODNAME LE 1).ZE35A  CK NUM               41086800
&ZMS               SETC  '"PRODNAME='           *KPOSA* MNOTE           41087600
&ZMS               SETC  '&ZMS.&PRODNAME"'                              41088400
&ZMS               SETC  '&ZMS "PRODNAME"'                              41089200
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            41090000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        41090800
.ZE35A             ANOP  ,                                              41091600
.*-------------------------------------------------------------------   41092400
.***AE.KXVAR04 NAME, RQD INPUT, KEYS -XVAR ARGUMENT                     41093200
                   AIF   (K'&PRODNAME(1) LE 0).ZE35B NO PRM             41094000
&ZXPRODNAME        SETC  'INPUT'     SET IN/OUTPUT                      41094800
&XPRODNAME         SETC  '&PRODNAME(1)'         SET XVARIABLE           41095600
                   AIF   (N'&PRODNAME GT 1).ZE35B                       41096400
.*                 ANOP              MULTIPLE PARMS                     41097200
&XPRODNAME         SETC  '&PRODNAME'            SET XVARIABLE           41098000
.ZE35B             ANOP  ,                                              41098800
.*-------------------------------------------------------------------   41099600
.***AE.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    41100400
                   AIF   (K'&ZXPRODNAME LE 0).ZE35R  NOT I/O            41101200
                   AIF   ('&XPRODNAME'(1,1) NE '(').ZE35R               41102000
&ZCGPR             SETC  '&XPRODNAME'(2,K'&XPRODNAME-2)                 41102800
                   AIF   ('&ZCGPR'(1,1) NE '0').ZE35P                   41103600
                   AIF   (K'&ZCGPR GT 2).ZE35Q                          41104400
                   AIF   ('&ZCGPR' EQ '0').ZE35Q                        41105200
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  41106000
                   AIF   (T'&ZCGPR NE 'N').ZE35Q  INVALID REG NAME      41106800
.ZE35P             ANOP  ,                                              41107600
                   AIF   (T'&ZCGPR NE 'N').ZE35R  NON NUMERIC           41108400
                   AIF   ('&ZCGPR' LT '2').ZE35Q                        41109200
                   AIF   ('&ZCGPR' LE '12').ZE35R                       41110000
.ZE35Q             ANOP  ,                                              41110800
&ZMS               SETC  '"PRODNAME='           *KGPRA* MNOTE           41111600
&ZMS               SETC  '&ZMS.&PRODNAME"'                              41112400
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      41113200
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               41114000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        41114800
.ZE35R             ANOP  ,                                              41115600
.*----------------------------------------------------------------***   41116400
.***AE.KXVAR03 NAME, OPT INPUT, KEYS -XVAR KEY                          41117200
                   AIF   (N'&PRODVERS LE 1).ZE38A  CK NUM               41118000
&ZMS               SETC  '"PRODVERS='           *KPOSA* MNOTE           41118800
&ZMS               SETC  '&ZMS.&PRODVERS"'                              41119600
&ZMS               SETC  '&ZMS "PRODVERS"'                              41120400
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            41121200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        41122000
.ZE38A             ANOP  ,                                              41122800
.*-------------------------------------------------------------------   41123600
.***AE.KXVAR04 NAME, OPT INPUT, KEYS -XVAR ARGUMENT                     41124400
                   AIF   (K'&PRODVERS(1) LE 0).ZE38B NO PRM             41125200
&ZXPRODVERS        SETC  'INPUT'     SET IN/OUTPUT                      41126000
&XPRODVERS         SETC  '&PRODVERS(1)'         SET XVARIABLE           41126800
                   AIF   (N'&PRODVERS GT 1).ZE38B                       41127600
.*                 ANOP              MULTIPLE PARMS                     41128400
&XPRODVERS         SETC  '&PRODVERS'            SET XVARIABLE           41129200
.ZE38B             ANOP  ,                                              41130000
.*-------------------------------------------------------------------   41130800
.***AE.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    41131600
                   AIF   (K'&ZXPRODVERS LE 0).ZE38R  NOT I/O            41132400
                   AIF   ('&XPRODVERS'(1,1) NE '(').ZE38R               41133200
&ZCGPR             SETC  '&XPRODVERS'(2,K'&XPRODVERS-2)                 41134000
                   AIF   ('&ZCGPR'(1,1) NE '0').ZE38P                   41134800
                   AIF   (K'&ZCGPR GT 2).ZE38Q                          41135600
                   AIF   ('&ZCGPR' EQ '0').ZE38Q                        41136400
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  41137200
                   AIF   (T'&ZCGPR NE 'N').ZE38Q  INVALID REG NAME      41138000
.ZE38P             ANOP  ,                                              41138800
                   AIF   (T'&ZCGPR NE 'N').ZE38R  NON NUMERIC           41139600
                   AIF   ('&ZCGPR' LT '2').ZE38Q                        41140400
                   AIF   ('&ZCGPR' LE '12').ZE38R                       41141200
.ZE38Q             ANOP  ,                                              41142000
&ZMS               SETC  '"PRODVERS='           *KGPRA* MNOTE           41142800
&ZMS               SETC  '&ZMS.&PRODVERS"'                              41143600
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      41144400
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               41145200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        41146000
.ZE38R             ANOP  ,                                              41146800
.*----------------------------------------------------------------***   41147600
.***AE.KXVAR03 NAME, OPT INPUT, KEYS -XVAR KEY                          41148400
                   AIF   (N'&PRODQUAL LE 1).ZE39A  CK NUM               41149200
&ZMS               SETC  '"PRODQUAL='           *KPOSA* MNOTE           41150000
&ZMS               SETC  '&ZMS.&PRODQUAL"'                              41150800
&ZMS               SETC  '&ZMS "PRODQUAL"'                              41151600
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            41152400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        41153200
.ZE39A             ANOP  ,                                              41154000
.*-------------------------------------------------------------------   41154800
.***AE.KXVAR04 NAME, OPT INPUT, KEYS -XVAR ARGUMENT                     41155600
                   AIF   (K'&PRODQUAL(1) LE 0).ZE39B NO PRM             41156400
&ZXPRODQUAL        SETC  'INPUT'     SET IN/OUTPUT                      41157200
&XPRODQUAL         SETC  '&PRODQUAL(1)'         SET XVARIABLE           41158000
                   AIF   (N'&PRODQUAL GT 1).ZE39B                       41158800
.*                 ANOP              MULTIPLE PARMS                     41159600
&XPRODQUAL         SETC  '&PRODQUAL'            SET XVARIABLE           41160400
.ZE39B             ANOP  ,                                              41161200
.*-------------------------------------------------------------------   41162000
.***AE.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    41162800
                   AIF   (K'&ZXPRODQUAL LE 0).ZE39R  NOT I/O            41163600
                   AIF   ('&XPRODQUAL'(1,1) NE '(').ZE39R               41164400
&ZCGPR             SETC  '&XPRODQUAL'(2,K'&XPRODQUAL-2)                 41165200
                   AIF   ('&ZCGPR'(1,1) NE '0').ZE39P                   41166000
                   AIF   (K'&ZCGPR GT 2).ZE39Q                          41166800
                   AIF   ('&ZCGPR' EQ '0').ZE39Q                        41167600
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  41168400
                   AIF   (T'&ZCGPR NE 'N').ZE39Q  INVALID REG NAME      41169200
.ZE39P             ANOP  ,                                              41170000
                   AIF   (T'&ZCGPR NE 'N').ZE39R  NON NUMERIC           41170800
                   AIF   ('&ZCGPR' LT '2').ZE39Q                        41171600
                   AIF   ('&ZCGPR' LE '12').ZE39R                       41172400
.ZE39Q             ANOP  ,                                              41173200
&ZMS               SETC  '"PRODQUAL='           *KGPRA* MNOTE           41174000
&ZMS               SETC  '&ZMS.&PRODQUAL"'                              41174800
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      41175600
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               41176400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        41177200
.ZE39R             ANOP  ,                                              41178000
.*----------------------------------------------------------------***   41178800
.***AE.KXVAR03 NAME, OPT INPUT, KEYS -XVAR KEY                          41179600
                   AIF   (N'&PRODID LE 1).ZE40A  CK NUM                 41180400
&ZMS               SETC  '"PRODID='  *KPOSA* MNOTE                      41181200
&ZMS               SETC  '&ZMS.&PRODID"'                                41182000
&ZMS               SETC  '&ZMS "PRODID"'                                41182800
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            41183600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        41184400
.ZE40A             ANOP  ,                                              41185200
.*-------------------------------------------------------------------   41186000
.***AE.KXVAR04 NAME, OPT INPUT, KEYS -XVAR ARGUMENT                     41186800
                   AIF   (K'&PRODID(1) LE 0).ZE40B NO PRM               41187600
&ZXPRODID          SETC  'INPUT'     SET IN/OUTPUT                      41188400
&XPRODID           SETC  '&PRODID(1)'           SET XVARIABLE           41189200
                   AIF   (N'&PRODID GT 1).ZE40B                         41190000
.*                 ANOP              MULTIPLE PARMS                     41190800
&XPRODID           SETC  '&PRODID'   SET XVARIABLE                      41191600
.ZE40B             ANOP  ,                                              41192400
.*-------------------------------------------------------------------   41193200
.***AE.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    41194000
                   AIF   (K'&ZXPRODID LE 0).ZE40R  NOT I/O              41194800
                   AIF   ('&XPRODID'(1,1) NE '(').ZE40R                 41195600
&ZCGPR             SETC  '&XPRODID'(2,K'&XPRODID-2)                     41196400
                   AIF   ('&ZCGPR'(1,1) NE '0').ZE40P                   41197200
                   AIF   (K'&ZCGPR GT 2).ZE40Q                          41198000
                   AIF   ('&ZCGPR' EQ '0').ZE40Q                        41198800
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  41199600
                   AIF   (T'&ZCGPR NE 'N').ZE40Q  INVALID REG NAME      41200400
.ZE40P             ANOP  ,                                              41201200
                   AIF   (T'&ZCGPR NE 'N').ZE40R  NON NUMERIC           41202000
                   AIF   ('&ZCGPR' LT '2').ZE40Q                        41202800
                   AIF   ('&ZCGPR' LE '12').ZE40R                       41203600
.ZE40Q             ANOP  ,                                              41204400
&ZMS               SETC  '"PRODID='  *KGPRA* MNOTE                      41205200
&ZMS               SETC  '&ZMS.&PRODID"'                                41206000
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      41206800
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               41207600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        41208400
.ZE40R             ANOP  ,                                              41209200
.*-------------------------------------------------------------------   41210000
.***AE.KMEKY08 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           41210800
.ZE42     AIF   ('&XDEREGPRODNAME' NE 'PRTOKEN').ZE43                   41211600
.*-------------------------------------------------------------------   41212400
.***AE.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 41213200
                   AIF   (K'&ZXPRTOKEN LE 0).ZE42R  NOT I/O             41214000
                   AIF   ('&XPRTOKEN'(1,1) NE '(').ZE42R                41214800
&ZCGPR             SETC  '&XPRTOKEN'(2,K'&XPRTOKEN-2)                   41215600
                   AIF   ('&ZCGPR'(1,1) NE '0').ZE42P                   41216400
                   AIF   (K'&ZCGPR GT 2).ZE42Q                          41217200
                   AIF   ('&ZCGPR' EQ '0').ZE42Q                        41218000
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  41218800
                   AIF   (T'&ZCGPR NE 'N').ZE42Q  INVALID REG NAME      41219600
.ZE42P             ANOP  ,                                              41220400
                   AIF   (T'&ZCGPR NE 'N').ZE42R  NON NUMERIC           41221200
                   AIF   ('&ZCGPR' LT '2').ZE42Q                        41222000
                   AIF   ('&ZCGPR' LE '12').ZE42R                       41222800
.ZE42Q             ANOP  ,                                              41223600
&ZMS               SETC  '"PRTOKEN='            *KGPRA* MNOTE           41224400
&ZMS               SETC  '&ZMS.&PRTOKEN"'                               41225200
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      41226000
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               41226800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        41227600
.ZE42R             ANOP  ,                                              41228400
.*-------------------------------------------------------------------   41229200
.***AE.KMEKY09 NAME, RQD INPUT, ME KEYS -END                            41230000
.ZE43              ANOP  ,           END MUTUALLY EXCLUSIVE KEYS        41230800
.*----------------------------------------------------------------***   41231600
.***AE.KXVAR03 NAME, OPT OUTPUT, KEYS -XVAR KEY                         41232400
                   AIF   (N'&ENDTIME LE 1).ZE45A  CK NUM                41233200
&ZMS               SETC  '"ENDTIME='            *KPOSA* MNOTE           41234000
&ZMS               SETC  '&ZMS.&ENDTIME"'                               41234800
&ZMS               SETC  '&ZMS "ENDTIME"'                               41235600
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            41236400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        41237200
.ZE45A             ANOP  ,                                              41238000
.*-------------------------------------------------------------------   41238800
.***AE.KXVAR04 NAME, OPT OUTPUT, KEYS -XVAR ARGUMENT                    41239600
                   AIF   (K'&ENDTIME(1) LE 0).ZE45B NO PRM              41240400
&ZXENDTIME         SETC  'OUTPUT'    SET IN/OUTPUT                      41241200
&XENDTIME          SETC  '&ENDTIME(1)'          SET XVARIABLE           41242000
                   AIF   (N'&ENDTIME GT 1).ZE45B                        41242800
.*                 ANOP              MULTIPLE PARMS                     41243600
&XENDTIME          SETC  '&ENDTIME'  SET XVARIABLE                      41244400
.ZE45B             ANOP  ,                                              41245200
.*-------------------------------------------------------------------   41246000
.***AE.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   41246800
                   AIF   (K'&ZXENDTIME LE 0).ZE45R  NOT I/O             41247600
                   AIF   ('&XENDTIME'(1,1) NE '(').ZE45R                41248400
&ZCGPR             SETC  '&XENDTIME'(2,K'&XENDTIME-2)                   41249200
                   AIF   ('&ZCGPR'(1,1) NE '0').ZE45P                   41250000
                   AIF   (K'&ZCGPR GT 2).ZE45Q                          41250800
                   AIF   ('&ZCGPR' EQ '0').ZE45Q                        41251600
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  41252400
                   AIF   (T'&ZCGPR NE 'N').ZE45Q  INVALID REG NAME      41253200
.ZE45P             ANOP  ,                                              41254000
                   AIF   (T'&ZCGPR NE 'N').ZE45R  NON NUMERIC           41254800
                   AIF   ('&ZCGPR' LT '2').ZE45Q                        41255600
                   AIF   ('&ZCGPR' LE '12').ZE45R                       41256400
.ZE45Q             ANOP  ,                                              41257200
&ZMS               SETC  '"ENDTIME='            *KGPRA* MNOTE           41258000
&ZMS               SETC  '&ZMS.&ENDTIME"'                               41258800
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      41259600
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               41260400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        41261200
.ZE45R             ANOP  ,                                              41262000
.*----------------------------------------------------------------***   41262800
.***AE.KXVAR03 NAME, OPT OUTPUT, KEYS -XVAR KEY                         41263600
                   AIF   (N'&ENDDATA LE 1).ZE46A  CK NUM                41264400
&ZMS               SETC  '"ENDDATA='            *KPOSA* MNOTE           41265200
&ZMS               SETC  '&ZMS.&ENDDATA"'                               41266000
&ZMS               SETC  '&ZMS "ENDDATA"'                               41266800
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            41267600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        41268400
.ZE46A             ANOP  ,                                              41269200
.*-------------------------------------------------------------------   41270000
.***AE.KXVAR04 NAME, OPT OUTPUT, KEYS -XVAR ARGUMENT                    41270800
                   AIF   (K'&ENDDATA(1) LE 0).ZE46B NO PRM              41271600
&ZXENDDATA         SETC  'OUTPUT'    SET IN/OUTPUT                      41272400
&XENDDATA          SETC  '&ENDDATA(1)'          SET XVARIABLE           41273200
                   AIF   (N'&ENDDATA GT 1).ZE46B                        41274000
.*                 ANOP              MULTIPLE PARMS                     41274800
&XENDDATA          SETC  '&ENDDATA'  SET XVARIABLE                      41275600
.ZE46B             ANOP  ,                                              41276400
.*-------------------------------------------------------------------   41277200
.***AE.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   41278000
                   AIF   (K'&ZXENDDATA LE 0).ZE46R  NOT I/O             41278800
                   AIF   ('&XENDDATA'(1,1) NE '(').ZE46R                41279600
&ZCGPR             SETC  '&XENDDATA'(2,K'&XENDDATA-2)                   41280400
                   AIF   ('&ZCGPR'(1,1) NE '0').ZE46P                   41281200
                   AIF   (K'&ZCGPR GT 2).ZE46Q                          41282000
                   AIF   ('&ZCGPR' EQ '0').ZE46Q                        41282800
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  41283600
                   AIF   (T'&ZCGPR NE 'N').ZE46Q  INVALID REG NAME      41284400
.ZE46P             ANOP  ,                                              41285200
                   AIF   (T'&ZCGPR NE 'N').ZE46R  NON NUMERIC           41286000
                   AIF   ('&ZCGPR' LT '2').ZE46Q                        41286800
                   AIF   ('&ZCGPR' LE '12').ZE46R                       41287600
.ZE46Q             ANOP  ,                                              41288400
&ZMS               SETC  '"ENDDATA='            *KGPRA* MNOTE           41289200
&ZMS               SETC  '&ZMS.&ENDDATA"'                               41290000
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      41290800
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               41291600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        41292400
.ZE46R             ANOP  ,                                              41293200
.*----------------------------------------------------------------***   41294000
.***AE.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             41294800
                   AIF   (N'&LINKAGE LE 1).ZE49A  CK NUM                41295600
&ZMS               SETC  '"LINKAGE='            *KPOSA* MNOTE           41296400
&ZMS               SETC  '&ZMS.&LINKAGE"'                               41297200
&ZMS               SETC  '&ZMS "LINKAGE"'                               41298000
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            41298800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        41299600
.ZE49A             ANOP  ,                                              41300400
.*-------------------------------------------------------------------   41301200
.***AE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             41302000
.ZE50A   AIF   ('&LINKAGE(1)' NE 'SVC').ZE51A                           41302800
&XLINKAGE          SETC  'SVC'       SET KEYWORD                        41303600
.*-------------------------------------------------------------------   41304400
.***AE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             41305200
.ZE51A   AIF   ('&LINKAGE(1)' NE 'BRANCH').ZE52A                        41306000
&XLINKAGE          SETC  'BRANCH'    SET KEYWORD                        41306800
.*-------------------------------------------------------------------   41307600
.***AE.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             41308400
.ZE52A             AIF   (K'&XLINKAGE GT 0).ZE52B  KEYWORD              41309200
                   AIF   (K'&LINKAGE(1) LE 0).ZE52C                     41310000
&ZMS               SETC  '"LINKAGE='            *KUKWA* MNOTE           41310800
&ZMS               SETC  '&ZMS.&LINKAGE"'                               41311600
&ZMS               SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '      41312400
&ZMS               SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'            41313200
&ZMS               SETC  '&ZMS "SVC"'           VALID KEYWORD           41314000
&ZMS               SETC  '&ZMS OR "BRANCH".'    VALID KEYWORD           41314800
                   MNOTE 8,' &ZMS '                                     41315600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        41316400
                   AGO   .ZE52C                                         41317200
.*                                                                      41350000
.ZE52B             ANOP  ,                                              41354700
&ZXLINKAGE         SETC  'INPUT'     SET IN/OUTPUT                      41359400
.ZE52C             ANOP  ,                                              41364100
.*-------------------------------------------------------------------   41368800
.***AE.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           41373500
&ZTLC              SETC 'FUNCTIONBEGIN'                                 41378200
                   AIF   ('&REQUEST(1)' NE '&ZTLC').ZE53A               41382900
&XREQUEST          SETC  'FUNCTIONBEGIN'        SET KEYWORD             41387600
                   AIF   (N'&REQUEST LE 1).ZE53A  CK NUM                41392300
&ZMS               SETC  '"REQUEST='            *KPOSA* MNOTE           41397000
&ZMS               SETC  '&ZMS.&REQUEST"'                               41401700
&ZMS               SETC  '&ZMS "REQUEST"'                               41406400
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            41411100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        41415800
.ZE53A             ANOP  ,                                              41420500
.*----------------------------------------------------------------***   41425200
.***AE.KMEKY01 NAME, RQD INPUT, ME KEYS -XVARIABLE                      41429900
&XBEGINPRODNAME    SETC  ''          INITIALIZE XVARIABLE               41434600
                   AIF   (K'&PRODOWNER LE 0).ZE55C                      41439300
&ZXBEGINPRODNAME   SETC  'INPUT'     SET IN/OUTPUT                      41444000
&XBEGINPRODNAME    SETC  'PRODOWNER'            SET XVARIABLE           41448700
&ZXPRODOWNER       SETC  'INPUT'     SET IN/OUTPUT                      41453400
&XPRODOWNER        SETC  '&PRODOWNER(1)'        SET XVARIABLE PARM      41458100
                   AIF   (N'&PRODOWNER GT 1).ZE55A  MULTIPLE PARMS      41462800
&XPRODOWNER        SETC  '&PRODOWNER'           SET XVARIABLE PARM      41467500
.ZE55A             AIF   (N'&PRODOWNER LE 1).ZE55B  CK NUM              41472200
&ZMS               SETC  '"PRODOWNER='          *KPOSA* MNOTE           41476900
&ZMS               SETC  '&ZMS.&PRODOWNER"'                             41481600
&ZMS               SETC  '&ZMS "PRODOWNER"'                             41486300
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            41491000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        41495700
.ZE55B             AIF   (K'&XPRODOWNER GT 0).ZE55C  ONE PARM           41500400
&ZXBEGINPRODNAME   SETC  ''          RESET IN/OUTPUT                    41505100
&ZXPRODOWNER       SETC  ''          RESET IN/OUTPUT                    41509800
.ZE55C             ANOP  ,                                              41514500
.*----------------------------------------------------------------***   41519200
.***AE.KMEKY02 NAME, RQD INPUT, ME KEYS -NON-XVAR KEY                   41523900
                   AIF   (K'&PRTOKEN LE 0).ZE64D  NO ME KEY             41528600
                   AIF   (N'&PRTOKEN LE 1).ZE64A  CK NUM                41533300
&ZMS               SETC  '"PRTOKEN='            *KPOSA* MNOTE           41538000
&ZMS               SETC  '&ZMS.&PRTOKEN"'                               41542700
&ZMS               SETC  '&ZMS "PRTOKEN"'                               41547400
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            41552100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        41556800
.ZE64A             AIF   (K'&XBEGINPRODNAME LE 0).ZE64B                 41561500
&ZMS               SETC  '"PRTOKEN'  *KMEKA* MNOTE                      41566200
&ZMS               SETC  '&ZMS.=&PRTOKEN"'                              41570900
&ZMS               SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'          41575600
&ZMS               SETC  '&ZMS "&XBEGINPRODNAME"'                       41580300
                   MNOTE 8,' &ZMS KEY.'                                 41585000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        41589700
                   AGO   .ZE64D                                         41594400
.*                                                                      41600000
.ZE64B             ANOP  ,                                              41601000
&ZXBEGINPRODNAME   SETC  'INPUT'     SET IN/OUTPUT                      41602000
&XBEGINPRODNAME    SETC  'PRTOKEN'   SET XVARIABLE                      41603000
&ZXPRTOKEN         SETC  'INPUT'     SET IN/OUTPUT                      41604000
&XPRTOKEN          SETC  '&PRTOKEN(1)'          SET PARM                41605000
                   AIF   (N'&PRTOKEN GT 1).ZE64C  MULTIPLE PARMS        41606000
&XPRTOKEN          SETC  '&PRTOKEN'  SET PARM                           41607000
.ZE64C             AIF   (K'&XPRTOKEN GT 0).ZE64D  ONE PARM             41608000
&ZXBEGINPRODNAME   SETC  ''          RESET IN/OUTPUT                    41609000
&ZXPRTOKEN         SETC  ''          RESET IN/OUTPUT                    41610000
.ZE64D             ANOP  ,                                              41611000
.*------------------------------------------------------------------    41612000
.***AE.KMEKY07 NAME, RQD INPUT, ME KEYS -CHECK IF ENTERED               41613000
                   AIF   (K'&XBEGINPRODNAME GT 0).ZE65B                 41614000
&ZXBEGINPRODNAME   SETC  ''          RESET IN/OUTPUT                    41615000
&XBEGINPRODNAME    SETC  ''          SET NULL                           41616000
&ZXPRODOWNER       SETC  ''          RESET OUTPUT                       41617000
&XPRODOWNER        SETC  ''          SET NULL PARM                      41618000
.ZE65B             ANOP  ,                                              41619000
.*-------------------------------------------------------------------   41620000
.***AE.KMEKY08 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           41621000
.ZE55     AIF   ('&XBEGINPRODNAME' NE 'PRODOWNER').ZE64                 41622000
.*-------------------------------------------------------------------   41623000
.***AE.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 41624000
                   AIF   (K'&ZXPRODOWNER LE 0).ZE55R  NOT I/O           41625000
                   AIF   ('&XPRODOWNER'(1,1) NE '(').ZE55R              41626000
&ZCGPR             SETC  '&XPRODOWNER'(2,K'&XPRODOWNER-2)               41627000
                   AIF   ('&ZCGPR'(1,1) NE '0').ZE55P                   41628000
                   AIF   (K'&ZCGPR GT 2).ZE55Q                          41629000
                   AIF   ('&ZCGPR' EQ '0').ZE55Q                        41630000
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  41631000
                   AIF   (T'&ZCGPR NE 'N').ZE55Q  INVALID REG NAME      41632000
.ZE55P             ANOP  ,                                              41633000
                   AIF   (T'&ZCGPR NE 'N').ZE55R  NON NUMERIC           41634000
                   AIF   ('&ZCGPR' LT '2').ZE55Q                        41635000
                   AIF   ('&ZCGPR' LE '12').ZE55R                       41636000
.ZE55Q             ANOP  ,                                              41637000
&ZMS               SETC  '"PRODOWNER='          *KGPRA* MNOTE           41638000
&ZMS               SETC  '&ZMS.&PRODOWNER"'                             41639000
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      41640000
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               41641000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        41642000
.ZE55R             ANOP  ,                                              41643000
.*----------------------------------------------------------------***   41644000
.***AE.KXVAR03 NAME, RQD INPUT, KEYS -XVAR KEY                          41645000
                   AIF   (N'&PRODNAME LE 1).ZE57A  CK NUM               41646000
&ZMS               SETC  '"PRODNAME='           *KPOSA* MNOTE           41647000
&ZMS               SETC  '&ZMS.&PRODNAME"'                              41648000
&ZMS               SETC  '&ZMS "PRODNAME"'                              41649000
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            41650000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        41651000
.ZE57A             ANOP  ,                                              41652000
.*-------------------------------------------------------------------   41653000
.***AE.KXVAR04 NAME, RQD INPUT, KEYS -XVAR ARGUMENT                     41654000
                   AIF   (K'&PRODNAME(1) LE 0).ZE57B NO PRM             41655000
&ZXPRODNAME        SETC  'INPUT'     SET IN/OUTPUT                      41656000
&XPRODNAME         SETC  '&PRODNAME(1)'         SET XVARIABLE           41657000
                   AIF   (N'&PRODNAME GT 1).ZE57B                       41658000
.*                 ANOP              MULTIPLE PARMS                     41659000
&XPRODNAME         SETC  '&PRODNAME'            SET XVARIABLE           41660000
.ZE57B             ANOP  ,                                              41661000
.*-------------------------------------------------------------------   41662000
.***AE.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    41663000
                   AIF   (K'&ZXPRODNAME LE 0).ZE57R  NOT I/O            41664000
                   AIF   ('&XPRODNAME'(1,1) NE '(').ZE57R               41665000
&ZCGPR             SETC  '&XPRODNAME'(2,K'&XPRODNAME-2)                 41666000
                   AIF   ('&ZCGPR'(1,1) NE '0').ZE57P                   41667000
                   AIF   (K'&ZCGPR GT 2).ZE57Q                          41668000
                   AIF   ('&ZCGPR' EQ '0').ZE57Q                        41669000
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  41670000
                   AIF   (T'&ZCGPR NE 'N').ZE57Q  INVALID REG NAME      41671000
.ZE57P             ANOP  ,                                              41672000
                   AIF   (T'&ZCGPR NE 'N').ZE57R  NON NUMERIC           41673000
                   AIF   ('&ZCGPR' LT '2').ZE57Q                        41674000
                   AIF   ('&ZCGPR' LE '12').ZE57R                       41675000
.ZE57Q             ANOP  ,                                              41676000
&ZMS               SETC  '"PRODNAME='           *KGPRA* MNOTE           41677000
&ZMS               SETC  '&ZMS.&PRODNAME"'                              41678000
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      41679000
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               41680000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        41681000
.ZE57R             ANOP  ,                                              41682000
.*----------------------------------------------------------------***   41683000
.***AE.KXVAR03 NAME, OPT INPUT, KEYS -XVAR KEY                          41684000
                   AIF   (N'&PRODVERS LE 1).ZE60A  CK NUM               41685000
&ZMS               SETC  '"PRODVERS='           *KPOSA* MNOTE           41686000
&ZMS               SETC  '&ZMS.&PRODVERS"'                              41687000
&ZMS               SETC  '&ZMS "PRODVERS"'                              41688000
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            41689000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        41690000
.ZE60A             ANOP  ,                                              41691000
.*-------------------------------------------------------------------   41692000
.***AE.KXVAR04 NAME, OPT INPUT, KEYS -XVAR ARGUMENT                     41693000
                   AIF   (K'&PRODVERS(1) LE 0).ZE60B NO PRM             41694000
&ZXPRODVERS        SETC  'INPUT'     SET IN/OUTPUT                      41695000
&XPRODVERS         SETC  '&PRODVERS(1)'         SET XVARIABLE           41696000
                   AIF   (N'&PRODVERS GT 1).ZE60B                       41697000
.*                 ANOP              MULTIPLE PARMS                     41698000
&XPRODVERS         SETC  '&PRODVERS'            SET XVARIABLE           41699000
.ZE60B             ANOP  ,                                              41700000
.*-------------------------------------------------------------------   41701000
.***AE.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    41702000
                   AIF   (K'&ZXPRODVERS LE 0).ZE60R  NOT I/O            41703000
                   AIF   ('&XPRODVERS'(1,1) NE '(').ZE60R               41704000
&ZCGPR             SETC  '&XPRODVERS'(2,K'&XPRODVERS-2)                 41705000
                   AIF   ('&ZCGPR'(1,1) NE '0').ZE60P                   41706000
                   AIF   (K'&ZCGPR GT 2).ZE60Q                          41707000
                   AIF   ('&ZCGPR' EQ '0').ZE60Q                        41708000
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  41709000
                   AIF   (T'&ZCGPR NE 'N').ZE60Q  INVALID REG NAME      41710000
.ZE60P             ANOP  ,                                              41711000
                   AIF   (T'&ZCGPR NE 'N').ZE60R  NON NUMERIC           41712000
                   AIF   ('&ZCGPR' LT '2').ZE60Q                        41713000
                   AIF   ('&ZCGPR' LE '12').ZE60R                       41714000
.ZE60Q             ANOP  ,                                              41715000
&ZMS               SETC  '"PRODVERS='           *KGPRA* MNOTE           41716000
&ZMS               SETC  '&ZMS.&PRODVERS"'                              41717000
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      41718000
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               41719000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        41720000
.ZE60R             ANOP  ,                                              41721000
.*----------------------------------------------------------------***   41722000
.***AE.KXVAR03 NAME, OPT INPUT, KEYS -XVAR KEY                          41723000
                   AIF   (N'&PRODQUAL LE 1).ZE61A  CK NUM               41724000
&ZMS               SETC  '"PRODQUAL='           *KPOSA* MNOTE           41725000
&ZMS               SETC  '&ZMS.&PRODQUAL"'                              41726000
&ZMS               SETC  '&ZMS "PRODQUAL"'                              41727000
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            41728000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        41729000
.ZE61A             ANOP  ,                                              41730000
.*-------------------------------------------------------------------   41731000
.***AE.KXVAR04 NAME, OPT INPUT, KEYS -XVAR ARGUMENT                     41732000
                   AIF   (K'&PRODQUAL(1) LE 0).ZE61B NO PRM             41733000
&ZXPRODQUAL        SETC  'INPUT'     SET IN/OUTPUT                      41734000
&XPRODQUAL         SETC  '&PRODQUAL(1)'         SET XVARIABLE           41735000
                   AIF   (N'&PRODQUAL GT 1).ZE61B                       41736000
.*                 ANOP              MULTIPLE PARMS                     41737000
&XPRODQUAL         SETC  '&PRODQUAL'            SET XVARIABLE           41738000
.ZE61B             ANOP  ,                                              41739000
.*-------------------------------------------------------------------   41740000
.***AE.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    41741000
                   AIF   (K'&ZXPRODQUAL LE 0).ZE61R  NOT I/O            41742000
                   AIF   ('&XPRODQUAL'(1,1) NE '(').ZE61R               41743000
&ZCGPR             SETC  '&XPRODQUAL'(2,K'&XPRODQUAL-2)                 41744000
                   AIF   ('&ZCGPR'(1,1) NE '0').ZE61P                   41745000
                   AIF   (K'&ZCGPR GT 2).ZE61Q                          41746000
                   AIF   ('&ZCGPR' EQ '0').ZE61Q                        41747000
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  41748000
                   AIF   (T'&ZCGPR NE 'N').ZE61Q  INVALID REG NAME      41749000
.ZE61P             ANOP  ,                                              41750000
                   AIF   (T'&ZCGPR NE 'N').ZE61R  NON NUMERIC           41751000
                   AIF   ('&ZCGPR' LT '2').ZE61Q                        41752000
                   AIF   ('&ZCGPR' LE '12').ZE61R                       41753000
.ZE61Q             ANOP  ,                                              41754000
&ZMS               SETC  '"PRODQUAL='           *KGPRA* MNOTE           41755000
&ZMS               SETC  '&ZMS.&PRODQUAL"'                              41756000
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      41757000
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               41758000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        41759000
.ZE61R             ANOP  ,                                              41760000
.*----------------------------------------------------------------***   41761000
.***AE.KXVAR03 NAME, OPT INPUT, KEYS -XVAR KEY                          41762000
                   AIF   (N'&PRODID LE 1).ZE62A  CK NUM                 41763000
&ZMS               SETC  '"PRODID='  *KPOSA* MNOTE                      41764000
&ZMS               SETC  '&ZMS.&PRODID"'                                41765000
&ZMS               SETC  '&ZMS "PRODID"'                                41766000
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            41767000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        41768000
.ZE62A             ANOP  ,                                              41769000
.*-------------------------------------------------------------------   41770000
.***AE.KXVAR04 NAME, OPT INPUT, KEYS -XVAR ARGUMENT                     41771000
                   AIF   (K'&PRODID(1) LE 0).ZE62B NO PRM               41772000
&ZXPRODID          SETC  'INPUT'     SET IN/OUTPUT                      41773000
&XPRODID           SETC  '&PRODID(1)'           SET XVARIABLE           41774000
                   AIF   (N'&PRODID GT 1).ZE62B                         41775000
.*                 ANOP              MULTIPLE PARMS                     41776000
&XPRODID           SETC  '&PRODID'   SET XVARIABLE                      41777000
.ZE62B             ANOP  ,                                              41778000
.*-------------------------------------------------------------------   41779000
.***AE.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    41780000
                   AIF   (K'&ZXPRODID LE 0).ZE62R  NOT I/O              41781000
                   AIF   ('&XPRODID'(1,1) NE '(').ZE62R                 41782000
&ZCGPR             SETC  '&XPRODID'(2,K'&XPRODID-2)                     41783000
                   AIF   ('&ZCGPR'(1,1) NE '0').ZE62P                   41784000
                   AIF   (K'&ZCGPR GT 2).ZE62Q                          41785000
                   AIF   ('&ZCGPR' EQ '0').ZE62Q                        41786000
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  41787000
                   AIF   (T'&ZCGPR NE 'N').ZE62Q  INVALID REG NAME      41788000
.ZE62P             ANOP  ,                                              41789000
                   AIF   (T'&ZCGPR NE 'N').ZE62R  NON NUMERIC           41790000
                   AIF   ('&ZCGPR' LT '2').ZE62Q                        41791000
                   AIF   ('&ZCGPR' LE '12').ZE62R                       41792000
.ZE62Q             ANOP  ,                                              41793000
&ZMS               SETC  '"PRODID='  *KGPRA* MNOTE                      41794000
&ZMS               SETC  '&ZMS.&PRODID"'                                41795000
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      41796000
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               41797000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        41798000
.ZE62R             ANOP  ,                                              41799000
.*-------------------------------------------------------------------   41800000
.***AE.KMEKY08 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           41801000
.ZE64     AIF   ('&XBEGINPRODNAME' NE 'PRTOKEN').ZE65                   41802000
.*-------------------------------------------------------------------   41803000
.***AE.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 41804000
                   AIF   (K'&ZXPRTOKEN LE 0).ZE64R  NOT I/O             41805000
                   AIF   ('&XPRTOKEN'(1,1) NE '(').ZE64R                41806000
&ZCGPR             SETC  '&XPRTOKEN'(2,K'&XPRTOKEN-2)                   41807000
                   AIF   ('&ZCGPR'(1,1) NE '0').ZE64P                   41808000
                   AIF   (K'&ZCGPR GT 2).ZE64Q                          41809000
                   AIF   ('&ZCGPR' EQ '0').ZE64Q                        41810000
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  41811000
                   AIF   (T'&ZCGPR NE 'N').ZE64Q  INVALID REG NAME      41812000
.ZE64P             ANOP  ,                                              41813000
                   AIF   (T'&ZCGPR NE 'N').ZE64R  NON NUMERIC           41814000
                   AIF   ('&ZCGPR' LT '2').ZE64Q                        41815000
                   AIF   ('&ZCGPR' LE '12').ZE64R                       41816000
.ZE64Q             ANOP  ,                                              41817000
&ZMS               SETC  '"PRTOKEN='            *KGPRA* MNOTE           41818000
&ZMS               SETC  '&ZMS.&PRTOKEN"'                               41819000
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      41820000
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               41821000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        41822000
.ZE64R             ANOP  ,                                              41823000
.*-------------------------------------------------------------------   41824000
.***AE.KMEKY09 NAME, RQD INPUT, ME KEYS -END                            41825000
.ZE65              ANOP  ,           END MUTUALLY EXCLUSIVE KEYS        41826000
.*----------------------------------------------------------------***   41827000
.***AE.KXVAR03 NAME, OPT OUTPUT, KEYS -XVAR KEY                         41828000
                   AIF   (N'&BEGTIME LE 1).ZE67A  CK NUM                41829000
&ZMS               SETC  '"BEGTIME='            *KPOSA* MNOTE           41830000
&ZMS               SETC  '&ZMS.&BEGTIME"'                               41831000
&ZMS               SETC  '&ZMS "BEGTIME"'                               41832000
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            41833000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        41834000
.ZE67A             ANOP  ,                                              41835000
.*-------------------------------------------------------------------   41836000
.***AE.KXVAR04 NAME, OPT OUTPUT, KEYS -XVAR ARGUMENT                    41837000
                   AIF   (K'&BEGTIME(1) LE 0).ZE67B NO PRM              41838000
&ZXBEGTIME         SETC  'OUTPUT'    SET IN/OUTPUT                      41839000
&XBEGTIME          SETC  '&BEGTIME(1)'          SET XVARIABLE           41840000
                   AIF   (N'&BEGTIME GT 1).ZE67B                        41841000
.*                 ANOP              MULTIPLE PARMS                     41842000
&XBEGTIME          SETC  '&BEGTIME'  SET XVARIABLE                      41843000
.ZE67B             ANOP  ,                                              41844000
.*-------------------------------------------------------------------   41845000
.***AE.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   41846000
                   AIF   (K'&ZXBEGTIME LE 0).ZE67R  NOT I/O             41847000
                   AIF   ('&XBEGTIME'(1,1) NE '(').ZE67R                41848000
&ZCGPR             SETC  '&XBEGTIME'(2,K'&XBEGTIME-2)                   41849000
                   AIF   ('&ZCGPR'(1,1) NE '0').ZE67P                   41850000
                   AIF   (K'&ZCGPR GT 2).ZE67Q                          41851000
                   AIF   ('&ZCGPR' EQ '0').ZE67Q                        41852000
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  41853000
                   AIF   (T'&ZCGPR NE 'N').ZE67Q  INVALID REG NAME      41854000
.ZE67P             ANOP  ,                                              41855000
                   AIF   (T'&ZCGPR NE 'N').ZE67R  NON NUMERIC           41856000
                   AIF   ('&ZCGPR' LT '2').ZE67Q                        41857000
                   AIF   ('&ZCGPR' LE '12').ZE67R                       41858000
.ZE67Q             ANOP  ,                                              41859000
&ZMS               SETC  '"BEGTIME='            *KGPRA* MNOTE           41860000
&ZMS               SETC  '&ZMS.&BEGTIME"'                               41861000
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      41862000
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               41863000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        41864000
.ZE67R             ANOP  ,                                              41865000
.*----------------------------------------------------------------***   41866000
.***AE.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             41867000
                   AIF   (N'&LINKAGE LE 1).ZE70A  CK NUM                41868000
&ZMS               SETC  '"LINKAGE='            *KPOSA* MNOTE           41869000
&ZMS               SETC  '&ZMS.&LINKAGE"'                               41870000
&ZMS               SETC  '&ZMS "LINKAGE"'                               41871000
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            41872000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        41873000
.ZE70A             ANOP  ,                                              41874000
.*-------------------------------------------------------------------   41875000
.***AE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             41876000
.ZE71A   AIF   ('&LINKAGE(1)' NE 'SVC').ZE72A                           41877000
&XLINKAGE          SETC  'SVC'       SET KEYWORD                        41878000
.*-------------------------------------------------------------------   41879000
.***AE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             41880000
.ZE72A   AIF   ('&LINKAGE(1)' NE 'BRANCH').ZE73A                        41881000
&XLINKAGE          SETC  'BRANCH'    SET KEYWORD                        41882000
.*-------------------------------------------------------------------   41883000
.***AE.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             41884000
.ZE73A             AIF   (K'&XLINKAGE GT 0).ZE73B  KEYWORD              41885000
                   AIF   (K'&LINKAGE(1) LE 0).ZE73C                     41886000
&ZMS               SETC  '"LINKAGE='            *KUKWA* MNOTE           41887000
&ZMS               SETC  '&ZMS.&LINKAGE"'                               41888000
&ZMS               SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '      41889000
&ZMS               SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'            41890000
&ZMS               SETC  '&ZMS "SVC"'           VALID KEYWORD           41891000
&ZMS               SETC  '&ZMS OR "BRANCH".'    VALID KEYWORD           41892000
                   MNOTE 8,' &ZMS '                                     41893000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        41894000
                   AGO   .ZE73C                                         41895000
.*                                                                      41900000
.ZE73B             ANOP  ,                                              41901800
&ZXLINKAGE         SETC  'INPUT'     SET IN/OUTPUT                      41903600
.ZE73C             ANOP  ,                                              41905400
.*-------------------------------------------------------------------   41907200
.***AE.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           41909000
&ZTLC              SETC 'FUNCTIONDATA'                                  41910800
                   AIF   ('&REQUEST(1)' NE '&ZTLC').ZE74A               41912600
&XREQUEST          SETC  'FUNCTIONDATA'         SET KEYWORD             41914400
                   AIF   (N'&REQUEST LE 1).ZE74A  CK NUM                41916200
&ZMS               SETC  '"REQUEST='            *KPOSA* MNOTE           41918000
&ZMS               SETC  '&ZMS.&REQUEST"'                               41919800
&ZMS               SETC  '&ZMS "REQUEST"'                               41921600
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            41923400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        41925200
.ZE74A             ANOP  ,                                              41927000
.*----------------------------------------------------------------***   41928800
.***AE.KMEKY01 NAME, RQD INPUT, ME KEYS -XVARIABLE                      41930600
&XDATAPRODNAME     SETC  ''          INITIALIZE XVARIABLE               41932400
                   AIF   (K'&PRODOWNER LE 0).ZE76C                      41934200
&ZXDATAPRODNAME    SETC  'INPUT'     SET IN/OUTPUT                      41936000
&XDATAPRODNAME     SETC  'PRODOWNER'            SET XVARIABLE           41937800
&ZXPRODOWNER       SETC  'INPUT'     SET IN/OUTPUT                      41939600
&XPRODOWNER        SETC  '&PRODOWNER(1)'        SET XVARIABLE PARM      41941400
                   AIF   (N'&PRODOWNER GT 1).ZE76A  MULTIPLE PARMS      41943200
&XPRODOWNER        SETC  '&PRODOWNER'           SET XVARIABLE PARM      41945000
.ZE76A             AIF   (N'&PRODOWNER LE 1).ZE76B  CK NUM              41946800
&ZMS               SETC  '"PRODOWNER='          *KPOSA* MNOTE           41948600
&ZMS               SETC  '&ZMS.&PRODOWNER"'                             41950400
&ZMS               SETC  '&ZMS "PRODOWNER"'                             41952200
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            41954000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        41955800
.ZE76B             AIF   (K'&XPRODOWNER GT 0).ZE76C  ONE PARM           41957600
&ZXDATAPRODNAME    SETC  ''          RESET IN/OUTPUT                    41959400
&ZXPRODOWNER       SETC  ''          RESET IN/OUTPUT                    41961200
.ZE76C             ANOP  ,                                              41963000
.*----------------------------------------------------------------***   41964800
.***AE.KMEKY02 NAME, RQD INPUT, ME KEYS -NON-XVAR KEY                   41966600
                   AIF   (K'&PRTOKEN LE 0).ZE85D  NO ME KEY             41968400
                   AIF   (N'&PRTOKEN LE 1).ZE85A  CK NUM                41970200
&ZMS               SETC  '"PRTOKEN='            *KPOSA* MNOTE           41972000
&ZMS               SETC  '&ZMS.&PRTOKEN"'                               41973800
&ZMS               SETC  '&ZMS "PRTOKEN"'                               41975600
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            41977400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        41979200
.ZE85A             AIF   (K'&XDATAPRODNAME LE 0).ZE85B                  41981000
&ZMS               SETC  '"PRTOKEN'  *KMEKA* MNOTE                      41982800
&ZMS               SETC  '&ZMS.=&PRTOKEN"'                              41984600
&ZMS               SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'          41986400
&ZMS               SETC  '&ZMS "&XDATAPRODNAME"'                        41988200
                   MNOTE 8,' &ZMS KEY.'                                 41990000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        41991800
                   AGO   .ZE85D                                         41993600
.*                                                                      42000000
.ZE85B             ANOP  ,                                              42000800
&ZXDATAPRODNAME    SETC  'INPUT'     SET IN/OUTPUT                      42001600
&XDATAPRODNAME     SETC  'PRTOKEN'   SET XVARIABLE                      42002400
&ZXPRTOKEN         SETC  'INPUT'     SET IN/OUTPUT                      42003200
&XPRTOKEN          SETC  '&PRTOKEN(1)'          SET PARM                42004000
                   AIF   (N'&PRTOKEN GT 1).ZE85C  MULTIPLE PARMS        42004800
&XPRTOKEN          SETC  '&PRTOKEN'  SET PARM                           42005600
.ZE85C             AIF   (K'&XPRTOKEN GT 0).ZE85D  ONE PARM             42006400
&ZXDATAPRODNAME    SETC  ''          RESET IN/OUTPUT                    42007200
&ZXPRTOKEN         SETC  ''          RESET IN/OUTPUT                    42008000
.ZE85D             ANOP  ,                                              42008800
.*------------------------------------------------------------------    42009600
.***AE.KMEKY07 NAME, RQD INPUT, ME KEYS -CHECK IF ENTERED               42010400
                   AIF   (K'&XDATAPRODNAME GT 0).ZE86B                  42011200
&ZXDATAPRODNAME    SETC  ''          RESET IN/OUTPUT                    42012000
&XDATAPRODNAME     SETC  ''          SET NULL                           42012800
&ZXPRODOWNER       SETC  ''          RESET OUTPUT                       42013600
&XPRODOWNER        SETC  ''          SET NULL PARM                      42014400
.ZE86B             ANOP  ,                                              42015200
.*-------------------------------------------------------------------   42016000
.***AE.KMEKY08 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           42016800
.ZE76     AIF   ('&XDATAPRODNAME' NE 'PRODOWNER').ZE85                  42017600
.*-------------------------------------------------------------------   42018400
.***AE.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 42019200
                   AIF   (K'&ZXPRODOWNER LE 0).ZE76R  NOT I/O           42020000
                   AIF   ('&XPRODOWNER'(1,1) NE '(').ZE76R              42020800
&ZCGPR             SETC  '&XPRODOWNER'(2,K'&XPRODOWNER-2)               42021600
                   AIF   ('&ZCGPR'(1,1) NE '0').ZE76P                   42022400
                   AIF   (K'&ZCGPR GT 2).ZE76Q                          42023200
                   AIF   ('&ZCGPR' EQ '0').ZE76Q                        42024000
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  42024800
                   AIF   (T'&ZCGPR NE 'N').ZE76Q  INVALID REG NAME      42025600
.ZE76P             ANOP  ,                                              42026400
                   AIF   (T'&ZCGPR NE 'N').ZE76R  NON NUMERIC           42027200
                   AIF   ('&ZCGPR' LT '2').ZE76Q                        42028000
                   AIF   ('&ZCGPR' LE '12').ZE76R                       42028800
.ZE76Q             ANOP  ,                                              42029600
&ZMS               SETC  '"PRODOWNER='          *KGPRA* MNOTE           42030400
&ZMS               SETC  '&ZMS.&PRODOWNER"'                             42031200
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      42032000
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               42032800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        42033600
.ZE76R             ANOP  ,                                              42034400
.*----------------------------------------------------------------***   42035200
.***AE.KXVAR03 NAME, RQD INPUT, KEYS -XVAR KEY                          42036000
                   AIF   (N'&PRODNAME LE 1).ZE78A  CK NUM               42036800
&ZMS               SETC  '"PRODNAME='           *KPOSA* MNOTE           42037600
&ZMS               SETC  '&ZMS.&PRODNAME"'                              42038400
&ZMS               SETC  '&ZMS "PRODNAME"'                              42039200
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            42040000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        42040800
.ZE78A             ANOP  ,                                              42041600
.*-------------------------------------------------------------------   42042400
.***AE.KXVAR04 NAME, RQD INPUT, KEYS -XVAR ARGUMENT                     42043200
                   AIF   (K'&PRODNAME(1) LE 0).ZE78B NO PRM             42044000
&ZXPRODNAME        SETC  'INPUT'     SET IN/OUTPUT                      42044800
&XPRODNAME         SETC  '&PRODNAME(1)'         SET XVARIABLE           42045600
                   AIF   (N'&PRODNAME GT 1).ZE78B                       42046400
.*                 ANOP              MULTIPLE PARMS                     42047200
&XPRODNAME         SETC  '&PRODNAME'            SET XVARIABLE           42048000
.ZE78B             ANOP  ,                                              42048800
.*-------------------------------------------------------------------   42049600
.***AE.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    42050400
                   AIF   (K'&ZXPRODNAME LE 0).ZE78R  NOT I/O            42051200
                   AIF   ('&XPRODNAME'(1,1) NE '(').ZE78R               42052000
&ZCGPR             SETC  '&XPRODNAME'(2,K'&XPRODNAME-2)                 42052800
                   AIF   ('&ZCGPR'(1,1) NE '0').ZE78P                   42053600
                   AIF   (K'&ZCGPR GT 2).ZE78Q                          42054400
                   AIF   ('&ZCGPR' EQ '0').ZE78Q                        42055200
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  42056000
                   AIF   (T'&ZCGPR NE 'N').ZE78Q  INVALID REG NAME      42056800
.ZE78P             ANOP  ,                                              42057600
                   AIF   (T'&ZCGPR NE 'N').ZE78R  NON NUMERIC           42058400
                   AIF   ('&ZCGPR' LT '2').ZE78Q                        42059200
                   AIF   ('&ZCGPR' LE '12').ZE78R                       42060000
.ZE78Q             ANOP  ,                                              42060800
&ZMS               SETC  '"PRODNAME='           *KGPRA* MNOTE           42061600
&ZMS               SETC  '&ZMS.&PRODNAME"'                              42062400
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      42063200
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               42064000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        42064800
.ZE78R             ANOP  ,                                              42065600
.*----------------------------------------------------------------***   42066400
.***AE.KXVAR03 NAME, OPT INPUT, KEYS -XVAR KEY                          42067200
                   AIF   (N'&PRODVERS LE 1).ZE81A  CK NUM               42068000
&ZMS               SETC  '"PRODVERS='           *KPOSA* MNOTE           42068800
&ZMS               SETC  '&ZMS.&PRODVERS"'                              42069600
&ZMS               SETC  '&ZMS "PRODVERS"'                              42070400
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            42071200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        42072000
.ZE81A             ANOP  ,                                              42072800
.*-------------------------------------------------------------------   42073600
.***AE.KXVAR04 NAME, OPT INPUT, KEYS -XVAR ARGUMENT                     42074400
                   AIF   (K'&PRODVERS(1) LE 0).ZE81B NO PRM             42075200
&ZXPRODVERS        SETC  'INPUT'     SET IN/OUTPUT                      42076000
&XPRODVERS         SETC  '&PRODVERS(1)'         SET XVARIABLE           42076800
                   AIF   (N'&PRODVERS GT 1).ZE81B                       42077600
.*                 ANOP              MULTIPLE PARMS                     42078400
&XPRODVERS         SETC  '&PRODVERS'            SET XVARIABLE           42079200
.ZE81B             ANOP  ,                                              42080000
.*-------------------------------------------------------------------   42080800
.***AE.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    42081600
                   AIF   (K'&ZXPRODVERS LE 0).ZE81R  NOT I/O            42082400
                   AIF   ('&XPRODVERS'(1,1) NE '(').ZE81R               42083200
&ZCGPR             SETC  '&XPRODVERS'(2,K'&XPRODVERS-2)                 42084000
                   AIF   ('&ZCGPR'(1,1) NE '0').ZE81P                   42084800
                   AIF   (K'&ZCGPR GT 2).ZE81Q                          42085600
                   AIF   ('&ZCGPR' EQ '0').ZE81Q                        42086400
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  42087200
                   AIF   (T'&ZCGPR NE 'N').ZE81Q  INVALID REG NAME      42088000
.ZE81P             ANOP  ,                                              42088800
                   AIF   (T'&ZCGPR NE 'N').ZE81R  NON NUMERIC           42089600
                   AIF   ('&ZCGPR' LT '2').ZE81Q                        42090400
                   AIF   ('&ZCGPR' LE '12').ZE81R                       42091200
.ZE81Q             ANOP  ,                                              42092000
&ZMS               SETC  '"PRODVERS='           *KGPRA* MNOTE           42092800
&ZMS               SETC  '&ZMS.&PRODVERS"'                              42093600
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      42094400
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               42095200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        42096000
.ZE81R             ANOP  ,                                              42096800
.*----------------------------------------------------------------***   42097600
.***AE.KXVAR03 NAME, OPT INPUT, KEYS -XVAR KEY                          42098400
                   AIF   (N'&PRODQUAL LE 1).ZE82A  CK NUM               42099200
&ZMS               SETC  '"PRODQUAL='           *KPOSA* MNOTE           42100000
&ZMS               SETC  '&ZMS.&PRODQUAL"'                              42100800
&ZMS               SETC  '&ZMS "PRODQUAL"'                              42101600
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            42102400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        42103200
.ZE82A             ANOP  ,                                              42104000
.*-------------------------------------------------------------------   42104800
.***AE.KXVAR04 NAME, OPT INPUT, KEYS -XVAR ARGUMENT                     42105600
                   AIF   (K'&PRODQUAL(1) LE 0).ZE82B NO PRM             42106400
&ZXPRODQUAL        SETC  'INPUT'     SET IN/OUTPUT                      42107200
&XPRODQUAL         SETC  '&PRODQUAL(1)'         SET XVARIABLE           42108000
                   AIF   (N'&PRODQUAL GT 1).ZE82B                       42108800
.*                 ANOP              MULTIPLE PARMS                     42109600
&XPRODQUAL         SETC  '&PRODQUAL'            SET XVARIABLE           42110400
.ZE82B             ANOP  ,                                              42111200
.*-------------------------------------------------------------------   42112000
.***AE.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    42112800
                   AIF   (K'&ZXPRODQUAL LE 0).ZE82R  NOT I/O            42113600
                   AIF   ('&XPRODQUAL'(1,1) NE '(').ZE82R               42114400
&ZCGPR             SETC  '&XPRODQUAL'(2,K'&XPRODQUAL-2)                 42115200
                   AIF   ('&ZCGPR'(1,1) NE '0').ZE82P                   42116000
                   AIF   (K'&ZCGPR GT 2).ZE82Q                          42116800
                   AIF   ('&ZCGPR' EQ '0').ZE82Q                        42117600
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  42118400
                   AIF   (T'&ZCGPR NE 'N').ZE82Q  INVALID REG NAME      42119200
.ZE82P             ANOP  ,                                              42120000
                   AIF   (T'&ZCGPR NE 'N').ZE82R  NON NUMERIC           42120800
                   AIF   ('&ZCGPR' LT '2').ZE82Q                        42121600
                   AIF   ('&ZCGPR' LE '12').ZE82R                       42122400
.ZE82Q             ANOP  ,                                              42123200
&ZMS               SETC  '"PRODQUAL='           *KGPRA* MNOTE           42124000
&ZMS               SETC  '&ZMS.&PRODQUAL"'                              42124800
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      42125600
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               42126400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        42127200
.ZE82R             ANOP  ,                                              42128000
.*----------------------------------------------------------------***   42128800
.***AE.KXVAR03 NAME, OPT INPUT, KEYS -XVAR KEY                          42129600
                   AIF   (N'&PRODID LE 1).ZE83A  CK NUM                 42130400
&ZMS               SETC  '"PRODID='  *KPOSA* MNOTE                      42131200
&ZMS               SETC  '&ZMS.&PRODID"'                                42132000
&ZMS               SETC  '&ZMS "PRODID"'                                42132800
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            42133600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        42134400
.ZE83A             ANOP  ,                                              42135200
.*-------------------------------------------------------------------   42136000
.***AE.KXVAR04 NAME, OPT INPUT, KEYS -XVAR ARGUMENT                     42136800
                   AIF   (K'&PRODID(1) LE 0).ZE83B NO PRM               42137600
&ZXPRODID          SETC  'INPUT'     SET IN/OUTPUT                      42138400
&XPRODID           SETC  '&PRODID(1)'           SET XVARIABLE           42139200
                   AIF   (N'&PRODID GT 1).ZE83B                         42140000
.*                 ANOP              MULTIPLE PARMS                     42140800
&XPRODID           SETC  '&PRODID'   SET XVARIABLE                      42141600
.ZE83B             ANOP  ,                                              42142400
.*-------------------------------------------------------------------   42143200
.***AE.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    42144000
                   AIF   (K'&ZXPRODID LE 0).ZE83R  NOT I/O              42144800
                   AIF   ('&XPRODID'(1,1) NE '(').ZE83R                 42145600
&ZCGPR             SETC  '&XPRODID'(2,K'&XPRODID-2)                     42146400
                   AIF   ('&ZCGPR'(1,1) NE '0').ZE83P                   42147200
                   AIF   (K'&ZCGPR GT 2).ZE83Q                          42148000
                   AIF   ('&ZCGPR' EQ '0').ZE83Q                        42148800
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  42149600
                   AIF   (T'&ZCGPR NE 'N').ZE83Q  INVALID REG NAME      42150400
.ZE83P             ANOP  ,                                              42151200
                   AIF   (T'&ZCGPR NE 'N').ZE83R  NON NUMERIC           42152000
                   AIF   ('&ZCGPR' LT '2').ZE83Q                        42152800
                   AIF   ('&ZCGPR' LE '12').ZE83R                       42153600
.ZE83Q             ANOP  ,                                              42154400
&ZMS               SETC  '"PRODID='  *KGPRA* MNOTE                      42155200
&ZMS               SETC  '&ZMS.&PRODID"'                                42156000
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      42156800
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               42157600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        42158400
.ZE83R             ANOP  ,                                              42159200
.*-------------------------------------------------------------------   42160000
.***AE.KMEKY08 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           42160800
.ZE85     AIF   ('&XDATAPRODNAME' NE 'PRTOKEN').ZE86                    42161600
.*-------------------------------------------------------------------   42162400
.***AE.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 42163200
                   AIF   (K'&ZXPRTOKEN LE 0).ZE85R  NOT I/O             42164000
                   AIF   ('&XPRTOKEN'(1,1) NE '(').ZE85R                42164800
&ZCGPR             SETC  '&XPRTOKEN'(2,K'&XPRTOKEN-2)                   42165600
                   AIF   ('&ZCGPR'(1,1) NE '0').ZE85P                   42166400
                   AIF   (K'&ZCGPR GT 2).ZE85Q                          42167200
                   AIF   ('&ZCGPR' EQ '0').ZE85Q                        42168000
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  42168800
                   AIF   (T'&ZCGPR NE 'N').ZE85Q  INVALID REG NAME      42169600
.ZE85P             ANOP  ,                                              42170400
                   AIF   (T'&ZCGPR NE 'N').ZE85R  NON NUMERIC           42171200
                   AIF   ('&ZCGPR' LT '2').ZE85Q                        42172000
                   AIF   ('&ZCGPR' LE '12').ZE85R                       42172800
.ZE85Q             ANOP  ,                                              42173600
&ZMS               SETC  '"PRTOKEN='            *KGPRA* MNOTE           42174400
&ZMS               SETC  '&ZMS.&PRTOKEN"'                               42175200
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      42176000
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               42176800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        42177600
.ZE85R             ANOP  ,                                              42178400
.*-------------------------------------------------------------------   42179200
.***AE.KMEKY09 NAME, RQD INPUT, ME KEYS -END                            42180000
.ZE86              ANOP  ,           END MUTUALLY EXCLUSIVE KEYS        42180800
.*----------------------------------------------------------------***   42181600
.***AE.KXVAR03 NAME, RQD INPUT, KEYS -XVAR KEY                          42182400
                   AIF   (N'&DATA LE 1).ZE88A   CK NUM                  42183200
&ZMS               SETC  '"DATA='    *KPOSA* MNOTE                      42184000
&ZMS               SETC  '&ZMS.&DATA"'                                  42184800
&ZMS               SETC  '&ZMS "DATA"'                                  42185600
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            42186400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        42187200
.ZE88A             ANOP  ,                                              42188000
.*-------------------------------------------------------------------   42188800
.***AE.KXVAR04 NAME, RQD INPUT, KEYS -XVAR ARGUMENT                     42189600
                   AIF   (K'&DATA(1) LE 0).ZE88B NO PRM                 42190400
&ZXDATA            SETC  'INPUT'     SET IN/OUTPUT                      42191200
&XDATA             SETC  '&DATA(1)'  SET XVARIABLE                      42192000
                   AIF   (N'&DATA GT 1).ZE88B                           42192800
.*                 ANOP              MULTIPLE PARMS                     42193600
&XDATA             SETC  '&DATA'     SET XVARIABLE                      42194400
.ZE88B             ANOP  ,                                              42195200
.*-------------------------------------------------------------------   42196000
.***AE.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    42196800
                   AIF   (K'&ZXDATA LE 0).ZE88R  NOT I/O                42197600
                   AIF   ('&XDATA'(1,1) NE '(').ZE88R                   42198400
&ZCGPR             SETC  '&XDATA'(2,K'&XDATA-2)                         42199200
                   AIF   ('&ZCGPR'(1,1) NE '0').ZE88P                   42200000
                   AIF   (K'&ZCGPR GT 2).ZE88Q                          42200800
                   AIF   ('&ZCGPR' EQ '0').ZE88Q                        42201600
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  42202400
                   AIF   (T'&ZCGPR NE 'N').ZE88Q  INVALID REG NAME      42203200
.ZE88P             ANOP  ,                                              42204000
                   AIF   (T'&ZCGPR NE 'N').ZE88R  NON NUMERIC           42204800
                   AIF   ('&ZCGPR' LT '2').ZE88Q                        42205600
                   AIF   ('&ZCGPR' LE '12').ZE88R                       42206400
.ZE88Q             ANOP  ,                                              42207200
&ZMS               SETC  '"DATA='    *KGPRA* MNOTE                      42208000
&ZMS               SETC  '&ZMS.&DATA"'                                  42208800
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      42209600
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               42210400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        42211200
.ZE88R             ANOP  ,                                              42212000
.*----------------------------------------------------------------***   42212800
.***AE.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             42213600
                   AIF   (N'&FORMAT LE 1).ZE91A  CK NUM                 42214400
&ZMS               SETC  '"FORMAT='  *KPOSA* MNOTE                      42215200
&ZMS               SETC  '&ZMS.&FORMAT"'                                42216000
&ZMS               SETC  '&ZMS "FORMAT"'                                42216800
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            42217600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        42218400
.ZE91A             ANOP  ,                                              42219200
.*-------------------------------------------------------------------   42220000
.***AE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             42220800
.ZE92A   AIF   ('&FORMAT(1)' NE 'CPUTIME').ZE93A                        42221600
&XFORMAT           SETC  'CPUTIME'   SET KEYWORD                        42222400
.*-------------------------------------------------------------------   42223200
.***AE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             42224000
.ZE93A   AIF   ('&FORMAT(1)' NE 'BINARY').ZE94A                         42224800
&XFORMAT           SETC  'BINARY'    SET KEYWORD                        42225600
.*-------------------------------------------------------------------   42226400
.***AE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             42227200
.ZE94A   AIF   ('&FORMAT(1)' NE 'FLOAT').ZE95A                          42228000
&XFORMAT           SETC  'FLOAT'     SET KEYWORD                        42228800
.*-------------------------------------------------------------------   42229600
.***AE.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             42230400
.ZE95A             AIF   (K'&XFORMAT GT 0).ZE95B  KEYWORD               42231200
                   AIF   (K'&FORMAT(1) LE 0).ZE95C                      42232000
&ZMS               SETC  '"FORMAT='  *KUKWA* MNOTE                      42232800
&ZMS               SETC  '&ZMS.&FORMAT"'                                42233600
&ZMS               SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '      42234400
&ZMS               SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'            42235200
&ZMS               SETC  '&ZMS "CPUTIME",'      VALID KEYWORD           42236000
&ZMS               SETC  '&ZMS "BINARY",'       VALID KEYWORD           42236800
&ZMS               SETC  '&ZMS OR "FLOAT".'     VALID KEYWORD           42237600
                   MNOTE 8,' &ZMS '                                     42238400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        42239200
                   AGO   .ZE95C                                         42240000
.*                                                                      42250000
.ZE95B             ANOP  ,                                              42254100
&ZXFORMAT          SETC  'INPUT'     SET IN/OUTPUT                      42258200
.ZE95C             ANOP  ,                                              42262300
.*----------------------------------------------------------------***   42266400
.***AE.KXVAR03 NAME, OPT OUTPUT, KEYS -XVAR KEY                         42270500
                   AIF   (N'&CURRENTDATA LE 1).ZE97A  CK NUM            42274600
&ZMS               SETC  '"CURRENTDATA='        *KPOSA* MNOTE           42278700
&ZMS               SETC  '&ZMS.&CURRENTDATA"'                           42282800
&ZMS               SETC  '&ZMS "CURRENTDATA"'                           42286900
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            42291000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        42295100
.ZE97A             ANOP  ,                                              42299200
.*-------------------------------------------------------------------   42303300
.***AE.KXVAR04 NAME, OPT OUTPUT, KEYS -XVAR ARGUMENT                    42307400
                   AIF   (K'&CURRENTDATA(1) LE 0).ZE97B NO PRM          42311500
&ZXCURRENTDATA     SETC  'OUTPUT'    SET IN/OUTPUT                      42315600
&XCURRENTDATA      SETC  '&CURRENTDATA(1)'      SET XVARIABLE           42319700
                   AIF   (N'&CURRENTDATA GT 1).ZE97B                    42323800
.*                 ANOP              MULTIPLE PARMS                     42327900
&XCURRENTDATA      SETC  '&CURRENTDATA'         SET XVARIABLE           42332000
.ZE97B             ANOP  ,                                              42336100
.*-------------------------------------------------------------------   42340200
.***AE.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   42344300
                   AIF   (K'&ZXCURRENTDATA LE 0).ZE97R  NOT I/O         42348400
                   AIF   ('&XCURRENTDATA'(1,1) NE '(').ZE97R            42352500
&ZCGPR             SETC  '&XCURRENTDATA'(2,K'&XCURRENTDATA-2)           42356600
                   AIF   ('&ZCGPR'(1,1) NE '0').ZE97P                   42360700
                   AIF   (K'&ZCGPR GT 2).ZE97Q                          42364800
                   AIF   ('&ZCGPR' EQ '0').ZE97Q                        42368900
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  42373000
                   AIF   (T'&ZCGPR NE 'N').ZE97Q  INVALID REG NAME      42377100
.ZE97P             ANOP  ,                                              42381200
                   AIF   (T'&ZCGPR NE 'N').ZE97R  NON NUMERIC           42385300
                   AIF   ('&ZCGPR' LT '2').ZE97Q                        42389400
                   AIF   ('&ZCGPR' LE '12').ZE97R                       42393500
.ZE97Q             ANOP  ,                                              42397600
&ZMS               SETC  '"CURRENTDATA='        *KGPRA* MNOTE           42401700
&ZMS               SETC  '&ZMS.&CURRENTDATA"'                           42405800
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      42409900
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               42414000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        42418100
.ZE97R             ANOP  ,                                              42422200
.*----------------------------------------------------------------***   42426300
.***AE.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             42430400
                   AIF   (N'&LINKAGE LE 1).ZE100A  CK NUM               42434500
&ZMS               SETC  '"LINKAGE='            *KPOSA* MNOTE           42438600
&ZMS               SETC  '&ZMS.&LINKAGE"'                               42442700
&ZMS               SETC  '&ZMS "LINKAGE"'                               42446800
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            42450900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        42455000
.ZE100A            ANOP  ,                                              42459100
.*-------------------------------------------------------------------   42463200
.***AE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             42467300
.ZE101A   AIF   ('&LINKAGE(1)' NE 'SVC').ZE102A                         42471400
&XLINKAGE          SETC  'SVC'       SET KEYWORD                        42475500
.*-------------------------------------------------------------------   42479600
.***AE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             42483700
.ZE102A   AIF   ('&LINKAGE(1)' NE 'BRANCH').ZE103A                      42487800
&XLINKAGE          SETC  'BRANCH'    SET KEYWORD                        42491900
.*-------------------------------------------------------------------   42496000
.***AE.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             42500100
.ZE103A            AIF   (K'&XLINKAGE GT 0).ZE103B  KEYWORD             42504200
                   AIF   (K'&LINKAGE(1) LE 0).ZE103C                    42508300
&ZMS               SETC  '"LINKAGE='            *KUKWA* MNOTE           42512400
&ZMS               SETC  '&ZMS.&LINKAGE"'                               42516500
&ZMS               SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '      42520600
&ZMS               SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'            42524700
&ZMS               SETC  '&ZMS "SVC"'           VALID KEYWORD           42528800
&ZMS               SETC  '&ZMS OR "BRANCH".'    VALID KEYWORD           42532900
                   MNOTE 8,' &ZMS '                                     42537000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        42541100
                   AGO   .ZE103C                                        42545200
.*                                                                      42550000
.ZE103B            ANOP  ,                                              42555600
&ZXLINKAGE         SETC  'INPUT'     SET IN/OUTPUT                      42561200
.ZE103C            ANOP  ,                                              42566800
.*-------------------------------------------------------------------   42572400
.***AE.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           42578000
&ZTLC              SETC 'FUNCTIONEND'                                   42583600
                   AIF   ('&REQUEST(1)' NE '&ZTLC').ZE104A              42589200
&XREQUEST          SETC  'FUNCTIONEND'          SET KEYWORD             42594800
                   AIF   (N'&REQUEST LE 1).ZE104A  CK NUM               42600400
&ZMS               SETC  '"REQUEST='            *KPOSA* MNOTE           42606000
&ZMS               SETC  '&ZMS.&REQUEST"'                               42611600
&ZMS               SETC  '&ZMS "REQUEST"'                               42617200
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            42622800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        42628400
.ZE104A            ANOP  ,                                              42634000
.*----------------------------------------------------------------***   42639600
.***AE.KMEKY01 NAME, RQD INPUT, ME KEYS -XVARIABLE                      42645200
&XENDPRODNAME      SETC  ''          INITIALIZE XVARIABLE               42650800
                   AIF   (K'&PRODOWNER LE 0).ZE106C                     42656400
&ZXENDPRODNAME     SETC  'INPUT'     SET IN/OUTPUT                      42662000
&XENDPRODNAME      SETC  'PRODOWNER'            SET XVARIABLE           42667600
&ZXPRODOWNER       SETC  'INPUT'     SET IN/OUTPUT                      42673200
&XPRODOWNER        SETC  '&PRODOWNER(1)'        SET XVARIABLE PARM      42678800
                   AIF   (N'&PRODOWNER GT 1).ZE106A  MULTIPLE PARMS     42684400
&XPRODOWNER        SETC  '&PRODOWNER'           SET XVARIABLE PARM      42690000
.ZE106A            AIF   (N'&PRODOWNER LE 1).ZE106B  CK NUM             42695600
&ZMS               SETC  '"PRODOWNER='          *KPOSA* MNOTE           42701200
&ZMS               SETC  '&ZMS.&PRODOWNER"'                             42706800
&ZMS               SETC  '&ZMS "PRODOWNER"'                             42712400
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            42718000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        42723600
.ZE106B            AIF   (K'&XPRODOWNER GT 0).ZE106C  ONE PARM          42729200
&ZXENDPRODNAME     SETC  ''          RESET IN/OUTPUT                    42734800
&ZXPRODOWNER       SETC  ''          RESET IN/OUTPUT                    42740400
.ZE106C            ANOP  ,                                              42746000
.*----------------------------------------------------------------***   42751600
.***AE.KMEKY02 NAME, RQD INPUT, ME KEYS -NON-XVAR KEY                   42757200
                   AIF   (K'&PRTOKEN LE 0).ZE115D  NO ME KEY            42762800
                   AIF   (N'&PRTOKEN LE 1).ZE115A  CK NUM               42768400
&ZMS               SETC  '"PRTOKEN='            *KPOSA* MNOTE           42774000
&ZMS               SETC  '&ZMS.&PRTOKEN"'                               42779600
&ZMS               SETC  '&ZMS "PRTOKEN"'                               42785200
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            42790800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        42796400
.ZE115A            AIF   (K'&XENDPRODNAME LE 0).ZE115B                  42802000
&ZMS               SETC  '"PRTOKEN'  *KMEKA* MNOTE                      42807600
&ZMS               SETC  '&ZMS.=&PRTOKEN"'                              42813200
&ZMS               SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'          42818800
&ZMS               SETC  '&ZMS "&XENDPRODNAME"'                         42824400
                   MNOTE 8,' &ZMS KEY.'                                 42830000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        42835600
                   AGO   .ZE115D                                        42841200
.*                                                                      42850000
.ZE115B            ANOP  ,                                              42850800
&ZXENDPRODNAME     SETC  'INPUT'     SET IN/OUTPUT                      42851600
&XENDPRODNAME      SETC  'PRTOKEN'   SET XVARIABLE                      42852400
&ZXPRTOKEN         SETC  'INPUT'     SET IN/OUTPUT                      42853200
&XPRTOKEN          SETC  '&PRTOKEN(1)'          SET PARM                42854000
                   AIF   (N'&PRTOKEN GT 1).ZE115C  MULTIPLE PARMS       42854800
&XPRTOKEN          SETC  '&PRTOKEN'  SET PARM                           42855600
.ZE115C            AIF   (K'&XPRTOKEN GT 0).ZE115D  ONE PARM            42856400
&ZXENDPRODNAME     SETC  ''          RESET IN/OUTPUT                    42857200
&ZXPRTOKEN         SETC  ''          RESET IN/OUTPUT                    42858000
.ZE115D            ANOP  ,                                              42858800
.*------------------------------------------------------------------    42859600
.***AE.KMEKY07 NAME, RQD INPUT, ME KEYS -CHECK IF ENTERED               42860400
                   AIF   (K'&XENDPRODNAME GT 0).ZE116B                  42861200
&ZXENDPRODNAME     SETC  ''          RESET IN/OUTPUT                    42862000
&XENDPRODNAME      SETC  ''          SET NULL                           42862800
&ZXPRODOWNER       SETC  ''          RESET OUTPUT                       42863600
&XPRODOWNER        SETC  ''          SET NULL PARM                      42864400
.ZE116B            ANOP  ,                                              42865200
.*-------------------------------------------------------------------   42866000
.***AE.KMEKY08 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           42866800
.ZE106     AIF   ('&XENDPRODNAME' NE 'PRODOWNER').ZE115                 42867600
.*-------------------------------------------------------------------   42868400
.***AE.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 42869200
                   AIF   (K'&ZXPRODOWNER LE 0).ZE106R  NOT I/O          42870000
                   AIF   ('&XPRODOWNER'(1,1) NE '(').ZE106R             42870800
&ZCGPR             SETC  '&XPRODOWNER'(2,K'&XPRODOWNER-2)               42871600
                   AIF   ('&ZCGPR'(1,1) NE '0').ZE106P                  42872400
                   AIF   (K'&ZCGPR GT 2).ZE106Q                         42873200
                   AIF   ('&ZCGPR' EQ '0').ZE106Q                       42874000
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  42874800
                   AIF   (T'&ZCGPR NE 'N').ZE106Q  INVALID REG NAME     42875600
.ZE106P            ANOP  ,                                              42876400
                   AIF   (T'&ZCGPR NE 'N').ZE106R  NON NUMERIC          42877200
                   AIF   ('&ZCGPR' LT '2').ZE106Q                       42878000
                   AIF   ('&ZCGPR' LE '12').ZE106R                      42878800
.ZE106Q            ANOP  ,                                              42879600
&ZMS               SETC  '"PRODOWNER='          *KGPRA* MNOTE           42880400
&ZMS               SETC  '&ZMS.&PRODOWNER"'                             42881200
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      42882000
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               42882800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        42883600
.ZE106R            ANOP  ,                                              42884400
.*----------------------------------------------------------------***   42885200
.***AE.KXVAR03 NAME, RQD INPUT, KEYS -XVAR KEY                          42886000
                   AIF   (N'&PRODNAME LE 1).ZE108A  CK NUM              42886800
&ZMS               SETC  '"PRODNAME='           *KPOSA* MNOTE           42887600
&ZMS               SETC  '&ZMS.&PRODNAME"'                              42888400
&ZMS               SETC  '&ZMS "PRODNAME"'                              42889200
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            42890000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        42890800
.ZE108A            ANOP  ,                                              42891600
.*-------------------------------------------------------------------   42892400
.***AE.KXVAR04 NAME, RQD INPUT, KEYS -XVAR ARGUMENT                     42893200
                   AIF   (K'&PRODNAME(1) LE 0).ZE108B NO PRM            42894000
&ZXPRODNAME        SETC  'INPUT'     SET IN/OUTPUT                      42894800
&XPRODNAME         SETC  '&PRODNAME(1)'         SET XVARIABLE           42895600
                   AIF   (N'&PRODNAME GT 1).ZE108B                      42896400
.*                 ANOP              MULTIPLE PARMS                     42897200
&XPRODNAME         SETC  '&PRODNAME'            SET XVARIABLE           42898000
.ZE108B            ANOP  ,                                              42898800
.*-------------------------------------------------------------------   42899600
.***AE.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    42900400
                   AIF   (K'&ZXPRODNAME LE 0).ZE108R  NOT I/O           42901200
                   AIF   ('&XPRODNAME'(1,1) NE '(').ZE108R              42902000
&ZCGPR             SETC  '&XPRODNAME'(2,K'&XPRODNAME-2)                 42902800
                   AIF   ('&ZCGPR'(1,1) NE '0').ZE108P                  42903600
                   AIF   (K'&ZCGPR GT 2).ZE108Q                         42904400
                   AIF   ('&ZCGPR' EQ '0').ZE108Q                       42905200
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  42906000
                   AIF   (T'&ZCGPR NE 'N').ZE108Q  INVALID REG NAME     42906800
.ZE108P            ANOP  ,                                              42907600
                   AIF   (T'&ZCGPR NE 'N').ZE108R  NON NUMERIC          42908400
                   AIF   ('&ZCGPR' LT '2').ZE108Q                       42909200
                   AIF   ('&ZCGPR' LE '12').ZE108R                      42910000
.ZE108Q            ANOP  ,                                              42910800
&ZMS               SETC  '"PRODNAME='           *KGPRA* MNOTE           42911600
&ZMS               SETC  '&ZMS.&PRODNAME"'                              42912400
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      42913200
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               42914000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        42914800
.ZE108R            ANOP  ,                                              42915600
.*----------------------------------------------------------------***   42916400
.***AE.KXVAR03 NAME, OPT INPUT, KEYS -XVAR KEY                          42917200
                   AIF   (N'&PRODVERS LE 1).ZE111A  CK NUM              42918000
&ZMS               SETC  '"PRODVERS='           *KPOSA* MNOTE           42918800
&ZMS               SETC  '&ZMS.&PRODVERS"'                              42919600
&ZMS               SETC  '&ZMS "PRODVERS"'                              42920400
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            42921200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        42922000
.ZE111A            ANOP  ,                                              42922800
.*-------------------------------------------------------------------   42923600
.***AE.KXVAR04 NAME, OPT INPUT, KEYS -XVAR ARGUMENT                     42924400
                   AIF   (K'&PRODVERS(1) LE 0).ZE111B NO PRM            42925200
&ZXPRODVERS        SETC  'INPUT'     SET IN/OUTPUT                      42926000
&XPRODVERS         SETC  '&PRODVERS(1)'         SET XVARIABLE           42926800
                   AIF   (N'&PRODVERS GT 1).ZE111B                      42927600
.*                 ANOP              MULTIPLE PARMS                     42928400
&XPRODVERS         SETC  '&PRODVERS'            SET XVARIABLE           42929200
.ZE111B            ANOP  ,                                              42930000
.*-------------------------------------------------------------------   42930800
.***AE.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    42931600
                   AIF   (K'&ZXPRODVERS LE 0).ZE111R  NOT I/O           42932400
                   AIF   ('&XPRODVERS'(1,1) NE '(').ZE111R              42933200
&ZCGPR             SETC  '&XPRODVERS'(2,K'&XPRODVERS-2)                 42934000
                   AIF   ('&ZCGPR'(1,1) NE '0').ZE111P                  42934800
                   AIF   (K'&ZCGPR GT 2).ZE111Q                         42935600
                   AIF   ('&ZCGPR' EQ '0').ZE111Q                       42936400
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  42937200
                   AIF   (T'&ZCGPR NE 'N').ZE111Q  INVALID REG NAME     42938000
.ZE111P            ANOP  ,                                              42938800
                   AIF   (T'&ZCGPR NE 'N').ZE111R  NON NUMERIC          42939600
                   AIF   ('&ZCGPR' LT '2').ZE111Q                       42940400
                   AIF   ('&ZCGPR' LE '12').ZE111R                      42941200
.ZE111Q            ANOP  ,                                              42942000
&ZMS               SETC  '"PRODVERS='           *KGPRA* MNOTE           42942800
&ZMS               SETC  '&ZMS.&PRODVERS"'                              42943600
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      42944400
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               42945200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        42946000
.ZE111R            ANOP  ,                                              42946800
.*----------------------------------------------------------------***   42947600
.***AE.KXVAR03 NAME, OPT INPUT, KEYS -XVAR KEY                          42948400
                   AIF   (N'&PRODQUAL LE 1).ZE112A  CK NUM              42949200
&ZMS               SETC  '"PRODQUAL='           *KPOSA* MNOTE           42950000
&ZMS               SETC  '&ZMS.&PRODQUAL"'                              42950800
&ZMS               SETC  '&ZMS "PRODQUAL"'                              42951600
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            42952400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        42953200
.ZE112A            ANOP  ,                                              42954000
.*-------------------------------------------------------------------   42954800
.***AE.KXVAR04 NAME, OPT INPUT, KEYS -XVAR ARGUMENT                     42955600
                   AIF   (K'&PRODQUAL(1) LE 0).ZE112B NO PRM            42956400
&ZXPRODQUAL        SETC  'INPUT'     SET IN/OUTPUT                      42957200
&XPRODQUAL         SETC  '&PRODQUAL(1)'         SET XVARIABLE           42958000
                   AIF   (N'&PRODQUAL GT 1).ZE112B                      42958800
.*                 ANOP              MULTIPLE PARMS                     42959600
&XPRODQUAL         SETC  '&PRODQUAL'            SET XVARIABLE           42960400
.ZE112B            ANOP  ,                                              42961200
.*-------------------------------------------------------------------   42962000
.***AE.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    42962800
                   AIF   (K'&ZXPRODQUAL LE 0).ZE112R  NOT I/O           42963600
                   AIF   ('&XPRODQUAL'(1,1) NE '(').ZE112R              42964400
&ZCGPR             SETC  '&XPRODQUAL'(2,K'&XPRODQUAL-2)                 42965200
                   AIF   ('&ZCGPR'(1,1) NE '0').ZE112P                  42966000
                   AIF   (K'&ZCGPR GT 2).ZE112Q                         42966800
                   AIF   ('&ZCGPR' EQ '0').ZE112Q                       42967600
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  42968400
                   AIF   (T'&ZCGPR NE 'N').ZE112Q  INVALID REG NAME     42969200
.ZE112P            ANOP  ,                                              42970000
                   AIF   (T'&ZCGPR NE 'N').ZE112R  NON NUMERIC          42970800
                   AIF   ('&ZCGPR' LT '2').ZE112Q                       42971600
                   AIF   ('&ZCGPR' LE '12').ZE112R                      42972400
.ZE112Q            ANOP  ,                                              42973200
&ZMS               SETC  '"PRODQUAL='           *KGPRA* MNOTE           42974000
&ZMS               SETC  '&ZMS.&PRODQUAL"'                              42974800
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      42975600
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               42976400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        42977200
.ZE112R            ANOP  ,                                              42978000
.*----------------------------------------------------------------***   42978800
.***AE.KXVAR03 NAME, OPT INPUT, KEYS -XVAR KEY                          42979600
                   AIF   (N'&PRODID LE 1).ZE113A  CK NUM                42980400
&ZMS               SETC  '"PRODID='  *KPOSA* MNOTE                      42981200
&ZMS               SETC  '&ZMS.&PRODID"'                                42982000
&ZMS               SETC  '&ZMS "PRODID"'                                42982800
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            42983600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        42984400
.ZE113A            ANOP  ,                                              42985200
.*-------------------------------------------------------------------   42986000
.***AE.KXVAR04 NAME, OPT INPUT, KEYS -XVAR ARGUMENT                     42986800
                   AIF   (K'&PRODID(1) LE 0).ZE113B NO PRM              42987600
&ZXPRODID          SETC  'INPUT'     SET IN/OUTPUT                      42988400
&XPRODID           SETC  '&PRODID(1)'           SET XVARIABLE           42989200
                   AIF   (N'&PRODID GT 1).ZE113B                        42990000
.*                 ANOP              MULTIPLE PARMS                     42990800
&XPRODID           SETC  '&PRODID'   SET XVARIABLE                      42991600
.ZE113B            ANOP  ,                                              42992400
.*-------------------------------------------------------------------   42993200
.***AE.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    42994000
                   AIF   (K'&ZXPRODID LE 0).ZE113R  NOT I/O             42994800
                   AIF   ('&XPRODID'(1,1) NE '(').ZE113R                42995600
&ZCGPR             SETC  '&XPRODID'(2,K'&XPRODID-2)                     42996400
                   AIF   ('&ZCGPR'(1,1) NE '0').ZE113P                  42997200
                   AIF   (K'&ZCGPR GT 2).ZE113Q                         42998000
                   AIF   ('&ZCGPR' EQ '0').ZE113Q                       42998800
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  42999600
                   AIF   (T'&ZCGPR NE 'N').ZE113Q  INVALID REG NAME     43000400
.ZE113P            ANOP  ,                                              43001200
                   AIF   (T'&ZCGPR NE 'N').ZE113R  NON NUMERIC          43002000
                   AIF   ('&ZCGPR' LT '2').ZE113Q                       43002800
                   AIF   ('&ZCGPR' LE '12').ZE113R                      43003600
.ZE113Q            ANOP  ,                                              43004400
&ZMS               SETC  '"PRODID='  *KGPRA* MNOTE                      43005200
&ZMS               SETC  '&ZMS.&PRODID"'                                43006000
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      43006800
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               43007600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        43008400
.ZE113R            ANOP  ,                                              43009200
.*-------------------------------------------------------------------   43010000
.***AE.KMEKY08 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           43010800
.ZE115     AIF   ('&XENDPRODNAME' NE 'PRTOKEN').ZE116                   43011600
.*-------------------------------------------------------------------   43012400
.***AE.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 43013200
                   AIF   (K'&ZXPRTOKEN LE 0).ZE115R  NOT I/O            43014000
                   AIF   ('&XPRTOKEN'(1,1) NE '(').ZE115R               43014800
&ZCGPR             SETC  '&XPRTOKEN'(2,K'&XPRTOKEN-2)                   43015600
                   AIF   ('&ZCGPR'(1,1) NE '0').ZE115P                  43016400
                   AIF   (K'&ZCGPR GT 2).ZE115Q                         43017200
                   AIF   ('&ZCGPR' EQ '0').ZE115Q                       43018000
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  43018800
                   AIF   (T'&ZCGPR NE 'N').ZE115Q  INVALID REG NAME     43019600
.ZE115P            ANOP  ,                                              43020400
                   AIF   (T'&ZCGPR NE 'N').ZE115R  NON NUMERIC          43021200
                   AIF   ('&ZCGPR' LT '2').ZE115Q                       43022000
                   AIF   ('&ZCGPR' LE '12').ZE115R                      43022800
.ZE115Q            ANOP  ,                                              43023600
&ZMS               SETC  '"PRTOKEN='            *KGPRA* MNOTE           43024400
&ZMS               SETC  '&ZMS.&PRTOKEN"'                               43025200
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      43026000
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               43026800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        43027600
.ZE115R            ANOP  ,                                              43028400
.*-------------------------------------------------------------------   43029200
.***AE.KMEKY09 NAME, RQD INPUT, ME KEYS -END                            43030000
.ZE116             ANOP  ,           END MUTUALLY EXCLUSIVE KEYS        43030800
.*----------------------------------------------------------------***   43031600
.***AE.KXVAR03 NAME, OPT OUTPUT, KEYS -XVAR KEY                         43032400
                   AIF   (N'&ENDTIME LE 1).ZE118A  CK NUM               43033200
&ZMS               SETC  '"ENDTIME='            *KPOSA* MNOTE           43034000
&ZMS               SETC  '&ZMS.&ENDTIME"'                               43034800
&ZMS               SETC  '&ZMS "ENDTIME"'                               43035600
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            43036400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        43037200
.ZE118A            ANOP  ,                                              43038000
.*-------------------------------------------------------------------   43038800
.***AE.KXVAR04 NAME, OPT OUTPUT, KEYS -XVAR ARGUMENT                    43039600
                   AIF   (K'&ENDTIME(1) LE 0).ZE118B NO PRM             43040400
&ZXENDTIME         SETC  'OUTPUT'    SET IN/OUTPUT                      43041200
&XENDTIME          SETC  '&ENDTIME(1)'          SET XVARIABLE           43042000
                   AIF   (N'&ENDTIME GT 1).ZE118B                       43042800
.*                 ANOP              MULTIPLE PARMS                     43043600
&XENDTIME          SETC  '&ENDTIME'  SET XVARIABLE                      43044400
.ZE118B            ANOP  ,                                              43045200
.*-------------------------------------------------------------------   43046000
.***AE.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   43046800
                   AIF   (K'&ZXENDTIME LE 0).ZE118R  NOT I/O            43047600
                   AIF   ('&XENDTIME'(1,1) NE '(').ZE118R               43048400
&ZCGPR             SETC  '&XENDTIME'(2,K'&XENDTIME-2)                   43049200
                   AIF   ('&ZCGPR'(1,1) NE '0').ZE118P                  43050000
                   AIF   (K'&ZCGPR GT 2).ZE118Q                         43050800
                   AIF   ('&ZCGPR' EQ '0').ZE118Q                       43051600
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  43052400
                   AIF   (T'&ZCGPR NE 'N').ZE118Q  INVALID REG NAME     43053200
.ZE118P            ANOP  ,                                              43054000
                   AIF   (T'&ZCGPR NE 'N').ZE118R  NON NUMERIC          43054800
                   AIF   ('&ZCGPR' LT '2').ZE118Q                       43055600
                   AIF   ('&ZCGPR' LE '12').ZE118R                      43056400
.ZE118Q            ANOP  ,                                              43057200
&ZMS               SETC  '"ENDTIME='            *KGPRA* MNOTE           43058000
&ZMS               SETC  '&ZMS.&ENDTIME"'                               43058800
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      43059600
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               43060400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        43061200
.ZE118R            ANOP  ,                                              43062000
.*----------------------------------------------------------------***   43062800
.***AE.KXVAR03 NAME, OPT OUTPUT, KEYS -XVAR KEY                         43063600
                   AIF   (N'&ENDDATA LE 1).ZE119A  CK NUM               43064400
&ZMS               SETC  '"ENDDATA='            *KPOSA* MNOTE           43065200
&ZMS               SETC  '&ZMS.&ENDDATA"'                               43066000
&ZMS               SETC  '&ZMS "ENDDATA"'                               43066800
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            43067600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        43068400
.ZE119A            ANOP  ,                                              43069200
.*-------------------------------------------------------------------   43070000
.***AE.KXVAR04 NAME, OPT OUTPUT, KEYS -XVAR ARGUMENT                    43070800
                   AIF   (K'&ENDDATA(1) LE 0).ZE119B NO PRM             43071600
&ZXENDDATA         SETC  'OUTPUT'    SET IN/OUTPUT                      43072400
&XENDDATA          SETC  '&ENDDATA(1)'          SET XVARIABLE           43073200
                   AIF   (N'&ENDDATA GT 1).ZE119B                       43074000
.*                 ANOP              MULTIPLE PARMS                     43074800
&XENDDATA          SETC  '&ENDDATA'  SET XVARIABLE                      43075600
.ZE119B            ANOP  ,                                              43076400
.*-------------------------------------------------------------------   43077200
.***AE.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   43078000
                   AIF   (K'&ZXENDDATA LE 0).ZE119R  NOT I/O            43078800
                   AIF   ('&XENDDATA'(1,1) NE '(').ZE119R               43079600
&ZCGPR             SETC  '&XENDDATA'(2,K'&XENDDATA-2)                   43080400
                   AIF   ('&ZCGPR'(1,1) NE '0').ZE119P                  43081200
                   AIF   (K'&ZCGPR GT 2).ZE119Q                         43082000
                   AIF   ('&ZCGPR' EQ '0').ZE119Q                       43082800
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  43083600
                   AIF   (T'&ZCGPR NE 'N').ZE119Q  INVALID REG NAME     43084400
.ZE119P            ANOP  ,                                              43085200
                   AIF   (T'&ZCGPR NE 'N').ZE119R  NON NUMERIC          43086000
                   AIF   ('&ZCGPR' LT '2').ZE119Q                       43086800
                   AIF   ('&ZCGPR' LE '12').ZE119R                      43087600
.ZE119Q            ANOP  ,                                              43088400
&ZMS               SETC  '"ENDDATA='            *KGPRA* MNOTE           43089200
&ZMS               SETC  '&ZMS.&ENDDATA"'                               43090000
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      43090800
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               43091600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        43092400
.ZE119R            ANOP  ,                                              43093200
.*----------------------------------------------------------------***   43094000
.***AE.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             43094800
                   AIF   (N'&LINKAGE LE 1).ZE122A  CK NUM               43095600
&ZMS               SETC  '"LINKAGE='            *KPOSA* MNOTE           43096400
&ZMS               SETC  '&ZMS.&LINKAGE"'                               43097200
&ZMS               SETC  '&ZMS "LINKAGE"'                               43098000
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            43098800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        43099600
.ZE122A            ANOP  ,                                              43100400
.*-------------------------------------------------------------------   43101200
.***AE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             43102000
.ZE123A   AIF   ('&LINKAGE(1)' NE 'SVC').ZE124A                         43102800
&XLINKAGE          SETC  'SVC'       SET KEYWORD                        43103600
.*-------------------------------------------------------------------   43104400
.***AE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             43105200
.ZE124A   AIF   ('&LINKAGE(1)' NE 'BRANCH').ZE125A                      43106000
&XLINKAGE          SETC  'BRANCH'    SET KEYWORD                        43106800
.*-------------------------------------------------------------------   43107600
.***AE.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             43108400
.ZE125A            AIF   (K'&XLINKAGE GT 0).ZE125B  KEYWORD             43109200
                   AIF   (K'&LINKAGE(1) LE 0).ZE125C                    43110000
&ZMS               SETC  '"LINKAGE='            *KUKWA* MNOTE           43110800
&ZMS               SETC  '&ZMS.&LINKAGE"'                               43111600
&ZMS               SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '      43112400
&ZMS               SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'            43113200
&ZMS               SETC  '&ZMS "SVC"'           VALID KEYWORD           43114000
&ZMS               SETC  '&ZMS OR "BRANCH".'    VALID KEYWORD           43114800
                   MNOTE 8,' &ZMS '                                     43115600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        43116400
                   AGO   .ZE125C                                        43117200
.*                                                                      43150000
.ZE125B            ANOP  ,                                              43156500
&ZXLINKAGE         SETC  'INPUT'     SET IN/OUTPUT                      43163000
.ZE125C            ANOP  ,                                              43169500
.*-------------------------------------------------------------------   43176000
.***AE.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           43182500
&ZTLC              SETC 'STATUS'                                        43189000
                   AIF   ('&REQUEST(1)' NE '&ZTLC').ZE126A              43195500
&XREQUEST          SETC  'STATUS'    SET KEYWORD                        43202000
                   AIF   (N'&REQUEST LE 1).ZE126A  CK NUM               43208500
&ZMS               SETC  '"REQUEST='            *KPOSA* MNOTE           43215000
&ZMS               SETC  '&ZMS.&REQUEST"'                               43221500
&ZMS               SETC  '&ZMS "REQUEST"'                               43228000
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            43234500
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        43241000
.ZE126A            ANOP  ,                                              43247500
.*----------------------------------------------------------------***   43254000
.***AE.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             43260500
                   AIF   (N'&LINKAGE LE 1).ZE128A  CK NUM               43267000
&ZMS               SETC  '"LINKAGE='            *KPOSA* MNOTE           43273500
&ZMS               SETC  '&ZMS.&LINKAGE"'                               43280000
&ZMS               SETC  '&ZMS "LINKAGE"'                               43286500
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            43293000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        43299500
.ZE128A            ANOP  ,                                              43306000
.*-------------------------------------------------------------------   43312500
.***AE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             43319000
.ZE129A   AIF   ('&LINKAGE(1)' NE 'SVC').ZE130A                         43325500
&XLINKAGE          SETC  'SVC'       SET KEYWORD                        43332000
.*-------------------------------------------------------------------   43338500
.***AE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             43345000
.ZE130A   AIF   ('&LINKAGE(1)' NE 'BRANCH').ZE131A                      43351500
&XLINKAGE          SETC  'BRANCH'    SET KEYWORD                        43358000
.*-------------------------------------------------------------------   43364500
.***AE.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             43371000
.ZE131A            AIF   (K'&XLINKAGE GT 0).ZE131B  KEYWORD             43377500
                   AIF   (K'&LINKAGE(1) LE 0).ZE131C                    43384000
&ZMS               SETC  '"LINKAGE='            *KUKWA* MNOTE           43390500
&ZMS               SETC  '&ZMS.&LINKAGE"'                               43397000
&ZMS               SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '      43403500
&ZMS               SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'            43410000
&ZMS               SETC  '&ZMS "SVC"'           VALID KEYWORD           43416500
&ZMS               SETC  '&ZMS OR "BRANCH".'    VALID KEYWORD           43423000
                   MNOTE 8,' &ZMS '                                     43429500
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        43436000
                   AGO   .ZE131C                                        43442500
.*                                                                      43450000
.ZE131B            ANOP  ,                                              43454700
&ZXLINKAGE         SETC  'INPUT'     SET IN/OUTPUT                      43459400
.ZE131C            ANOP  ,                                              43464100
.*------------------------------------------------------------------    43468800
.***AE.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           43473500
.ZE132             AIF   (K'&XREQUEST GT 0).ZE132A  VALID               43478200
                   AIF   (K'&REQUEST(1) LE 0).ZE132B                    43482900
&ZMS               SETC  '"REQUEST='            *KUKWA* MNOTE           43487600
&ZMS               SETC  '&ZMS.&REQUEST"'                               43492300
&ZMS               SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '      43497000
&ZMS               SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'            43501700
&ZMS               SETC  '&ZMS "REGISTER",'     VALID KEYWORD           43506400
&ZMS               SETC  '&ZMS "DEREGISTER",'   VALID KEYWORD           43511100
&ZMS               SETC  '&ZMS "FUNCTIONBEGIN",'  VALID KEYWORD         43515800
&ZMS               SETC  '&ZMS "FUNCTIONDATA",'  VALID KEYWORD          43520500
&ZMS               SETC  '&ZMS "FUNCTIONEND",'  VALID KEYWORD           43525200
&ZMS               SETC  '&ZMS OR "STATUS".'    VALID KEYWORD           43529900
                   MNOTE 8,' &ZMS '                                     43534600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        43539300
                   AGO   .ZE132B                                        43544000
.*                                                                      43550000
.ZE132A            ANOP  ,                                              43554300
&ZXREQUEST         SETC  'INPUT'     SET IN/OUTPUT                      43558600
.ZE132B            ANOP  ,                                              43562900
.*----------------------------------------------------------------***   43567200
.***AE.KXVAR03 NAME, OPT OUTPUT, KEYS -XVAR KEY                         43571500
                   AIF   (N'&RETCODE LE 1).ZE134A  CK NUM               43575800
&ZMS               SETC  '"RETCODE='            *KPOSA* MNOTE           43580100
&ZMS               SETC  '&ZMS.&RETCODE"'                               43584400
&ZMS               SETC  '&ZMS "RETCODE"'                               43588700
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            43593000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        43597300
.ZE134A            ANOP  ,                                              43601600
.*-------------------------------------------------------------------   43605900
.***AE.KXVAR04 NAME, OPT OUTPUT, KEYS -XVAR ARGUMENT                    43610200
                   AIF   (K'&RETCODE(1) LE 0).ZE134B NO PRM             43614500
&ZXRETCODE         SETC  'OUTPUT'    SET IN/OUTPUT                      43618800
&XRETCODE          SETC  '&RETCODE(1)'          SET XVARIABLE           43623100
                   AIF   (N'&RETCODE GT 1).ZE134B                       43627400
.*                 ANOP              MULTIPLE PARMS                     43631700
&XRETCODE          SETC  '&RETCODE'  SET XVARIABLE                      43636000
.ZE134B            ANOP  ,                                              43640300
.*-------------------------------------------------------------------   43644600
.***AE.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   43648900
                   AIF   (K'&ZXRETCODE LE 0).ZE134R  NOT I/O            43653200
                   AIF   ('&XRETCODE'(1,1) NE '(').ZE134R               43657500
&ZCGPR             SETC  '&XRETCODE'(2,K'&XRETCODE-2)                   43661800
                   AIF   ('&ZCGPR'(1,1) NE '0').ZE134P                  43666100
                   AIF   (K'&ZCGPR GT 2).ZE134Q                         43670400
                   AIF   ('&ZCGPR' EQ '0').ZE134Q                       43674700
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  43679000
                   AIF   (T'&ZCGPR NE 'N').ZE134Q  INVALID REG NAME     43683300
.ZE134P            ANOP  ,                                              43687600
                   AIF   (T'&ZCGPR NE 'N').ZE134R  NON NUMERIC          43691900
                   AIF   ('&ZCGPR' LT '2').ZE134Q                       43696200
                   AIF   ('&ZCGPR' LE '12').ZE134R                      43700500
.ZE134Q            ANOP  ,                                              43704800
&ZMS               SETC  '"RETCODE='            *KGPRA* MNOTE           43709100
&ZMS               SETC  '&ZMS.&RETCODE"'                               43713400
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      43717700
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               43722000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        43726300
.ZE134R            ANOP  ,                                              43730600
.******************************************************************     43734900
.***AF.P00 CHECK STANDALONE POSITIONAL VARIABLES                        43739200
.******************************************************************     43743500
                   ACTR  10000                                          43747800
.*----------------------------------------------------------------***   43752100
.***AF.P02 EXTRA POSITIONALS                                            43756400
                   AIF   (N'&SYSLIST LE 0).ZELISTX  NO EXTRAS           43760700
&ZCVAL             SETC  ''          ERROR FIELD                        43765000
&ZAWRK             SETA  0           POSITIONAL NUMBER                  43769300
.ZELIST2           ANOP  ,                                              43773600
&ZAWRK             SETA  &ZAWRK+1    NEXT POSITIONAL                    43777900
                   AIF   (&ZAWRK GT N'&SYSLIST).ZELIST3  DONE           43782200
&ZCVAL             SETC '&ZCVAL,&SYSLIST(&ZAWRK)'  EXTRA                43786500
                   AGO   .ZELIST2                                       43790800
.*                                                                      43800000
.ZELIST3           ANOP  ,                                              43804000
&ZCVAL             SETC '&ZCVAL'(2,K'&ZCVAL-1)  STRIP COMMA             43808000
&ZMS               SETC  'POSITIONAL ARGUMENT(S),'  *PPOSA* MNOTE       43812000
&ZMS               SETC  '&ZMS "&ZCVAL"'                                43816000
&ZMS               SETC  '&ZMS CANNOT BE USED.'                         43820000
&ZMS               SETC  '&ZMS NO POSITIONAL ARGUMENTS'                 43824000
                   MNOTE 8,' &ZMS ARE ALLOWED.'                         43828000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        43832000
.ZELISTX           ANOP  ,                                              43836000
&ZASYSLNDX         SETA  0                                              43840000
.*-------------------------------------------------------------------   43844000
.***AE.MF02 MF=(SLME)                                                   43848000
.ZEMFX             ANOP  ,           END OF PARTIAL SYNTAX CHECK        43852000
.*******************************************************************    43856000
.***AE.ZMR01 NO CODE GENERATED IF ERRORS DETECTED                       43860000
.*******************************************************************    43864000
                   AIF   (&ZMACRET NE 0).ZLX2   ERROR DETECTED          43868000
.*******************************************************************    43872000
.***AE.01  START OF IFAUSAGE MACRO CODE                                 43876000
.*******************************************************************    43880000
                   LCLC  &M0M0001                 NAME                  43884000
&M0M0001           SETC  '&XLABEL'                SET NAME              43888000
                   AIF   (K'&XLABEL NE 0).XLAB2                         43892000
&M0M0001           SETC  'M00M&SYSNDX'            DEFAULT NAME          43896000
.*                                                                      43900000
.XLAB2             ANOP  ,                                              43911900
&M0M0001 DS    0H                             IFAUSAGE-1                43923800
.*******************************************************************    43935700
.***AE.PR01 PRINT CONTROLS, DEFAULT IS YES                              43947600
.*******************************************************************    43959500
              PUSH  PRINT                                               43971400
                   AIF   ('&ZPRINT' NE 'NO').ZPRINTX  TURN PRINT ON     43983300
                   PRINT OFF         ++ PR01                            43995200
                   AGO   .ZPRNTXX                                       44007100
.ZPRINTX           PRINT ON                                             44019000
.ZPRNTXX           ANOP  ,                                              44030900
.********************************************************************   44042800
.***AL.L01 INTERNAL ARRAY TO PRODUCE FORMATTED CODE                     44054700
.********************************************************************   44066600
                      LCLA  &ZOPN          LIST INSTRUCTION INDEX       44078500
                      LCLA  &ZOPN1         INVOCATION INDEX             44090400
                      LCLC  &ZOPL(4095)    LABEL                        44102300
                      LCLC  &ZOPO(4095)    OPERATION                    44114200
                      LCLC  &ZOPV(4095)    VALUE                        44126100
                      LCLC  &ZOPD(4095)    DESCRIPTION                  44138000
.*                                                                      44150000
&ZOPN                 SETA  0              INITIAL INST INDEX VALUE     44161100
.******************************************************************     44172200
.***AL.L10 IFAUSAGE FMT=LIST MF=S|L PARAMETERS                          44183300
.******************************************************************     44194400
                      AIF   ('&XMF' EQ 'L').ZLMFSL2                     44205500
                      AIF   ('&XMF' NE 'S').ZLMFSLX                     44216600
&XMFCTRL              SETC  '#Z'.'&SYSNDX'(1,4).'A'                     44227700
&XMFATTR              SETC  '0D'                                        44238800
.*                                                                      44250000
&ZOPN                 SETA  &ZOPN+1                                     44300000
&ZOPL(&ZOPN)          SETC  ' '                                         44350000
&ZOPO(&ZOPN)          SETC  'B'                                         44400000
&ZOPV(&ZOPN)          SETC  '&XMFCTRL.S'                                44450000
&ZOPD(&ZOPN)          SETC  '++ IFAUSAGE ARG PARMS'                     44500000
.*                                                                      46350000
&ZOPN                 SETA  &ZOPN+1                                     46366600
&ZOPL(&ZOPN)          SETC  ' '                                         46383200
&ZOPO(&ZOPN)          SETC  'SPACE'                                     46399800
&ZOPV(&ZOPN)          SETC  '1'                                         46416400
&ZOPD(&ZOPN)          SETC  ' '                                         46433000
.*                                                                      46450000
.ZLMFSL2              ANOP  ,                                           46452300
.*-------------------------------------------------------------------   46454600
.***AM.L01  IFAUSAGE FMT=LIST PARAMETERS                                46456900
&ZOPN                 SETA &ZOPN+1                                      46459200
&ZOPL(&ZOPN)          SETC '&XMFCTRL'                                   46461500
&ZOPO(&ZOPN)          SETC 'DS'                                         46463800
&ZOPV(&ZOPN)          SETC '&XMFATTR'                                   46466100
&ZOPD(&ZOPN)          SETC '++ IFAUSAGE PARM LIST'                      46468400
.*-------------------------------------------------------------------   46470700
.***AM.L09  XPREFIX F                                                   46473000
&ZOPN                 SETA &ZOPN+1                                      46475300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XPREFIX'                          46477600
&ZOPO(&ZOPN)          SETC 'DS'                                         46479900
&ZOPV(&ZOPN)          SETC 'F'                                          46482200
&ZOPD(&ZOPN)          SETC '++ CONSTANT  XPREFIX'                       46484500
.*-------------------------------------------------------------------   46486800
.***AM.L09  XID CL8                                                     46489100
&ZOPN                 SETA &ZOPN+1                                      46491400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XID'                              46493700
&ZOPO(&ZOPN)          SETC 'DS'                                         46496000
&ZOPV(&ZOPN)          SETC 'CL8'                                        46498300
&ZOPD(&ZOPN)          SETC '++ CONSTANT  XID'                           46500600
.*-------------------------------------------------------------------   46502900
.***AM.L09  XPLISTLEN XL2                                               46505200
&ZOPN                 SETA &ZOPN+1                                      46507500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XPLISTLEN'                        46509800
&ZOPO(&ZOPN)          SETC 'DS'                                         46512100
&ZOPV(&ZOPN)          SETC 'XL2'                                        46514400
&ZOPD(&ZOPN)          SETC '++ INPUT  XPLISTLEN'                        46516700
.*-------------------------------------------------------------------   46519000
.***AM.L02 XVERSION XL1                                                 46521300
&ZOPN                 SETA &ZOPN+1                                      46523600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XVERSION'                         46525900
&ZOPO(&ZOPN)          SETC 'DS'                                         46528200
&ZOPV(&ZOPN)          SETC 'XL1'                                        46530500
&ZOPD(&ZOPN)          SETC '++ INPUT XVERSION'                          46532800
.*-------------------------------------------------------------------   46535100
.***AM.L05 XREQUEST XL1                                                 46537400
&ZOPN                 SETA &ZOPN+1                                      46539700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XREQUEST'                         46542000
&ZOPO(&ZOPN)          SETC 'DS'                                         46544300
&ZOPV(&ZOPN)          SETC 'XL1'                                        46546600
&ZOPD(&ZOPN)          SETC '++ &ZXREQUEST XREQUEST'                     46548900
.*                                                                      46551200
&ZOPN                 SETA  &ZOPN+1                                     46553500
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XREQUEST_REGISTER'               46555800
&ZOPO(&ZOPN)          SETC  'EQU'                                       46558100
&ZOPV(&ZOPN)          SETC  '1'                                         46560400
&ZOPD(&ZOPN)          SETC  '++ XREQUEST.'                              46562700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).REGISTER'                     46565000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      46567300
.*                                                                      46569600
&ZOPN                 SETA  &ZOPN+1                                     46571900
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XREQUEST_DEREGISTER'             46574200
&ZOPO(&ZOPN)          SETC  'EQU'                                       46576500
&ZOPV(&ZOPN)          SETC  '2'                                         46578800
&ZOPD(&ZOPN)          SETC  '++ XREQUEST.'                              46581100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).DEREGISTER'                   46583400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      46585700
.*                                                                      46588000
&ZOPN                 SETA  &ZOPN+1                                     46590300
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XREQUEST_FUNCTIONBEGIN'          46592600
&ZOPO(&ZOPN)          SETC  'EQU'                                       46594900
&ZOPV(&ZOPN)          SETC  '3'                                         46597200
&ZOPD(&ZOPN)          SETC  '++ XREQUEST.'                              46599500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).FUNCTIONBEGIN'                46601800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      46604100
.*                                                                      46606400
&ZOPN                 SETA  &ZOPN+1                                     46608700
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XREQUEST_FUNCTIONDATA'           46611000
&ZOPO(&ZOPN)          SETC  'EQU'                                       46613300
&ZOPV(&ZOPN)          SETC  '4'                                         46615600
&ZOPD(&ZOPN)          SETC  '++ XREQUEST.'                              46617900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).FUNCTIONDATA'                 46620200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      46622500
.*                                                                      46624800
&ZOPN                 SETA  &ZOPN+1                                     46627100
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XREQUEST_FUNCTIONEND'            46629400
&ZOPO(&ZOPN)          SETC  'EQU'                                       46631700
&ZOPV(&ZOPN)          SETC  '5'                                         46634000
&ZOPD(&ZOPN)          SETC  '++ XREQUEST.'                              46636300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).FUNCTIONEND'                  46638600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      46640900
.*                                                                      46643200
&ZOPN                 SETA  &ZOPN+1                                     46645500
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XREQUEST_STATUS'                 46647800
&ZOPO(&ZOPN)          SETC  'EQU'                                       46650100
&ZOPV(&ZOPN)          SETC  '6'                                         46652400
&ZOPD(&ZOPN)          SETC  '++ XREQUEST.'                              46654700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).STATUS'                       46657000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      46659300
.*-------------------------------------------------------------------   46661600
.***AM.L09  XPRODOWNER CL16                                             46663900
&ZOPN                 SETA &ZOPN+1                                      46666200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XPRODOWNER'                       46668500
&ZOPO(&ZOPN)          SETC 'DS'                                         46670800
&ZOPV(&ZOPN)          SETC 'CL16'                                       46673100
&ZOPD(&ZOPN)          SETC '++ &ZXPRODOWNER  XPRODOWNER'                46675400
.*-------------------------------------------------------------------   46677700
.***AM.L09  XPRODNAME CL16                                              46680000
&ZOPN                 SETA &ZOPN+1                                      46682300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XPRODNAME'                        46684600
&ZOPO(&ZOPN)          SETC 'DS'                                         46686900
&ZOPV(&ZOPN)          SETC 'CL16'                                       46689200
&ZOPD(&ZOPN)          SETC '++ &ZXPRODNAME  XPRODNAME'                  46691500
.*-------------------------------------------------------------------   46693800
.***AM.L09  XPRODVERS CL8                                               46696100
&ZOPN                 SETA &ZOPN+1                                      46698400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XPRODVERS'                        46700700
&ZOPO(&ZOPN)          SETC 'DS'                                         46703000
&ZOPV(&ZOPN)          SETC 'CL8'                                        46705300
&ZOPD(&ZOPN)          SETC '++ &ZXPRODVERS  XPRODVERS'                  46707600
.*-------------------------------------------------------------------   46709900
.***AM.L09  XPRODQUAL CL8                                               46712200
&ZOPN                 SETA &ZOPN+1                                      46714500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XPRODQUAL'                        46716800
&ZOPO(&ZOPN)          SETC 'DS'                                         46719100
&ZOPV(&ZOPN)          SETC 'CL8'                                        46721400
&ZOPD(&ZOPN)          SETC '++ &ZXPRODQUAL  XPRODQUAL'                  46723700
.*-------------------------------------------------------------------   46726000
.***AM.L09  XPRODID CL8                                                 46728300
&ZOPN                 SETA &ZOPN+1                                      46730600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XPRODID'                          46732900
&ZOPO(&ZOPN)          SETC 'DS'                                         46735200
&ZOPV(&ZOPN)          SETC 'CL8'                                        46737500
&ZOPD(&ZOPN)          SETC '++ &ZXPRODID  XPRODID'                      46739800
.*-------------------------------------------------------------------   46742100
.***AM.L05 XDOMAIN XL1                                                  46744400
&ZOPN                 SETA &ZOPN+1                                      46746700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XDOMAIN'                          46749000
&ZOPO(&ZOPN)          SETC 'DS'                                         46751300
&ZOPV(&ZOPN)          SETC 'XL1'                                        46753600
&ZOPD(&ZOPN)          SETC '++ &ZXDOMAIN XDOMAIN'                       46755900
.*                                                                      46758200
&ZOPN                 SETA  &ZOPN+1                                     46760500
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XDOMAIN_ADDRSP'                  46762800
&ZOPO(&ZOPN)          SETC  'EQU'                                       46765100
&ZOPV(&ZOPN)          SETC  '1'                                         46767400
&ZOPD(&ZOPN)          SETC  '++ XDOMAIN.'                               46769700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).ADDRSP'                       46772000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      46774300
.*                                                                      46776600
&ZOPN                 SETA  &ZOPN+1                                     46778900
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XDOMAIN_TASK'                    46781200
&ZOPO(&ZOPN)          SETC  'EQU'                                       46783500
&ZOPV(&ZOPN)          SETC  '2'                                         46785800
&ZOPD(&ZOPN)          SETC  '++ XDOMAIN.'                               46788100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).TASK'                         46790400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      46792700
.*-------------------------------------------------------------------   46795000
.***AM.L05 XSCOPE XL1                                                   46797300
&ZOPN                 SETA &ZOPN+1                                      46799600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSCOPE'                           46801900
&ZOPO(&ZOPN)          SETC 'DS'                                         46804200
&ZOPV(&ZOPN)          SETC 'XL1'                                        46806500
&ZOPD(&ZOPN)          SETC '++ &ZXSCOPE XSCOPE'                         46808800
.*                                                                      46811100
&ZOPN                 SETA  &ZOPN+1                                     46813400
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XSCOPE_ALL'                      46815700
&ZOPO(&ZOPN)          SETC  'EQU'                                       46818000
&ZOPV(&ZOPN)          SETC  '1'                                         46820300
&ZOPD(&ZOPN)          SETC  '++ XSCOPE.'                                46822600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).ALL'                          46824900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      46827200
.*                                                                      46829500
&ZOPN                 SETA  &ZOPN+1                                     46831800
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XSCOPE_FUNCTION'                 46834100
&ZOPO(&ZOPN)          SETC  'EQU'                                       46836400
&ZOPV(&ZOPN)          SETC  '2'                                         46838700
&ZOPD(&ZOPN)          SETC  '++ XSCOPE.'                                46841000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).FUNCTION'                     46843300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      46845600
.*-------------------------------------------------------------------   46847900
.***AM.L09  XRSV0001 CL02                                               46850200
&ZOPN                 SETA &ZOPN+1                                      46852500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0001'                         46854800
&ZOPO(&ZOPN)          SETC 'DS'                                         46857100
&ZOPV(&ZOPN)          SETC 'CL02'                                       46859400
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV0001'                      46861700
.*-------------------------------------------------------------------   46864000
.***AM.L09 ADDR XPRTOKEN A                                              46866300
&ZOPN                 SETA &ZOPN+1                                      46868600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XPRTOKEN_ADDR'                    46870900
&ZOPO(&ZOPN)          SETC 'DS'                                         46873200
&ZOPV(&ZOPN)          SETC 'A'                                          46875500
&ZOPD(&ZOPN)          SETC '++ &ZXPRTOKEN ADDR XPRTOKEN'                46877800
.*-------------------------------------------------------------------   46880100
.***AM.L09 ADDR XBEGTIME A                                              46882400
&ZOPN                 SETA &ZOPN+1                                      46884700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XBEGTIME_ADDR'                    46887000
&ZOPO(&ZOPN)          SETC 'DS'                                         46889300
&ZOPV(&ZOPN)          SETC 'A'                                          46891600
&ZOPD(&ZOPN)          SETC '++ &ZXBEGTIME ADDR XBEGTIME'                46893900
.*-------------------------------------------------------------------   46896200
.***AM.L09 ADDR XDATA A                                                 46898500
&ZOPN                 SETA &ZOPN+1                                      46900800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XDATA_ADDR'                       46903100
&ZOPO(&ZOPN)          SETC 'DS'                                         46905400
&ZOPV(&ZOPN)          SETC 'A'                                          46907700
&ZOPD(&ZOPN)          SETC '++ &ZXDATA ADDR XDATA'                      46910000
.*-------------------------------------------------------------------   46912300
.***AM.L05 XFORMAT XL1                                                  46914600
&ZOPN                 SETA &ZOPN+1                                      46916900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XFORMAT'                          46919200
&ZOPO(&ZOPN)          SETC 'DS'                                         46921500
&ZOPV(&ZOPN)          SETC 'XL1'                                        46923800
&ZOPD(&ZOPN)          SETC '++ &ZXFORMAT XFORMAT'                       46926100
.*                                                                      46928400
&ZOPN                 SETA  &ZOPN+1                                     46930700
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XFORMAT_CPUTIME'                 46933000
&ZOPO(&ZOPN)          SETC  'EQU'                                       46935300
&ZOPV(&ZOPN)          SETC  '1'                                         46937600
&ZOPD(&ZOPN)          SETC  '++ XFORMAT.'                               46939900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).CPUTIME'                      46942200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      46944500
.*                                                                      46946800
&ZOPN                 SETA  &ZOPN+1                                     46949100
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XFORMAT_BINARY'                  46951400
&ZOPO(&ZOPN)          SETC  'EQU'                                       46953700
&ZOPV(&ZOPN)          SETC  '2'                                         46956000
&ZOPD(&ZOPN)          SETC  '++ XFORMAT.'                               46958300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).BINARY'                       46960600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      46962900
.*                                                                      46965200
&ZOPN                 SETA  &ZOPN+1                                     46967500
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XFORMAT_FLOAT'                   46969800
&ZOPO(&ZOPN)          SETC  'EQU'                                       46972100
&ZOPV(&ZOPN)          SETC  '3'                                         46974400
&ZOPD(&ZOPN)          SETC  '++ XFORMAT.'                               46976700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).FLOAT'                        46979000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      46981300
.*-------------------------------------------------------------------   46983600
.***AM.L09  XRSV0002 CL03                                               46985900
&ZOPN                 SETA &ZOPN+1                                      46988200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0002'                         46990500
&ZOPO(&ZOPN)          SETC 'DS'                                         46992800
&ZOPV(&ZOPN)          SETC 'CL03'                                       46995100
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV0002'                      46997400
.*-------------------------------------------------------------------   46999700
.***AM.L09 ADDR XCURRENTDATA A                                          47002000
&ZOPN                 SETA &ZOPN+1                                      47004300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCURRENTDATA_ADDR'                47006600
&ZOPO(&ZOPN)          SETC 'DS'                                         47008900
&ZOPV(&ZOPN)          SETC 'A'                                          47011200
&ZOPD(&ZOPN)          SETC '++ &ZXCURRENTDATA ADDR XCURRENTDATA'        47013500
.*-------------------------------------------------------------------   47015800
.***AM.L09 ADDR XENDDATA A                                              47018100
&ZOPN                 SETA &ZOPN+1                                      47020400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XENDDATA_ADDR'                    47022700
&ZOPO(&ZOPN)          SETC 'DS'                                         47025000
&ZOPV(&ZOPN)          SETC 'A'                                          47027300
&ZOPD(&ZOPN)          SETC '++ &ZXENDDATA ADDR XENDDATA'                47029600
.*-------------------------------------------------------------------   47031900
.***AM.L09 ADDR XENDTIME A                                              47034200
&ZOPN                 SETA &ZOPN+1                                      47036500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XENDTIME_ADDR'                    47038800
&ZOPO(&ZOPN)          SETC 'DS'                                         47041100
&ZOPV(&ZOPN)          SETC 'A'                                          47043400
&ZOPD(&ZOPN)          SETC '++ &ZXENDTIME ADDR XENDTIME'                47045700
.*-------------------------------------------------------------------   47048000
.***AM.L10 END OF IFAUSAGE LIST PARAMETERS                              47050300
&ZOPN                 SETA &ZOPN+1                                      47052600
&ZOPL(&ZOPN)          SETC '&XMFCTRL.L'                                 47054900
&ZOPO(&ZOPN)          SETC 'EQU'                                        47057200
&ZOPV(&ZOPN)          SETC '*-&XMFCTRL'                                 47059500
&ZOPD(&ZOPN)          SETC '++ LENGTH OF PLIST'                         47061800
.*                                                                      47064100
&ZOPN                 SETA &ZOPN+1                                      47066400
&ZOPL(&ZOPN)          SETC ' '                                          47068700
&ZOPO(&ZOPN)          SETC 'SPACE'                                      47071000
&ZOPV(&ZOPN)          SETC '1'                                          47073300
&ZOPD(&ZOPN)          SETC ' '                                          47075600
.*-------------------------------------------------------------------   47077900
.***AL.L12 IFAUSAGE FMT=LIST MF=S|L PARAMETERS                          47080200
                      AIF   ('&XMF' EQ 'L').ZMFLX  DONE IF MF=L         47082500
.*                                                                      47084800
&ZOPN                 SETA  &ZOPN+1                                     47087100
&ZOPL(&ZOPN)          SETC  '&XMFCTRL.S'                                47089400
&ZOPO(&ZOPN)          SETC  'DC'                                        47091700
&ZOPV(&ZOPN)          SETC  '0H''0'''                                   47094000
&ZOPD(&ZOPN)          SETC  '++ IFAUSAGE ARG PARMS'                     47096300
.*                                                                      47098600
.ZLMFSLX              ANOP  ,                                           47100900
.*-------------------------------------------------------------------   47103200
.***AL.L13 SET ZPLLEN TO ITS APPROPRIATE VALUE                          47105500
&ZPLLEN               SETA 104                                          47107800
.*                                                                      47110100
.******************************************************************     47112400
.***AI.L01 IFAUSAGE FMT=LIST FILL IN PARAMETER AREA                     47114700
.******************************************************************     47117000
                      ACTR  10000                                       47119300
&ZCVAL                SETC  'LA'            XA MODE                     47121600
.*                                                                      47123900
                      AIF   ('&XMFCTRL'(1,1) NE '(').ZIMFN2  NOT GPR    47126200
&ZCGPR                SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)  GET GPR         47128500
                      AIF   ('&ZCGPR' EQ 'GPR1').ZIMFNX                 47130800
                      AIF   ('&ZCGPR' EQ 'GPR01').ZIMFNX                47133100
                      AIF   ('&ZCGPR' EQ 'REG1').ZIMFNX                 47135400
                      AIF   ('&ZCGPR' EQ 'REG01').ZIMFNX                47137700
                      AIF   ('&ZCGPR' EQ 'R1').ZIMFNX                   47140000
                      AIF   ('&ZCGPR' EQ '1').ZIMFNX                    47142300
                      AIF   ('&ZCGPR' EQ '01').ZIMFNX                   47144600
&ZOPN                 SETA  &ZOPN+1                                     47146900
&ZOPL(&ZOPN)          SETC  ' '                                         47149200
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    47151500
&ZOPV(&ZOPN)          SETC  '1,0(,&ZCGPR)'                              47153800
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       47156100
                      AGO   .ZIMFNX                                     47158400
.*                                                                      47160700
.ZIMFN2               ANOP ,                                            47163000
&ZOPN                 SETA  &ZOPN+1                                     47165300
&ZOPL(&ZOPN)          SETC  ' '                                         47167600
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    47169900
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL'                                47172200
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       47174500
.ZIMFNX               ANOP ,                                            47176800
.********************************************************************   47179100
.***AI.L02 IFAUSAGE FMT=LIST INITIALIZE PARAMETER AREA                  47181400
.********************************************************************   47183700
.***AI.L03 MF=(SLME)                                                    47186000
                      AIF   ('&XMF' EQ 'L').ZIMFLX                      47188300
                      AIF   ('&XMFSCK' NE 'COMPLETE').ZIMFLX            47190600
.*                                                                      47192900
&ZOPN                 SETA  &ZOPN+1                                     47195200
&ZOPL(&ZOPN)          SETC  ' '                                         47197500
&ZOPO(&ZOPN)          SETC  'XC'                                        47199800
&ZOPV(&ZOPN)          SETC  '0(&ZPLLEN,1),0(1)'                         47202100
&ZOPD(&ZOPN)          SETC  '++ INITIALIZE'                             47204400
.ZIMFLX               ANOP  ,                                           47206700
.*-------------------------------------------------------------------   47209000
.***AI.L54 XPREFIX F                                                    47211300
&ZOPN                 SETA  &ZOPN+1                                     47213600
&ZOPL(&ZOPN)          SETC  ' '                                         47215900
&ZOPO(&ZOPN)          SETC  'MVC'                                       47218200
&ZOPV(&ZOPN)          SETC  '0(4,1),=AL4(0)'                            47220500
&ZOPD(&ZOPN)          SETC  '++ F CONSTANT'                             47222800
.*-------------------------------------------------------------------   47225100
.***AI.L60 XID CL8                                                      47227400
&ZOPN                 SETA  &ZOPN+1                                     47229700
&ZOPL(&ZOPN)          SETC  ' '                                         47232000
&ZOPO(&ZOPN)          SETC  'MVC'                                       47234300
&ZOPV(&ZOPN)          SETC  '4(8,1),=CL8''IFAUSAGE'''                   47236600
&ZOPD(&ZOPN)          SETC  '++ CL8 CONSTANT'                           47238900
.*-------------------------------------------------------------------   47241200
.***AI.L04 XPLISTLEN XL2                                                47243500
&ZOPN                 SETA  &ZOPN+1                                     47245800
&ZOPL(&ZOPN)          SETC  ' '                                         47248100
&ZOPO(&ZOPN)          SETC  'MVC'                                       47250400
&ZOPV(&ZOPN)          SETC  '12(2,1),=AL2(104)'                         47252700
&ZOPD(&ZOPN)          SETC  '++ INPUT XPLISTLEN XL2'                    47255000
.*-------------------------------------------------------------------   47257300
.***AI.L04B XVERSION XL1                                                47259600
                      AIF   ('&XMFSCK' NE 'COMPLETE').ZIMFVX            47261900
&ZOPN                 SETA  &ZOPN+1                                     47264200
&ZOPL(&ZOPN)          SETC  ' '                                         47266500
&ZOPO(&ZOPN)          SETC  'MVI'                                       47268800
&ZOPV(&ZOPN)          SETC  '14(1),1'                                   47271100
&ZOPD(&ZOPN)          SETC  '++ INPUT XVERSION XL1'                     47273400
.ZIMFVX               ANOP  ,                                           47275700
.*-------------------------------------------------------------------   47278000
.***AI.L07 XREQUEST AL1                                                 47280300
&ZW                   SETC  ''                                          47282600
.*-------------------------------------------------------------------   47284900
.***AI.L15 XREQUEST "REGISTER" AL1                                      47287200
         AIF   ('&XREQUEST' NE 'REGISTER').ZI6A                         47289500
&ZW                   SETC  '1'                                         47291800
.ZI6A                 ANOP  ,                                           47294100
.*-------------------------------------------------------------------   47296400
.***AI.L15 XREQUEST "DEREGISTER" AL1                                    47298700
         AIF   ('&XREQUEST' NE 'DEREGISTER').ZI7A                       47301000
&ZW                   SETC  '2'                                         47303300
.ZI7A                 ANOP  ,                                           47305600
.*-------------------------------------------------------------------   47307900
.***AI.L15 XREQUEST "FUNCTIONBEGIN" AL1                                 47310200
         AIF   ('&XREQUEST' NE 'FUNCTIONBEGIN').ZI8A                    47312500
&ZW                   SETC  '3'                                         47314800
.ZI8A                 ANOP  ,                                           47317100
.*-------------------------------------------------------------------   47319400
.***AI.L15 XREQUEST "FUNCTIONDATA" AL1                                  47321700
         AIF   ('&XREQUEST' NE 'FUNCTIONDATA').ZI9A                     47324000
&ZW                   SETC  '4'                                         47326300
.ZI9A                 ANOP  ,                                           47328600
.*-------------------------------------------------------------------   47330900
.***AI.L15 XREQUEST "FUNCTIONEND" AL1                                   47333200
         AIF   ('&XREQUEST' NE 'FUNCTIONEND').ZI10A                     47335500
&ZW                   SETC  '5'                                         47337800
.ZI10A                ANOP  ,                                           47340100
.*-------------------------------------------------------------------   47342400
.***AI.L15 XREQUEST "STATUS" AL1                                        47344700
         AIF   ('&XREQUEST' NE 'STATUS').ZI11A                          47347000
&ZW                   SETC  '6'                                         47349300
.ZI11A                ANOP  ,                                           47351600
.*-------------------------------------------------------------------   47353900
.***AI.L17 XREQUEST AL1                                                 47356200
                      AIF   ('&ZW' NE '0').ZI11C                        47358500
                      AIF   ('&XMFSCK' EQ 'COMPLETE').ZI11B             47360800
.ZI11C                ANOP  ,                                           47363100
                      AIF   ('&ZW' EQ '').ZI11B                         47365400
.*                                                                      47367700
&ZOPN                 SETA  &ZOPN+1                                     47370000
&ZOPL(&ZOPN)          SETC  ' '                                         47372300
&ZOPO(&ZOPN)          SETC  'MVI'                                       47374600
&ZOPV(&ZOPN)          SETC  '15(1),&ZW'                                 47376900
&ZOPD(&ZOPN)          SETC  '++ &ZXREQUEST XREQUEST AL1'                47379200
.ZI11B                ANOP  ,                                           47381500
.*-------------------------------------------------------------------   47383800
.***AI.L25  XPRODOWNER CL16                                             47386100
                      AIF   ('&ZXPRODOWNER' EQ '').ZI12E  NOT USED      47388400
                      AIF   ('&ZXPRODOWNER' EQ 'OUTPUT').ZI12E          47390700
&ZCGPR                SETC  '&XPRODOWNER'                               47393000
.*                                                                      47395300
                      AIF   ('&XPRODOWNER'(1,1) NE '(').ZI12B           47397600
&ZCGPR   SETC  '0('.'&XPRODOWNER'(2,K'&XPRODOWNER-2).')'                47399900
.ZI12B                ANOP  ,                                           47402200
.*                                                                      47404500
&ZOPN                 SETA  &ZOPN+1                                     47406800
&ZOPL(&ZOPN)          SETC  ' '                                         47409100
&ZOPO(&ZOPN)          SETC  'MVC'                                       47411400
&ZOPV(&ZOPN)          SETC  '16(16,1),&ZCGPR'                           47413700
&ZOPD(&ZOPN)          SETC  '++ &ZXPRODOWNER XPRODOWNER CL16'           47416000
.*                                                                      47418300
.ZI12E                ANOP  ,                                           47420600
.*-------------------------------------------------------------------   47422900
.***AI.L25  XPRODNAME CL16                                              47425200
                      AIF   ('&ZXPRODNAME' EQ '').ZI13E  NOT USED       47427500
                      AIF   ('&ZXPRODNAME' EQ 'OUTPUT').ZI13E           47429800
&ZCGPR                SETC  '&XPRODNAME'                                47432100
.*                                                                      47434400
                      AIF   ('&XPRODNAME'(1,1) NE '(').ZI13B            47436700
&ZCGPR   SETC  '0('.'&XPRODNAME'(2,K'&XPRODNAME-2).')'                  47439000
.ZI13B                ANOP  ,                                           47441300
.*                                                                      47443600
&ZOPN                 SETA  &ZOPN+1                                     47445900
&ZOPL(&ZOPN)          SETC  ' '                                         47448200
&ZOPO(&ZOPN)          SETC  'MVC'                                       47450500
&ZOPV(&ZOPN)          SETC  '32(16,1),&ZCGPR'                           47452800
&ZOPD(&ZOPN)          SETC  '++ &ZXPRODNAME XPRODNAME CL16'             47455100
.*                                                                      47457400
.ZI13E                ANOP  ,                                           47459700
.*-------------------------------------------------------------------   47462000
.***AI.L25  XPRODVERS CL8                                               47464300
                      AIF   ('&ZXPRODVERS' EQ '').ZI14E  NOT USED       47466600
                      AIF   ('&ZXPRODVERS' EQ 'OUTPUT').ZI14E           47468900
&ZCGPR                SETC  '&XPRODVERS'                                47471200
.*                                                                      47473500
                      AIF   ('&XPRODVERS'(1,1) NE '(').ZI14B            47475800
&ZCGPR   SETC  '0('.'&XPRODVERS'(2,K'&XPRODVERS-2).')'                  47478100
                      AGO   .ZI14D                                      47480400
.ZI14B                ANOP  ,                                           47482700
.*                                                                      47485000
                      AIF   ('&PRODVERS(1)' EQ '').ZI14I  OMITTED       47487300
&ZC                   SETC  'NONE'                                      47489600
                      AIF   ('&XPRODVERS' NE '&ZC').ZI14C               47491900
.ZI14I                ANOP  ,                                           47494200
&ZCGPR                SETC  '=CL8''&XPRODVERS'''                        47496500
.ZI14C                ANOP  ,                                           47498800
.*                                                                      47501100
.ZI14D                ANOP  ,                                           47503400
.*                                                                      47505700
&ZOPN                 SETA  &ZOPN+1                                     47508000
&ZOPL(&ZOPN)          SETC  ' '                                         47510300
&ZOPO(&ZOPN)          SETC  'MVC'                                       47512600
&ZOPV(&ZOPN)          SETC  '48(8,1),&ZCGPR'                            47514900
&ZOPD(&ZOPN)          SETC  '++ &ZXPRODVERS XPRODVERS CL8'              47517200
.*                                                                      47519500
.ZI14E                ANOP  ,                                           47521800
.*-------------------------------------------------------------------   47524100
.***AI.L25  XPRODQUAL CL8                                               47526400
                      AIF   ('&ZXPRODQUAL' EQ '').ZI15E  NOT USED       47528700
                      AIF   ('&ZXPRODQUAL' EQ 'OUTPUT').ZI15E           47531000
&ZCGPR                SETC  '&XPRODQUAL'                                47533300
.*                                                                      47535600
                      AIF   ('&XPRODQUAL'(1,1) NE '(').ZI15B            47537900
&ZCGPR   SETC  '0('.'&XPRODQUAL'(2,K'&XPRODQUAL-2).')'                  47540200
                      AGO   .ZI15D                                      47542500
.ZI15B                ANOP  ,                                           47544800
.*                                                                      47547100
                      AIF   ('&PRODQUAL(1)' EQ '').ZI15I  OMITTED       47549400
&ZC                   SETC  'NONE'                                      47551700
                      AIF   ('&XPRODQUAL' NE '&ZC').ZI15C               47554000
.ZI15I                ANOP  ,                                           47556300
&ZCGPR                SETC  '=CL8''&XPRODQUAL'''                        47558600
.ZI15C                ANOP  ,                                           47560900
.*                                                                      47563200
.ZI15D                ANOP  ,                                           47565500
.*                                                                      47567800
&ZOPN                 SETA  &ZOPN+1                                     47570100
&ZOPL(&ZOPN)          SETC  ' '                                         47572400
&ZOPO(&ZOPN)          SETC  'MVC'                                       47574700
&ZOPV(&ZOPN)          SETC  '56(8,1),&ZCGPR'                            47577000
&ZOPD(&ZOPN)          SETC  '++ &ZXPRODQUAL XPRODQUAL CL8'              47579300
.*                                                                      47581600
.ZI15E                ANOP  ,                                           47583900
.*-------------------------------------------------------------------   47586200
.***AI.L25  XPRODID CL8                                                 47588500
                      AIF   ('&ZXPRODID' EQ '').ZI16E  NOT USED         47590800
                      AIF   ('&ZXPRODID' EQ 'OUTPUT').ZI16E             47593100
&ZCGPR                SETC  '&XPRODID'                                  47595400
.*                                                                      47597700
                      AIF   ('&XPRODID'(1,1) NE '(').ZI16B              47600000
&ZCGPR   SETC  '0('.'&XPRODID'(2,K'&XPRODID-2).')'                      47602300
                      AGO   .ZI16D                                      47604600
.ZI16B                ANOP  ,                                           47606900
.*                                                                      47609200
                      AIF   ('&PRODID(1)' EQ '').ZI16I  OMITTED         47611500
&ZC                   SETC  'NONE'                                      47613800
                      AIF   ('&XPRODID' NE '&ZC').ZI16C                 47616100
.ZI16I                ANOP  ,                                           47618400
&ZCGPR                SETC  '=CL8''&XPRODID'''                          47620700
.ZI16C                ANOP  ,                                           47623000
.*                                                                      47625300
.ZI16D                ANOP  ,                                           47627600
.*                                                                      47629900
&ZOPN                 SETA  &ZOPN+1                                     47632200
&ZOPL(&ZOPN)          SETC  ' '                                         47634500
&ZOPO(&ZOPN)          SETC  'MVC'                                       47636800
&ZOPV(&ZOPN)          SETC  '64(8,1),&ZCGPR'                            47639100
&ZOPD(&ZOPN)          SETC  '++ &ZXPRODID XPRODID CL8'                  47641400
.*                                                                      47643700
.ZI16E                ANOP  ,                                           47646000
.*-------------------------------------------------------------------   47648300
.***AI.L07 XDOMAIN AL1                                                  47650600
&ZW                   SETC  ''                                          47652900
.*-------------------------------------------------------------------   47655200
.***AI.L15 XDOMAIN "ADDRSP" AL1                                         47657500
         AIF   ('&XDOMAIN' NE 'ADDRSP').ZI18A                           47659800
&ZW                   SETC  '1'                                         47662100
.ZI18A                ANOP  ,                                           47664400
.*-------------------------------------------------------------------   47666700
.***AI.L15 XDOMAIN "TASK" AL1                                           47669000
         AIF   ('&XDOMAIN' NE 'TASK').ZI19A                             47671300
&ZW                   SETC  '2'                                         47673600
.ZI19A                ANOP  ,                                           47675900
.*-------------------------------------------------------------------   47678200
.***AI.L17 XDOMAIN AL1                                                  47680500
                      AIF   ('&ZW' NE '0').ZI19C                        47682800
                      AIF   ('&XMFSCK' EQ 'COMPLETE').ZI19B             47685100
.ZI19C                ANOP  ,                                           47687400
                      AIF   ('&ZW' EQ '').ZI19B                         47689700
.*                                                                      47692000
&ZOPN                 SETA  &ZOPN+1                                     47694300
&ZOPL(&ZOPN)          SETC  ' '                                         47696600
&ZOPO(&ZOPN)          SETC  'MVI'                                       47698900
&ZOPV(&ZOPN)          SETC  '72(1),&ZW'                                 47701200
&ZOPD(&ZOPN)          SETC  '++ &ZXDOMAIN XDOMAIN AL1'                  47703500
.ZI19B                ANOP  ,                                           47705800
.*-------------------------------------------------------------------   47708100
.***AI.L07 XSCOPE AL1                                                   47710400
&ZW                   SETC  ''                                          47712700
.*-------------------------------------------------------------------   47715000
.***AI.L15 XSCOPE "ALL" AL1                                             47717300
         AIF   ('&XSCOPE' NE 'ALL').ZI21A                               47719600
&ZW                   SETC  '1'                                         47721900
.ZI21A                ANOP  ,                                           47724200
.*-------------------------------------------------------------------   47726500
.***AI.L15 XSCOPE "FUNCTION" AL1                                        47728800
         AIF   ('&XSCOPE' NE 'FUNCTION').ZI22A                          47731100
&ZW                   SETC  '2'                                         47733400
.ZI22A                ANOP  ,                                           47735700
.*-------------------------------------------------------------------   47738000
.***AI.L17 XSCOPE AL1                                                   47740300
                      AIF   ('&ZW' NE '0').ZI22C                        47742600
                      AIF   ('&XMFSCK' EQ 'COMPLETE').ZI22B             47744900
.ZI22C                ANOP  ,                                           47747200
                      AIF   ('&ZW' EQ '').ZI22B                         47749500
.*                                                                      47751800
&ZOPN                 SETA  &ZOPN+1                                     47754100
&ZOPL(&ZOPN)          SETC  ' '                                         47756400
&ZOPO(&ZOPN)          SETC  'MVI'                                       47758700
&ZOPV(&ZOPN)          SETC  '73(1),&ZW'                                 47761000
&ZOPD(&ZOPN)          SETC  '++ &ZXSCOPE XSCOPE AL1'                    47763300
.ZI22B                ANOP  ,                                           47765600
.*-------------------------------------------------------------------   47767900
.***AI.L19 ADDR XPRTOKEN A                                              47770200
                      AIF   ('&ZXPRTOKEN' EQ '').ZI24H  NOT USED        47772500
&ZCLNG                SETC  '&XPRTOKEN'                                 47774800
&ZCGPR                SETC  '14'                                        47777100
         AIF   ('&XPRTOKEN'(1,1) EQ '(').ZI24F  IN GPR                  47779400
.*                                                                      47781700
&ZOPN                 SETA  &ZOPN+1                                     47784000
&ZOPL(&ZOPN)          SETC  ' '                                         47786300
&ZOPO(&ZOPN)          SETC  'LA'                                        47788600
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             47790900
&ZOPD(&ZOPN)          SETC  '++ &ZXPRTOKEN XPRTOKEN A'                  47793200
.*                                                                      47795500
                      AGO   .ZI24G                                      47797800
.*                                                                      47800100
.ZI24F                ANOP  ,                                           47802400
&ZCGPR   SETC  '&XPRTOKEN'(2,K'&XPRTOKEN-2)                             47804700
.*                                                                      47807000
.ZI24G                ANOP  ,                                           47809300
.*                                                                      47811600
&ZOPN                 SETA  &ZOPN+1                                     47813900
&ZOPL(&ZOPN)          SETC  ' '                                         47816200
&ZOPO(&ZOPN)          SETC  'ST'                                        47818500
&ZOPV(&ZOPN)          SETC  '&ZCGPR,76(,1)'                             47820800
&ZOPD(&ZOPN)          SETC  '++ &ZXPRTOKEN XPRTOKEN A'                  47823100
.*                                                                      47825400
.ZI24H                ANOP  ,                                           47827700
.*-------------------------------------------------------------------   47830000
.***AI.L19 ADDR XBEGTIME A                                              47832300
                      AIF   ('&ZXBEGTIME' EQ '').ZI25H  NOT USED        47834600
&ZCLNG                SETC  '&XBEGTIME'                                 47836900
&ZCGPR                SETC  '14'                                        47839200
         AIF   ('&XBEGTIME'(1,1) EQ '(').ZI25F  IN GPR                  47841500
.*                                                                      47843800
&ZOPN                 SETA  &ZOPN+1                                     47846100
&ZOPL(&ZOPN)          SETC  ' '                                         47848400
&ZOPO(&ZOPN)          SETC  'LA'                                        47850700
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             47853000
&ZOPD(&ZOPN)          SETC  '++ &ZXBEGTIME XBEGTIME A'                  47855300
.*                                                                      47857600
                      AGO   .ZI25G                                      47859900
.*                                                                      47862200
.ZI25F                ANOP  ,                                           47864500
&ZCGPR   SETC  '&XBEGTIME'(2,K'&XBEGTIME-2)                             47866800
.*                                                                      47869100
.ZI25G                ANOP  ,                                           47871400
.*                                                                      47873700
&ZOPN                 SETA  &ZOPN+1                                     47876000
&ZOPL(&ZOPN)          SETC  ' '                                         47878300
&ZOPO(&ZOPN)          SETC  'ST'                                        47880600
&ZOPV(&ZOPN)          SETC  '&ZCGPR,80(,1)'                             47882900
&ZOPD(&ZOPN)          SETC  '++ &ZXBEGTIME XBEGTIME A'                  47885200
.*                                                                      47887500
.ZI25H                ANOP  ,                                           47889800
.*-------------------------------------------------------------------   47892100
.***AI.L19 ADDR XDATA A                                                 47894400
                      AIF   ('&ZXDATA' EQ '').ZI26H  NOT USED           47896700
&ZCLNG                SETC  '&XDATA'                                    47899000
&ZCGPR                SETC  '14'                                        47901300
         AIF   ('&XDATA'(1,1) EQ '(').ZI26F  IN GPR                     47903600
.*                                                                      47905900
&ZOPN                 SETA  &ZOPN+1                                     47908200
&ZOPL(&ZOPN)          SETC  ' '                                         47910500
&ZOPO(&ZOPN)          SETC  'LA'                                        47912800
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             47915100
&ZOPD(&ZOPN)          SETC  '++ &ZXDATA XDATA A'                        47917400
.*                                                                      47919700
                      AGO   .ZI26G                                      47922000
.*                                                                      47924300
.ZI26F                ANOP  ,                                           47926600
&ZCGPR   SETC  '&XDATA'(2,K'&XDATA-2)                                   47928900
.*                                                                      47931200
.ZI26G                ANOP  ,                                           47933500
.*                                                                      47935800
&ZOPN                 SETA  &ZOPN+1                                     47938100
&ZOPL(&ZOPN)          SETC  ' '                                         47940400
&ZOPO(&ZOPN)          SETC  'ST'                                        47942700
&ZOPV(&ZOPN)          SETC  '&ZCGPR,84(,1)'                             47945000
&ZOPD(&ZOPN)          SETC  '++ &ZXDATA XDATA A'                        47947300
.*                                                                      47949600
.ZI26H                ANOP  ,                                           47951900
.*-------------------------------------------------------------------   47954200
.***AI.L07 XFORMAT AL1                                                  47956500
&ZW                   SETC  ''                                          47958800
.*-------------------------------------------------------------------   47961100
.***AI.L15 XFORMAT "CPUTIME" AL1                                        47963400
         AIF   ('&XFORMAT' NE 'CPUTIME').ZI28A                          47965700
&ZW                   SETC  '1'                                         47968000
.ZI28A                ANOP  ,                                           47970300
.*-------------------------------------------------------------------   47972600
.***AI.L15 XFORMAT "BINARY" AL1                                         47974900
         AIF   ('&XFORMAT' NE 'BINARY').ZI29A                           47977200
&ZW                   SETC  '2'                                         47979500
.ZI29A                ANOP  ,                                           47981800
.*-------------------------------------------------------------------   47984100
.***AI.L15 XFORMAT "FLOAT" AL1                                          47986400
         AIF   ('&XFORMAT' NE 'FLOAT').ZI30A                            47988700
&ZW                   SETC  '3'                                         47991000
.ZI30A                ANOP  ,                                           47993300
.*-------------------------------------------------------------------   47995600
.***AI.L17 XFORMAT AL1                                                  47997900
                      AIF   ('&ZW' NE '0').ZI30C                        48000200
                      AIF   ('&XMFSCK' EQ 'COMPLETE').ZI30B             48002500
.ZI30C                ANOP  ,                                           48004800
                      AIF   ('&ZW' EQ '').ZI30B                         48007100
.*                                                                      48009400
&ZOPN                 SETA  &ZOPN+1                                     48011700
&ZOPL(&ZOPN)          SETC  ' '                                         48014000
&ZOPO(&ZOPN)          SETC  'MVI'                                       48016300
&ZOPV(&ZOPN)          SETC  '88(1),&ZW'                                 48018600
&ZOPD(&ZOPN)          SETC  '++ &ZXFORMAT XFORMAT AL1'                  48020900
.ZI30B                ANOP  ,                                           48023200
.*-------------------------------------------------------------------   48025500
.***AI.L19 ADDR XCURRENTDATA A                                          48027800
                      AIF   ('&ZXCURRENTDATA' EQ '').ZI32H  NOT USED    48030100
&ZCLNG                SETC  '&XCURRENTDATA'                             48032400
&ZCGPR                SETC  '14'                                        48034700
         AIF   ('&XCURRENTDATA'(1,1) EQ '(').ZI32F  IN GPR              48037000
.*                                                                      48039300
&ZOPN                 SETA  &ZOPN+1                                     48041600
&ZOPL(&ZOPN)          SETC  ' '                                         48043900
&ZOPO(&ZOPN)          SETC  'LA'                                        48046200
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             48048500
&ZOPD(&ZOPN)          SETC  '++ &ZXCURRENTDATA XCURRENTDATA A'          48050800
.*                                                                      48053100
                      AGO   .ZI32G                                      48055400
.*                                                                      48057700
.ZI32F                ANOP  ,                                           48060000
&ZCGPR   SETC  '&XCURRENTDATA'(2,K'&XCURRENTDATA-2)                     48062300
.*                                                                      48064600
.ZI32G                ANOP  ,                                           48066900
.*                                                                      48069200
&ZOPN                 SETA  &ZOPN+1                                     48071500
&ZOPL(&ZOPN)          SETC  ' '                                         48073800
&ZOPO(&ZOPN)          SETC  'ST'                                        48076100
&ZOPV(&ZOPN)          SETC  '&ZCGPR,92(,1)'                             48078400
&ZOPD(&ZOPN)          SETC  '++ &ZXCURRENTDATA XCURRENTDATA A'          48080700
.*                                                                      48083000
.ZI32H                ANOP  ,                                           48085300
.*-------------------------------------------------------------------   48087600
.***AI.L19 ADDR XENDDATA A                                              48089900
                      AIF   ('&ZXENDDATA' EQ '').ZI33H  NOT USED        48092200
&ZCLNG                SETC  '&XENDDATA'                                 48094500
&ZCGPR                SETC  '14'                                        48096800
         AIF   ('&XENDDATA'(1,1) EQ '(').ZI33F  IN GPR                  48099100
.*                                                                      48101400
&ZOPN                 SETA  &ZOPN+1                                     48103700
&ZOPL(&ZOPN)          SETC  ' '                                         48106000
&ZOPO(&ZOPN)          SETC  'LA'                                        48108300
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             48110600
&ZOPD(&ZOPN)          SETC  '++ &ZXENDDATA XENDDATA A'                  48112900
.*                                                                      48115200
                      AGO   .ZI33G                                      48117500
.*                                                                      48119800
.ZI33F                ANOP  ,                                           48122100
&ZCGPR   SETC  '&XENDDATA'(2,K'&XENDDATA-2)                             48124400
.*                                                                      48126700
.ZI33G                ANOP  ,                                           48129000
.*                                                                      48131300
&ZOPN                 SETA  &ZOPN+1                                     48133600
&ZOPL(&ZOPN)          SETC  ' '                                         48135900
&ZOPO(&ZOPN)          SETC  'ST'                                        48138200
&ZOPV(&ZOPN)          SETC  '&ZCGPR,96(,1)'                             48140500
&ZOPD(&ZOPN)          SETC  '++ &ZXENDDATA XENDDATA A'                  48142800
.*                                                                      48145100
.ZI33H                ANOP  ,                                           48147400
.*-------------------------------------------------------------------   48149700
.***AI.L19 ADDR XENDTIME A                                              48152000
                      AIF   ('&ZXENDTIME' EQ '').ZI34H  NOT USED        48154300
&ZCLNG                SETC  '&XENDTIME'                                 48156600
&ZCGPR                SETC  '14'                                        48158900
         AIF   ('&XENDTIME'(1,1) EQ '(').ZI34F  IN GPR                  48161200
.*                                                                      48163500
&ZOPN                 SETA  &ZOPN+1                                     48165800
&ZOPL(&ZOPN)          SETC  ' '                                         48168100
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    48170400
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             48172700
&ZOPD(&ZOPN)          SETC  '++ &ZXENDTIME XENDTIME A'                  48175000
.*                                                                      48177300
                      AGO   .ZI34G                                      48179600
.*                                                                      48181900
.ZI34F                ANOP  ,                                           48184200
&ZCGPR   SETC  '&XENDTIME'(2,K'&XENDTIME-2)                             48186500
.*                                                                      48188800
.ZI34G                ANOP  ,                                           48191100
.*                                                                      48193400
&ZOPN                 SETA  &ZOPN+1                                     48195700
&ZOPL(&ZOPN)          SETC  ' '                                         48198000
&ZOPO(&ZOPN)          SETC  'ST'                                        48200300
&ZOPV(&ZOPN)          SETC  '&ZCGPR,100(,1)'                            48202600
&ZOPD(&ZOPN)          SETC  '++ &ZXENDTIME XENDTIME A'                  48204900
.*                                                                      48207200
.ZI34H                ANOP  ,                                           48209500
.*-------------------------------------------------------------------   48211800
&ZOPN1                SETA &ZOPN                                        48214100
.*-------------------------------------------------------------------   48216400
.***AI.C00 MF=M CHECK TO BYPASS INVOCATION                              48218700
                      AIF   ('&XMF' EQ 'M').ZMFLX  DONE IF MF=M         48221000
.*******************************************************************    48223300
.***  PROCESS IFAUSAGE OUTPUT PARAMETERS                                48225600
.*******************************************************************    48227900
                      ACTR  10000                                       48230200
.*******************************************************************    48232500
.***AO.X02  RETURN CODE PROCESSING                                      48234800
.*******************************************************************    48237100
                      AIF   (N'&RETCODE LE 0).ZMRETX                    48239400
                      AIF   ('&XRETCODE'(1,1) EQ '(').ZMRET2            48241700
                      AIF   ('&XRETCODE' EQ 'GPR15').ZMRETX             48244000
                      AIF   ('&XRETCODE' EQ 'REG15').ZMRETX             48246300
                      AIF   ('&XRETCODE' EQ 'R15').ZMRETX               48248600
                      AIF   ('&XRETCODE' EQ '15').ZMRETX                48250900
&ZOPN                 SETA  &ZOPN+1                                     48253200
&ZOPL(&ZOPN)          SETC  ' '                                         48255500
&ZOPO(&ZOPN)          SETC  'ST'                                        48257800
&ZOPV(&ZOPN)          SETC  '15,&XRETCODE'                              48260100
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        48262400
                      AGO   .ZMRETX                                     48264700
.*                                                                      48267000
.ZMRET2               ANOP  ,                                           48269300
&ZCGPR                SETC  '&XRETCODE'(2,K'&XRETCODE-2)                48271600
                      AIF   ('&ZCGPR' EQ 'GPR15').ZMRETX                48273900
                      AIF   ('&ZCGPR' EQ 'REG15').ZMRETX                48276200
                      AIF   ('&ZCGPR' EQ 'R15').ZMRETX                  48278500
                      AIF   ('&ZCGPR' EQ '15').ZMRETX                   48280800
&ZOPN                 SETA  &ZOPN+1                                     48283100
&ZOPL(&ZOPN)          SETC  ' '                                         48285400
&ZOPO(&ZOPN)          SETC  'LR'                                        48287700
&ZOPV(&ZOPN)          SETC  '&ZCGPR,15'                                 48290000
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        48292300
.ZMRETX               ANOP  ,                                           48294600
.*******************************************************************    48296900
.***AO.X04  LABEL FOR MF=L PROCESSING                                   48299200
.*******************************************************************    48301500
.ZMFLX                ANOP  ,              MF=L PROCESSING              48303800
.*******************************************************************    48306100
.***AO.X05  FORMAT GENERATED INSTRUCTIONS                               48308400
.*******************************************************************    48310700
                      ACTR  10000                                       48313000
.*                                                                      48315300
                      LCLA  &ZLC           COLUMN POSITION              48317600
                      LCLA  &ZOPX          LIST TABLE INDEX             48319900
                      LCLC  &ZLL           LABEL                        48322200
                      LCLC  &ZLOP          OPERATION                    48324500
                      LCLC  &ZLV           VALUE                        48326800
                      LCLC  &ZLD           DESCRIPTION                  48329100
.*                                                                      48331400
&ZOPX                 SETA  1                                           48333700
.ZL2                  AIF   (&ZOPX GT &ZOPN1).ZLX  B IF DONE            48336000
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              48338300
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              48340600
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              48342900
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              48345200
                      AIF   (K'&ZLD LE 0).ZL5                           48347500
&ZLC                  SETA  35             COMMENT COLUMN               48349800
                      AIF   ('&ZLD'(1,1) NE '*').ZL3                    48352100
&ZLC                  SETA  33             COMMMENT COLUMN              48354400
.ZL3                  AIF   (K'&ZLV GE &ZLC-16-1).ZL4                   48356700
&ZLV                  SETC  '&ZLV'.' '                                  48359000
                      AGO   .ZL3                                        48361300
.*                                                                      48363600
.ZL4                  ANOP  ,                                           48365900
&ZLV                  SETC  '&ZLV'.' '                                  48368200
.ZL5                  ANOP  ,                                           48370500
&ZLV                  SETC  '&ZLV'.'&ZLD'                               48372800
.*                                                                      48375100
&ZLL     &ZLOP &ZLV                                                     48377400
.*                                                                      48379700
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               48382000
                      AGO   .ZL2           CONTINUE LOOPING             48384300
.*                                                                      48386600
.ZLX                  ANOP  ,                                           48388900
                      AIF   ('&XMF' EQ 'L').ZLINKX  MF=L                48391200
                      AIF   ('&XMF' EQ 'M').ZLINKX  MF=M                48393500
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  48395800
.* Insert ASM Linkage Code Here........                                 48400000
*                                                                       48450000
&A       SETA  &SYSNDX               - Get Index - Label Suffix    @01A 48500000
         L     15,16                 - Get CVT Pointer             @01A 48550000
         L     15,196(,15)           - Get SMCA Pointer            @01A 48600000
         LTR   15,15                 - SMCA Pointer 0 ??           @01A 48650000
         BNM   SMF1&A                - Yes - Signal Error          @01A 48700000
         TM    0(15),X'04'           - Data Collection Active ??   @01A 48750000
         BNO   SMF1&A                - No - Signal Error           @01A 48800000
         AIF   ('&XLINKAGE' NE 'BRANCH').SVCCALL   - Linkage BR?   @01A 48850000
.BRCALL  ANOP                        - Yes - Generate BALR         @01A 48900000
         L     15,404(15)            - Get Routine Address         @01A 48950000
         BALR  14,15                 - Branch to Routine           @01A 49000000
         AGO   .CONT                 - Continue with Processing    @01A 49050000
.SVCCALL ANOP                        - Generate SVC Linkage        @01A 49100000
         LA    15,25                 - Set Extended SVC Router     @01A 49150000
         SVC   109                   - Issue SVC                   @01A 49200000
.CONT    ANOP                        - Continue After macro call   @01A 49250000
         B     SMF2&A                - Return to invoker           @01A 49300000
SMF1&A   EQU   *                     - Macro-detected Error        @01A 49350000
         LA    15,16                 - SMF or Usage Not Active     @01A 49400000
SMF2&A   EQU   *                     - Service Return Point        @01A 49450000
*                                                                       49500000
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  49500100
.ZLINKX               ANOP  ,                                           49500200
.*******************************************************************    49500300
.***AP.X01  FORMAT GENERATED CODE                                       49500400
.ZL21                 AIF   (&ZOPX GT &ZOPN).ZLX1  B IF DONE            49500500
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              49500600
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              49500700
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              49500800
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              49500900
                      AIF   (K'&ZLD LE 0).ZL51                          49501000
&ZLC                  SETA  35             COMMENT COLUMN               49501100
                      AIF   ('&ZLD'(1,1) NE '*').ZL31                   49501200
&ZLC                  SETA  33             COMMENT COLUMN               49501300
.ZL31                 AIF   (K'&ZLV GE &ZLC-16-1).ZL41                  49501400
&ZLV                  SETC  '&ZLV'.' '                                  49501500
                      AGO   .ZL31                                       49501600
.*                                                                      49501700
.ZL41                 ANOP  ,                                           49501800
&ZLV                  SETC  '&ZLV'.' '                                  49501900
.ZL51                 ANOP  ,                                           49502000
&ZLV                  SETC  '&ZLV'.'&ZLD'                               49502100
.*                                                                      49502200
&ZLL     &ZLOP &ZLV                                                     49502300
.*                                                                      49502400
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               49502500
                      AGO   .ZL21          CONTINUE LOOPING             49502600
.*                                                                      49502700
.ZLX1                 ANOP  ,                                           49502800
.*******************************************************************    49502900
.***AP.X02  END OF IFAUSAGE MACRO                                       49503000
&ZIFAUSAGE            SETC  'YES'          SET IFAUSAGE USED            49503100
         POP   PRINT                                                    49503200
*                                            IFAUSAGE-1                 49503300
         SPACE 1                                                        49503400
.ZLX2                 ANOP  ,                                           49503500
         MEND                                                           49503600
**********************************************************************/ 49503700
*/**** START OF SPECIFICATIONS **************************************** 49503800
*                                                                     * 49503900
*                                                                     * 49504000
*01* MACRO NAME:  IFAUSAGE                              -93/11/02-<1> * 49504100
*                                                                     * 49504200
*                                                                     * 49504300
*01* DESCRIPTIVE NAME:  SMF Usage Data Collection Service             * 49504400
*                                                                     * 49504500
*01* PROPRIETARY STATEMENT:                                           * 49504600
*                                                                     * 49504700
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 49504800
*     THIS MACRO IS "RESTRICTED MATERIALS OF IBM"                     * 49504900
*     5685-001 (C) COPYRIGHT IBM CORP. 1989                           * 49505000
*     SEE COPYRIGHT INSTRUCTIONS                                      * 49505100
*                                                                     * 49505200
* STATUS= JBB3313                                                     * 49505300
*                                                                     * 49505400
*                                                                     * 49505500
*                                                                     * 49505600
*01* FUNCTION:                                                        * 49505700
*       See the IFAUSAGE macro prologue for details.                  * 49505800
*                                                                     * 49505900
*01* INPUT:                                                           * 49506000
*                                                                     * 49506100
*            ?IFAUSAGE    REQUEST(REGISTER)                          * 49506200
*                        |     PRODOWNER(xprodowner)                  * 49506300
*                        |     PRODNAME(xprodname)                    * 49506400
*                        |    [PRODVERS(xprodvers|None)]            * 49506500
*                        |    [PRODQUAL(xprodqual|None)]            * 49506600
*                        |    [PRODID(xprodid|None)]                * 49506700
*                        |   [DOMAIN(ADDRSP)]                        * 49506800
*                        |   [DOMAIN(TASK)                           * 49506900
*                        |        [SCOPE(ALL|FUNCTION)]]            * 49507000
*                        |    [PRTOKEN(xprtoken)]                     * 49507100
*                        |    [LINKAGE(SVC|BRANCH)]                 * 49507200
*                         REQUEST(DEREGISTER)                        * 49507300
*                        |    PRODOWNER(xprodowner)                  * 49507400
*                        |   |     PRODNAME(xprodname)                * 49507500
*                        |   |    [PRODVERS(xprodvers|None)]        * 49507600
*                        |   |    [PRODQUAL(xprodqual|None)]        * 49507700
*                        |   |    [PRODID(xprodid|None)]            * 49507800
*                        |    PRTOKEN(xprtoken)                      * 49507900
*                        |    [ENDTIME(xendtime)]                     * 49508000
*                        |    [ENDDATA(xenddata)]                     * 49508100
*                        |    [LINKAGE(SVC|BRANCH)]                 * 49508200
*                         REQUEST(FUNCTIONBEGIN)                     * 49508300
*                        |    PRODOWNER(xprodowner)                  * 49508400
*                        |   |     PRODNAME(xprodname)                * 49508500
*                        |   |    [PRODVERS(xprodvers|None)]        * 49508600
*                        |   |    [PRODQUAL(xprodqual|None)]        * 49508700
*                        |   |    [PRODID(xprodid|None)]            * 49508800
*                        |    PRTOKEN(xprtoken)                      * 49508900
*                        |    [BEGTIME(xbegtime)]                     * 49509000
*                        |    [LINKAGE(SVC|BRANCH)]                 * 49509100
*                         REQUEST(FUNCTIONDATA)                      * 49509200
*                        |    PRODOWNER(xprodowner)                  * 49509300
*                        |   |     PRODNAME(xprodname)                * 49509400
*                        |   |    [PRODVERS(xprodvers|None)]        * 49509500
*                        |   |    [PRODQUAL(xprodqual|None)]        * 49509600
*                        |   |    [PRODID(xprodid|None)]            * 49509700
*                        |    PRTOKEN(xprtoken)                      * 49509800
*                        |     DATA(xdata)                            * 49509900
*                        |    [FORMAT(CPUTIME|BINARY|FLOAT)]        * 49510000
*                        |    [CURRENTDATA(xcurrentdata)]             * 49510100
*                        |    [LINKAGE(SVC|BRANCH)]                 * 49510200
*                         REQUEST(FUNCTIONEND)                       * 49510300
*                        |    PRODOWNER(xprodowner)                  * 49510400
*                        |   |     PRODNAME(xprodname)                * 49510500
*                        |   |    [PRODVERS(xprodvers|None)]        * 49510600
*                        |   |    [PRODQUAL(xprodqual|None)]        * 49510700
*                        |   |    [PRODID(xprodid|None)]            * 49510800
*                        |    PRTOKEN(xprtoken)                      * 49510900
*                        |    [ENDTIME(xendtime)]                     * 49511000
*                        |    [ENDDATA(xenddata)]                     * 49511100
*                        |    [LINKAGE(SVC|BRANCH)]                 * 49511200
*                         REQUEST(STATUS)                            * 49511300
*                             [LINKAGE(SVC|BRANCH)]                 * 49511400
*                         [RETCODE(xretcode)]                         * 49511500
*                        [MF(S)]                                     * 49511600
*                        [MF(L,xmfctrl,xmfattr|BDY(DWORD))]        * 49511700
*                        [MF(M,xmfctrl,COMPLETE|NOCHECK)]          * 49511800
*                        [MF(E,xmfctrl,COMPLETE|NOCHECK)]          * 49511900
*                                                                     * 49512000
****** END OF SPECIFICATIONS *****************************************/ 49512100
*/*PB.ECHO01 MACRO INVOCATION ECHO-----------------------------------*/ 49512200
*  ANS('@SPACE;') NORESCAN COL(MACLMAR);                                49512300
*  ANS('/* ? IFAUSAGE '||MACLIST||' ')                                  49512400
*      NORESCAN COL(MACLMAR+5);    /* START ECHO */                     49512500
*                                                                       49512600
*  DCL ZELO  FIXED;                                                     49512700
*  DCL ZECOL FIXED;                                                     49512800
*                                                                       49512900
*  ZELO=1;     /* STARTING COLUMN */                                    49513000
*  DO WHILE ZELO<=LENGTH(MACKEYS);  /* PARENTHSIS SCAN */               49513100
*    ZECOL=INDEX(MACKEYS(ZELO:LENGTH(MACKEYS)),')');                    49513200
*    IF ZECOL>0                                                         49513300
*      THEN                                                             49513400
*        DO;   /* PARENTHESIS FOUND */                                  49513500
*          ANS(MACKEYS(ZELO:ZELO+ZECOL-1)||' ')                         49513600
*             NORESCAN COL(MACLMAR+5);                                  49513700
*          ZELO=ZELO+ZECOL;        /* NEXT PORTION */                   49513800
*        END;                                                           49513900
*      ELSE                                                             49514000
*        DO;   /* REMAINING KEYS */                                     49514100
*          ANS(MACKEYS(ZELO:LENGTH(MACKEYS)))                           49514200
*             NORESCAN COL(MACLMAR+5);                                  49514300
*          ZELO=LENGTH(MACKEYS)+1;                                      49514400
*        END;                                                           49514500
*  END;                                                                 49514600
*  ANS(' -93/11/02-1- */')                                              49514700
*      NORESCAN COL(MACLMAR+5);    /* END ECHO */                       49514800
*/********************************************************************/ 49514900
*/*PV.DCL01 MACRO DECLARES AND CODE GENERATION CONTROLS              */ 49515000
*/********************************************************************/ 49515100
*  DCL ZPRINT  EXTERNAL; DEACT ZPRINT; /* YES=PRINT, NO=NO PRINT     */ 49515200
*  DCL ZTEST   EXTERNAL; DEACT ZTEST;  /* YES=TEST, NO=NO TEST       */ 49515300
*  DCL ZSYSTEM EXTERNAL; DEACT ZSYSTEM;/* PCCODE10, MVS, SAK, VM     */ 49515400
*                                                                       49515500
*  DCL   ZIFAUSAGE CHAR EXTERNAL; /* YES=USED AT LEAST ONCE          */ 49515600
*  DEACT ZIFAUSAGE;                                                     49515700
*                                                                       49515800
*  DCL ZMACRET FIXED; DEACT ZMACRET;                                    49515900
*  ZMACRET=0;                   /* MACRO COMPILE RETURN CODE         */ 49516000
*                                                                       49516100
*  DCL ZMS CHAR;   DEACT ZMS;   /* ERROR MESSAGE                     */ 49516200
*  DCL ZCVAL CHAR; DEACT ZCVAL; /* ERROR MESSAGE WORK AREA           */ 49516300
*                                                                       49516400
*  DCL ZI FIXED;  DEACT ZI;     /* INDEX FOR VARIABLE NUM OF PARMS   */ 49516500
*  DCL ZJ FIXED;  DEACT ZJ;     /* INDEX FOR VARIABLE NUM OF PARMS   */ 49516600
*  DCL ZK FIXED;  DEACT ZK;     /* INDEX FOR RANGE COLON (:)         */ 49516700
*  DCL ZL FIXED;  DEACT ZL;     /* INDEX FOR RANGE VALUE CHECKING    */ 49516800
*  DCL ZLO FIXED; DEACT ZLO;    /* LOW RANGE VALUE                   */ 49516900
*  DCL ZHI FIXED; DEACT ZHI;    /* HIGH RANGE VALUE                  */ 49517000
*  DCL ZW CHAR;   DEACT ZW;     /* WORK AREA FOR RANGE VALUE SUBLIST */ 49517100
*  DCL ZN FIXED;  DEACT ZN;     /* NUMERIC WORK VARIABLE             */ 49517200
*  DCL ZC CHAR;   DEACT ZC;     /* CHARACTER WORK VARIABLE           */ 49517300
*  DCL ZMAXINVOCLEN FIXED; DEACT ZMAXINVOCLEN;  /* INVOCATION LENGTH */ 49517400
*  DCL ZPLLEN FIXED; DEACT ZPLLEN;        /* PARAMETER LIST LENGTH   */ 49517500
*                                                                       49517600
*  DCL ZPRMMAX FIXED;           /* MAXIMUM PARM LIST SIZE            */ 49517700
*  DCL ZPRMNUM FIXED;           /* PARAMETER ARRAY INDEX             */ 49517800
*  DCL ZPRM(100);               /* PARAMETER ENTRY                   */ 49517900
*  DCL EHAMAXLEN FIXED EXTERNAL;   /* MAX ILIST SIZE FOR PARM LISTS  */ 49518000
*  DCL EHAREGS CHARACTER EXTERNAL; /* REG DCLS                       */ 49518100
*  DCL EHALIST CHARACTER EXTERNAL; /* STANDARD PARM LIST GENERATION  */ 49518200
*/*******************************************************************/  49518300
*/*PV.XVAR01 DECLARE ALL MACRO PARAMETER VARIABLES                  */  49518400
*/*******************************************************************/  49518500
*  DCL XREQUEST;  DEACT XREQUEST;  /***PV.XVAR02 INPUT VALUE */         49518600
*  DCL ZXREQUEST; DEACT ZXREQUEST;  /***INPUT/OUTPUT CONTROL */         49518700
*  DCL   XPRODOWNER;               /***PV.XVAR03 INPUT NAME */          49518800
*  DEACT XPRODOWNER;               /***PV.XVAR03 INPUT NAME */          49518900
*  DCL   ZXPRODOWNER;              /***INPUT/OUTPUT CONTROL */          49519000
*  DEACT ZXPRODOWNER;              /***INPUT/OUTPUT CONTROL */          49519100
*  DCL XPRODNAME;  DEACT XPRODNAME;  /***PV.XVAR02 INPUT NAME */        49519200
*  DCL ZXPRODNAME; DEACT ZXPRODNAME;  /***INPUT/OUTPUT CONTROL */       49519300
*  DCL XPRODVERS;  DEACT XPRODVERS;  /***PV.XVAR02 INPUT NAME */        49519400
*  DCL ZXPRODVERS; DEACT ZXPRODVERS;  /***INPUT/OUTPUT CONTROL */       49519500
*  DCL XPRODQUAL;  DEACT XPRODQUAL;  /***PV.XVAR02 INPUT NAME */        49519600
*  DCL ZXPRODQUAL; DEACT ZXPRODQUAL;  /***INPUT/OUTPUT CONTROL */       49519700
*  DCL XPRODID;  DEACT XPRODID;    /***PV.XVAR02 INPUT NAME */          49519800
*  DCL ZXPRODID; DEACT ZXPRODID;   /***INPUT/OUTPUT CONTROL */          49519900
*  DCL XDOMAIN;  DEACT XDOMAIN;    /***PV.XVAR02 INPUT VALUE */         49520000
*  DCL ZXDOMAIN; DEACT ZXDOMAIN;   /***INPUT/OUTPUT CONTROL */          49520100
*  DCL XSCOPE;  DEACT XSCOPE;      /***PV.XVAR02 INPUT VALUE */         49520200
*  DCL ZXSCOPE; DEACT ZXSCOPE;     /***INPUT/OUTPUT CONTROL */          49520300
*  DCL XPRTOKEN;  DEACT XPRTOKEN;  /***PV.XVAR02 OUTPUT NAME */         49520400
*  DCL ZXPRTOKEN; DEACT ZXPRTOKEN;  /***INPUT/OUTPUT CONTROL */         49520500
*  DCL XLINKAGE;  DEACT XLINKAGE;  /***PV.XVAR02 INPUT VALUE */         49520600
*  DCL ZXLINKAGE; DEACT ZXLINKAGE;  /***INPUT/OUTPUT CONTROL */         49520700
*  DCL   XDEREGPRODNAME;           /***PV.XVAR03 INPUT NAME */          49520800
*  DEACT XDEREGPRODNAME;           /***PV.XVAR03 INPUT NAME */          49520900
*  DCL   ZXDEREGPRODNAME;          /***INPUT/OUTPUT CONTROL */          49521000
*  DEACT ZXDEREGPRODNAME;          /***INPUT/OUTPUT CONTROL */          49521100
*  DCL XENDTIME;  DEACT XENDTIME;  /***PV.XVAR02 OUTPUT NAME */         49521200
*  DCL ZXENDTIME; DEACT ZXENDTIME;  /***INPUT/OUTPUT CONTROL */         49521300
*  DCL XENDDATA;  DEACT XENDDATA;  /***PV.XVAR02 OUTPUT NAME */         49521400
*  DCL ZXENDDATA; DEACT ZXENDDATA;  /***INPUT/OUTPUT CONTROL */         49521500
*  DCL   XBEGINPRODNAME;           /***PV.XVAR03 INPUT NAME */          49521600
*  DEACT XBEGINPRODNAME;           /***PV.XVAR03 INPUT NAME */          49521700
*  DCL   ZXBEGINPRODNAME;          /***INPUT/OUTPUT CONTROL */          49521800
*  DEACT ZXBEGINPRODNAME;          /***INPUT/OUTPUT CONTROL */          49521900
*  DCL XBEGTIME;  DEACT XBEGTIME;  /***PV.XVAR02 OUTPUT NAME */         49522000
*  DCL ZXBEGTIME; DEACT ZXBEGTIME;  /***INPUT/OUTPUT CONTROL */         49522100
*  DCL   XDATAPRODNAME;            /***PV.XVAR03 INPUT NAME */          49522200
*  DEACT XDATAPRODNAME;            /***PV.XVAR03 INPUT NAME */          49522300
*  DCL   ZXDATAPRODNAME;           /***INPUT/OUTPUT CONTROL */          49522400
*  DEACT ZXDATAPRODNAME;           /***INPUT/OUTPUT CONTROL */          49522500
*  DCL XDATA;  DEACT XDATA;        /***PV.XVAR02 INPUT NAME */          49522600
*  DCL ZXDATA; DEACT ZXDATA;       /***INPUT/OUTPUT CONTROL */          49522700
*  DCL XFORMAT;  DEACT XFORMAT;    /***PV.XVAR02 INPUT VALUE */         49522800
*  DCL ZXFORMAT; DEACT ZXFORMAT;   /***INPUT/OUTPUT CONTROL */          49522900
*  DCL   XCURRENTDATA;             /***PV.XVAR03 OUTPUT NAME */         49523000
*  DEACT XCURRENTDATA;             /***PV.XVAR03 OUTPUT NAME */         49523100
*  DCL   ZXCURRENTDATA;            /***INPUT/OUTPUT CONTROL */          49523200
*  DEACT ZXCURRENTDATA;            /***INPUT/OUTPUT CONTROL */          49523300
*  DCL   XENDPRODNAME;             /***PV.XVAR03 INPUT NAME */          49523400
*  DEACT XENDPRODNAME;             /***PV.XVAR03 INPUT NAME */          49523500
*  DCL   ZXENDPRODNAME;            /***INPUT/OUTPUT CONTROL */          49523600
*  DEACT ZXENDPRODNAME;            /***INPUT/OUTPUT CONTROL */          49523700
*  DCL XRETCODE;  DEACT XRETCODE;  /***PV.XVAR02 OUTPUT NAME */         49523800
*  DCL ZXRETCODE; DEACT ZXRETCODE;  /***INPUT/OUTPUT CONTROL */         49523900
*  DCL XMF;  DEACT XMF;            /***PV.XVAR02 INPUT VALUE */         49524000
*  DCL ZXMF; DEACT ZXMF;           /***INPUT/OUTPUT CONTROL */          49524100
*  DCL XMFCTRL;  DEACT XMFCTRL;    /***PV.XVAR02 INPUT NAME */          49524200
*  DCL ZXMFCTRL; DEACT ZXMFCTRL;   /***INPUT/OUTPUT CONTROL */          49524300
*  DCL XMFATTR;  DEACT XMFATTR;    /***PV.XVAR02 INPUT VALUE */         49524400
*  DCL ZXMFATTR; DEACT ZXMFATTR;   /***INPUT/OUTPUT CONTROL */          49524500
*  DCL XMFSCK;  DEACT XMFSCK;      /***PV.XVAR02 INPUT VALUE */         49524600
*  DCL ZXMFSCK; DEACT ZXMFSCK;     /***INPUT/OUTPUT CONTROL */          49524700
*/********************************************************************/ 49524800
*/***PG.MF01  PROCESS MF MACRO FORMS                                 */ 49524900
*/********************************************************************/ 49525000
*/*PG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 49525100
*  XMF='';                                                              49525200
*/*PG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 49525300
*  IF MF(1)='S'                              /* CHECK FOR KEYWORD */    49525400
*    THEN                                                               49525500
*      DO;                                                              49525600
*        XMFSCK='COMPLETE';                                             49525700
*        XMF='S';                            /* SET XVARIABLE */        49525800
*        IF NUMBER(MF)>1                     /* CHECK POSITIONALS */    49525900
*          THEN                                                         49526000
*            DO;                                                        49526100
*              ZMS=' 8, "MF'||               /**KPOSP* MSG*/            49526200
*                  MF||                                                 49526300
*                  '" "MF"'||                                           49526400
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        49526500
*              ANS MSG('?IFAUSAGE ---> '||ZMS);                         49526600
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          49526700
*              ZMACRET=8;                    /* MACRO ERROR */          49526800
*            END;                                                       49526900
*/*PG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 49527000
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KYWRDCTL DO GROUP */     49527100
*/*PG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 49527200
*  IF MF(1)='L'                              /* CHECK FOR KEYWORD */    49527300
*    THEN                                                               49527400
*      DO;                                                              49527500
*        XMF='L';                            /* SET XVARIABLE */        49527600
*        IF NUMBER(MF)>3                     /* CHECK POSITIONALS */    49527700
*          THEN                                                         49527800
*            DO;                                                        49527900
*              ZMS=' 8, "MF'||               /**KPOSP* MSG*/            49528000
*                  MF||                                                 49528100
*                  '" "MF"'||                                           49528200
*                  ' CAN HAVE ONLY 3 ARGUMENTS.';                       49528300
*              ANS MSG('?IFAUSAGE ---> '||ZMS);                         49528400
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          49528500
*              ZMACRET=8;                    /* MACRO ERROR */          49528600
*            END;                                                       49528700
*/*PG.KKCTL10 -MF(L) SPECIAL CHECK-----------------------------------*/ 49528800
*        ZMAXINVOCLEN = LENGTH(MF) + 2;                                 49528900
*        IF LENGTH(MACKEYS) > ZMAXINVOCLEN |                            49529000
*           MACLIST ^= ''                    /* CHECK FOR OTHER PARMS*/ 49529100
*          THEN                                                         49529200
*            DO;                                                        49529300
*              ZMS=' 8, THE "L" FORM OF "MF" CANNOT'|| /**MFLP* MSG*/   49529400
*                  ' HAVE ANY OTHER KEYWORDS OR'||                      49529500
*                  ' POSITIONAL PARAMETERS SPECIFIED'||                 49529600
*                  ' ON THE INVOCATION.';                               49529700
*              ANS MSG('?IFAUSAGE ---> '||ZMS);                         49529800
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          49529900
*              ZMACRET=8;                    /* MACRO ERROR */          49530000
*            END;                                                       49530100
*/*PG.KXVAR03 NAME, OPT RQD INPUT, POS(2) -XVARIABLE-----------------*/ 49530200
*  XMFCTRL=MF(2);                            /* SET XVARIABLE */        49530300
*  IF MF(2)=''                               /* CHECK FOR NULL */       49530400
*   THEN                                                                49530500
*    DO;                                     /* KEY IS REQUIRED */      49530600
*        ZXMFCTRL='';                        /* RESET IN/OUTPUT */      49530700
*        ZMS=' 8, WHEN "L" IS SPECIFIED'||                              49530800
*            ' FOR THE "MF" KEY, POSITIONAL'||                          49530900
*            ' ARG 2 IS REQUIRED.';          /**KRQDP* MSG*/            49531000
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49531100
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49531200
*        ZMACRET=8;                          /* MACRO ERROR */          49531300
*    END;                                                               49531400
*  ELSE                                                                 49531500
*    ZXMFCTRL='INPUT';                       /* SET IN/OUTPUT */        49531600
*/*PG.KXVAR13 VALUE, OPT INPUT, POS(3) -XVARIABLE--------------------*/ 49531700
*  ZXMFATTR='INPUT';                         /* SET IN/OUTPUT */        49531800
*  XMFATTR='BDY(DWORD)';                     /* SET DEFAULT */          49531900
*  IF MF(3)^=''                              /* CHECK FOR NULL */       49532000
*    THEN                                                               49532100
*      XMFATTR=MF(3);                        /* SET XVARIABLE */        49532200
*/*PG.KCK01 VALUE, OPT INPUT, POS(3) -CHARACTER LENGTH---------------*/ 49532300
*  IF ZXMFATTR^='' &                         /* NOT IN/OUTPUT */        49532400
*     LENGTH(XMFATTR)>60                                                49532500
*    THEN                                                               49532600
*      DO;                                                              49532700
*        ZXMFATTR='';                        /* RESET IN/OUTPUT */      49532800
*        ZMS=' 8, "MF'||                     /**KLNGP* MSG*/            49532900
*            MF||                                                       49533000
*            '" ARGUMENT 3 EXCEEDS THE MAXIMUM'||                       49533100
*            ' LENGTH OF 60 CHARACTERS. ';                              49533200
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49533300
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49533400
*        ZMACRET=8;                          /* MACRO ERROR */          49533500
*      END;                                                             49533600
*/*PG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 49533700
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KYWRDCTL DO GROUP */     49533800
*/*PG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 49533900
*  IF MF(1)='M'                              /* CHECK FOR KEYWORD */    49534000
*    THEN                                                               49534100
*      DO;                                                              49534200
*        XMF='M';                            /* SET XVARIABLE */        49534300
*        IF NUMBER(MF)>3                     /* CHECK POSITIONALS */    49534400
*          THEN                                                         49534500
*            DO;                                                        49534600
*              ZMS=' 8, "MF'||               /**KPOSP* MSG*/            49534700
*                  MF||                                                 49534800
*                  '" "MF"'||                                           49534900
*                  ' CAN HAVE ONLY 3 ARGUMENTS.';                       49535000
*              ANS MSG('?IFAUSAGE ---> '||ZMS);                         49535100
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          49535200
*              ZMACRET=8;                    /* MACRO ERROR */          49535300
*            END;                                                       49535400
*/*PG.KXVAR03 NAME, OPT RQD INPUT, POS(2) -XVARIABLE-----------------*/ 49535500
*  XMFCTRL=MF(2);                            /* SET XVARIABLE */        49535600
*  IF MF(2)=''                               /* CHECK FOR NULL */       49535700
*   THEN                                                                49535800
*    DO;                                     /* KEY IS REQUIRED */      49535900
*        ZXMFCTRL='';                        /* RESET IN/OUTPUT */      49536000
*        ZMS=' 8, WHEN "M" IS SPECIFIED'||                              49536100
*            ' FOR THE "MF" KEY, POSITIONAL'||                          49536200
*            ' ARG 2 IS REQUIRED.';          /**KRQDP* MSG*/            49536300
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49536400
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49536500
*        ZMACRET=8;                          /* MACRO ERROR */          49536600
*    END;                                                               49536700
*  ELSE                                                                 49536800
*    ZXMFCTRL='INPUT';                       /* SET IN/OUTPUT */        49536900
*/*PG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 49537000
*  XMFSCK='';                                /* RESET XVARIABLE */      49537100
*  IF MF(3) = 'COMPLETE'                                                49537200
*    THEN                                                               49537300
*      XMFSCK = 'COMPLETE';                  /* SET XVARIABLE */        49537400
*/*PG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 49537500
*  IF MF(3) = 'NOCHECK'                                                 49537600
*    THEN                                                               49537700
*      XMFSCK = 'NOCHECK';                   /* SET XVARIABLE */        49537800
*/*PG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 49537900
*  ZXMFSCK='INPUT';                          /* SET IN/OUTPUT */        49538000
*  IF XMFSCK=''                              /* CHECK FOR KEYWORD */    49538100
*    THEN                                                               49538200
*      DO;                                   /* KEYWORD NOT ENTERED */  49538300
*        XMFSCK='COMPLETE';                  /* SET DEFAULT */          49538400
*        IF MF(3)^=''                                                   49538500
*          THEN                                                         49538600
*            DO;                                                        49538700
*              ZXMFSCK='';                   /* RESET IN/OUTPUT */      49538800
*              ZMS=' 8, "MF'||               /**KUKWP* MSG*/            49538900
*                  MF||'"'||                                            49539000
*                  ' ARGUMENT 3 IS AN UNKNOWN KEYWORD. '||              49539100
*                  ' VALID KEYWORD CHOICE(S) ARE:'||                    49539200
*                  ' "COMPLETE"'||           /* VALID KEYWORD */        49539300
*                  ' OR "NOCHECK".';         /* VALID KEYWORD */        49539400
*              ANS MSG('?IFAUSAGE ---> '||ZMS);                         49539500
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          49539600
*              ZMACRET=8;                    /* MACRO ERROR */          49539700
*            END;                                                       49539800
*      END;                                                             49539900
*/*PG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 49540000
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KYWRDCTL DO GROUP */     49540100
*/*PG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 49540200
*  IF MF(1)='E'                              /* CHECK FOR KEYWORD */    49540300
*    THEN                                                               49540400
*      DO;                                                              49540500
*        XMF='E';                            /* SET XVARIABLE */        49540600
*        IF NUMBER(MF)>3                     /* CHECK POSITIONALS */    49540700
*          THEN                                                         49540800
*            DO;                                                        49540900
*              ZMS=' 8, "MF'||               /**KPOSP* MSG*/            49541000
*                  MF||                                                 49541100
*                  '" "MF"'||                                           49541200
*                  ' CAN HAVE ONLY 3 ARGUMENTS.';                       49541300
*              ANS MSG('?IFAUSAGE ---> '||ZMS);                         49541400
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          49541500
*              ZMACRET=8;                    /* MACRO ERROR */          49541600
*            END;                                                       49541700
*/*PG.KXVAR03 NAME, OPT RQD INPUT, POS(2) -XVARIABLE-----------------*/ 49541800
*  XMFCTRL=MF(2);                            /* SET XVARIABLE */        49541900
*  IF MF(2)=''                               /* CHECK FOR NULL */       49542000
*   THEN                                                                49542100
*    DO;                                     /* KEY IS REQUIRED */      49542200
*        ZXMFCTRL='';                        /* RESET IN/OUTPUT */      49542300
*        ZMS=' 8, WHEN "E" IS SPECIFIED'||                              49542400
*            ' FOR THE "MF" KEY, POSITIONAL'||                          49542500
*            ' ARG 2 IS REQUIRED.';          /**KRQDP* MSG*/            49542600
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49542700
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49542800
*        ZMACRET=8;                          /* MACRO ERROR */          49542900
*    END;                                                               49543000
*  ELSE                                                                 49543100
*    ZXMFCTRL='INPUT';                       /* SET IN/OUTPUT */        49543200
*/*PG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 49543300
*  XMFSCK='';                                /* RESET XVARIABLE */      49543400
*  IF MF(3) = 'COMPLETE'                                                49543500
*    THEN                                                               49543600
*      XMFSCK = 'COMPLETE';                  /* SET XVARIABLE */        49543700
*/*PG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 49543800
*  IF MF(3) = 'NOCHECK'                                                 49543900
*    THEN                                                               49544000
*      XMFSCK = 'NOCHECK';                   /* SET XVARIABLE */        49544100
*/*PG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 49544200
*  ZXMFSCK='INPUT';                          /* SET IN/OUTPUT */        49544300
*  IF XMFSCK=''                              /* CHECK FOR KEYWORD */    49544400
*    THEN                                                               49544500
*      DO;                                   /* KEYWORD NOT ENTERED */  49544600
*        XMFSCK='COMPLETE';                  /* SET DEFAULT */          49544700
*        IF MF(3)^=''                                                   49544800
*          THEN                                                         49544900
*            DO;                                                        49545000
*              ZXMFSCK='';                   /* RESET IN/OUTPUT */      49545100
*              ZMS=' 8, "MF'||               /**KUKWP* MSG*/            49545200
*                  MF||'"'||                                            49545300
*                  ' ARGUMENT 3 IS AN UNKNOWN KEYWORD. '||              49545400
*                  ' VALID KEYWORD CHOICE(S) ARE:'||                    49545500
*                  ' "COMPLETE"'||           /* VALID KEYWORD */        49545600
*                  ' OR "NOCHECK".';         /* VALID KEYWORD */        49545700
*              ANS MSG('?IFAUSAGE ---> '||ZMS);                         49545800
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          49545900
*              ZMACRET=8;                    /* MACRO ERROR */          49546000
*            END;                                                       49546100
*      END;                                                             49546200
*/*PG.KKCTL05 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 49546300
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KYWRDCTL DO GROUP */     49546400
*/*PG.KKCTL06 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 49546500
*  IF MF='MF'                                                           49546600
*    | MF='()'                               /*CHECK ENTRY*/            49546700
*     THEN                                                              49546800
*       DO;                                                             49546900
*              ZMS=' 8, THE "MF" KEY'||      /**KOPTP* MSG*/            49547000
*                  ' MUST CONTAIN ONE'||                                49547100
*                  ' (OR MORE) ARGUMENT(S).';                           49547200
*              ANS MSG('?IFAUSAGE ---> '||ZMS);                         49547300
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          49547400
*              ZMACRET=8;                    /* MACRO ERROR */          49547500
*       END;                                                            49547600
*  ELSE                                                                 49547700
*    DO;                                                                49547800
*      ZXMF='INPUT';                         /* SET IN/OUTPUT */        49547900
*      IF XMF=''                             /* CHECK FOR KEYWORD */    49548000
*        THEN                                                           49548100
*          DO;                               /* KEYWORD NOT ENTERED */  49548200
*            XMF='S';                        /* SET DEFAULT */          49548300
*            XMFSCK='COMPLETE';              /* COMPLETE CHECKING */    49548400
*            IF MF(1)^=''                    /* CHECK FOR KEYWORD */    49548500
*              THEN                                                     49548600
*                DO;                                                    49548700
*                  ZXMF='';                  /* RESET IN/OUTPUT */      49548800
*              ZMS=' 8, "MF'||               /**KUKWP* MSG*/            49548900
*                  MF||'"'||                                            49549000
*                  ' ARGUMENT 1 IS AN UNKNOWN KEYWORD. '||              49549100
*                  ' VALID KEYWORD CHOICE(S) ARE:'||                    49549200
*                  ' "S",'||                 /* VALID KEYWORD */        49549300
*                  ' "L",'||                 /* VALID KEYWORD */        49549400
*                  ' "M",'||                 /* VALID KEYWORD */        49549500
*                  ' OR "E".';               /* VALID KEYWORD */        49549600
*              ANS MSG('?IFAUSAGE ---> '||ZMS);                         49549700
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          49549800
*              ZMACRET=8;                    /* MACRO ERROR */          49549900
*                END;                                                   49550000
*          END;                                                         49550100
*    END;                                                               49550200
*/********************************************************************/ 49550300
*/***PD.P01 FULL DEFAULT CHECKING                                    */ 49550400
*/********************************************************************/ 49550500
*  ZC='OFF';                                 /* DEFAULT FLAG OFF */     49550600
*/********************************************************************/ 49550700
*/***PD.P02 DEFAULT ECHO                                             */ 49550800
*/********************************************************************/ 49550900
*/*PD.P02 XMF^='L' & XMFSCK='COMPLETE' ------------------------------*/ 49551000
*  IF XMF^='L'                                                          49551100
*     & XMFSCK='COMPLETE'                                               49551200
*    THEN                                                               49551300
*      DO;                                   /* FULL SYNTAX CHECK */    49551400
*        ANS('/*DEFAULT(S): */')                                        49551500
*           NORESCAN COL(MACLMAR+5);                                    49551600
*/*PD.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 49551700
*  IF REQUEST(1)='REGISTER' |                /* CHECK FOR KEYWORD */    49551800
*     REQUEST(1)=''                          /* CHECK FOR NULL */       49551900
*    THEN                                                               49552000
*      DO;                                                              49552100
*/*PD.KXVAR01 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 49552200
*  XPRODVERS='';                                                        49552300
*  IF PRODVERS(1)=''                                                    49552400
*    THEN                                                               49552500
*      DO;                                                              49552600
*        XPRODVERS='NONE';                   /* SET DEFAULT */          49552700
*        ZC='ON';                            /* DEFAULT FLAG ON */      49552800
*      END;                                                             49552900
*/*PD.DFLT01 PRINT DEFAULT(S) IF APPROPRIATE ------------------------*/ 49553000
*  IF XPRODVERS^=''                                                     49553100
*    THEN                                                               49553200
*      ANS('/* PRODVERS('||                                             49553300
*          XPRODVERS||                                                  49553400
*          ')*/')                                                       49553500
*          NORESCAN COL(MACLMAR+5);                                     49553600
*/*PD.KXVAR01 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 49553700
*  XPRODQUAL='';                                                        49553800
*  IF PRODQUAL(1)=''                                                    49553900
*    THEN                                                               49554000
*      DO;                                                              49554100
*        XPRODQUAL='NONE';                   /* SET DEFAULT */          49554200
*        ZC='ON';                            /* DEFAULT FLAG ON */      49554300
*      END;                                                             49554400
*/*PD.DFLT01 PRINT DEFAULT(S) IF APPROPRIATE ------------------------*/ 49554500
*  IF XPRODQUAL^=''                                                     49554600
*    THEN                                                               49554700
*      ANS('/* PRODQUAL('||                                             49554800
*          XPRODQUAL||                                                  49554900
*          ')*/')                                                       49555000
*          NORESCAN COL(MACLMAR+5);                                     49555100
*/*PD.KXVAR01 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 49555200
*  XPRODID='';                                                          49555300
*  IF PRODID(1)=''                                                      49555400
*    THEN                                                               49555500
*      DO;                                                              49555600
*        XPRODID='NONE';                     /* SET DEFAULT */          49555700
*        ZC='ON';                            /* DEFAULT FLAG ON */      49555800
*      END;                                                             49555900
*/*PD.DFLT01 PRINT DEFAULT(S) IF APPROPRIATE ------------------------*/ 49556000
*  IF XPRODID^=''                                                       49556100
*    THEN                                                               49556200
*      ANS('/* PRODID('||                                               49556300
*          XPRODID||                                                    49556400
*          ')*/')                                                       49556500
*          NORESCAN COL(MACLMAR+5);                                     49556600
*/*PD.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 49556700
*  IF DOMAIN(1)=''                                                      49556800
*    THEN                                                               49556900
*      DO;                                                              49557000
*        ANS('/*DOMAIN(ADDRSP)*/')                                      49557100
*            NORESCAN COL(MACLMAR+5);                                   49557200
*        ZC='ON';                            /* DEFAULT FLAG ON */      49557300
*      END;                                                             49557400
*/*PD.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 49557500
*  IF DOMAIN(1)='TASK'                       /* CHECK FOR KEYWORD */    49557600
*    THEN                                                               49557700
*      DO;                                                              49557800
*/*PD.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 49557900
*  XSCOPE='ALL';                             /* RESET XVARIABLE */      49558000
*  IF SCOPE(1)=''                                                       49558100
*    THEN                                                               49558200
*        ZC='ON';                            /* DEFAULT FLAG ON */      49558300
*  IF SCOPE(1)='ALL'                                                    49558400
*    THEN                                                               49558500
*        XSCOPE='';                          /* SET XVARIABLE */        49558600
*  IF SCOPE(1)='FUNCTION'                                               49558700
*    THEN                                                               49558800
*        XSCOPE='';                          /* SET XVARIABLE */        49558900
*/*PD.DFLT01 PRINT DEFAULT(S) IF APPROPRIATE ------------------------*/ 49559000
*  IF XSCOPE^=''                                                        49559100
*    THEN                                                               49559200
*      ANS('/* SCOPE('||                                                49559300
*          XSCOPE||                                                     49559400
*          ')*/')                                                       49559500
*          NORESCAN COL(MACLMAR+5);                                     49559600
*/*PD.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 49559700
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KYWRDCTL DO GROUP */     49559800
*/*PD.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 49559900
*  XLINKAGE='SVC';                           /* RESET XVARIABLE */      49560000
*  IF LINKAGE(1)=''                                                     49560100
*    THEN                                                               49560200
*        ZC='ON';                            /* DEFAULT FLAG ON */      49560300
*  IF LINKAGE(1)='SVC'                                                  49560400
*    THEN                                                               49560500
*        XLINKAGE='';                        /* SET XVARIABLE */        49560600
*  IF LINKAGE(1)='BRANCH'                                               49560700
*    THEN                                                               49560800
*        XLINKAGE='';                        /* SET XVARIABLE */        49560900
*/*PD.DFLT01 PRINT DEFAULT(S) IF APPROPRIATE ------------------------*/ 49561000
*  IF XLINKAGE^=''                                                      49561100
*    THEN                                                               49561200
*      ANS('/* LINKAGE('||                                              49561300
*          XLINKAGE||                                                   49561400
*          ')*/')                                                       49561500
*          NORESCAN COL(MACLMAR+5);                                     49561600
*/*PD.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 49561700
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KYWRDCTL DO GROUP */     49561800
*/*PD.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 49561900
*  IF REQUEST(1)='DEREGISTER'                /* CHECK FOR KEYWORD */    49562000
*    THEN                                                               49562100
*      DO;                                                              49562200
*/*PD.KMEKY01 NAME, RQD INPUT, ME KEYS -XVARIABLE KEY----------------*/ 49562300
*  XDEREGPRODNAME='';                        /* RESET XVARIABLE */      49562400
*  IF PRODOWNER^=''                          /* CHECK ME KEY */         49562500
*    THEN                                                               49562600
*      DO;                                   /* VALID ME KEY */         49562700
*        XDEREGPRODNAME='PRODOWNER';         /* SET XVARIABLE */        49562800
*      END;                                                             49562900
*/*PD.KMEKY02 NAME, RQD INPUT, ME KEYS -XVARIABLE KEY----------------*/ 49563000
*  IF PRTOKEN^=''                            /* CHECK ME KEY */         49563100
*    THEN                                                               49563200
*      DO;                                                              49563300
*        IF XDEREGPRODNAME=''                /* CHECK XVARIABLE */      49563400
*          THEN                                                         49563500
*            DO;                             /* VALID ME KEY */         49563600
*              XDEREGPRODNAME='PRTOKEN';     /* SET XVAR1 */            49563700
*            END;                                                       49563800
*      END;                                                             49563900
*/*PD.KMEKY07 NAME, RQD INPUT, ME KEYS -ME KEY DEFAULT---------------*/ 49564000
*  IF XDEREGPRODNAME=''                      /* CHECK XVARIABLE */      49564100
*    THEN                                                               49564200
*      DO;                                                              49564300
*        XDEREGPRODNAME='PRODOWNER';                                    49564400
*        ZC='ON';                            /* DEFAULT FLAG ON */      49564500
*      END;                                                             49564600
*/*PD.KMEKY10 NAME, RQD INPUT, ME KEYS -START------------------------*/ 49564700
*  IF XDEREGPRODNAME='PRODOWNER'             /* CHECK FOR ME KEY */     49564800
*    THEN                                                               49564900
*      DO;   /**** START OF A MUTUALLY EXCLUSIVE KEY DO GROUP */        49565000
*/*PD.KXVAR01 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 49565100
*  XPRODVERS='';                                                        49565200
*  IF PRODVERS(1)=''                                                    49565300
*    THEN                                                               49565400
*      DO;                                                              49565500
*        XPRODVERS='NONE';                   /* SET DEFAULT */          49565600
*        ZC='ON';                            /* DEFAULT FLAG ON */      49565700
*      END;                                                             49565800
*/*PD.DFLT01 PRINT DEFAULT(S) IF APPROPRIATE ------------------------*/ 49565900
*  IF XPRODVERS^=''                                                     49566000
*    THEN                                                               49566100
*      ANS('/* PRODVERS('||                                             49566200
*          XPRODVERS||                                                  49566300
*          ')*/')                                                       49566400
*          NORESCAN COL(MACLMAR+5);                                     49566500
*/*PD.KXVAR01 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 49566600
*  XPRODQUAL='';                                                        49566700
*  IF PRODQUAL(1)=''                                                    49566800
*    THEN                                                               49566900
*      DO;                                                              49567000
*        XPRODQUAL='NONE';                   /* SET DEFAULT */          49567100
*        ZC='ON';                            /* DEFAULT FLAG ON */      49567200
*      END;                                                             49567300
*/*PD.DFLT01 PRINT DEFAULT(S) IF APPROPRIATE ------------------------*/ 49567400
*  IF XPRODQUAL^=''                                                     49567500
*    THEN                                                               49567600
*      ANS('/* PRODQUAL('||                                             49567700
*          XPRODQUAL||                                                  49567800
*          ')*/')                                                       49567900
*          NORESCAN COL(MACLMAR+5);                                     49568000
*/*PD.KXVAR01 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 49568100
*  XPRODID='';                                                          49568200
*  IF PRODID(1)=''                                                      49568300
*    THEN                                                               49568400
*      DO;                                                              49568500
*        XPRODID='NONE';                     /* SET DEFAULT */          49568600
*        ZC='ON';                            /* DEFAULT FLAG ON */      49568700
*      END;                                                             49568800
*/*PD.DFLT01 PRINT DEFAULT(S) IF APPROPRIATE ------------------------*/ 49568900
*  IF XPRODID^=''                                                       49569000
*    THEN                                                               49569100
*      ANS('/* PRODID('||                                               49569200
*          XPRODID||                                                    49569300
*          ')*/')                                                       49569400
*          NORESCAN COL(MACLMAR+5);                                     49569500
*/*PD.KMEKY09 NAME, RQD INPUT, ME KEYS -END--------------------------*/ 49569600
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KEY DO GROUP */          49569700
*/*PD.KMEKY10 NAME, RQD INPUT, ME KEYS -START------------------------*/ 49569800
*  IF XDEREGPRODNAME='PRTOKEN'               /* CHECK FOR ME KEY */     49569900
*    THEN                                                               49570000
*      DO;   /**** START OF A MUTUALLY EXCLUSIVE KEY DO GROUP */        49570100
*/*PD.KMEKY11 NAME, RQD INPUT, ME KEYS -END--------------------------*/ 49570200
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KEY DO GROUP */          49570300
*/*PD.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 49570400
*  XLINKAGE='SVC';                           /* RESET XVARIABLE */      49570500
*  IF LINKAGE(1)=''                                                     49570600
*    THEN                                                               49570700
*        ZC='ON';                            /* DEFAULT FLAG ON */      49570800
*  IF LINKAGE(1)='SVC'                                                  49570900
*    THEN                                                               49571000
*        XLINKAGE='';                        /* SET XVARIABLE */        49571100
*  IF LINKAGE(1)='BRANCH'                                               49571200
*    THEN                                                               49571300
*        XLINKAGE='';                        /* SET XVARIABLE */        49571400
*/*PD.DFLT01 PRINT DEFAULT(S) IF APPROPRIATE ------------------------*/ 49571500
*  IF XLINKAGE^=''                                                      49571600
*    THEN                                                               49571700
*      ANS('/* LINKAGE('||                                              49571800
*          XLINKAGE||                                                   49571900
*          ')*/')                                                       49572000
*          NORESCAN COL(MACLMAR+5);                                     49572100
*/*PD.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 49572200
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KYWRDCTL DO GROUP */     49572300
*/*PD.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 49572400
*  IF REQUEST(1)='FUNCTIONBEGIN'             /* CHECK FOR KEYWORD */    49572500
*    THEN                                                               49572600
*      DO;                                                              49572700
*/*PD.KMEKY01 NAME, RQD INPUT, ME KEYS -XVARIABLE KEY----------------*/ 49572800
*  XBEGINPRODNAME='';                        /* RESET XVARIABLE */      49572900
*  IF PRODOWNER^=''                          /* CHECK ME KEY */         49573000
*    THEN                                                               49573100
*      DO;                                   /* VALID ME KEY */         49573200
*        XBEGINPRODNAME='PRODOWNER';         /* SET XVARIABLE */        49573300
*      END;                                                             49573400
*/*PD.KMEKY02 NAME, RQD INPUT, ME KEYS -XVARIABLE KEY----------------*/ 49573500
*  IF PRTOKEN^=''                            /* CHECK ME KEY */         49573600
*    THEN                                                               49573700
*      DO;                                                              49573800
*        IF XBEGINPRODNAME=''                /* CHECK XVARIABLE */      49573900
*          THEN                                                         49574000
*            DO;                             /* VALID ME KEY */         49574100
*              XBEGINPRODNAME='PRTOKEN';     /* SET XVAR1 */            49574200
*            END;                                                       49574300
*      END;                                                             49574400
*/*PD.KMEKY07 NAME, RQD INPUT, ME KEYS -ME KEY DEFAULT---------------*/ 49574500
*  IF XBEGINPRODNAME=''                      /* CHECK XVARIABLE */      49574600
*    THEN                                                               49574700
*      DO;                                                              49574800
*        XBEGINPRODNAME='PRODOWNER';                                    49574900
*        ZC='ON';                            /* DEFAULT FLAG ON */      49575000
*      END;                                                             49575100
*/*PD.KMEKY10 NAME, RQD INPUT, ME KEYS -START------------------------*/ 49575200
*  IF XBEGINPRODNAME='PRODOWNER'             /* CHECK FOR ME KEY */     49575300
*    THEN                                                               49575400
*      DO;   /**** START OF A MUTUALLY EXCLUSIVE KEY DO GROUP */        49575500
*/*PD.KXVAR01 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 49575600
*  XPRODVERS='';                                                        49575700
*  IF PRODVERS(1)=''                                                    49575800
*    THEN                                                               49575900
*      DO;                                                              49576000
*        XPRODVERS='NONE';                   /* SET DEFAULT */          49576100
*        ZC='ON';                            /* DEFAULT FLAG ON */      49576200
*      END;                                                             49576300
*/*PD.DFLT01 PRINT DEFAULT(S) IF APPROPRIATE ------------------------*/ 49576400
*  IF XPRODVERS^=''                                                     49576500
*    THEN                                                               49576600
*      ANS('/* PRODVERS('||                                             49576700
*          XPRODVERS||                                                  49576800
*          ')*/')                                                       49576900
*          NORESCAN COL(MACLMAR+5);                                     49577000
*/*PD.KXVAR01 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 49577100
*  XPRODQUAL='';                                                        49577200
*  IF PRODQUAL(1)=''                                                    49577300
*    THEN                                                               49577400
*      DO;                                                              49577500
*        XPRODQUAL='NONE';                   /* SET DEFAULT */          49577600
*        ZC='ON';                            /* DEFAULT FLAG ON */      49577700
*      END;                                                             49577800
*/*PD.DFLT01 PRINT DEFAULT(S) IF APPROPRIATE ------------------------*/ 49577900
*  IF XPRODQUAL^=''                                                     49578000
*    THEN                                                               49578100
*      ANS('/* PRODQUAL('||                                             49578200
*          XPRODQUAL||                                                  49578300
*          ')*/')                                                       49578400
*          NORESCAN COL(MACLMAR+5);                                     49578500
*/*PD.KXVAR01 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 49578600
*  XPRODID='';                                                          49578700
*  IF PRODID(1)=''                                                      49578800
*    THEN                                                               49578900
*      DO;                                                              49579000
*        XPRODID='NONE';                     /* SET DEFAULT */          49579100
*        ZC='ON';                            /* DEFAULT FLAG ON */      49579200
*      END;                                                             49579300
*/*PD.DFLT01 PRINT DEFAULT(S) IF APPROPRIATE ------------------------*/ 49579400
*  IF XPRODID^=''                                                       49579500
*    THEN                                                               49579600
*      ANS('/* PRODID('||                                               49579700
*          XPRODID||                                                    49579800
*          ')*/')                                                       49579900
*          NORESCAN COL(MACLMAR+5);                                     49580000
*/*PD.KMEKY09 NAME, RQD INPUT, ME KEYS -END--------------------------*/ 49580100
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KEY DO GROUP */          49580200
*/*PD.KMEKY10 NAME, RQD INPUT, ME KEYS -START------------------------*/ 49580300
*  IF XBEGINPRODNAME='PRTOKEN'               /* CHECK FOR ME KEY */     49580400
*    THEN                                                               49580500
*      DO;   /**** START OF A MUTUALLY EXCLUSIVE KEY DO GROUP */        49580600
*/*PD.KMEKY11 NAME, RQD INPUT, ME KEYS -END--------------------------*/ 49580700
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KEY DO GROUP */          49580800
*/*PD.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 49580900
*  XLINKAGE='SVC';                           /* RESET XVARIABLE */      49581000
*  IF LINKAGE(1)=''                                                     49581100
*    THEN                                                               49581200
*        ZC='ON';                            /* DEFAULT FLAG ON */      49581300
*  IF LINKAGE(1)='SVC'                                                  49581400
*    THEN                                                               49581500
*        XLINKAGE='';                        /* SET XVARIABLE */        49581600
*  IF LINKAGE(1)='BRANCH'                                               49581700
*    THEN                                                               49581800
*        XLINKAGE='';                        /* SET XVARIABLE */        49581900
*/*PD.DFLT01 PRINT DEFAULT(S) IF APPROPRIATE ------------------------*/ 49582000
*  IF XLINKAGE^=''                                                      49582100
*    THEN                                                               49582200
*      ANS('/* LINKAGE('||                                              49582300
*          XLINKAGE||                                                   49582400
*          ')*/')                                                       49582500
*          NORESCAN COL(MACLMAR+5);                                     49582600
*/*PD.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 49582700
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KYWRDCTL DO GROUP */     49582800
*/*PD.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 49582900
*  IF REQUEST(1)='FUNCTIONDATA'              /* CHECK FOR KEYWORD */    49583000
*    THEN                                                               49583100
*      DO;                                                              49583200
*/*PD.KMEKY01 NAME, RQD INPUT, ME KEYS -XVARIABLE KEY----------------*/ 49583300
*  XDATAPRODNAME='';                         /* RESET XVARIABLE */      49583400
*  IF PRODOWNER^=''                          /* CHECK ME KEY */         49583500
*    THEN                                                               49583600
*      DO;                                   /* VALID ME KEY */         49583700
*        XDATAPRODNAME='PRODOWNER';          /* SET XVARIABLE */        49583800
*      END;                                                             49583900
*/*PD.KMEKY02 NAME, RQD INPUT, ME KEYS -XVARIABLE KEY----------------*/ 49584000
*  IF PRTOKEN^=''                            /* CHECK ME KEY */         49584100
*    THEN                                                               49584200
*      DO;                                                              49584300
*        IF XDATAPRODNAME=''                 /* CHECK XVARIABLE */      49584400
*          THEN                                                         49584500
*            DO;                             /* VALID ME KEY */         49584600
*              XDATAPRODNAME='PRTOKEN';      /* SET XVAR1 */            49584700
*            END;                                                       49584800
*      END;                                                             49584900
*/*PD.KMEKY07 NAME, RQD INPUT, ME KEYS -ME KEY DEFAULT---------------*/ 49585000
*  IF XDATAPRODNAME=''                       /* CHECK XVARIABLE */      49585100
*    THEN                                                               49585200
*      DO;                                                              49585300
*        XDATAPRODNAME='PRODOWNER';                                     49585400
*        ZC='ON';                            /* DEFAULT FLAG ON */      49585500
*      END;                                                             49585600
*/*PD.KMEKY10 NAME, RQD INPUT, ME KEYS -START------------------------*/ 49585700
*  IF XDATAPRODNAME='PRODOWNER'              /* CHECK FOR ME KEY */     49585800
*    THEN                                                               49585900
*      DO;   /**** START OF A MUTUALLY EXCLUSIVE KEY DO GROUP */        49586000
*/*PD.KXVAR01 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 49586100
*  XPRODVERS='';                                                        49586200
*  IF PRODVERS(1)=''                                                    49586300
*    THEN                                                               49586400
*      DO;                                                              49586500
*        XPRODVERS='NONE';                   /* SET DEFAULT */          49586600
*        ZC='ON';                            /* DEFAULT FLAG ON */      49586700
*      END;                                                             49586800
*/*PD.DFLT01 PRINT DEFAULT(S) IF APPROPRIATE ------------------------*/ 49586900
*  IF XPRODVERS^=''                                                     49587000
*    THEN                                                               49587100
*      ANS('/* PRODVERS('||                                             49587200
*          XPRODVERS||                                                  49587300
*          ')*/')                                                       49587400
*          NORESCAN COL(MACLMAR+5);                                     49587500
*/*PD.KXVAR01 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 49587600
*  XPRODQUAL='';                                                        49587700
*  IF PRODQUAL(1)=''                                                    49587800
*    THEN                                                               49587900
*      DO;                                                              49588000
*        XPRODQUAL='NONE';                   /* SET DEFAULT */          49588100
*        ZC='ON';                            /* DEFAULT FLAG ON */      49588200
*      END;                                                             49588300
*/*PD.DFLT01 PRINT DEFAULT(S) IF APPROPRIATE ------------------------*/ 49588400
*  IF XPRODQUAL^=''                                                     49588500
*    THEN                                                               49588600
*      ANS('/* PRODQUAL('||                                             49588700
*          XPRODQUAL||                                                  49588800
*          ')*/')                                                       49588900
*          NORESCAN COL(MACLMAR+5);                                     49589000
*/*PD.KXVAR01 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 49589100
*  XPRODID='';                                                          49589200
*  IF PRODID(1)=''                                                      49589300
*    THEN                                                               49589400
*      DO;                                                              49589500
*        XPRODID='NONE';                     /* SET DEFAULT */          49589600
*        ZC='ON';                            /* DEFAULT FLAG ON */      49589700
*      END;                                                             49589800
*/*PD.DFLT01 PRINT DEFAULT(S) IF APPROPRIATE ------------------------*/ 49589900
*  IF XPRODID^=''                                                       49590000
*    THEN                                                               49590100
*      ANS('/* PRODID('||                                               49590200
*          XPRODID||                                                    49590300
*          ')*/')                                                       49590400
*          NORESCAN COL(MACLMAR+5);                                     49590500
*/*PD.KMEKY09 NAME, RQD INPUT, ME KEYS -END--------------------------*/ 49590600
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KEY DO GROUP */          49590700
*/*PD.KMEKY10 NAME, RQD INPUT, ME KEYS -START------------------------*/ 49590800
*  IF XDATAPRODNAME='PRTOKEN'                /* CHECK FOR ME KEY */     49590900
*    THEN                                                               49591000
*      DO;   /**** START OF A MUTUALLY EXCLUSIVE KEY DO GROUP */        49591100
*/*PD.KMEKY11 NAME, RQD INPUT, ME KEYS -END--------------------------*/ 49591200
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KEY DO GROUP */          49591300
*/*PD.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 49591400
*  XFORMAT='CPUTIME';                        /* RESET XVARIABLE */      49591500
*  IF FORMAT(1)=''                                                      49591600
*    THEN                                                               49591700
*        ZC='ON';                            /* DEFAULT FLAG ON */      49591800
*  IF FORMAT(1)='CPUTIME'                                               49591900
*    THEN                                                               49592000
*        XFORMAT='';                         /* SET XVARIABLE */        49592100
*  IF FORMAT(1)='BINARY'                                                49592200
*    THEN                                                               49592300
*        XFORMAT='';                         /* SET XVARIABLE */        49592400
*  IF FORMAT(1)='FLOAT'                                                 49592500
*    THEN                                                               49592600
*        XFORMAT='';                         /* SET XVARIABLE */        49592700
*/*PD.DFLT01 PRINT DEFAULT(S) IF APPROPRIATE ------------------------*/ 49592800
*  IF XFORMAT^=''                                                       49592900
*    THEN                                                               49593000
*      ANS('/* FORMAT('||                                               49593100
*          XFORMAT||                                                    49593200
*          ')*/')                                                       49593300
*          NORESCAN COL(MACLMAR+5);                                     49593400
*/*PD.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 49593500
*  XLINKAGE='SVC';                           /* RESET XVARIABLE */      49593600
*  IF LINKAGE(1)=''                                                     49593700
*    THEN                                                               49593800
*        ZC='ON';                            /* DEFAULT FLAG ON */      49593900
*  IF LINKAGE(1)='SVC'                                                  49594000
*    THEN                                                               49594100
*        XLINKAGE='';                        /* SET XVARIABLE */        49594200
*  IF LINKAGE(1)='BRANCH'                                               49594300
*    THEN                                                               49594400
*        XLINKAGE='';                        /* SET XVARIABLE */        49594500
*/*PD.DFLT01 PRINT DEFAULT(S) IF APPROPRIATE ------------------------*/ 49594600
*  IF XLINKAGE^=''                                                      49594700
*    THEN                                                               49594800
*      ANS('/* LINKAGE('||                                              49594900
*          XLINKAGE||                                                   49595000
*          ')*/')                                                       49595100
*          NORESCAN COL(MACLMAR+5);                                     49595200
*/*PD.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 49595300
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KYWRDCTL DO GROUP */     49595400
*/*PD.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 49595500
*  IF REQUEST(1)='FUNCTIONEND'               /* CHECK FOR KEYWORD */    49595600
*    THEN                                                               49595700
*      DO;                                                              49595800
*/*PD.KMEKY01 NAME, RQD INPUT, ME KEYS -XVARIABLE KEY----------------*/ 49595900
*  XENDPRODNAME='';                          /* RESET XVARIABLE */      49596000
*  IF PRODOWNER^=''                          /* CHECK ME KEY */         49596100
*    THEN                                                               49596200
*      DO;                                   /* VALID ME KEY */         49596300
*        XENDPRODNAME='PRODOWNER';           /* SET XVARIABLE */        49596400
*      END;                                                             49596500
*/*PD.KMEKY02 NAME, RQD INPUT, ME KEYS -XVARIABLE KEY----------------*/ 49596600
*  IF PRTOKEN^=''                            /* CHECK ME KEY */         49596700
*    THEN                                                               49596800
*      DO;                                                              49596900
*        IF XENDPRODNAME=''                  /* CHECK XVARIABLE */      49597000
*          THEN                                                         49597100
*            DO;                             /* VALID ME KEY */         49597200
*              XENDPRODNAME='PRTOKEN';       /* SET XVAR1 */            49597300
*            END;                                                       49597400
*      END;                                                             49597500
*/*PD.KMEKY07 NAME, RQD INPUT, ME KEYS -ME KEY DEFAULT---------------*/ 49597600
*  IF XENDPRODNAME=''                        /* CHECK XVARIABLE */      49597700
*    THEN                                                               49597800
*      DO;                                                              49597900
*        XENDPRODNAME='PRODOWNER';                                      49598000
*        ZC='ON';                            /* DEFAULT FLAG ON */      49598100
*      END;                                                             49598200
*/*PD.KMEKY10 NAME, RQD INPUT, ME KEYS -START------------------------*/ 49598300
*  IF XENDPRODNAME='PRODOWNER'               /* CHECK FOR ME KEY */     49598400
*    THEN                                                               49598500
*      DO;   /**** START OF A MUTUALLY EXCLUSIVE KEY DO GROUP */        49598600
*/*PD.KXVAR01 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 49598700
*  XPRODVERS='';                                                        49598800
*  IF PRODVERS(1)=''                                                    49598900
*    THEN                                                               49599000
*      DO;                                                              49599100
*        XPRODVERS='NONE';                   /* SET DEFAULT */          49599200
*        ZC='ON';                            /* DEFAULT FLAG ON */      49599300
*      END;                                                             49599400
*/*PD.DFLT01 PRINT DEFAULT(S) IF APPROPRIATE ------------------------*/ 49599500
*  IF XPRODVERS^=''                                                     49599600
*    THEN                                                               49599700
*      ANS('/* PRODVERS('||                                             49599800
*          XPRODVERS||                                                  49599900
*          ')*/')                                                       49600000
*          NORESCAN COL(MACLMAR+5);                                     49600100
*/*PD.KXVAR01 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 49600200
*  XPRODQUAL='';                                                        49600300
*  IF PRODQUAL(1)=''                                                    49600400
*    THEN                                                               49600500
*      DO;                                                              49600600
*        XPRODQUAL='NONE';                   /* SET DEFAULT */          49600700
*        ZC='ON';                            /* DEFAULT FLAG ON */      49600800
*      END;                                                             49600900
*/*PD.DFLT01 PRINT DEFAULT(S) IF APPROPRIATE ------------------------*/ 49601000
*  IF XPRODQUAL^=''                                                     49601100
*    THEN                                                               49601200
*      ANS('/* PRODQUAL('||                                             49601300
*          XPRODQUAL||                                                  49601400
*          ')*/')                                                       49601500
*          NORESCAN COL(MACLMAR+5);                                     49601600
*/*PD.KXVAR01 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 49601700
*  XPRODID='';                                                          49601800
*  IF PRODID(1)=''                                                      49601900
*    THEN                                                               49602000
*      DO;                                                              49602100
*        XPRODID='NONE';                     /* SET DEFAULT */          49602200
*        ZC='ON';                            /* DEFAULT FLAG ON */      49602300
*      END;                                                             49602400
*/*PD.DFLT01 PRINT DEFAULT(S) IF APPROPRIATE ------------------------*/ 49602500
*  IF XPRODID^=''                                                       49602600
*    THEN                                                               49602700
*      ANS('/* PRODID('||                                               49602800
*          XPRODID||                                                    49602900
*          ')*/')                                                       49603000
*          NORESCAN COL(MACLMAR+5);                                     49603100
*/*PD.KMEKY09 NAME, RQD INPUT, ME KEYS -END--------------------------*/ 49603200
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KEY DO GROUP */          49603300
*/*PD.KMEKY10 NAME, RQD INPUT, ME KEYS -START------------------------*/ 49603400
*  IF XENDPRODNAME='PRTOKEN'                 /* CHECK FOR ME KEY */     49603500
*    THEN                                                               49603600
*      DO;   /**** START OF A MUTUALLY EXCLUSIVE KEY DO GROUP */        49603700
*/*PD.KMEKY11 NAME, RQD INPUT, ME KEYS -END--------------------------*/ 49603800
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KEY DO GROUP */          49603900
*/*PD.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 49604000
*  XLINKAGE='SVC';                           /* RESET XVARIABLE */      49604100
*  IF LINKAGE(1)=''                                                     49604200
*    THEN                                                               49604300
*        ZC='ON';                            /* DEFAULT FLAG ON */      49604400
*  IF LINKAGE(1)='SVC'                                                  49604500
*    THEN                                                               49604600
*        XLINKAGE='';                        /* SET XVARIABLE */        49604700
*  IF LINKAGE(1)='BRANCH'                                               49604800
*    THEN                                                               49604900
*        XLINKAGE='';                        /* SET XVARIABLE */        49605000
*/*PD.DFLT01 PRINT DEFAULT(S) IF APPROPRIATE ------------------------*/ 49605100
*  IF XLINKAGE^=''                                                      49605200
*    THEN                                                               49605300
*      ANS('/* LINKAGE('||                                              49605400
*          XLINKAGE||                                                   49605500
*          ')*/')                                                       49605600
*          NORESCAN COL(MACLMAR+5);                                     49605700
*/*PD.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 49605800
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KYWRDCTL DO GROUP */     49605900
*/*PD.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 49606000
*  IF REQUEST(1)='STATUS'                    /* CHECK FOR KEYWORD */    49606100
*    THEN                                                               49606200
*      DO;                                                              49606300
*/*PD.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 49606400
*  XLINKAGE='SVC';                           /* RESET XVARIABLE */      49606500
*  IF LINKAGE(1)=''                                                     49606600
*    THEN                                                               49606700
*        ZC='ON';                            /* DEFAULT FLAG ON */      49606800
*  IF LINKAGE(1)='SVC'                                                  49606900
*    THEN                                                               49607000
*        XLINKAGE='';                        /* SET XVARIABLE */        49607100
*  IF LINKAGE(1)='BRANCH'                                               49607200
*    THEN                                                               49607300
*        XLINKAGE='';                        /* SET XVARIABLE */        49607400
*/*PD.DFLT01 PRINT DEFAULT(S) IF APPROPRIATE ------------------------*/ 49607500
*  IF XLINKAGE^=''                                                      49607600
*    THEN                                                               49607700
*      ANS('/* LINKAGE('||                                              49607800
*          XLINKAGE||                                                   49607900
*          ')*/')                                                       49608000
*          NORESCAN COL(MACLMAR+5);                                     49608100
*/*PD.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 49608200
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KYWRDCTL DO GROUP */     49608300
*  IF ZC='OFF'                               /*NO DEFAULTS TAKEN */     49608400
*    THEN                                                               49608500
*      ANS('/* NONE. */')                                               49608600
*         NORESCAN COL(MACLMAR+5);                                      49608700
*/*PD.P04 END DEFAULT ECHO ------------------------------------------*/ 49608800
*      END;                                                             49608900
*/********************************************************************/ 49609000
*/***PG.P01 FULL MACRO SYNTAX CHECKING                               */ 49609100
*/********************************************************************/ 49609200
*/*PG.P02 XMF^='L' & XMFSCK='COMPLETE' ------------------------------*/ 49609300
*  IF XMF^='L'                                                          49609400
*     & XMFSCK='COMPLETE'                                               49609500
*    THEN                                                               49609600
*      DO;                                   /* FULL SYNTAX CHECK */    49609700
*/*PG.P03 EXCESSIVE POSITIONAL ARGUMENTS-----------------------------*/ 49609800
*  IF NUMBER(MACLIST)>0                      /* CHECK POSITIONALS */    49609900
*    THEN                                                               49610000
*      DO;                                                              49610100
*        ZMS=' 8, POSITIONAL ARGUMENT(S),'|| /**PPOSP* MSG*/            49610200
*            ' "'||MACLIST||'"'||                                       49610300
*            ' CANNOT BE USED.'||                                       49610400
*            ' NO POSITIONAL ARGUMENTS'||                               49610500
*            ' ARE ALLOWED.';                                           49610600
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49610700
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49610800
*        ZMACRET=8;                          /* MACRO ERROR */          49610900
*      END;                                                             49611000
*/*PG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 49611100
*  XREQUEST='';                                                         49611200
*/*PG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 49611300
*  IF REQUEST(1)='REGISTER'                  /* CHECK FOR KEYWORD */    49611400
*     | REQUEST(1)=''                        /* CHECK FOR NULL */       49611500
*    THEN                                                               49611600
*      DO;                                                              49611700
*        XREQUEST='REGISTER';                /* SET XVARIABLE */        49611800
*        IF NUMBER(REQUEST)>1                /* CHECK POSITIONALS */    49611900
*          THEN                                                         49612000
*            DO;                                                        49612100
*              ZMS=' 8, "REQUEST'||          /**KPOSP* MSG*/            49612200
*                  REQUEST||                                            49612300
*                  '" "REQUEST"'||                                      49612400
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        49612500
*              ANS MSG('?IFAUSAGE ---> '||ZMS);                         49612600
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          49612700
*              ZMACRET=8;                    /* MACRO ERROR */          49612800
*            END;                                                       49612900
*/*PG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 49613000
*        ZCVAL='';                           /* INCORRECT KEYS FIELD */ 49613100
*        IF ENDTIME^=''                      /* CHECK FOR KEY */        49613200
*          THEN                                                         49613300
*            ZCVAL=ZCVAL||',ENDTIME';        /* INCORRECT KEY USED */   49613400
*        IF ENDDATA^=''                      /* CHECK FOR KEY */        49613500
*          THEN                                                         49613600
*            ZCVAL=ZCVAL||',ENDDATA';        /* INCORRECT KEY USED */   49613700
*        IF BEGTIME^=''                      /* CHECK FOR KEY */        49613800
*          THEN                                                         49613900
*            ZCVAL=ZCVAL||',BEGTIME';        /* INCORRECT KEY USED */   49614000
*        IF DATA^=''                         /* CHECK FOR KEY */        49614100
*          THEN                                                         49614200
*            ZCVAL=ZCVAL||',DATA';           /* INCORRECT KEY USED */   49614300
*        IF FORMAT^=''                       /* CHECK FOR KEY */        49614400
*          THEN                                                         49614500
*            ZCVAL=ZCVAL||',FORMAT';         /* INCORRECT KEY USED */   49614600
*        IF CURRENTDATA^=''                  /* CHECK FOR KEY */        49614700
*          THEN                                                         49614800
*            ZCVAL=ZCVAL||',CURRENTDATA';    /* INCORRECT KEY USED */   49614900
*        IF ZCVAL^=''                                                   49615000
*          THEN                                                         49615100
*            DO;                             /* INCORRECT KEYS USED */  49615200
*              ZCVAL=ZCVAL(2:LENGTH(ZCVAL));                            49615300
*              ZMS=' 8, "REQUEST'||          /**KMEIP* MSG*/            49615400
*                  REQUEST||'"'||                                       49615500
*                  ' DOES NOT ALLOW THE USE OF THE'||                   49615600
*                  ' FOLLOWING KEY(S) "'||                              49615700
*                  ZCVAL||'".';                                         49615800
*              ANS MSG('?IFAUSAGE ---> '||ZMS);                         49615900
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          49616000
*              ZMACRET=8;                    /* MACRO ERROR */          49616100
*            END;                                                       49616200
*/*PG.KXVAR01 NAME, RQD INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 49616300
*  IF NUMBER(PRODOWNER)>1                    /* CHECK POSITIONALS */    49616400
*    THEN                                                               49616500
*      DO;                                                              49616600
*        ZMS=' 8, "PRODOWNER'||              /**KPOSP* MSG*/            49616700
*            PRODOWNER||                                                49616800
*            '" "PRODOWNER"'||                                          49616900
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              49617000
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49617100
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49617200
*        ZMACRET=8;                          /* MACRO ERROR */          49617300
*      END;                                                             49617400
*/*PG.KXVAR03 NAME, RQD INPUT, KEYS -XVARIABLE-----------------------*/ 49617500
*  XPRODOWNER=PRODOWNER(1);                  /* SET XVARIABLE */        49617600
*  IF PRODOWNER(1)=''                        /* CHECK FOR NULL */       49617700
*   THEN                                                                49617800
*    DO;                                     /* KEY IS REQUIRED */      49617900
*        ZXPRODOWNER='';                     /* RESET IN/OUTPUT */      49618000
*        ZMS=' 8,  '||                                                  49618100
*            ' "PRODOWNER" KEY AND ITS ARGUMENT'||                      49618200
*            ' ARE REQUIRED.';               /**KRQDP* MSG*/            49618300
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49618400
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49618500
*        ZMACRET=8;                          /* MACRO ERROR */          49618600
*    END;                                                               49618700
*  ELSE                                                                 49618800
*    ZXPRODOWNER='INPUT';                    /* SET IN/OUTPUT */        49618900
*/*PG.KXVAR01 NAME, RQD INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 49619000
*  IF NUMBER(PRODNAME)>1                     /* CHECK POSITIONALS */    49619100
*    THEN                                                               49619200
*      DO;                                                              49619300
*        ZMS=' 8, "PRODNAME'||               /**KPOSP* MSG*/            49619400
*            PRODNAME||                                                 49619500
*            '" "PRODNAME"'||                                           49619600
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              49619700
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49619800
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49619900
*        ZMACRET=8;                          /* MACRO ERROR */          49620000
*      END;                                                             49620100
*/*PG.KXVAR03 NAME, RQD INPUT, KEYS -XVARIABLE-----------------------*/ 49620200
*  XPRODNAME=PRODNAME(1);                    /* SET XVARIABLE */        49620300
*  IF PRODNAME(1)=''                         /* CHECK FOR NULL */       49620400
*   THEN                                                                49620500
*    DO;                                     /* KEY IS REQUIRED */      49620600
*        ZXPRODNAME='';                      /* RESET IN/OUTPUT */      49620700
*        ZMS=' 8,  '||                                                  49620800
*            ' "PRODNAME" KEY AND ITS ARGUMENT'||                       49620900
*            ' ARE REQUIRED.';               /**KRQDP* MSG*/            49621000
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49621100
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49621200
*        ZMACRET=8;                          /* MACRO ERROR */          49621300
*    END;                                                               49621400
*  ELSE                                                                 49621500
*    ZXPRODNAME='INPUT';                     /* SET IN/OUTPUT */        49621600
*/*PG.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 49621700
*  IF PRODVERS='PRODVERS' | PRODVERS='()'    /*CHECK ENTRY*/            49621800
*    THEN                                                               49621900
*      DO;                                                              49622000
*        ZMS=' 8, THE "PRODVERS" KEY'||      /**KOPTP* MSG*/            49622100
*            ' MUST CONTAIN ONE'||                                      49622200
*            ' (OR MORE) ARGUMENT(S).';                                 49622300
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49622400
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49622500
*        ZMACRET=8;                          /* MACRO ERROR */          49622600
*      END;                                                             49622700
*  IF NUMBER(PRODVERS)>1                     /* CHECK POSITIONALS */    49622800
*    THEN                                                               49622900
*      DO;                                                              49623000
*        ZMS=' 8, "PRODVERS'||               /**KPOSP* MSG*/            49623100
*            PRODVERS||                                                 49623200
*            '" "PRODVERS"'||                                           49623300
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              49623400
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49623500
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49623600
*        ZMACRET=8;                          /* MACRO ERROR */          49623700
*      END;                                                             49623800
*/*PG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 49623900
*  ZXPRODVERS='INPUT';                       /* SET IN/OUTPUT */        49624000
*  XPRODVERS='NONE';                         /* SET DEFAULT */          49624100
*  IF PRODVERS(1)^=''                        /* CHECK FOR NULL */       49624200
*    THEN                                                               49624300
*      XPRODVERS=PRODVERS(1);                /* SET XVARIABLE */        49624400
*/*PG.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 49624500
*  IF PRODQUAL='PRODQUAL' | PRODQUAL='()'    /*CHECK ENTRY*/            49624600
*    THEN                                                               49624700
*      DO;                                                              49624800
*        ZMS=' 8, THE "PRODQUAL" KEY'||      /**KOPTP* MSG*/            49624900
*            ' MUST CONTAIN ONE'||                                      49625000
*            ' (OR MORE) ARGUMENT(S).';                                 49625100
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49625200
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49625300
*        ZMACRET=8;                          /* MACRO ERROR */          49625400
*      END;                                                             49625500
*  IF NUMBER(PRODQUAL)>1                     /* CHECK POSITIONALS */    49625600
*    THEN                                                               49625700
*      DO;                                                              49625800
*        ZMS=' 8, "PRODQUAL'||               /**KPOSP* MSG*/            49625900
*            PRODQUAL||                                                 49626000
*            '" "PRODQUAL"'||                                           49626100
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              49626200
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49626300
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49626400
*        ZMACRET=8;                          /* MACRO ERROR */          49626500
*      END;                                                             49626600
*/*PG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 49626700
*  ZXPRODQUAL='INPUT';                       /* SET IN/OUTPUT */        49626800
*  XPRODQUAL='NONE';                         /* SET DEFAULT */          49626900
*  IF PRODQUAL(1)^=''                        /* CHECK FOR NULL */       49627000
*    THEN                                                               49627100
*      XPRODQUAL=PRODQUAL(1);                /* SET XVARIABLE */        49627200
*/*PG.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 49627300
*  IF PRODID='PRODID' | PRODID='()'          /*CHECK ENTRY*/            49627400
*    THEN                                                               49627500
*      DO;                                                              49627600
*        ZMS=' 8, THE "PRODID" KEY'||        /**KOPTP* MSG*/            49627700
*            ' MUST CONTAIN ONE'||                                      49627800
*            ' (OR MORE) ARGUMENT(S).';                                 49627900
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49628000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49628100
*        ZMACRET=8;                          /* MACRO ERROR */          49628200
*      END;                                                             49628300
*  IF NUMBER(PRODID)>1                       /* CHECK POSITIONALS */    49628400
*    THEN                                                               49628500
*      DO;                                                              49628600
*        ZMS=' 8, "PRODID'||                 /**KPOSP* MSG*/            49628700
*            PRODID||                                                   49628800
*            '" "PRODID"'||                                             49628900
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              49629000
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49629100
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49629200
*        ZMACRET=8;                          /* MACRO ERROR */          49629300
*      END;                                                             49629400
*/*PG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 49629500
*  ZXPRODID='INPUT';                         /* SET IN/OUTPUT */        49629600
*  XPRODID='NONE';                           /* SET DEFAULT */          49629700
*  IF PRODID(1)^=''                          /* CHECK FOR NULL */       49629800
*    THEN                                                               49629900
*      XPRODID=PRODID(1);                    /* SET XVARIABLE */        49630000
*/*PG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 49630100
*  XDOMAIN='';                                                          49630200
*/*PG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 49630300
*  IF DOMAIN(1)='ADDRSP'                     /* CHECK FOR KEYWORD */    49630400
*     | DOMAIN(1)=''                         /* CHECK FOR NULL */       49630500
*    THEN                                                               49630600
*      DO;                                                              49630700
*        XDOMAIN='ADDRSP';                   /* SET XVARIABLE */        49630800
*        IF NUMBER(DOMAIN)>1                 /* CHECK POSITIONALS */    49630900
*          THEN                                                         49631000
*            DO;                                                        49631100
*              ZMS=' 8, "DOMAIN'||           /**KPOSP* MSG*/            49631200
*                  DOMAIN||                                             49631300
*                  '" "DOMAIN"'||                                       49631400
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        49631500
*              ANS MSG('?IFAUSAGE ---> '||ZMS);                         49631600
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          49631700
*              ZMACRET=8;                    /* MACRO ERROR */          49631800
*            END;                                                       49631900
*/*PG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 49632000
*        ZCVAL='';                           /* INCORRECT KEYS FIELD */ 49632100
*        IF SCOPE^=''                        /* CHECK FOR KEY */        49632200
*          THEN                                                         49632300
*            ZCVAL=ZCVAL||',SCOPE';          /* INCORRECT KEY USED */   49632400
*        IF ZCVAL^=''                                                   49632500
*          THEN                                                         49632600
*            DO;                             /* INCORRECT KEYS USED */  49632700
*              ZCVAL=ZCVAL(2:LENGTH(ZCVAL));                            49632800
*              ZMS=' 8, "DOMAIN'||           /**KMEIP* MSG*/            49632900
*                  DOMAIN||'"'||                                        49633000
*                  ' DOES NOT ALLOW THE USE OF THE'||                   49633100
*                  ' FOLLOWING KEY(S) "'||                              49633200
*                  ZCVAL||'".';                                         49633300
*              ANS MSG('?IFAUSAGE ---> '||ZMS);                         49633400
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          49633500
*              ZMACRET=8;                    /* MACRO ERROR */          49633600
*            END;                                                       49633700
*/*PG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 49633800
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KYWRDCTL DO GROUP */     49633900
*/*PG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 49634000
*  IF DOMAIN(1)='TASK'                       /* CHECK FOR KEYWORD */    49634100
*    THEN                                                               49634200
*      DO;                                                              49634300
*        XDOMAIN='TASK';                     /* SET XVARIABLE */        49634400
*        IF NUMBER(DOMAIN)>1                 /* CHECK POSITIONALS */    49634500
*          THEN                                                         49634600
*            DO;                                                        49634700
*              ZMS=' 8, "DOMAIN'||           /**KPOSP* MSG*/            49634800
*                  DOMAIN||                                             49634900
*                  '" "DOMAIN"'||                                       49635000
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        49635100
*              ANS MSG('?IFAUSAGE ---> '||ZMS);                         49635200
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          49635300
*              ZMACRET=8;                    /* MACRO ERROR */          49635400
*            END;                                                       49635500
*/*PG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 49635600
*  IF SCOPE='SCOPE'                          /* CHECK ENTRY */          49635700
*    THEN                                                               49635800
*      DO;                                                              49635900
*        ZMS=' 8, THE "SCOPE" KEY'||         /**KOPTP* MSG*/            49636000
*            ' MUST CONTAIN ONE'||                                      49636100
*            ' (OR MORE) ARGUMENT(S).';                                 49636200
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49636300
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49636400
*        ZMACRET=8;                          /* MACRO ERROR */          49636500
*      END;                                                             49636600
*  IF NUMBER(SCOPE)>1                        /* CHECK POSITIONALS */    49636700
*    THEN                                                               49636800
*      DO;                                                              49636900
*        ZMS=' 8, "SCOPE'||                  /**KPOSP* MSG*/            49637000
*            SCOPE||                                                    49637100
*            '" "SCOPE"'||                                              49637200
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              49637300
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49637400
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49637500
*        ZMACRET=8;                          /* MACRO ERROR */          49637600
*      END;                                                             49637700
*/*PG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 49637800
*  XSCOPE='';                                /* RESET XVARIABLE */      49637900
*  IF SCOPE(1) = 'ALL'                                                  49638000
*    THEN                                                               49638100
*      XSCOPE = 'ALL';                       /* SET XVARIABLE */        49638200
*/*PG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 49638300
*  IF SCOPE(1) = 'FUNCTION'                                             49638400
*    THEN                                                               49638500
*      XSCOPE = 'FUNCTION';                  /* SET XVARIABLE */        49638600
*/*PG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 49638700
*  ZXSCOPE='INPUT';                          /* SET IN/OUTPUT */        49638800
*  IF XSCOPE=''                              /* CHECK FOR KEYWORD */    49638900
*    THEN                                                               49639000
*      DO;                                   /* KEYWORD NOT ENTERED */  49639100
*        XSCOPE='ALL';                       /* SET DEFAULT */          49639200
*        IF SCOPE(1)^=''                                                49639300
*          THEN                                                         49639400
*            DO;                                                        49639500
*              ZXSCOPE='';                   /* RESET IN/OUTPUT */      49639600
*              ZMS=' 8, "SCOPE'||            /**KUKWP* MSG*/            49639700
*                  SCOPE||'"'||                                         49639800
*                  ' ARGUMENT 1 IS AN UNKNOWN KEYWORD. '||              49639900
*                  ' VALID KEYWORD CHOICE(S) ARE:'||                    49640000
*                  ' "ALL"'||                /* VALID KEYWORD */        49640100
*                  ' OR "FUNCTION".';        /* VALID KEYWORD */        49640200
*              ANS MSG('?IFAUSAGE ---> '||ZMS);                         49640300
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          49640400
*              ZMACRET=8;                    /* MACRO ERROR */          49640500
*            END;                                                       49640600
*      END;                                                             49640700
*/*PG.KKCTL05 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 49640800
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KYWRDCTL DO GROUP */     49640900
*/*PG.KKCTL06 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 49641000
*  IF DOMAIN='DOMAIN'                                                   49641100
*    | DOMAIN='()'                           /*CHECK ENTRY*/            49641200
*     THEN                                                              49641300
*       DO;                                                             49641400
*              ZMS=' 8, THE "DOMAIN" KEY'||  /**KOPTP* MSG*/            49641500
*                  ' MUST CONTAIN ONE'||                                49641600
*                  ' (OR MORE) ARGUMENT(S).';                           49641700
*              ANS MSG('?IFAUSAGE ---> '||ZMS);                         49641800
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          49641900
*              ZMACRET=8;                    /* MACRO ERROR */          49642000
*       END;                                                            49642100
*  ELSE                                                                 49642200
*    DO;                                                                49642300
*      ZXDOMAIN='INPUT';                     /* SET IN/OUTPUT */        49642400
*      IF XDOMAIN=''                         /* CHECK FOR KEYWORD */    49642500
*        THEN                                                           49642600
*          DO;                               /* KEYWORD NOT ENTERED */  49642700
*            XDOMAIN='ADDRSP';               /* SET DEFAULT */          49642800
*            IF DOMAIN(1)^=''                /* CHECK FOR KEYWORD */    49642900
*              THEN                                                     49643000
*                DO;                                                    49643100
*                  ZXDOMAIN='';              /* RESET IN/OUTPUT */      49643200
*              ZMS=' 8, "DOMAIN'||           /**KUKWP* MSG*/            49643300
*                  DOMAIN||'"'||                                        49643400
*                  ' ARGUMENT 1 IS AN UNKNOWN KEYWORD. '||              49643500
*                  ' VALID KEYWORD CHOICE(S) ARE:'||                    49643600
*                  ' "ADDRSP"'||             /* VALID KEYWORD */        49643700
*                  ' OR "TASK".';            /* VALID KEYWORD */        49643800
*              ANS MSG('?IFAUSAGE ---> '||ZMS);                         49643900
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          49644000
*              ZMACRET=8;                    /* MACRO ERROR */          49644100
*                END;                                                   49644200
*          END;                                                         49644300
*    END;                                                               49644400
*/*PG.KXVAR01 NAME, OPT OUTPUT, KEYS -EXCESSIVE ARGUMENTS------------*/ 49644500
*  IF PRTOKEN='PRTOKEN' | PRTOKEN='()'       /*CHECK ENTRY*/            49644600
*    THEN                                                               49644700
*      DO;                                                              49644800
*        ZMS=' 8, THE "PRTOKEN" KEY'||       /**KOPTP* MSG*/            49644900
*            ' MUST CONTAIN ONE'||                                      49645000
*            ' (OR MORE) ARGUMENT(S).';                                 49645100
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49645200
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49645300
*        ZMACRET=8;                          /* MACRO ERROR */          49645400
*      END;                                                             49645500
*  IF NUMBER(PRTOKEN)>1                      /* CHECK POSITIONALS */    49645600
*    THEN                                                               49645700
*      DO;                                                              49645800
*        ZMS=' 8, "PRTOKEN'||                /**KPOSP* MSG*/            49645900
*            PRTOKEN||                                                  49646000
*            '" "PRTOKEN"'||                                            49646100
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              49646200
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49646300
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49646400
*        ZMACRET=8;                          /* MACRO ERROR */          49646500
*      END;                                                             49646600
*/*PG.KXVAR15 NAME, OPT OUTPUT, KEYS -XVARIABLE----------------------*/ 49646700
*  IF PRTOKEN(1)^=''                         /* CHECK FOR NULL */       49646800
*    THEN                                                               49646900
*      DO;                                                              49647000
*        XPRTOKEN=PRTOKEN(1);                /* SET XVARIABLE */        49647100
*        ZXPRTOKEN='OUTPUT';                 /* SET OUTPUT */           49647200
*      END;                                                             49647300
*  ELSE                                                                 49647400
*    IF ZXPRTOKEN^=''                                                   49647500
*      THEN                                                             49647600
*        ZXPRTOKEN='';                       /* RESET OUTPUT */         49647700
*/*PG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 49647800
*  IF LINKAGE='LINKAGE'                      /* CHECK ENTRY */          49647900
*    THEN                                                               49648000
*      DO;                                                              49648100
*        ZMS=' 8, THE "LINKAGE" KEY'||       /**KOPTP* MSG*/            49648200
*            ' MUST CONTAIN ONE'||                                      49648300
*            ' (OR MORE) ARGUMENT(S).';                                 49648400
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49648500
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49648600
*        ZMACRET=8;                          /* MACRO ERROR */          49648700
*      END;                                                             49648800
*  IF NUMBER(LINKAGE)>1                      /* CHECK POSITIONALS */    49648900
*    THEN                                                               49649000
*      DO;                                                              49649100
*        ZMS=' 8, "LINKAGE'||                /**KPOSP* MSG*/            49649200
*            LINKAGE||                                                  49649300
*            '" "LINKAGE"'||                                            49649400
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              49649500
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49649600
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49649700
*        ZMACRET=8;                          /* MACRO ERROR */          49649800
*      END;                                                             49649900
*/*PG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 49650000
*  XLINKAGE='';                              /* RESET XVARIABLE */      49650100
*  IF LINKAGE(1) = 'SVC'                                                49650200
*    THEN                                                               49650300
*      XLINKAGE = 'SVC';                     /* SET XVARIABLE */        49650400
*/*PG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 49650500
*  IF LINKAGE(1) = 'BRANCH'                                             49650600
*    THEN                                                               49650700
*      XLINKAGE = 'BRANCH';                  /* SET XVARIABLE */        49650800
*/*PG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 49650900
*  ZXLINKAGE='INPUT';                        /* SET IN/OUTPUT */        49651000
*  IF XLINKAGE=''                            /* CHECK FOR KEYWORD */    49651100
*    THEN                                                               49651200
*      DO;                                   /* KEYWORD NOT ENTERED */  49651300
*        XLINKAGE='SVC';                     /* SET DEFAULT */          49651400
*        IF LINKAGE(1)^=''                                              49651500
*          THEN                                                         49651600
*            DO;                                                        49651700
*              ZXLINKAGE='';                 /* RESET IN/OUTPUT */      49651800
*              ZMS=' 8, "LINKAGE'||          /**KUKWP* MSG*/            49651900
*                  LINKAGE||'"'||                                       49652000
*                  ' ARGUMENT 1 IS AN UNKNOWN KEYWORD. '||              49652100
*                  ' VALID KEYWORD CHOICE(S) ARE:'||                    49652200
*                  ' "SVC"'||                /* VALID KEYWORD */        49652300
*                  ' OR "BRANCH".';          /* VALID KEYWORD */        49652400
*              ANS MSG('?IFAUSAGE ---> '||ZMS);                         49652500
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          49652600
*              ZMACRET=8;                    /* MACRO ERROR */          49652700
*            END;                                                       49652800
*      END;                                                             49652900
*/*PG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 49653000
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KYWRDCTL DO GROUP */     49653100
*/*PG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 49653200
*  IF REQUEST(1)='DEREGISTER'                /* CHECK FOR KEYWORD */    49653300
*    THEN                                                               49653400
*      DO;                                                              49653500
*        XREQUEST='DEREGISTER';              /* SET XVARIABLE */        49653600
*        IF NUMBER(REQUEST)>1                /* CHECK POSITIONALS */    49653700
*          THEN                                                         49653800
*            DO;                                                        49653900
*              ZMS=' 8, "REQUEST'||          /**KPOSP* MSG*/            49654000
*                  REQUEST||                                            49654100
*                  '" "REQUEST"'||                                      49654200
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        49654300
*              ANS MSG('?IFAUSAGE ---> '||ZMS);                         49654400
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          49654500
*              ZMACRET=8;                    /* MACRO ERROR */          49654600
*            END;                                                       49654700
*/*PG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 49654800
*        ZCVAL='';                           /* INCORRECT KEYS FIELD */ 49654900
*        IF DOMAIN^=''                       /* CHECK FOR KEY */        49655000
*          THEN                                                         49655100
*            ZCVAL=ZCVAL||',DOMAIN';         /* INCORRECT KEY USED */   49655200
*        IF SCOPE^=''                        /* CHECK FOR KEY */        49655300
*          THEN                                                         49655400
*            ZCVAL=ZCVAL||',SCOPE';          /* INCORRECT KEY USED */   49655500
*        IF BEGTIME^=''                      /* CHECK FOR KEY */        49655600
*          THEN                                                         49655700
*            ZCVAL=ZCVAL||',BEGTIME';        /* INCORRECT KEY USED */   49655800
*        IF DATA^=''                         /* CHECK FOR KEY */        49655900
*          THEN                                                         49656000
*            ZCVAL=ZCVAL||',DATA';           /* INCORRECT KEY USED */   49656100
*        IF FORMAT^=''                       /* CHECK FOR KEY */        49656200
*          THEN                                                         49656300
*            ZCVAL=ZCVAL||',FORMAT';         /* INCORRECT KEY USED */   49656400
*        IF CURRENTDATA^=''                  /* CHECK FOR KEY */        49656500
*          THEN                                                         49656600
*            ZCVAL=ZCVAL||',CURRENTDATA';    /* INCORRECT KEY USED */   49656700
*        IF ZCVAL^=''                                                   49656800
*          THEN                                                         49656900
*            DO;                             /* INCORRECT KEYS USED */  49657000
*              ZCVAL=ZCVAL(2:LENGTH(ZCVAL));                            49657100
*              ZMS=' 8, "REQUEST'||          /**KMEIP* MSG*/            49657200
*                  REQUEST||'"'||                                       49657300
*                  ' DOES NOT ALLOW THE USE OF THE'||                   49657400
*                  ' FOLLOWING KEY(S) "'||                              49657500
*                  ZCVAL||'".';                                         49657600
*              ANS MSG('?IFAUSAGE ---> '||ZMS);                         49657700
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          49657800
*              ZMACRET=8;                    /* MACRO ERROR */          49657900
*            END;                                                       49658000
*/*PG.KMEKY01 NAME, RQD INPUT, ME KEYS -XVARIABLE KEY----------------*/ 49658100
*  XDEREGPRODNAME='';                        /* RESET XVARIABLE */      49658200
*  IF PRODOWNER^=''                          /* CHECK ME KEY */         49658300
*    THEN                                                               49658400
*      DO;                                   /* VALID ME KEY */         49658500
*        IF NUMBER(PRODOWNER)>1              /* CHECK SUBLISTS */       49658600
*          THEN                                                         49658700
*            DO;                                                        49658800
*              ZMS=' 8, "PRODOWNER'||        /**KPOSP* MSG*/            49658900
*                  PRODOWNER||                                          49659000
*                  '" "PRODOWNER"'||                                    49659100
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        49659200
*              ANS MSG('?IFAUSAGE ---> '||ZMS);                         49659300
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          49659400
*              ZMACRET=8;                    /* MACRO ERROR */          49659500
*            END;                                                       49659600
*        XDEREGPRODNAME='PRODOWNER';         /* SET XVARIABLE */        49659700
*        XPRODOWNER=PRODOWNER(1);            /* SET XVARIABLE */        49659800
*        ZXDEREGPRODNAME='INPUT';            /* SET IN/OUTPUT */        49659900
*        ZXPRODOWNER='INPUT';                /* SET IN/OUTPUT */        49660000
*        IF PRODOWNER(1)=''                  /* CHECK ME KEY */         49660100
*          THEN                                                         49660200
*            DO;                                                        49660300
*              ZXDEREGPRODNAME='';           /* RESET IN/OUTPUT */      49660400
*              ZXPRODOWNER='';               /* RESET IN/OUTPUT */      49660500
*              ZMS=' 8,  '||                                            49660600
*                  ' "PRODOWNER" KEY AND ITS ARGUMENT'||                49660700
*                  ' ARE REQUIRED.';         /**KRQDP* MSG*/            49660800
*              ANS MSG('?IFAUSAGE ---> '||ZMS);                         49660900
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          49661000
*              ZMACRET=8;                    /* MACRO ERROR */          49661100
*           END;                                                        49661200
*      END;                                                             49661300
*/*PG.KMEKY02 NAME, RQD INPUT, ME KEYS -XVARIABLE KEY----------------*/ 49661400
*  IF PRTOKEN^=''                            /* CHECK ME KEY */         49661500
*    THEN                                                               49661600
*      DO;                                                              49661700
*        IF NUMBER(PRTOKEN)>1                /* CHECK SUBLISTS */       49661800
*          THEN                                                         49661900
*            DO;                                                        49662000
*              ZMS=' 8, "PRTOKEN'||          /**KPOSP* MSG*/            49662100
*                  PRTOKEN||                                            49662200
*                  '" "PRTOKEN"'||                                      49662300
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        49662400
*              ANS MSG('?IFAUSAGE ---> '||ZMS);                         49662500
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          49662600
*              ZMACRET=8;                    /* MACRO ERROR */          49662700
*            END;                                                       49662800
*        IF XDEREGPRODNAME=''                /* CHECK XVARIABLE */      49662900
*          THEN                                                         49663000
*            DO;                             /* VALID ME KEY */         49663100
*              XDEREGPRODNAME='PRTOKEN';     /* SET XVAR1 */            49663200
*              XPRTOKEN=PRTOKEN(1);          /* SET XVAR2 */            49663300
*              ZXDEREGPRODNAME='INPUT';      /* SET IN/OUTPUT */        49663400
*              ZXPRTOKEN='INPUT';            /* SET IN/OUTPUT */        49663500
*              IF PRTOKEN(1)=''              /* CHECK ME KEY */         49663600
*                THEN                                                   49663700
*                  DO;                                                  49663800
*                    ZXDEREGPRODNAME='';     /* RESET IN/OUTPUT */      49663900
*                    ZXPRTOKEN='';           /* RESET IN/OUTPUT */      49664000
*                    ZMS=' 8,  '||                                      49664100
*                        ' "PRTOKEN" KEY AND ITS ARGUMENT'||            49664200
*                        ' ARE REQUIRED.';   /**KRQDP* MSG*/            49664300
*                    ANS MSG('?IFAUSAGE ---> '||ZMS);                   49664400
*                    ANS(COMMENT(ZMS)) COL(MACLMAR);                    49664500
*                    ZMACRET=8;              /* MACRO ERROR */          49664600
*                  END;                                                 49664700
*            END;                                                       49664800
*          ELSE                                                         49664900
*            DO;                                                        49665000
*              ZMS=' 8, "PRTOKEN'||          /**KMEKP* MSG*/            49665100
*                  PRTOKEN||'"'||                                       49665200
*                  ' IS MUTUALLY EXCLUSIVE WITH THE "'||                49665300
*                  XDEREGPRODNAME||                                     49665400
*                  '" KEY.';                                            49665500
*              ANS MSG('?IFAUSAGE ---> '||ZMS);                         49665600
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          49665700
*              ZMACRET=8;                    /* MACRO ERROR */          49665800
*            END;                                                       49665900
*      END;                                                             49666000
*/*PG.KMEKY08 NAME, RQD INPUT, ME KEYS -ME KEY DEFAULT---------------*/ 49666100
*  IF XDEREGPRODNAME=''                      /* CHECK XVARIABLE */      49666200
*    THEN                                                               49666300
*      DO;                                                              49666400
*        XDEREGPRODNAME='PRODOWNER';         /* SET DEFAULT */          49666500
*        XPRODOWNER='0';                     /* SET DEFAULT */          49666600
*        ZXDEREGPRODNAME='';                 /* RESET IN/OUTPUT */      49666700
*        ZXPRODOWNER='';                     /* RESET IN/OUTPUT */      49666800
*        ZMS=' 8, ONE OF THE FOLLOWING'||    /**KMERP* MSG*/            49666900
*            ' MUTUALLY EXCLUSIVE KEY(S) IS'||                          49667000
*            ' REQUIRED:'||                                             49667100
*            ' "PRODOWNER"'||                /* VALID ME KEY */         49667200
*            ' OR "PRTOKEN".';               /* VALID ME KEY */         49667300
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49667400
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49667500
*        ZMACRET=8;                          /* MACRO ERROR */          49667600
*      END;                                                             49667700
*/*PG.KMEKY11 NAME, RQD INPUT, ME KEYS -START------------------------*/ 49667800
*  IF XDEREGPRODNAME='PRODOWNER'             /* CHECK FOR ME KEY */     49667900
*    THEN                                                               49668000
*      DO;   /**** START OF A MUTUALLY EXCLUSIVE KEY DO GROUP */        49668100
*/*PG.KXVAR01 NAME, RQD INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 49668200
*  IF NUMBER(PRODNAME)>1                     /* CHECK POSITIONALS */    49668300
*    THEN                                                               49668400
*      DO;                                                              49668500
*        ZMS=' 8, "PRODNAME'||               /**KPOSP* MSG*/            49668600
*            PRODNAME||                                                 49668700
*            '" "PRODNAME"'||                                           49668800
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              49668900
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49669000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49669100
*        ZMACRET=8;                          /* MACRO ERROR */          49669200
*      END;                                                             49669300
*/*PG.KXVAR03 NAME, RQD INPUT, KEYS -XVARIABLE-----------------------*/ 49669400
*  XPRODNAME=PRODNAME(1);                    /* SET XVARIABLE */        49669500
*  IF PRODNAME(1)=''                         /* CHECK FOR NULL */       49669600
*   THEN                                                                49669700
*    DO;                                     /* KEY IS REQUIRED */      49669800
*        ZXPRODNAME='';                      /* RESET IN/OUTPUT */      49669900
*        ZMS=' 8,  '||                                                  49670000
*            ' "PRODNAME" KEY AND ITS ARGUMENT'||                       49670100
*            ' ARE REQUIRED.';               /**KRQDP* MSG*/            49670200
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49670300
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49670400
*        ZMACRET=8;                          /* MACRO ERROR */          49670500
*    END;                                                               49670600
*  ELSE                                                                 49670700
*    ZXPRODNAME='INPUT';                     /* SET IN/OUTPUT */        49670800
*/*PG.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 49670900
*  IF PRODVERS='PRODVERS' | PRODVERS='()'    /*CHECK ENTRY*/            49671000
*    THEN                                                               49671100
*      DO;                                                              49671200
*        ZMS=' 8, THE "PRODVERS" KEY'||      /**KOPTP* MSG*/            49671300
*            ' MUST CONTAIN ONE'||                                      49671400
*            ' (OR MORE) ARGUMENT(S).';                                 49671500
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49671600
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49671700
*        ZMACRET=8;                          /* MACRO ERROR */          49671800
*      END;                                                             49671900
*  IF NUMBER(PRODVERS)>1                     /* CHECK POSITIONALS */    49672000
*    THEN                                                               49672100
*      DO;                                                              49672200
*        ZMS=' 8, "PRODVERS'||               /**KPOSP* MSG*/            49672300
*            PRODVERS||                                                 49672400
*            '" "PRODVERS"'||                                           49672500
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              49672600
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49672700
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49672800
*        ZMACRET=8;                          /* MACRO ERROR */          49672900
*      END;                                                             49673000
*/*PG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 49673100
*  ZXPRODVERS='INPUT';                       /* SET IN/OUTPUT */        49673200
*  XPRODVERS='NONE';                         /* SET DEFAULT */          49673300
*  IF PRODVERS(1)^=''                        /* CHECK FOR NULL */       49673400
*    THEN                                                               49673500
*      XPRODVERS=PRODVERS(1);                /* SET XVARIABLE */        49673600
*/*PG.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 49673700
*  IF PRODQUAL='PRODQUAL' | PRODQUAL='()'    /*CHECK ENTRY*/            49673800
*    THEN                                                               49673900
*      DO;                                                              49674000
*        ZMS=' 8, THE "PRODQUAL" KEY'||      /**KOPTP* MSG*/            49674100
*            ' MUST CONTAIN ONE'||                                      49674200
*            ' (OR MORE) ARGUMENT(S).';                                 49674300
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49674400
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49674500
*        ZMACRET=8;                          /* MACRO ERROR */          49674600
*      END;                                                             49674700
*  IF NUMBER(PRODQUAL)>1                     /* CHECK POSITIONALS */    49674800
*    THEN                                                               49674900
*      DO;                                                              49675000
*        ZMS=' 8, "PRODQUAL'||               /**KPOSP* MSG*/            49675100
*            PRODQUAL||                                                 49675200
*            '" "PRODQUAL"'||                                           49675300
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              49675400
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49675500
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49675600
*        ZMACRET=8;                          /* MACRO ERROR */          49675700
*      END;                                                             49675800
*/*PG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 49675900
*  ZXPRODQUAL='INPUT';                       /* SET IN/OUTPUT */        49676000
*  XPRODQUAL='NONE';                         /* SET DEFAULT */          49676100
*  IF PRODQUAL(1)^=''                        /* CHECK FOR NULL */       49676200
*    THEN                                                               49676300
*      XPRODQUAL=PRODQUAL(1);                /* SET XVARIABLE */        49676400
*/*PG.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 49676500
*  IF PRODID='PRODID' | PRODID='()'          /*CHECK ENTRY*/            49676600
*    THEN                                                               49676700
*      DO;                                                              49676800
*        ZMS=' 8, THE "PRODID" KEY'||        /**KOPTP* MSG*/            49676900
*            ' MUST CONTAIN ONE'||                                      49677000
*            ' (OR MORE) ARGUMENT(S).';                                 49677100
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49677200
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49677300
*        ZMACRET=8;                          /* MACRO ERROR */          49677400
*      END;                                                             49677500
*  IF NUMBER(PRODID)>1                       /* CHECK POSITIONALS */    49677600
*    THEN                                                               49677700
*      DO;                                                              49677800
*        ZMS=' 8, "PRODID'||                 /**KPOSP* MSG*/            49677900
*            PRODID||                                                   49678000
*            '" "PRODID"'||                                             49678100
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              49678200
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49678300
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49678400
*        ZMACRET=8;                          /* MACRO ERROR */          49678500
*      END;                                                             49678600
*/*PG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 49678700
*  ZXPRODID='INPUT';                         /* SET IN/OUTPUT */        49678800
*  XPRODID='NONE';                           /* SET DEFAULT */          49678900
*  IF PRODID(1)^=''                          /* CHECK FOR NULL */       49679000
*    THEN                                                               49679100
*      XPRODID=PRODID(1);                    /* SET XVARIABLE */        49679200
*/*PG.KMEKY10 NAME, RQD INPUT, ME KEYS -END--------------------------*/ 49679300
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KEY DO GROUP */          49679400
*/*PG.KMEKY12 NAME, RQD INPUT, ME KEYS -DISALLOWED KEYS--------------*/ 49679500
*  IF XDEREGPRODNAME='PRTOKEN'               /* CHECK FOR ME KEY */     49679600
*    THEN                                                               49679700
*      DO;                                   /*DISALLOWED KEYS CHECK */ 49679800
*        ZCVAL='';                           /* INCORRECT KEYS FIELD */ 49679900
*        IF PRODNAME^=''                     /* CHECK KEY */            49680000
*          THEN                                                         49680100
*            ZCVAL=ZCVAL||',PRODNAME';       /* INCORRECT KEY USED */   49680200
*        IF PRODVERS^=''                     /* CHECK KEY */            49680300
*          THEN                                                         49680400
*            ZCVAL=ZCVAL||',PRODVERS';       /* INCORRECT KEY USED */   49680500
*        IF PRODQUAL^=''                     /* CHECK KEY */            49680600
*          THEN                                                         49680700
*            ZCVAL=ZCVAL||',PRODQUAL';       /* INCORRECT KEY USED */   49680800
*        IF PRODID^=''                       /* CHECK KEY */            49680900
*          THEN                                                         49681000
*            ZCVAL=ZCVAL||',PRODID';         /* INCORRECT KEY USED */   49681100
*        IF ZCVAL^=''                                                   49681200
*          THEN                                                         49681300
*            DO;                             /* INCORRECT KEYS USED */  49681400
*              ZCVAL=ZCVAL(2:LENGTH(ZCVAL));                            49681500
*              ZMS=' 8, "PRTOKEN'||          /**KMEIP* MSG*/            49681600
*                  '"'||                                                49681700
*                  ' DOES NOT ALLOW THE USE OF THE'||                   49681800
*                  ' FOLLOWING KEY(S) "'||                              49681900
*                  ZCVAL||'".';                                         49682000
*              ANS MSG('?IFAUSAGE ---> '||ZMS);                         49682100
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          49682200
*              ZMACRET=8;                    /* MACRO ERROR */          49682300
*            END;                                                       49682400
*      END;                                                             49682500
*/*PG.KXVAR01 NAME, OPT OUTPUT, KEYS -EXCESSIVE ARGUMENTS------------*/ 49682600
*  IF ENDTIME='ENDTIME' | ENDTIME='()'       /*CHECK ENTRY*/            49682700
*    THEN                                                               49682800
*      DO;                                                              49682900
*        ZMS=' 8, THE "ENDTIME" KEY'||       /**KOPTP* MSG*/            49683000
*            ' MUST CONTAIN ONE'||                                      49683100
*            ' (OR MORE) ARGUMENT(S).';                                 49683200
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49683300
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49683400
*        ZMACRET=8;                          /* MACRO ERROR */          49683500
*      END;                                                             49683600
*  IF NUMBER(ENDTIME)>1                      /* CHECK POSITIONALS */    49683700
*    THEN                                                               49683800
*      DO;                                                              49683900
*        ZMS=' 8, "ENDTIME'||                /**KPOSP* MSG*/            49684000
*            ENDTIME||                                                  49684100
*            '" "ENDTIME"'||                                            49684200
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              49684300
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49684400
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49684500
*        ZMACRET=8;                          /* MACRO ERROR */          49684600
*      END;                                                             49684700
*/*PG.KXVAR15 NAME, OPT OUTPUT, KEYS -XVARIABLE----------------------*/ 49684800
*  IF ENDTIME(1)^=''                         /* CHECK FOR NULL */       49684900
*    THEN                                                               49685000
*      DO;                                                              49685100
*        XENDTIME=ENDTIME(1);                /* SET XVARIABLE */        49685200
*        ZXENDTIME='OUTPUT';                 /* SET OUTPUT */           49685300
*      END;                                                             49685400
*  ELSE                                                                 49685500
*    IF ZXENDTIME^=''                                                   49685600
*      THEN                                                             49685700
*        ZXENDTIME='';                       /* RESET OUTPUT */         49685800
*/*PG.KXVAR01 NAME, OPT OUTPUT, KEYS -EXCESSIVE ARGUMENTS------------*/ 49685900
*  IF ENDDATA='ENDDATA' | ENDDATA='()'       /*CHECK ENTRY*/            49686000
*    THEN                                                               49686100
*      DO;                                                              49686200
*        ZMS=' 8, THE "ENDDATA" KEY'||       /**KOPTP* MSG*/            49686300
*            ' MUST CONTAIN ONE'||                                      49686400
*            ' (OR MORE) ARGUMENT(S).';                                 49686500
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49686600
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49686700
*        ZMACRET=8;                          /* MACRO ERROR */          49686800
*      END;                                                             49686900
*  IF NUMBER(ENDDATA)>1                      /* CHECK POSITIONALS */    49687000
*    THEN                                                               49687100
*      DO;                                                              49687200
*        ZMS=' 8, "ENDDATA'||                /**KPOSP* MSG*/            49687300
*            ENDDATA||                                                  49687400
*            '" "ENDDATA"'||                                            49687500
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              49687600
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49687700
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49687800
*        ZMACRET=8;                          /* MACRO ERROR */          49687900
*      END;                                                             49688000
*/*PG.KXVAR15 NAME, OPT OUTPUT, KEYS -XVARIABLE----------------------*/ 49688100
*  IF ENDDATA(1)^=''                         /* CHECK FOR NULL */       49688200
*    THEN                                                               49688300
*      DO;                                                              49688400
*        XENDDATA=ENDDATA(1);                /* SET XVARIABLE */        49688500
*        ZXENDDATA='OUTPUT';                 /* SET OUTPUT */           49688600
*      END;                                                             49688700
*  ELSE                                                                 49688800
*    IF ZXENDDATA^=''                                                   49688900
*      THEN                                                             49689000
*        ZXENDDATA='';                       /* RESET OUTPUT */         49689100
*/*PG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 49689200
*  IF LINKAGE='LINKAGE'                      /* CHECK ENTRY */          49689300
*    THEN                                                               49689400
*      DO;                                                              49689500
*        ZMS=' 8, THE "LINKAGE" KEY'||       /**KOPTP* MSG*/            49689600
*            ' MUST CONTAIN ONE'||                                      49689700
*            ' (OR MORE) ARGUMENT(S).';                                 49689800
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49689900
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49690000
*        ZMACRET=8;                          /* MACRO ERROR */          49690100
*      END;                                                             49690200
*  IF NUMBER(LINKAGE)>1                      /* CHECK POSITIONALS */    49690300
*    THEN                                                               49690400
*      DO;                                                              49690500
*        ZMS=' 8, "LINKAGE'||                /**KPOSP* MSG*/            49690600
*            LINKAGE||                                                  49690700
*            '" "LINKAGE"'||                                            49690800
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              49690900
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49691000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49691100
*        ZMACRET=8;                          /* MACRO ERROR */          49691200
*      END;                                                             49691300
*/*PG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 49691400
*  XLINKAGE='';                              /* RESET XVARIABLE */      49691500
*  IF LINKAGE(1) = 'SVC'                                                49691600
*    THEN                                                               49691700
*      XLINKAGE = 'SVC';                     /* SET XVARIABLE */        49691800
*/*PG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 49691900
*  IF LINKAGE(1) = 'BRANCH'                                             49692000
*    THEN                                                               49692100
*      XLINKAGE = 'BRANCH';                  /* SET XVARIABLE */        49692200
*/*PG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 49692300
*  ZXLINKAGE='INPUT';                        /* SET IN/OUTPUT */        49692400
*  IF XLINKAGE=''                            /* CHECK FOR KEYWORD */    49692500
*    THEN                                                               49692600
*      DO;                                   /* KEYWORD NOT ENTERED */  49692700
*        XLINKAGE='SVC';                     /* SET DEFAULT */          49692800
*        IF LINKAGE(1)^=''                                              49692900
*          THEN                                                         49693000
*            DO;                                                        49693100
*              ZXLINKAGE='';                 /* RESET IN/OUTPUT */      49693200
*              ZMS=' 8, "LINKAGE'||          /**KUKWP* MSG*/            49693300
*                  LINKAGE||'"'||                                       49693400
*                  ' ARGUMENT 1 IS AN UNKNOWN KEYWORD. '||              49693500
*                  ' VALID KEYWORD CHOICE(S) ARE:'||                    49693600
*                  ' "SVC"'||                /* VALID KEYWORD */        49693700
*                  ' OR "BRANCH".';          /* VALID KEYWORD */        49693800
*              ANS MSG('?IFAUSAGE ---> '||ZMS);                         49693900
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          49694000
*              ZMACRET=8;                    /* MACRO ERROR */          49694100
*            END;                                                       49694200
*      END;                                                             49694300
*/*PG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 49694400
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KYWRDCTL DO GROUP */     49694500
*/*PG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 49694600
*  IF REQUEST(1)='FUNCTIONBEGIN'             /* CHECK FOR KEYWORD */    49694700
*    THEN                                                               49694800
*      DO;                                                              49694900
*        XREQUEST='FUNCTIONBEGIN';           /* SET XVARIABLE */        49695000
*        IF NUMBER(REQUEST)>1                /* CHECK POSITIONALS */    49695100
*          THEN                                                         49695200
*            DO;                                                        49695300
*              ZMS=' 8, "REQUEST'||          /**KPOSP* MSG*/            49695400
*                  REQUEST||                                            49695500
*                  '" "REQUEST"'||                                      49695600
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        49695700
*              ANS MSG('?IFAUSAGE ---> '||ZMS);                         49695800
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          49695900
*              ZMACRET=8;                    /* MACRO ERROR */          49696000
*            END;                                                       49696100
*/*PG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 49696200
*        ZCVAL='';                           /* INCORRECT KEYS FIELD */ 49696300
*        IF DOMAIN^=''                       /* CHECK FOR KEY */        49696400
*          THEN                                                         49696500
*            ZCVAL=ZCVAL||',DOMAIN';         /* INCORRECT KEY USED */   49696600
*        IF SCOPE^=''                        /* CHECK FOR KEY */        49696700
*          THEN                                                         49696800
*            ZCVAL=ZCVAL||',SCOPE';          /* INCORRECT KEY USED */   49696900
*        IF ENDTIME^=''                      /* CHECK FOR KEY */        49697000
*          THEN                                                         49697100
*            ZCVAL=ZCVAL||',ENDTIME';        /* INCORRECT KEY USED */   49697200
*        IF ENDDATA^=''                      /* CHECK FOR KEY */        49697300
*          THEN                                                         49697400
*            ZCVAL=ZCVAL||',ENDDATA';        /* INCORRECT KEY USED */   49697500
*        IF DATA^=''                         /* CHECK FOR KEY */        49697600
*          THEN                                                         49697700
*            ZCVAL=ZCVAL||',DATA';           /* INCORRECT KEY USED */   49697800
*        IF FORMAT^=''                       /* CHECK FOR KEY */        49697900
*          THEN                                                         49698000
*            ZCVAL=ZCVAL||',FORMAT';         /* INCORRECT KEY USED */   49698100
*        IF CURRENTDATA^=''                  /* CHECK FOR KEY */        49698200
*          THEN                                                         49698300
*            ZCVAL=ZCVAL||',CURRENTDATA';    /* INCORRECT KEY USED */   49698400
*        IF ZCVAL^=''                                                   49698500
*          THEN                                                         49698600
*            DO;                             /* INCORRECT KEYS USED */  49698700
*              ZCVAL=ZCVAL(2:LENGTH(ZCVAL));                            49698800
*              ZMS=' 8, "REQUEST'||          /**KMEIP* MSG*/            49698900
*                  REQUEST||'"'||                                       49699000
*                  ' DOES NOT ALLOW THE USE OF THE'||                   49699100
*                  ' FOLLOWING KEY(S) "'||                              49699200
*                  ZCVAL||'".';                                         49699300
*              ANS MSG('?IFAUSAGE ---> '||ZMS);                         49699400
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          49699500
*              ZMACRET=8;                    /* MACRO ERROR */          49699600
*            END;                                                       49699700
*/*PG.KMEKY01 NAME, RQD INPUT, ME KEYS -XVARIABLE KEY----------------*/ 49699800
*  XBEGINPRODNAME='';                        /* RESET XVARIABLE */      49699900
*  IF PRODOWNER^=''                          /* CHECK ME KEY */         49700000
*    THEN                                                               49700100
*      DO;                                   /* VALID ME KEY */         49700200
*        IF NUMBER(PRODOWNER)>1              /* CHECK SUBLISTS */       49700300
*          THEN                                                         49700400
*            DO;                                                        49700500
*              ZMS=' 8, "PRODOWNER'||        /**KPOSP* MSG*/            49700600
*                  PRODOWNER||                                          49700700
*                  '" "PRODOWNER"'||                                    49700800
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        49700900
*              ANS MSG('?IFAUSAGE ---> '||ZMS);                         49701000
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          49701100
*              ZMACRET=8;                    /* MACRO ERROR */          49701200
*            END;                                                       49701300
*        XBEGINPRODNAME='PRODOWNER';         /* SET XVARIABLE */        49701400
*        XPRODOWNER=PRODOWNER(1);            /* SET XVARIABLE */        49701500
*        ZXBEGINPRODNAME='INPUT';            /* SET IN/OUTPUT */        49701600
*        ZXPRODOWNER='INPUT';                /* SET IN/OUTPUT */        49701700
*        IF PRODOWNER(1)=''                  /* CHECK ME KEY */         49701800
*          THEN                                                         49701900
*            DO;                                                        49702000
*              ZXBEGINPRODNAME='';           /* RESET IN/OUTPUT */      49702100
*              ZXPRODOWNER='';               /* RESET IN/OUTPUT */      49702200
*              ZMS=' 8,  '||                                            49702300
*                  ' "PRODOWNER" KEY AND ITS ARGUMENT'||                49702400
*                  ' ARE REQUIRED.';         /**KRQDP* MSG*/            49702500
*              ANS MSG('?IFAUSAGE ---> '||ZMS);                         49702600
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          49702700
*              ZMACRET=8;                    /* MACRO ERROR */          49702800
*           END;                                                        49702900
*      END;                                                             49703000
*/*PG.KMEKY02 NAME, RQD INPUT, ME KEYS -XVARIABLE KEY----------------*/ 49703100
*  IF PRTOKEN^=''                            /* CHECK ME KEY */         49703200
*    THEN                                                               49703300
*      DO;                                                              49703400
*        IF NUMBER(PRTOKEN)>1                /* CHECK SUBLISTS */       49703500
*          THEN                                                         49703600
*            DO;                                                        49703700
*              ZMS=' 8, "PRTOKEN'||          /**KPOSP* MSG*/            49703800
*                  PRTOKEN||                                            49703900
*                  '" "PRTOKEN"'||                                      49704000
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        49704100
*              ANS MSG('?IFAUSAGE ---> '||ZMS);                         49704200
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          49704300
*              ZMACRET=8;                    /* MACRO ERROR */          49704400
*            END;                                                       49704500
*        IF XBEGINPRODNAME=''                /* CHECK XVARIABLE */      49704600
*          THEN                                                         49704700
*            DO;                             /* VALID ME KEY */         49704800
*              XBEGINPRODNAME='PRTOKEN';     /* SET XVAR1 */            49704900
*              XPRTOKEN=PRTOKEN(1);          /* SET XVAR2 */            49705000
*              ZXBEGINPRODNAME='INPUT';      /* SET IN/OUTPUT */        49705100
*              ZXPRTOKEN='INPUT';            /* SET IN/OUTPUT */        49705200
*              IF PRTOKEN(1)=''              /* CHECK ME KEY */         49705300
*                THEN                                                   49705400
*                  DO;                                                  49705500
*                    ZXBEGINPRODNAME='';     /* RESET IN/OUTPUT */      49705600
*                    ZXPRTOKEN='';           /* RESET IN/OUTPUT */      49705700
*                    ZMS=' 8,  '||                                      49705800
*                        ' "PRTOKEN" KEY AND ITS ARGUMENT'||            49705900
*                        ' ARE REQUIRED.';   /**KRQDP* MSG*/            49706000
*                    ANS MSG('?IFAUSAGE ---> '||ZMS);                   49706100
*                    ANS(COMMENT(ZMS)) COL(MACLMAR);                    49706200
*                    ZMACRET=8;              /* MACRO ERROR */          49706300
*                  END;                                                 49706400
*            END;                                                       49706500
*          ELSE                                                         49706600
*            DO;                                                        49706700
*              ZMS=' 8, "PRTOKEN'||          /**KMEKP* MSG*/            49706800
*                  PRTOKEN||'"'||                                       49706900
*                  ' IS MUTUALLY EXCLUSIVE WITH THE "'||                49707000
*                  XBEGINPRODNAME||                                     49707100
*                  '" KEY.';                                            49707200
*              ANS MSG('?IFAUSAGE ---> '||ZMS);                         49707300
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          49707400
*              ZMACRET=8;                    /* MACRO ERROR */          49707500
*            END;                                                       49707600
*      END;                                                             49707700
*/*PG.KMEKY08 NAME, RQD INPUT, ME KEYS -ME KEY DEFAULT---------------*/ 49707800
*  IF XBEGINPRODNAME=''                      /* CHECK XVARIABLE */      49707900
*    THEN                                                               49708000
*      DO;                                                              49708100
*        XBEGINPRODNAME='PRODOWNER';         /* SET DEFAULT */          49708200
*        XPRODOWNER='0';                     /* SET DEFAULT */          49708300
*        ZXBEGINPRODNAME='';                 /* RESET IN/OUTPUT */      49708400
*        ZXPRODOWNER='';                     /* RESET IN/OUTPUT */      49708500
*        ZMS=' 8, ONE OF THE FOLLOWING'||    /**KMERP* MSG*/            49708600
*            ' MUTUALLY EXCLUSIVE KEY(S) IS'||                          49708700
*            ' REQUIRED:'||                                             49708800
*            ' "PRODOWNER"'||                /* VALID ME KEY */         49708900
*            ' OR "PRTOKEN".';               /* VALID ME KEY */         49709000
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49709100
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49709200
*        ZMACRET=8;                          /* MACRO ERROR */          49709300
*      END;                                                             49709400
*/*PG.KMEKY11 NAME, RQD INPUT, ME KEYS -START------------------------*/ 49709500
*  IF XBEGINPRODNAME='PRODOWNER'             /* CHECK FOR ME KEY */     49709600
*    THEN                                                               49709700
*      DO;   /**** START OF A MUTUALLY EXCLUSIVE KEY DO GROUP */        49709800
*/*PG.KXVAR01 NAME, RQD INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 49709900
*  IF NUMBER(PRODNAME)>1                     /* CHECK POSITIONALS */    49710000
*    THEN                                                               49710100
*      DO;                                                              49710200
*        ZMS=' 8, "PRODNAME'||               /**KPOSP* MSG*/            49710300
*            PRODNAME||                                                 49710400
*            '" "PRODNAME"'||                                           49710500
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              49710600
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49710700
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49710800
*        ZMACRET=8;                          /* MACRO ERROR */          49710900
*      END;                                                             49711000
*/*PG.KXVAR03 NAME, RQD INPUT, KEYS -XVARIABLE-----------------------*/ 49711100
*  XPRODNAME=PRODNAME(1);                    /* SET XVARIABLE */        49711200
*  IF PRODNAME(1)=''                         /* CHECK FOR NULL */       49711300
*   THEN                                                                49711400
*    DO;                                     /* KEY IS REQUIRED */      49711500
*        ZXPRODNAME='';                      /* RESET IN/OUTPUT */      49711600
*        ZMS=' 8,  '||                                                  49711700
*            ' "PRODNAME" KEY AND ITS ARGUMENT'||                       49711800
*            ' ARE REQUIRED.';               /**KRQDP* MSG*/            49711900
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49712000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49712100
*        ZMACRET=8;                          /* MACRO ERROR */          49712200
*    END;                                                               49712300
*  ELSE                                                                 49712400
*    ZXPRODNAME='INPUT';                     /* SET IN/OUTPUT */        49712500
*/*PG.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 49712600
*  IF PRODVERS='PRODVERS' | PRODVERS='()'    /*CHECK ENTRY*/            49712700
*    THEN                                                               49712800
*      DO;                                                              49712900
*        ZMS=' 8, THE "PRODVERS" KEY'||      /**KOPTP* MSG*/            49713000
*            ' MUST CONTAIN ONE'||                                      49713100
*            ' (OR MORE) ARGUMENT(S).';                                 49713200
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49713300
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49713400
*        ZMACRET=8;                          /* MACRO ERROR */          49713500
*      END;                                                             49713600
*  IF NUMBER(PRODVERS)>1                     /* CHECK POSITIONALS */    49713700
*    THEN                                                               49713800
*      DO;                                                              49713900
*        ZMS=' 8, "PRODVERS'||               /**KPOSP* MSG*/            49714000
*            PRODVERS||                                                 49714100
*            '" "PRODVERS"'||                                           49714200
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              49714300
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49714400
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49714500
*        ZMACRET=8;                          /* MACRO ERROR */          49714600
*      END;                                                             49714700
*/*PG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 49714800
*  ZXPRODVERS='INPUT';                       /* SET IN/OUTPUT */        49714900
*  XPRODVERS='NONE';                         /* SET DEFAULT */          49715000
*  IF PRODVERS(1)^=''                        /* CHECK FOR NULL */       49715100
*    THEN                                                               49715200
*      XPRODVERS=PRODVERS(1);                /* SET XVARIABLE */        49715300
*/*PG.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 49715400
*  IF PRODQUAL='PRODQUAL' | PRODQUAL='()'    /*CHECK ENTRY*/            49715500
*    THEN                                                               49715600
*      DO;                                                              49715700
*        ZMS=' 8, THE "PRODQUAL" KEY'||      /**KOPTP* MSG*/            49715800
*            ' MUST CONTAIN ONE'||                                      49715900
*            ' (OR MORE) ARGUMENT(S).';                                 49716000
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49716100
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49716200
*        ZMACRET=8;                          /* MACRO ERROR */          49716300
*      END;                                                             49716400
*  IF NUMBER(PRODQUAL)>1                     /* CHECK POSITIONALS */    49716500
*    THEN                                                               49716600
*      DO;                                                              49716700
*        ZMS=' 8, "PRODQUAL'||               /**KPOSP* MSG*/            49716800
*            PRODQUAL||                                                 49716900
*            '" "PRODQUAL"'||                                           49717000
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              49717100
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49717200
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49717300
*        ZMACRET=8;                          /* MACRO ERROR */          49717400
*      END;                                                             49717500
*/*PG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 49717600
*  ZXPRODQUAL='INPUT';                       /* SET IN/OUTPUT */        49717700
*  XPRODQUAL='NONE';                         /* SET DEFAULT */          49717800
*  IF PRODQUAL(1)^=''                        /* CHECK FOR NULL */       49717900
*    THEN                                                               49718000
*      XPRODQUAL=PRODQUAL(1);                /* SET XVARIABLE */        49718100
*/*PG.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 49718200
*  IF PRODID='PRODID' | PRODID='()'          /*CHECK ENTRY*/            49718300
*    THEN                                                               49718400
*      DO;                                                              49718500
*        ZMS=' 8, THE "PRODID" KEY'||        /**KOPTP* MSG*/            49718600
*            ' MUST CONTAIN ONE'||                                      49718700
*            ' (OR MORE) ARGUMENT(S).';                                 49718800
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49718900
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49719000
*        ZMACRET=8;                          /* MACRO ERROR */          49719100
*      END;                                                             49719200
*  IF NUMBER(PRODID)>1                       /* CHECK POSITIONALS */    49719300
*    THEN                                                               49719400
*      DO;                                                              49719500
*        ZMS=' 8, "PRODID'||                 /**KPOSP* MSG*/            49719600
*            PRODID||                                                   49719700
*            '" "PRODID"'||                                             49719800
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              49719900
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49720000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49720100
*        ZMACRET=8;                          /* MACRO ERROR */          49720200
*      END;                                                             49720300
*/*PG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 49720400
*  ZXPRODID='INPUT';                         /* SET IN/OUTPUT */        49720500
*  XPRODID='NONE';                           /* SET DEFAULT */          49720600
*  IF PRODID(1)^=''                          /* CHECK FOR NULL */       49720700
*    THEN                                                               49720800
*      XPRODID=PRODID(1);                    /* SET XVARIABLE */        49720900
*/*PG.KMEKY10 NAME, RQD INPUT, ME KEYS -END--------------------------*/ 49721000
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KEY DO GROUP */          49721100
*/*PG.KMEKY12 NAME, RQD INPUT, ME KEYS -DISALLOWED KEYS--------------*/ 49721200
*  IF XBEGINPRODNAME='PRTOKEN'               /* CHECK FOR ME KEY */     49721300
*    THEN                                                               49721400
*      DO;                                   /*DISALLOWED KEYS CHECK */ 49721500
*        ZCVAL='';                           /* INCORRECT KEYS FIELD */ 49721600
*        IF PRODNAME^=''                     /* CHECK KEY */            49721700
*          THEN                                                         49721800
*            ZCVAL=ZCVAL||',PRODNAME';       /* INCORRECT KEY USED */   49721900
*        IF PRODVERS^=''                     /* CHECK KEY */            49722000
*          THEN                                                         49722100
*            ZCVAL=ZCVAL||',PRODVERS';       /* INCORRECT KEY USED */   49722200
*        IF PRODQUAL^=''                     /* CHECK KEY */            49722300
*          THEN                                                         49722400
*            ZCVAL=ZCVAL||',PRODQUAL';       /* INCORRECT KEY USED */   49722500
*        IF PRODID^=''                       /* CHECK KEY */            49722600
*          THEN                                                         49722700
*            ZCVAL=ZCVAL||',PRODID';         /* INCORRECT KEY USED */   49722800
*        IF ZCVAL^=''                                                   49722900
*          THEN                                                         49723000
*            DO;                             /* INCORRECT KEYS USED */  49723100
*              ZCVAL=ZCVAL(2:LENGTH(ZCVAL));                            49723200
*              ZMS=' 8, "PRTOKEN'||          /**KMEIP* MSG*/            49723300
*                  '"'||                                                49723400
*                  ' DOES NOT ALLOW THE USE OF THE'||                   49723500
*                  ' FOLLOWING KEY(S) "'||                              49723600
*                  ZCVAL||'".';                                         49723700
*              ANS MSG('?IFAUSAGE ---> '||ZMS);                         49723800
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          49723900
*              ZMACRET=8;                    /* MACRO ERROR */          49724000
*            END;                                                       49724100
*      END;                                                             49724200
*/*PG.KXVAR01 NAME, OPT OUTPUT, KEYS -EXCESSIVE ARGUMENTS------------*/ 49724300
*  IF BEGTIME='BEGTIME' | BEGTIME='()'       /*CHECK ENTRY*/            49724400
*    THEN                                                               49724500
*      DO;                                                              49724600
*        ZMS=' 8, THE "BEGTIME" KEY'||       /**KOPTP* MSG*/            49724700
*            ' MUST CONTAIN ONE'||                                      49724800
*            ' (OR MORE) ARGUMENT(S).';                                 49724900
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49725000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49725100
*        ZMACRET=8;                          /* MACRO ERROR */          49725200
*      END;                                                             49725300
*  IF NUMBER(BEGTIME)>1                      /* CHECK POSITIONALS */    49725400
*    THEN                                                               49725500
*      DO;                                                              49725600
*        ZMS=' 8, "BEGTIME'||                /**KPOSP* MSG*/            49725700
*            BEGTIME||                                                  49725800
*            '" "BEGTIME"'||                                            49725900
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              49726000
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49726100
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49726200
*        ZMACRET=8;                          /* MACRO ERROR */          49726300
*      END;                                                             49726400
*/*PG.KXVAR15 NAME, OPT OUTPUT, KEYS -XVARIABLE----------------------*/ 49726500
*  IF BEGTIME(1)^=''                         /* CHECK FOR NULL */       49726600
*    THEN                                                               49726700
*      DO;                                                              49726800
*        XBEGTIME=BEGTIME(1);                /* SET XVARIABLE */        49726900
*        ZXBEGTIME='OUTPUT';                 /* SET OUTPUT */           49727000
*      END;                                                             49727100
*  ELSE                                                                 49727200
*    IF ZXBEGTIME^=''                                                   49727300
*      THEN                                                             49727400
*        ZXBEGTIME='';                       /* RESET OUTPUT */         49727500
*/*PG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 49727600
*  IF LINKAGE='LINKAGE'                      /* CHECK ENTRY */          49727700
*    THEN                                                               49727800
*      DO;                                                              49727900
*        ZMS=' 8, THE "LINKAGE" KEY'||       /**KOPTP* MSG*/            49728000
*            ' MUST CONTAIN ONE'||                                      49728100
*            ' (OR MORE) ARGUMENT(S).';                                 49728200
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49728300
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49728400
*        ZMACRET=8;                          /* MACRO ERROR */          49728500
*      END;                                                             49728600
*  IF NUMBER(LINKAGE)>1                      /* CHECK POSITIONALS */    49728700
*    THEN                                                               49728800
*      DO;                                                              49728900
*        ZMS=' 8, "LINKAGE'||                /**KPOSP* MSG*/            49729000
*            LINKAGE||                                                  49729100
*            '" "LINKAGE"'||                                            49729200
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              49729300
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49729400
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49729500
*        ZMACRET=8;                          /* MACRO ERROR */          49729600
*      END;                                                             49729700
*/*PG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 49729800
*  XLINKAGE='';                              /* RESET XVARIABLE */      49729900
*  IF LINKAGE(1) = 'SVC'                                                49730000
*    THEN                                                               49730100
*      XLINKAGE = 'SVC';                     /* SET XVARIABLE */        49730200
*/*PG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 49730300
*  IF LINKAGE(1) = 'BRANCH'                                             49730400
*    THEN                                                               49730500
*      XLINKAGE = 'BRANCH';                  /* SET XVARIABLE */        49730600
*/*PG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 49730700
*  ZXLINKAGE='INPUT';                        /* SET IN/OUTPUT */        49730800
*  IF XLINKAGE=''                            /* CHECK FOR KEYWORD */    49730900
*    THEN                                                               49731000
*      DO;                                   /* KEYWORD NOT ENTERED */  49731100
*        XLINKAGE='SVC';                     /* SET DEFAULT */          49731200
*        IF LINKAGE(1)^=''                                              49731300
*          THEN                                                         49731400
*            DO;                                                        49731500
*              ZXLINKAGE='';                 /* RESET IN/OUTPUT */      49731600
*              ZMS=' 8, "LINKAGE'||          /**KUKWP* MSG*/            49731700
*                  LINKAGE||'"'||                                       49731800
*                  ' ARGUMENT 1 IS AN UNKNOWN KEYWORD. '||              49731900
*                  ' VALID KEYWORD CHOICE(S) ARE:'||                    49732000
*                  ' "SVC"'||                /* VALID KEYWORD */        49732100
*                  ' OR "BRANCH".';          /* VALID KEYWORD */        49732200
*              ANS MSG('?IFAUSAGE ---> '||ZMS);                         49732300
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          49732400
*              ZMACRET=8;                    /* MACRO ERROR */          49732500
*            END;                                                       49732600
*      END;                                                             49732700
*/*PG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 49732800
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KYWRDCTL DO GROUP */     49732900
*/*PG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 49733000
*  IF REQUEST(1)='FUNCTIONDATA'              /* CHECK FOR KEYWORD */    49733100
*    THEN                                                               49733200
*      DO;                                                              49733300
*        XREQUEST='FUNCTIONDATA';            /* SET XVARIABLE */        49733400
*        IF NUMBER(REQUEST)>1                /* CHECK POSITIONALS */    49733500
*          THEN                                                         49733600
*            DO;                                                        49733700
*              ZMS=' 8, "REQUEST'||          /**KPOSP* MSG*/            49733800
*                  REQUEST||                                            49733900
*                  '" "REQUEST"'||                                      49734000
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        49734100
*              ANS MSG('?IFAUSAGE ---> '||ZMS);                         49734200
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          49734300
*              ZMACRET=8;                    /* MACRO ERROR */          49734400
*            END;                                                       49734500
*/*PG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 49734600
*        ZCVAL='';                           /* INCORRECT KEYS FIELD */ 49734700
*        IF DOMAIN^=''                       /* CHECK FOR KEY */        49734800
*          THEN                                                         49734900
*            ZCVAL=ZCVAL||',DOMAIN';         /* INCORRECT KEY USED */   49735000
*        IF SCOPE^=''                        /* CHECK FOR KEY */        49735100
*          THEN                                                         49735200
*            ZCVAL=ZCVAL||',SCOPE';          /* INCORRECT KEY USED */   49735300
*        IF ENDTIME^=''                      /* CHECK FOR KEY */        49735400
*          THEN                                                         49735500
*            ZCVAL=ZCVAL||',ENDTIME';        /* INCORRECT KEY USED */   49735600
*        IF ENDDATA^=''                      /* CHECK FOR KEY */        49735700
*          THEN                                                         49735800
*            ZCVAL=ZCVAL||',ENDDATA';        /* INCORRECT KEY USED */   49735900
*        IF BEGTIME^=''                      /* CHECK FOR KEY */        49736000
*          THEN                                                         49736100
*            ZCVAL=ZCVAL||',BEGTIME';        /* INCORRECT KEY USED */   49736200
*        IF ZCVAL^=''                                                   49736300
*          THEN                                                         49736400
*            DO;                             /* INCORRECT KEYS USED */  49736500
*              ZCVAL=ZCVAL(2:LENGTH(ZCVAL));                            49736600
*              ZMS=' 8, "REQUEST'||          /**KMEIP* MSG*/            49736700
*                  REQUEST||'"'||                                       49736800
*                  ' DOES NOT ALLOW THE USE OF THE'||                   49736900
*                  ' FOLLOWING KEY(S) "'||                              49737000
*                  ZCVAL||'".';                                         49737100
*              ANS MSG('?IFAUSAGE ---> '||ZMS);                         49737200
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          49737300
*              ZMACRET=8;                    /* MACRO ERROR */          49737400
*            END;                                                       49737500
*/*PG.KMEKY01 NAME, RQD INPUT, ME KEYS -XVARIABLE KEY----------------*/ 49737600
*  XDATAPRODNAME='';                         /* RESET XVARIABLE */      49737700
*  IF PRODOWNER^=''                          /* CHECK ME KEY */         49737800
*    THEN                                                               49737900
*      DO;                                   /* VALID ME KEY */         49738000
*        IF NUMBER(PRODOWNER)>1              /* CHECK SUBLISTS */       49738100
*          THEN                                                         49738200
*            DO;                                                        49738300
*              ZMS=' 8, "PRODOWNER'||        /**KPOSP* MSG*/            49738400
*                  PRODOWNER||                                          49738500
*                  '" "PRODOWNER"'||                                    49738600
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        49738700
*              ANS MSG('?IFAUSAGE ---> '||ZMS);                         49738800
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          49738900
*              ZMACRET=8;                    /* MACRO ERROR */          49739000
*            END;                                                       49739100
*        XDATAPRODNAME='PRODOWNER';          /* SET XVARIABLE */        49739200
*        XPRODOWNER=PRODOWNER(1);            /* SET XVARIABLE */        49739300
*        ZXDATAPRODNAME='INPUT';             /* SET IN/OUTPUT */        49739400
*        ZXPRODOWNER='INPUT';                /* SET IN/OUTPUT */        49739500
*        IF PRODOWNER(1)=''                  /* CHECK ME KEY */         49739600
*          THEN                                                         49739700
*            DO;                                                        49739800
*              ZXDATAPRODNAME='';            /* RESET IN/OUTPUT */      49739900
*              ZXPRODOWNER='';               /* RESET IN/OUTPUT */      49740000
*              ZMS=' 8,  '||                                            49740100
*                  ' "PRODOWNER" KEY AND ITS ARGUMENT'||                49740200
*                  ' ARE REQUIRED.';         /**KRQDP* MSG*/            49740300
*              ANS MSG('?IFAUSAGE ---> '||ZMS);                         49740400
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          49740500
*              ZMACRET=8;                    /* MACRO ERROR */          49740600
*           END;                                                        49740700
*      END;                                                             49740800
*/*PG.KMEKY02 NAME, RQD INPUT, ME KEYS -XVARIABLE KEY----------------*/ 49740900
*  IF PRTOKEN^=''                            /* CHECK ME KEY */         49741000
*    THEN                                                               49741100
*      DO;                                                              49741200
*        IF NUMBER(PRTOKEN)>1                /* CHECK SUBLISTS */       49741300
*          THEN                                                         49741400
*            DO;                                                        49741500
*              ZMS=' 8, "PRTOKEN'||          /**KPOSP* MSG*/            49741600
*                  PRTOKEN||                                            49741700
*                  '" "PRTOKEN"'||                                      49741800
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        49741900
*              ANS MSG('?IFAUSAGE ---> '||ZMS);                         49742000
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          49742100
*              ZMACRET=8;                    /* MACRO ERROR */          49742200
*            END;                                                       49742300
*        IF XDATAPRODNAME=''                 /* CHECK XVARIABLE */      49742400
*          THEN                                                         49742500
*            DO;                             /* VALID ME KEY */         49742600
*              XDATAPRODNAME='PRTOKEN';      /* SET XVAR1 */            49742700
*              XPRTOKEN=PRTOKEN(1);          /* SET XVAR2 */            49742800
*              ZXDATAPRODNAME='INPUT';       /* SET IN/OUTPUT */        49742900
*              ZXPRTOKEN='INPUT';            /* SET IN/OUTPUT */        49743000
*              IF PRTOKEN(1)=''              /* CHECK ME KEY */         49743100
*                THEN                                                   49743200
*                  DO;                                                  49743300
*                    ZXDATAPRODNAME='';      /* RESET IN/OUTPUT */      49743400
*                    ZXPRTOKEN='';           /* RESET IN/OUTPUT */      49743500
*                    ZMS=' 8,  '||                                      49743600
*                        ' "PRTOKEN" KEY AND ITS ARGUMENT'||            49743700
*                        ' ARE REQUIRED.';   /**KRQDP* MSG*/            49743800
*                    ANS MSG('?IFAUSAGE ---> '||ZMS);                   49743900
*                    ANS(COMMENT(ZMS)) COL(MACLMAR);                    49744000
*                    ZMACRET=8;              /* MACRO ERROR */          49744100
*                  END;                                                 49744200
*            END;                                                       49744300
*          ELSE                                                         49744400
*            DO;                                                        49744500
*              ZMS=' 8, "PRTOKEN'||          /**KMEKP* MSG*/            49744600
*                  PRTOKEN||'"'||                                       49744700
*                  ' IS MUTUALLY EXCLUSIVE WITH THE "'||                49744800
*                  XDATAPRODNAME||                                      49744900
*                  '" KEY.';                                            49745000
*              ANS MSG('?IFAUSAGE ---> '||ZMS);                         49745100
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          49745200
*              ZMACRET=8;                    /* MACRO ERROR */          49745300
*            END;                                                       49745400
*      END;                                                             49745500
*/*PG.KMEKY08 NAME, RQD INPUT, ME KEYS -ME KEY DEFAULT---------------*/ 49745600
*  IF XDATAPRODNAME=''                       /* CHECK XVARIABLE */      49745700
*    THEN                                                               49745800
*      DO;                                                              49745900
*        XDATAPRODNAME='PRODOWNER';          /* SET DEFAULT */          49746000
*        XPRODOWNER='0';                     /* SET DEFAULT */          49746100
*        ZXDATAPRODNAME='';                  /* RESET IN/OUTPUT */      49746200
*        ZXPRODOWNER='';                     /* RESET IN/OUTPUT */      49746300
*        ZMS=' 8, ONE OF THE FOLLOWING'||    /**KMERP* MSG*/            49746400
*            ' MUTUALLY EXCLUSIVE KEY(S) IS'||                          49746500
*            ' REQUIRED:'||                                             49746600
*            ' "PRODOWNER"'||                /* VALID ME KEY */         49746700
*            ' OR "PRTOKEN".';               /* VALID ME KEY */         49746800
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49746900
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49747000
*        ZMACRET=8;                          /* MACRO ERROR */          49747100
*      END;                                                             49747200
*/*PG.KMEKY11 NAME, RQD INPUT, ME KEYS -START------------------------*/ 49747300
*  IF XDATAPRODNAME='PRODOWNER'              /* CHECK FOR ME KEY */     49747400
*    THEN                                                               49747500
*      DO;   /**** START OF A MUTUALLY EXCLUSIVE KEY DO GROUP */        49747600
*/*PG.KXVAR01 NAME, RQD INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 49747700
*  IF NUMBER(PRODNAME)>1                     /* CHECK POSITIONALS */    49747800
*    THEN                                                               49747900
*      DO;                                                              49748000
*        ZMS=' 8, "PRODNAME'||               /**KPOSP* MSG*/            49748100
*            PRODNAME||                                                 49748200
*            '" "PRODNAME"'||                                           49748300
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              49748400
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49748500
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49748600
*        ZMACRET=8;                          /* MACRO ERROR */          49748700
*      END;                                                             49748800
*/*PG.KXVAR03 NAME, RQD INPUT, KEYS -XVARIABLE-----------------------*/ 49748900
*  XPRODNAME=PRODNAME(1);                    /* SET XVARIABLE */        49749000
*  IF PRODNAME(1)=''                         /* CHECK FOR NULL */       49749100
*   THEN                                                                49749200
*    DO;                                     /* KEY IS REQUIRED */      49749300
*        ZXPRODNAME='';                      /* RESET IN/OUTPUT */      49749400
*        ZMS=' 8,  '||                                                  49749500
*            ' "PRODNAME" KEY AND ITS ARGUMENT'||                       49749600
*            ' ARE REQUIRED.';               /**KRQDP* MSG*/            49749700
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49749800
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49749900
*        ZMACRET=8;                          /* MACRO ERROR */          49750000
*    END;                                                               49750100
*  ELSE                                                                 49750200
*    ZXPRODNAME='INPUT';                     /* SET IN/OUTPUT */        49750300
*/*PG.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 49750400
*  IF PRODVERS='PRODVERS' | PRODVERS='()'    /*CHECK ENTRY*/            49750500
*    THEN                                                               49750600
*      DO;                                                              49750700
*        ZMS=' 8, THE "PRODVERS" KEY'||      /**KOPTP* MSG*/            49750800
*            ' MUST CONTAIN ONE'||                                      49750900
*            ' (OR MORE) ARGUMENT(S).';                                 49751000
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49751100
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49751200
*        ZMACRET=8;                          /* MACRO ERROR */          49751300
*      END;                                                             49751400
*  IF NUMBER(PRODVERS)>1                     /* CHECK POSITIONALS */    49751500
*    THEN                                                               49751600
*      DO;                                                              49751700
*        ZMS=' 8, "PRODVERS'||               /**KPOSP* MSG*/            49751800
*            PRODVERS||                                                 49751900
*            '" "PRODVERS"'||                                           49752000
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              49752100
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49752200
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49752300
*        ZMACRET=8;                          /* MACRO ERROR */          49752400
*      END;                                                             49752500
*/*PG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 49752600
*  ZXPRODVERS='INPUT';                       /* SET IN/OUTPUT */        49752700
*  XPRODVERS='NONE';                         /* SET DEFAULT */          49752800
*  IF PRODVERS(1)^=''                        /* CHECK FOR NULL */       49752900
*    THEN                                                               49753000
*      XPRODVERS=PRODVERS(1);                /* SET XVARIABLE */        49753100
*/*PG.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 49753200
*  IF PRODQUAL='PRODQUAL' | PRODQUAL='()'    /*CHECK ENTRY*/            49753300
*    THEN                                                               49753400
*      DO;                                                              49753500
*        ZMS=' 8, THE "PRODQUAL" KEY'||      /**KOPTP* MSG*/            49753600
*            ' MUST CONTAIN ONE'||                                      49753700
*            ' (OR MORE) ARGUMENT(S).';                                 49753800
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49753900
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49754000
*        ZMACRET=8;                          /* MACRO ERROR */          49754100
*      END;                                                             49754200
*  IF NUMBER(PRODQUAL)>1                     /* CHECK POSITIONALS */    49754300
*    THEN                                                               49754400
*      DO;                                                              49754500
*        ZMS=' 8, "PRODQUAL'||               /**KPOSP* MSG*/            49754600
*            PRODQUAL||                                                 49754700
*            '" "PRODQUAL"'||                                           49754800
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              49754900
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49755000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49755100
*        ZMACRET=8;                          /* MACRO ERROR */          49755200
*      END;                                                             49755300
*/*PG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 49755400
*  ZXPRODQUAL='INPUT';                       /* SET IN/OUTPUT */        49755500
*  XPRODQUAL='NONE';                         /* SET DEFAULT */          49755600
*  IF PRODQUAL(1)^=''                        /* CHECK FOR NULL */       49755700
*    THEN                                                               49755800
*      XPRODQUAL=PRODQUAL(1);                /* SET XVARIABLE */        49755900
*/*PG.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 49756000
*  IF PRODID='PRODID' | PRODID='()'          /*CHECK ENTRY*/            49756100
*    THEN                                                               49756200
*      DO;                                                              49756300
*        ZMS=' 8, THE "PRODID" KEY'||        /**KOPTP* MSG*/            49756400
*            ' MUST CONTAIN ONE'||                                      49756500
*            ' (OR MORE) ARGUMENT(S).';                                 49756600
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49756700
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49756800
*        ZMACRET=8;                          /* MACRO ERROR */          49756900
*      END;                                                             49757000
*  IF NUMBER(PRODID)>1                       /* CHECK POSITIONALS */    49757100
*    THEN                                                               49757200
*      DO;                                                              49757300
*        ZMS=' 8, "PRODID'||                 /**KPOSP* MSG*/            49757400
*            PRODID||                                                   49757500
*            '" "PRODID"'||                                             49757600
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              49757700
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49757800
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49757900
*        ZMACRET=8;                          /* MACRO ERROR */          49758000
*      END;                                                             49758100
*/*PG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 49758200
*  ZXPRODID='INPUT';                         /* SET IN/OUTPUT */        49758300
*  XPRODID='NONE';                           /* SET DEFAULT */          49758400
*  IF PRODID(1)^=''                          /* CHECK FOR NULL */       49758500
*    THEN                                                               49758600
*      XPRODID=PRODID(1);                    /* SET XVARIABLE */        49758700
*/*PG.KMEKY10 NAME, RQD INPUT, ME KEYS -END--------------------------*/ 49758800
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KEY DO GROUP */          49758900
*/*PG.KMEKY12 NAME, RQD INPUT, ME KEYS -DISALLOWED KEYS--------------*/ 49759000
*  IF XDATAPRODNAME='PRTOKEN'                /* CHECK FOR ME KEY */     49759100
*    THEN                                                               49759200
*      DO;                                   /*DISALLOWED KEYS CHECK */ 49759300
*        ZCVAL='';                           /* INCORRECT KEYS FIELD */ 49759400
*        IF PRODNAME^=''                     /* CHECK KEY */            49759500
*          THEN                                                         49759600
*            ZCVAL=ZCVAL||',PRODNAME';       /* INCORRECT KEY USED */   49759700
*        IF PRODVERS^=''                     /* CHECK KEY */            49759800
*          THEN                                                         49759900
*            ZCVAL=ZCVAL||',PRODVERS';       /* INCORRECT KEY USED */   49760000
*        IF PRODQUAL^=''                     /* CHECK KEY */            49760100
*          THEN                                                         49760200
*            ZCVAL=ZCVAL||',PRODQUAL';       /* INCORRECT KEY USED */   49760300
*        IF PRODID^=''                       /* CHECK KEY */            49760400
*          THEN                                                         49760500
*            ZCVAL=ZCVAL||',PRODID';         /* INCORRECT KEY USED */   49760600
*        IF ZCVAL^=''                                                   49760700
*          THEN                                                         49760800
*            DO;                             /* INCORRECT KEYS USED */  49760900
*              ZCVAL=ZCVAL(2:LENGTH(ZCVAL));                            49761000
*              ZMS=' 8, "PRTOKEN'||          /**KMEIP* MSG*/            49761100
*                  '"'||                                                49761200
*                  ' DOES NOT ALLOW THE USE OF THE'||                   49761300
*                  ' FOLLOWING KEY(S) "'||                              49761400
*                  ZCVAL||'".';                                         49761500
*              ANS MSG('?IFAUSAGE ---> '||ZMS);                         49761600
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          49761700
*              ZMACRET=8;                    /* MACRO ERROR */          49761800
*            END;                                                       49761900
*      END;                                                             49762000
*/*PG.KXVAR01 NAME, RQD INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 49762100
*  IF NUMBER(DATA)>1                         /* CHECK POSITIONALS */    49762200
*    THEN                                                               49762300
*      DO;                                                              49762400
*        ZMS=' 8, "DATA'||                   /**KPOSP* MSG*/            49762500
*            DATA||                                                     49762600
*            '" "DATA"'||                                               49762700
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              49762800
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49762900
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49763000
*        ZMACRET=8;                          /* MACRO ERROR */          49763100
*      END;                                                             49763200
*/*PG.KXVAR03 NAME, RQD INPUT, KEYS -XVARIABLE-----------------------*/ 49763300
*  XDATA=DATA(1);                            /* SET XVARIABLE */        49763400
*  IF DATA(1)=''                             /* CHECK FOR NULL */       49763500
*   THEN                                                                49763600
*    DO;                                     /* KEY IS REQUIRED */      49763700
*        ZXDATA='';                          /* RESET IN/OUTPUT */      49763800
*        ZMS=' 8,  '||                                                  49763900
*            ' "DATA" KEY AND ITS ARGUMENT'||                           49764000
*            ' ARE REQUIRED.';               /**KRQDP* MSG*/            49764100
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49764200
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49764300
*        ZMACRET=8;                          /* MACRO ERROR */          49764400
*    END;                                                               49764500
*  ELSE                                                                 49764600
*    ZXDATA='INPUT';                         /* SET IN/OUTPUT */        49764700
*/*PG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 49764800
*  IF FORMAT='FORMAT'                        /* CHECK ENTRY */          49764900
*    THEN                                                               49765000
*      DO;                                                              49765100
*        ZMS=' 8, THE "FORMAT" KEY'||        /**KOPTP* MSG*/            49765200
*            ' MUST CONTAIN ONE'||                                      49765300
*            ' (OR MORE) ARGUMENT(S).';                                 49765400
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49765500
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49765600
*        ZMACRET=8;                          /* MACRO ERROR */          49765700
*      END;                                                             49765800
*  IF NUMBER(FORMAT)>1                       /* CHECK POSITIONALS */    49765900
*    THEN                                                               49766000
*      DO;                                                              49766100
*        ZMS=' 8, "FORMAT'||                 /**KPOSP* MSG*/            49766200
*            FORMAT||                                                   49766300
*            '" "FORMAT"'||                                             49766400
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              49766500
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49766600
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49766700
*        ZMACRET=8;                          /* MACRO ERROR */          49766800
*      END;                                                             49766900
*/*PG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 49767000
*  XFORMAT='';                               /* RESET XVARIABLE */      49767100
*  IF FORMAT(1) = 'CPUTIME'                                             49767200
*    THEN                                                               49767300
*      XFORMAT = 'CPUTIME';                  /* SET XVARIABLE */        49767400
*/*PG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 49767500
*  IF FORMAT(1) = 'BINARY'                                              49767600
*    THEN                                                               49767700
*      XFORMAT = 'BINARY';                   /* SET XVARIABLE */        49767800
*/*PG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 49767900
*  IF FORMAT(1) = 'FLOAT'                                               49768000
*    THEN                                                               49768100
*      XFORMAT = 'FLOAT';                    /* SET XVARIABLE */        49768200
*/*PG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 49768300
*  ZXFORMAT='INPUT';                         /* SET IN/OUTPUT */        49768400
*  IF XFORMAT=''                             /* CHECK FOR KEYWORD */    49768500
*    THEN                                                               49768600
*      DO;                                   /* KEYWORD NOT ENTERED */  49768700
*        XFORMAT='CPUTIME';                  /* SET DEFAULT */          49768800
*        IF FORMAT(1)^=''                                               49768900
*          THEN                                                         49769000
*            DO;                                                        49769100
*              ZXFORMAT='';                  /* RESET IN/OUTPUT */      49769200
*              ZMS=' 8, "FORMAT'||           /**KUKWP* MSG*/            49769300
*                  FORMAT||'"'||                                        49769400
*                  ' ARGUMENT 1 IS AN UNKNOWN KEYWORD. '||              49769500
*                  ' VALID KEYWORD CHOICE(S) ARE:'||                    49769600
*                  ' "CPUTIME",'||           /* VALID KEYWORD */        49769700
*                  ' "BINARY",'||            /* VALID KEYWORD */        49769800
*                  ' OR "FLOAT".';           /* VALID KEYWORD */        49769900
*              ANS MSG('?IFAUSAGE ---> '||ZMS);                         49770000
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          49770100
*              ZMACRET=8;                    /* MACRO ERROR */          49770200
*            END;                                                       49770300
*      END;                                                             49770400
*/*PG.KXVAR01 NAME, OPT OUTPUT, KEYS -EXCESSIVE ARGUMENTS------------*/ 49770500
*  IF CURRENTDATA='CURRENTDATA' | CURRENTDATA='()'  /*CHECK ENTRY*/     49770600
*    THEN                                                               49770700
*      DO;                                                              49770800
*        ZMS=' 8, THE "CURRENTDATA" KEY'||   /**KOPTP* MSG*/            49770900
*            ' MUST CONTAIN ONE'||                                      49771000
*            ' (OR MORE) ARGUMENT(S).';                                 49771100
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49771200
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49771300
*        ZMACRET=8;                          /* MACRO ERROR */          49771400
*      END;                                                             49771500
*  IF NUMBER(CURRENTDATA)>1                  /* CHECK POSITIONALS */    49771600
*    THEN                                                               49771700
*      DO;                                                              49771800
*        ZMS=' 8, "CURRENTDATA'||            /**KPOSP* MSG*/            49771900
*            CURRENTDATA||                                              49772000
*            '" "CURRENTDATA"'||                                        49772100
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              49772200
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49772300
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49772400
*        ZMACRET=8;                          /* MACRO ERROR */          49772500
*      END;                                                             49772600
*/*PG.KXVAR15 NAME, OPT OUTPUT, KEYS -XVARIABLE----------------------*/ 49772700
*  IF CURRENTDATA(1)^=''                     /* CHECK FOR NULL */       49772800
*    THEN                                                               49772900
*      DO;                                                              49773000
*        XCURRENTDATA=CURRENTDATA(1);        /* SET XVARIABLE */        49773100
*        ZXCURRENTDATA='OUTPUT';             /* SET OUTPUT */           49773200
*      END;                                                             49773300
*  ELSE                                                                 49773400
*    IF ZXCURRENTDATA^=''                                               49773500
*      THEN                                                             49773600
*        ZXCURRENTDATA='';                   /* RESET OUTPUT */         49773700
*/*PG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 49773800
*  IF LINKAGE='LINKAGE'                      /* CHECK ENTRY */          49773900
*    THEN                                                               49774000
*      DO;                                                              49774100
*        ZMS=' 8, THE "LINKAGE" KEY'||       /**KOPTP* MSG*/            49774200
*            ' MUST CONTAIN ONE'||                                      49774300
*            ' (OR MORE) ARGUMENT(S).';                                 49774400
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49774500
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49774600
*        ZMACRET=8;                          /* MACRO ERROR */          49774700
*      END;                                                             49774800
*  IF NUMBER(LINKAGE)>1                      /* CHECK POSITIONALS */    49774900
*    THEN                                                               49775000
*      DO;                                                              49775100
*        ZMS=' 8, "LINKAGE'||                /**KPOSP* MSG*/            49775200
*            LINKAGE||                                                  49775300
*            '" "LINKAGE"'||                                            49775400
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              49775500
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49775600
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49775700
*        ZMACRET=8;                          /* MACRO ERROR */          49775800
*      END;                                                             49775900
*/*PG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 49776000
*  XLINKAGE='';                              /* RESET XVARIABLE */      49776100
*  IF LINKAGE(1) = 'SVC'                                                49776200
*    THEN                                                               49776300
*      XLINKAGE = 'SVC';                     /* SET XVARIABLE */        49776400
*/*PG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 49776500
*  IF LINKAGE(1) = 'BRANCH'                                             49776600
*    THEN                                                               49776700
*      XLINKAGE = 'BRANCH';                  /* SET XVARIABLE */        49776800
*/*PG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 49776900
*  ZXLINKAGE='INPUT';                        /* SET IN/OUTPUT */        49777000
*  IF XLINKAGE=''                            /* CHECK FOR KEYWORD */    49777100
*    THEN                                                               49777200
*      DO;                                   /* KEYWORD NOT ENTERED */  49777300
*        XLINKAGE='SVC';                     /* SET DEFAULT */          49777400
*        IF LINKAGE(1)^=''                                              49777500
*          THEN                                                         49777600
*            DO;                                                        49777700
*              ZXLINKAGE='';                 /* RESET IN/OUTPUT */      49777800
*              ZMS=' 8, "LINKAGE'||          /**KUKWP* MSG*/            49777900
*                  LINKAGE||'"'||                                       49778000
*                  ' ARGUMENT 1 IS AN UNKNOWN KEYWORD. '||              49778100
*                  ' VALID KEYWORD CHOICE(S) ARE:'||                    49778200
*                  ' "SVC"'||                /* VALID KEYWORD */        49778300
*                  ' OR "BRANCH".';          /* VALID KEYWORD */        49778400
*              ANS MSG('?IFAUSAGE ---> '||ZMS);                         49778500
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          49778600
*              ZMACRET=8;                    /* MACRO ERROR */          49778700
*            END;                                                       49778800
*      END;                                                             49778900
*/*PG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 49779000
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KYWRDCTL DO GROUP */     49779100
*/*PG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 49779200
*  IF REQUEST(1)='FUNCTIONEND'               /* CHECK FOR KEYWORD */    49779300
*    THEN                                                               49779400
*      DO;                                                              49779500
*        XREQUEST='FUNCTIONEND';             /* SET XVARIABLE */        49779600
*        IF NUMBER(REQUEST)>1                /* CHECK POSITIONALS */    49779700
*          THEN                                                         49779800
*            DO;                                                        49779900
*              ZMS=' 8, "REQUEST'||          /**KPOSP* MSG*/            49780000
*                  REQUEST||                                            49780100
*                  '" "REQUEST"'||                                      49780200
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        49780300
*              ANS MSG('?IFAUSAGE ---> '||ZMS);                         49780400
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          49780500
*              ZMACRET=8;                    /* MACRO ERROR */          49780600
*            END;                                                       49780700
*/*PG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 49780800
*        ZCVAL='';                           /* INCORRECT KEYS FIELD */ 49780900
*        IF DOMAIN^=''                       /* CHECK FOR KEY */        49781000
*          THEN                                                         49781100
*            ZCVAL=ZCVAL||',DOMAIN';         /* INCORRECT KEY USED */   49781200
*        IF SCOPE^=''                        /* CHECK FOR KEY */        49781300
*          THEN                                                         49781400
*            ZCVAL=ZCVAL||',SCOPE';          /* INCORRECT KEY USED */   49781500
*        IF BEGTIME^=''                      /* CHECK FOR KEY */        49781600
*          THEN                                                         49781700
*            ZCVAL=ZCVAL||',BEGTIME';        /* INCORRECT KEY USED */   49781800
*        IF DATA^=''                         /* CHECK FOR KEY */        49781900
*          THEN                                                         49782000
*            ZCVAL=ZCVAL||',DATA';           /* INCORRECT KEY USED */   49782100
*        IF FORMAT^=''                       /* CHECK FOR KEY */        49782200
*          THEN                                                         49782300
*            ZCVAL=ZCVAL||',FORMAT';         /* INCORRECT KEY USED */   49782400
*        IF CURRENTDATA^=''                  /* CHECK FOR KEY */        49782500
*          THEN                                                         49782600
*            ZCVAL=ZCVAL||',CURRENTDATA';    /* INCORRECT KEY USED */   49782700
*        IF ZCVAL^=''                                                   49782800
*          THEN                                                         49782900
*            DO;                             /* INCORRECT KEYS USED */  49783000
*              ZCVAL=ZCVAL(2:LENGTH(ZCVAL));                            49783100
*              ZMS=' 8, "REQUEST'||          /**KMEIP* MSG*/            49783200
*                  REQUEST||'"'||                                       49783300
*                  ' DOES NOT ALLOW THE USE OF THE'||                   49783400
*                  ' FOLLOWING KEY(S) "'||                              49783500
*                  ZCVAL||'".';                                         49783600
*              ANS MSG('?IFAUSAGE ---> '||ZMS);                         49783700
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          49783800
*              ZMACRET=8;                    /* MACRO ERROR */          49783900
*            END;                                                       49784000
*/*PG.KMEKY01 NAME, RQD INPUT, ME KEYS -XVARIABLE KEY----------------*/ 49784100
*  XENDPRODNAME='';                          /* RESET XVARIABLE */      49784200
*  IF PRODOWNER^=''                          /* CHECK ME KEY */         49784300
*    THEN                                                               49784400
*      DO;                                   /* VALID ME KEY */         49784500
*        IF NUMBER(PRODOWNER)>1              /* CHECK SUBLISTS */       49784600
*          THEN                                                         49784700
*            DO;                                                        49784800
*              ZMS=' 8, "PRODOWNER'||        /**KPOSP* MSG*/            49784900
*                  PRODOWNER||                                          49785000
*                  '" "PRODOWNER"'||                                    49785100
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        49785200
*              ANS MSG('?IFAUSAGE ---> '||ZMS);                         49785300
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          49785400
*              ZMACRET=8;                    /* MACRO ERROR */          49785500
*            END;                                                       49785600
*        XENDPRODNAME='PRODOWNER';           /* SET XVARIABLE */        49785700
*        XPRODOWNER=PRODOWNER(1);            /* SET XVARIABLE */        49785800
*        ZXENDPRODNAME='INPUT';              /* SET IN/OUTPUT */        49785900
*        ZXPRODOWNER='INPUT';                /* SET IN/OUTPUT */        49786000
*        IF PRODOWNER(1)=''                  /* CHECK ME KEY */         49786100
*          THEN                                                         49786200
*            DO;                                                        49786300
*              ZXENDPRODNAME='';             /* RESET IN/OUTPUT */      49786400
*              ZXPRODOWNER='';               /* RESET IN/OUTPUT */      49786500
*              ZMS=' 8,  '||                                            49786600
*                  ' "PRODOWNER" KEY AND ITS ARGUMENT'||                49786700
*                  ' ARE REQUIRED.';         /**KRQDP* MSG*/            49786800
*              ANS MSG('?IFAUSAGE ---> '||ZMS);                         49786900
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          49787000
*              ZMACRET=8;                    /* MACRO ERROR */          49787100
*           END;                                                        49787200
*      END;                                                             49787300
*/*PG.KMEKY02 NAME, RQD INPUT, ME KEYS -XVARIABLE KEY----------------*/ 49787400
*  IF PRTOKEN^=''                            /* CHECK ME KEY */         49787500
*    THEN                                                               49787600
*      DO;                                                              49787700
*        IF NUMBER(PRTOKEN)>1                /* CHECK SUBLISTS */       49787800
*          THEN                                                         49787900
*            DO;                                                        49788000
*              ZMS=' 8, "PRTOKEN'||          /**KPOSP* MSG*/            49788100
*                  PRTOKEN||                                            49788200
*                  '" "PRTOKEN"'||                                      49788300
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        49788400
*              ANS MSG('?IFAUSAGE ---> '||ZMS);                         49788500
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          49788600
*              ZMACRET=8;                    /* MACRO ERROR */          49788700
*            END;                                                       49788800
*        IF XENDPRODNAME=''                  /* CHECK XVARIABLE */      49788900
*          THEN                                                         49789000
*            DO;                             /* VALID ME KEY */         49789100
*              XENDPRODNAME='PRTOKEN';       /* SET XVAR1 */            49789200
*              XPRTOKEN=PRTOKEN(1);          /* SET XVAR2 */            49789300
*              ZXENDPRODNAME='INPUT';        /* SET IN/OUTPUT */        49789400
*              ZXPRTOKEN='INPUT';            /* SET IN/OUTPUT */        49789500
*              IF PRTOKEN(1)=''              /* CHECK ME KEY */         49789600
*                THEN                                                   49789700
*                  DO;                                                  49789800
*                    ZXENDPRODNAME='';       /* RESET IN/OUTPUT */      49789900
*                    ZXPRTOKEN='';           /* RESET IN/OUTPUT */      49790000
*                    ZMS=' 8,  '||                                      49790100
*                        ' "PRTOKEN" KEY AND ITS ARGUMENT'||            49790200
*                        ' ARE REQUIRED.';   /**KRQDP* MSG*/            49790300
*                    ANS MSG('?IFAUSAGE ---> '||ZMS);                   49790400
*                    ANS(COMMENT(ZMS)) COL(MACLMAR);                    49790500
*                    ZMACRET=8;              /* MACRO ERROR */          49790600
*                  END;                                                 49790700
*            END;                                                       49790800
*          ELSE                                                         49790900
*            DO;                                                        49791000
*              ZMS=' 8, "PRTOKEN'||          /**KMEKP* MSG*/            49791100
*                  PRTOKEN||'"'||                                       49791200
*                  ' IS MUTUALLY EXCLUSIVE WITH THE "'||                49791300
*                  XENDPRODNAME||                                       49791400
*                  '" KEY.';                                            49791500
*              ANS MSG('?IFAUSAGE ---> '||ZMS);                         49791600
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          49791700
*              ZMACRET=8;                    /* MACRO ERROR */          49791800
*            END;                                                       49791900
*      END;                                                             49792000
*/*PG.KMEKY08 NAME, RQD INPUT, ME KEYS -ME KEY DEFAULT---------------*/ 49792100
*  IF XENDPRODNAME=''                        /* CHECK XVARIABLE */      49792200
*    THEN                                                               49792300
*      DO;                                                              49792400
*        XENDPRODNAME='PRODOWNER';           /* SET DEFAULT */          49792500
*        XPRODOWNER='0';                     /* SET DEFAULT */          49792600
*        ZXENDPRODNAME='';                   /* RESET IN/OUTPUT */      49792700
*        ZXPRODOWNER='';                     /* RESET IN/OUTPUT */      49792800
*        ZMS=' 8, ONE OF THE FOLLOWING'||    /**KMERP* MSG*/            49792900
*            ' MUTUALLY EXCLUSIVE KEY(S) IS'||                          49793000
*            ' REQUIRED:'||                                             49793100
*            ' "PRODOWNER"'||                /* VALID ME KEY */         49793200
*            ' OR "PRTOKEN".';               /* VALID ME KEY */         49793300
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49793400
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49793500
*        ZMACRET=8;                          /* MACRO ERROR */          49793600
*      END;                                                             49793700
*/*PG.KMEKY11 NAME, RQD INPUT, ME KEYS -START------------------------*/ 49793800
*  IF XENDPRODNAME='PRODOWNER'               /* CHECK FOR ME KEY */     49793900
*    THEN                                                               49794000
*      DO;   /**** START OF A MUTUALLY EXCLUSIVE KEY DO GROUP */        49794100
*/*PG.KXVAR01 NAME, RQD INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 49794200
*  IF NUMBER(PRODNAME)>1                     /* CHECK POSITIONALS */    49794300
*    THEN                                                               49794400
*      DO;                                                              49794500
*        ZMS=' 8, "PRODNAME'||               /**KPOSP* MSG*/            49794600
*            PRODNAME||                                                 49794700
*            '" "PRODNAME"'||                                           49794800
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              49794900
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49795000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49795100
*        ZMACRET=8;                          /* MACRO ERROR */          49795200
*      END;                                                             49795300
*/*PG.KXVAR03 NAME, RQD INPUT, KEYS -XVARIABLE-----------------------*/ 49795400
*  XPRODNAME=PRODNAME(1);                    /* SET XVARIABLE */        49795500
*  IF PRODNAME(1)=''                         /* CHECK FOR NULL */       49795600
*   THEN                                                                49795700
*    DO;                                     /* KEY IS REQUIRED */      49795800
*        ZXPRODNAME='';                      /* RESET IN/OUTPUT */      49795900
*        ZMS=' 8,  '||                                                  49796000
*            ' "PRODNAME" KEY AND ITS ARGUMENT'||                       49796100
*            ' ARE REQUIRED.';               /**KRQDP* MSG*/            49796200
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49796300
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49796400
*        ZMACRET=8;                          /* MACRO ERROR */          49796500
*    END;                                                               49796600
*  ELSE                                                                 49796700
*    ZXPRODNAME='INPUT';                     /* SET IN/OUTPUT */        49796800
*/*PG.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 49796900
*  IF PRODVERS='PRODVERS' | PRODVERS='()'    /*CHECK ENTRY*/            49797000
*    THEN                                                               49797100
*      DO;                                                              49797200
*        ZMS=' 8, THE "PRODVERS" KEY'||      /**KOPTP* MSG*/            49797300
*            ' MUST CONTAIN ONE'||                                      49797400
*            ' (OR MORE) ARGUMENT(S).';                                 49797500
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49797600
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49797700
*        ZMACRET=8;                          /* MACRO ERROR */          49797800
*      END;                                                             49797900
*  IF NUMBER(PRODVERS)>1                     /* CHECK POSITIONALS */    49798000
*    THEN                                                               49798100
*      DO;                                                              49798200
*        ZMS=' 8, "PRODVERS'||               /**KPOSP* MSG*/            49798300
*            PRODVERS||                                                 49798400
*            '" "PRODVERS"'||                                           49798500
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              49798600
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49798700
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49798800
*        ZMACRET=8;                          /* MACRO ERROR */          49798900
*      END;                                                             49799000
*/*PG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 49799100
*  ZXPRODVERS='INPUT';                       /* SET IN/OUTPUT */        49799200
*  XPRODVERS='NONE';                         /* SET DEFAULT */          49799300
*  IF PRODVERS(1)^=''                        /* CHECK FOR NULL */       49799400
*    THEN                                                               49799500
*      XPRODVERS=PRODVERS(1);                /* SET XVARIABLE */        49799600
*/*PG.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 49799700
*  IF PRODQUAL='PRODQUAL' | PRODQUAL='()'    /*CHECK ENTRY*/            49799800
*    THEN                                                               49799900
*      DO;                                                              49800000
*        ZMS=' 8, THE "PRODQUAL" KEY'||      /**KOPTP* MSG*/            49800100
*            ' MUST CONTAIN ONE'||                                      49800200
*            ' (OR MORE) ARGUMENT(S).';                                 49800300
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49800400
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49800500
*        ZMACRET=8;                          /* MACRO ERROR */          49800600
*      END;                                                             49800700
*  IF NUMBER(PRODQUAL)>1                     /* CHECK POSITIONALS */    49800800
*    THEN                                                               49800900
*      DO;                                                              49801000
*        ZMS=' 8, "PRODQUAL'||               /**KPOSP* MSG*/            49801100
*            PRODQUAL||                                                 49801200
*            '" "PRODQUAL"'||                                           49801300
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              49801400
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49801500
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49801600
*        ZMACRET=8;                          /* MACRO ERROR */          49801700
*      END;                                                             49801800
*/*PG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 49801900
*  ZXPRODQUAL='INPUT';                       /* SET IN/OUTPUT */        49802000
*  XPRODQUAL='NONE';                         /* SET DEFAULT */          49802100
*  IF PRODQUAL(1)^=''                        /* CHECK FOR NULL */       49802200
*    THEN                                                               49802300
*      XPRODQUAL=PRODQUAL(1);                /* SET XVARIABLE */        49802400
*/*PG.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 49802500
*  IF PRODID='PRODID' | PRODID='()'          /*CHECK ENTRY*/            49802600
*    THEN                                                               49802700
*      DO;                                                              49802800
*        ZMS=' 8, THE "PRODID" KEY'||        /**KOPTP* MSG*/            49802900
*            ' MUST CONTAIN ONE'||                                      49803000
*            ' (OR MORE) ARGUMENT(S).';                                 49803100
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49803200
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49803300
*        ZMACRET=8;                          /* MACRO ERROR */          49803400
*      END;                                                             49803500
*  IF NUMBER(PRODID)>1                       /* CHECK POSITIONALS */    49803600
*    THEN                                                               49803700
*      DO;                                                              49803800
*        ZMS=' 8, "PRODID'||                 /**KPOSP* MSG*/            49803900
*            PRODID||                                                   49804000
*            '" "PRODID"'||                                             49804100
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              49804200
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49804300
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49804400
*        ZMACRET=8;                          /* MACRO ERROR */          49804500
*      END;                                                             49804600
*/*PG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 49804700
*  ZXPRODID='INPUT';                         /* SET IN/OUTPUT */        49804800
*  XPRODID='NONE';                           /* SET DEFAULT */          49804900
*  IF PRODID(1)^=''                          /* CHECK FOR NULL */       49805000
*    THEN                                                               49805100
*      XPRODID=PRODID(1);                    /* SET XVARIABLE */        49805200
*/*PG.KMEKY10 NAME, RQD INPUT, ME KEYS -END--------------------------*/ 49805300
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KEY DO GROUP */          49805400
*/*PG.KMEKY12 NAME, RQD INPUT, ME KEYS -DISALLOWED KEYS--------------*/ 49805500
*  IF XENDPRODNAME='PRTOKEN'                 /* CHECK FOR ME KEY */     49805600
*    THEN                                                               49805700
*      DO;                                   /*DISALLOWED KEYS CHECK */ 49805800
*        ZCVAL='';                           /* INCORRECT KEYS FIELD */ 49805900
*        IF PRODNAME^=''                     /* CHECK KEY */            49806000
*          THEN                                                         49806100
*            ZCVAL=ZCVAL||',PRODNAME';       /* INCORRECT KEY USED */   49806200
*        IF PRODVERS^=''                     /* CHECK KEY */            49806300
*          THEN                                                         49806400
*            ZCVAL=ZCVAL||',PRODVERS';       /* INCORRECT KEY USED */   49806500
*        IF PRODQUAL^=''                     /* CHECK KEY */            49806600
*          THEN                                                         49806700
*            ZCVAL=ZCVAL||',PRODQUAL';       /* INCORRECT KEY USED */   49806800
*        IF PRODID^=''                       /* CHECK KEY */            49806900
*          THEN                                                         49807000
*            ZCVAL=ZCVAL||',PRODID';         /* INCORRECT KEY USED */   49807100
*        IF ZCVAL^=''                                                   49807200
*          THEN                                                         49807300
*            DO;                             /* INCORRECT KEYS USED */  49807400
*              ZCVAL=ZCVAL(2:LENGTH(ZCVAL));                            49807500
*              ZMS=' 8, "PRTOKEN'||          /**KMEIP* MSG*/            49807600
*                  '"'||                                                49807700
*                  ' DOES NOT ALLOW THE USE OF THE'||                   49807800
*                  ' FOLLOWING KEY(S) "'||                              49807900
*                  ZCVAL||'".';                                         49808000
*              ANS MSG('?IFAUSAGE ---> '||ZMS);                         49808100
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          49808200
*              ZMACRET=8;                    /* MACRO ERROR */          49808300
*            END;                                                       49808400
*      END;                                                             49808500
*/*PG.KXVAR01 NAME, OPT OUTPUT, KEYS -EXCESSIVE ARGUMENTS------------*/ 49808600
*  IF ENDTIME='ENDTIME' | ENDTIME='()'       /*CHECK ENTRY*/            49808700
*    THEN                                                               49808800
*      DO;                                                              49808900
*        ZMS=' 8, THE "ENDTIME" KEY'||       /**KOPTP* MSG*/            49809000
*            ' MUST CONTAIN ONE'||                                      49809100
*            ' (OR MORE) ARGUMENT(S).';                                 49809200
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49809300
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49809400
*        ZMACRET=8;                          /* MACRO ERROR */          49809500
*      END;                                                             49809600
*  IF NUMBER(ENDTIME)>1                      /* CHECK POSITIONALS */    49809700
*    THEN                                                               49809800
*      DO;                                                              49809900
*        ZMS=' 8, "ENDTIME'||                /**KPOSP* MSG*/            49810000
*            ENDTIME||                                                  49810100
*            '" "ENDTIME"'||                                            49810200
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              49810300
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49810400
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49810500
*        ZMACRET=8;                          /* MACRO ERROR */          49810600
*      END;                                                             49810700
*/*PG.KXVAR15 NAME, OPT OUTPUT, KEYS -XVARIABLE----------------------*/ 49810800
*  IF ENDTIME(1)^=''                         /* CHECK FOR NULL */       49810900
*    THEN                                                               49811000
*      DO;                                                              49811100
*        XENDTIME=ENDTIME(1);                /* SET XVARIABLE */        49811200
*        ZXENDTIME='OUTPUT';                 /* SET OUTPUT */           49811300
*      END;                                                             49811400
*  ELSE                                                                 49811500
*    IF ZXENDTIME^=''                                                   49811600
*      THEN                                                             49811700
*        ZXENDTIME='';                       /* RESET OUTPUT */         49811800
*/*PG.KXVAR01 NAME, OPT OUTPUT, KEYS -EXCESSIVE ARGUMENTS------------*/ 49811900
*  IF ENDDATA='ENDDATA' | ENDDATA='()'       /*CHECK ENTRY*/            49812000
*    THEN                                                               49812100
*      DO;                                                              49812200
*        ZMS=' 8, THE "ENDDATA" KEY'||       /**KOPTP* MSG*/            49812300
*            ' MUST CONTAIN ONE'||                                      49812400
*            ' (OR MORE) ARGUMENT(S).';                                 49812500
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49812600
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49812700
*        ZMACRET=8;                          /* MACRO ERROR */          49812800
*      END;                                                             49812900
*  IF NUMBER(ENDDATA)>1                      /* CHECK POSITIONALS */    49813000
*    THEN                                                               49813100
*      DO;                                                              49813200
*        ZMS=' 8, "ENDDATA'||                /**KPOSP* MSG*/            49813300
*            ENDDATA||                                                  49813400
*            '" "ENDDATA"'||                                            49813500
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              49813600
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49813700
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49813800
*        ZMACRET=8;                          /* MACRO ERROR */          49813900
*      END;                                                             49814000
*/*PG.KXVAR15 NAME, OPT OUTPUT, KEYS -XVARIABLE----------------------*/ 49814100
*  IF ENDDATA(1)^=''                         /* CHECK FOR NULL */       49814200
*    THEN                                                               49814300
*      DO;                                                              49814400
*        XENDDATA=ENDDATA(1);                /* SET XVARIABLE */        49814500
*        ZXENDDATA='OUTPUT';                 /* SET OUTPUT */           49814600
*      END;                                                             49814700
*  ELSE                                                                 49814800
*    IF ZXENDDATA^=''                                                   49814900
*      THEN                                                             49815000
*        ZXENDDATA='';                       /* RESET OUTPUT */         49815100
*/*PG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 49815200
*  IF LINKAGE='LINKAGE'                      /* CHECK ENTRY */          49815300
*    THEN                                                               49815400
*      DO;                                                              49815500
*        ZMS=' 8, THE "LINKAGE" KEY'||       /**KOPTP* MSG*/            49815600
*            ' MUST CONTAIN ONE'||                                      49815700
*            ' (OR MORE) ARGUMENT(S).';                                 49815800
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49815900
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49816000
*        ZMACRET=8;                          /* MACRO ERROR */          49816100
*      END;                                                             49816200
*  IF NUMBER(LINKAGE)>1                      /* CHECK POSITIONALS */    49816300
*    THEN                                                               49816400
*      DO;                                                              49816500
*        ZMS=' 8, "LINKAGE'||                /**KPOSP* MSG*/            49816600
*            LINKAGE||                                                  49816700
*            '" "LINKAGE"'||                                            49816800
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              49816900
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49817000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49817100
*        ZMACRET=8;                          /* MACRO ERROR */          49817200
*      END;                                                             49817300
*/*PG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 49817400
*  XLINKAGE='';                              /* RESET XVARIABLE */      49817500
*  IF LINKAGE(1) = 'SVC'                                                49817600
*    THEN                                                               49817700
*      XLINKAGE = 'SVC';                     /* SET XVARIABLE */        49817800
*/*PG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 49817900
*  IF LINKAGE(1) = 'BRANCH'                                             49818000
*    THEN                                                               49818100
*      XLINKAGE = 'BRANCH';                  /* SET XVARIABLE */        49818200
*/*PG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 49818300
*  ZXLINKAGE='INPUT';                        /* SET IN/OUTPUT */        49818400
*  IF XLINKAGE=''                            /* CHECK FOR KEYWORD */    49818500
*    THEN                                                               49818600
*      DO;                                   /* KEYWORD NOT ENTERED */  49818700
*        XLINKAGE='SVC';                     /* SET DEFAULT */          49818800
*        IF LINKAGE(1)^=''                                              49818900
*          THEN                                                         49819000
*            DO;                                                        49819100
*              ZXLINKAGE='';                 /* RESET IN/OUTPUT */      49819200
*              ZMS=' 8, "LINKAGE'||          /**KUKWP* MSG*/            49819300
*                  LINKAGE||'"'||                                       49819400
*                  ' ARGUMENT 1 IS AN UNKNOWN KEYWORD. '||              49819500
*                  ' VALID KEYWORD CHOICE(S) ARE:'||                    49819600
*                  ' "SVC"'||                /* VALID KEYWORD */        49819700
*                  ' OR "BRANCH".';          /* VALID KEYWORD */        49819800
*              ANS MSG('?IFAUSAGE ---> '||ZMS);                         49819900
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          49820000
*              ZMACRET=8;                    /* MACRO ERROR */          49820100
*            END;                                                       49820200
*      END;                                                             49820300
*/*PG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 49820400
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KYWRDCTL DO GROUP */     49820500
*/*PG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 49820600
*  IF REQUEST(1)='STATUS'                    /* CHECK FOR KEYWORD */    49820700
*    THEN                                                               49820800
*      DO;                                                              49820900
*        XREQUEST='STATUS';                  /* SET XVARIABLE */        49821000
*        IF NUMBER(REQUEST)>1                /* CHECK POSITIONALS */    49821100
*          THEN                                                         49821200
*            DO;                                                        49821300
*              ZMS=' 8, "REQUEST'||          /**KPOSP* MSG*/            49821400
*                  REQUEST||                                            49821500
*                  '" "REQUEST"'||                                      49821600
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        49821700
*              ANS MSG('?IFAUSAGE ---> '||ZMS);                         49821800
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          49821900
*              ZMACRET=8;                    /* MACRO ERROR */          49822000
*            END;                                                       49822100
*/*PG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 49822200
*        ZCVAL='';                           /* INCORRECT KEYS FIELD */ 49822300
*        IF PRODOWNER^=''                    /* CHECK FOR KEY */        49822400
*          THEN                                                         49822500
*            ZCVAL=ZCVAL||',PRODOWNER';      /* INCORRECT KEY USED */   49822600
*        IF PRODNAME^=''                     /* CHECK FOR KEY */        49822700
*          THEN                                                         49822800
*            ZCVAL=ZCVAL||',PRODNAME';       /* INCORRECT KEY USED */   49822900
*        IF PRODVERS^=''                     /* CHECK FOR KEY */        49823000
*          THEN                                                         49823100
*            ZCVAL=ZCVAL||',PRODVERS';       /* INCORRECT KEY USED */   49823200
*        IF PRODQUAL^=''                     /* CHECK FOR KEY */        49823300
*          THEN                                                         49823400
*            ZCVAL=ZCVAL||',PRODQUAL';       /* INCORRECT KEY USED */   49823500
*        IF PRODID^=''                       /* CHECK FOR KEY */        49823600
*          THEN                                                         49823700
*            ZCVAL=ZCVAL||',PRODID';         /* INCORRECT KEY USED */   49823800
*        IF DOMAIN^=''                       /* CHECK FOR KEY */        49823900
*          THEN                                                         49824000
*            ZCVAL=ZCVAL||',DOMAIN';         /* INCORRECT KEY USED */   49824100
*        IF SCOPE^=''                        /* CHECK FOR KEY */        49824200
*          THEN                                                         49824300
*            ZCVAL=ZCVAL||',SCOPE';          /* INCORRECT KEY USED */   49824400
*        IF PRTOKEN^=''                      /* CHECK FOR KEY */        49824500
*          THEN                                                         49824600
*            ZCVAL=ZCVAL||',PRTOKEN';        /* INCORRECT KEY USED */   49824700
*        IF ENDTIME^=''                      /* CHECK FOR KEY */        49824800
*          THEN                                                         49824900
*            ZCVAL=ZCVAL||',ENDTIME';        /* INCORRECT KEY USED */   49825000
*        IF ENDDATA^=''                      /* CHECK FOR KEY */        49825100
*          THEN                                                         49825200
*            ZCVAL=ZCVAL||',ENDDATA';        /* INCORRECT KEY USED */   49825300
*        IF BEGTIME^=''                      /* CHECK FOR KEY */        49825400
*          THEN                                                         49825500
*            ZCVAL=ZCVAL||',BEGTIME';        /* INCORRECT KEY USED */   49825600
*        IF DATA^=''                         /* CHECK FOR KEY */        49825700
*          THEN                                                         49825800
*            ZCVAL=ZCVAL||',DATA';           /* INCORRECT KEY USED */   49825900
*        IF FORMAT^=''                       /* CHECK FOR KEY */        49826000
*          THEN                                                         49826100
*            ZCVAL=ZCVAL||',FORMAT';         /* INCORRECT KEY USED */   49826200
*        IF CURRENTDATA^=''                  /* CHECK FOR KEY */        49826300
*          THEN                                                         49826400
*            ZCVAL=ZCVAL||',CURRENTDATA';    /* INCORRECT KEY USED */   49826500
*        IF ZCVAL^=''                                                   49826600
*          THEN                                                         49826700
*            DO;                             /* INCORRECT KEYS USED */  49826800
*              ZCVAL=ZCVAL(2:LENGTH(ZCVAL));                            49826900
*              ZMS=' 8, "REQUEST'||          /**KMEIP* MSG*/            49827000
*                  REQUEST||'"'||                                       49827100
*                  ' DOES NOT ALLOW THE USE OF THE'||                   49827200
*                  ' FOLLOWING KEY(S) "'||                              49827300
*                  ZCVAL||'".';                                         49827400
*              ANS MSG('?IFAUSAGE ---> '||ZMS);                         49827500
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          49827600
*              ZMACRET=8;                    /* MACRO ERROR */          49827700
*            END;                                                       49827800
*/*PG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 49827900
*  IF LINKAGE='LINKAGE'                      /* CHECK ENTRY */          49828000
*    THEN                                                               49828100
*      DO;                                                              49828200
*        ZMS=' 8, THE "LINKAGE" KEY'||       /**KOPTP* MSG*/            49828300
*            ' MUST CONTAIN ONE'||                                      49828400
*            ' (OR MORE) ARGUMENT(S).';                                 49828500
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49828600
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49828700
*        ZMACRET=8;                          /* MACRO ERROR */          49828800
*      END;                                                             49828900
*  IF NUMBER(LINKAGE)>1                      /* CHECK POSITIONALS */    49829000
*    THEN                                                               49829100
*      DO;                                                              49829200
*        ZMS=' 8, "LINKAGE'||                /**KPOSP* MSG*/            49829300
*            LINKAGE||                                                  49829400
*            '" "LINKAGE"'||                                            49829500
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              49829600
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49829700
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49829800
*        ZMACRET=8;                          /* MACRO ERROR */          49829900
*      END;                                                             49830000
*/*PG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 49830100
*  XLINKAGE='';                              /* RESET XVARIABLE */      49830200
*  IF LINKAGE(1) = 'SVC'                                                49830300
*    THEN                                                               49830400
*      XLINKAGE = 'SVC';                     /* SET XVARIABLE */        49830500
*/*PG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 49830600
*  IF LINKAGE(1) = 'BRANCH'                                             49830700
*    THEN                                                               49830800
*      XLINKAGE = 'BRANCH';                  /* SET XVARIABLE */        49830900
*/*PG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 49831000
*  ZXLINKAGE='INPUT';                        /* SET IN/OUTPUT */        49831100
*  IF XLINKAGE=''                            /* CHECK FOR KEYWORD */    49831200
*    THEN                                                               49831300
*      DO;                                   /* KEYWORD NOT ENTERED */  49831400
*        XLINKAGE='SVC';                     /* SET DEFAULT */          49831500
*        IF LINKAGE(1)^=''                                              49831600
*          THEN                                                         49831700
*            DO;                                                        49831800
*              ZXLINKAGE='';                 /* RESET IN/OUTPUT */      49831900
*              ZMS=' 8, "LINKAGE'||          /**KUKWP* MSG*/            49832000
*                  LINKAGE||'"'||                                       49832100
*                  ' ARGUMENT 1 IS AN UNKNOWN KEYWORD. '||              49832200
*                  ' VALID KEYWORD CHOICE(S) ARE:'||                    49832300
*                  ' "SVC"'||                /* VALID KEYWORD */        49832400
*                  ' OR "BRANCH".';          /* VALID KEYWORD */        49832500
*              ANS MSG('?IFAUSAGE ---> '||ZMS);                         49832600
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          49832700
*              ZMACRET=8;                    /* MACRO ERROR */          49832800
*            END;                                                       49832900
*      END;                                                             49833000
*/*PG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 49833100
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KYWRDCTL DO GROUP */     49833200
*/*PG.KKCTL06 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 49833300
*  IF REQUEST='REQUEST'                                                 49833400
*    | REQUEST='()'                          /*CHECK ENTRY*/            49833500
*     THEN                                                              49833600
*       DO;                                                             49833700
*              ZMS=' 8, THE "REQUEST" KEY'|| /**KOPTP* MSG*/            49833800
*                  ' MUST CONTAIN ONE'||                                49833900
*                  ' (OR MORE) ARGUMENT(S).';                           49834000
*              ANS MSG('?IFAUSAGE ---> '||ZMS);                         49834100
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          49834200
*              ZMACRET=8;                    /* MACRO ERROR */          49834300
*       END;                                                            49834400
*  ELSE                                                                 49834500
*    DO;                                                                49834600
*      ZXREQUEST='INPUT';                    /* SET IN/OUTPUT */        49834700
*      IF XREQUEST=''                        /* CHECK FOR KEYWORD */    49834800
*        THEN                                                           49834900
*          DO;                               /* KEYWORD NOT ENTERED */  49835000
*            XREQUEST='REGISTER';            /* SET DEFAULT */          49835100
*            IF REQUEST(1)^=''               /* CHECK FOR KEYWORD */    49835200
*              THEN                                                     49835300
*                DO;                                                    49835400
*                  ZXREQUEST='';             /* RESET IN/OUTPUT */      49835500
*              ZMS=' 8, "REQUEST'||          /**KUKWP* MSG*/            49835600
*                  REQUEST||'"'||                                       49835700
*                  ' ARGUMENT 1 IS AN UNKNOWN KEYWORD. '||              49835800
*                  ' VALID KEYWORD CHOICE(S) ARE:'||                    49835900
*                  ' "REGISTER",'||          /* VALID KEYWORD */        49836000
*                  ' "DEREGISTER",'||        /* VALID KEYWORD */        49836100
*                  ' "FUNCTIONBEGIN",'||     /* VALID KEYWORD */        49836200
*                  ' "FUNCTIONDATA",'||      /* VALID KEYWORD */        49836300
*                  ' "FUNCTIONEND",'||       /* VALID KEYWORD */        49836400
*                  ' OR "STATUS".';          /* VALID KEYWORD */        49836500
*              ANS MSG('?IFAUSAGE ---> '||ZMS);                         49836600
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          49836700
*              ZMACRET=8;                    /* MACRO ERROR */          49836800
*                END;                                                   49836900
*          END;                                                         49837000
*    END;                                                               49837100
*/*PG.KKCTL07 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 49837200
*  IF REQUEST(1)=''                          /* CHECK FOR KEYWORD */    49837300
*    THEN                                                               49837400
*      DO;                                                              49837500
*        ZXREQUEST='';                       /* RESET IN/OUTPUT */      49837600
*        ZMS=' 8, THE'||                     /**KRKWP* MSG*/            49837700
*            ' "REQUEST" KEY AND ITS ARGUMENT'||                        49837800
*            ' ARE REQUIRED.'||                                         49837900
*            ' VALID KEYWORD CHOICE(S) ARE:'||                          49838000
*            ' "REGISTER",'||                /* VALID KEYWORD */        49838100
*            ' "DEREGISTER",'||              /* VALID KEYWORD */        49838200
*            ' "FUNCTIONBEGIN",'||           /* VALID KEYWORD */        49838300
*            ' "FUNCTIONDATA",'||            /* VALID KEYWORD */        49838400
*            ' "FUNCTIONEND",'||             /* VALID KEYWORD */        49838500
*            ' OR "STATUS".';                /* VALID KEYWORD */        49838600
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49838700
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49838800
*        ZMACRET=8;                          /* MACRO ERROR */          49838900
*      END;                                                             49839000
*/*PG.KXVAR01 NAME, OPT OUTPUT, KEYS -EXCESSIVE ARGUMENTS------------*/ 49839100
*  IF RETCODE='RETCODE' | RETCODE='()'       /*CHECK ENTRY*/            49839200
*    THEN                                                               49839300
*      DO;                                                              49839400
*        ZMS=' 8, THE "RETCODE" KEY'||       /**KOPTP* MSG*/            49839500
*            ' MUST CONTAIN ONE'||                                      49839600
*            ' (OR MORE) ARGUMENT(S).';                                 49839700
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49839800
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49839900
*        ZMACRET=8;                          /* MACRO ERROR */          49840000
*      END;                                                             49840100
*  IF NUMBER(RETCODE)>1                      /* CHECK POSITIONALS */    49840200
*    THEN                                                               49840300
*      DO;                                                              49840400
*        ZMS=' 8, "RETCODE'||                /**KPOSP* MSG*/            49840500
*            RETCODE||                                                  49840600
*            '" "RETCODE"'||                                            49840700
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              49840800
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49840900
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49841000
*        ZMACRET=8;                          /* MACRO ERROR */          49841100
*      END;                                                             49841200
*/*PG.KXVAR15 NAME, OPT OUTPUT, KEYS -XVARIABLE----------------------*/ 49841300
*  IF RETCODE(1)^=''                         /* CHECK FOR NULL */       49841400
*    THEN                                                               49841500
*      DO;                                                              49841600
*        XRETCODE=RETCODE(1);                /* SET XVARIABLE */        49841700
*        ZXRETCODE='OUTPUT';                 /* SET OUTPUT */           49841800
*      END;                                                             49841900
*  ELSE                                                                 49842000
*    IF ZXRETCODE^=''                                                   49842100
*      THEN                                                             49842200
*        ZXRETCODE='';                       /* RESET OUTPUT */         49842300
*/*PG.P04 XMF^='L' & XMFSCK='COMPLETE' ------------------------------*/ 49842400
*      END;                                  /* END COMPLETE CHECKING*/ 49842500
*/********************************************************************/ 49842600
*/***PE.MF00 PARTIAL MACRO SYNTAX CHECKING                           */ 49842700
*/********************************************************************/ 49842800
*/*PE.MF01 XMF^='L' & XMFSCK='NOCHECK' ------------------------------*/ 49842900
*  IF XMF^='L' & XMFSCK='NOCHECK'                                       49843000
*    THEN                                                               49843100
*      DO;                                   /* PARTIAL SYNTAX CHECK */ 49843200
*/*PE.KC00 INITIALIZE KEYWORD CONTROL VARIABLES----------------------*/ 49843300
*  XREQUEST='';                        /*ejb rmp93*/                    49843400
*  XDOMAIN='';                        /*ejb rmp93*/                     49843500
*  XSCOPE='';                        /*ejb rmp93*/                      49843600
*  XLINKAGE='';                        /*ejb rmp93*/                    49843700
*  XFORMAT='';                        /*ejb rmp93*/                     49843800
*/*PE.P01 EXCESSIVE POSITIONALS--------------------------------------*/ 49843900
*  IF NUMBER(MACLIST)>0                      /* CHECK POSITIONALS */    49844000
*    THEN                                                               49844100
*      DO;                                                              49844200
*        ZMS=' 8, POSITIONAL ARGUMENT(S),'|| /**PPOSP* MSG*/            49844300
*            ' "'||MACLIST||'"'||                                       49844400
*            ' CANNOT BE USED.'||                                       49844500
*            ' NO POSITIONAL ARGUMENTS'||                               49844600
*            ' ARE ALLOWED.';                                           49844700
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49844800
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49844900
*        ZMACRET=8;                          /* MACRO ERROR */          49845000
*      END;                                                             49845100
*/*PE.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 49845200
*  IF REQUEST(1)='REGISTER'                  /* CHECK FOR KEYWORD */    49845300
*    THEN                                                               49845400
*      DO;                                                              49845500
*        XREQUEST='REGISTER';                /* SET XVARIABLE */        49845600
*        IF NUMBER(REQUEST)>1                /* CHECK POSITIONALS */    49845700
*          THEN                                                         49845800
*            DO;                                                        49845900
*              ZMS=' 8, "REQUEST'||          /**KPOSP* MSG*/            49846000
*                  REQUEST||                                            49846100
*                  '" "REQUEST"'||                                      49846200
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        49846300
*              ANS MSG('?IFAUSAGE ---> '||ZMS);                         49846400
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          49846500
*              ZMACRET=8;                    /* MACRO ERROR */          49846600
*            END;                                                       49846700
*      END;                                                             49846800
*/*PE.KXVAR01 NAME, RQD INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 49846900
*  IF NUMBER(PRODOWNER)>1                    /* CHECK POSITIONALS */    49847000
*    THEN                                                               49847100
*      DO;                                                              49847200
*        ZMS=' 8, "PRODOWNER'||              /**KPOSP* MSG*/            49847300
*            PRODOWNER||                                                49847400
*            '" "PRODOWNER"'||                                          49847500
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              49847600
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49847700
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49847800
*        ZMACRET=8;                          /* MACRO ERROR */          49847900
*      END;                                                             49848000
*/*PE.KXVAR03 NAME, RQD INPUT, KEYS -XVARIABLE-----------------------*/ 49848100
*  IF PRODOWNER(1)^=''                       /* CHECK FOR NULL */       49848200
*    THEN                                                               49848300
*      DO;                                                              49848400
*        XPRODOWNER=PRODOWNER(1);            /* SET XVARIABLE */        49848500
*        ZXPRODOWNER='INPUT';                /* SET IN/OUTPUT */        49848600
*      END;                                                             49848700
*/*PE.KXVAR01 NAME, RQD INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 49848800
*  IF NUMBER(PRODNAME)>1                     /* CHECK POSITIONALS */    49848900
*    THEN                                                               49849000
*      DO;                                                              49849100
*        ZMS=' 8, "PRODNAME'||               /**KPOSP* MSG*/            49849200
*            PRODNAME||                                                 49849300
*            '" "PRODNAME"'||                                           49849400
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              49849500
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49849600
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49849700
*        ZMACRET=8;                          /* MACRO ERROR */          49849800
*      END;                                                             49849900
*/*PE.KXVAR03 NAME, RQD INPUT, KEYS -XVARIABLE-----------------------*/ 49850000
*  IF PRODNAME(1)^=''                        /* CHECK FOR NULL */       49850100
*    THEN                                                               49850200
*      DO;                                                              49850300
*        XPRODNAME=PRODNAME(1);              /* SET XVARIABLE */        49850400
*        ZXPRODNAME='INPUT';                 /* SET IN/OUTPUT */        49850500
*      END;                                                             49850600
*/*PE.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 49850700
*  IF PRODVERS='PRODVERS'                    /* CHECK ENTRY */          49850800
*    THEN                                                               49850900
*      DO;                                                              49851000
*        ZMS=' 8, THE "PRODVERS" KEY'||      /**KOPTP* MSG*/            49851100
*            ' MUST CONTAIN ONE'||                                      49851200
*            ' (OR MORE) ARGUMENT(S).';                                 49851300
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49851400
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49851500
*        ZMACRET=8;                          /* MACRO ERROR */          49851600
*      END;                                                             49851700
*  IF NUMBER(PRODVERS)>1                     /* CHECK POSITIONALS */    49851800
*    THEN                                                               49851900
*      DO;                                                              49852000
*        ZMS=' 8, "PRODVERS'||               /**KPOSP* MSG*/            49852100
*            PRODVERS||                                                 49852200
*            '" "PRODVERS"'||                                           49852300
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              49852400
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49852500
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49852600
*        ZMACRET=8;                          /* MACRO ERROR */          49852700
*      END;                                                             49852800
*/*PE.KXVAR03 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 49852900
*  IF PRODVERS(1)^=''                        /* CHECK FOR NULL */       49853000
*    THEN                                                               49853100
*      DO;                                                              49853200
*        XPRODVERS=PRODVERS(1);              /* SET XVARIABLE */        49853300
*        ZXPRODVERS='INPUT';                 /* SET IN/OUTPUT */        49853400
*      END;                                                             49853500
*/*PE.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 49853600
*  IF PRODQUAL='PRODQUAL'                    /* CHECK ENTRY */          49853700
*    THEN                                                               49853800
*      DO;                                                              49853900
*        ZMS=' 8, THE "PRODQUAL" KEY'||      /**KOPTP* MSG*/            49854000
*            ' MUST CONTAIN ONE'||                                      49854100
*            ' (OR MORE) ARGUMENT(S).';                                 49854200
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49854300
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49854400
*        ZMACRET=8;                          /* MACRO ERROR */          49854500
*      END;                                                             49854600
*  IF NUMBER(PRODQUAL)>1                     /* CHECK POSITIONALS */    49854700
*    THEN                                                               49854800
*      DO;                                                              49854900
*        ZMS=' 8, "PRODQUAL'||               /**KPOSP* MSG*/            49855000
*            PRODQUAL||                                                 49855100
*            '" "PRODQUAL"'||                                           49855200
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              49855300
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49855400
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49855500
*        ZMACRET=8;                          /* MACRO ERROR */          49855600
*      END;                                                             49855700
*/*PE.KXVAR03 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 49855800
*  IF PRODQUAL(1)^=''                        /* CHECK FOR NULL */       49855900
*    THEN                                                               49856000
*      DO;                                                              49856100
*        XPRODQUAL=PRODQUAL(1);              /* SET XVARIABLE */        49856200
*        ZXPRODQUAL='INPUT';                 /* SET IN/OUTPUT */        49856300
*      END;                                                             49856400
*/*PE.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 49856500
*  IF PRODID='PRODID'                        /* CHECK ENTRY */          49856600
*    THEN                                                               49856700
*      DO;                                                              49856800
*        ZMS=' 8, THE "PRODID" KEY'||        /**KOPTP* MSG*/            49856900
*            ' MUST CONTAIN ONE'||                                      49857000
*            ' (OR MORE) ARGUMENT(S).';                                 49857100
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49857200
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49857300
*        ZMACRET=8;                          /* MACRO ERROR */          49857400
*      END;                                                             49857500
*  IF NUMBER(PRODID)>1                       /* CHECK POSITIONALS */    49857600
*    THEN                                                               49857700
*      DO;                                                              49857800
*        ZMS=' 8, "PRODID'||                 /**KPOSP* MSG*/            49857900
*            PRODID||                                                   49858000
*            '" "PRODID"'||                                             49858100
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              49858200
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49858300
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49858400
*        ZMACRET=8;                          /* MACRO ERROR */          49858500
*      END;                                                             49858600
*/*PE.KXVAR03 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 49858700
*  IF PRODID(1)^=''                          /* CHECK FOR NULL */       49858800
*    THEN                                                               49858900
*      DO;                                                              49859000
*        XPRODID=PRODID(1);                  /* SET XVARIABLE */        49859100
*        ZXPRODID='INPUT';                   /* SET IN/OUTPUT */        49859200
*      END;                                                             49859300
*/*PE.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 49859400
*  IF DOMAIN(1)='ADDRSP'                     /* CHECK FOR KEYWORD */    49859500
*    THEN                                                               49859600
*      DO;                                                              49859700
*        XDOMAIN='ADDRSP';                   /* SET XVARIABLE */        49859800
*        IF NUMBER(DOMAIN)>1                 /* CHECK POSITIONALS */    49859900
*          THEN                                                         49860000
*            DO;                                                        49860100
*              ZMS=' 8, "DOMAIN'||           /**KPOSP* MSG*/            49860200
*                  DOMAIN||                                             49860300
*                  '" "DOMAIN"'||                                       49860400
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        49860500
*              ANS MSG('?IFAUSAGE ---> '||ZMS);                         49860600
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          49860700
*              ZMACRET=8;                    /* MACRO ERROR */          49860800
*            END;                                                       49860900
*      END;                                                             49861000
*/*PE.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 49861100
*  IF DOMAIN(1)='TASK'                       /* CHECK FOR KEYWORD */    49861200
*    THEN                                                               49861300
*      DO;                                                              49861400
*        XDOMAIN='TASK';                     /* SET XVARIABLE */        49861500
*        IF NUMBER(DOMAIN)>1                 /* CHECK POSITIONALS */    49861600
*          THEN                                                         49861700
*            DO;                                                        49861800
*              ZMS=' 8, "DOMAIN'||           /**KPOSP* MSG*/            49861900
*                  DOMAIN||                                             49862000
*                  '" "DOMAIN"'||                                       49862100
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        49862200
*              ANS MSG('?IFAUSAGE ---> '||ZMS);                         49862300
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          49862400
*              ZMACRET=8;                    /* MACRO ERROR */          49862500
*            END;                                                       49862600
*      END;                                                             49862700
*/*PE.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 49862800
*  IF SCOPE='SCOPE'                          /* CHECK ENTRY */          49862900
*    THEN                                                               49863000
*      DO;                                                              49863100
*        ZMS=' 8, THE "SCOPE" KEY'||         /**KOPTP* MSG*/            49863200
*            ' MUST CONTAIN ONE'||                                      49863300
*            ' (OR MORE) ARGUMENT(S).';                                 49863400
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49863500
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49863600
*        ZMACRET=8;                          /* MACRO ERROR */          49863700
*      END;                                                             49863800
*  IF NUMBER(SCOPE)>1                        /* CHECK POSITIONALS */    49863900
*    THEN                                                               49864000
*      DO;                                                              49864100
*        ZMS=' 8, "SCOPE'||                  /**KPOSP* MSG*/            49864200
*            SCOPE||                                                    49864300
*            '" "SCOPE"'||                                              49864400
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              49864500
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49864600
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49864700
*        ZMACRET=8;                          /* MACRO ERROR */          49864800
*      END;                                                             49864900
*/*PE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 49865000
*  IF SCOPE(1) = 'ALL'                                                  49865100
*    THEN                                                               49865200
*      XSCOPE = 'ALL';                       /* SET XVARIABLE */        49865300
*/*PE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 49865400
*  IF SCOPE(1) = 'FUNCTION'                                             49865500
*    THEN                                                               49865600
*      XSCOPE = 'FUNCTION';                  /* SET XVARIABLE */        49865700
*/*PE.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 49865800
*  IF XSCOPE^=''                             /* CHECK FOR KEYWORD */    49865900
*    THEN                                                               49866000
*      ZXSCOPE='INPUT';                      /* SET IN/OUTPUT */        49866100
*    ELSE                                                               49866200
*      DO;                                   /* KEYWORD NOT ENTERED */  49866300
*        IF SCOPE(1)^=''                                                49866400
*          THEN                                                         49866500
*            DO;                                                        49866600
*              ZMS=' 8, "SCOPE'||            /**KUKWP* MSG*/            49866700
*                  SCOPE||'"'||                                         49866800
*                  ' ARGUMENT 1 IS AN UNKNOWN KEYWORD. '||              49866900
*                  ' VALID KEYWORD CHOICE(S) ARE:'||                    49867000
*                  ' "ALL"'||                /* VALID KEYWORD */        49867100
*                  ' OR "FUNCTION".';        /* VALID KEYWORD */        49867200
*              ANS MSG('?IFAUSAGE ---> '||ZMS);                         49867300
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          49867400
*              ZMACRET=8;                    /* MACRO ERROR */          49867500
*            END;                                                       49867600
*      END;                                                             49867700
*/*PE.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 49867800
*  IF XDOMAIN^=''                            /* CHECK FOR KEYWORD */    49867900
*    THEN                                                               49868000
*      ZXDOMAIN='INPUT';                     /* SET IN/OUTPUT */        49868100
*    ELSE                                                               49868200
*      DO;                                   /* KEYWORD NOT ENTERED */  49868300
*        IF DOMAIN(1)^=''                    /* CHECK FOR KEYWORD */    49868400
*          THEN                                                         49868500
*            DO;                                                        49868600
*              ZXDOMAIN='';                  /* RESET IN/OUTPUT */      49868700
*              ZMS=' 8, "DOMAIN'||           /**KUKWP* MSG*/            49868800
*                  DOMAIN||'"'||                                        49868900
*                  ' ARGUMENT 1 IS AN UNKNOWN KEYWORD. '||              49869000
*                  ' VALID KEYWORD CHOICE(S) ARE:'||                    49869100
*                  ' "ADDRSP"'||             /* VALID KEYWORD */        49869200
*                  ' OR "TASK".';            /* VALID KEYWORD */        49869300
*              ANS MSG('?IFAUSAGE ---> '||ZMS);                         49869400
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          49869500
*              ZMACRET=8;                    /* MACRO ERROR */          49869600
*            END;                                                       49869700
*      END;                                                             49869800
*/*PE.KXVAR01 NAME, OPT OUTPUT, KEYS -EXCESSIVE ARGUMENTS------------*/ 49869900
*  IF PRTOKEN='PRTOKEN'                      /* CHECK ENTRY */          49870000
*    THEN                                                               49870100
*      DO;                                                              49870200
*        ZMS=' 8, THE "PRTOKEN" KEY'||       /**KOPTP* MSG*/            49870300
*            ' MUST CONTAIN ONE'||                                      49870400
*            ' (OR MORE) ARGUMENT(S).';                                 49870500
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49870600
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49870700
*        ZMACRET=8;                          /* MACRO ERROR */          49870800
*      END;                                                             49870900
*  IF NUMBER(PRTOKEN)>1                      /* CHECK POSITIONALS */    49871000
*    THEN                                                               49871100
*      DO;                                                              49871200
*        ZMS=' 8, "PRTOKEN'||                /**KPOSP* MSG*/            49871300
*            PRTOKEN||                                                  49871400
*            '" "PRTOKEN"'||                                            49871500
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              49871600
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49871700
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49871800
*        ZMACRET=8;                          /* MACRO ERROR */          49871900
*      END;                                                             49872000
*/*PE.KXVAR03 NAME, OPT OUTPUT, KEYS -XVARIABLE----------------------*/ 49872100
*  IF PRTOKEN(1)^=''                         /* CHECK FOR NULL */       49872200
*    THEN                                                               49872300
*      DO;                                                              49872400
*        XPRTOKEN=PRTOKEN(1);                /* SET XVARIABLE */        49872500
*        ZXPRTOKEN='OUTPUT';                 /* SET IN/OUTPUT */        49872600
*      END;                                                             49872700
*/*PE.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 49872800
*  IF LINKAGE='LINKAGE'                      /* CHECK ENTRY */          49872900
*    THEN                                                               49873000
*      DO;                                                              49873100
*        ZMS=' 8, THE "LINKAGE" KEY'||       /**KOPTP* MSG*/            49873200
*            ' MUST CONTAIN ONE'||                                      49873300
*            ' (OR MORE) ARGUMENT(S).';                                 49873400
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49873500
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49873600
*        ZMACRET=8;                          /* MACRO ERROR */          49873700
*      END;                                                             49873800
*  IF NUMBER(LINKAGE)>1                      /* CHECK POSITIONALS */    49873900
*    THEN                                                               49874000
*      DO;                                                              49874100
*        ZMS=' 8, "LINKAGE'||                /**KPOSP* MSG*/            49874200
*            LINKAGE||                                                  49874300
*            '" "LINKAGE"'||                                            49874400
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              49874500
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49874600
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49874700
*        ZMACRET=8;                          /* MACRO ERROR */          49874800
*      END;                                                             49874900
*/*PE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 49875000
*  IF LINKAGE(1) = 'SVC'                                                49875100
*    THEN                                                               49875200
*      XLINKAGE = 'SVC';                     /* SET XVARIABLE */        49875300
*/*PE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 49875400
*  IF LINKAGE(1) = 'BRANCH'                                             49875500
*    THEN                                                               49875600
*      XLINKAGE = 'BRANCH';                  /* SET XVARIABLE */        49875700
*/*PE.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 49875800
*  IF XLINKAGE^=''                           /* CHECK FOR KEYWORD */    49875900
*    THEN                                                               49876000
*      ZXLINKAGE='INPUT';                    /* SET IN/OUTPUT */        49876100
*    ELSE                                                               49876200
*      DO;                                   /* KEYWORD NOT ENTERED */  49876300
*        IF LINKAGE(1)^=''                                              49876400
*          THEN                                                         49876500
*            DO;                                                        49876600
*              ZMS=' 8, "LINKAGE'||          /**KUKWP* MSG*/            49876700
*                  LINKAGE||'"'||                                       49876800
*                  ' ARGUMENT 1 IS AN UNKNOWN KEYWORD. '||              49876900
*                  ' VALID KEYWORD CHOICE(S) ARE:'||                    49877000
*                  ' "SVC"'||                /* VALID KEYWORD */        49877100
*                  ' OR "BRANCH".';          /* VALID KEYWORD */        49877200
*              ANS MSG('?IFAUSAGE ---> '||ZMS);                         49877300
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          49877400
*              ZMACRET=8;                    /* MACRO ERROR */          49877500
*            END;                                                       49877600
*      END;                                                             49877700
*/*PE.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 49877800
*  IF REQUEST(1)='DEREGISTER'                /* CHECK FOR KEYWORD */    49877900
*    THEN                                                               49878000
*      DO;                                                              49878100
*        XREQUEST='DEREGISTER';              /* SET XVARIABLE */        49878200
*        IF NUMBER(REQUEST)>1                /* CHECK POSITIONALS */    49878300
*          THEN                                                         49878400
*            DO;                                                        49878500
*              ZMS=' 8, "REQUEST'||          /**KPOSP* MSG*/            49878600
*                  REQUEST||                                            49878700
*                  '" "REQUEST"'||                                      49878800
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        49878900
*              ANS MSG('?IFAUSAGE ---> '||ZMS);                         49879000
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          49879100
*              ZMACRET=8;                    /* MACRO ERROR */          49879200
*            END;                                                       49879300
*      END;                                                             49879400
*/*PE.KMEKY01 NAME, RQD INPUT, ME KEYS -XVARIABLE KEY----------------*/ 49879500
*  XDEREGPRODNAME='';                        /* RESET XVARIABLE */      49879600
*  IF PRODOWNER^=''                          /* CHECK ME KEY */         49879700
*    THEN                                                               49879800
*      DO;                                   /* VALID ME KEY */         49879900
*        IF NUMBER(PRODOWNER)>1              /* CHECK SUBLISTS */       49880000
*          THEN                                                         49880100
*            DO;                                                        49880200
*              ZMS=' 8, "PRODOWNER'||        /**KPOSP* MSG*/            49880300
*                  PRODOWNER||                                          49880400
*                  '" "PRODOWNER"'||                                    49880500
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        49880600
*              ANS MSG('?IFAUSAGE ---> '||ZMS);                         49880700
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          49880800
*              ZMACRET=8;                    /* MACRO ERROR */          49880900
*            END;                                                       49881000
*        XDEREGPRODNAME='PRODOWNER';         /* SET XVARIABLE */        49881100
*        XPRODOWNER=PRODOWNER(1);            /* SET XVARIABLE */        49881200
*        ZXDEREGPRODNAME='INPUT';            /* SET IN/OUTPUT */        49881300
*        ZXPRODOWNER='INPUT';                /* SET IN/OUTPUT */        49881400
*        IF PRODOWNER(1)=''                  /* CHECK ME KEY */         49881500
*          THEN                                                         49881600
*            DO;                                                        49881700
*              ZXDEREGPRODNAME='';           /* RESET IN/OUTPUT */      49881800
*              ZXPRODOWNER='';               /* RESET IN/OUTPUT */      49881900
*            END;                                                       49882000
*      END;                                                             49882100
*/*PE.KMEKY02 NAME, RQD INPUT, ME KEYS -XVARIABLE KEY----------------*/ 49882200
*  IF PRTOKEN^=''                            /* CHECK ME KEY */         49882300
*    THEN                                                               49882400
*      DO;                                                              49882500
*        IF NUMBER(PRTOKEN)>1                /* CHECK SUBLISTS */       49882600
*          THEN                                                         49882700
*            DO;                                                        49882800
*              ZMS=' 8, "PRTOKEN'||          /**KPOSP* MSG*/            49882900
*                  PRTOKEN||                                            49883000
*                  '" "PRTOKEN"'||                                      49883100
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        49883200
*              ANS MSG('?IFAUSAGE ---> '||ZMS);                         49883300
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          49883400
*              ZMACRET=8;                    /* MACRO ERROR */          49883500
*            END;                                                       49883600
*        IF XDEREGPRODNAME=''                /* CHECK XVARIABLE */      49883700
*          THEN                                                         49883800
*            DO;                             /* VALID ME KEY */         49883900
*              XDEREGPRODNAME='PRTOKEN';     /* SET XVAR1 */            49884000
*              XPRTOKEN=PRTOKEN(1);          /* SET XVAR2 */            49884100
*              ZXDEREGPRODNAME='INPUT';      /* SET IN/OUTPUT */        49884200
*              ZXPRTOKEN='INPUT';            /* SET IN/OUTPUT */        49884300
*              IF PRTOKEN(1)=''              /* CHECK ME KEY */         49884400
*                THEN                                                   49884500
*                  DO;                                                  49884600
*                    ZXDEREGPRODNAME='';     /* RESET IN/OUTPUT */      49884700
*                    ZXPRTOKEN='';           /* RESET IN/OUTPUT */      49884800
*                  END;                                                 49884900
*            END;                                                       49885000
*          ELSE                                                         49885100
*            DO;                                                        49885200
*              ZMS=' 8, "PRTOKEN'||          /**KMEKP* MSG*/            49885300
*                  PRTOKEN||'"'||                                       49885400
*                  ' IS MUTUALLY EXCLUSIVE WITH THE "'||                49885500
*                  XDEREGPRODNAME||                                     49885600
*                  '" KEY.';                                            49885700
*              ANS MSG('?IFAUSAGE ---> '||ZMS);                         49885800
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          49885900
*              ZMACRET=8;                    /* MACRO ERROR */          49886000
*            END;                                                       49886100
*      END;                                                             49886200
*/*PE.KMEKY05 NAME, RQD INPUT, ME KEYS -ME KEY DEFAULT RESETS--------*/ 49886300
*  IF XDEREGPRODNAME=''                      /* CHECK XVARIABLE */      49886400
*    THEN                                                               49886500
*      DO;                                                              49886600
*        XDEREGPRODNAME='';                  /* RESET DEFAULT */        49886700
*        ZXDEREGPRODNAME='';                 /* RESET IN/OUTPUT */      49886800
*        XPRODOWNER='';                      /* RESET DEFAULT */        49886900
*        ZXPRODOWNER='';                     /* RESET IN/OUTPUT */      49887000
*      END;                                                             49887100
*/*PE.KMEKY07 NAME, RQD INPUT, ME KEYS -START------------------------*/ 49887200
*  IF XDEREGPRODNAME='PRODOWNER'             /* CHECK FOR ME KEY */     49887300
*    THEN                                                               49887400
*      DO;   /**** START OF A MUTUALLY EXCLUSIVE KEY DO GROUP */        49887500
*/*PE.KXVAR01 NAME, RQD INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 49887600
*  IF NUMBER(PRODNAME)>1                     /* CHECK POSITIONALS */    49887700
*    THEN                                                               49887800
*      DO;                                                              49887900
*        ZMS=' 8, "PRODNAME'||               /**KPOSP* MSG*/            49888000
*            PRODNAME||                                                 49888100
*            '" "PRODNAME"'||                                           49888200
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              49888300
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49888400
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49888500
*        ZMACRET=8;                          /* MACRO ERROR */          49888600
*      END;                                                             49888700
*/*PE.KXVAR03 NAME, RQD INPUT, KEYS -XVARIABLE-----------------------*/ 49888800
*  IF PRODNAME(1)^=''                        /* CHECK FOR NULL */       49888900
*    THEN                                                               49889000
*      DO;                                                              49889100
*        XPRODNAME=PRODNAME(1);              /* SET XVARIABLE */        49889200
*        ZXPRODNAME='INPUT';                 /* SET IN/OUTPUT */        49889300
*      END;                                                             49889400
*/*PE.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 49889500
*  IF PRODVERS='PRODVERS'                    /* CHECK ENTRY */          49889600
*    THEN                                                               49889700
*      DO;                                                              49889800
*        ZMS=' 8, THE "PRODVERS" KEY'||      /**KOPTP* MSG*/            49889900
*            ' MUST CONTAIN ONE'||                                      49890000
*            ' (OR MORE) ARGUMENT(S).';                                 49890100
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49890200
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49890300
*        ZMACRET=8;                          /* MACRO ERROR */          49890400
*      END;                                                             49890500
*  IF NUMBER(PRODVERS)>1                     /* CHECK POSITIONALS */    49890600
*    THEN                                                               49890700
*      DO;                                                              49890800
*        ZMS=' 8, "PRODVERS'||               /**KPOSP* MSG*/            49890900
*            PRODVERS||                                                 49891000
*            '" "PRODVERS"'||                                           49891100
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              49891200
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49891300
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49891400
*        ZMACRET=8;                          /* MACRO ERROR */          49891500
*      END;                                                             49891600
*/*PE.KXVAR03 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 49891700
*  IF PRODVERS(1)^=''                        /* CHECK FOR NULL */       49891800
*    THEN                                                               49891900
*      DO;                                                              49892000
*        XPRODVERS=PRODVERS(1);              /* SET XVARIABLE */        49892100
*        ZXPRODVERS='INPUT';                 /* SET IN/OUTPUT */        49892200
*      END;                                                             49892300
*/*PE.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 49892400
*  IF PRODQUAL='PRODQUAL'                    /* CHECK ENTRY */          49892500
*    THEN                                                               49892600
*      DO;                                                              49892700
*        ZMS=' 8, THE "PRODQUAL" KEY'||      /**KOPTP* MSG*/            49892800
*            ' MUST CONTAIN ONE'||                                      49892900
*            ' (OR MORE) ARGUMENT(S).';                                 49893000
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49893100
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49893200
*        ZMACRET=8;                          /* MACRO ERROR */          49893300
*      END;                                                             49893400
*  IF NUMBER(PRODQUAL)>1                     /* CHECK POSITIONALS */    49893500
*    THEN                                                               49893600
*      DO;                                                              49893700
*        ZMS=' 8, "PRODQUAL'||               /**KPOSP* MSG*/            49893800
*            PRODQUAL||                                                 49893900
*            '" "PRODQUAL"'||                                           49894000
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              49894100
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49894200
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49894300
*        ZMACRET=8;                          /* MACRO ERROR */          49894400
*      END;                                                             49894500
*/*PE.KXVAR03 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 49894600
*  IF PRODQUAL(1)^=''                        /* CHECK FOR NULL */       49894700
*    THEN                                                               49894800
*      DO;                                                              49894900
*        XPRODQUAL=PRODQUAL(1);              /* SET XVARIABLE */        49895000
*        ZXPRODQUAL='INPUT';                 /* SET IN/OUTPUT */        49895100
*      END;                                                             49895200
*/*PE.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 49895300
*  IF PRODID='PRODID'                        /* CHECK ENTRY */          49895400
*    THEN                                                               49895500
*      DO;                                                              49895600
*        ZMS=' 8, THE "PRODID" KEY'||        /**KOPTP* MSG*/            49895700
*            ' MUST CONTAIN ONE'||                                      49895800
*            ' (OR MORE) ARGUMENT(S).';                                 49895900
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49896000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49896100
*        ZMACRET=8;                          /* MACRO ERROR */          49896200
*      END;                                                             49896300
*  IF NUMBER(PRODID)>1                       /* CHECK POSITIONALS */    49896400
*    THEN                                                               49896500
*      DO;                                                              49896600
*        ZMS=' 8, "PRODID'||                 /**KPOSP* MSG*/            49896700
*            PRODID||                                                   49896800
*            '" "PRODID"'||                                             49896900
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              49897000
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49897100
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49897200
*        ZMACRET=8;                          /* MACRO ERROR */          49897300
*      END;                                                             49897400
*/*PE.KXVAR03 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 49897500
*  IF PRODID(1)^=''                          /* CHECK FOR NULL */       49897600
*    THEN                                                               49897700
*      DO;                                                              49897800
*        XPRODID=PRODID(1);                  /* SET XVARIABLE */        49897900
*        ZXPRODID='INPUT';                   /* SET IN/OUTPUT */        49898000
*      END;                                                             49898100
*/*PE.KMEKY06 NAME, RQD INPUT, ME KEYS -END--------------------------*/ 49898200
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KEY DO GROUP */          49898300
*/*PE.KXVAR01 NAME, OPT OUTPUT, KEYS -EXCESSIVE ARGUMENTS------------*/ 49898400
*  IF ENDTIME='ENDTIME'                      /* CHECK ENTRY */          49898500
*    THEN                                                               49898600
*      DO;                                                              49898700
*        ZMS=' 8, THE "ENDTIME" KEY'||       /**KOPTP* MSG*/            49898800
*            ' MUST CONTAIN ONE'||                                      49898900
*            ' (OR MORE) ARGUMENT(S).';                                 49899000
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49899100
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49899200
*        ZMACRET=8;                          /* MACRO ERROR */          49899300
*      END;                                                             49899400
*  IF NUMBER(ENDTIME)>1                      /* CHECK POSITIONALS */    49899500
*    THEN                                                               49899600
*      DO;                                                              49899700
*        ZMS=' 8, "ENDTIME'||                /**KPOSP* MSG*/            49899800
*            ENDTIME||                                                  49899900
*            '" "ENDTIME"'||                                            49900000
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              49900100
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49900200
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49900300
*        ZMACRET=8;                          /* MACRO ERROR */          49900400
*      END;                                                             49900500
*/*PE.KXVAR03 NAME, OPT OUTPUT, KEYS -XVARIABLE----------------------*/ 49900600
*  IF ENDTIME(1)^=''                         /* CHECK FOR NULL */       49900700
*    THEN                                                               49900800
*      DO;                                                              49900900
*        XENDTIME=ENDTIME(1);                /* SET XVARIABLE */        49901000
*        ZXENDTIME='OUTPUT';                 /* SET IN/OUTPUT */        49901100
*      END;                                                             49901200
*/*PE.KXVAR01 NAME, OPT OUTPUT, KEYS -EXCESSIVE ARGUMENTS------------*/ 49901300
*  IF ENDDATA='ENDDATA'                      /* CHECK ENTRY */          49901400
*    THEN                                                               49901500
*      DO;                                                              49901600
*        ZMS=' 8, THE "ENDDATA" KEY'||       /**KOPTP* MSG*/            49901700
*            ' MUST CONTAIN ONE'||                                      49901800
*            ' (OR MORE) ARGUMENT(S).';                                 49901900
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49902000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49902100
*        ZMACRET=8;                          /* MACRO ERROR */          49902200
*      END;                                                             49902300
*  IF NUMBER(ENDDATA)>1                      /* CHECK POSITIONALS */    49902400
*    THEN                                                               49902500
*      DO;                                                              49902600
*        ZMS=' 8, "ENDDATA'||                /**KPOSP* MSG*/            49902700
*            ENDDATA||                                                  49902800
*            '" "ENDDATA"'||                                            49902900
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              49903000
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49903100
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49903200
*        ZMACRET=8;                          /* MACRO ERROR */          49903300
*      END;                                                             49903400
*/*PE.KXVAR03 NAME, OPT OUTPUT, KEYS -XVARIABLE----------------------*/ 49903500
*  IF ENDDATA(1)^=''                         /* CHECK FOR NULL */       49903600
*    THEN                                                               49903700
*      DO;                                                              49903800
*        XENDDATA=ENDDATA(1);                /* SET XVARIABLE */        49903900
*        ZXENDDATA='OUTPUT';                 /* SET IN/OUTPUT */        49904000
*      END;                                                             49904100
*/*PE.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 49904200
*  IF LINKAGE='LINKAGE'                      /* CHECK ENTRY */          49904300
*    THEN                                                               49904400
*      DO;                                                              49904500
*        ZMS=' 8, THE "LINKAGE" KEY'||       /**KOPTP* MSG*/            49904600
*            ' MUST CONTAIN ONE'||                                      49904700
*            ' (OR MORE) ARGUMENT(S).';                                 49904800
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49904900
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49905000
*        ZMACRET=8;                          /* MACRO ERROR */          49905100
*      END;                                                             49905200
*  IF NUMBER(LINKAGE)>1                      /* CHECK POSITIONALS */    49905300
*    THEN                                                               49905400
*      DO;                                                              49905500
*        ZMS=' 8, "LINKAGE'||                /**KPOSP* MSG*/            49905600
*            LINKAGE||                                                  49905700
*            '" "LINKAGE"'||                                            49905800
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              49905900
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49906000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49906100
*        ZMACRET=8;                          /* MACRO ERROR */          49906200
*      END;                                                             49906300
*/*PE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 49906400
*  IF LINKAGE(1) = 'SVC'                                                49906500
*    THEN                                                               49906600
*      XLINKAGE = 'SVC';                     /* SET XVARIABLE */        49906700
*/*PE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 49906800
*  IF LINKAGE(1) = 'BRANCH'                                             49906900
*    THEN                                                               49907000
*      XLINKAGE = 'BRANCH';                  /* SET XVARIABLE */        49907100
*/*PE.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 49907200
*  IF XLINKAGE^=''                           /* CHECK FOR KEYWORD */    49907300
*    THEN                                                               49907400
*      ZXLINKAGE='INPUT';                    /* SET IN/OUTPUT */        49907500
*    ELSE                                                               49907600
*      DO;                                   /* KEYWORD NOT ENTERED */  49907700
*        IF LINKAGE(1)^=''                                              49907800
*          THEN                                                         49907900
*            DO;                                                        49908000
*              ZMS=' 8, "LINKAGE'||          /**KUKWP* MSG*/            49908100
*                  LINKAGE||'"'||                                       49908200
*                  ' ARGUMENT 1 IS AN UNKNOWN KEYWORD. '||              49908300
*                  ' VALID KEYWORD CHOICE(S) ARE:'||                    49908400
*                  ' "SVC"'||                /* VALID KEYWORD */        49908500
*                  ' OR "BRANCH".';          /* VALID KEYWORD */        49908600
*              ANS MSG('?IFAUSAGE ---> '||ZMS);                         49908700
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          49908800
*              ZMACRET=8;                    /* MACRO ERROR */          49908900
*            END;                                                       49909000
*      END;                                                             49909100
*/*PE.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 49909200
*  IF REQUEST(1)='FUNCTIONBEGIN'             /* CHECK FOR KEYWORD */    49909300
*    THEN                                                               49909400
*      DO;                                                              49909500
*        XREQUEST='FUNCTIONBEGIN';           /* SET XVARIABLE */        49909600
*        IF NUMBER(REQUEST)>1                /* CHECK POSITIONALS */    49909700
*          THEN                                                         49909800
*            DO;                                                        49909900
*              ZMS=' 8, "REQUEST'||          /**KPOSP* MSG*/            49910000
*                  REQUEST||                                            49910100
*                  '" "REQUEST"'||                                      49910200
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        49910300
*              ANS MSG('?IFAUSAGE ---> '||ZMS);                         49910400
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          49910500
*              ZMACRET=8;                    /* MACRO ERROR */          49910600
*            END;                                                       49910700
*      END;                                                             49910800
*/*PE.KMEKY01 NAME, RQD INPUT, ME KEYS -XVARIABLE KEY----------------*/ 49910900
*  XBEGINPRODNAME='';                        /* RESET XVARIABLE */      49911000
*  IF PRODOWNER^=''                          /* CHECK ME KEY */         49911100
*    THEN                                                               49911200
*      DO;                                   /* VALID ME KEY */         49911300
*        IF NUMBER(PRODOWNER)>1              /* CHECK SUBLISTS */       49911400
*          THEN                                                         49911500
*            DO;                                                        49911600
*              ZMS=' 8, "PRODOWNER'||        /**KPOSP* MSG*/            49911700
*                  PRODOWNER||                                          49911800
*                  '" "PRODOWNER"'||                                    49911900
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        49912000
*              ANS MSG('?IFAUSAGE ---> '||ZMS);                         49912100
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          49912200
*              ZMACRET=8;                    /* MACRO ERROR */          49912300
*            END;                                                       49912400
*        XBEGINPRODNAME='PRODOWNER';         /* SET XVARIABLE */        49912500
*        XPRODOWNER=PRODOWNER(1);            /* SET XVARIABLE */        49912600
*        ZXBEGINPRODNAME='INPUT';            /* SET IN/OUTPUT */        49912700
*        ZXPRODOWNER='INPUT';                /* SET IN/OUTPUT */        49912800
*        IF PRODOWNER(1)=''                  /* CHECK ME KEY */         49912900
*          THEN                                                         49913000
*            DO;                                                        49913100
*              ZXBEGINPRODNAME='';           /* RESET IN/OUTPUT */      49913200
*              ZXPRODOWNER='';               /* RESET IN/OUTPUT */      49913300
*            END;                                                       49913400
*      END;                                                             49913500
*/*PE.KMEKY02 NAME, RQD INPUT, ME KEYS -XVARIABLE KEY----------------*/ 49913600
*  IF PRTOKEN^=''                            /* CHECK ME KEY */         49913700
*    THEN                                                               49913800
*      DO;                                                              49913900
*        IF NUMBER(PRTOKEN)>1                /* CHECK SUBLISTS */       49914000
*          THEN                                                         49914100
*            DO;                                                        49914200
*              ZMS=' 8, "PRTOKEN'||          /**KPOSP* MSG*/            49914300
*                  PRTOKEN||                                            49914400
*                  '" "PRTOKEN"'||                                      49914500
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        49914600
*              ANS MSG('?IFAUSAGE ---> '||ZMS);                         49914700
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          49914800
*              ZMACRET=8;                    /* MACRO ERROR */          49914900
*            END;                                                       49915000
*        IF XBEGINPRODNAME=''                /* CHECK XVARIABLE */      49915100
*          THEN                                                         49915200
*            DO;                             /* VALID ME KEY */         49915300
*              XBEGINPRODNAME='PRTOKEN';     /* SET XVAR1 */            49915400
*              XPRTOKEN=PRTOKEN(1);          /* SET XVAR2 */            49915500
*              ZXBEGINPRODNAME='INPUT';      /* SET IN/OUTPUT */        49915600
*              ZXPRTOKEN='INPUT';            /* SET IN/OUTPUT */        49915700
*              IF PRTOKEN(1)=''              /* CHECK ME KEY */         49915800
*                THEN                                                   49915900
*                  DO;                                                  49916000
*                    ZXBEGINPRODNAME='';     /* RESET IN/OUTPUT */      49916100
*                    ZXPRTOKEN='';           /* RESET IN/OUTPUT */      49916200
*                  END;                                                 49916300
*            END;                                                       49916400
*          ELSE                                                         49916500
*            DO;                                                        49916600
*              ZMS=' 8, "PRTOKEN'||          /**KMEKP* MSG*/            49916700
*                  PRTOKEN||'"'||                                       49916800
*                  ' IS MUTUALLY EXCLUSIVE WITH THE "'||                49916900
*                  XBEGINPRODNAME||                                     49917000
*                  '" KEY.';                                            49917100
*              ANS MSG('?IFAUSAGE ---> '||ZMS);                         49917200
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          49917300
*              ZMACRET=8;                    /* MACRO ERROR */          49917400
*            END;                                                       49917500
*      END;                                                             49917600
*/*PE.KMEKY05 NAME, RQD INPUT, ME KEYS -ME KEY DEFAULT RESETS--------*/ 49917700
*  IF XBEGINPRODNAME=''                      /* CHECK XVARIABLE */      49917800
*    THEN                                                               49917900
*      DO;                                                              49918000
*        XBEGINPRODNAME='';                  /* RESET DEFAULT */        49918100
*        ZXBEGINPRODNAME='';                 /* RESET IN/OUTPUT */      49918200
*        XPRODOWNER='';                      /* RESET DEFAULT */        49918300
*        ZXPRODOWNER='';                     /* RESET IN/OUTPUT */      49918400
*      END;                                                             49918500
*/*PE.KMEKY07 NAME, RQD INPUT, ME KEYS -START------------------------*/ 49918600
*  IF XBEGINPRODNAME='PRODOWNER'             /* CHECK FOR ME KEY */     49918700
*    THEN                                                               49918800
*      DO;   /**** START OF A MUTUALLY EXCLUSIVE KEY DO GROUP */        49918900
*/*PE.KXVAR01 NAME, RQD INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 49919000
*  IF NUMBER(PRODNAME)>1                     /* CHECK POSITIONALS */    49919100
*    THEN                                                               49919200
*      DO;                                                              49919300
*        ZMS=' 8, "PRODNAME'||               /**KPOSP* MSG*/            49919400
*            PRODNAME||                                                 49919500
*            '" "PRODNAME"'||                                           49919600
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              49919700
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49919800
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49919900
*        ZMACRET=8;                          /* MACRO ERROR */          49920000
*      END;                                                             49920100
*/*PE.KXVAR03 NAME, RQD INPUT, KEYS -XVARIABLE-----------------------*/ 49920200
*  IF PRODNAME(1)^=''                        /* CHECK FOR NULL */       49920300
*    THEN                                                               49920400
*      DO;                                                              49920500
*        XPRODNAME=PRODNAME(1);              /* SET XVARIABLE */        49920600
*        ZXPRODNAME='INPUT';                 /* SET IN/OUTPUT */        49920700
*      END;                                                             49920800
*/*PE.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 49920900
*  IF PRODVERS='PRODVERS'                    /* CHECK ENTRY */          49921000
*    THEN                                                               49921100
*      DO;                                                              49921200
*        ZMS=' 8, THE "PRODVERS" KEY'||      /**KOPTP* MSG*/            49921300
*            ' MUST CONTAIN ONE'||                                      49921400
*            ' (OR MORE) ARGUMENT(S).';                                 49921500
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49921600
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49921700
*        ZMACRET=8;                          /* MACRO ERROR */          49921800
*      END;                                                             49921900
*  IF NUMBER(PRODVERS)>1                     /* CHECK POSITIONALS */    49922000
*    THEN                                                               49922100
*      DO;                                                              49922200
*        ZMS=' 8, "PRODVERS'||               /**KPOSP* MSG*/            49922300
*            PRODVERS||                                                 49922400
*            '" "PRODVERS"'||                                           49922500
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              49922600
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49922700
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49922800
*        ZMACRET=8;                          /* MACRO ERROR */          49922900
*      END;                                                             49923000
*/*PE.KXVAR03 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 49923100
*  IF PRODVERS(1)^=''                        /* CHECK FOR NULL */       49923200
*    THEN                                                               49923300
*      DO;                                                              49923400
*        XPRODVERS=PRODVERS(1);              /* SET XVARIABLE */        49923500
*        ZXPRODVERS='INPUT';                 /* SET IN/OUTPUT */        49923600
*      END;                                                             49923700
*/*PE.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 49923800
*  IF PRODQUAL='PRODQUAL'                    /* CHECK ENTRY */          49923900
*    THEN                                                               49924000
*      DO;                                                              49924100
*        ZMS=' 8, THE "PRODQUAL" KEY'||      /**KOPTP* MSG*/            49924200
*            ' MUST CONTAIN ONE'||                                      49924300
*            ' (OR MORE) ARGUMENT(S).';                                 49924400
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49924500
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49924600
*        ZMACRET=8;                          /* MACRO ERROR */          49924700
*      END;                                                             49924800
*  IF NUMBER(PRODQUAL)>1                     /* CHECK POSITIONALS */    49924900
*    THEN                                                               49925000
*      DO;                                                              49925100
*        ZMS=' 8, "PRODQUAL'||               /**KPOSP* MSG*/            49925200
*            PRODQUAL||                                                 49925300
*            '" "PRODQUAL"'||                                           49925400
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              49925500
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49925600
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49925700
*        ZMACRET=8;                          /* MACRO ERROR */          49925800
*      END;                                                             49925900
*/*PE.KXVAR03 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 49926000
*  IF PRODQUAL(1)^=''                        /* CHECK FOR NULL */       49926100
*    THEN                                                               49926200
*      DO;                                                              49926300
*        XPRODQUAL=PRODQUAL(1);              /* SET XVARIABLE */        49926400
*        ZXPRODQUAL='INPUT';                 /* SET IN/OUTPUT */        49926500
*      END;                                                             49926600
*/*PE.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 49926700
*  IF PRODID='PRODID'                        /* CHECK ENTRY */          49926800
*    THEN                                                               49926900
*      DO;                                                              49927000
*        ZMS=' 8, THE "PRODID" KEY'||        /**KOPTP* MSG*/            49927100
*            ' MUST CONTAIN ONE'||                                      49927200
*            ' (OR MORE) ARGUMENT(S).';                                 49927300
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49927400
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49927500
*        ZMACRET=8;                          /* MACRO ERROR */          49927600
*      END;                                                             49927700
*  IF NUMBER(PRODID)>1                       /* CHECK POSITIONALS */    49927800
*    THEN                                                               49927900
*      DO;                                                              49928000
*        ZMS=' 8, "PRODID'||                 /**KPOSP* MSG*/            49928100
*            PRODID||                                                   49928200
*            '" "PRODID"'||                                             49928300
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              49928400
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49928500
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49928600
*        ZMACRET=8;                          /* MACRO ERROR */          49928700
*      END;                                                             49928800
*/*PE.KXVAR03 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 49928900
*  IF PRODID(1)^=''                          /* CHECK FOR NULL */       49929000
*    THEN                                                               49929100
*      DO;                                                              49929200
*        XPRODID=PRODID(1);                  /* SET XVARIABLE */        49929300
*        ZXPRODID='INPUT';                   /* SET IN/OUTPUT */        49929400
*      END;                                                             49929500
*/*PE.KMEKY06 NAME, RQD INPUT, ME KEYS -END--------------------------*/ 49929600
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KEY DO GROUP */          49929700
*/*PE.KXVAR01 NAME, OPT OUTPUT, KEYS -EXCESSIVE ARGUMENTS------------*/ 49929800
*  IF BEGTIME='BEGTIME'                      /* CHECK ENTRY */          49929900
*    THEN                                                               49930000
*      DO;                                                              49930100
*        ZMS=' 8, THE "BEGTIME" KEY'||       /**KOPTP* MSG*/            49930200
*            ' MUST CONTAIN ONE'||                                      49930300
*            ' (OR MORE) ARGUMENT(S).';                                 49930400
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49930500
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49930600
*        ZMACRET=8;                          /* MACRO ERROR */          49930700
*      END;                                                             49930800
*  IF NUMBER(BEGTIME)>1                      /* CHECK POSITIONALS */    49930900
*    THEN                                                               49931000
*      DO;                                                              49931100
*        ZMS=' 8, "BEGTIME'||                /**KPOSP* MSG*/            49931200
*            BEGTIME||                                                  49931300
*            '" "BEGTIME"'||                                            49931400
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              49931500
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49931600
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49931700
*        ZMACRET=8;                          /* MACRO ERROR */          49931800
*      END;                                                             49931900
*/*PE.KXVAR03 NAME, OPT OUTPUT, KEYS -XVARIABLE----------------------*/ 49932000
*  IF BEGTIME(1)^=''                         /* CHECK FOR NULL */       49932100
*    THEN                                                               49932200
*      DO;                                                              49932300
*        XBEGTIME=BEGTIME(1);                /* SET XVARIABLE */        49932400
*        ZXBEGTIME='OUTPUT';                 /* SET IN/OUTPUT */        49932500
*      END;                                                             49932600
*/*PE.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 49932700
*  IF LINKAGE='LINKAGE'                      /* CHECK ENTRY */          49932800
*    THEN                                                               49932900
*      DO;                                                              49933000
*        ZMS=' 8, THE "LINKAGE" KEY'||       /**KOPTP* MSG*/            49933100
*            ' MUST CONTAIN ONE'||                                      49933200
*            ' (OR MORE) ARGUMENT(S).';                                 49933300
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49933400
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49933500
*        ZMACRET=8;                          /* MACRO ERROR */          49933600
*      END;                                                             49933700
*  IF NUMBER(LINKAGE)>1                      /* CHECK POSITIONALS */    49933800
*    THEN                                                               49933900
*      DO;                                                              49934000
*        ZMS=' 8, "LINKAGE'||                /**KPOSP* MSG*/            49934100
*            LINKAGE||                                                  49934200
*            '" "LINKAGE"'||                                            49934300
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              49934400
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49934500
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49934600
*        ZMACRET=8;                          /* MACRO ERROR */          49934700
*      END;                                                             49934800
*/*PE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 49934900
*  IF LINKAGE(1) = 'SVC'                                                49935000
*    THEN                                                               49935100
*      XLINKAGE = 'SVC';                     /* SET XVARIABLE */        49935200
*/*PE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 49935300
*  IF LINKAGE(1) = 'BRANCH'                                             49935400
*    THEN                                                               49935500
*      XLINKAGE = 'BRANCH';                  /* SET XVARIABLE */        49935600
*/*PE.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 49935700
*  IF XLINKAGE^=''                           /* CHECK FOR KEYWORD */    49935800
*    THEN                                                               49935900
*      ZXLINKAGE='INPUT';                    /* SET IN/OUTPUT */        49936000
*    ELSE                                                               49936100
*      DO;                                   /* KEYWORD NOT ENTERED */  49936200
*        IF LINKAGE(1)^=''                                              49936300
*          THEN                                                         49936400
*            DO;                                                        49936500
*              ZMS=' 8, "LINKAGE'||          /**KUKWP* MSG*/            49936600
*                  LINKAGE||'"'||                                       49936700
*                  ' ARGUMENT 1 IS AN UNKNOWN KEYWORD. '||              49936800
*                  ' VALID KEYWORD CHOICE(S) ARE:'||                    49936900
*                  ' "SVC"'||                /* VALID KEYWORD */        49937000
*                  ' OR "BRANCH".';          /* VALID KEYWORD */        49937100
*              ANS MSG('?IFAUSAGE ---> '||ZMS);                         49937200
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          49937300
*              ZMACRET=8;                    /* MACRO ERROR */          49937400
*            END;                                                       49937500
*      END;                                                             49937600
*/*PE.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 49937700
*  IF REQUEST(1)='FUNCTIONDATA'              /* CHECK FOR KEYWORD */    49937800
*    THEN                                                               49937900
*      DO;                                                              49938000
*        XREQUEST='FUNCTIONDATA';            /* SET XVARIABLE */        49938100
*        IF NUMBER(REQUEST)>1                /* CHECK POSITIONALS */    49938200
*          THEN                                                         49938300
*            DO;                                                        49938400
*              ZMS=' 8, "REQUEST'||          /**KPOSP* MSG*/            49938500
*                  REQUEST||                                            49938600
*                  '" "REQUEST"'||                                      49938700
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        49938800
*              ANS MSG('?IFAUSAGE ---> '||ZMS);                         49938900
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          49939000
*              ZMACRET=8;                    /* MACRO ERROR */          49939100
*            END;                                                       49939200
*      END;                                                             49939300
*/*PE.KMEKY01 NAME, RQD INPUT, ME KEYS -XVARIABLE KEY----------------*/ 49939400
*  XDATAPRODNAME='';                         /* RESET XVARIABLE */      49939500
*  IF PRODOWNER^=''                          /* CHECK ME KEY */         49939600
*    THEN                                                               49939700
*      DO;                                   /* VALID ME KEY */         49939800
*        IF NUMBER(PRODOWNER)>1              /* CHECK SUBLISTS */       49939900
*          THEN                                                         49940000
*            DO;                                                        49940100
*              ZMS=' 8, "PRODOWNER'||        /**KPOSP* MSG*/            49940200
*                  PRODOWNER||                                          49940300
*                  '" "PRODOWNER"'||                                    49940400
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        49940500
*              ANS MSG('?IFAUSAGE ---> '||ZMS);                         49940600
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          49940700
*              ZMACRET=8;                    /* MACRO ERROR */          49940800
*            END;                                                       49940900
*        XDATAPRODNAME='PRODOWNER';          /* SET XVARIABLE */        49941000
*        XPRODOWNER=PRODOWNER(1);            /* SET XVARIABLE */        49941100
*        ZXDATAPRODNAME='INPUT';             /* SET IN/OUTPUT */        49941200
*        ZXPRODOWNER='INPUT';                /* SET IN/OUTPUT */        49941300
*        IF PRODOWNER(1)=''                  /* CHECK ME KEY */         49941400
*          THEN                                                         49941500
*            DO;                                                        49941600
*              ZXDATAPRODNAME='';            /* RESET IN/OUTPUT */      49941700
*              ZXPRODOWNER='';               /* RESET IN/OUTPUT */      49941800
*            END;                                                       49941900
*      END;                                                             49942000
*/*PE.KMEKY02 NAME, RQD INPUT, ME KEYS -XVARIABLE KEY----------------*/ 49942100
*  IF PRTOKEN^=''                            /* CHECK ME KEY */         49942200
*    THEN                                                               49942300
*      DO;                                                              49942400
*        IF NUMBER(PRTOKEN)>1                /* CHECK SUBLISTS */       49942500
*          THEN                                                         49942600
*            DO;                                                        49942700
*              ZMS=' 8, "PRTOKEN'||          /**KPOSP* MSG*/            49942800
*                  PRTOKEN||                                            49942900
*                  '" "PRTOKEN"'||                                      49943000
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        49943100
*              ANS MSG('?IFAUSAGE ---> '||ZMS);                         49943200
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          49943300
*              ZMACRET=8;                    /* MACRO ERROR */          49943400
*            END;                                                       49943500
*        IF XDATAPRODNAME=''                 /* CHECK XVARIABLE */      49943600
*          THEN                                                         49943700
*            DO;                             /* VALID ME KEY */         49943800
*              XDATAPRODNAME='PRTOKEN';      /* SET XVAR1 */            49943900
*              XPRTOKEN=PRTOKEN(1);          /* SET XVAR2 */            49944000
*              ZXDATAPRODNAME='INPUT';       /* SET IN/OUTPUT */        49944100
*              ZXPRTOKEN='INPUT';            /* SET IN/OUTPUT */        49944200
*              IF PRTOKEN(1)=''              /* CHECK ME KEY */         49944300
*                THEN                                                   49944400
*                  DO;                                                  49944500
*                    ZXDATAPRODNAME='';      /* RESET IN/OUTPUT */      49944600
*                    ZXPRTOKEN='';           /* RESET IN/OUTPUT */      49944700
*                  END;                                                 49944800
*            END;                                                       49944900
*          ELSE                                                         49945000
*            DO;                                                        49945100
*              ZMS=' 8, "PRTOKEN'||          /**KMEKP* MSG*/            49945200
*                  PRTOKEN||'"'||                                       49945300
*                  ' IS MUTUALLY EXCLUSIVE WITH THE "'||                49945400
*                  XDATAPRODNAME||                                      49945500
*                  '" KEY.';                                            49945600
*              ANS MSG('?IFAUSAGE ---> '||ZMS);                         49945700
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          49945800
*              ZMACRET=8;                    /* MACRO ERROR */          49945900
*            END;                                                       49946000
*      END;                                                             49946100
*/*PE.KMEKY05 NAME, RQD INPUT, ME KEYS -ME KEY DEFAULT RESETS--------*/ 49946200
*  IF XDATAPRODNAME=''                       /* CHECK XVARIABLE */      49946300
*    THEN                                                               49946400
*      DO;                                                              49946500
*        XDATAPRODNAME='';                   /* RESET DEFAULT */        49946600
*        ZXDATAPRODNAME='';                  /* RESET IN/OUTPUT */      49946700
*        XPRODOWNER='';                      /* RESET DEFAULT */        49946800
*        ZXPRODOWNER='';                     /* RESET IN/OUTPUT */      49946900
*      END;                                                             49947000
*/*PE.KMEKY07 NAME, RQD INPUT, ME KEYS -START------------------------*/ 49947100
*  IF XDATAPRODNAME='PRODOWNER'              /* CHECK FOR ME KEY */     49947200
*    THEN                                                               49947300
*      DO;   /**** START OF A MUTUALLY EXCLUSIVE KEY DO GROUP */        49947400
*/*PE.KXVAR01 NAME, RQD INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 49947500
*  IF NUMBER(PRODNAME)>1                     /* CHECK POSITIONALS */    49947600
*    THEN                                                               49947700
*      DO;                                                              49947800
*        ZMS=' 8, "PRODNAME'||               /**KPOSP* MSG*/            49947900
*            PRODNAME||                                                 49948000
*            '" "PRODNAME"'||                                           49948100
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              49948200
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49948300
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49948400
*        ZMACRET=8;                          /* MACRO ERROR */          49948500
*      END;                                                             49948600
*/*PE.KXVAR03 NAME, RQD INPUT, KEYS -XVARIABLE-----------------------*/ 49948700
*  IF PRODNAME(1)^=''                        /* CHECK FOR NULL */       49948800
*    THEN                                                               49948900
*      DO;                                                              49949000
*        XPRODNAME=PRODNAME(1);              /* SET XVARIABLE */        49949100
*        ZXPRODNAME='INPUT';                 /* SET IN/OUTPUT */        49949200
*      END;                                                             49949300
*/*PE.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 49949400
*  IF PRODVERS='PRODVERS'                    /* CHECK ENTRY */          49949500
*    THEN                                                               49949600
*      DO;                                                              49949700
*        ZMS=' 8, THE "PRODVERS" KEY'||      /**KOPTP* MSG*/            49949800
*            ' MUST CONTAIN ONE'||                                      49949900
*            ' (OR MORE) ARGUMENT(S).';                                 49950000
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49950100
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49950200
*        ZMACRET=8;                          /* MACRO ERROR */          49950300
*      END;                                                             49950400
*  IF NUMBER(PRODVERS)>1                     /* CHECK POSITIONALS */    49950500
*    THEN                                                               49950600
*      DO;                                                              49950700
*        ZMS=' 8, "PRODVERS'||               /**KPOSP* MSG*/            49950800
*            PRODVERS||                                                 49950900
*            '" "PRODVERS"'||                                           49951000
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              49951100
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49951200
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49951300
*        ZMACRET=8;                          /* MACRO ERROR */          49951400
*      END;                                                             49951500
*/*PE.KXVAR03 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 49951600
*  IF PRODVERS(1)^=''                        /* CHECK FOR NULL */       49951700
*    THEN                                                               49951800
*      DO;                                                              49951900
*        XPRODVERS=PRODVERS(1);              /* SET XVARIABLE */        49952000
*        ZXPRODVERS='INPUT';                 /* SET IN/OUTPUT */        49952100
*      END;                                                             49952200
*/*PE.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 49952300
*  IF PRODQUAL='PRODQUAL'                    /* CHECK ENTRY */          49952400
*    THEN                                                               49952500
*      DO;                                                              49952600
*        ZMS=' 8, THE "PRODQUAL" KEY'||      /**KOPTP* MSG*/            49952700
*            ' MUST CONTAIN ONE'||                                      49952800
*            ' (OR MORE) ARGUMENT(S).';                                 49952900
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49953000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49953100
*        ZMACRET=8;                          /* MACRO ERROR */          49953200
*      END;                                                             49953300
*  IF NUMBER(PRODQUAL)>1                     /* CHECK POSITIONALS */    49953400
*    THEN                                                               49953500
*      DO;                                                              49953600
*        ZMS=' 8, "PRODQUAL'||               /**KPOSP* MSG*/            49953700
*            PRODQUAL||                                                 49953800
*            '" "PRODQUAL"'||                                           49953900
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              49954000
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49954100
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49954200
*        ZMACRET=8;                          /* MACRO ERROR */          49954300
*      END;                                                             49954400
*/*PE.KXVAR03 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 49954500
*  IF PRODQUAL(1)^=''                        /* CHECK FOR NULL */       49954600
*    THEN                                                               49954700
*      DO;                                                              49954800
*        XPRODQUAL=PRODQUAL(1);              /* SET XVARIABLE */        49954900
*        ZXPRODQUAL='INPUT';                 /* SET IN/OUTPUT */        49955000
*      END;                                                             49955100
*/*PE.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 49955200
*  IF PRODID='PRODID'                        /* CHECK ENTRY */          49955300
*    THEN                                                               49955400
*      DO;                                                              49955500
*        ZMS=' 8, THE "PRODID" KEY'||        /**KOPTP* MSG*/            49955600
*            ' MUST CONTAIN ONE'||                                      49955700
*            ' (OR MORE) ARGUMENT(S).';                                 49955800
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49955900
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49956000
*        ZMACRET=8;                          /* MACRO ERROR */          49956100
*      END;                                                             49956200
*  IF NUMBER(PRODID)>1                       /* CHECK POSITIONALS */    49956300
*    THEN                                                               49956400
*      DO;                                                              49956500
*        ZMS=' 8, "PRODID'||                 /**KPOSP* MSG*/            49956600
*            PRODID||                                                   49956700
*            '" "PRODID"'||                                             49956800
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              49956900
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49957000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49957100
*        ZMACRET=8;                          /* MACRO ERROR */          49957200
*      END;                                                             49957300
*/*PE.KXVAR03 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 49957400
*  IF PRODID(1)^=''                          /* CHECK FOR NULL */       49957500
*    THEN                                                               49957600
*      DO;                                                              49957700
*        XPRODID=PRODID(1);                  /* SET XVARIABLE */        49957800
*        ZXPRODID='INPUT';                   /* SET IN/OUTPUT */        49957900
*      END;                                                             49958000
*/*PE.KMEKY06 NAME, RQD INPUT, ME KEYS -END--------------------------*/ 49958100
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KEY DO GROUP */          49958200
*/*PE.KXVAR01 NAME, RQD INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 49958300
*  IF NUMBER(DATA)>1                         /* CHECK POSITIONALS */    49958400
*    THEN                                                               49958500
*      DO;                                                              49958600
*        ZMS=' 8, "DATA'||                   /**KPOSP* MSG*/            49958700
*            DATA||                                                     49958800
*            '" "DATA"'||                                               49958900
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              49959000
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49959100
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49959200
*        ZMACRET=8;                          /* MACRO ERROR */          49959300
*      END;                                                             49959400
*/*PE.KXVAR03 NAME, RQD INPUT, KEYS -XVARIABLE-----------------------*/ 49959500
*  IF DATA(1)^=''                            /* CHECK FOR NULL */       49959600
*    THEN                                                               49959700
*      DO;                                                              49959800
*        XDATA=DATA(1);                      /* SET XVARIABLE */        49959900
*        ZXDATA='INPUT';                     /* SET IN/OUTPUT */        49960000
*      END;                                                             49960100
*/*PE.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 49960200
*  IF FORMAT='FORMAT'                        /* CHECK ENTRY */          49960300
*    THEN                                                               49960400
*      DO;                                                              49960500
*        ZMS=' 8, THE "FORMAT" KEY'||        /**KOPTP* MSG*/            49960600
*            ' MUST CONTAIN ONE'||                                      49960700
*            ' (OR MORE) ARGUMENT(S).';                                 49960800
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49960900
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49961000
*        ZMACRET=8;                          /* MACRO ERROR */          49961100
*      END;                                                             49961200
*  IF NUMBER(FORMAT)>1                       /* CHECK POSITIONALS */    49961300
*    THEN                                                               49961400
*      DO;                                                              49961500
*        ZMS=' 8, "FORMAT'||                 /**KPOSP* MSG*/            49961600
*            FORMAT||                                                   49961700
*            '" "FORMAT"'||                                             49961800
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              49961900
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49962000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49962100
*        ZMACRET=8;                          /* MACRO ERROR */          49962200
*      END;                                                             49962300
*/*PE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 49962400
*  IF FORMAT(1) = 'CPUTIME'                                             49962500
*    THEN                                                               49962600
*      XFORMAT = 'CPUTIME';                  /* SET XVARIABLE */        49962700
*/*PE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 49962800
*  IF FORMAT(1) = 'BINARY'                                              49962900
*    THEN                                                               49963000
*      XFORMAT = 'BINARY';                   /* SET XVARIABLE */        49963100
*/*PE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 49963200
*  IF FORMAT(1) = 'FLOAT'                                               49963300
*    THEN                                                               49963400
*      XFORMAT = 'FLOAT';                    /* SET XVARIABLE */        49963500
*/*PE.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 49963600
*  IF XFORMAT^=''                            /* CHECK FOR KEYWORD */    49963700
*    THEN                                                               49963800
*      ZXFORMAT='INPUT';                     /* SET IN/OUTPUT */        49963900
*    ELSE                                                               49964000
*      DO;                                   /* KEYWORD NOT ENTERED */  49964100
*        IF FORMAT(1)^=''                                               49964200
*          THEN                                                         49964300
*            DO;                                                        49964400
*              ZMS=' 8, "FORMAT'||           /**KUKWP* MSG*/            49964500
*                  FORMAT||'"'||                                        49964600
*                  ' ARGUMENT 1 IS AN UNKNOWN KEYWORD. '||              49964700
*                  ' VALID KEYWORD CHOICE(S) ARE:'||                    49964800
*                  ' "CPUTIME",'||           /* VALID KEYWORD */        49964900
*                  ' "BINARY",'||            /* VALID KEYWORD */        49965000
*                  ' OR "FLOAT".';           /* VALID KEYWORD */        49965100
*              ANS MSG('?IFAUSAGE ---> '||ZMS);                         49965200
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          49965300
*              ZMACRET=8;                    /* MACRO ERROR */          49965400
*            END;                                                       49965500
*      END;                                                             49965600
*/*PE.KXVAR01 NAME, OPT OUTPUT, KEYS -EXCESSIVE ARGUMENTS------------*/ 49965700
*  IF CURRENTDATA='CURRENTDATA'              /* CHECK ENTRY */          49965800
*    THEN                                                               49965900
*      DO;                                                              49966000
*        ZMS=' 8, THE "CURRENTDATA" KEY'||   /**KOPTP* MSG*/            49966100
*            ' MUST CONTAIN ONE'||                                      49966200
*            ' (OR MORE) ARGUMENT(S).';                                 49966300
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49966400
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49966500
*        ZMACRET=8;                          /* MACRO ERROR */          49966600
*      END;                                                             49966700
*  IF NUMBER(CURRENTDATA)>1                  /* CHECK POSITIONALS */    49966800
*    THEN                                                               49966900
*      DO;                                                              49967000
*        ZMS=' 8, "CURRENTDATA'||            /**KPOSP* MSG*/            49967100
*            CURRENTDATA||                                              49967200
*            '" "CURRENTDATA"'||                                        49967300
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              49967400
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49967500
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49967600
*        ZMACRET=8;                          /* MACRO ERROR */          49967700
*      END;                                                             49967800
*/*PE.KXVAR03 NAME, OPT OUTPUT, KEYS -XVARIABLE----------------------*/ 49967900
*  IF CURRENTDATA(1)^=''                     /* CHECK FOR NULL */       49968000
*    THEN                                                               49968100
*      DO;                                                              49968200
*        XCURRENTDATA=CURRENTDATA(1);        /* SET XVARIABLE */        49968300
*        ZXCURRENTDATA='OUTPUT';             /* SET IN/OUTPUT */        49968400
*      END;                                                             49968500
*/*PE.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 49968600
*  IF LINKAGE='LINKAGE'                      /* CHECK ENTRY */          49968700
*    THEN                                                               49968800
*      DO;                                                              49968900
*        ZMS=' 8, THE "LINKAGE" KEY'||       /**KOPTP* MSG*/            49969000
*            ' MUST CONTAIN ONE'||                                      49969100
*            ' (OR MORE) ARGUMENT(S).';                                 49969200
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49969300
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49969400
*        ZMACRET=8;                          /* MACRO ERROR */          49969500
*      END;                                                             49969600
*  IF NUMBER(LINKAGE)>1                      /* CHECK POSITIONALS */    49969700
*    THEN                                                               49969800
*      DO;                                                              49969900
*        ZMS=' 8, "LINKAGE'||                /**KPOSP* MSG*/            49970000
*            LINKAGE||                                                  49970100
*            '" "LINKAGE"'||                                            49970200
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              49970300
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49970400
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49970500
*        ZMACRET=8;                          /* MACRO ERROR */          49970600
*      END;                                                             49970700
*/*PE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 49970800
*  IF LINKAGE(1) = 'SVC'                                                49970900
*    THEN                                                               49971000
*      XLINKAGE = 'SVC';                     /* SET XVARIABLE */        49971100
*/*PE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 49971200
*  IF LINKAGE(1) = 'BRANCH'                                             49971300
*    THEN                                                               49971400
*      XLINKAGE = 'BRANCH';                  /* SET XVARIABLE */        49971500
*/*PE.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 49971600
*  IF XLINKAGE^=''                           /* CHECK FOR KEYWORD */    49971700
*    THEN                                                               49971800
*      ZXLINKAGE='INPUT';                    /* SET IN/OUTPUT */        49971900
*    ELSE                                                               49972000
*      DO;                                   /* KEYWORD NOT ENTERED */  49972100
*        IF LINKAGE(1)^=''                                              49972200
*          THEN                                                         49972300
*            DO;                                                        49972400
*              ZMS=' 8, "LINKAGE'||          /**KUKWP* MSG*/            49972500
*                  LINKAGE||'"'||                                       49972600
*                  ' ARGUMENT 1 IS AN UNKNOWN KEYWORD. '||              49972700
*                  ' VALID KEYWORD CHOICE(S) ARE:'||                    49972800
*                  ' "SVC"'||                /* VALID KEYWORD */        49972900
*                  ' OR "BRANCH".';          /* VALID KEYWORD */        49973000
*              ANS MSG('?IFAUSAGE ---> '||ZMS);                         49973100
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          49973200
*              ZMACRET=8;                    /* MACRO ERROR */          49973300
*            END;                                                       49973400
*      END;                                                             49973500
*/*PE.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 49973600
*  IF REQUEST(1)='FUNCTIONEND'               /* CHECK FOR KEYWORD */    49973700
*    THEN                                                               49973800
*      DO;                                                              49973900
*        XREQUEST='FUNCTIONEND';             /* SET XVARIABLE */        49974000
*        IF NUMBER(REQUEST)>1                /* CHECK POSITIONALS */    49974100
*          THEN                                                         49974200
*            DO;                                                        49974300
*              ZMS=' 8, "REQUEST'||          /**KPOSP* MSG*/            49974400
*                  REQUEST||                                            49974500
*                  '" "REQUEST"'||                                      49974600
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        49974700
*              ANS MSG('?IFAUSAGE ---> '||ZMS);                         49974800
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          49974900
*              ZMACRET=8;                    /* MACRO ERROR */          49975000
*            END;                                                       49975100
*      END;                                                             49975200
*/*PE.KMEKY01 NAME, RQD INPUT, ME KEYS -XVARIABLE KEY----------------*/ 49975300
*  XENDPRODNAME='';                          /* RESET XVARIABLE */      49975400
*  IF PRODOWNER^=''                          /* CHECK ME KEY */         49975500
*    THEN                                                               49975600
*      DO;                                   /* VALID ME KEY */         49975700
*        IF NUMBER(PRODOWNER)>1              /* CHECK SUBLISTS */       49975800
*          THEN                                                         49975900
*            DO;                                                        49976000
*              ZMS=' 8, "PRODOWNER'||        /**KPOSP* MSG*/            49976100
*                  PRODOWNER||                                          49976200
*                  '" "PRODOWNER"'||                                    49976300
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        49976400
*              ANS MSG('?IFAUSAGE ---> '||ZMS);                         49976500
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          49976600
*              ZMACRET=8;                    /* MACRO ERROR */          49976700
*            END;                                                       49976800
*        XENDPRODNAME='PRODOWNER';           /* SET XVARIABLE */        49976900
*        XPRODOWNER=PRODOWNER(1);            /* SET XVARIABLE */        49977000
*        ZXENDPRODNAME='INPUT';              /* SET IN/OUTPUT */        49977100
*        ZXPRODOWNER='INPUT';                /* SET IN/OUTPUT */        49977200
*        IF PRODOWNER(1)=''                  /* CHECK ME KEY */         49977300
*          THEN                                                         49977400
*            DO;                                                        49977500
*              ZXENDPRODNAME='';             /* RESET IN/OUTPUT */      49977600
*              ZXPRODOWNER='';               /* RESET IN/OUTPUT */      49977700
*            END;                                                       49977800
*      END;                                                             49977900
*/*PE.KMEKY02 NAME, RQD INPUT, ME KEYS -XVARIABLE KEY----------------*/ 49978000
*  IF PRTOKEN^=''                            /* CHECK ME KEY */         49978100
*    THEN                                                               49978200
*      DO;                                                              49978300
*        IF NUMBER(PRTOKEN)>1                /* CHECK SUBLISTS */       49978400
*          THEN                                                         49978500
*            DO;                                                        49978600
*              ZMS=' 8, "PRTOKEN'||          /**KPOSP* MSG*/            49978700
*                  PRTOKEN||                                            49978800
*                  '" "PRTOKEN"'||                                      49978900
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        49979000
*              ANS MSG('?IFAUSAGE ---> '||ZMS);                         49979100
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          49979200
*              ZMACRET=8;                    /* MACRO ERROR */          49979300
*            END;                                                       49979400
*        IF XENDPRODNAME=''                  /* CHECK XVARIABLE */      49979500
*          THEN                                                         49979600
*            DO;                             /* VALID ME KEY */         49979700
*              XENDPRODNAME='PRTOKEN';       /* SET XVAR1 */            49979800
*              XPRTOKEN=PRTOKEN(1);          /* SET XVAR2 */            49979900
*              ZXENDPRODNAME='INPUT';        /* SET IN/OUTPUT */        49980000
*              ZXPRTOKEN='INPUT';            /* SET IN/OUTPUT */        49980100
*              IF PRTOKEN(1)=''              /* CHECK ME KEY */         49980200
*                THEN                                                   49980300
*                  DO;                                                  49980400
*                    ZXENDPRODNAME='';       /* RESET IN/OUTPUT */      49980500
*                    ZXPRTOKEN='';           /* RESET IN/OUTPUT */      49980600
*                  END;                                                 49980700
*            END;                                                       49980800
*          ELSE                                                         49980900
*            DO;                                                        49981000
*              ZMS=' 8, "PRTOKEN'||          /**KMEKP* MSG*/            49981100
*                  PRTOKEN||'"'||                                       49981200
*                  ' IS MUTUALLY EXCLUSIVE WITH THE "'||                49981300
*                  XENDPRODNAME||                                       49981400
*                  '" KEY.';                                            49981500
*              ANS MSG('?IFAUSAGE ---> '||ZMS);                         49981600
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          49981700
*              ZMACRET=8;                    /* MACRO ERROR */          49981800
*            END;                                                       49981900
*      END;                                                             49982000
*/*PE.KMEKY05 NAME, RQD INPUT, ME KEYS -ME KEY DEFAULT RESETS--------*/ 49982100
*  IF XENDPRODNAME=''                        /* CHECK XVARIABLE */      49982200
*    THEN                                                               49982300
*      DO;                                                              49982400
*        XENDPRODNAME='';                    /* RESET DEFAULT */        49982500
*        ZXENDPRODNAME='';                   /* RESET IN/OUTPUT */      49982600
*        XPRODOWNER='';                      /* RESET DEFAULT */        49982700
*        ZXPRODOWNER='';                     /* RESET IN/OUTPUT */      49982800
*      END;                                                             49982900
*/*PE.KMEKY07 NAME, RQD INPUT, ME KEYS -START------------------------*/ 49983000
*  IF XENDPRODNAME='PRODOWNER'               /* CHECK FOR ME KEY */     49983100
*    THEN                                                               49983200
*      DO;   /**** START OF A MUTUALLY EXCLUSIVE KEY DO GROUP */        49983300
*/*PE.KXVAR01 NAME, RQD INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 49983400
*  IF NUMBER(PRODNAME)>1                     /* CHECK POSITIONALS */    49983500
*    THEN                                                               49983600
*      DO;                                                              49983700
*        ZMS=' 8, "PRODNAME'||               /**KPOSP* MSG*/            49983800
*            PRODNAME||                                                 49983900
*            '" "PRODNAME"'||                                           49984000
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              49984100
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49984200
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49984300
*        ZMACRET=8;                          /* MACRO ERROR */          49984400
*      END;                                                             49984500
*/*PE.KXVAR03 NAME, RQD INPUT, KEYS -XVARIABLE-----------------------*/ 49984600
*  IF PRODNAME(1)^=''                        /* CHECK FOR NULL */       49984700
*    THEN                                                               49984800
*      DO;                                                              49984900
*        XPRODNAME=PRODNAME(1);              /* SET XVARIABLE */        49985000
*        ZXPRODNAME='INPUT';                 /* SET IN/OUTPUT */        49985100
*      END;                                                             49985200
*/*PE.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 49985300
*  IF PRODVERS='PRODVERS'                    /* CHECK ENTRY */          49985400
*    THEN                                                               49985500
*      DO;                                                              49985600
*        ZMS=' 8, THE "PRODVERS" KEY'||      /**KOPTP* MSG*/            49985700
*            ' MUST CONTAIN ONE'||                                      49985800
*            ' (OR MORE) ARGUMENT(S).';                                 49985900
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49986000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49986100
*        ZMACRET=8;                          /* MACRO ERROR */          49986200
*      END;                                                             49986300
*  IF NUMBER(PRODVERS)>1                     /* CHECK POSITIONALS */    49986400
*    THEN                                                               49986500
*      DO;                                                              49986600
*        ZMS=' 8, "PRODVERS'||               /**KPOSP* MSG*/            49986700
*            PRODVERS||                                                 49986800
*            '" "PRODVERS"'||                                           49986900
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              49987000
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49987100
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49987200
*        ZMACRET=8;                          /* MACRO ERROR */          49987300
*      END;                                                             49987400
*/*PE.KXVAR03 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 49987500
*  IF PRODVERS(1)^=''                        /* CHECK FOR NULL */       49987600
*    THEN                                                               49987700
*      DO;                                                              49987800
*        XPRODVERS=PRODVERS(1);              /* SET XVARIABLE */        49987900
*        ZXPRODVERS='INPUT';                 /* SET IN/OUTPUT */        49988000
*      END;                                                             49988100
*/*PE.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 49988200
*  IF PRODQUAL='PRODQUAL'                    /* CHECK ENTRY */          49988300
*    THEN                                                               49988400
*      DO;                                                              49988500
*        ZMS=' 8, THE "PRODQUAL" KEY'||      /**KOPTP* MSG*/            49988600
*            ' MUST CONTAIN ONE'||                                      49988700
*            ' (OR MORE) ARGUMENT(S).';                                 49988800
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49988900
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49989000
*        ZMACRET=8;                          /* MACRO ERROR */          49989100
*      END;                                                             49989200
*  IF NUMBER(PRODQUAL)>1                     /* CHECK POSITIONALS */    49989300
*    THEN                                                               49989400
*      DO;                                                              49989500
*        ZMS=' 8, "PRODQUAL'||               /**KPOSP* MSG*/            49989600
*            PRODQUAL||                                                 49989700
*            '" "PRODQUAL"'||                                           49989800
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              49989900
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49990000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49990100
*        ZMACRET=8;                          /* MACRO ERROR */          49990200
*      END;                                                             49990300
*/*PE.KXVAR03 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 49990400
*  IF PRODQUAL(1)^=''                        /* CHECK FOR NULL */       49990500
*    THEN                                                               49990600
*      DO;                                                              49990700
*        XPRODQUAL=PRODQUAL(1);              /* SET XVARIABLE */        49990800
*        ZXPRODQUAL='INPUT';                 /* SET IN/OUTPUT */        49990900
*      END;                                                             49991000
*/*PE.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 49991100
*  IF PRODID='PRODID'                        /* CHECK ENTRY */          49991200
*    THEN                                                               49991300
*      DO;                                                              49991400
*        ZMS=' 8, THE "PRODID" KEY'||        /**KOPTP* MSG*/            49991500
*            ' MUST CONTAIN ONE'||                                      49991600
*            ' (OR MORE) ARGUMENT(S).';                                 49991700
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49991800
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49991900
*        ZMACRET=8;                          /* MACRO ERROR */          49992000
*      END;                                                             49992100
*  IF NUMBER(PRODID)>1                       /* CHECK POSITIONALS */    49992200
*    THEN                                                               49992300
*      DO;                                                              49992400
*        ZMS=' 8, "PRODID'||                 /**KPOSP* MSG*/            49992500
*            PRODID||                                                   49992600
*            '" "PRODID"'||                                             49992700
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              49992800
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49992900
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49993000
*        ZMACRET=8;                          /* MACRO ERROR */          49993100
*      END;                                                             49993200
*/*PE.KXVAR03 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 49993300
*  IF PRODID(1)^=''                          /* CHECK FOR NULL */       49993400
*    THEN                                                               49993500
*      DO;                                                              49993600
*        XPRODID=PRODID(1);                  /* SET XVARIABLE */        49993700
*        ZXPRODID='INPUT';                   /* SET IN/OUTPUT */        49993800
*      END;                                                             49993900
*/*PE.KMEKY06 NAME, RQD INPUT, ME KEYS -END--------------------------*/ 49994000
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KEY DO GROUP */          49994100
*/*PE.KXVAR01 NAME, OPT OUTPUT, KEYS -EXCESSIVE ARGUMENTS------------*/ 49994200
*  IF ENDTIME='ENDTIME'                      /* CHECK ENTRY */          49994300
*    THEN                                                               49994400
*      DO;                                                              49994500
*        ZMS=' 8, THE "ENDTIME" KEY'||       /**KOPTP* MSG*/            49994600
*            ' MUST CONTAIN ONE'||                                      49994700
*            ' (OR MORE) ARGUMENT(S).';                                 49994800
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49994900
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49995000
*        ZMACRET=8;                          /* MACRO ERROR */          49995100
*      END;                                                             49995200
*  IF NUMBER(ENDTIME)>1                      /* CHECK POSITIONALS */    49995300
*    THEN                                                               49995400
*      DO;                                                              49995500
*        ZMS=' 8, "ENDTIME'||                /**KPOSP* MSG*/            49995600
*            ENDTIME||                                                  49995700
*            '" "ENDTIME"'||                                            49995800
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              49995900
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49996000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49996100
*        ZMACRET=8;                          /* MACRO ERROR */          49996200
*      END;                                                             49996300
*/*PE.KXVAR03 NAME, OPT OUTPUT, KEYS -XVARIABLE----------------------*/ 49996400
*  IF ENDTIME(1)^=''                         /* CHECK FOR NULL */       49996500
*    THEN                                                               49996600
*      DO;                                                              49996700
*        XENDTIME=ENDTIME(1);                /* SET XVARIABLE */        49996800
*        ZXENDTIME='OUTPUT';                 /* SET IN/OUTPUT */        49996900
*      END;                                                             49997000
*/*PE.KXVAR01 NAME, OPT OUTPUT, KEYS -EXCESSIVE ARGUMENTS------------*/ 49997100
*  IF ENDDATA='ENDDATA'                      /* CHECK ENTRY */          49997200
*    THEN                                                               49997300
*      DO;                                                              49997400
*        ZMS=' 8, THE "ENDDATA" KEY'||       /**KOPTP* MSG*/            49997500
*            ' MUST CONTAIN ONE'||                                      49997600
*            ' (OR MORE) ARGUMENT(S).';                                 49997700
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49997800
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49997900
*        ZMACRET=8;                          /* MACRO ERROR */          49998000
*      END;                                                             49998100
*  IF NUMBER(ENDDATA)>1                      /* CHECK POSITIONALS */    49998200
*    THEN                                                               49998300
*      DO;                                                              49998400
*        ZMS=' 8, "ENDDATA'||                /**KPOSP* MSG*/            49998500
*            ENDDATA||                                                  49998600
*            '" "ENDDATA"'||                                            49998700
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              49998800
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               49998900
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49999000
*        ZMACRET=8;                          /* MACRO ERROR */          49999100
*      END;                                                             49999200
*/*PE.KXVAR03 NAME, OPT OUTPUT, KEYS -XVARIABLE----------------------*/ 49999300
*  IF ENDDATA(1)^=''                         /* CHECK FOR NULL */       49999400
*    THEN                                                               49999500
*      DO;                                                              49999600
*        XENDDATA=ENDDATA(1);                /* SET XVARIABLE */        49999700
*        ZXENDDATA='OUTPUT';                 /* SET IN/OUTPUT */        49999800
*      END;                                                             49999900
*/*PE.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 50000000
*  IF LINKAGE='LINKAGE'                      /* CHECK ENTRY */          50000100
*    THEN                                                               50000200
*      DO;                                                              50000300
*        ZMS=' 8, THE "LINKAGE" KEY'||       /**KOPTP* MSG*/            50000400
*            ' MUST CONTAIN ONE'||                                      50000500
*            ' (OR MORE) ARGUMENT(S).';                                 50000600
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               50000700
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                50000800
*        ZMACRET=8;                          /* MACRO ERROR */          50000900
*      END;                                                             50001000
*  IF NUMBER(LINKAGE)>1                      /* CHECK POSITIONALS */    50001100
*    THEN                                                               50001200
*      DO;                                                              50001300
*        ZMS=' 8, "LINKAGE'||                /**KPOSP* MSG*/            50001400
*            LINKAGE||                                                  50001500
*            '" "LINKAGE"'||                                            50001600
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              50001700
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               50001800
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                50001900
*        ZMACRET=8;                          /* MACRO ERROR */          50002000
*      END;                                                             50002100
*/*PE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 50002200
*  IF LINKAGE(1) = 'SVC'                                                50002300
*    THEN                                                               50002400
*      XLINKAGE = 'SVC';                     /* SET XVARIABLE */        50002500
*/*PE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 50002600
*  IF LINKAGE(1) = 'BRANCH'                                             50002700
*    THEN                                                               50002800
*      XLINKAGE = 'BRANCH';                  /* SET XVARIABLE */        50002900
*/*PE.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 50003000
*  IF XLINKAGE^=''                           /* CHECK FOR KEYWORD */    50003100
*    THEN                                                               50003200
*      ZXLINKAGE='INPUT';                    /* SET IN/OUTPUT */        50003300
*    ELSE                                                               50003400
*      DO;                                   /* KEYWORD NOT ENTERED */  50003500
*        IF LINKAGE(1)^=''                                              50003600
*          THEN                                                         50003700
*            DO;                                                        50003800
*              ZMS=' 8, "LINKAGE'||          /**KUKWP* MSG*/            50003900
*                  LINKAGE||'"'||                                       50004000
*                  ' ARGUMENT 1 IS AN UNKNOWN KEYWORD. '||              50004100
*                  ' VALID KEYWORD CHOICE(S) ARE:'||                    50004200
*                  ' "SVC"'||                /* VALID KEYWORD */        50004300
*                  ' OR "BRANCH".';          /* VALID KEYWORD */        50004400
*              ANS MSG('?IFAUSAGE ---> '||ZMS);                         50004500
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          50004600
*              ZMACRET=8;                    /* MACRO ERROR */          50004700
*            END;                                                       50004800
*      END;                                                             50004900
*/*PE.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 50005000
*  IF REQUEST(1)='STATUS'                    /* CHECK FOR KEYWORD */    50005100
*    THEN                                                               50005200
*      DO;                                                              50005300
*        XREQUEST='STATUS';                  /* SET XVARIABLE */        50005400
*        IF NUMBER(REQUEST)>1                /* CHECK POSITIONALS */    50005500
*          THEN                                                         50005600
*            DO;                                                        50005700
*              ZMS=' 8, "REQUEST'||          /**KPOSP* MSG*/            50005800
*                  REQUEST||                                            50005900
*                  '" "REQUEST"'||                                      50006000
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        50006100
*              ANS MSG('?IFAUSAGE ---> '||ZMS);                         50006200
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          50006300
*              ZMACRET=8;                    /* MACRO ERROR */          50006400
*            END;                                                       50006500
*      END;                                                             50006600
*/*PE.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 50006700
*  IF LINKAGE='LINKAGE'                      /* CHECK ENTRY */          50006800
*    THEN                                                               50006900
*      DO;                                                              50007000
*        ZMS=' 8, THE "LINKAGE" KEY'||       /**KOPTP* MSG*/            50007100
*            ' MUST CONTAIN ONE'||                                      50007200
*            ' (OR MORE) ARGUMENT(S).';                                 50007300
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               50007400
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                50007500
*        ZMACRET=8;                          /* MACRO ERROR */          50007600
*      END;                                                             50007700
*  IF NUMBER(LINKAGE)>1                      /* CHECK POSITIONALS */    50007800
*    THEN                                                               50007900
*      DO;                                                              50008000
*        ZMS=' 8, "LINKAGE'||                /**KPOSP* MSG*/            50008100
*            LINKAGE||                                                  50008200
*            '" "LINKAGE"'||                                            50008300
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              50008400
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               50008500
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                50008600
*        ZMACRET=8;                          /* MACRO ERROR */          50008700
*      END;                                                             50008800
*/*PE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 50008900
*  IF LINKAGE(1) = 'SVC'                                                50009000
*    THEN                                                               50009100
*      XLINKAGE = 'SVC';                     /* SET XVARIABLE */        50009200
*/*PE.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 50009300
*  IF LINKAGE(1) = 'BRANCH'                                             50009400
*    THEN                                                               50009500
*      XLINKAGE = 'BRANCH';                  /* SET XVARIABLE */        50009600
*/*PE.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 50009700
*  IF XLINKAGE^=''                           /* CHECK FOR KEYWORD */    50009800
*    THEN                                                               50009900
*      ZXLINKAGE='INPUT';                    /* SET IN/OUTPUT */        50010000
*    ELSE                                                               50010100
*      DO;                                   /* KEYWORD NOT ENTERED */  50010200
*        IF LINKAGE(1)^=''                                              50010300
*          THEN                                                         50010400
*            DO;                                                        50010500
*              ZMS=' 8, "LINKAGE'||          /**KUKWP* MSG*/            50010600
*                  LINKAGE||'"'||                                       50010700
*                  ' ARGUMENT 1 IS AN UNKNOWN KEYWORD. '||              50010800
*                  ' VALID KEYWORD CHOICE(S) ARE:'||                    50010900
*                  ' "SVC"'||                /* VALID KEYWORD */        50011000
*                  ' OR "BRANCH".';          /* VALID KEYWORD */        50011100
*              ANS MSG('?IFAUSAGE ---> '||ZMS);                         50011200
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          50011300
*              ZMACRET=8;                    /* MACRO ERROR */          50011400
*            END;                                                       50011500
*      END;                                                             50011600
*/*PE.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 50011700
*  IF XREQUEST^=''                           /* CHECK FOR KEYWORD */    50011800
*    THEN                                                               50011900
*      ZXREQUEST='INPUT';                    /* SET IN/OUTPUT */        50012000
*    ELSE                                                               50012100
*      DO;                                   /* KEYWORD NOT ENTERED */  50012200
*        IF REQUEST(1)^=''                   /* CHECK FOR KEYWORD */    50012300
*          THEN                                                         50012400
*            DO;                                                        50012500
*              ZXREQUEST='';                 /* RESET IN/OUTPUT */      50012600
*              ZMS=' 8, "REQUEST'||          /**KUKWP* MSG*/            50012700
*                  REQUEST||'"'||                                       50012800
*                  ' ARGUMENT 1 IS AN UNKNOWN KEYWORD. '||              50012900
*                  ' VALID KEYWORD CHOICE(S) ARE:'||                    50013000
*                  ' "REGISTER",'||          /* VALID KEYWORD */        50013100
*                  ' "DEREGISTER",'||        /* VALID KEYWORD */        50013200
*                  ' "FUNCTIONBEGIN",'||     /* VALID KEYWORD */        50013300
*                  ' "FUNCTIONDATA",'||      /* VALID KEYWORD */        50013400
*                  ' "FUNCTIONEND",'||       /* VALID KEYWORD */        50013500
*                  ' OR "STATUS".';          /* VALID KEYWORD */        50013600
*              ANS MSG('?IFAUSAGE ---> '||ZMS);                         50013700
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          50013800
*              ZMACRET=8;                    /* MACRO ERROR */          50013900
*            END;                                                       50014000
*      END;                                                             50014100
*/*PE.KXVAR01 NAME, OPT OUTPUT, KEYS -EXCESSIVE ARGUMENTS------------*/ 50014200
*  IF RETCODE='RETCODE'                      /* CHECK ENTRY */          50014300
*    THEN                                                               50014400
*      DO;                                                              50014500
*        ZMS=' 8, THE "RETCODE" KEY'||       /**KOPTP* MSG*/            50014600
*            ' MUST CONTAIN ONE'||                                      50014700
*            ' (OR MORE) ARGUMENT(S).';                                 50014800
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               50014900
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                50015000
*        ZMACRET=8;                          /* MACRO ERROR */          50015100
*      END;                                                             50015200
*  IF NUMBER(RETCODE)>1                      /* CHECK POSITIONALS */    50015300
*    THEN                                                               50015400
*      DO;                                                              50015500
*        ZMS=' 8, "RETCODE'||                /**KPOSP* MSG*/            50015600
*            RETCODE||                                                  50015700
*            '" "RETCODE"'||                                            50015800
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              50015900
*        ANS MSG('?IFAUSAGE ---> '||ZMS);                               50016000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                50016100
*        ZMACRET=8;                          /* MACRO ERROR */          50016200
*      END;                                                             50016300
*/*PE.KXVAR03 NAME, OPT OUTPUT, KEYS -XVARIABLE----------------------*/ 50016400
*  IF RETCODE(1)^=''                         /* CHECK FOR NULL */       50016500
*    THEN                                                               50016600
*      DO;                                                              50016700
*        XRETCODE=RETCODE(1);                /* SET XVARIABLE */        50016800
*        ZXRETCODE='OUTPUT';                 /* SET IN/OUTPUT */        50016900
*      END;                                                             50017000
*/*PE.MF02 XMF^='L' & XMFSCK='NOCHECK' ------------------------------*/ 50017100
*      END;                                  /* END PARTIAL CHECK */    50017200
*/********************************************************************/ 50017300
*/***PE.MR01 GENERATE CODE IF ZMACRET=0                              */ 50017400
*/********************************************************************/ 50017500
*  IF ZMACRET = 0                                                       50017600
*    THEN                                                               50017700
*      DO;                                                              50017800
*/********************************************************************/ 50017900
*/***PE.PR01 PRINT CONTROLS, DEFAULT IS YES                          */ 50018000
*/********************************************************************/ 50018100
*  ANS(MACCONC||'LIST PUSH;') NORESCAN COL(MACLMAR);                    50018200
*  IF ZPRINT='NO'                            /* PRINT IS OFF */         50018300
*    THEN                                                               50018400
*      ANS(MACCONC||'LIST OFF;') NORESCAN COL(MACLMAR);                 50018500
*    ELSE                                                               50018600
*      ANS(MACCONC||'LIST ON;')  NORESCAN COL(MACLMAR);                 50018700
*/********************************************************************/ 50018800
*/*PE.DO02 OUTER MACRO DO STATEMENT----------------------------------*/ 50018900
*  IF XMF^='L'                                                          50019000
*    THEN                                                               50019100
*      ANS('DO; /* IFAUSAGE-1 */')                                      50019200
*          NORESCAN COL(MACLMAR);                                       50019300
*/*PL.LL01 ?IFAUSAGE MF=L PARAMETER LIST-----------------------------*/ 50019400
*  IF XMF='L'                                                           50019500
*    THEN                                                               50019600
*      DO;                                                              50019700
*        ANS('DCL 1 '||XMFCTRL||' '||XMFATTR||', '||                    50019800
*            '/* ?IFAUSAGE PARM LIST*/')                                50019900
*            NORESCAN COL(MACLMAR);                                     50020000
*/*PL.LL13  XPREFIX FIXED(31) CONSTANT-------------------------------*/ 50020100
*        ANS('2 '||XMFCTRL||                                            50020200
*            '_XPREFIX FIXED(31), '||                                   50020300
*            '/* '||ZXPREFIX||' XPREFIX */')                            50020400
*            NORESCAN COL(MACLMAR+2);                                   50020500
*/*PL.LL13  XID CHAR(8) CONSTANT-------------------------------------*/ 50020600
*        ANS('2 '||XMFCTRL||                                            50020700
*            '_XID CHAR(8), '||                                         50020800
*            '/* '||ZXID||' XID */')                                    50020900
*            NORESCAN COL(MACLMAR+2);                                   50021000
*/*PL.LL02  XPLISTLEN FIXED(16) BDY(BYTE) INPUT----------------------*/ 50021100
*        ANS('2 '||XMFCTRL||                                            50021200
*            '_XPLISTLEN FIXED(16) BDY(BYTE), '||                       50021300
*            '/* INPUT XPLISTLEN*/')                                    50021400
*            NORESCAN COL(MACLMAR+2);                                   50021500
*/*PL.LL02  XVERSION FIXED(8) INPUT----------------------------------*/ 50021600
*        ANS('2 '||XMFCTRL||                                            50021700
*            '_XVERSION FIXED(8), '||                                   50021800
*            '/* INPUT XVERSION*/')                                     50021900
*            NORESCAN COL(MACLMAR+2);                                   50022000
*/*PL.LL04  XREQUEST FIXED(8) INPUT----------------------------------*/ 50022100
*        ANS('2 '||XMFCTRL||                                            50022200
*            '_XREQUEST FIXED(8), '||                                   50022300
*            '/* '||ZXREQUEST||' XREQUEST */')                          50022400
*            NORESCAN COL(MACLMAR+2);                                   50022500
*/*PL.LL13  XPRODOWNER CHAR(16) INPUT--------------------------------*/ 50022600
*        ANS('2 '||XMFCTRL||                                            50022700
*            '_XPRODOWNER CHAR(16), '||                                 50022800
*            '/* '||ZXPRODOWNER||' XPRODOWNER */')                      50022900
*            NORESCAN COL(MACLMAR+2);                                   50023000
*/*PL.LL13  XPRODNAME CHAR(16) INPUT---------------------------------*/ 50023100
*        ANS('2 '||XMFCTRL||                                            50023200
*            '_XPRODNAME CHAR(16), '||                                  50023300
*            '/* '||ZXPRODNAME||' XPRODNAME */')                        50023400
*            NORESCAN COL(MACLMAR+2);                                   50023500
*/*PL.LL13  XPRODVERS CHAR(8) INPUT----------------------------------*/ 50023600
*        ANS('2 '||XMFCTRL||                                            50023700
*            '_XPRODVERS CHAR(8), '||                                   50023800
*            '/* '||ZXPRODVERS||' XPRODVERS */')                        50023900
*            NORESCAN COL(MACLMAR+2);                                   50024000
*/*PL.LL13  XPRODQUAL CHAR(8) INPUT----------------------------------*/ 50024100
*        ANS('2 '||XMFCTRL||                                            50024200
*            '_XPRODQUAL CHAR(8), '||                                   50024300
*            '/* '||ZXPRODQUAL||' XPRODQUAL */')                        50024400
*            NORESCAN COL(MACLMAR+2);                                   50024500
*/*PL.LL13  XPRODID CHAR(8) INPUT------------------------------------*/ 50024600
*        ANS('2 '||XMFCTRL||                                            50024700
*            '_XPRODID CHAR(8), '||                                     50024800
*            '/* '||ZXPRODID||' XPRODID */')                            50024900
*            NORESCAN COL(MACLMAR+2);                                   50025000
*/*PL.LL04  XDOMAIN FIXED(8) INPUT-----------------------------------*/ 50025100
*        ANS('2 '||XMFCTRL||                                            50025200
*            '_XDOMAIN FIXED(8), '||                                    50025300
*            '/* '||ZXDOMAIN||' XDOMAIN */')                            50025400
*            NORESCAN COL(MACLMAR+2);                                   50025500
*/*PL.LL04  XSCOPE FIXED(8) INPUT------------------------------------*/ 50025600
*        ANS('2 '||XMFCTRL||                                            50025700
*            '_XSCOPE FIXED(8), '||                                     50025800
*            '/* '||ZXSCOPE||' XSCOPE */')                              50025900
*            NORESCAN COL(MACLMAR+2);                                   50026000
*/*PL.LL13  XRSV0001 CHAR(02) RESERVED-------------------------------*/ 50026100
*        ANS('2 '||XMFCTRL||                                            50026200
*            '_XRSV0001 CHAR(02), '||                                   50026300
*            '/* RESERVED */')                                          50026400
*            NORESCAN COL(MACLMAR+2);                                   50026500
*/*PL.LL13 ADDR XPRTOKEN PTR(31) OUTPUT ADDR-------------------------*/ 50026600
*        ANS('2 '||XMFCTRL||                                            50026700
*            '_XPRTOKEN_ADDR PTR(31), '||                               50026800
*            '/* '||ZXPRTOKEN_ADDR||' XPRTOKEN_ADDR */')                50026900
*            NORESCAN COL(MACLMAR+2);                                   50027000
*/*PL.LL13 ADDR XBEGTIME PTR(31) OUTPUT ADDR-------------------------*/ 50027100
*        ANS('2 '||XMFCTRL||                                            50027200
*            '_XBEGTIME_ADDR PTR(31), '||                               50027300
*            '/* '||ZXBEGTIME_ADDR||' XBEGTIME_ADDR */')                50027400
*            NORESCAN COL(MACLMAR+2);                                   50027500
*/*PL.LL13 ADDR XDATA PTR(31) INPUT ADDR-----------------------------*/ 50027600
*        ANS('2 '||XMFCTRL||                                            50027700
*            '_XDATA_ADDR PTR(31), '||                                  50027800
*            '/* '||ZXDATA_ADDR||' XDATA_ADDR */')                      50027900
*            NORESCAN COL(MACLMAR+2);                                   50028000
*/*PL.LL04  XFORMAT FIXED(8) INPUT-----------------------------------*/ 50028100
*        ANS('2 '||XMFCTRL||                                            50028200
*            '_XFORMAT FIXED(8), '||                                    50028300
*            '/* '||ZXFORMAT||' XFORMAT */')                            50028400
*            NORESCAN COL(MACLMAR+2);                                   50028500
*/*PL.LL13  XRSV0002 CHAR(03) RESERVED-------------------------------*/ 50028600
*        ANS('2 '||XMFCTRL||                                            50028700
*            '_XRSV0002 CHAR(03), '||                                   50028800
*            '/* RESERVED */')                                          50028900
*            NORESCAN COL(MACLMAR+2);                                   50029000
*/*PL.LL13 ADDR XCURRENTDATA PTR(31) OUTPUT ADDR---------------------*/ 50029100
*        ANS('2 '||XMFCTRL||                                            50029200
*            '_XCURRENTDATA_ADDR PTR(31), '||                           50029300
*            '/* '||ZXCURRENTDATA_ADDR||' XCURRENTDATA_ADDR */')        50029400
*            NORESCAN COL(MACLMAR+2);                                   50029500
*/*PL.LL13 ADDR XENDDATA PTR(31) OUTPUT ADDR-------------------------*/ 50029600
*        ANS('2 '||XMFCTRL||                                            50029700
*            '_XENDDATA_ADDR PTR(31), '||                               50029800
*            '/* '||ZXENDDATA_ADDR||' XENDDATA_ADDR */')                50029900
*            NORESCAN COL(MACLMAR+2);                                   50030000
*/*PL.LL13 ADDR XENDTIME PTR(31) OUTPUT ADDR-------------------------*/ 50030100
*        ANS('2 '||XMFCTRL||                                            50030200
*            '_XENDTIME_ADDR PTR(31), '||                               50030300
*            '/* '||ZXENDTIME_ADDR||' XENDTIME_ADDR */')                50030400
*            NORESCAN COL(MACLMAR+2);                                   50030500
*/*PL.LL18 ----------------------------------------------------------*/ 50030600
*        ANS('2 * CHAR(0);')                                            50030700
*            NORESCAN COL(MACLMAR+2);                                   50030800
*/*PL.LL15 XREQUEST.REGISTER-----------------------------------------*/ 50030900
*        ANS('DCL '||XMFCTRL||                                          50031000
*            '_XREQUEST_REGISTER FIXED(8) '||                           50031100
*            'CONSTANT(1); '||                                          50031200
*            '/* XREQUEST */')                                          50031300
*            NORESCAN COL(MACLMAR+2);                                   50031400
*/*PL.LL15 XREQUEST.DEREGISTER---------------------------------------*/ 50031500
*        ANS('DCL '||XMFCTRL||                                          50031600
*            '_XREQUEST_DEREGISTER FIXED(8) '||                         50031700
*            'CONSTANT(2); '||                                          50031800
*            '/* XREQUEST */')                                          50031900
*            NORESCAN COL(MACLMAR+2);                                   50032000
*/*PL.LL15 XREQUEST.FUNCTIONBEGIN------------------------------------*/ 50032100
*        ANS('DCL '||XMFCTRL||                                          50032200
*            '_XREQUEST_FUNCTIONBEGIN FIXED(8) '||                      50032300
*            'CONSTANT(3); '||                                          50032400
*            '/* XREQUEST */')                                          50032500
*            NORESCAN COL(MACLMAR+2);                                   50032600
*/*PL.LL15 XREQUEST.FUNCTIONDATA-------------------------------------*/ 50032700
*        ANS('DCL '||XMFCTRL||                                          50032800
*            '_XREQUEST_FUNCTIONDATA FIXED(8) '||                       50032900
*            'CONSTANT(4); '||                                          50033000
*            '/* XREQUEST */')                                          50033100
*            NORESCAN COL(MACLMAR+2);                                   50033200
*/*PL.LL15 XREQUEST.FUNCTIONEND--------------------------------------*/ 50033300
*        ANS('DCL '||XMFCTRL||                                          50033400
*            '_XREQUEST_FUNCTIONEND FIXED(8) '||                        50033500
*            'CONSTANT(5); '||                                          50033600
*            '/* XREQUEST */')                                          50033700
*            NORESCAN COL(MACLMAR+2);                                   50033800
*/*PL.LL15 XREQUEST.STATUS-------------------------------------------*/ 50033900
*        ANS('DCL '||XMFCTRL||                                          50034000
*            '_XREQUEST_STATUS FIXED(8) '||                             50034100
*            'CONSTANT(6); '||                                          50034200
*            '/* XREQUEST */')                                          50034300
*            NORESCAN COL(MACLMAR+2);                                   50034400
*/*PL.LL15 XDOMAIN.ADDRSP--------------------------------------------*/ 50034500
*        ANS('DCL '||XMFCTRL||                                          50034600
*            '_XDOMAIN_ADDRSP FIXED(8) '||                              50034700
*            'CONSTANT(1); '||                                          50034800
*            '/* XDOMAIN */')                                           50034900
*            NORESCAN COL(MACLMAR+2);                                   50035000
*/*PL.LL15 XDOMAIN.TASK----------------------------------------------*/ 50035100
*        ANS('DCL '||XMFCTRL||                                          50035200
*            '_XDOMAIN_TASK FIXED(8) '||                                50035300
*            'CONSTANT(2); '||                                          50035400
*            '/* XDOMAIN */')                                           50035500
*            NORESCAN COL(MACLMAR+2);                                   50035600
*/*PL.LL15 XSCOPE.ALL------------------------------------------------*/ 50035700
*        ANS('DCL '||XMFCTRL||                                          50035800
*            '_XSCOPE_ALL FIXED(8) '||                                  50035900
*            'CONSTANT(1); '||                                          50036000
*            '/* XSCOPE */')                                            50036100
*            NORESCAN COL(MACLMAR+2);                                   50036200
*/*PL.LL15 XSCOPE.FUNCTION-------------------------------------------*/ 50036300
*        ANS('DCL '||XMFCTRL||                                          50036400
*            '_XSCOPE_FUNCTION FIXED(8) '||                             50036500
*            'CONSTANT(2); '||                                          50036600
*            '/* XSCOPE */')                                            50036700
*            NORESCAN COL(MACLMAR+2);                                   50036800
*/*PL.LL15 XFORMAT.CPUTIME-------------------------------------------*/ 50036900
*        ANS('DCL '||XMFCTRL||                                          50037000
*            '_XFORMAT_CPUTIME FIXED(8) '||                             50037100
*            'CONSTANT(1); '||                                          50037200
*            '/* XFORMAT */')                                           50037300
*            NORESCAN COL(MACLMAR+2);                                   50037400
*/*PL.LL15 XFORMAT.BINARY--------------------------------------------*/ 50037500
*        ANS('DCL '||XMFCTRL||                                          50037600
*            '_XFORMAT_BINARY FIXED(8) '||                              50037700
*            'CONSTANT(2); '||                                          50037800
*            '/* XFORMAT */')                                           50037900
*            NORESCAN COL(MACLMAR+2);                                   50038000
*/*PL.LL15 XFORMAT.FLOAT---------------------------------------------*/ 50038100
*        ANS('DCL '||XMFCTRL||                                          50038200
*            '_XFORMAT_FLOAT FIXED(8) '||                               50038300
*            'CONSTANT(3); '||                                          50038400
*            '/* XFORMAT */')                                           50038500
*            NORESCAN COL(MACLMAR+2);                                   50038600
*/*PL.LL17 END OF MF=L PARAMETER LIST--------------------------------*/ 50038700
*      END;                                                             50038800
*/*PL.L01 MACRO WORK VARIABLES---------------------------------------*/ 50038900
*  DCL ZPRMLINE CHAR;          /* ZPRM ARRAY ENTRY ACCUMULATOR      */  50039000
*  DEACT ZPRMLINE;                                                      50039100
*  DCL ZNDX CHAR;              /* UNIQUE LIST STRUCTURE NAME        */  50039200
*  DEACT ZNDX;                                                          50039300
*  ZNDX=MACINDEX(1:4);         /* MACINDEX LAST THREE DIGITS        */  50039400
*  DCL XVERSION CHAR;                                                   50039500
*  DEACT XVERSION;                                                      50039600
*/*PL.L02 ?IFAUSAGE PARAMETER LIST-----------------------------------*/ 50039700
*  IF XMF^='L'                                                          50039800
*    THEN                                                               50039900
*      DO;                                                              50040000
*/*PL.L03 ?IFAUSAGE PARAMETER LIST-----------------------------------*/ 50040100
*        IF XMF='S'                                                     50040200
*          THEN                                                         50040300
*            XMFCTRL='#ZPLIST';                                         50040400
*/*PL.L04 ?IFAUSAGE PARAMETER LIST-----------------------------------*/ 50040500
*        ZPRMLINE='DCL 1 #Z'||ZNDX||' DEF('||XMFCTRL||'),'||            50040600
*                 ' /* ?IFAUSAGE PARM LIST*/';                          50040700
*/*PL.L08  XPREFIX FIXED(31) CONSTANT--------------------------------*/ 50040800
*        ZPRMLINE=ZPRMLINE||' 2 #Z'||ZNDX||                             50040900
*                 '_XPREFIX FIXED(31), '||                              50041000
*                 '/* '||ZXPREFIX||' XPREFIX */';                       50041100
*/*PL.L08  XID CHAR(8) CONSTANT--------------------------------------*/ 50041200
*        ZPRMLINE=ZPRMLINE||' 2 #Z'||ZNDX||                             50041300
*                 '_XID CHAR(8), '||                                    50041400
*                 '/* '||ZXID||' XID */';                               50041500
*/*PL.L05  XPLISTLEN FIXED(16) BDY(BYTE) INPUT-----------------------*/ 50041600
*        ZPRMLINE=ZPRMLINE||' 2 #Z'||ZNDX||                             50041700
*                 '_XPLISTLEN FIXED(16) BDY(BYTE), '||                  50041800
*                 '/* INPUT XPLISTLEN*/';                               50041900
*/*PL.L05  XVERSION FIXED(8) INPUT-----------------------------------*/ 50042000
*        ZPRMLINE=ZPRMLINE||' 2 #Z'||ZNDX||                             50042100
*                 '_XVERSION FIXED(8), '||                              50042200
*                 '/* INPUT XVERSION*/';                                50042300
*/*PL.L08  XREQUEST FIXED(8) INPUT-----------------------------------*/ 50042400
*        ZPRMLINE=ZPRMLINE||' 2 #Z'||ZNDX||                             50042500
*                 '_XREQUEST FIXED(8), '||                              50042600
*                 '/* '||ZXREQUEST||' XREQUEST */';                     50042700
*/*PL.L08  XPRODOWNER CHAR(16) INPUT---------------------------------*/ 50042800
*        ZPRMLINE=ZPRMLINE||' 2 #Z'||ZNDX||                             50042900
*                 '_XPRODOWNER CHAR(16), '||                            50043000
*                 '/* '||ZXPRODOWNER||' XPRODOWNER */';                 50043100
*/*PL.L08  XPRODNAME CHAR(16) INPUT----------------------------------*/ 50043200
*        ZPRMLINE=ZPRMLINE||' 2 #Z'||ZNDX||                             50043300
*                 '_XPRODNAME CHAR(16), '||                             50043400
*                 '/* '||ZXPRODNAME||' XPRODNAME */';                   50043500
*/*PL.L08  XPRODVERS CHAR(8) INPUT-----------------------------------*/ 50043600
*        ZPRMLINE=ZPRMLINE||' 2 #Z'||ZNDX||                             50043700
*                 '_XPRODVERS CHAR(8), '||                              50043800
*                 '/* '||ZXPRODVERS||' XPRODVERS */';                   50043900
*/*PL.L08  XPRODQUAL CHAR(8) INPUT-----------------------------------*/ 50044000
*        ZPRMLINE=ZPRMLINE||' 2 #Z'||ZNDX||                             50044100
*                 '_XPRODQUAL CHAR(8), '||                              50044200
*                 '/* '||ZXPRODQUAL||' XPRODQUAL */';                   50044300
*/*PL.L08  XPRODID CHAR(8) INPUT-------------------------------------*/ 50044400
*        ZPRMLINE=ZPRMLINE||' 2 #Z'||ZNDX||                             50044500
*                 '_XPRODID CHAR(8), '||                                50044600
*                 '/* '||ZXPRODID||' XPRODID */';                       50044700
*/*PL.L08  XDOMAIN FIXED(8) INPUT------------------------------------*/ 50044800
*        ZPRMLINE=ZPRMLINE||' 2 #Z'||ZNDX||                             50044900
*                 '_XDOMAIN FIXED(8), '||                               50045000
*                 '/* '||ZXDOMAIN||' XDOMAIN */';                       50045100
*/*PL.L08  XSCOPE FIXED(8) INPUT-------------------------------------*/ 50045200
*        ZPRMLINE=ZPRMLINE||' 2 #Z'||ZNDX||                             50045300
*                 '_XSCOPE FIXED(8), '||                                50045400
*                 '/* '||ZXSCOPE||' XSCOPE */';                         50045500
*/*PL.L08  XRSV0001 CHAR(02) RESERVED--------------------------------*/ 50045600
*        ZPRMLINE=ZPRMLINE||' 2 #Z'||ZNDX||                             50045700
*                 '_XRSV0001 CHAR(02), '||                              50045800
*                 '/* RESERVED */';                                     50045900
*/*PL.L08 ADDR XPRTOKEN PTR(31) OUTPUT ADDR--------------------------*/ 50046000
*        ZPRMLINE=ZPRMLINE||' 2 #Z'||ZNDX||                             50046100
*                 '_XPRTOKEN_ADDR PTR(31), '||                          50046200
*                 '/* '||ZXPRTOKEN_ADDR||' XPRTOKEN_ADDR */';           50046300
*/*PL.L08 ADDR XBEGTIME PTR(31) OUTPUT ADDR--------------------------*/ 50046400
*        ZPRMLINE=ZPRMLINE||' 2 #Z'||ZNDX||                             50046500
*                 '_XBEGTIME_ADDR PTR(31), '||                          50046600
*                 '/* '||ZXBEGTIME_ADDR||' XBEGTIME_ADDR */';           50046700
*/*PL.L08 ADDR XDATA PTR(31) INPUT ADDR------------------------------*/ 50046800
*        ZPRMLINE=ZPRMLINE||' 2 #Z'||ZNDX||                             50046900
*                 '_XDATA_ADDR PTR(31), '||                             50047000
*                 '/* '||ZXDATA_ADDR||' XDATA_ADDR */';                 50047100
*/*PL.L08  XFORMAT FIXED(8) INPUT------------------------------------*/ 50047200
*        ZPRMLINE=ZPRMLINE||' 2 #Z'||ZNDX||                             50047300
*                 '_XFORMAT FIXED(8), '||                               50047400
*                 '/* '||ZXFORMAT||' XFORMAT */';                       50047500
*/*PL.L08  XRSV0002 CHAR(03) RESERVED--------------------------------*/ 50047600
*        ZPRMLINE=ZPRMLINE||' 2 #Z'||ZNDX||                             50047700
*                 '_XRSV0002 CHAR(03), '||                              50047800
*                 '/* RESERVED */';                                     50047900
*/*PL.L08 ADDR XCURRENTDATA PTR(31) OUTPUT ADDR----------------------*/ 50048000
*        ZPRMLINE=ZPRMLINE||' 2 #Z'||ZNDX||                             50048100
*                 '_XCURRENTDATA_ADDR PTR(31), '||                      50048200
*                 '/* '||ZXCURRENTDATA_ADDR||' XCURRENTDATA_ADDR */';   50048300
*/*PL.L09 ADDR XENDDATA PTR(31) OUTPUT ADDR--------------------------*/ 50048400
*        ZPRMNUM=ZPRMNUM+1;                                             50048500
*        ZPRM(ZPRMNUM)=ZPRMLINE||' 2 #Z'||ZNDX||                        50048600
*            '_XENDDATA_ADDR PTR(31), '||                               50048700
*            '/* '||ZXENDDATA_ADDR||' XENDDATA_ADDR */';                50048800
*        ZPRMLINE='';                                                   50048900
*/*PL.L08 ADDR XENDTIME PTR(31) OUTPUT ADDR--------------------------*/ 50049000
*        ZPRMLINE=ZPRMLINE||' 2 #Z'||ZNDX||                             50049100
*                 '_XENDTIME_ADDR PTR(31), '||                          50049200
*                 '/* '||ZXENDTIME_ADDR||' XENDTIME_ADDR */';           50049300
*/*PL.L11 CONSTANT TO ENSURE THAT LIST FORM IS LONG ENOUGH ----------*/ 50049400
*        ZPRMNUM=ZPRMNUM+1;                                             50049500
*        ZPRM(ZPRMNUM)=ZPRMLINE||' 2 * CHAR(0);';                       50049600
*/*PL.L12 PARAMETER LIST SIZE----------------------------------------*/ 50049700
*        ZPLLEN=104;                                                    50049800
*        IF ZPRMMAX<ZPLLEN                                              50049900
*           & XMF^='E'                                                  50050000
*           & XMF^='M'                                                  50050100
*          THEN                                                         50050200
*            ZPRMMAX=ZPLLEN;                                            50050300
*/*PL.L13 -----------------------------------------------------------*/ 50050400
*      END;                                                             50050500
*/*PI.L01 XMF^='L' & XMFSCK='COMPLETE' ------------------------------*/ 50050600
*  IF XMF^='L'                                                          50050700
*    THEN                                                               50050800
*      DO;                                                              50050900
*/*PI.L03 CLEAR PARAMETER LIST --------------------------------------*/ 50051000
*  IF XMFSCK='COMPLETE'                                                 50051100
*    THEN                                                               50051200
*            ANS('#Z'||ZNDX||'=''''B;'||                                50051300
*                '/* CLEAR PARAMETER AREA */')                          50051400
*                NORESCAN COL(MACLMAR);                                 50051500
*/*PI.L25 XPREFIX FIXED(31)------------------------------------------*/ 50051600
*        ANS('#Z'||ZNDX||'_XPREFIX=0;'||                                50051700
*            '/* XPREFIX FIXED(31) CONSTANT */')                        50051800
*            NORESCAN COL(MACLMAR);                                     50051900
*/*PI.L28 XID  CHAR(8)-----------------------------------------------*/ 50052000
*        ANS('#Z'||ZNDX||'_XID=''IFAUSAGE'';'||                         50052100
*            '/* XID CHAR(8) CONSTANT */')                              50052200
*            NORESCAN COL(MACLMAR);                                     50052300
*/*PI.L05C XPLISTLEN FIXED(16)---------------------------------------*/ 50052400
*        ANS('#Z'||ZNDX||'_XPLISTLEN=LENGTH(#Z'||ZNDX||');'||           50052500
*            '/* XPLISTLEN FIXED(16) */')                               50052600
*            NORESCAN COL(MACLMAR);                                     50052700
*/*PI.L05B XVERSION FIXED(8)-----------------------------------------*/ 50052800
*        IF XMFSCK='COMPLETE'                                           50052900
*          THEN                                                         50053000
*            ANS('#Z'||ZNDX||'_XVERSION=1; '||                          50053100
*                '/* XVERSION FIXED(8) */')                             50053200
*                NORESCAN COL(MACLMAR);                                 50053300
*/*PI.L06 XREQUEST FIXED(8)------------------------------------------*/ 50053400
*        ZW='';                                                         50053500
*        ZMS='';                                                        50053600
*/*PI.L12 XREQUEST FIXED(8)------------------------------------------*/ 50053700
*        IF XREQUEST='REGISTER'                                         50053800
*          THEN                                                         50053900
*            ZW='1';                                                    50054000
*/*PI.L12 XREQUEST FIXED(8)------------------------------------------*/ 50054100
*        IF XREQUEST='DEREGISTER'                                       50054200
*          THEN                                                         50054300
*            ZW='2';                                                    50054400
*/*PI.L12 XREQUEST FIXED(8)------------------------------------------*/ 50054500
*        IF XREQUEST='FUNCTIONBEGIN'                                    50054600
*          THEN                                                         50054700
*            ZW='3';                                                    50054800
*/*PI.L12 XREQUEST FIXED(8)------------------------------------------*/ 50054900
*        IF XREQUEST='FUNCTIONDATA'                                     50055000
*          THEN                                                         50055100
*            ZW='4';                                                    50055200
*/*PI.L12 XREQUEST FIXED(8)------------------------------------------*/ 50055300
*        IF XREQUEST='FUNCTIONEND'                                      50055400
*          THEN                                                         50055500
*            ZW='5';                                                    50055600
*/*PI.L12 XREQUEST FIXED(8)------------------------------------------*/ 50055700
*        IF XREQUEST='STATUS'                                           50055800
*          THEN                                                         50055900
*            ZW='6';                                                    50056000
*/*PI.L13 XREQUEST FIXED(8)------------------------------------------*/ 50056100
*        IF ZW^=''                                                      50056200
*          & (ZW^='0' | XMFSCK^='COMPLETE')                             50056300
*          THEN                                                         50056400
*            ANS('#Z'||ZNDX||'_XREQUEST='||                             50056500
*                ZW||'; '||                                             50056600
*                '/* XREQUEST FIXED(8) */')                             50056700
*                NORESCAN COL(MACLMAR);                                 50056800
*/*PI.L21 XPRODOWNER NAME CHAR(16)-----------------------------------*/ 50056900
*        IF ZXPRODOWNER='INPUT' |                                       50057000
*           ZXPRODOWNER='INOUT'                                         50057100
*          THEN                                                         50057200
*            ANS('#Z'||ZNDX||'_XPRODOWNER='||                           50057300
*                XPRODOWNER||';'||                                      50057400
*                '/* XPRODOWNER CHAR(16) */')                           50057500
*                NORESCAN COL(MACLMAR);                                 50057600
*/*PI.L21 XPRODNAME NAME CHAR(16)------------------------------------*/ 50057700
*        IF ZXPRODNAME='INPUT' |                                        50057800
*           ZXPRODNAME='INOUT'                                          50057900
*          THEN                                                         50058000
*            ANS('#Z'||ZNDX||'_XPRODNAME='||                            50058100
*                XPRODNAME||';'||                                       50058200
*                '/* XPRODNAME CHAR(16) */')                            50058300
*                NORESCAN COL(MACLMAR);                                 50058400
*/*PI.L21 XPRODVERS NAME CHAR(8)-------------------------------------*/ 50058500
*        IF ZXPRODVERS='INPUT' |                                        50058600
*           ZXPRODVERS='INOUT'                                          50058700
*          THEN                                                         50058800
*            IF PRODVERS(1)=''                                          50058900
*             | PRODVERS(1)='NONE'                                      50059000
*              THEN                                                     50059100
*                ANS('#Z'||ZNDX||'_XPRODVERS='||                        50059200
*                    ''''||XPRODVERS||''';'||                           50059300
*                    '/* XPRODVERS CHAR(8) */')                         50059400
*                    NORESCAN COL(MACLMAR);                             50059500
*              ELSE                                                     50059600
*                ANS('#Z'||ZNDX||'_XPRODVERS='||                        50059700
*                    XPRODVERS||';'||                                   50059800
*                    '/* XPRODVERS CHAR(8) */')                         50059900
*                    NORESCAN COL(MACLMAR);                             50060000
*/*PI.L21 XPRODQUAL NAME CHAR(8)-------------------------------------*/ 50060100
*        IF ZXPRODQUAL='INPUT' |                                        50060200
*           ZXPRODQUAL='INOUT'                                          50060300
*          THEN                                                         50060400
*            IF PRODQUAL(1)=''                                          50060500
*             | PRODQUAL(1)='NONE'                                      50060600
*              THEN                                                     50060700
*                ANS('#Z'||ZNDX||'_XPRODQUAL='||                        50060800
*                    ''''||XPRODQUAL||''';'||                           50060900
*                    '/* XPRODQUAL CHAR(8) */')                         50061000
*                    NORESCAN COL(MACLMAR);                             50061100
*              ELSE                                                     50061200
*                ANS('#Z'||ZNDX||'_XPRODQUAL='||                        50061300
*                    XPRODQUAL||';'||                                   50061400
*                    '/* XPRODQUAL CHAR(8) */')                         50061500
*                    NORESCAN COL(MACLMAR);                             50061600
*/*PI.L21 XPRODID NAME CHAR(8)---------------------------------------*/ 50061700
*        IF ZXPRODID='INPUT' |                                          50061800
*           ZXPRODID='INOUT'                                            50061900
*          THEN                                                         50062000
*            IF PRODID(1)=''                                            50062100
*             | PRODID(1)='NONE'                                        50062200
*              THEN                                                     50062300
*                ANS('#Z'||ZNDX||'_XPRODID='||                          50062400
*                    ''''||XPRODID||''';'||                             50062500
*                    '/* XPRODID CHAR(8) */')                           50062600
*                    NORESCAN COL(MACLMAR);                             50062700
*              ELSE                                                     50062800
*                ANS('#Z'||ZNDX||'_XPRODID='||                          50062900
*                    XPRODID||';'||                                     50063000
*                    '/* XPRODID CHAR(8) */')                           50063100
*                    NORESCAN COL(MACLMAR);                             50063200
*/*PI.L06 XDOMAIN FIXED(8)-------------------------------------------*/ 50063300
*        ZW='';                                                         50063400
*        ZMS='';                                                        50063500
*/*PI.L12 XDOMAIN FIXED(8)-------------------------------------------*/ 50063600
*        IF XDOMAIN='ADDRSP'                                            50063700
*          THEN                                                         50063800
*            ZW='1';                                                    50063900
*/*PI.L12 XDOMAIN FIXED(8)-------------------------------------------*/ 50064000
*        IF XDOMAIN='TASK'                                              50064100
*          THEN                                                         50064200
*            ZW='2';                                                    50064300
*/*PI.L13 XDOMAIN FIXED(8)-------------------------------------------*/ 50064400
*        IF ZW^=''                                                      50064500
*          & (ZW^='0' | XMFSCK^='COMPLETE')                             50064600
*          THEN                                                         50064700
*            ANS('#Z'||ZNDX||'_XDOMAIN='||                              50064800
*                ZW||'; '||                                             50064900
*                '/* XDOMAIN FIXED(8) */')                              50065000
*                NORESCAN COL(MACLMAR);                                 50065100
*/*PI.L06 XSCOPE FIXED(8)--------------------------------------------*/ 50065200
*        ZW='';                                                         50065300
*        ZMS='';                                                        50065400
*/*PI.L12 XSCOPE FIXED(8)--------------------------------------------*/ 50065500
*        IF XSCOPE='ALL'                                                50065600
*          THEN                                                         50065700
*            ZW='1';                                                    50065800
*/*PI.L12 XSCOPE FIXED(8)--------------------------------------------*/ 50065900
*        IF XSCOPE='FUNCTION'                                           50066000
*          THEN                                                         50066100
*            ZW='2';                                                    50066200
*/*PI.L13 XSCOPE FIXED(8)--------------------------------------------*/ 50066300
*        IF ZW^=''                                                      50066400
*          & (ZW^='0' | XMFSCK^='COMPLETE')                             50066500
*          THEN                                                         50066600
*            ANS('#Z'||ZNDX||'_XSCOPE='||                               50066700
*                ZW||'; '||                                             50066800
*                '/* XSCOPE FIXED(8) */')                               50066900
*                NORESCAN COL(MACLMAR);                                 50067000
*/*PI.L15 ADDR(XPRTOKEN) CHAR(8)-------------------------------------*/ 50067100
*        IF ZXPRTOKEN^=''                                               50067200
*          THEN                                                         50067300
*            ANS('#Z'||ZNDX||'_XPRTOKEN_ADDR='||                        50067400
*                'ADDR('||XPRTOKEN||');'||                              50067500
*                '/* ADDR XPRTOKEN CHAR(8) */')                         50067600
*                NORESCAN COL(MACLMAR);                                 50067700
*/*PI.L15 ADDR(XBEGTIME) CHAR(8)-------------------------------------*/ 50067800
*        IF ZXBEGTIME^=''                                               50067900
*          THEN                                                         50068000
*            ANS('#Z'||ZNDX||'_XBEGTIME_ADDR='||                        50068100
*                'ADDR('||XBEGTIME||');'||                              50068200
*                '/* ADDR XBEGTIME CHAR(8) */')                         50068300
*                NORESCAN COL(MACLMAR);                                 50068400
*/*PI.L15 ADDR(XDATA) CHAR(8)----------------------------------------*/ 50068500
*        IF ZXDATA^=''                                                  50068600
*          THEN                                                         50068700
*            ANS('#Z'||ZNDX||'_XDATA_ADDR='||                           50068800
*                'ADDR('||XDATA||');'||                                 50068900
*                '/* ADDR XDATA CHAR(8) */')                            50069000
*                NORESCAN COL(MACLMAR);                                 50069100
*/*PI.L06 XFORMAT FIXED(8)-------------------------------------------*/ 50069200
*        ZW='';                                                         50069300
*        ZMS='';                                                        50069400
*/*PI.L12 XFORMAT FIXED(8)-------------------------------------------*/ 50069500
*        IF XFORMAT='CPUTIME'                                           50069600
*          THEN                                                         50069700
*            ZW='1';                                                    50069800
*/*PI.L12 XFORMAT FIXED(8)-------------------------------------------*/ 50069900
*        IF XFORMAT='BINARY'                                            50070000
*          THEN                                                         50070100
*            ZW='2';                                                    50070200
*/*PI.L12 XFORMAT FIXED(8)-------------------------------------------*/ 50070300
*        IF XFORMAT='FLOAT'                                             50070400
*          THEN                                                         50070500
*            ZW='3';                                                    50070600
*/*PI.L13 XFORMAT FIXED(8)-------------------------------------------*/ 50070700
*        IF ZW^=''                                                      50070800
*          & (ZW^='0' | XMFSCK^='COMPLETE')                             50070900
*          THEN                                                         50071000
*            ANS('#Z'||ZNDX||'_XFORMAT='||                              50071100
*                ZW||'; '||                                             50071200
*                '/* XFORMAT FIXED(8) */')                              50071300
*                NORESCAN COL(MACLMAR);                                 50071400
*/*PI.L15 ADDR(XCURRENTDATA) CHAR(8)---------------------------------*/ 50071500
*        IF ZXCURRENTDATA^=''                                           50071600
*          THEN                                                         50071700
*            ANS('#Z'||ZNDX||'_XCURRENTDATA_ADDR='||                    50071800
*                'ADDR('||XCURRENTDATA||');'||                          50071900
*                '/* ADDR XCURRENTDATA CHAR(8) */')                     50072000
*                NORESCAN COL(MACLMAR);                                 50072100
*/*PI.L15 ADDR(XENDDATA) CHAR(8)-------------------------------------*/ 50072200
*        IF ZXENDDATA^=''                                               50072300
*          THEN                                                         50072400
*            ANS('#Z'||ZNDX||'_XENDDATA_ADDR='||                        50072500
*                'ADDR('||XENDDATA||');'||                              50072600
*                '/* ADDR XENDDATA CHAR(8) */')                         50072700
*                NORESCAN COL(MACLMAR);                                 50072800
*/*PI.L15 ADDR(XENDTIME) CHAR(8)-------------------------------------*/ 50072900
*        IF ZXENDTIME^=''                                               50073000
*          THEN                                                         50073100
*            ANS('#Z'||ZNDX||'_XENDTIME_ADDR='||                        50073200
*                'ADDR('||XENDTIME||');'||                              50073300
*                '/* ADDR XENDTIME CHAR(8) */')                         50073400
*                NORESCAN COL(MACLMAR);                                 50073500
*/*PI.L29 NOT MF=M MACRO FORM----------------------------------------*/ 50073600
*        IF XMF^='M'                                                    50073700
*          THEN                                                         50073800
*            DO;                                                        50073900
*/*PI.L31 INVOKE FUNCTION--------------------------------------------*/ 50074000
*              ANS('RFY GPR01P RSTD;') NORESCAN COL(MACLMAR);           50074100
*              ANS('GPR01P=ADDR(#Z'||ZNDX||');'||                       50074200
*                  '/* PARAMETER LIST */')                              50074300
*                  NORESCAN COL(MACLMAR);                               50074400
*/*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*/  50074500
 /* Insert PL/AS Linkage Code Here........                           */ 50074600
 ANS ('IF CVTSMCA ^= 0'                                                 50074700
      || COMMENT('SMCA Available ??')                                   50074800
      )                                                                 50074900
     NORESCAN COL(MACLMAR+2);                                 /* @01A*/ 50075000
 ANS ('& SMCAUDCS = ''1''B'                                             50075100
      || COMMENT('Services Available ??')                               50075200
      )                                                                 50075300
     NORESCAN COL(MACLMAR+2);                                 /* @01A*/ 50100000
 ANS ('THEN'                                                            50150000
      || COMMENT('Yes - Invoke Service')                                50200000
      )                                                                 50250000
     NORESCAN COL(MACLMAR+2);                                 /* @01A*/ 50300000
 IF (XLINKAGE = 'BRANCH')           /* "BRANCH" Specified ??     @01A*/ 50350000
 THEN                               /* Yes - Generate CALL       @01A*/ 50400000
   ANS ('CALL SMCAUDCA->IANY;'                                          50450000
        || COMMENT('Call Requested Function')                           50500000
        )                                                               50550000
       NORESCAN COL(MACLMAR+4);                               /* @01A*/ 50600000
 ELSE                               /* No - Generate SVC         @01A*/ 50650000
   DO;                              /*                           @01A*/ 50700000
     ANS ('DO;'                                                         50750000
          )                                                             50800000
         NORESCAN COL(MACLMAR+4);                             /* @01A*/ 50850000
     ANS ('Rfy (GPR15F) Rstd;'                                          50900000
          || COMMENT('Rfy Reg for SVC')                                 50950000
          )                                                             51000000
         NORESCAN COL(MACLMAR+6);                             /* @01A*/ 51050000
     ANS ('GPR15F = 25;'                                                51100000
          || COMMENT('Set Extended SVC Entry Value')                    51150000
          )                                                             51200000
         NORESCAN COL(MACLMAR+6);                             /* @01A*/ 51250000
     ANS ('SVC (109); '                                                 51300000
          || COMMENT('Issue SMF Accounting SVC')                        51350000
          )                                                             51400000
         NORESCAN COL(MACLMAR+6);                             /* @01A*/ 51450000
     ANS ('Rfy (GPR15F) UNRstd;'                                        51500000
          || COMMENT('Rfy Reg for SVC')                                 51550000
          )                                                             51600000
         NORESCAN COL(MACLMAR+6);                             /* @01A*/ 51650000
     ANS ('END;'                                                        51700000
          )                                                             51750000
         NORESCAN COL(MACLMAR+4);                             /* @01A*/ 51800000
   END;                             /*                           @01A*/ 51850000
 ANS ('ELSE'                                                            51900000
      || COMMENT('No - Signal Error')                                   51950000
      )                                                                 52000000
     NORESCAN COL(MACLMAR+2);                                 /* @01A*/ 52050000
 ANS ('DO;'                                                             52100000
      )                                                                 52150000
     NORESCAN COL(MACLMAR+4);                                 /* @01A*/ 52200000
 ANS ('Rfy (GPR15F) Rstd;'                                              52250000
      || COMMENT('Rfy Reg for Return Code')                             52300000
      )                                                                 52350000
     NORESCAN COL(MACLMAR+6);                                 /* @01A*/ 52400000
 ANS ('GPR15F = 16;'                                                    52450000
      || COMMENT('Set Service Not Available')                           52500000
      )                                                                 52550000
     NORESCAN COL(MACLMAR+6);                                 /* @01A*/ 52600000
 ANS ('Rfy (GPR15F) UNRstd;'                                            52650000
      || COMMENT('Rfy Reg for Return Code')                             52700000
      )                                                                 52750000
     NORESCAN COL(MACLMAR+6);                                 /* @01A*/ 52800000
 ANS ('END;'                                                            52850000
      )                                                                 52900000
     NORESCAN COL(MACLMAR+4);                                 /* @01A*/ 52950000
*IF INDEX(EHAREGS,'15F')=0          /* 15F included in EPILOG??  @01A*/ 53000000
*THEN EHAREGS=EHAREGS||'15F';       /* No - Request it           @01A*/ 53050000
*                                                                       53100000
*/*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*/  53150000
*              ANS('RFY GPR01P UNRSTD;') NORESCAN COL(MACLMAR);         53200000
*              IF NUMBER(RETCODE)>0                                     53250000
*                THEN                                                   53300000
*                  ANS('RFY GPR15F RSTD;') NORESCAN COL(MACLMAR);       53350000
*/*PO.L08 XRETCODE CHAR(8) RETURN CODE-------------------------------*/ 53400000
*              IF NUMBER(RETCODE)>0                                     53450000
*                THEN                                                   53500000
*                    ANS(XRETCODE||                                     53550000
*                     '=GPR15F; /* SET RETURN CODE */')                 53600000
*                      NORESCAN COL(MACLMAR);                           53650000
*/*PO.L10 REMOVE REGISTER RESTRICTIONS-------------------------------*/ 53700000
*              IF NUMBER(RETCODE)>0                                     53750000
*                THEN                                                   53800000
*              ANS('RFY GPR15F UNRSTD;') NORESCAN COL(MACLMAR);         53850000
*/*PO.L11 END OF FUNCTION INVOCATION---------------------------------*/ 53900000
*            END;                                                       53950000
*/*PO.L12 END OF PARAMETER LIST PROCESSING---------------------------*/ 54000000
*      END;                                                             54050000
*/*PO.L13 IFAUSAGE USAGE INDICATOR-----------------------------------*/ 54100000
*  ZIFAUSAGE='YES';                          /* SET IFAUSAGE USED */    54150000
*/*PO.L15 END OF EXECUTABLE IFAUSAGE-1 MACRO-------------------------*/ 54200000
*  IF XMF^='L'                                                          54250000
*    THEN                                                               54300000
*      ANS('END; /* IFAUSAGE-1 */')                                     54350000
*          NORESCAN COL(MACLMAR);                                       54400000
*/*PO.L16 RESTORE PRINT CONTROLS-------------------------------------*/ 54450000
*  ANS(MACCONC||'LIST POP;') NORESCAN COL(MACLMAR);                     54500000
*/*PO.L17 END OF IFAUSAGE MACRO--------------------------------------*/ 54550000
*  ANS(MACCONC||'SPACE;') NORESCAN COL(MACLMAR);                        54600000
*  ANS(' ') NORESCAN COL(MACLMAR);                                      54650000
*/*******************************************************************/  54700000
*/*  PO.L18 END OF CODE TO BE BYPASSED WHEN ZMACRET ^= 0            */  54750000
*/*******************************************************************/  54800000
*      END;                                                             54850000
*/*******************************************************************/  54900000
*/*  MVS ONLY     -CHECK IF AMG PARM LISTS ARE PRESENT              */  54950000
*/*               -ROUND MAX AMG PARM LIST TO DOUBLEWORD MULTIPLES  */  55000000
*/*******************************************************************/  55050000
*  IF ZPRMNUM>0                   /* NUMBER OF AMG PARM LIST ENTRIES*/  55100000
*    THEN                                                               55150000
*      DO;                                                              55200000
*        ZPRMMAX=((ZPRMMAX+7)/8)*8; /* ROUND PARM LIST SIZE UP TO       55250000
*                                      DOUBLEWORD MULTIPLES        */   55300000
*/*******************************************************************/  55350000
*/*  MVS -GENERATE PARM LIST DCL TO OVERLAY ?EPILOG'S ILIST AREA    */  55400000
*/*******************************************************************/  55450000
*        IF XMF ^= 'M' & XMF ^= 'E'                                     55500000
*          THEN                                                         55550000
*            DO;                                                        55600000
*              IF INDEX(EHALIST,',AMG,')=0 /* HAS DECLARE BEEN DONE?*/  55650000
*                THEN                                                   55700000
*                  DO;                                                  55750000
*                    ANS('?EPILOG                                       55800000
*                        STRING(''DCL #ZPLIST DEF(ILIST);'');');        55850000
*                    EHALIST=EHALIST||',AMG,';                          55900000
*                  END;                                                 55950000
*            END;                                                       56000000
*/*******************************************************************/  56050000
*/*  MVS  -EXTRACT PARM LISTS FROM AMG GLOBAL MACRO ARRAYS          */  56100000
*/*******************************************************************/  56150000
*        IF XMF ^= 'M' & XMF ^= 'E'                                     56200000
*          THEN                                                         56250000
*            DO;                                                        56300000
*              IF ZPRMMAX>EHAMAXLEN                                     56350000
*                THEN                                                   56400000
*                  EHAMAXLEN=ZPRMMAX; /* SET MAX PARM LIST SIZE     */  56450000
*            END;                                                       56500000
*        DO ZI=1 TO ZPRMNUM; /* EXTRACT AMG PARM LISTS               */ 56550000
*          ANS('?EPILOG STRING('''||ZPRM(ZI)||''');')                   56600000
*              COL(MACLMAR);                                            56650000
*        END;                                                           56700000
*      END;                                                             56750000
*/*-----------------------------------------------------------------*/  56800000
*/*  MVS  -ENSURE THAT GPRS NEEDED BY AMG MACROS WILL BE PROVIDED   */  56850000
*/*        BY ?EPILOG                                               */  56900000
*/*-----------------------------------------------------------------*/  56950000
*        IF INDEX(EHAREGS,'01P')=0                                      57000000
*          THEN                                                         57050000
*            EHAREGS=EHAREGS||'01P'; /* GPR01P                      */  57100000
*        IF INDEX(EHAREGS,'15F')=0                                      57150000
*          & NUMBER(RETCODE)>0                                          57200000
*          THEN                                                         57250000
*            EHAREGS=EHAREGS||'15F'; /* GPR15F                      */  57300000
*  RETURN CODE(ZMACRET);                                                57350000
*%END IFAUSAGE;                                                         57400000
