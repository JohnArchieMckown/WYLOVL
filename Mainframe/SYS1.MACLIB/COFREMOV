*/**** START OF SPECIFICATIONS **************************************** 00000100
*                                                                     * 00000200
*                                                                     * 00000300
*01* MACRO NAME:  COFREMOV                              -03/29/95-<1> * 00000400
*                                                                     * 00000500
*                                                                     * 00000600
*01* DESCRIPTIVE NAME:  REMOVE USER                                   * 00000700
*                                                                     * 00000800
*01* PROPRIETARY STATEMENT:                                           * 00000900
*                                                                     * 00001000
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 00001100
*     THIS MACRO IS "RESTRICTED MATERIALS OF IBM"                     * 00001200
*     5655-068 (C) COPYRIGHT IBM CORP. 1988, 1995                     * 00001300
*                                                                     * 00001400
* STATUS= JBB5522                                                     * 00001500
*                                                                     * 00001600
*                                                                     * 00001700
*                                                                     * 00001800
*01* FUNCTION:                                                        * 00001900
*                                                                     * 00002000
*      This macro provides the interface to the REMOVE USER function  * 00002100
*      provided by the Virtual Lookaside Facility.                    * 00002200
*                                                                     * 00002300
*      The Remove User function terminates an end user's access to    * 00002400
*      the class of VLF objects associated with the specified user    * 00002500
*      token (UTOKEN).                                                * 00002600
*                                                                     * 00002700
*      If a service utilizing VLF on behalf of the end user           * 00002800
*      determines, the user should no longer have access to the class * 00002900
*      of VLF objects, the service should issue a REMOVE USER         * 00003000
*      function.                                                      * 00003100
*                                                                     * 00003200
*      The REMOVE USER function may only be invoked from the address  * 00003300
*      space in which the user was identified.                        * 00003400
*                                                                     * 00003500
*      The user token (UTOKEN) which the service received when it     * 00003600
*      issued the IDENTIFY USER for the end user must be passed to    * 00003700
*      the REMOVE USER function to identify the user whose access is  * 00003800
*      to be deleted.                                                 * 00003900
*                                                                     * 00004000
*      Any subsequent request of VLF functions specifying the UTOKEN  * 00004100
*      passed to the REMOVE USER function results in a reason code    * 00004200
*      indicating an invalid UTOKEN.                                  * 00004300
*                                                                     * 00004400
*01* EXTERNAL CLASSIFICATION:  GUPI                                   * 00004500
*                                                                     * 00004600
*01* END OF EXTERNAL CLASSIFICATION:                                  * 00004700
*                                                                     * 00004800
*01* ENVIRONMENT:                                                     * 00004900
*                                                                     * 00005000
*                                                                     * 00005100
*      Dispatchable unit mode: Task mode.                             * 00005200
*                                                                     * 00005300
*      Minimum authorization: Supervisor state or PSW key mask 0-7.   * 00005400
*                                                                     * 00005500
*      AMODE:            24 or 31 bit addressing mode. All parameter  * 00005600
*                        passed must be valid 31 bit addresses.       * 00005700
*                                                                     * 00005800
*      ASC mode:         Primary or Access Register.                  * 00005900
*                                                                     * 00006000
*      Serialization:    Enabled.                                     * 00006100
*                                                                     * 00006200
*                                                                     * 00006300
*                                                                     * 00006400
*01* SYNTAX:                                                          * 00006500
*                                                                     * 00006600
*[xlabel]  COFREMOV   [ PLISTVER                                      * 00006700
*                                =xplistver|IMPLIED_VERSION]        * 00006800
*                      ,UTOKEN=xutoken                                * 00006900
*                     [,RETCODE=xretcode]                             * 00007000
*                     [,RSNCODE=xrsncode]                             * 00007100
*                    [,MF=S]                                         * 00007200
*                    [,MF=(L,xmfctrl,xmfattr|0D)]                  * 00007300
*                    [,MF=(E,xmfctrl,COMPLETE)]                    * 00007400
*                                                                     * 00007500
*                                                                     * 00007600
*      Where:                                                         * 00007700
*                                                                     * 00007800
*                                                                     * 00007900
*      [xlabel]                                                       * 00008000
*          is an optional symbol, starting in column 1, that is the   * 00008100
*          name on the COFREMOV macro invocation.  The name must      * 00008200
*          conform to the rules for an ordinary assembler language    * 00008300
*          symbol.                                                    * 00008400
*          DEFAULT: No name.                                          * 00008500
*                                                                     * 00008600
*                                                                     * 00008700
*                                                                     * 00008800
*                                                                     * 00008900
*      [PLISTVER=xplistver|IMPLIED_VERSION]                         * 00009000
*          is an optional byte input decimal value in the "1-1" range * 00009100
*          that specifies the macro version.  PLISTVER is the only    * 00009200
*          key allowed on the list form of MF and determines which    * 00009300
*          parameter list is generated.  Note that MAX may be         * 00009400
*          specified instead of a number, and the parameter list will * 00009500
*          be of the largest size currently supported. This size may  * 00009600
*          grow from release to release (thus possibly affecting the  * 00009700
*          amount of storage needed by your program).  If your        * 00009800
*          program can tolerate this, IBM recommends that you always  * 00009900
*          specify MAX when creating the list form parameter list as  * 00010000
*          that will ensure that the list form parameter list is      * 00010100
*          always long enough to hold whatever parameters might be    * 00010200
*          specified on the execute form.                             * 00010300
*          DEFAULT: IMPLIED_VERSION.  When PLISTVER is omitted, the   * 00010400
*          default is the lowest version which allows all of the      * 00010500
*          parameters specified on the invocation to be processed.    * 00010600
*                                                                     * 00010700
*                                                                     * 00010800
*                                                                     * 00010900
*                                                                     * 00011000
*      UTOKEN=xutoken                                                 * 00011100
*          is the name (RS-type), or address in register (2)-(12), of * 00011200
*          a required 16 character input variable that contains the   * 00011300
*          user token value (obtained from the VLF IDENTIFY function) * 00011400
*          for the user which is being removed from VLF.              * 00011500
*                                                                     * 00011600
*                                                                     * 00011700
*                                                                     * 00011800
*                                                                     * 00011900
*      [RETCODE=xretcode]                                             * 00012000
*          is the name (RS-type) of an optional fullword output       * 00012100
*          variable, or register (2)-(12), into which the return code * 00012200
*          is to be copied from GPR 15.                               * 00012300
*                                                                     * 00012400
*                                                                     * 00012500
*                                                                     * 00012600
*                                                                     * 00012700
*      [RSNCODE=xrsncode]                                             * 00012800
*          is the name (RS-type) of an optional fullword output       * 00012900
*          variable, or register (2)-(12), into which the reason code * 00013000
*          is to be copied from GPR 0.                                * 00013100
*                                                                     * 00013200
*                                                                     * 00013300
*                                                                     * 00013400
*                                                                     * 00013500
*      [MF=S|L|E]                                                   * 00013600
*          is an optional keyword input which specifies the macro     * 00013700
*          form.                                                      * 00013800
*          DEFAULT: S                                                 * 00013900
*                                                                     * 00014000
*                                                                     * 00014100
*          [MF=S]                                                     * 00014200
*              specifies the standard form of the macro.  The "S"     * 00014300
*              form generates code to put the parameters into an      * 00014400
*              in-line parameter list and invoke the desired service. * 00014500
*              Full checking for required macro keys is done along    * 00014600
*              with supplying defaults for omitted optional           * 00014700
*              parameters.                                            * 00014800
*                                                                     * 00014900
*          [MF=(L,xmfctrl,xmfattr|0D)]                              * 00015000
*              specifies the list form of the macro.  The "L" form    * 00015100
*              defines an area to be used for the parameter list.     * 00015200
*              Only the PLISTVER key may be specified on the          * 00015300
*              invocation.  All other macro parameters are flagged as * 00015400
*              errors.  If PLISTVER is not specified, the original    * 00015500
*              parameter list definition is used.                     * 00015600
*                                                                     * 00015700
*            ,xmfctrl                                                 * 00015800
*              is a required input.  It is the name of a storage area * 00015900
*              for the parameter list.                                * 00016000
*                                                                     * 00016100
*            ,xmfattr|0D                                            * 00016200
*              is an optional 60 character input string that varies   * 00016300
*              from 1 to 60 characters. It can contain any value that * 00016400
*              is valid on an assembler DS pseudo-op. You can use     * 00016500
*              this parameter to force boundary alignment of the      * 00016600
*              parameter list.                                        * 00016700
*              DEFAULT: 0D which forces the parameter list to a       * 00016800
*              doubleword boundary.                                   * 00016900
*                                                                     * 00017000
*          [MF=(E,xmfctrl,COMPLETE)]                                * 00017100
*              specifies the execute form of the macro.  The "E" form * 00017200
*              generates code to put the parameters into the          * 00017300
*              parameter list specified by xmfctrl and provides full  * 00017400
*              syntax checking with default setting.                  * 00017500
*                                                                     * 00017600
*            ,xmfctrl                                                 * 00017700
*              is a required input.  It is the name (RS-type), or     * 00017800
*              address in register (1)-(12), of a storage area for    * 00017900
*              the parameter list.                                    * 00018000
*                                                                     * 00018100
*            ,COMPLETE                                              * 00018200
*              is an optional keyword input which specifies the       * 00018300
*              degree of macro parameter syntax checking.             * 00018400
*              DEFAULT: COMPLETE                                      * 00018500
*                                                                     * 00018600
*                                                                     * 00018700
*              COMPLETE   Checking for required macro keys is done    * 00018800
*                        and defaults are supplied for omitted        * 00018900
*                        optional parameters.                         * 00019000
*                                                                     * 00019100
*                                                                     * 00019200
*                                                                     * 00019300
*                                                                     * 00019400
*                                                                     * 00019500
*                                                                     * 00019600
*                                                                     * 00019700
*01* RETURN CODES:                                                    * 00019800
*                                                                     * 00019900
*                                                                     * 00020000
*       0         Success.  The record of the IDENTIFY corresponding  * 00020100
*                 to the input UTOKEN has been removed.  Subsequent   * 00020200
*                 requests for access to VLF objects via this UTOKEN  * 00020300
*                 will be unsuccessful.                               * 00020400
*                                                                     * 00020500
*       2         Request was unsuccessful.                           * 00020600
*                                                                     * 00020700
*       24(18)    The ALET of the input parameter is not valid.       * 00020800
*                                                                     * 00020900
*       40(28)    VLF is not active.                                  * 00021000
*                                                                     * 00021100
*       44(2C)    Unexpected error in VLF.                            * 00021200
*                                                                     * 00021300
*                                                                     * 00021400
*                                                                     * 00021500
*01* REASON CODES:                                                    * 00021600
*                                                                     * 00021700
*       REASON    RETURN                                              * 00021800
*       CODE      CODE      DESCRIPTION                               * 00021900
*                                          * 00022000
*                                                                     * 00022100
*                                                                     * 00022200
*              0  0         Success.    The  record  of  the IDENTIFY * 00022300
*                           corresponding  to  the  input  UTOKEN has * 00022400
*                           been  removed.    Subsequent requests for * 00022500
*                           access  to  VLF  objects  via this UTOKEN * 00022600
*                           will be unsuccessful.                     * 00022700
*                                                                     * 00022800
*         16(10)  2         An invalid user token was specified.      * 00022900
*                                                                     * 00023000
*         (nnnn)  44(2C)    The  reason  code  associated with return * 00023100
*                           code   44   (X'2C')   is   for   internal * 00023200
*                           diagnostic  purposes only.   It should be * 00023300
*                           recorded  and supplied to the appropriate * 00023400
*                           IBM Support personnel.                    * 00023500
*                                                                     * 00023600
*                                                                     * 00023700
*                                                                     * 00023800
*                                                                     * 00023900
*                                                                     * 00024000
*01* MODULE TYPE:  ASSEM MACRO                                        * 00024100
*                                                                     * 00024200
*02*   PROCESSOR:  ASSEM                                              * 00024300
*                                                                     * 00024400
*01* COMPONENT:  SC164                                                * 00024500
*                                                                     * 00024600
*01* DISTRIBUTION LIBRARY: AMACLIB                                    * 00024700
*                                                                     * 00024800
*01* MACRO USAGE NOTES:                                               * 00024900
*                                                                     * 00025000
*                                                                     * 00025100
*    1.  Printing of the macro expansion is controlled by the ZPRINT  * 00025200
*        global macro variable.  Any value other than 'NO' will       * 00025300
*        result in the macro expansion being printed.  The default is * 00025400
*        'YES'.  The following examples illustrate how the ZPRINT     * 00025500
*        variable should be set.                                      * 00025600
*                                                                     * 00025700
*                    GBLC &ZPRINT                                     * 00025800
*            &ZPRINT SETC 'YES'          &ZPRINT SETC 'NO'            * 00025900
*                                                                     * 00026000
*                                                                     * 00026100
*    2.  All   keys   currently   contained  in  the  COFREMOV  macro * 00026200
*        correspond  to  version  1.   If you specify PLISTVER, use a * 00026300
*        value of 1 or MAX.                                           * 00026400
*                                                                     * 00026500
*                                                                     * 00026600
*                                                                     * 00026700
*                                                                     * 00026800
*01* CHANGE ACTIVITY:                                                 * 00026900
*                                                                     * 00027000
*   Flag LineItem  FMID    Date   ID    Comment                       * 00027100
*                                                                     * 00027200
*    $L0=VLF      HBB3310 870301 PDAP:                                * 00027300
*                                          Virtual Lookaside Facility * 00027400
****** END OF SPECIFICATIONS *****************************************/ 00027500
*/********************************************************************* 00027600
         MACRO                                                          00027700
&XLABEL  COFREMOV &PLISTVER=,&UTOKEN=,&RETCODE=,&RSNCODE=,&MF=          00027800
.*                                                                      00027900
*              MACDATE -03/29/95-<1>                                    00028000
.*                                                                      00028100
.*******************************************************************    00028200
.***AB.02  GLOBAL VARIABLES TO CONTROL PRINT AND CODE GENERATION        00028300
.*******************************************************************    00028400
              GBLC  &ZPRINT     YES=PRINT NO=NO PRINT                   00028500
              GBLC  &ZTEST      YES=TEST NO=NO TEST                     00028600
              GBLC  &ZSYSTEM    PCCODE10, MVS, SAK, VM, XAX             00028700
.*                                                                      00028800
              GBLC  &ZCOFREMOV  YES=MACRO USED AT LEAST ONCE            00028900
.*******************************************************************    00029000
.***AB.03  COMMONLY USED LOCAL MACRO VARIABLES                          00029100
.*******************************************************************    00029200
              LCLC  &ZMS        ERROR MESSAGE WORK AREA                 00029300
              LCLC  &ZCNDX      LAST THREE SYSNDX CHARACTERS            00029400
              LCLC  &ZCLNG      USED WHEN LENGTH IS NEEDED              00029500
              LCLC  &ZCGPR      USED WHEN VALUE IS IN A GPR             00029600
              LCLC  &ZCVAL      USED TO CONTAIN FIXED VALUE             00029700
              LCLA  &ZAWRK      USED AS A WORK AREA                     00029800
              LCLA  &ZASIZ      USED FOR SIZE OF VALUE                  00029900
              LCLA  &ZN         NUMERIC WORK VARIABLE                   00030000
              LCLC  &ZC         CHARACTER WORK VARIABLE                 00030100
              LCLC  &ZTLC       CHARACTER TOO LONG VARIABLE             00030200
              LCLA  &ZTLA       VALUE TOO LONG VARIABLE                 00030300
              LCLA  &ZMACRET    MACRO RETURN CODE                       00030400
&ZMACRET      SETA  0           ASSUME NO ERRORS                        00030500
.*                                                                      00030600
              LCLC  &ZCSYSLIST(255)             NONXKEY, POS ARRAY      00030700
              LCLA  &ZASYSLNDX  WORK INDEX FOR ZCSYSLIST()              00030800
              LCLA  &ZPLLEN     PARAMETER LIST LENGTH                   00030900
              LCLC  &ZENDBASEPL                 End of base PL          00031000
              LCLA  &ZPLWORKA   PARAMETER LIST LENGTH                   00031100
.*******************************************************************    00031200
.***AB.04  MACRO VARIABLES FOR RANGES AND SETS OF ARGUMENTS             00031300
.*******************************************************************    00031400
              LCLA  &ZI         INDEX FOR ARRAY                         00031500
              LCLA  &ZJ         INDEX FOR PARMS                         00031600
              LCLA  &ZK         INDEX FOR PARSE                         00031700
              LCLA  &ZLO        LOW RANGE VALUE                         00031800
              LCLA  &ZHI        HIGH RANGE VALUE                        00031900
              LCLC  &ZW         WORK AREA FOR PARM                      00032000
.********************************************************************   00032100
.***AB.05  INVOKE MVS MACROS TO CONTROL CODE GENERATION                 00032200
.********************************************************************   00032300
              GBLC  &SYSSPLV    SP LEVEL 1,2,3 -SPLEVEL                 00032400
              GBLC  &SYSASCE    SYSTEM STATE P ANY AR-SYSSTATE          00032500
.*                                                                      00032600
              AIF   (K'&SYSASCE GT 0).ZSYS4     SYS STATE DEFINED       00032700
              AIF   (K'&SYSSPLV GT 0).ZSYS2     SP LEVEL DEFINED        00032800
              SPLEVEL  TEST                                             00032900
.ZSYS2        ANOP  ,                                                   00033000
              AIF   ('&SYSSPLV' EQ '1').ZSYS3   PRE SP 3.1              00033100
              AIF   ('&SYSSPLV' EQ '2').ZSYS3   PRE SP 3.1              00033200
              SYSSTATE TEST                                             00033300
              AGO   .ZSYS4                                              00033400
.ZSYS3        ANOP  ,                                                   00033500
&SYSASCE      SETC  'P'         ASSUME SYSSTATE PRIMARY                 00033600
.ZSYS4        ANOP  ,                                                   00033700
.*******************************************************************    00033800
.***AB.07  DEFINE ALL MACRO VARIABLES                                   00033900
.*******************************************************************    00034000
              LCLA  &XPLISTVER  ++ VALUE                                00034100
              LCLC  &XUTOKEN    ++ NAME                                 00034200
              LCLC  &XRETCODE   ++ NAME                                 00034300
              LCLC  &XRSNCODE   ++ NAME                                 00034400
              LCLC  &XMF        ++ VALUE                                00034500
              LCLC  &XMFCTRL    ++ NAME                                 00034600
              LCLC  &XMFATTR    ++ VALUE                                00034700
              LCLC  &XMFSCK     ++ VALUE                                00034800
.*******************************************************************    00034900
.***AB.13  DEFINE MACRO VARIABLES FOR INPUT/OUTPUT PROCESSING           00035000
.*******************************************************************    00035100
              LCLC  &ZXPLISTVER                 ++ INPUT VALUE          00035200
              LCLC  &ZXUTOKEN   ++ INPUT NAME                           00035300
              LCLC  &ZXRETCODE  ++ OUTPUT NAME                          00035400
              LCLC  &ZXRSNCODE  ++ OUTPUT NAME                          00035500
              LCLC  &ZXMF       ++ INPUT VALUE                          00035600
              LCLC  &ZXMFCTRL   ++ INPUT NAME                           00035700
              LCLC  &ZXMFATTR   ++ INPUT VALUE                          00035800
              LCLC  &ZXMFSCK    ++ INPUT VALUE                          00035900
.********************************************************************   00036000
.***AC.PLV01  PROCESS PLISTVER                                      *   00036100
.********************************************************************   00036200
&XPLISTVER      SETA  1                                                 00036300
                AIF   (K'&PLISTVER(1) LE 0).ZPLV0                       00036400
                AIF   ('&PLISTVER(1)' NE 'MAX').ZPLV0                   00036500
&XPLISTVER      SETA  1                                                 00036600
.ZPLV0          ANOP  ,                                                 00036700
.*                                                                      00036800
                AIF   (K'&PLISTVER(1) LE 0).ZPVCKE                      00036900
                AIF   ('&PLISTVER(1)' EQ 'IMPLIED_VERSION').ZPVCKE      00037000
                AIF   ('&PLISTVER(1)' EQ 'MAX').ZPVCKE                  00037100
.*-------------------------------------------------------------------   00037200
                AIF   (N'&PLISTVER LE 1).ZPVCK3  CK NUM                 00037300
&ZMS            SETC  '"PLISTVER='         *KPOSA* MNOTE                00037400
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00037500
&ZMS            SETC  '&ZMS "PLISTVER"'                                 00037600
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00037700
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00037800
                AGO   .ZPVCK2                                           00037900
.ZPVCK3         ANOP  ,                                                 00038000
.*-------------------------------------------------------------------   00038100
                AIF   ('&PLISTVER'(1,1) NE '(').ZPVCK2                  00038200
&ZMS            SETC  '"PLISTVER='         *KGPRA* MNOTE                00038300
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00038400
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         00038500
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'                 00038600
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00038700
                AGO   .ZPVCKE                                           00038800
.ZPVCK2         ANOP  ,                                                 00038900
.*-------------------------------------------------------------------   00039000
&ZN             SETA   &PLISTVER(1)        CONVERT TO ARITHMETIC        00039100
                AIF   (&ZN GE &XPLISTVER).ZPVCK4                        00039200
&ZMS            SETC  'PLISTVER='          *KVALA* MNOTE                00039300
&ZMS            SETC  '&ZMS.&PLISTVER(1)'                               00039400
&ZMS            SETC  '&ZMS., BUT PLISTVER OF'                          00039500
&ZMS            SETC  '&ZMS &XPLISTVER'                                 00039600
                MNOTE 8,' &ZMS IS REQUIRED.'                            00039700
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00039800
                AGO   .ZPVCK5                                           00039900
.ZPVCK4         ANOP  ,                                                 00040000
&XPLISTVER      SETA  &PLISTVER(1)                                      00040100
.ZPVCK5         ANOP  ,                                                 00040200
.*-------------------------------------------------------------------   00040300
&ZCVAL          SETC  '&PLISTVER(1)'                                    00040400
                AIF   ('&ZCVAL'(1,1) EQ '(').ZPVCKE  IN GPR             00040500
                AIF   (T'&ZCVAL NE 'N').ZPVCK6  NUMERIC ERR             00040600
                AIF   (&XPLISTVER LT 1).ZPVCK6  TOO LOW                 00040700
                AIF   (&XPLISTVER LE 1).ZPVCKE  NOT HIGH                00040800
.ZPVCK6         ANOP   ,                                                00040900
&ZMS            SETC  '"PLISTVER='         *KRNGA* MNOTE                00041000
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00041100
&ZMS            SETC  '&ZMS THE RANGE IS "1-1"'                         00041200
                MNOTE 8,' &ZMS FOR ARGUMENT 1.'                         00041300
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00041400
.ZPVCKE         ANOP   ,                                                00041500
.********************************************************************   00041600
.***AG.MF01 PROCESS MF MACRO FORMS                                      00041700
.********************************************************************   00041800
              ACTR  10000                                               00041900
.*------------------------------------------------------------------    00042000
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00042100
&XMF          SETC  ''          INITIALIZE XVARIABLE                    00042200
.*-------------------------------------------------------------------   00042300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00042400
.ZG15         ANOP  ,                                                   00042500
&ZTLC         SETC 'S'                                                  00042600
              AIF   ('&MF(1)' NE '&ZTLC').ZG16                          00042700
&XMF          SETC  'S'         SET KEYWORD                             00042800
              AIF   (N'&MF LE 1).ZG15A          CK NUM                  00042900
&ZMS          SETC  '"MF='      *KPOSA* MNOTE                           00043000
&ZMS          SETC  '&ZMS.&MF"'                                         00043100
&ZMS          SETC  '&ZMS "MF"'                                         00043200
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00043300
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00043400
.ZG15A        ANOP  ,                                                   00043500
.*-------------------------------------------------------------------   00043600
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00043700
.ZG16         ANOP  ,                                                   00043800
&ZTLC         SETC 'L'                                                  00043900
              AIF   ('&MF(1)' NE '&ZTLC').ZG23                          00044000
&XMF          SETC  'L'         SET KEYWORD                             00044100
              AIF   (N'&MF LE 3).ZG16A          CK NUM                  00044200
&ZMS          SETC  '"MF='      *KPOSA* MNOTE                           00044300
&ZMS          SETC  '&ZMS.&MF"'                                         00044400
&ZMS          SETC  '&ZMS "MF"'                                         00044500
              MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'                00044600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00044700
.ZG16A        ANOP  ,                                                   00044800
.*-------------------------------------------------------------------   00044900
.***AG.KKCTL08 -MF(L) SPECIAL CHECK                                     00045000
              AIF   (N'&SYSLIST NE 0).ZG16B     POSITIONALS?            00045100
              AIF   ('&UTOKEN' NE '').ZG16B     KEYS?                   00045200
              AIF   ('&RETCODE' NE '').ZG16B    KEYS?                   00045300
              AIF   ('&RSNCODE' NE '').ZG16B    KEYS?                   00045400
              AGO    .ZG16C     INVOCATION OKAY                         00045500
.ZG16B        ANOP  ,                                                   00045600
&ZMS          SETC  'THE "L" FORM OF "MF"'      *MFLA* MNOTE            00045700
&ZMS          SETC  '&ZMS CAN ONLY HAVE'                                00045800
&ZMS          SETC  '&ZMS THE "PLISTVER" KEY'                           00045900
              MNOTE 8,' &ZMS SPECIFIED ON THE INVOCATION.'              00046000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00046100
.ZG16C        ANOP  ,                                                   00046200
.*-------------------------------------------------------------------   00046300
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00046400
&ZXMFCTRL     SETC  'INPUT'     SET IN/OUTPUT                           00046500
&XMFCTRL      SETC  '&MF(2,1)'  SET XVARIABLE                           00046600
              AIF   (N'&MF(2) GT 1).ZG18B       MULTI PARMS             00046700
&XMFCTRL      SETC  '&MF(2)'    SET XVARIABLE                           00046800
.ZG18B        AIF   (K'&MF(2) GT 0).ZG18C                               00046900
&ZXMFCTRL     SETC  ''          RESET IN/OUTPUT                         00047000
&ZMS          SETC  'WHEN "L" IS SPECIFIED'     *KRQDA*                 00047100
&ZMS          SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'                 00047200
              MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                        00047300
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00047400
.ZG18C        ANOP  ,                                                   00047500
.*-------------------------------------------------------------------   00047600
.***AG.KCK01 NAME, OPT RQD INPUT, POS(2) -GPR NOT ALLOWED               00047700
              AIF   (K'&ZXMFCTRL LE 0).ZG18P    NOT I/O                 00047800
              AIF   ('&XMFCTRL'(1,1) NE '(').ZG18P                      00047900
&ZXMFCTRL     SETC  ''          RESET IN/OUTPUT                         00048000
&ZMS          SETC  '"MF='      *KGPRA* MNOTE                           00048100
&ZMS          SETC  '&ZMS.&MF"'                                         00048200
&ZMS          SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'           00048300
              MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 2.'                   00048400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00048500
.ZG18P        ANOP  ,                                                   00048600
.*-------------------------------------------------------------------   00048700
.***AG.KXVAR13 VALUE, OPT INPUT, POS(3) -XVARIABLE                      00048800
&ZXMFATTR     SETC  'INPUT'     SET IN/OUTPUT                           00048900
&XMFATTR      SETC  '0D'                                                00049000
              AIF   (K'&MF(3) LE 0).ZG21B       PARM                    00049100
&XMFATTR      SETC  '&MF(3,1)'  SET XVARIABLE                           00049200
              AIF   (N'&MF(3) GT 1).ZG21B       MULTI PARMS             00049300
&XMFATTR      SETC  '&MF(3)'    SET XVARIABLE                           00049400
.ZG21B        ANOP  ,                                                   00049500
.*-------------------------------------------------------------------   00049600
.***AG.KCK01 VALUE, OPT INPUT, POS(3) -GPR NOT ALLOWED                  00049700
              AIF   (K'&ZXMFATTR LE 0).ZG21P    NOT I/O                 00049800
              AIF   ('&XMFATTR'(1,1) NE '(').ZG21P                      00049900
&ZXMFATTR     SETC  ''          RESET IN/OUTPUT                         00050000
&ZMS          SETC  '"MF='      *KGPRA* MNOTE                           00050100
&ZMS          SETC  '&ZMS.&MF"'                                         00050200
&ZMS          SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'           00050300
              MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 3.'                   00050400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00050500
.ZG21P        ANOP  ,                                                   00050600
.*-------------------------------------------------------------------   00050700
.***AG.KCK03 VALUE, OPT INPUT, POS(3) -CHARACTER LENGTH                 00050800
              AIF   (K'&ZXMFATTR LE 0).ZG21S    NOT I/O                 00050900
              AIF   (K'&XMFATTR LE 60).ZG21S    LNG OK                  00051000
&ZXMFATTR     SETC  ''          RESET IN/OUTPUT                         00051100
&ZMS          SETC  '"MF='      *KLNGA* MNOTE                           00051200
&ZMS          SETC  '&ZMS.&MF"'                                         00051300
&ZMS          SETC  '&ZMS ARGUMENT 3 EXCEEDS THE MAXIMUM'               00051400
              MNOTE 8,' &ZMS LENGTH OF 60 CHARACTERS.'                  00051500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00051600
.ZG21S        ANOP  ,                                                   00051700
.*-------------------------------------------------------------------   00051800
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00051900
.ZG23         ANOP  ,                                                   00052000
&ZTLC         SETC 'E'                                                  00052100
              AIF   ('&MF(1)' NE '&ZTLC').ZG31                          00052200
&XMF          SETC  'E'         SET KEYWORD                             00052300
              AIF   (N'&MF LE 3).ZG23A          CK NUM                  00052400
&ZMS          SETC  '"MF='      *KPOSA* MNOTE                           00052500
&ZMS          SETC  '&ZMS.&MF"'                                         00052600
&ZMS          SETC  '&ZMS "MF"'                                         00052700
              MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'                00052800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00052900
.ZG23A        ANOP  ,                                                   00053000
.*-------------------------------------------------------------------   00053100
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00053200
&ZXMFCTRL     SETC  'INPUT'     SET IN/OUTPUT                           00053300
&XMFCTRL      SETC  '&MF(2,1)'  SET XVARIABLE                           00053400
              AIF   (N'&MF(2) GT 1).ZG25B       MULTI PARMS             00053500
&XMFCTRL      SETC  '&MF(2)'    SET XVARIABLE                           00053600
.ZG25B        AIF   (K'&MF(2) GT 0).ZG25C                               00053700
&ZXMFCTRL     SETC  ''          RESET IN/OUTPUT                         00053800
&ZMS          SETC  'WHEN "E" IS SPECIFIED'     *KRQDA*                 00053900
&ZMS          SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'                 00054000
              MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                        00054100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00054200
.ZG25C        ANOP  ,                                                   00054300
.*-------------------------------------------------------------------   00054400
.***AG.KCK02 NAME, OPT RQD INPUT, POS(2) -GPR OUT OF RANGE              00054500
              AIF   (K'&ZXMFCTRL LE 0).ZG25R    NOT I/O                 00054600
              AIF   ('&XMFCTRL'(1,1) NE '(').ZG25R                      00054700
&ZCGPR        SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)                          00054800
              AIF   ('&ZCGPR'(1,1) NE '0').ZG25P                        00054900
              AIF   (K'&ZCGPR GT 2).ZG25Q                               00055000
              AIF   ('&ZCGPR' EQ '0').ZG25Q                             00055100
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00055200
              AIF   (T'&ZCGPR NE 'N').ZG25Q     INVALID REG NAME        00055300
.ZG25P        ANOP  ,                                                   00055400
              AIF   (T'&ZCGPR NE 'N').ZG25R     NON NUMERIC             00055500
              AIF   ('&ZCGPR' LT '1').ZG25Q                             00055600
              AIF   ('&ZCGPR' LE '12').ZG25R                            00055700
.ZG25Q        ANOP  ,                                                   00055800
&ZMS          SETC  '"MF='      *KGPRA* MNOTE                           00055900
&ZMS          SETC  '&ZMS.&MF"'                                         00056000
&ZMS          SETC  '&ZMS ARGUMENT 2 MUST SPECIFY A REGISTER'           00056100
              MNOTE 8,' &ZMS IN THE RANGE (1)-(12).'                    00056200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00056300
.ZG25R        ANOP  ,                                                   00056400
.*-------------------------------------------------------------------   00056500
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00056600
&XMFSCK       SETC  ''          INITIALIZE XVARIABLE                    00056700
.ZG29A   AIF   ('&MF(3)' NE 'COMPLETE').ZG30A                           00056800
&XMFSCK       SETC  'COMPLETE'  SET KEYWORD                             00056900
.*-------------------------------------------------------------------   00057000
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00057100
.ZG30A        AIF   (K'&XMFSCK GT 0).ZG30C      KEYWORD                 00057200
              AIF   (K'&MF(3) LE 0).ZG30B                               00057300
&ZMS          SETC  '"MF='      *KUKWA* MNOTE                           00057400
&ZMS          SETC  '&ZMS.&MF"'                                         00057500
&ZMS          SETC  '&ZMS ARGUMENT 3 IS AN UNKNOWN KEYWORD. '           00057600
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                 00057700
&ZMS          SETC  '&ZMS "COMPLETE".'          VALID KEYWORD           00057800
              MNOTE 8,' &ZMS '                                          00057900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00058000
.ZG30B        ANOP  ,                                                   00058100
&XMFSCK       SETC  'COMPLETE'  SET DEFAULT KEYWORD                     00058200
.ZG30C        ANOP  ,                                                   00058300
&ZXMFSCK      SETC  'INPUT'     SET IN/OUTPUT                           00058400
.*------------------------------------------------------------------    00058500
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00058600
.ZG31         ANOP  ,                                                   00058700
&ZXMF         SETC  'INPUT'     SET IN/OUTPUT                           00058800
              AIF   (K'&XMF GT 0).ZG31E         VALID ARG               00058900
              AIF   (T'&MF EQ 'O').ZG31D        OMITTED                 00059000
&ZASYSLNDX    SETA  0                                                   00059100
.ZG31A        ANOP  ,           POSITIONAL MACRO KEY                    00059200
&ZASYSLNDX    SETA  &ZASYSLNDX+1                                        00059300
              AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG31C                    00059400
&ZTLC         SETC 'MF'                                                 00059500
              AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG31A           00059600
.ZG31B        ANOP  ,                                                   00059700
&ZXMF         SETC  ''          RESET IN/OUTPUT                         00059800
&ZMS          SETC  'THE "MF" KEY'              *KOPTA* MNOTE           00059900
&ZMS          SETC  '&ZMS MUST CONTAIN ONE'                             00060000
              MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                    00060100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00060200
              AGO   .ZG31E                                              00060300
.ZG31C        ANOP  ,                                                   00060400
&ZXMF         SETC  ''          RESET IN/OUTPUT                         00060500
&ZMS          SETC  '"MF='      *KUKWA* MNOTE                           00060600
&ZMS          SETC  '&ZMS.&MF"'                                         00060700
&ZMS          SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '           00060800
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                 00060900
&ZMS          SETC  '&ZMS "S",'                 VALID KEYWORD           00061000
&ZMS          SETC  '&ZMS "L",'                 VALID KEYWORD           00061100
&ZMS          SETC  '&ZMS OR "E".'              VALID KEYWORD           00061200
              MNOTE 8,' &ZMS '                                          00061300
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00061400
              AGO   .ZG31E                                              00061500
.ZG31D        ANOP  ,                                                   00061600
&XMF          SETC  'S'         SET DEFAULT KEYWORD                     00061700
&XMFSCK       SETC  'COMPLETE'  COMPLETE CHECKING                       00061800
.ZG31E        ANOP  ,                                                   00061900
.********************************************************************   00062000
.***AG.MF02  FULL MACRO SYNTAX CHECKING                                 00062100
.********************************************************************   00062200
              ACTR  10000                                               00062300
.*-------------------------------------------------------------------   00062400
.***AG.MF03 MF=(SLE)                                                    00062500
              AIF   ('&XMF' EQ 'L').ZGMFX                               00062600
.*----------------------------------------------------------------***   00062700
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00062800
              AIF   (N'&UTOKEN LE 1).ZG5A       CK NUM                  00062900
&ZMS          SETC  '"UTOKEN='  *KPOSA* MNOTE                           00063000
&ZMS          SETC  '&ZMS.&UTOKEN"'                                     00063100
&ZMS          SETC  '&ZMS "UTOKEN"'                                     00063200
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00063300
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00063400
.ZG5A         ANOP  ,                                                   00063500
.*-------------------------------------------------------------------   00063600
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00063700
&ZXUTOKEN     SETC  'INPUT'     SET IN/OUTPUT                           00063800
&XUTOKEN      SETC  '&UTOKEN(1)'                SET XVARIABLE           00063900
              AIF   (N'&UTOKEN GT 1).ZG5B       MULTI PARMS             00064000
&XUTOKEN      SETC  '&UTOKEN'   SET XVARIABLE                           00064100
.ZG5B         AIF   (K'&UTOKEN(1) GT 0).ZG5C                            00064200
&ZXUTOKEN     SETC  ''          RESET IN/OUTPUT                         00064300
&ZMS          SETC  ' '         *KRQDA*                                 00064400
&ZMS          SETC  '&ZMS "UTOKEN" KEY AND ITS ARGUMENT'                00064500
              MNOTE 8,' &ZMS ARE REQUIRED.'                             00064600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00064700
.ZG5C         ANOP  ,                                                   00064800
.*-------------------------------------------------------------------   00064900
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00065000
              AIF   (K'&ZXUTOKEN LE 0).ZG5R     NOT I/O                 00065100
              AIF   ('&XUTOKEN'(1,1) NE '(').ZG5R                       00065200
&ZCGPR        SETC  '&XUTOKEN'(2,K'&XUTOKEN-2)                          00065300
              AIF   ('&ZCGPR'(1,1) NE '0').ZG5P                         00065400
              AIF   (K'&ZCGPR GT 2).ZG5Q                                00065500
              AIF   ('&ZCGPR' EQ '0').ZG5Q                              00065600
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00065700
              AIF   (T'&ZCGPR NE 'N').ZG5Q      INVALID REG NAME        00065800
.ZG5P         ANOP  ,                                                   00065900
              AIF   (T'&ZCGPR NE 'N').ZG5R      NON NUMERIC             00066000
              AIF   ('&ZCGPR' LT '2').ZG5Q                              00066100
              AIF   ('&ZCGPR' LE '12').ZG5R                             00066200
.ZG5Q         ANOP  ,                                                   00066300
&ZMS          SETC  '"UTOKEN='  *KGPRA* MNOTE                           00066400
&ZMS          SETC  '&ZMS.&UTOKEN"'                                     00066500
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00066600
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00066700
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00066800
.ZG5R         ANOP  ,                                                   00066900
.*----------------------------------------------------------------***   00067000
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00067100
              AIF   (N'&RETCODE LE 1).ZG8A      CK NUM                  00067200
&ZMS          SETC  '"RETCODE='                 *KPOSA* MNOTE           00067300
&ZMS          SETC  '&ZMS.&RETCODE"'                                    00067400
&ZMS          SETC  '&ZMS "RETCODE"'                                    00067500
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00067600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00067700
.ZG8A         ANOP  ,                                                   00067800
.*-------------------------------------------------------------------   00067900
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00068000
              AIF   (K'&RETCODE(1) LE 0).ZG8C   NO PARM                 00068100
&ZXRETCODE    SETC  'OUTPUT'    SET OUTPUT                              00068200
&XRETCODE     SETC  '&RETCODE(1)'               SET XVARIABLE           00068300
              AIF   (N'&RETCODE GT 1).ZG8C                              00068400
&XRETCODE     SETC  '&RETCODE'  SET XVARIABLE                           00068500
.ZG8C         ANOP  ,                                                   00068600
.*-------------------------------------------------------------------   00068700
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00068800
              AIF   (K'&ZXRETCODE LE 0).ZG8R    NOT I/O                 00068900
              AIF   ('&XRETCODE'(1,1) NE '(').ZG8R                      00069000
&ZCGPR        SETC  '&XRETCODE'(2,K'&XRETCODE-2)                        00069100
              AIF   ('&ZCGPR'(1,1) NE '0').ZG8P                         00069200
              AIF   (K'&ZCGPR GT 2).ZG8Q                                00069300
              AIF   ('&ZCGPR' EQ '0').ZG8Q                              00069400
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00069500
              AIF   (T'&ZCGPR NE 'N').ZG8Q      INVALID REG NAME        00069600
.ZG8P         ANOP  ,                                                   00069700
              AIF   (T'&ZCGPR NE 'N').ZG8R      NON NUMERIC             00069800
              AIF   ('&ZCGPR' LT '2').ZG8Q                              00069900
              AIF   ('&ZCGPR' LE '12').ZG8R                             00070000
.ZG8Q         ANOP  ,                                                   00070100
&ZMS          SETC  '"RETCODE='                 *KGPRA* MNOTE           00070200
&ZMS          SETC  '&ZMS.&RETCODE"'                                    00070300
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00070400
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00070500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00070600
.ZG8R         ANOP  ,                                                   00070700
.*----------------------------------------------------------------***   00070800
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00070900
              AIF   (N'&RSNCODE LE 1).ZG11A     CK NUM                  00071000
&ZMS          SETC  '"RSNCODE='                 *KPOSA* MNOTE           00071100
&ZMS          SETC  '&ZMS.&RSNCODE"'                                    00071200
&ZMS          SETC  '&ZMS "RSNCODE"'                                    00071300
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00071400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00071500
.ZG11A        ANOP  ,                                                   00071600
.*-------------------------------------------------------------------   00071700
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00071800
              AIF   (K'&RSNCODE(1) LE 0).ZG11C  NO PARM                 00071900
&ZXRSNCODE    SETC  'OUTPUT'    SET OUTPUT                              00072000
&XRSNCODE     SETC  '&RSNCODE(1)'               SET XVARIABLE           00072100
              AIF   (N'&RSNCODE GT 1).ZG11C                             00072200
&XRSNCODE     SETC  '&RSNCODE'  SET XVARIABLE                           00072300
.ZG11C        ANOP  ,                                                   00072400
.*-------------------------------------------------------------------   00072500
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00072600
              AIF   (K'&ZXRSNCODE LE 0).ZG11R   NOT I/O                 00072700
              AIF   ('&XRSNCODE'(1,1) NE '(').ZG11R                     00072800
&ZCGPR        SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                        00072900
              AIF   ('&ZCGPR'(1,1) NE '0').ZG11P                        00073000
              AIF   (K'&ZCGPR GT 2).ZG11Q                               00073100
              AIF   ('&ZCGPR' EQ '0').ZG11Q                             00073200
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00073300
              AIF   (T'&ZCGPR NE 'N').ZG11Q     INVALID REG NAME        00073400
.ZG11P        ANOP  ,                                                   00073500
              AIF   (T'&ZCGPR NE 'N').ZG11R     NON NUMERIC             00073600
              AIF   ('&ZCGPR' LT '2').ZG11Q                             00073700
              AIF   ('&ZCGPR' LE '12').ZG11R                            00073800
.ZG11Q        ANOP  ,                                                   00073900
&ZMS          SETC  '"RSNCODE='                 *KGPRA* MNOTE           00074000
&ZMS          SETC  '&ZMS.&RSNCODE"'                                    00074100
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00074200
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00074300
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00074400
.ZG11R        ANOP  ,                                                   00074500
.******************************************************************     00074600
.***AH.P00 CHECK STANDALONE POSITIONAL VARIABLES                        00074700
.******************************************************************     00074800
              ACTR  10000                                               00074900
.*----------------------------------------------------------------***   00075000
.***AH.P02 EXTRA POSITIONALS                                            00075100
              AIF   (N'&SYSLIST LE 0).ZGLISTX   NO EXTRAS               00075200
              AIF   (N'&SYSLIST NE 2).ZGLISTX1  NOT NULL                00075300
              AIF   ('&SYSLIST(1)' NE '').ZGLISTX1  NOT NULL            00075400
              AIF   ('&SYSLIST(2)' EQ '').ZGLISTX  NOT NULL             00075500
.ZGLISTX1     ANOP  ,                                                   00075600
&ZCVAL        SETC  ''          ERROR FIELD                             00075700
&ZAWRK        SETA  0           POSITIONAL NUMBER                       00075800
.ZGLIST2      ANOP  ,                                                   00075900
&ZAWRK        SETA  &ZAWRK+1    NEXT POSITIONAL                         00076000
              AIF   (&ZAWRK GT N'&SYSLIST).ZGLIST3  DONE                00076100
&ZCVAL        SETC '&ZCVAL,&SYSLIST(&ZAWRK)'    EXTRA                   00076200
              AGO   .ZGLIST2                                            00076300
.*                                                                      00076400
.ZGLIST3      ANOP  ,                                                   00076500
&ZCVAL        SETC '&ZCVAL'(2,K'&ZCVAL-1)       STRIP COMMA             00076600
&ZMS          SETC  'POSITIONAL ARGUMENT(S),'   *PPOSA* MNOTE           00076700
&ZMS          SETC  '&ZMS "&ZCVAL"'                                     00076800
&ZMS          SETC  '&ZMS CANNOT BE USED.'                              00076900
&ZMS          SETC  '&ZMS NO POSITIONAL ARGUMENTS'                      00077000
              MNOTE 8,' &ZMS ARE ALLOWED.'                              00077100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00077200
.ZGLISTX      ANOP  ,                                                   00077300
&ZASYSLNDX    SETA  0                                                   00077400
.*-------------------------------------------------------------------   00077500
.***AG.MF04 MF=(SLE)                                                    00077600
.ZGMFX        ANOP  ,           END OF FULL SYNTAX CHECK                00077700
.*******************************************************************    00077800
.***AE.ZMR01 NO CODE GENERATED IF ERRORS DETECTED                       00077900
.*******************************************************************    00078000
              AIF   (&ZMACRET NE 0).ZLX2        ERROR DETECTED          00078100
.*******************************************************************    00078200
.***AE.01  START OF COFREMOV MACRO CODE                                 00078300
.*******************************************************************    00078400
              LCLC  &M0M0001                 NAME                       00078500
&M0M0001      SETC  '&XLABEL'                SET NAME                   00078600
              AIF   (K'&XLABEL NE 0).XLAB2                              00078700
&M0M0001      SETC  'M00M&SYSNDX'            DEFAULT NAME               00078800
.*                                                                      00078900
.XLAB2        ANOP  ,                                                   00079000
&M0M0001 DS    0H                             COFREMOV-1                00079100
.*******************************************************************    00079200
.***AE.PR01 PRINT CONTROLS, DEFAULT IS YES                              00079300
.*******************************************************************    00079400
              PUSH  PRINT                                               00079500
              AIF   ('&ZPRINT' NE 'NO').ZPRINTX  TURN PRINT ON          00079600
              PRINT OFF         ++ PR01                                 00079700
              AGO   .ZPRNTXX                                            00079800
.ZPRINTX      PRINT ON                                                  00079900
.ZPRNTXX      ANOP  ,                                                   00080000
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00080100
.*-----------BAL macro code-------------                                00080200
         AIF    ('&XMF' EQ 'L').LFORM1                                  00080300
         LA     15,40               .Set VLF not active return code     00080400
         SLR    0,0                 .Clear VLF reason code              00080500
         AIF    ('&SYSASCE' EQ 'P').NOTAR1  Systate Primary             00080600
         SAR    14,0                .Clear the AR                       00080700
.NOTAR1  ANOP                                                           00080800
         L      14,16               .Get CVT addressability             00080900
         L      14,200(14)          .Get SCVT addressability            00081000
         ICM    14,15,156(14)       .Obtain VLFB address                00081100
         BZ     AMGE&SYSNDX         .Bypass if VLF is not active        00081200
         ICM    14,15,8(14)         .Obtain PC table address            00081300
         BZ     AMGE&SYSNDX         .Bypass if PC table addr is 0       00081400
         ICM    14,15,16(14)        .Obtain PC entry value              00081500
         BZ     AMGE&SYSNDX         .Bypass if PC entry value is zero   00081600
         LR     15,14               .Save value around parm list build  00081700
.LFORM1  ANOP                                                           00081800
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00081900
.********************************************************************   00082000
.***AL.L01 INTERNAL ARRAY TO PRODUCE FORMATTED CODE                     00082100
.********************************************************************   00082200
                      LCLA  &ZOPN          LIST INSTRUCTION INDEX       00082300
                      LCLA  &ZOPN1         INVOCATION INDEX             00082400
                      LCLC  &ZOPL(4095)    LABEL                        00082500
                      LCLC  &ZOPO(4095)    OPERATION                    00082600
                      LCLC  &ZOPV(4095)    VALUE                        00082700
                      LCLC  &ZOPD(4095)    DESCRIPTION                  00082800
.*                                                                      00082900
&ZOPN                 SETA  0              INITIAL INST INDEX VALUE     00083000
.******************************************************************     00083100
.***AL.L10 COFREMOV FMT=LIST MF=S|L PARAMETERS                          00083200
.******************************************************************     00083300
                      AIF   ('&XMF' EQ 'L').ZLMFSL2                     00083400
                      AIF   ('&XMF' NE 'S').ZLMFSLX                     00083500
&XMFCTRL              SETC  '#Z'.'&SYSNDX'(1,4).'A'                     00083600
&XMFATTR              SETC  '0D'                                        00083700
.*                                                                      00083800
&ZOPN                 SETA  &ZOPN+1                                     00083900
&ZOPL(&ZOPN)          SETC  ' '                                         00084000
&ZOPO(&ZOPN)          SETC  'B'                                         00084100
&ZOPV(&ZOPN)          SETC  '&XMFCTRL.S'                                00084200
&ZOPD(&ZOPN)          SETC  '++ COFREMOV ARG PARMS'                     00084300
.*                                                                      00084400
&ZOPN                 SETA  &ZOPN+1                                     00084500
&ZOPL(&ZOPN)          SETC  ' '                                         00084600
&ZOPO(&ZOPN)          SETC  'SPACE'                                     00084700
&ZOPV(&ZOPN)          SETC  '1'                                         00084800
&ZOPD(&ZOPN)          SETC  ' '                                         00084900
.*                                                                      00085000
.ZLMFSL2              ANOP  ,                                           00085100
.*-------------------------------------------------------------------   00085200
.***AM.L01  COFREMOV FMT=LIST PARAMETERS                                00085300
&ZOPN                 SETA &ZOPN+1                                      00085400
&ZOPL(&ZOPN)          SETC '&XMFCTRL'                                   00085500
&ZOPO(&ZOPN)          SETC 'DS'                                         00085600
&ZOPV(&ZOPN)          SETC '&XMFATTR'                                   00085700
&ZOPD(&ZOPN)          SETC '++ COFREMOV PARM LIST'                      00085800
.*-------------------------------------------------------------------   00085900
.***AM.L02 XVERSION XL1                                                 00086000
&ZOPN                 SETA &ZOPN+1                                      00086100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XVERSION'                         00086200
&ZOPO(&ZOPN)          SETC 'DS'                                         00086300
&ZOPV(&ZOPN)          SETC 'XL1'                                        00086400
&ZOPD(&ZOPN)          SETC '++ INPUT XVERSION'                          00086500
.*-------------------------------------------------------------------   00086600
.***AM.L09  XRSV01 CL3                                                  00086700
&ZOPN                 SETA &ZOPN+1                                      00086800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV01'                           00086900
&ZOPO(&ZOPN)          SETC 'DS'                                         00087000
&ZOPV(&ZOPN)          SETC 'CL3'                                        00087100
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV01'                        00087200
.*-------------------------------------------------------------------   00087300
.***AM.L09  XRSV04 CL4                                                  00087400
&ZOPN                 SETA &ZOPN+1                                      00087500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV04'                           00087600
&ZOPO(&ZOPN)          SETC 'DS'                                         00087700
&ZOPV(&ZOPN)          SETC 'CL4'                                        00087800
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV04'                        00087900
.*-------------------------------------------------------------------   00088000
.***AM.L09  XUTOKEN CL16                                                00088100
&ZOPN                 SETA &ZOPN+1                                      00088200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XUTOKEN'                          00088300
&ZOPO(&ZOPN)          SETC 'DS'                                         00088400
&ZOPV(&ZOPN)          SETC 'CL16'                                       00088500
&ZOPD(&ZOPN)          SETC '++ &ZXUTOKEN  XUTOKEN'                      00088600
.*-------------------------------------------------------------------   00088700
.***AM.L10 END OF COFREMOV LIST PARAMETERS                              00088800
&ZOPN                 SETA &ZOPN+1                                      00088900
&ZOPL(&ZOPN)          SETC '&XMFCTRL.L'                                 00089000
&ZOPO(&ZOPN)          SETC 'EQU'                                        00089100
&ZOPV(&ZOPN)          SETC '*-&XMFCTRL'                                 00089200
&ZOPD(&ZOPN)          SETC '++ LENGTH OF PLIST'                         00089300
.*                                                                      00089400
&ZOPN                 SETA &ZOPN+1                                      00089500
&ZOPL(&ZOPN)          SETC ' '                                          00089600
&ZOPO(&ZOPN)          SETC 'SPACE'                                      00089700
&ZOPV(&ZOPN)          SETC '1'                                          00089800
&ZOPD(&ZOPN)          SETC ' '                                          00089900
.*-------------------------------------------------------------------   00090000
.***AL.L12 COFREMOV FMT=LIST MF=S|L PARAMETERS                          00090100
                      AIF   ('&XMF' EQ 'L').ZMFLX  DONE IF MF=L         00090200
.*                                                                      00090300
&ZOPN                 SETA  &ZOPN+1                                     00090400
&ZOPL(&ZOPN)          SETC  '&XMFCTRL.S'                                00090500
&ZOPO(&ZOPN)          SETC  'DC'                                        00090600
&ZOPV(&ZOPN)          SETC  '0H''0'''                                   00090700
&ZOPD(&ZOPN)          SETC  '++ COFREMOV ARG PARMS'                     00090800
.*                                                                      00090900
.ZLMFSLX              ANOP  ,                                           00091000
.*-------------------------------------------------------------------   00091100
.***AL.L13 SET ZPLLEN TO ITS APPROPRIATE VALUE                          00091200
&ZPLLEN               SETA 24                                           00091300
.*                                                                      00091400
.******************************************************************     00091500
.***AI.L01 COFREMOV FMT=LIST FILL IN PARAMETER AREA                     00091600
.******************************************************************     00091700
                      ACTR  10000                                       00091800
&ZCVAL                SETC  'LA'           ASSUME XA MODE               00091900
                      AIF   ('&SYSASCE' EQ 'P').ZIMFXA  SYSSTATE PRI    00092000
&ZCVAL                SETC  'LAE'          XAX MODE                     00092100
.ZIMFXA               ANOP ,                                            00092200
.*                                                                      00092300
                      AIF   ('&XMFCTRL'(1,1) NE '(').ZIMFN2  NOT GPR    00092400
&ZCGPR                SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)  GET GPR         00092500
                      AIF   ('&ZCGPR' EQ 'GPR1').ZIMFNX                 00092600
                      AIF   ('&ZCGPR' EQ 'GPR01').ZIMFNX                00092700
                      AIF   ('&ZCGPR' EQ 'REG1').ZIMFNX                 00092800
                      AIF   ('&ZCGPR' EQ 'REG01').ZIMFNX                00092900
                      AIF   ('&ZCGPR' EQ 'R1').ZIMFNX                   00093000
                      AIF   ('&ZCGPR' EQ '1').ZIMFNX                    00093100
                      AIF   ('&ZCGPR' EQ '01').ZIMFNX                   00093200
&ZOPN                 SETA  &ZOPN+1                                     00093300
&ZOPL(&ZOPN)          SETC  ' '                                         00093400
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00093500
&ZOPV(&ZOPN)          SETC  '1,0(,&ZCGPR)'                              00093600
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00093700
                      AGO   .ZIMFNX                                     00093800
.*                                                                      00093900
.ZIMFN2               ANOP ,                                            00094000
&ZOPN                 SETA  &ZOPN+1                                     00094100
&ZOPL(&ZOPN)          SETC  ' '                                         00094200
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00094300
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL'                                00094400
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00094500
.ZIMFNX               ANOP ,                                            00094600
.********************************************************************   00094700
.***AI.L02 COFREMOV FMT=LIST INITIALIZE PARAMETER AREA                  00094800
.********************************************************************   00094900
.***AI.L03 MF=(SLE)                                                     00095000
                      AIF   ('&XMF' EQ 'L').ZIMFLX                      00095100
.*                                                                      00095200
&ZOPN                 SETA  &ZOPN+1                                     00095300
&ZOPL(&ZOPN)          SETC  ' '                                         00095400
&ZOPO(&ZOPN)          SETC  'XC'                                        00095500
&ZOPV(&ZOPN)          SETC  '0(&ZPLLEN,1),0(1)'                         00095600
&ZOPD(&ZOPN)          SETC  '++ INITIALIZE'                             00095700
.ZIMFLX               ANOP  ,                                           00095800
.*-------------------------------------------------------------------   00095900
.***AI.L04A XVERSION XL1                                                00096000
                      AIF   (&XPLISTVER EQ 0).ZIMFVW                    00096100
&ZOPN                 SETA  &ZOPN+1                                     00096200
&ZOPL(&ZOPN)          SETC  ' '                                         00096300
&ZOPO(&ZOPN)          SETC  'MVI'                                       00096400
&ZOPV(&ZOPN)          SETC  '0(1),&XPLISTVER'                           00096500
&ZOPD(&ZOPN)          SETC  '++ INPUT XVERSION XL1'                     00096600
.ZIMFVW               ANOP  ,                                           00096700
.*-------------------------------------------------------------------   00096800
.***AI.L25  XUTOKEN CL16                                                00096900
                      AIF   ('&ZXUTOKEN' EQ '').ZI4E  NOT USED          00097000
                      AIF   ('&ZXUTOKEN' EQ 'OUTPUT').ZI4E              00097100
&ZCGPR                SETC  '&XUTOKEN'                                  00097200
.*                                                                      00097300
                      AIF   ('&XUTOKEN'(1,1) NE '(').ZI4B               00097400
&ZCGPR   SETC  '0('.'&XUTOKEN'(2,K'&XUTOKEN-2).')'                      00097500
.ZI4B                 ANOP  ,                                           00097600
.*                                                                      00097700
&ZOPN                 SETA  &ZOPN+1                                     00097800
&ZOPL(&ZOPN)          SETC  ' '                                         00097900
&ZOPO(&ZOPN)          SETC  'MVC'                                       00098000
&ZOPV(&ZOPN)          SETC  '8(16,1),&ZCGPR'                            00098100
&ZOPD(&ZOPN)          SETC  '++ &ZXUTOKEN XUTOKEN CL16'                 00098200
.*                                                                      00098300
.ZI4E                 ANOP  ,                                           00098400
.*-------------------------------------------------------------------   00098500
&ZOPN1                SETA &ZOPN                                        00098600
.*******************************************************************    00098700
.***  PROCESS COFREMOV OUTPUT PARAMETERS                                00098800
.*******************************************************************    00098900
                      ACTR  10000                                       00099000
.*******************************************************************    00099100
.***AO.X01  LABEL TO BYPASS INVOCATION                                  00099200
.*******************************************************************    00099300
&ZOPN                 SETA  &ZOPN+1                                     00099400
&ZOPL(&ZOPN)          SETC  'AMGE&SYSNDX'                               00099500
&ZOPO(&ZOPN)          SETC  'DS'                                        00099600
&ZOPV(&ZOPN)          SETC  '0H'                                        00099700
&ZOPD(&ZOPN)          SETC  '++ BYPASS INVOCATION'                      00099800
.*******************************************************************    00099900
.***AO.X02  RETURN CODE PROCESSING                                      00100000
.*******************************************************************    00100100
                      AIF   (N'&RETCODE LE 0).ZMRETX                    00100200
                      AIF   ('&XRETCODE'(1,1) EQ '(').ZMRET2            00100300
                      AIF   ('&XRETCODE' EQ 'GPR15').ZMRETX             00100400
                      AIF   ('&XRETCODE' EQ 'REG15').ZMRETX             00100500
                      AIF   ('&XRETCODE' EQ 'R15').ZMRETX               00100600
                      AIF   ('&XRETCODE' EQ '15').ZMRETX                00100700
&ZOPN                 SETA  &ZOPN+1                                     00100800
&ZOPL(&ZOPN)          SETC  ' '                                         00100900
&ZOPO(&ZOPN)          SETC  'ST'                                        00101000
&ZOPV(&ZOPN)          SETC  '15,&XRETCODE'                              00101100
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00101200
                      AGO   .ZMRETX                                     00101300
.*                                                                      00101400
.ZMRET2               ANOP  ,                                           00101500
&ZCGPR                SETC  '&XRETCODE'(2,K'&XRETCODE-2)                00101600
                      AIF   ('&ZCGPR' EQ 'GPR15').ZMRETX                00101700
                      AIF   ('&ZCGPR' EQ 'REG15').ZMRETX                00101800
                      AIF   ('&ZCGPR' EQ 'R15').ZMRETX                  00101900
                      AIF   ('&ZCGPR' EQ '15').ZMRETX                   00102000
&ZOPN                 SETA  &ZOPN+1                                     00102100
&ZOPL(&ZOPN)          SETC  ' '                                         00102200
&ZOPO(&ZOPN)          SETC  'LR'                                        00102300
&ZOPV(&ZOPN)          SETC  '&ZCGPR,15'                                 00102400
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00102500
.ZMRETX               ANOP  ,                                           00102600
.*******************************************************************    00102700
.***AO.X03  REASON CODE PROCESSING                                      00102800
.*******************************************************************    00102900
                      AIF   (N'&RSNCODE LE 0).ZMRSNX                    00103000
                      AIF   ('&XRSNCODE'(1,1) EQ '(').ZMRSN2            00103100
                      AIF   ('&XRSNCODE' EQ 'GPR0').ZMRSNX              00103200
                      AIF   ('&XRSNCODE' EQ 'GPR00').ZMRSNX             00103300
                      AIF   ('&XRSNCODE' EQ 'REG0').ZMRSNX              00103400
                      AIF   ('&XRSNCODE' EQ 'REG00').ZMRSNX             00103500
                      AIF   ('&XRSNCODE' EQ 'R0').ZMRSNX                00103600
                      AIF   ('&XRSNCODE' EQ '0').ZMRSNX                 00103700
                      AIF   ('&XRSNCODE' EQ '00').ZMRSNX                00103800
&ZOPN                 SETA  &ZOPN+1                                     00103900
&ZOPL(&ZOPN)          SETC  ' '                                         00104000
&ZOPO(&ZOPN)          SETC  'ST'                                        00104100
&ZOPV(&ZOPN)          SETC  '0,&XRSNCODE'                               00104200
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00104300
                      AGO   .ZMRSNX                                     00104400
.*                                                                      00104500
.ZMRSN2               ANOP  ,                                           00104600
&ZCGPR                SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                00104700
                      AIF   ('&ZCGPR' EQ 'GPR0').ZMRSNX                 00104800
                      AIF   ('&ZCGPR' EQ 'GPR00').ZMRSNX                00104900
                      AIF   ('&ZCGPR' EQ 'REG0').ZMRSNX                 00105000
                      AIF   ('&ZCGPR' EQ 'REG00').ZMRSNX                00105100
                      AIF   ('&ZCGPR' EQ 'R0').ZMRSNX                   00105200
                      AIF   ('&ZCGPR' EQ '0').ZMRSNX                    00105300
                      AIF   ('&ZCGPR' EQ '00').ZMRSNX                   00105400
&ZOPN                 SETA  &ZOPN+1                                     00105500
&ZOPL(&ZOPN)          SETC  ' '                                         00105600
&ZOPO(&ZOPN)          SETC  'LR'                                        00105700
&ZOPV(&ZOPN)          SETC  '&ZCGPR,0'                                  00105800
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00105900
.ZMRSNX               ANOP  ,                                           00106000
.*******************************************************************    00106100
.***AO.X04  LABEL FOR MF=L PROCESSING                                   00106200
.*******************************************************************    00106300
.ZMFLX                ANOP  ,              MF=L PROCESSING              00106400
.*******************************************************************    00106500
.***AO.X05  FORMAT GENERATED INSTRUCTIONS                               00106600
.*******************************************************************    00106700
                      ACTR  10000                                       00106800
.*                                                                      00106900
                      LCLA  &ZLC           COLUMN POSITION              00107000
                      LCLA  &ZOPX          LIST TABLE INDEX             00107100
                      LCLC  &ZLL           LABEL                        00107200
                      LCLC  &ZLOP          OPERATION                    00107300
                      LCLC  &ZLV           VALUE                        00107400
                      LCLC  &ZLD           DESCRIPTION                  00107500
.*                                                                      00107600
&ZOPX                 SETA  1                                           00107700
.ZL2                  AIF   (&ZOPX GT &ZOPN1).ZLX  B IF DONE            00107800
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00107900
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00108000
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00108100
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00108200
                      AIF   (K'&ZLD LE 0).ZL5                           00108300
&ZLC                  SETA  35             COMMENT COLUMN               00108400
                      AIF   ('&ZLD'(1,1) NE '*').ZL3                    00108500
&ZLC                  SETA  33             COMMMENT COLUMN              00108600
.ZL3                  AIF   (K'&ZLV GE &ZLC-16-1).ZL4                   00108700
&ZLV                  SETC  '&ZLV'.' '                                  00108800
                      AGO   .ZL3                                        00108900
.*                                                                      00109000
.ZL4                  ANOP  ,                                           00109100
&ZLV                  SETC  '&ZLV'.' '                                  00109200
.ZL5                  ANOP  ,                                           00109300
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00109400
.*                                                                      00109500
&ZLL     &ZLOP &ZLV                                                     00109600
.*                                                                      00109700
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00109800
                      AGO   .ZL2           CONTINUE LOOPING             00109900
.*                                                                      00110000
.ZLX                  ANOP  ,                                           00110100
                      AIF   ('&XMF' EQ 'L').ZLINKX  MF=L                00110200
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00110300
         AIF    ('&XMF' EQ 'L').LFORM2                                  00110400
         PC     0(15)               .PC to COFMREMO                     00110500
.LFORM2  ANOP                                                           00110600
.*-----------BAL macro code-------------                                00110700
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00110800
.ZLINKX               ANOP  ,                                           00110900
.*******************************************************************    00111000
.***AP.X01  FORMAT GENERATED CODE                                       00111100
.ZL21                 AIF   (&ZOPX GT &ZOPN).ZLX1  B IF DONE            00111200
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00111300
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00111400
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00111500
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00111600
                      AIF   (K'&ZLD LE 0).ZL51                          00111700
&ZLC                  SETA  35             COMMENT COLUMN               00111800
                      AIF   ('&ZLD'(1,1) NE '*').ZL31                   00111900
&ZLC                  SETA  33             COMMENT COLUMN               00112000
.ZL31                 AIF   (K'&ZLV GE &ZLC-16-1).ZL41                  00112100
&ZLV                  SETC  '&ZLV'.' '                                  00112200
                      AGO   .ZL31                                       00112300
.*                                                                      00112400
.ZL41                 ANOP  ,                                           00112500
&ZLV                  SETC  '&ZLV'.' '                                  00112600
.ZL51                 ANOP  ,                                           00112700
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00112800
.*                                                                      00112900
&ZLL     &ZLOP &ZLV                                                     00113000
.*                                                                      00113100
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00113200
                      AGO   .ZL21          CONTINUE LOOPING             00113300
.*                                                                      00113400
.ZLX1                 ANOP  ,                                           00113500
.*******************************************************************    00113600
.***AP.X02  END OF COFREMOV MACRO                                       00113700
&ZCOFREMOV            SETC  'YES'          SET COFREMOV USED            00113800
         POP   PRINT                                                    00113900
*                                            COFREMOV-1                 00114000
         SPACE 1                                                        00114100
.ZLX2                 ANOP  ,                                           00114200
         MEND                                                           00114300
**********************************************************************/ 00114400
*/*PB.OC01 INVOKE MACRO---------------------------------------------*/  00114500
*%COFREMOV: MACRO KEYS(PLISTVER,UTOKEN,RETCODE,RSNCODE,MF);             00114600
*  ANS('?'||MACLABEL||' '||'COFREMOP '||MACLIST||                       00114700
*         ' '||MACKEYS||';') COL(MACLMAR);                              00114800
*%END COFREMOV;                                                         00114900
