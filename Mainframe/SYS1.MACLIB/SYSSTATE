*/****** START OF SPECIFICATIONS ************************************** 00050000
*                                                                     * 00150000
*01* MACRO-NAME = SYSSTATE                                            * 00200000
*                                                                     * 00250000
*01* DESCRIPTIVE-NAME = SYSTEM STATE MACRO                            * 00300000
*                                                                     * 00350000
*01* COPYRIGHT =                                                      * 00383300
*              5647-A01                                               * 00416600
*              THIS MODULE IS "RESTRICTED MATERIALS OF IBM"           * 00450000
*              (C) COPYRIGHT IBM CORP. 1988,2000                      * 00500000
*              LICENSED MATERIALS - PROPERTY OF IBM                   * 00550000
*                                                                     * 00700000
*01* STATUS = HBB7703                                                 * 00720000
*                                                                     * 00740000
*01* EXTERNAL CLASSIFICATION: PI                                      * 00760000
*01* END OF EXTERNAL CLASSIFICATION:                                  * 00780000
*                                                                     * 00800000
*01* FUNCTION = USED TO SET THE VALUE OF THE GLOBAL SET SYMBOL        * 00850000
*               "SYSASCE" TO A SPECIFIED VALUE OR A DEFAULT VALUE.    * 00900000
*               THE PURPOSE IS TO REQUEST CODE GENERATION FOR         * 00950000
*               THE SPECIFIED ASC ENVIRONMENT.                        * 01000000
*                                                                     * 01050000
*01* NOTES =    TO CHANGE THE DEFAULT VALUE, UPDATE THE STATEMENT     * 01100000
*                    "&DEFAULT SETC  'P'"                             * 01150000
*               WHICH IS SHORTLY AFTER THE MACRO PROTOTYPE STATEMENT. * 01200000
*                                                                     * 01250000
*02* PROCESSOR = ASSEMBLER/PL/X                                       * 01300000
*                                                                     * 01350000
*01* MACRO PARAMETERS =                                               * 01400000
*        FUNCTION - POSITIONAL, OPTIONAL                              * 01450000
*                   PUSH     - SAVE CURRENT SETTINGS                  * 01466600
*                   POP      - RESTORE PREVIOUSLY-SAVED SETTINGS      * 01483200
*                   TEST     - SET SYSASCE TO THE DEFAULT VALUE IF A  * 01500000
*                              VALUE HAS NOT ALREADY BEEN ASSIGNED    * 01550000
*                              TO SYSASCE.                            * 01600000
*                            - SET SYSAM64 TO THE DEFAULT VALUE IF A  * 01612500
*                              VALUE HAS NOT ALREADY BEEN ASSIGNED    * 01625000
*                              TO SYSAM64.                            * 01637500
*                   ASCENV   - SET SYSASCE TO THE DEFAULT VALUE. (IN  * 01650000
*                              PLX, THIS IS NOT A POSITIONAL          * 01700000
*                              PARAMETER. INSTEAD, ASCENV CAN BE      * 01750000
*                              CODED AS A KEYWORD PARAMETER WITH OR   * 01754500
*                              WITHOUT A VALUE.) THIS IS THE DEFAULT. * 01759000
*                   AMODE64  - SET SYSAM64 TO THE DEFAULT VALUE. (IN  * 01763500
*                              PLX, THIS IS NOT A POSITIONAL          * 01768000
*                              PARAMETER. INSTEAD, AMODE64 CAN BE     * 01772500
*                              CODED AS A KEYWORD PARAMETER WITH OR   * 01777000
*                              WITHOUT A VALUE.) THIS IS THE DEFAULT. * 01781500
*                   ARCHLVL  - SET SYSALVL TO THE DEFAULT VALUE. (IN  * 01786000
*                              PLX, THIS IS NOT A POSITIONAL          * 01790500
*                              PARAMETER. INSTEAD, ARCHLVL CAN BE     * 01795000
*                              CODED AS A KEYWORD PARAMETER WITH OR   * 01800000
*                              WITHOUT A VALUE.) THIS IS THE DEFAULT. * 01850000
*        ASCENV   - KEYWORD, OPTIONAL                                 * 01900000
*                   SPECIFIES THE EXPLICIT VALUE TO WHICH SYSASCE IS  * 01950000
*                   TO BE SET.                                        * 02000000
*                        'P' SUPPORT PRIMARY ASC MODE INVOKERS        * 02050000
*                       'AR' SUPPORT ACCESS REGISTER ASC MODE         * 02100000
*                            INVOKERS                                 * 02150000
*                      'ANY' SUPPORT EITHER PRIMARY OR AR ASC MODE    * 02200000
*                            INVOKERS                                 * 02250000
*        AMODE64  - KEYWORD, OPTIONAL                                 * 02260700
*                   SPECIFIES THE EXPLICIT VALUE TO WHICH SYSAM64 IS  * 02271400
*                   TO BE SET.                                        * 02282100
*                      'YES' SUPPORT AMODE 64 INVOKERS                * 02292800
*                            IMPLIES ARCHLVL=2                        * 02303500
*                       'NO' DO NOT SUPPORT AMODE 64 INVOKERS         * 02314200
*        ARCHLVL  - KEYWORD, OPTIONAL                                 * 02324900
*                   SPECIFIES THE EXPLICIT VALUE TO WHICH SYSALVL IS  * 02335600
*                   TO BE SET.                                        * 02346300
*                      0     ARCHITECTURE IS ESA                      * 02351600
*                      1     ARCHITECTURE IS ESA FOR OS/390 R10       * 02356900
*                            (INCLUDES RELATIVE/IMMEDIATE)            * 02362200
*                      2     ARCHITECTURE IS ESAME                    * 02367700
*        ASM      - KEYWORD, VALID ONLY IN PLX, OPTIONAL              * 02378400
*                   IN ADDITION TO SETTING THE PLX GLOBAL VARIABLE    * 02389100
*                   SYSASCE, SET THE ASSEMBLER GLOBAL SET SYMBOL      * 02400000
*                   SYSASCE. THE DEFAULT IS ASM(YES).                 * 02450000
*                   IN ADDITION TO SETTING THE PLX GLOBAL VARIABLE    * 02462500
*                   SYSAM64, SET THE ASSEMBLER GLOBAL SET SYMBOL      * 02475000
*                   SYSAM64. THE DEFAULT IS ASM(YES).                 * 02487500
*                                                                     * 02500000
*01* MACROS = IHBERMAC                                                * 02550000
*                                                                     * 02600000
*01* CHANGE-ACTIVITY =                                                * 02650000
*    $L0=     AR    HBB3310 850901 PDXB: AR SUPPORT                   * 02700000
*    $L1=64BITRTM HBB7703 981204 PD00XB: ESAME                        * 02725000
*                                                                     * 02750000
******** END OF SPECIFICATIONS **************************************** 02800000
         MACRO                                                          02850000
&LABEL   SYSSTATE &FCN,&FCN1,&FCN2,&FCN3,&ASCENV=,&AMODE64=,&ARCHLVL=   02900000
.*                                                                      02950000
         GBLC  &SYSASCE,&SYSAM64                                        02975000
         GBLA  &SYSALVL                                                 03000000
         GBLC  &SYSASCEA(255)                                           03005000
         GBLC  &SYSAM64A(255)                                           03010000
         GBLA  &SYSALVLA(255)                                           03015000
         GBLA  &SYSSTATEI                                               03020000
         LCLC  &DEFAULT,&DEFAULT64                                      03025000
         LCLA  &DEFAULTALVL                                             03050000
         LCLB  &SPECASCENV,&SPECAM64,&SPECALVL,&SPECTEST                03075000
.*                                                                      03100000
.*********************************************************************  03150000
.*                                                                   *  03200000
.*       DEFAULT VALUE FOR SYSASCE IN ASSEMBLER LANGUAGE:            *  03250000
.*                                                                   *  03300000
&DEFAULT SETC 'P'                      FOR THE VALUES WHICH &DEFAULT *  03350000
.*                                     CAN BE SET TO, SEE THE        *  03400000
.*                                     DESCRIPTION OF THE PARAMETER  *  03450000
.*                                     "ASCENV" IN THIS MACRO'S      *  03500000
.*                                     PROLOGUE.                     *  03550000
.*                                                                   *  03600000
.*********************************************************************  03650000
.*                                                                      03700000
.*********************************************************************  03703100
.*                                                                   *  03706200
.*       DEFAULT VALUE FOR SYSAM64 IN ASSEMBLER LANGUAGE:            *  03709300
.*                                                                   *  03712400
&DEFAULT64 SETC 'NO'                                                 *  03715500
.*                                                                   *  03718600
.*********************************************************************  03721700
.*                                                                   *  03724800
.*********************************************************************  03727900
.*                                                                   *  03731000
.*       DEFAULT VALUE FOR SYSALVL IN ASSEMBLER LANGUAGE:            *  03734100
.*                                                                   *  03737200
&DEFAULTALVL SETA 0                                                  *  03740300
.*                                                                   *  03743400
.*********************************************************************  03746500
.*                                                                      03750000
.* WE SET THE DEFAULTS ALSO WHEN ANYTHING IS SPECIFIED SO THAT          03752300
.* THE FINAL MESSAGE WILL BE "NORMAL"                                   03754600
         AIF   ('&SYSASCE' NE '').HAVEASCE SYSASCE NOT NULL, SKIP       03756900
&SYSASCE SETC  '&DEFAULT'                                               03759200
.HAVEASCE ANOP                                                          03761500
         AIF   ('&SYSAM64' NE '').HAVEAM64 SYSAM64 NOT NULL, SKIP       03763800
&SYSAM64 SETC  '&DEFAULT64'                                             03766100
.HAVEAM64 ANOP                                                          03768400
         AIF   (&SYSALVL NE 0).HAVEALVL SYSALVL NOT NULL, SKIP          03770700
&SYSALVL SETA  &DEFAULTALVL                                             03773000
.HAVEALVL ANOP                                                          03775300
.*                                                                      03777600
&SPECASCENV SETB ('&FCN' EQ 'ASCENV' OR '&FCN1' EQ 'ASCENV' OR         *03779900
               '&FCN2' EQ 'ASCENV' OR '&FCN3' EQ 'ASCENV')              03782200
&SPECAM64   SETB ('&FCN' EQ 'AMODE64' OR '&FCN1' EQ 'AMODE64' OR       *03784500
               '&FCN2' EQ 'AMODE64' OR '&FCN3' EQ 'AMODE64')            03786800
&SPECALVL   SETB ('&FCN' EQ 'ARCHLVL' OR '&FCN1' EQ 'ARCHLVL' OR       *03789100
               '&FCN2' EQ 'ARCHLVL' OR '&FCN3' EQ 'ARCHLVL')            03791400
&SPECTEST   SETB ('&FCN' EQ 'TEST' OR '&FCN1' EQ 'TEST' OR             *03793700
               '&FCN2' EQ 'TEST' OR '&FCN3' EQ 'TEST')                  03796000
         AIF   ('&LABEL' EQ '').NOLABEL                                 03800000
&LABEL   DS    0X                                                       03850000
.*                                                                      03900000
.NOLABEL ANOP                                                           03950000
         AIF   (N'&SYSLIST GT 3).ERR1  CHECK FOR TOO MANY POSITIONALS   03954700
         AIF   ('&FCN' EQ 'PUSH').DOPUSH                                03956200
         AIF   ('&FCN' EQ 'POP').DOPOP                                  03957700
         AIF   ('&FCN' NE '' AND '&FCN' NE 'TEST' AND '&FCN' NE        *03959400
               'ASCENV' AND '&FCN' NE 'AMODE64'                        *03964100
               AND '&FCN' NE 'ARCHLVL').ERR2                            03968800
         AIF   ('&FCN1' NE '' AND '&FCN1' NE 'TEST' AND '&FCN1' NE     *03973500
               'ASCENV' AND '&FCN1' NE 'AMODE64'                       *03978200
               AND '&FCN1' NE 'ARCHLVL').ERR2                           03982900
         AIF   ('&FCN2' NE '' AND '&FCN2' NE 'TEST' AND '&FCN2' NE     *03987600
               'ASCENV' AND '&FCN2' NE 'AMODE64'                       *03992300
               AND '&FCN2' NE 'ARCHLVL').ERR2                           03997000
         AIF   ('&FCN3' NE '' AND '&FCN3' NE 'TEST' AND '&FCN3' NE     *04001700
               'ASCENV' AND '&FCN3' NE 'AMODE64'                       *04006400
               AND '&FCN3' NE 'ARCHLVL').ERR2                           04011100
         AIF   (&SPECASCENV AND '&ASCENV' NE '').ERR4 TOO MANY PARMS    04015800
         AIF   (&SPECAM64 AND '&AMODE64' NE '').ERR6 TOO MANY PARMS     04020500
         AIF   (&SPECALVL AND '&ARCHLVL' NE '').ERR8 TOO MANY PARMS     04025200
         AIF   ('&FCN' EQ '' AND '&ASCENV' EQ '' AND                   *04029900
               '&AMODE64' EQ '' AND                                    *04034600
               '&ARCHLVL' EQ '').DOTEST                                 04039300
         AIF   (NOT &SPECTEST).ASCENV GO CHECK FOR 'ASCENV'             04044000
         AGO   .DOTEST                                                  04044200
.DOPUSH  ANOP                                                           04044400
         AIF   (N'&SYSLIST GT 1).ERR1A CHECK FOR TOO MANY POSITIONALS   04044600
         AIF   ('&ASCENV' NE '').ERR1A                                  04044800
         AIF   ('&AMODE64' NE '').ERR1A                                 04045000
         AIF   ('&ARCHLVL' NE '').ERR1A                                 04045200
         AIF   (&SYSSTATEI GT 255).ERRINDEXA                            04045400
         SYSSTATE TEST                                                  04045600
&SYSSTATEI SETA &SYSSTATEI+1                                            04045800
&SYSASCEA(&SYSSTATEI) SETC '&SYSASCE'                                   04046000
&SYSAM64A(&SYSSTATEI) SETC '&SYSAM64'                                   04046200
&SYSALVLA(&SYSSTATEI) SETA &SYSALVL                                     04046400
         MEXIT                         DONE                             04046600
.DOPOP   ANOP                                                           04046800
         AIF   (N'&SYSLIST GT 1).ERR1A CHECK FOR TOO MANY POSITIONALS   04047000
         AIF   ('&ASCENV' NE '').ERR1A                                  04047200
         AIF   ('&AMODE64' NE '').ERR1A                                 04047400
         AIF   ('&ARCHLVL' NE '').ERR1A                                 04047600
         AIF   (&SYSSTATEI LT 1).ERRINDEXB                              04047800
&SYSASCE SETC '&SYSASCEA(&SYSSTATEI)'                                   04048000
&SYSAM64 SETC '&SYSAM64A(&SYSSTATEI)'                                   04048200
&SYSALVL SETA &SYSALVLA(&SYSSTATEI)                                     04048400
&SYSSTATEI SETA &SYSSTATEI-1                                            04048600
         MEXIT                         DONE                             04048800
.*                                                                      04050000
.* PROCESS TEST FUNCTION                                                04100000
.*                                                                      04250000
.DOTEST  ANOP                                                           04300000
         MEXIT                         DONE                             04350000
.*                                                                      04400000
.* PROCESS ASCENV FUNCTION                                              04450000
.*                                                                      04600000
.ASCENV  ANOP                                                           04650000
         AIF   (NOT &SPECASCENV).TRYASCEK                               04700000
&SYSASCE SETC  '&DEFAULT'                                               05300000
         AGO   .DONEASCE                                                05316600
.TRYASCEK ANOP                                                          05333200
         AIF   ('&ASCENV' EQ '').DONEASCE                               05349800
         AIF   ('&ASCENV' EQ 'P').SETASCE ASSIGN VALID VALUE            05366400
         AIF   ('&ASCENV' EQ 'AR').SETASCE ASSIGN VALID VALUE           05383000
         AIF   ('&ASCENV' EQ 'ANY').SETASCE ASSIGN VALID VALUE          05399600
         AIF   ('&ASCENV' NE '').ERR3  INVALID VALUE FOR ASCENV         05416200
.SETASCE ANOP                                                           05432800
&SYSASCE SETC '&ASCENV'                                                 05450000
.DONEASCE ANOP                                                          05451500
.*                                                                      05453000
.* PROCESS AMODE64 FUNCTION                                             05454500
.*                                                                      05456000
         AIF   (NOT &SPECAM64).TRYAM64K                                 05457500
&SYSAM64 SETC  '&DEFAULT64'                                             05459000
         AGO   .DONEAM64                                                05460500
.TRYAM64K ANOP                                                          05462000
         AIF   ('&AMODE64' EQ '').DONEAM64                              05463500
         AIF   ('&AMODE64' EQ 'YES').SETAM64 ASSIGN VALID VALUE         05465000
         AIF   ('&AMODE64' EQ 'NO').SETAM64  ASSIGN VALID VALUE         05466500
         AIF   ('&AMODE64' NE '').ERR5   INVALID VALUE FOR AMODE64      05468000
.SETAM64 ANOP                                                           05469500
&SYSAM64 SETC '&AMODE64'                                                05471000
         AIF  ('&SYSAM64' NE 'YES' OR &SYSALVL GT 1).DONEAM64           05472500
&SYSALVL SETA 2                                                         05474000
.DONEAM64 ANOP                                                          05475500
.*                                                                      05477000
.* PROCESS ARCHLVL FUNCTION                                             05478500
.*                                                                      05480000
         AIF   (NOT &SPECALVL).TRYALVLK                                 05481500
&SYSALVL SETA  &DEFAULTALVL                                             05483000
         AGO   .DONEALVL                                                05484500
.TRYALVLK ANOP                                                          05486000
         AIF   ('&ARCHLVL' EQ '').DONEALVL                              05487500
         AIF   ('&ARCHLVL' EQ '0').SETALVL0 ASSIGN VALID VALUE          05487800
         AIF   ('&ARCHLVL' EQ 'ESA').SETALVL0 ASSIGN VALID VALUE        05488100
         AIF   ('&ARCHLVL' EQ '1').SETALVL1 ASSIGN VALID VALUE          05488400
         AIF   ('&ARCHLVL' EQ 'ESAR10').SETALVL1 ASSIGN VALID VALUE     05489300
         AIF   ('&ARCHLVL' EQ '2').SETALVL2  ASSIGN VALID VALUE         05490200
         AIF   ('&ARCHLVL' EQ 'ESAME').SETALVL2  ASSIGN VALID VALUE     05491100
         AIF   ('&ARCHLVL' NE '').ERR7   INVALID VALUE FOR ARCHLVL      05492000
.SETALVL0 ANOP                                                          05492100
&SYSALVL SETA 0                                                         05492200
         AGO   .EXIT                                                    05492300
.SETALVL1 ANOP                                                          05492600
&SYSALVL SETA 1                                                         05493200
         AGO   .EXIT                                                    05493800
.SETALVL2 ANOP                                                          05494400
&SYSALVL SETA 2                                                         05495000
         AGO   .EXIT                                                    05495600
.DONEALVL ANOP                                                          05496500
         AGO   .EXIT                                                    05498000
.EXIT    ANOP                                                           05500000
         AIF   ('&SYSAM64' EQ 'YES' AND &SYSALVL LT 2).ERR9             05516600
.EXIT1   ANOP                                                           05533200
         AIF   ('&FCN' EQ 'TEST').EXITNOP IF TEST, GENERATE NO OUTPUT   05550000
         MNOTE '*        THE VALUE OF SYSSTATE IS NOW SET TO ASCENV=&SY*05600000
               SASCE AMODE64=&SYSAM64 ARCHLVL=&SYSALVL'                 05650000
.EXITNOP ANOP                                                           05700000
         MEXIT                                                          05750000
.*                                                                      05800000
.ERR1    ANOP                                                           05850000
     MNOTE 12,'*        TOO MANY POSITIONAL PARAMETERS SPECIFIED.'      05900000
         MEXIT                                                          05950000
.ERR1A   ANOP                                                           05962500
     MNOTE 12,'*        NO PARAMETERS MAY BE SPECIFIED WITH PUSH/POP.'  05975000
         MEXIT                                                          05987500
.ERR2    ANOP                                                           06000000
         MNOTE 12,'*        POSITIONAL PARAMETER MUST BE ''ASCENV'', ''*06050000
               AMODE64'', ''ARCHLVL'', OR ''TEST''.'                    06100000
         MEXIT                                                          06150000
.ERR3    MNOTE 12,'*        THE ASCENV PARAMETER MUST BE ''P'', ''AR'' *06200000
               OR ''ANY''.'                                             06250000
         MEXIT                                                          06300000
.ERR4    MNOTE 12,'*        ASCENV POSITIONAL PARAMETER MAY NOT BE SPEC*06309300
               IFIED WITH ASCENV PARAMETER.'                            06318600
.ERR5    MNOTE 12,'*        THE AMODE64 PARAMETER MUST BE ''YES'' OR ''*06327900
               NO''.'                                                   06337200
         MEXIT                                                          06346500
.ERR6    MNOTE 12,'*        AMODE64 POSITIONAL PARAMETER MAY NOT BE SPE*06355800
               CIFIED WITH AMODE64 PARAMETER.'                          06365100
.ERR7    MNOTE 12,'*        THE ARCHLVL PARAMETER MUST BE ''0'', ''1'',*06374400
               OR ''2''.'                                               06383700
         MEXIT                                                          06393000
.ERR8    MNOTE 12,'*        ARCHLVL POSITIONAL PARAMETER MAY NOT BE SPE*06402300
               CIFIED WITH ARCHLVL PARAMETER.'                          06411600
         MEXIT                                                          06420900
.ERR9    MNOTE 12,'*        AMODE64=YES IS NOT VALID WITH ARCHLVL=1'    06430200
         MEXIT                                                          06439500
.ERRINDEXA MNOTE 12,'*        SYSSTATE PUSH STACK IS FULL (255 LEVELS).*06441000
                PUSH NOT DONE'                                          06442500
         MEXIT                                                          06444000
.ERRINDEXB MNOTE 12,'*        SYSSTATE PUSH STACK IS EMPTY. POP NOT DON*06445500
               E'                                                       06447000
         MEXIT                                                          06448500
         MEND  ,                                                     */ 06450000
*        %SYSSTATE: MACRO KEYS(ASCENV,AMODE64,ARCHLVL,PUSH,POP,         06466600
*                                             ASM,NOOPTACROSS); /*      06483200
*    /****************************************************************/ 06500000
*    /*                                                              */ 06550000
*    /*  START PL/S VERSION                                          */ 06600000
*    /*                                                              */ 06650000
*    /****************************************************************/ 06700000
*                                                                       06750000
*    DCL EHARC FIXED EXT;           /* DEFINE GLOBAL RETURN CODE     */ 06800000
*    DCL EHAMAPS CHAR EXT;          /* DEFINE EPILOG MAPS            */ 06825000
*    DCL SYSASCE CHAR EXT;          /* DEFINE GLOBAL ASC ENVIRONMENT */ 06850000
*    DCL SYSASCEA(255) CHAR EXT;    /* PUSH STACK                    */ 06858300
*    DCL SYSAM64 CHAR EXT;          /* DEFINE GLOBAL AMODE           */ 06866600
*    DCL SYSAM64A(255) CHAR EXT;    /* PUSH STACK                    */ 06874900
*    DCL SYSALVL FIXED EXT;         /* DEFINE GLOBAL ARCH            */ 06883200
*    DCL SYSALVLA(255) FIXED EXT;   /* PUSH STACK                    */ 06888800
*    DCL SYSSTATEI FIXED EXT;       /* DEPTH OF PUSH STACK           */ 06894400
*    DCL CMT CHAR INT;              /* TO PUT OUT COMMENTS           */ 06900000
*    DCL IENV CHAR INT;             /* LOCAL COPY OF KEY ASCENV      */ 06950000
*    DCL IAM64 CHAR INT;            /* LOCAL COPY OF KEY AMODE64     */ 06966600
*    DCL IALVL CHAR INT;            /* LOCAL COPY OF KEY ARCHLVL     */ 06983200
*    DCL IASM CHAR INT;             /* LOCAL COPY OF KEY ASM         */ 07000000
*    DCL DEFAULT CHAR INT;          /* DEFAULT VALUE FOR SYSASCE     */ 07050000
*    DCL DEFAULT64 CHAR INT;        /* DEFAULT VALUE FOR SYSAM64     */ 07066600
*    DCL DEFAULTALVL FIXED INT;     /* DEFAULT VALUE FOR SYSALVL     */ 07083200
*    DCL INOTEXT CHAR INT;          /* USED TO BUILD MESSAGES        */ 07100000
*    DCL SPECTEST CHAR INT;         /* IS TEST SPECIFIED?            */ 07110000
*    DCL SPECASCENV CHAR INT;       /* IS ASCENV SPECIFIED?          */ 07120000
*    DCL SPECAM64 CHAR INT;         /* IS AMODE64 SPECIFIED?         */ 07130000
*    DCL SPECALVL CHAR INT;         /* IS ARCHLVL SPECIFIED?         */ 07140000
*    EHARC = 0;                     /* INITIALIZE EXTERNAL RETURN    */ 07150000
*    /*                                                              */ 07200000
*    /*  DEFAULT VALUE FOR SYSASCE IN PLX:                           */ 07250000
*    /*                                                              */ 07300000
*    DEFAULT='P';                                                       07350000
*    /*                                                              */ 07354500
*    /*                                                              */ 07359000
*    /*  DEFAULT VALUE FOR SYSAM64 IN PLX:                           */ 07363500
*    /*                                                              */ 07368000
*    DEFAULT64='NO';                                                    07372500
*    /*                                                              */ 07377000
*    /*                                                              */ 07381500
*    /*  DEFAULT VALUE FOR SYSALVL IN PLX:                           */ 07386000
*    /*                                                              */ 07390500
*    DEFAULTALVL=0;                                                     07395200
*    /*                                                              */ 07400000
*    INOTEXT='. NO TEXT IS GENERATED.';                                 07450000
*                                                                       07500000
*    IF MACLABEL ^= '' THEN         /* LABEL ON MACRO CALL?          */ 07550000
*      ANS(MACLABEL) COL(MACLMAR) NORESCAN; /* YES, PUT OUT LABEL    */ 07600000
*                                                                       07650000
*    IF MACLIST(1) ^= 'TEST' THEN   /* IF 'TEST', PUT OUT NO COMMENT */ 07700000
*      DO;                                                              07750000
*        CMT = '? ' || MACLABEL || ' ' || MACNAME || ' ' || MACLIST ||  07800000
*          ' ' || MACKEYS;                                              07850000
*        ANS(COMMENT(CMT)) COL(MACLMAR) NORESCAN;                       07900000
*      END;                                                             07950000
*    IF SYSASCE = '' THEN SYSASCE = DEFAULT;               /*    @LXA*/ 07962500
*    IF SYSAM64 = '' THEN SYSAM64 = DEFAULT64;             /*    @LXA*/ 07975000
*    IF SYSALVL = 0 THEN SYSALVL = DEFAULTALVL;            /*    @LXA*/ 07987500
*                                                                       08000000
*    /****************************************************************/ 08050000
*    /*                                                              */ 08100000
*    /*  PROCESS THE MACLIST                                         */ 08150000
*    /*                                                              */ 08200000
*    /****************************************************************/ 08250000
*    IF MACLIST ^= '' THEN                                              08300000
*      DO;                                                              08350000
*        IF NUMBER(MACLIST) > 1 THEN /* TOO MANY POSITIONAL PARMS.?  */ 08400000
*          DO;                      /* YES, WRITE MESSAGE            */ 08450000
*            ANS MSG('AHA0073 TOO MANY POSITIONAL PARAMETERS ARE ' ||   08500000
*              'SPECIFIED. ONE IS PERMITTED.') NORESCAN;                08550000
*            CMT='TOO MANY POSITIONAL PARAMETERS ARE ' ||               08600000
*              'SPECIFIED. ONE IS PERMITTED.';                          08650000
*            ANS(COMMENT(CMT)) COL(10) NORESCAN SKIP(1);                08700000
*            EHARC = 12;            /* INDICATE SERIOUS ERROR        */ 08750000
*          END;                                                         08850000
*        FUNCTION=MACLIST(1);                                           08880000
*        IF MACLIST(1) ^= 'TEST' &                                      08910000
*           MACLIST(1) ^= 'PUSH' &                                      08940000
*           MACLIST(1) ^= 'POP' THEN                                    08970000
*          DO;                      /* INVALID POSITIONAL PARAMETER  */ 09000000
*            ANS MSG('AHA0043 MACLIST(1) MUST BE ' ||                   09050000
*              QUOTE('TEST, PUSH, OR POP') || INOTEXT) NORESCAN;        09087500
*            CMT='MACLIST(1) MUST BE ' ||                               09125000
*              QUOTE('TEST, PUSH, OR POP') || INOTEXT;                  09162500
*            ANS(COMMENT(CMT)) COL(10) NORESCAN SKIP(1);                09200000
*            EHARC = 12;            /* INDICATE SERIOUS ERROR        */ 09250000
*            FUNCTION = 'BAD_FUNCTION';                                 09300000
*          END;                                                         09350000
*        IF (FUNCTION = 'PUSH' & POP ^= '')                             09400000
*         | (FUNCTION = 'POP' & PUSH ^= '') THEN                        09450000
*        DO;                                                            09500000
*              ANS MSG('AHA0023 ''PUSH'' IS INVALID WITH ''POP'''       09550000
*                || INOTEXT) NORESCAN;                                  09650000
*              CMT='''PUSH'' IS INVALID WITH ''POP''' || INOTEXT;       09700000
*              ANS(COMMENT(CMT)) COL(10) NORESCAN SKIP(1);              09750000
*              EHARC = 12;                                              09800000
*        END;                                                           09814700
*      END;                                                             09829400
*      ELSE IF PUSH = 'PUSH' THEN                                       09844100
*      DO;                                                              09858800
*        FUNCTION='PUSH';                                               09873500
*      END;                                                             09888200
*      ELSE IF POP = 'POP' THEN                                         09902900
*      DO;                                                              09917600
*        FUNCTION='POP';                                                09932300
*      END;                                                             09947000
*                                                                       09961700
*    IF FUNCTION ^= '' THEN                                             09976400
*    DO;                            /* FUNCTION ^= ''                */ 09991100
*                                                                       10005800
*        IF FUNCTION ^= 'BAD_FUNCTION' THEN             /*           */ 10020500
*        DO;                        /* TEST/PUSH/POP                 */ 10035200
*          IF ASCENV ^= '' THEN     /* ASCENV WITH TEST/PUSH/POP        10049900
*                                                       IS INVALID   */ 10064600
*            DO;                                                        10079300
*              ANS MSG('AHA0023 ''ASCENV'' IS INVALID WITH ' ||         10094000
*                QUOTE(FUNCTION)                                        10108700
*                || INOTEXT) NORESCAN;                                  10125000
*              CMT='''ASCENV'' IS INVALID WITH ' ||                     10135000
*                QUOTE(FUNCTION) || INOTEXT;                            10145000
*              ANS(COMMENT(CMT)) COL(10) NORESCAN SKIP(1);              10155000
*              EHARC = 12;                                              10170000
*            END;                                                       10185000
*          IF AMODE64 ^= '' THEN    /* AMODE64 WITH TEST/PUSH/POP       10220000
*                                                        IS INVALID  */ 10255000
*            DO;                                                        10290000
*              ANS MSG('AHA0023 ''AMODE64'' IS INVALID WITH ' ||        10300000
*                QUOTE(FUNCTION)                                        10310000
*                || INOTEXT) NORESCAN;                                  10320000
*              CMT='''AMODE64'' IS INVALID WITH ' ||                    10330000
*                QUOTE(FUNCTION) || INOTEXT;                            10340000
*              ANS(COMMENT(CMT)) COL(10) NORESCAN SKIP(1);              10350000
*              EHARC = 12;                                              10365000
*            END;                                                       10380000
*          IF ARCHLVL ^= '' THEN    /* ARCHLVL WITH TEST/PUSH/POP       10387500
*                                                        IS INVALID  */ 10395000
*            DO;                                                        10402500
*              ANS MSG('AHA0023 ''ARCHLVL'' IS INVALID WITH ' ||        10410000
*                QUOTE(FUNCTION)                                        10417500
*                || INOTEXT) NORESCAN;                                  10425000
*              CMT='''ARCHLVL'' IS INVALID WITH ' ||                    10432500
*                QUOTE(FUNCTION) || INOTEXT;                            10440000
*              ANS(COMMENT(CMT)) COL(10) NORESCAN SKIP(1);              10447500
*              EHARC = 12;                                              10455000
*            END;                                                       10462500
*          IF ASM ^= '' THEN /* IF OTHER PARAMETERS                     10470000
*                              ARE SPECIFIED, PUT OUT WARNING        */ 10485000
*            DO;                                                        10500000
*              ANS MSG('AHA0051 ''ASM'' WITH ' ||                       10510000
*                QUOTE(FUNCTION) || ' IS IGNORED.')                     10520000
*              NORESCAN;                                                10530000
*              CMT='''ASM'' WITH ' ||                                   10540000
*                QUOTE(FUNCTION) || ' IS IGNORED.';                     10550000
*              ANS(COMMENT(CMT)) COL(10) NORESCAN SKIP(1);              10560000
*              IF EHARC = 0 THEN                                        10575000
*                EHARC = 4;                                             10590000
*            END;                                                       10605000
*        END;                       /* FUNCTION = TEST/PUSH/POP      */ 10610000
*        IF FUNCTION = 'TEST' THEN                                      10615000
*          RETURN CODE(EHARC);                                          10620000
*    END;                           /* FUNCTION ^= ''                */ 10660000
*                                                                       10700000
*    /****************************************************************/ 10750000
*    /*                                                              */ 10800000
*    /*  VALIDITY CHECK THE ASM KEYWORD                              */ 10850000
*    /*                                                              */ 10900000
*    /****************************************************************/ 10950000
*                                                                       11000000
*    IF ASM = '' THEN                                                   11050000
*      IASM = 'YES';                /* SET DEFAULT IF OMITTED        */ 11100000
*    ELSE                           /* ASM WAS SPECIFIED             */ 11150000
*                                                                       11200000
*      DO;                          /* ANALYZE THE ASM KEYWORD       */ 11250000
*                                                                       11300000
*        IF NUMBER(ASM) > 1 THEN    /* TOO MANY SUBOPERANDS          */ 11350000
*          DO;                                                          11400000
*            ANS MSG('AHA0073 ''ASM'' PARAMETER HAS TOO MANY ' ||       11450000
*              'SUBPARAMETERS' || INOTEXT) NORESCAN;                    11500000
*            CMT='''ASM'' PARAMETER HAS TOO MANY ' ||                   11550000
*              'SUBPARAMETERS' || INOTEXT;                              11600000
*            ANS(COMMENT(CMT)) COL(10) NORESCAN SKIP(1);                11650000
*            EHARC = 12;            /* INDICATE SERIOUS ERROR        */ 11700000
*          END;                                                         11750000
*                                                                       11800000
*        IF ASM(1) = 'YES' THEN                                         11850000
*          IASM = 'YES';            /* SET YES IF SPECIFIED          */ 11900000
*        ELSE                                                           11950000
*          IF ASM(1) = 'NO' THEN                                        12000000
*            IASM = 'NO';           /* SET NO IF SPECIFIED           */ 12050000
*          ELSE                                                         12100000
*            DO;                    /* PROCESS INVALID VALUE         */ 12150000
*              ANS MSG('AHA0043 ''ASM'' MUST BE ''YES'' OR ''NO''' ||   12200000
*                INOTEXT) NORESCAN;                                     12250000
*              CMT='''ASM'' MUST BE ''YES'' OR ''NO''' || INOTEXT;      12300000
*              ANS(COMMENT(CMT)) COL(10) NORESCAN SKIP(1);              12350000
*              EHARC = 12;          /* INDICATE SERIOUS ERROR        */ 12400000
*            END;                                                       12450000
*      END;                                                             12500000
*    /****************************************************************/ 12550000
*    /*                                                              */ 12600000
*    /*  VALIDITY CHECK THE ASCENV KEYWORD                           */ 12650000
*    /*                                                              */ 12700000
*    /****************************************************************/ 12750000
*                                                                       12800000
*    IF ASCENV ^= '' THEN                                               12850000
*      DO;                          /* ANALYZE THE ASCENV KEYWORD    */ 12900000
*                                                                       12950000
*        IF NUMBER(ASCENV) > 1 THEN /* TOO MANY SUBOPERANDS          */ 13000000
*          DO;                                                          13050000
*            ANS MSG('AHA0073 ''ASCENV'' PARAMETER HAS TOO MANY ' ||    13100000
*              'SUBPARAMETERS' || INOTEXT) NORESCAN;                    13150000
*            CMT='''ASCENV'' PARAMETER HAS TOO MANY ' ||                13200000
*              'SUBPARAMETERS' || INOTEXT;                              13250000
*            ANS(COMMENT(CMT)) COL(10) NORESCAN SKIP(1);                13300000
*            EHARC = 12;            /* INDICATE SERIOUS ERROR        */ 13350000
*          END;                                                         13400000
*                                                                       13450000
*        IF ASCENV(1) ^= 'P' & ASCENV(1) ^= 'AR'& ASCENV(1)^='ANY'      13500000
*          & ASCENV ^= 'ASCENV' THEN                                    13550000
*          DO;                      /* PROCESS INVALID VALUE         */ 13600000
*            ANS MSG('AHA0043 ''ASCENV'' MUST BE ''P'' , ''AR'', '      13650000
*            ||'''ANY'', OR HAVE NO VALUE' || INOTEXT) NORESCAN;        13700000
*            CMT='''ASCENV'' MUST BE ''P'' , ''AR'', '                  13750000
*            ||'''ANY'', OR HAVE NO VALUE' || INOTEXT;                  13800000
*            ANS(COMMENT(CMT)) COL(10) NORESCAN SKIP(1);                13850000
*            EHARC = 12;            /* INDICATE SERIOUS ERROR        */ 13900000
*          END;                                                         13950000
*      END;                         /* ASCENV ^= ''                  */ 14000000
*                                                                       14050000
*    /****************************************************************/ 14100000
*    /*                                                              */ 14150000
*    /*  VALIDITY CHECK THE AMODE64 KEYWORD                          */ 14150800
*    /*                                                              */ 14151600
*    /****************************************************************/ 14152400
*                                                                       14153200
*    IF AMODE64 ^= '' THEN                                              14154000
*      DO;                          /* ANALYZE THE AMODE64 KEYWORD   */ 14154800
*                                                                       14155600
*        IF NUMBER(AMODE64) > 1 THEN /* TOO MANY SUBOPERANDS         */ 14156400
*          DO;                                                          14157200
*            ANS MSG('AHA0073 ''AMODE64'' PARAMETER HAS TOO MANY ' ||   14158000
*              'SUBPARAMETERS' || INOTEXT) NORESCAN;                    14158800
*            CMT='''AMODE64'' PARAMETER HAS TOO MANY ' ||               14159600
*              'SUBPARAMETERS' || INOTEXT;                              14160400
*            ANS(COMMENT(CMT)) COL(10) NORESCAN SKIP(1);                14161200
*            EHARC = 12;            /* INDICATE SERIOUS ERROR        */ 14162000
*          END;                                                         14162800
*                                                                       14163600
*        IF AMODE64(1) ^= 'YES' & AMODE64(1) ^= 'NO'                    14164100
*          & AMODE64 ^= 'AMODE64' THEN                                  14164600
*          DO;                      /* PROCESS INVALID VALUE         */ 14165200
*            ANS MSG('AHA0043 ''AMODE64'' MUST BE ''YES'', ''NO'', '    14166000
*            ||'OR HAVE NO VALUE' || INOTEXT) NORESCAN;                 14166800
*            CMT='''AMODE64'' MUST BE ''YES'', ''NO'', '                14167600
*            ||'OR HAVE NO VALUE' || INOTEXT;                           14168400
*            ANS(COMMENT(CMT)) COL(10) NORESCAN SKIP(1);                14169200
*            EHARC = 12;            /* INDICATE SERIOUS ERROR        */ 14170000
*          END;                                                         14170800
*      END;                         /* AMODE64 ^= ''                 */ 14171600
*                                                                       14172400
*    /****************************************************************/ 14173200
*    /*                                                              */ 14174000
*    /*  VALIDITY CHECK THE ARCHLVL KEYWORD                          */ 14174800
*    /*                                                              */ 14175600
*    /****************************************************************/ 14176400
*                                                                       14177200
*    IF ARCHLVL ^= '' THEN                                              14178000
*      DO;                          /* ANALYZE THE ARCHLVL KEYWORD   */ 14178800
*                                                                       14179600
*        IF NUMBER(ARCHLVL) > 1 THEN /* TOO MANY SUBOPERANDS         */ 14180400
*          DO;                                                          14181200
*            ANS MSG('AHA0073 ''ARCHLVL'' PARAMETER HAS TOO MANY ' ||   14182000
*              'SUBPARAMETERS' || INOTEXT) NORESCAN;                    14182800
*            CMT='''ARCHLVL'' PARAMETER HAS TOO MANY ' ||               14183600
*              'SUBPARAMETERS' || INOTEXT;                              14184400
*            ANS(COMMENT(CMT)) COL(10) NORESCAN SKIP(1);                14185200
*            EHARC = 12;            /* INDICATE SERIOUS ERROR        */ 14186000
*          END;                                                         14186800
*                                                                       14187600
*        IF ARCHLVL(1) ^= '0' &                                         14187900
*           ARCHLVL(1) ^= '1' & ARCHLVL(1) ^= '2'                       14188200
*         & ARCHLVL(1) ^= 'ESA' & ARCHLVL(1) ^= 'ESAME'                 14188500
*         & ARCHLVL(1) ^= 'ESAR10' THEN                                 14188800
*          DO;                      /* PROCESS INVALID VALUE         */ 14189200
*           ANS MSG('AHA0043 ''ARCHLVL'' MUST BE ''0'', ''1'', ''2'', ' 14190000
*            ||'OR HAVE NO VALUE' || INOTEXT) NORESCAN;                 14190800
*            CMT='''ARCHLVL'' MUST BE ''0'', ''1'', ''2'', '            14191600
*            ||'OR HAVE NO VALUE' || INOTEXT;                           14192400
*            ANS(COMMENT(CMT)) COL(10) NORESCAN SKIP(1);                14193200
*            EHARC = 12;            /* INDICATE SERIOUS ERROR        */ 14194000
*          END;                                                         14194800
*      END;                         /* ARCHLVL ^= ''                 */ 14195600
*                                                                       14196400
*    /****************************************************************/ 14197200
*    /*                                                              */ 14198000
*    /*  PROCESS THE KEYWORD PARAMETERS                              */ 14200000
*    /*                                                              */ 14250000
*    /****************************************************************/ 14300000
*    IF EHARC < 12 THEN             /* CHECK RETURN CODE             */ 14350000
*      DO;                                                              14400000
*    IF FUNCTION = 'PUSH' THEN      /* PUSH?                         */ 14400700
*    DO;                            /* PUSH                          */ 14401400
*      IF SYSSTATEI > 255 THEN      /* LIMIT EXCEEDED?               */ 14402100
*      DO;                          /* LIMIT EXCEEDED                */ 14402800
*        CMT='AHA0073 SYSSTATE PUSH STACK IS FULL ' ||                  14403500
*          '(255 LEVELS). PUSH NOT DONE.';                              14404200
*        ANS MSG(CMT) NORESCAN;                                         14404900
*        ANS(COMMENT(CMT)) COL(10) NORESCAN SKIP(1);                    14405600
*        EHARC = 12;                /* INDICATE ERROR                */ 14406300
*      END;                         /* LIMIT EXCEEDED                */ 14407000
*      ELSE DO;                     /* LIMIT NOT EXCEEDED            */ 14407700
*        SYSSTATEI = SYSSTATEI + 1; /* NEXT STACK LEVEL              */ 14408400
*        SYSASCEA(SYSSTATEI) = SYSASCE;  /* SAVE SYSASCE             */ 14409100
*        SYSAM64A(SYSSTATEI) = SYSAM64;  /* SAVE SYSAM64             */ 14409800
*        SYSALVLA(SYSSTATEI) = SYSALVL;  /* SAVE SYSALVL             */ 14410500
*        ANS('GEN OPTACROSS NOSETS NOREFS (SYSSTATE PUSH);')            14411200
*          NORESCAN;                /*                               */ 14411900
*      END;                         /* LIMIT NOT EXCEEDED            */ 14412600
*      RETURN CODE(EHARC);          /* RETURN                        */ 14413300
*    END;                           /* PUSH                          */ 14414000
*    IF FUNCTION = 'POP' THEN       /* POP?                          */ 14414700
*    DO;                            /* POP                           */ 14415400
*      IF SYSSTATEI < 1 THEN        /* NO ENTRIES?                   */ 14416100
*      DO;                          /* NO ENTRIES                    */ 14416800
*        CMT='AHA0073 SYSSTATE PUSH STACK IS EMPTY. ' ||                14417500
*          'POP NOT DONE.';                                             14418200
*        ANS MSG(CMT) NORESCAN;                                         14418900
*        ANS(COMMENT(CMT)) COL(10) NORESCAN SKIP(1);                    14419600
*        EHARC = 12;                /* INDICATE ERROR                */ 14420300
*      END;                         /* NO ENTRIES                    */ 14421000
*      ELSE DO;                     /* VALID ENTRY                   */ 14421700
*        ANS('GEN OPTACROSS NOSETS NOREFS (SYSSTATE POP);')             14422400
*          NORESCAN;                /*                               */ 14423100
*        SYSASCE = SYSASCEA(SYSSTATEI);  /* SAVE SYSASCE             */ 14423800
*        SYSAM64 = SYSAM64A(SYSSTATEI);  /* SAVE SYSAM64             */ 14424500
*        SYSALVL = SYSALVLA(SYSSTATEI);  /* SAVE SYSALVL             */ 14425200
*        SYSSTATEI = SYSSTATEI - 1; /* PREVIOUS STACK LEVEL          */ 14425900
*      END;                         /* VALID ENTRY                   */ 14426600
*      RETURN CODE(EHARC);          /* RETURN                        */ 14427300
*    END;                           /* POP                           */ 14428000
*        IF ASCENV ^= '' THEN       /* ASCENV SPECIFIED              */ 14430000
*        DO;                        /* ASCENV SPECIFIED              */ 14460000
*          IF ASCENV = 'ASCENV' THEN /* USE DEFAULT                  */ 14490000
*            SYSASCE = DEFAULT;     /* SET DEFAULT SYSASCE           */ 14520000
*                                                                       14550000
*          ELSE                     /* SYSSTATE WAS PROVIDED         */ 14600000
*            SYSASCE=ASCENV(1);     /* SET ASC ENVIRONMENT           */ 14650000
*                                                                       14700000
*        END;                       /* ASCENV SPECIFIED              */ 14702100
*        IF AMODE64 ^= '' THEN      /* AMODE64 SPECIFIED             */ 14704200
*        DO;                        /* AMODE64 SPECIFIED             */ 14706300
*        IF AMODE64 = 'AMODE64' THEN /* USE DEFAULT                  */ 14708400
*          SYSAM64 = DEFAULT64;     /* SET DEFAULT SYSAM64           */ 14710500
*                                                                       14712600
*        ELSE DO;                   /* SYSSTATE WAS PROVIDED         */ 14714700
*          SYSAM64=AMODE64(1);      /* SET AMODE ENVIRONMENT         */ 14716800
*                                                                       14718900
*          IF SYSAM64 = 'YES' & SYSALVL < 2 THEN         /*          */ 14721000
*            SYSALVL = 2;           /*                               */ 14723100
*        END;                       /* SYSSTATE WAS PROVIDED         */ 14725200
*        END;                       /* AMODE64 SPECIFIED             */ 14727300
*        IF ARCHLVL ^= '' THEN      /* ARCHLVL SPECIFIED             */ 14729400
*        DO;                        /* ARCHLVL SPECIFIED             */ 14731500
*        IF ARCHLVL = 'ARCHLVL' THEN /* USE DEFAULT                  */ 14733600
*          SYSALVL = DEFAULTALVL;   /* SET DEFAULT SYSALVL           */ 14735700
*                                                                       14737800
*        ELSE IF ARCHLVL(1) = 'ESA' | ARCHLVL(1) = '0' THEN  /*      */ 14738400
*          SYSALVL=0;                 /* SET ARCHLVL                 */ 14739000
*        ELSE IF ARCHLVL(1) = 'ESAR10' | ARCHLVL(1) = '1' THEN  /*   */ 14739600
*          SYSALVL=1;                 /* SET ARCHLVL                 */ 14740200
*        ELSE                         /* "ESAME" OR "2"              */ 14741400
*          SYSALVL=2;                 /* SET ARCHLVL                 */ 14742600
*                                                                       14744100
*        END;                       /* ARCHLVL SPECIFIED             */ 14746200
*        CMT='THE VALUE OF SYSSTATE IS NOW SET TO ASCENV('              14750000
*             || SYSASCE || ') AMODE64('||SYSAM64||')'                  14783300
*             || ' ARCHLVL(' || CHAR(SYSALVL) || ').';                  14816600
*        ANS (COMMENT(CMT)) COL(MACLMAR+4) NORESCAN;                    14850000
*        IF SYSASCE^='P' &          /* FOR AR OR ANY                 */ 14862500
*           INDEX(EHAMAPS,'AR@')=0 THEN /* MAPS NOT SPECIFIED YET    */ 14875000
*          EHAMAPS=EHAMAPS||'AR@';  /* GET AR-MODE DECLARES          */ 14887500
*                                                                       14900000
*        IF SYSAM64 = 'YES' &                                           14904500
*           SYSALVL < 2 THEN                                            14909000
*        DO;                                                            14913500
*            ANS MSG('AHA0043 ''AMODE64(YES)'' IS NOT VALID WITH '      14918000
*             ||'''ARCHLVL(1)''.') NORESCAN;                            14922500
*            CMT='''AMODE64(YES)'' IS NOT VALID WITH'                   14927000
*             ||'''ARCHLVL(1)''.';                                      14931500
*            ANS(COMMENT(CMT)) COL(10) NORESCAN SKIP(1);                14936000
*            EHARC = 12;            /* INDICATE SERIOUS ERROR        */ 14940500
*        END;                                                           14945000
*        IF IASM = 'YES' THEN       /* ASM VERSION IS REQUESTED      */ 14950000
*        DO;                                                            14980000
*          SYSSTATEC = 'SYSSTATE ASCENV=';                              15010000
*          IF ASCENV ^= '' THEN                                         15040000
*            IF ASCENV = 'ASCENV' THEN /* IN CASE THE PLX AND           15070000
*                                         ASSEMBLER DEFAULTS ARE        15100000
*                                         DIFFERENT, PASS THE PLX       15105000
*                                         DEFAULT                    */ 15110000
*              SYSSTATEC = SYSSTATEC || DEFAULT;                        15115000
*            ELSE                                                       15120000
*              SYSSTATEC = SYSSTATEC || ASCENV(1);                      15125000
*          SYSSTATEC = SYSSTATEC || ',AMODE64=';                        15130000
*          IF AMODE64 ^= '' THEN                                        15135000
*            IF AMODE64 = 'AMODE64' THEN /* IN CASE THE PLX AND         15140000
*                                         ASSEMBLER DEFAULTS ARE        15145000
*                                         DIFFERENT, PASS THE PLX       15150000
*                                         DEFAULT                    */ 15155000
*              SYSSTATEC = SYSSTATEC || DEFAULT64;                      15160000
*            ELSE                                                       15165000
*              SYSSTATEC = SYSSTATEC || AMODE64(1);                     15170000
*          SYSSTATEC = SYSSTATEC || ',ARCHLVL=';                        15175000
*          IF ARCHLVL ^= '' THEN                                        15180000
*            IF ARCHLVL = 'ARCHLVL' THEN /* IN CASE THE PLX AND         15185000
*                                         ASSEMBLER DEFAULTS ARE        15190000
*                                         DIFFERENT, PASS THE PLX       15195000
*                                         DEFAULT                    */ 15200000
*              SYSSTATEC = SYSSTATEC || CHAR(DEFAULTALVL);              15203100
*            ELSE                                                       15206200
*              SYSSTATEC = SYSSTATEC || ARCHLVL(1);                     15209300
*            IF NOOPTACROSS = '' &                                      15212400
*               SYSVERSION ^= '' &                                      15220700
*               SYSRULESMOD ^= 'PL/S-III ' THEN                         15229000
*            DO;                                                        15244200
*              ANS('GEN OPTACROSS NOSETS NOREFS ')                      15259400
*                COL(10) NORESCAN;  /* CREATE GENERATED VERSION      */ 15274800
*              ANS('(' || SYSSTATEC || ');')                            15302800
*                COL(10) NORESCAN;  /* CREATE GENERATED VERSION      */ 15330900
*            END;                                                       15354200
*            ELSE DO;                                                   15377500
*              ANS('GEN ')                                              15400900
*                COL(10) NORESCAN;  /* CREATE GENERATED VERSION      */ 15424400
*              ANS('(' || SYSSTATEC || ');')                            15452400
*                COL(10) NORESCAN;  /* CREATE GENERATED VERSION      */ 15480500
*            END;                                                       15487000
*        END;                                                           15493500
*                                                                       15500000
*      END;                         /* KEYWORD PARMS AND NO SERIOUS     15550000
*                                      ERRORS                        */ 15600000
*                                                                       15650000
*    RETURN CODE(EHARC);                                                15700000
*    %END SYSSTATE;                                                     15750000
