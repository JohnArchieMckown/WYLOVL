*/**** START OF SPECIFICATIONS **************************************** 00000100
*                                                                     * 00000200
*                                                                     * 00000300
*01* MACRO NAME:  IWMMXFER                              -09/15/99-<1> * 00000400
*                                                                     * 00000500
*                                                                     * 00000600
*01* DESCRIPTIVE NAME:  Monitoring environment transfer               * 00000700
*                                                                     * 00000800
*01* PROPRIETARY STATEMENT:                                           * 00000900
*                                                                     * 00001000
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 00001100
*     5647-A01 (C) COPYRIGHT IBM CORP. 1993, 2000                     * 00001200
*                                                                     * 00001300
* STATUS= JBB6609                                                     * 00001400
*                                                                     * 00001500
*                                                                     * 00001600
*                                                                     * 00001700
*01* FUNCTION:                                                        * 00001800
*                                                                     * 00001900
*                                                                     * 00002000
*      The purpose of this service is to reflect that the delay       * 00002100
*      information for a work request may now also reside in a        * 00002200
*      dependent monitoring environment (CONTINUE) OR that delay      * 00002300
*      information is no longer present in a dependent monitoring     * 00002400
*      environment (RETURN).                                          * 00002500
*                                                                     * 00002600
*      The two monitoring environments referred to above must be      * 00002700
*      related by a previous IWMMRELA invocation.  This service       * 00002800
*      requires as input the monitoring token for the dependent       * 00002900
*      environment, which is accessed, but the parent environment     * 00003000
*      must also be updated.  This implies that the user must have    * 00003100
*      addressability and update access to the parent monitoring      * 00003200
*      environment.  PARENTKEYP and PARENTENV keywords are provided   * 00003300
*      to accommodate these requirements.  These restrictions apply   * 00003400
*      even when the Relate was performed using the FINDACTIVE        * 00003500
*      option, though when the monitoring environment is related to   * 00003600
*      the address space characteristics, no key or addressability    * 00003700
*      requirements exist beyond those for the dependent monitoring   * 00003800
*      environment.                                                   * 00003900
*                                                                     * 00004000
*01* EXTERNAL CLASSIFICATION:  GUPI                                   * 00004100
*                                                                     * 00004200
*01* END OF EXTERNAL CLASSIFICATION:                                  * 00004300
*                                                                     * 00004400
*01* ENVIRONMENT:                                                     * 00004500
*                                                                     * 00004600
*                                                                     * 00004700
*      Dispatchable unit mode: Task or SRB mode.                      * 00004800
*                                                                     * 00004900
*      Cross Memory Mode: Any PASN, any HASN, any SASN.               * 00005000
*                                                                     * 00005100
*      Minimum authorization:                                         * 00005200
*                                                                     * 00005300
*                                                                     * 00005400
*                        o   Either problem state or supervisor       * 00005500
*                            state.                                   * 00005600
*                                                                     * 00005700
*                        o   PSW key must either be 0 or match the    * 00005800
*                            value supplied on IWMMCREA for the       * 00005900
*                            (dependent) monitoring token.            * 00006000
*                                                                     * 00006100
*                        o   PARENTKEYP(VALUE) may only be specified  * 00006200
*                            in supervisor state or with PKM          * 00006300
*                            authority to the key specified by        * 00006400
*                            PARENTKEY.  Note that the key for        * 00006500
*                            IWMMXFER is located in bit positions 0-3 * 00006600
*                            (using 0 origin), which is the machine   * 00006700
*                            orientation to keeping keys, not the     * 00006800
*                            "natural" way of declaring the key       * 00006900
*                            value.                                   * 00007000
*                                                                     * 00007100
*                        o   PARENTKEYP(UNKNOWN) may only be          * 00007200
*                            specified in supervisor state or with    * 00007300
*                            PKM authority to key 0.                  * 00007400
*                                                                     * 00007500
*                        o   When PARENTKEYP(PSWKEY) is specified,    * 00007600
*                            the PSW key must either be 0 or match    * 00007700
*                            the value supplied on IWMMCREA for the   * 00007800
*                            parent monitoring environment.           * 00007900
*                                                                     * 00008000
*                                                                     * 00008100
*                                                                     * 00008200
*      AMODE:            31-bit.                                      * 00008300
*                                                                     * 00008400
*      ASC mode:         Primary.                                     * 00008500
*                                                                     * 00008600
*      Interrupt status: Enabled for I/O and external interrupts.     * 00008700
*                                                                     * 00008800
*      Locks:            No locks held.                               * 00008900
*                                                                     * 00009000
*      Control parameters: Control parameters must be in the primary  * 00009100
*                        address space.                               * 00009200
*                                                                     * 00009300
*                                                                     * 00009400
*                                                                     * 00009500
*01* PROGRAMMING REQUIREMENTS:                                        * 00009600
*                                                                     * 00009700
*                                                                     * 00009800
*    1.  The macro IWMYCON must be included to use this macro.        * 00009900
*                                                                     * 00010000
*    2.  The macro IWMPB must be in the library concatenation, since  * 00010100
*        it is included by IWMYCON.                                   * 00010200
*                                                                     * 00010300
*    3.  Note that the high order halfword of register 0, and the     * 00010400
*        reason code variable when specified, may be non-zero and     * 00010500
*        represents diagnostic data which is NOT part of the external * 00010600
*        interface.  The high order halfword should thus be excluded  * 00010700
*        from comparison with the reason code values described above. * 00010800
*        The constant, IWMRSNCODE_MASK_CONST defined in IWMYCON, may  * 00010900
*        be used for this purpose.                                    * 00011000
*                                                                     * 00011100
*    4.  Note that specification of FUNCTION(CONTINUE) produces an    * 00011200
*        inline expansion rather than an out-of-line service.         * 00011300
*        Registers 0, 1, 14, and 15 are not preserved across the      * 00011400
*        expansion.  In the PL/AS form, Register 2 is also destroyed  * 00011500
*        when BOTH PARENTENV(SECONDARY) and RUNTIME_VER(SHORT_FORM)   * 00011600
*        are specified (the latter may be defaulted).                 * 00011700
*                                                                     * 00011800
*                                                                     * 00011900
*                                                                     * 00012000
*01* RESTRICTIONS:                                                    * 00012100
*                                                                     * 00012200
*                                                                     * 00012300
*    1.  This macro may not be used prior to the completion of WLM    * 00012400
*        address space initialization                                 * 00012500
*                                                                     * 00012600
*    2.  This macro may only be used on MVS/ESA (version 3 or         * 00012700
*        higher), NOT versions 1 or 2 of MVS.                         * 00012800
*                                                                     * 00012900
*    3.  If the key specified on IWMMCREA for the dependent           * 00013000
*        monitoring environment was a user key (8-F), then primary    * 00013100
*        addressability must exist to the performance block IWMMCREA  * 00013200
*        obtained.  This condition is satisfied by ensuring that      * 00013300
*        current primary matches primary at the time that IWMMCREA    * 00013400
*        was invoked.  If this service is invoked in a subspace, the  * 00013500
*        condition may be satisfied by ensuring that the performance  * 00013600
*        block is shared with the base space.                         * 00013700
*                                                                     * 00013800
*    4.  If the key specified on IWMMCREA for the parent environment  * 00013900
*        was a user key (8-F), then either primary OR secondary       * 00014000
*        addressability must exist to the performance block for the   * 00014100
*        parent environment.                                          * 00014200
*                                                                     * 00014300
*    5.  When FUNCTION(CONTINUE|RETURN) are used, the caller is       * 00014400
*        responsible for error recovery                               * 00014500
*                                                                     * 00014600
*    6.  When FUNCTION(CONTINUE) is used, the caller is responsible   * 00014700
*        to ensure that the parent monitoring environment does not    * 00014800
*        already have a continuation (via a previous IWMMXFER or      * 00014900
*        IWMMSWCH) to another (or other) dependent monitoring         * 00015000
*        environment(s).                                              * 00015100
*                                                                     * 00015200
*    7.  Both monitoring environments must be established on the same * 00015300
*        MVS image.                                                   * 00015400
*                                                                     * 00015500
*    8.  The caller must serialize to prevent any delay monitoring    * 00015600
*        services from being invoked concurrently for the dependent   * 00015700
*        monitoring environment.                                      * 00015800
*                                                                     * 00015900
*    9.  The caller and/or the owner of the parent environment must   * 00016000
*        ensure that parent environment is not deleted while between  * 00016100
*        the time that IWMMXFER FUNCTION(CONTINUE) is used and the    * 00016200
*        time that either IWMMXFER FUNCTION(RETURN) is used against   * 00016300
*        the dependent monitoring environment OR IWMMSWCH             * 00016400
*        FUNCTION(RETURN) is used against the parent monitoring       * 00016500
*        environment.                                                 * 00016600
*                                                                     * 00016700
*    10. Only limited validity checking is done on the input          * 00016800
*        monitoring tokens.                                           * 00016900
*                                                                     * 00017000
*                                                                     * 00017100
*                                                                     * 00017200
*01* INPUT REGISTER INFORMATION:                                      * 00017300
*                                                                     * 00017400
*    Before issuing the IWMMXFER macro, the caller does not have to   * 00017500
*    place any information into any register unless using it in       * 00017600
*    register notation for a particular parameter, or using it as a   * 00017700
*    base register.                                                   * 00017800
*                                                                     * 00017900
*01* OUTPUT REGISTER INFORMATION:                                     * 00018000
*                                                                     * 00018100
*    When control returns to the caller, the GPRs contain:            * 00018200
*                                                                     * 00018300
*                                                                     * 00018400
*    REGISTER  CONTENTS                                               * 00018500
*                                                                     * 00018600
*    0         Reason code if GR15 return code is non-zero            * 00018700
*                                                                     * 00018800
*    1         Used as work registers by the system                   * 00018900
*                                                                     * 00019000
*    2-13      Unchanged                                              * 00019100
*                                                                     * 00019200
*    14        Used as work registers by the system                   * 00019300
*                                                                     * 00019400
*    15        Return code                                            * 00019500
*                                                                     * 00019600
*                                                                     * 00019700
*                                                                     * 00019800
*    When control returns to the caller, the ARs contain:             * 00019900
*                                                                     * 00020000
*                                                                     * 00020100
*    REGISTER  CONTENTS                                               * 00020200
*                                                                     * 00020300
*    0-1       Used as work registers by the system                   * 00020400
*                                                                     * 00020500
*    2-13      Unchanged                                              * 00020600
*                                                                     * 00020700
*    14-15     Used as work registers by the system                   * 00020800
*                                                                     * 00020900
*                                                                     * 00021000
*                                                                     * 00021100
*    Some callers depend on register contents remaining the same      * 00021200
*    before and after issuing a service.  If the system changes the   * 00021300
*    contents of registers on which the caller depends, the caller    * 00021400
*    must save them before issuing the service, and restore them      * 00021500
*    after the system returns control.                                * 00021600
*                                                                     * 00021700
*01* PERFORMANCE IMPLICATIONS:                                        * 00021800
*                                                                     * 00021900
*    None                                                             * 00022000
*                                                                     * 00022100
*01* SYNTAX:                                                          * 00022200
*                                                                     * 00022300
*[xlabel]  IWMMXFER    FUNCTION=CONTINUE                             * 00022400
*                    |   [,RUNTIME_VER=SHORT_FORM]                   * 00022500
*                    |   [,RUNTIME_VER=MINIMAL]                      * 00022600
*                     ,FUNCTION=RETURN                               * 00022700
*                        [,RUNTIME_VER=SHORT_FORM]                   * 00022800
*                        [,RUNTIME_VER=MINIMAL]                      * 00022900
*                      ,MONTKN=xmontkn                                * 00023000
*                     ,PARENTKEYP=VALUE                              * 00023100
*                    |     ,PARENTKEY=xparentkey                      * 00023200
*                     ,PARENTKEYP=PSWKEY                             * 00023300
*                     ,PARENTKEYP=UNKNOWN                            * 00023400
*                     ,PARENTENV=NOSWITCH                            * 00023500
*                     ,PARENTENV=SECONDARY                           * 00023600
*                    [,COMPCODE=YES]                                 * 00023700
*                    [,COMPCODE=NO]                                  * 00023800
*                     [,RETCODE=xretcode]                             * 00023900
*                     [,RSNCODE=xrsncode]                             * 00024000
*                     [,PLISTVER=xplistver|IMPLIED_VERSION]         * 00024100
*                                                                     * 00024200
*                                                                     * 00024300
*      Where:                                                         * 00024400
*                                                                     * 00024500
*                                                                     * 00024600
*      [xlabel]                                                       * 00024700
*          is an optional symbol, starting in column 1, that is the   * 00024800
*          name on the IWMMXFER macro invocation.  The name must      * 00024900
*          conform to the rules for an ordinary assembler language    * 00025000
*          symbol.                                                    * 00025100
*          DEFAULT: No name.                                          * 00025200
*                                                                     * 00025300
*                                                                     * 00025400
*                                                                     * 00025500
*                                                                     * 00025600
*      FUNCTION=CONTINUE|RETURN                                     * 00025700
*          is a required keyword input which indicates whether the    * 00025800
*          dependent environment is continuing from or returning to   * 00025900
*          the parent environment.                                    * 00026000
*                                                                     * 00026100
*                                                                     * 00026200
*          FUNCTION=CONTINUE                                          * 00026300
*              indicates that this is a unique continuation of the    * 00026400
*              work request which is reflected in the dependent       * 00026500
*              monitoring environment.                                * 00026600
*                                                                     * 00026700
*              Note that the parent environment may continue to be    * 00026800
*              active on behalf of the work request.                  * 00026900
*                                                                     * 00027000
*              Note that specification of FUNCTION(CONTINUE) produces * 00027100
*              an inline expansion rather than an out-of-line         * 00027200
*              service.  Registers 0, 1, 14, and 15 are not preserved * 00027300
*              across the expansion.                                  * 00027400
*                                                                     * 00027500
*                                                                     * 00027600
*              [RUNTIME_VER=SHORT_FORM|MINIMAL]                     * 00027700
*                  is an optional keyword input which indicates what  * 00027800
*                  level of runtime verification will be performed.   * 00027900
*                  DEFAULT: SHORT_FORM                                * 00028000
*                                                                     * 00028100
*                                                                     * 00028200
*                  [RUNTIME_VER=SHORT_FORM]                           * 00028300
*                      indicates that checking should verify that a   * 00028400
*                      monitoring environment is established and      * 00028500
*                      passes a short form of verification prior to   * 00028600
*                      being used.                                    * 00028700
*                                                                     * 00028800
*                  [RUNTIME_VER=MINIMAL]                              * 00028900
*                      indicates that checking will only be done to   * 00029000
*                      verify that a monitoring environment may be    * 00029100
*                      established, assuming that it would be valid   * 00029200
*                      and useable if established.                    * 00029300
*                      DEFAULT: SHORT_FORM indicates that short form  * 00029400
*                      checking is desired.                           * 00029500
*                                                                     * 00029600
*                                                                     * 00029700
*                                                                     * 00029800
*                                                                     * 00029900
*                                                                     * 00030000
*          FUNCTION=RETURN                                            * 00030100
*              indicates that the work request is returning to a      * 00030200
*              previously established parent monitoring environment.  * 00030300
*                                                                     * 00030400
*              Use of this option indicates that the dependent        * 00030500
*              environment no longer represents the work request.     * 00030600
*                                                                     * 00030700
*              Note that specification of FUNCTION(RETURN) produces   * 00030800
*              an inline expansion rather than an out-of-line         * 00030900
*              service.  Registers 0, 1, 14, and 15 are not preserved * 00031000
*              across the expansion.                                  * 00031100
*                                                                     * 00031200
*                                                                     * 00031300
*              [RUNTIME_VER=SHORT_FORM|MINIMAL]                     * 00031400
*                  is an optional keyword input which indicates what  * 00031500
*                  level of runtime verification will be performed.   * 00031600
*                  DEFAULT: SHORT_FORM                                * 00031700
*                                                                     * 00031800
*                                                                     * 00031900
*                  [RUNTIME_VER=SHORT_FORM]                           * 00032000
*                      indicates that checking should verify that a   * 00032100
*                      monitoring environment is established and      * 00032200
*                      passes a short form of verification prior to   * 00032300
*                      being used.                                    * 00032400
*                                                                     * 00032500
*                  [RUNTIME_VER=MINIMAL]                              * 00032600
*                      indicates that checking will only be done to   * 00032700
*                      verify that a monitoring environment may be    * 00032800
*                      established, assuming that it would be valid   * 00032900
*                      and useable if established.                    * 00033000
*                      DEFAULT: SHORT_FORM indicates that short form  * 00033100
*                      checking is desired.                           * 00033200
*                                                                     * 00033300
*                                                                     * 00033400
*                                                                     * 00033500
*                                                                     * 00033600
*                                                                     * 00033700
*                                                                     * 00033800
*                                                                     * 00033900
*                                                                     * 00034000
*                                                                     * 00034100
*                                                                     * 00034200
*      MONTKN=xmontkn                                                 * 00034300
*          is the name (RS-type), or address in register (2)-(12), of * 00034400
*          a required 32 bit input which contains the delay           * 00034500
*          monitoring token for the dependent environment.            * 00034600
*                                                                     * 00034700
*                                                                     * 00034800
*                                                                     * 00034900
*                                                                     * 00035000
*      PARENTKEYP=VALUE|PSWKEY|UNKNOWN                              * 00035100
*          is a required keyword input which describes whether a key  * 00035200
*          switch is needed to access the parent monitoring           * 00035300
*          environment.                                               * 00035400
*                                                                     * 00035500
*                                                                     * 00035600
*          PARENTKEYP=VALUE                                           * 00035700
*                                                                     * 00035800
*              indicates that the key is being passed explicitly via  * 00035900
*              PARENTKEY.                                             * 00036000
*                                                                     * 00036100
*                                                                     * 00036200
*              PARENTKEY=xparentkey                                   * 00036300
*                  is the name (RS-type), or address in register      * 00036400
*                  (2)-(12), of a required 8 bit input which contains * 00036500
*                  the key in which the parent monitoring environment * 00036600
*                  must be accessed.  Use of this keyword value       * 00036700
*                  requires that the invoker be in supervisor state   * 00036800
*                  or that the caller have PKM authority to the key   * 00036900
*                  specified.  The high order 4 bits (i.e. bits 0-3)  * 00037000
*                  contain the key value.                             * 00037100
*                                                                     * 00037200
*                  Note that this is different from the "natural" way * 00037300
*                  of declaring the key, and uses the machine         * 00037400
*                  orientation for keeping the storage key in the     * 00037500
*                  high order bits.                                   * 00037600
*                                                                     * 00037700
*                                                                     * 00037800
*                                                                     * 00037900
*          PARENTKEYP=PSWKEY                                          * 00038000
*                                                                     * 00038100
*              indicates that the current PSW key should be used.     * 00038200
*              Use of this keyword value requires that the parent     * 00038300
*              monitoring environment was established with the same   * 00038400
*              key as the current PSW.                                * 00038500
*                                                                     * 00038600
*          PARENTKEYP=UNKNOWN                                         * 00038700
*                                                                     * 00038800
*              indicates that the key associated with the parent      * 00038900
*              monitoring environment is unknown.  Use of this        * 00039000
*              keyword value requires that the invoker be in          * 00039100
*              supervisor state or that the caller have PKM authority * 00039200
*              to key 0.                                              * 00039300
*                                                                     * 00039400
*                                                                     * 00039500
*                                                                     * 00039600
*                                                                     * 00039700
*                                                                     * 00039800
*                                                                     * 00039900
*      PARENTENV=NOSWITCH|SECONDARY                                 * 00040000
*          is a required keyword input which describes whether a      * 00040100
*          space switch is needed to access the parent monitoring     * 00040200
*          environment.                                               * 00040300
*                                                                     * 00040400
*                                                                     * 00040500
*          PARENTENV=NOSWITCH                                         * 00040600
*                                                                     * 00040700
*              indicates that NO space switch is needed to access the * 00040800
*              parent monitoring environment.  This would be          * 00040900
*              appropriate if the parent monitoring environment was   * 00041000
*              established (by IWMMCREA) to be used by routines in a  * 00041100
*              specific system key or if it was established to be     * 00041200
*              used in a specific user key in the current primary.    * 00041300
*                                                                     * 00041400
*          PARENTENV=SECONDARY                                        * 00041500
*                                                                     * 00041600
*              indicates that the parent monitoring environment was   * 00041700
*              established in current secondary (for use by a         * 00041800
*              specific user key).                                    * 00041900
*                                                                     * 00042000
*                                                                     * 00042100
*                                                                     * 00042200
*                                                                     * 00042300
*                                                                     * 00042400
*                                                                     * 00042500
*      [COMPCODE=YES|NO]                                            * 00042600
*          is an optional keyword input which indicates whether       * 00042700
*          completion status for this service is needed.              * 00042800
*          DEFAULT: YES                                               * 00042900
*                                                                     * 00043000
*                                                                     * 00043100
*          [COMPCODE=YES]                                             * 00043200
*              indicates that completion status is needed.            * 00043300
*                                                                     * 00043400
*          [COMPCODE=NO]                                              * 00043500
*              indicates that completion status is not needed.        * 00043600
*              Registers 0, 15 cannot be used as reason code and      * 00043700
*              return code registers upon completion of the macro     * 00043800
*              expansion. For this reason neither RETCODE NOR RSNCODE * 00043900
*              may be specified when COMPCODE(NO) is specified.       * 00044000
*              DEFAULT: YES indicates that completion status is       * 00044100
*              needed.                                                * 00044200
*                                                                     * 00044300
*                                                                     * 00044400
*                                                                     * 00044500
*                                                                     * 00044600
*                                                                     * 00044700
*                                                                     * 00044800
*      [RETCODE=xretcode]                                             * 00044900
*          is the name (RS-type) of an optional fullword output       * 00045000
*          variable, or register (2)-(12), into which the return code * 00045100
*          is to be copied from GPR 15.                               * 00045200
*                                                                     * 00045300
*                                                                     * 00045400
*                                                                     * 00045500
*                                                                     * 00045600
*      [RSNCODE=xrsncode]                                             * 00045700
*          is the name (RS-type) of an optional fullword output       * 00045800
*          variable, or register (2)-(12), into which the reason code * 00045900
*          is to be copied from GPR 0.                                * 00046000
*                                                                     * 00046100
*                                                                     * 00046200
*                                                                     * 00046300
*                                                                     * 00046400
*      [PLISTVER=xplistver|IMPLIED_VERSION]                         * 00046500
*          is an optional byte input decimal value in the "0-1" range * 00046600
*          that specifies the macro version.  PLISTVER determines     * 00046700
*          which parameter list is generated.  The macro keys         * 00046800
*          associated with each supported version of the macro are    * 00046900
*          listed in MACRO USAGE NOTE 2.  Note that MAX may be        * 00047000
*          specified instead of a number, and the parameter list will * 00047100
*          be of the largest size currently supported. This size may  * 00047200
*          grow from release to release (thus possibly affecting the  * 00047300
*          amount of storage needed by your program).                 * 00047400
*          DEFAULT: IMPLIED_VERSION.  When PLISTVER is omitted, the   * 00047500
*          default is the lowest version which allows all of the      * 00047600
*          parameters specified on the invocation to be processed.    * 00047700
*                                                                     * 00047800
*                                                                     * 00047900
*                                                                     * 00048000
*01* ABEND CODES:  None.                                              * 00048100
*                                                                     * 00048200
*01* RETURN CODES:                                                    * 00048300
*                                                                     * 00048400
*                                                                     * 00048500
*            0    Name: IwmRetCodeOk                                  * 00048600
*                                                                     * 00048700
*                 Meaning: Successful completion.                     * 00048800
*                                                                     * 00048900
*                 Action: None required.                              * 00049000
*                                                                     * 00049100
*            4    Name: IwmRetCodeWarning                             * 00049200
*                                                                     * 00049300
*                 Meaning: Successful completion, unusual conditions  * 00049400
*                 noted.                                              * 00049500
*                                                                     * 00049600
*                                                                     * 00049700
*                 HEX REASON  MEANING/ACTION                          * 00049800
*                 CODE                                                * 00049900
*                                                                     * 00050000
*                 xxxx0402    Name: IwmRsnCodeNoMonEnv                * 00050100
*                                                                     * 00050200
*                             Meaning:  Input monitoring token        * 00050300
*                             indicates no monitoring environment was * 00050400
*                             established.                            * 00050500
*                                                                     * 00050600
*                             Action: None required.                  * 00050700
*                                                                     * 00050800
*                                                                     * 00050900
*                                                                     * 00051000
*            8    Name: IwmRetCodeInvocError                          * 00051100
*                                                                     * 00051200
*                 Meaning: Invalid invocation environment or          * 00051300
*                 parameters.                                         * 00051400
*                                                                     * 00051500
*                                                                     * 00051600
*                 HEX REASON  MEANING/ACTION                          * 00051700
*                 CODE                                                * 00051800
*                                                                     * 00051900
*                 xxxx081F    Name: IwmRsnCodeNoRelate                * 00052000
*                                                                     * 00052100
*                             Meaning:  NO Parent environment exists  * 00052200
*                             since Relate Function(Continue) has not * 00052300
*                             been performed or has not been          * 00052400
*                             performed subsequent to a Relate        * 00052500
*                             Function(Delete).                       * 00052600
*                                                                     * 00052700
*                             Action: Check for possible storage      * 00052800
*                             overlay and whether Relate              * 00052900
*                             Function(Continue) has been used        * 00053000
*                             properly.                               * 00053100
*                                                                     * 00053200
*                 xxxx0820    Name: IwmRsnCodeBadMonEnv               * 00053300
*                                                                     * 00053400
*                             Meaning:  Monitoring environment does   * 00053500
*                             not pass verification.                  * 00053600
*                                                                     * 00053700
*                 xxxx0822    IwmRsnCodeBadParEnv:  Parent monitoring * 00053800
*                             environment does not pass verification. * 00053900
*                                                                     * 00054000
*                             Action: Check for possible storage      * 00054100
*                             overlay.                                * 00054200
*                                                                     * 00054300
*                                                                     * 00054400
*                                                                     * 00054500
*                                                                     * 00054600
*                                                                     * 00054700
*01* REASON CODES:                                                    * 00054800
*                                                                     * 00054900
*       A unique reason code will be returned whenever the return     * 00055000
*       code is non-zero.  Reason codes, as appropriate, are defined  * 00055100
*       under their corresponding return code.  Reason code and       * 00055200
*       return code constants are defined within IWMYCON.  Note that  * 00055300
*       the high order halfword of register 0, and the reason code    * 00055400
*       variable when specified, may be non-zero and represents       * 00055500
*       diagnostic data which is NOT part of the external interface.  * 00055600
*       The high order halfword should thus be excluded from          * 00055700
*       comparison with the reason code values described above.  The  * 00055800
*       constant, IWMRSNCODE_MASK_CONST defined in IWMYCON, may be    * 00055900
*       used for this purpose.                                        * 00056000
*                                                                     * 00056100
*01* MODULE TYPE:  ASSEM MACRO                                        * 00056200
*                                                                     * 00056300
*02*   PROCESSOR:  ASSEM                                              * 00056400
*                                                                     * 00056500
*01* COMPONENT:  SCWLM                                                * 00056600
*                                                                     * 00056700
*01* DISTRIBUTION LIBRARY: AMACLIB                                    * 00056800
*                                                                     * 00056900
*01* EXAMPLES:                                                        * 00057000
*                                                                     * 00057100
*01* MACRO USAGE NOTES:                                               * 00057200
*                                                                     * 00057300
*                                                                     * 00057400
*    1.  Printing of the macro expansion is controlled by the ZPRINT  * 00057500
*        global macro variable.  Any value other than 'NO' will       * 00057600
*        result in the macro expansion being printed.  The default is * 00057700
*        'YES'.  The following examples illustrate how the ZPRINT     * 00057800
*        variable should be set.                                      * 00057900
*                                                                     * 00058000
*                    GBLC &ZPRINT                                     * 00058100
*            &ZPRINT SETC 'YES'          &ZPRINT SETC 'NO'            * 00058200
*                                                                     * 00058300
*                                                                     * 00058400
*    2.  The IWMMXFER macro supports multiple versions. The macro key * 00058500
*        list  below  contains the version level in which the key was * 00058600
*        first  introduced.  Positionals  are  identified by the word * 00058700
*        'Positional'  followed by the numeric value of its position. * 00058800
*        Nested  positionals  are  preceded  by their outer key.  The * 00058900
*        lowest value represents the original version and the highest * 00059000
*        value  represents  the  most  recent version of the IWMMXFER * 00059100
*        macro.    When  specifying  PLISTVER,  be sure that it is at * 00059200
*        least  as high as the highest version number of all the keys * 00059300
*        being used.                                                  * 00059400
*                                                                     * 00059500
*        VERSION   KEY                                                * 00059600
*                                                                     * 00059700
*              0      COMPCODE                                        * 00059800
*                     FUNCTION                                        * 00059900
*                     MONTKN                                          * 00060000
*                     PARENTENV                                       * 00060100
*                     PARENTKEY                                       * 00060200
*                     PARENTKEYP                                      * 00060300
*                     RUNTIME_VER                                     * 00060400
*                                                                     * 00060500
*                                                                     * 00060600
*                                                                     * 00060700
*01* CHANGE ACTIVITY:                                                 * 00060800
*                                                                     * 00060900
*   Flag LineItem  FMID    Date   ID    Comment                       * 00061000
*                                                                     * 00061100
*    $L0=WLMI     HBB5510 920309 PD16:  Workload Manager I            * 00061200
*    $L1=WLMP     HBB6603 950612 PD16:  Propagate service class for   * 00061300
*                                         Related PBs                 * 00061400
*    $L2=TTRACE   JBB6609 980924 PD88DA:  Copy Transaction Trace      * 00061500
*                                         Token.                      * 00061600
*    $P1=PWY0297  JBB6609 990430 PD88DA:  PARENTKEY should be         * 00061700
*                                         XPARENTKEY.                 * 00061800
****** END OF SPECIFICATIONS *****************************************/ 00061900
*/* TLINE 1 *********************************************************** 00062000
         MACRO                                                          00062100
&XLABEL  IWMMXFER &FUNCTION=,&RUNTIME_VER=,&MONTKN=,&PARENTKEYP=,      *00062200
               &PARENTKEY=,&PARENTENV=,&COMPCODE=,&RETCODE=,&RSNCODE=, *00062300
               &PLISTVER=                                               00062400
.*                                                                      00062500
*                 MACDATE -09/15/99-<1>                                 00062600
.*                                                                      00062700
.*******************************************************************    00062800
.***AB.02  GLOBAL VARIABLES TO CONTROL PRINT AND CODE GENERATION        00062900
.*******************************************************************    00063000
                 GBLC  &ZPRINT     YES=PRINT NO=NO PRINT                00063100
                 GBLC  &ZTEST      YES=TEST NO=NO TEST                  00063200
                 GBLC  &ZSYSTEM    PCCODE10, MVS, SAK, VM, XAX          00063300
.*                                                                      00063400
                 GBLC  &ZIWMMXFER  YES=MACRO USED AT LEAST ONCE         00063500
.*******************************************************************    00063600
.***AB.03  COMMONLY USED LOCAL MACRO VARIABLES                          00063700
.*******************************************************************    00063800
                 LCLC  &ZMS        ERROR MESSAGE WORK AREA              00063900
                 LCLC  &ZCNDX      LAST THREE SYSNDX CHARACTERS         00064000
                 LCLC  &ZCLNG      USED WHEN LENGTH IS NEEDED           00064100
                 LCLC  &ZCGPR      USED WHEN VALUE IS IN A GPR          00064200
                 LCLC  &ZCVAL      USED TO CONTAIN FIXED VALUE          00064300
                 LCLA  &ZAWRK      USED AS A WORK AREA                  00064400
                 LCLA  &ZASIZ      USED FOR SIZE OF VALUE               00064500
                 LCLA  &ZN         NUMERIC WORK VARIABLE                00064600
                 LCLC  &ZC         CHARACTER WORK VARIABLE              00064700
                 LCLC  &ZTLC       CHARACTER TOO LONG VARIABLE          00064800
                 LCLA  &ZTLA       VALUE TOO LONG VARIABLE              00064900
                 LCLA  &ZMACRET    MACRO RETURN CODE                    00065000
&ZMACRET         SETA  0           ASSUME NO ERRORS                     00065100
.*                                                                      00065200
                 LCLC  &ZCSYSLIST(255)          NONXKEY, POS ARRAY      00065300
                 LCLA  &ZASYSLNDX  WORK INDEX FOR ZCSYSLIST()           00065400
                 LCLA  &ZPLLEN     PARAMETER LIST LENGTH                00065500
                 LCLC  &ZENDBASEPL              End of base PL          00065600
                 LCLA  &ZPLWORKA   PARAMETER LIST LENGTH                00065700
.*******************************************************************    00065800
.***AB.04  MACRO VARIABLES FOR RANGES AND SETS OF ARGUMENTS             00065900
.*******************************************************************    00066000
                 LCLA  &ZI         INDEX FOR ARRAY                      00066100
                 LCLA  &ZJ         INDEX FOR PARMS                      00066200
                 LCLA  &ZK         INDEX FOR PARSE                      00066300
                 LCLA  &ZLO        LOW RANGE VALUE                      00066400
                 LCLA  &ZHI        HIGH RANGE VALUE                     00066500
                 LCLC  &ZW         WORK AREA FOR PARM                   00066600
.*******************************************************************    00066700
.***AB.07  DEFINE ALL MACRO VARIABLES                                   00066800
.*******************************************************************    00066900
                 LCLC  &XFUNCTION  ++ VALUE                             00067000
                 LCLC  &XRUNTIME_VER            ++ VALUE                00067100
                 LCLC  &XMONTKN    ++ NAME                              00067200
                 LCLC  &XPARENTKEYP             ++ VALUE                00067300
                 LCLC  &XPARENTKEY              ++ NAME                 00067400
                 LCLC  &XPARENTENV              ++ VALUE                00067500
                 LCLC  &XCOMPCODE  ++ VALUE                             00067600
                 LCLC  &XRETCODE   ++ NAME                              00067700
                 LCLC  &XRSNCODE   ++ NAME                              00067800
                 LCLA  &XPLISTVER  ++ VALUE                             00067900
.*******************************************************************    00068000
.***AB.13  DEFINE MACRO VARIABLES FOR INPUT/OUTPUT PROCESSING           00068100
.*******************************************************************    00068200
                 LCLC  &ZXFUNCTION              ++ INPUT VALUE          00068300
                 LCLC  &ZXRUNTIME_VER           ++ INPUT VALUE          00068400
                 LCLC  &ZXMONTKN   ++ INPUT NAME                        00068500
                 LCLC  &ZXPARENTKEYP            ++ INPUT VALUE          00068600
                 LCLC  &ZXPARENTKEY             ++ INPUT NAME           00068700
                 LCLC  &ZXPARENTENV             ++ INPUT VALUE          00068800
                 LCLC  &ZXCOMPCODE              ++ INPUT VALUE          00068900
                 LCLC  &ZXRETCODE  ++ OUTPUT NAME                       00069000
                 LCLC  &ZXRSNCODE  ++ OUTPUT NAME                       00069100
                 LCLC  &ZXPLISTVER              ++ INPUT VALUE          00069200
.********************************************************************   00069300
.***AC.PLV01  PROCESS PLISTVER                                      *   00069400
.********************************************************************   00069500
&XPLISTVER      SETA  0                                                 00069600
                AIF   (K'&PLISTVER(1) LE 0).ZPLV0                       00069700
                AIF   ('&PLISTVER(1)' NE 'MAX').ZPLV0                   00069800
&XPLISTVER      SETA  1                                                 00069900
.ZPLV0          ANOP  ,                                                 00070000
.*                                                                      00070100
                AIF   (K'&PLISTVER(1) LE 0).ZPVCKE                      00070200
                AIF   ('&PLISTVER(1)' EQ 'IMPLIED_VERSION').ZPVCKE      00070300
                AIF   ('&PLISTVER(1)' EQ 'MAX').ZPVCKE                  00070400
.*-------------------------------------------------------------------   00070500
                AIF   (N'&PLISTVER LE 1).ZPVCK3  CK NUM                 00070600
&ZMS            SETC  '"PLISTVER='         *KPOSA* MNOTE                00070700
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00070800
&ZMS            SETC  '&ZMS "PLISTVER"'                                 00070900
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00071000
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00071100
                AGO   .ZPVCK2                                           00071200
.ZPVCK3         ANOP  ,                                                 00071300
.*-------------------------------------------------------------------   00071400
                AIF   ('&PLISTVER'(1,1) NE '(').ZPVCK2                  00071500
&ZMS            SETC  '"PLISTVER='         *KGPRA* MNOTE                00071600
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00071700
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         00071800
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'                 00071900
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00072000
                AGO   .ZPVCKE                                           00072100
.ZPVCK2         ANOP  ,                                                 00072200
.*-------------------------------------------------------------------   00072300
&ZCVAL          SETC  '&PLISTVER(1)'                                    00072400
                AIF   ('&ZCVAL'(1,1) EQ '(').ZPVCKE  IN GPR             00072500
                AIF   (T'&ZCVAL NE 'N').ZPVCK6  NUMERIC ERR             00072600
&ZN             SETA   &PLISTVER(1)        CONVERT TO ARITHMETIC        00072700
                AIF   (&ZN LT 0).ZPVCK6    TOO LOW                      00072800
                AIF   (&ZN LE 1).ZPVCK4A   NOT HIGH                     00072900
.ZPVCK6         ANOP  ,                                                 00073000
&ZMS            SETC  '"PLISTVER='         *KRNGA* MNOTE                00073100
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00073200
&ZMS            SETC  '&ZMS THE RANGE IS "0-1"'                         00073300
                MNOTE 8,' &ZMS FOR ARGUMENT 1.'                         00073400
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00073500
&XPLISTVER      SETA  1                                                 00073600
                AGO   .ZPVCKE                                           00073700
.*-------------------------------------------------------------------   00073800
.ZPVCK4A        ANOP  ,                                                 00073900
                AIF   (&ZN GE &XPLISTVER).ZPVCK4                        00074000
&ZMS            SETC  'PLISTVER='          *KVALA* MNOTE                00074100
&ZMS            SETC  '&ZMS.&PLISTVER(1)'                               00074200
&ZMS            SETC  '&ZMS., BUT PLISTVER OF'                          00074300
&ZMS            SETC  '&ZMS &XPLISTVER'                                 00074400
                MNOTE 8,' &ZMS IS REQUIRED.'                            00074500
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00074600
                AGO   .ZPVCK5                                           00074700
.ZPVCK4         ANOP  ,                                                 00074800
&XPLISTVER      SETA  &PLISTVER(1)                                      00074900
.ZPVCK5         ANOP  ,                                                 00075000
.ZPVCKE         ANOP  ,                                                 00075100
.********************************************************************   00075200
.***AG.MF02  FULL MACRO SYNTAX CHECKING                                 00075300
.********************************************************************   00075400
                 ACTR  10000                                            00075500
.*------------------------------------------------------------------    00075600
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00075700
&XFUNCTION       SETC  ''          INITIALIZE XVARIABLE                 00075800
.*-------------------------------------------------------------------   00075900
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00076000
.ZG3             ANOP  ,                                                00076100
                 AIF   (K'&FUNCTION(1) LE 0).ZG3A                       00076200
&ZTLC            SETC 'CONTINUE'                                        00076300
                 AIF   ('&FUNCTION(1)' NE '&ZTLC').ZG9                  00076400
&XFUNCTION       SETC  'CONTINUE'  SET KEYWORD                          00076500
                 AIF   (N'&FUNCTION LE 1).ZG3A  CK NUM                  00076600
&ZMS             SETC  '"FUNCTION='             *KPOSA* MNOTE           00076700
&ZMS             SETC  '&ZMS.&FUNCTION"'                                00076800
&ZMS             SETC  '&ZMS "FUNCTION"'                                00076900
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00077000
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00077100
.ZG3A            ANOP  ,                                                00077200
.*------------------------------------------------------------------    00077300
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00077400
&XRUNTIME_VER    SETC  ''          INITIALIZE XVARIABLE                 00077500
.*-------------------------------------------------------------------   00077600
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00077700
.ZG6             ANOP  ,                                                00077800
                 AIF   (K'&RUNTIME_VER(1) LE 0).ZG6A                    00077900
&ZTLC            SETC 'SHORT_FORM'                                      00078000
                 AIF   ('&RUNTIME_VER(1)' NE '&ZTLC').ZG7               00078100
&XRUNTIME_VER    SETC  'SHORT_FORM'             SET KEYWORD             00078200
                 AIF   (N'&RUNTIME_VER LE 1).ZG6A  CK NUM               00078300
&ZMS             SETC  '"RUNTIME_VER='          *KPOSA* MNOTE           00078400
&ZMS             SETC  '&ZMS.&RUNTIME_VER"'                             00078500
&ZMS             SETC  '&ZMS "RUNTIME_VER"'                             00078600
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00078700
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00078800
.ZG6A            ANOP  ,                                                00078900
.*-------------------------------------------------------------------   00079000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00079100
.ZG7             ANOP  ,                                                00079200
&ZTLC            SETC 'MINIMAL'                                         00079300
                 AIF   ('&RUNTIME_VER(1)' NE '&ZTLC').ZG8               00079400
&XRUNTIME_VER    SETC  'MINIMAL'   SET KEYWORD                          00079500
                 AIF   (N'&RUNTIME_VER LE 1).ZG7A  CK NUM               00079600
&ZMS             SETC  '"RUNTIME_VER='          *KPOSA* MNOTE           00079700
&ZMS             SETC  '&ZMS.&RUNTIME_VER"'                             00079800
&ZMS             SETC  '&ZMS "RUNTIME_VER"'                             00079900
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00080000
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00080100
.ZG7A            ANOP  ,                                                00080200
.*------------------------------------------------------------------    00080300
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00080400
.ZG8             ANOP  ,                                                00080500
&ZXRUNTIME_VER   SETC  'INPUT'     SET IN/OUTPUT                        00080600
                 AIF   (K'&XRUNTIME_VER GT 0).ZG8E  VALID ARG           00080700
                 AIF   (T'&RUNTIME_VER EQ 'O').ZG8D  OMITTED            00080800
&ZASYSLNDX       SETA  0                                                00080900
.ZG8A            ANOP  ,           POSITIONAL MACRO KEY                 00081000
&ZASYSLNDX       SETA  &ZASYSLNDX+1                                     00081100
                 AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG8C                  00081200
&ZTLC            SETC 'RUNTIME_VER'                                     00081300
                 AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG8A         00081400
.ZG8B            ANOP  ,                                                00081500
&ZXRUNTIME_VER   SETC  ''          RESET IN/OUTPUT                      00081600
&ZMS             SETC  'THE "RUNTIME_VER" KEY'  *KOPTA* MNOTE           00081700
&ZMS             SETC  '&ZMS MUST CONTAIN ONE'                          00081800
                 MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                 00081900
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00082000
                 AGO   .ZG8E                                            00082100
.ZG8C            ANOP  ,                                                00082200
&ZXRUNTIME_VER   SETC  ''          RESET IN/OUTPUT                      00082300
&ZMS             SETC  '"RUNTIME_VER='          *KUKWA* MNOTE           00082400
&ZMS             SETC  '&ZMS.&RUNTIME_VER"'                             00082500
&ZMS             SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '        00082600
&ZMS             SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'              00082700
&ZMS             SETC  '&ZMS "SHORT_FORM"'                              00082800
&ZMS             SETC  '&ZMS OR "MINIMAL".'                             00082900
                 MNOTE 8,' &ZMS '                                       00083000
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00083100
                 AGO   .ZG8E                                            00083200
.ZG8D            ANOP  ,                                                00083300
&XRUNTIME_VER    SETC  'SHORT_FORM'             SET DEFAULT KEYWORD     00083400
.ZG8E            ANOP  ,                                                00083500
.*-------------------------------------------------------------------   00083600
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00083700
.ZG9             ANOP  ,                                                00083800
&ZTLC            SETC 'RETURN'                                          00083900
                 AIF   ('&FUNCTION(1)' NE '&ZTLC').ZG15                 00084000
&XFUNCTION       SETC  'RETURN'    SET KEYWORD                          00084100
                 AIF   (N'&FUNCTION LE 1).ZG9A  CK NUM                  00084200
&ZMS             SETC  '"FUNCTION='             *KPOSA* MNOTE           00084300
&ZMS             SETC  '&ZMS.&FUNCTION"'                                00084400
&ZMS             SETC  '&ZMS "FUNCTION"'                                00084500
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00084600
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00084700
.ZG9A            ANOP  ,                                                00084800
.*------------------------------------------------------------------    00084900
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00085000
&XRUNTIME_VER    SETC  ''          INITIALIZE XVARIABLE                 00085100
.*-------------------------------------------------------------------   00085200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00085300
.ZG12            ANOP  ,                                                00085400
                 AIF   (K'&RUNTIME_VER(1) LE 0).ZG12A                   00085500
&ZTLC            SETC 'SHORT_FORM'                                      00085600
                 AIF   ('&RUNTIME_VER(1)' NE '&ZTLC').ZG13              00085700
&XRUNTIME_VER    SETC  'SHORT_FORM'             SET KEYWORD             00085800
                 AIF   (N'&RUNTIME_VER LE 1).ZG12A  CK NUM              00085900
&ZMS             SETC  '"RUNTIME_VER='          *KPOSA* MNOTE           00086000
&ZMS             SETC  '&ZMS.&RUNTIME_VER"'                             00086100
&ZMS             SETC  '&ZMS "RUNTIME_VER"'                             00086200
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00086300
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00086400
.ZG12A           ANOP  ,                                                00086500
.*-------------------------------------------------------------------   00086600
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00086700
.ZG13            ANOP  ,                                                00086800
&ZTLC            SETC 'MINIMAL'                                         00086900
                 AIF   ('&RUNTIME_VER(1)' NE '&ZTLC').ZG14              00087000
&XRUNTIME_VER    SETC  'MINIMAL'   SET KEYWORD                          00087100
                 AIF   (N'&RUNTIME_VER LE 1).ZG13A  CK NUM              00087200
&ZMS             SETC  '"RUNTIME_VER='          *KPOSA* MNOTE           00087300
&ZMS             SETC  '&ZMS.&RUNTIME_VER"'                             00087400
&ZMS             SETC  '&ZMS "RUNTIME_VER"'                             00087500
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00087600
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00087700
.ZG13A           ANOP  ,                                                00087800
.*------------------------------------------------------------------    00087900
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00088000
.ZG14            ANOP  ,                                                00088100
&ZXRUNTIME_VER   SETC  'INPUT'     SET IN/OUTPUT                        00088200
                 AIF   (K'&XRUNTIME_VER GT 0).ZG14E  VALID ARG          00088300
                 AIF   (T'&RUNTIME_VER EQ 'O').ZG14D  OMITTED           00088400
&ZASYSLNDX       SETA  0                                                00088500
.ZG14A           ANOP  ,           POSITIONAL MACRO KEY                 00088600
&ZASYSLNDX       SETA  &ZASYSLNDX+1                                     00088700
                 AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG14C                 00088800
&ZTLC            SETC 'RUNTIME_VER'                                     00088900
                 AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG14A        00089000
.ZG14B           ANOP  ,                                                00089100
&ZXRUNTIME_VER   SETC  ''          RESET IN/OUTPUT                      00089200
&ZMS             SETC  'THE "RUNTIME_VER" KEY'  *KOPTA* MNOTE           00089300
&ZMS             SETC  '&ZMS MUST CONTAIN ONE'                          00089400
                 MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                 00089500
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00089600
                 AGO   .ZG14E                                           00089700
.ZG14C           ANOP  ,                                                00089800
&ZXRUNTIME_VER   SETC  ''          RESET IN/OUTPUT                      00089900
&ZMS             SETC  '"RUNTIME_VER='          *KUKWA* MNOTE           00090000
&ZMS             SETC  '&ZMS.&RUNTIME_VER"'                             00090100
&ZMS             SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '        00090200
&ZMS             SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'              00090300
&ZMS             SETC  '&ZMS "SHORT_FORM"'                              00090400
&ZMS             SETC  '&ZMS OR "MINIMAL".'                             00090500
                 MNOTE 8,' &ZMS '                                       00090600
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00090700
                 AGO   .ZG14E                                           00090800
.ZG14D           ANOP  ,                                                00090900
&XRUNTIME_VER    SETC  'SHORT_FORM'             SET DEFAULT KEYWORD     00091000
.ZG14E           ANOP  ,                                                00091100
.*------------------------------------------------------------------    00091200
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00091300
.ZG15            ANOP  ,                                                00091400
&ZXFUNCTION      SETC  'INPUT'     SET IN/OUTPUT                        00091500
                 AIF   (K'&XFUNCTION GT 0).ZG15E  VALID ARG             00091600
                 AIF   (T'&FUNCTION EQ 'O').ZG15D  OMITTED              00091700
&ZASYSLNDX       SETA  0                                                00091800
.ZG15A           ANOP  ,           POSITIONAL MACRO KEY                 00091900
&ZASYSLNDX       SETA  &ZASYSLNDX+1                                     00092000
                 AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG15C                 00092100
&ZTLC            SETC 'FUNCTION'                                        00092200
                 AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG15A        00092300
.ZG15B           ANOP  ,                                                00092400
&ZXFUNCTION      SETC  ''          RESET IN/OUTPUT                      00092500
&ZMS             SETC  'THE "FUNCTION" KEY'     *KOPTA* MNOTE           00092600
&ZMS             SETC  '&ZMS MUST CONTAIN ONE'                          00092700
                 MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                 00092800
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00092900
                 AGO   .ZG15E                                           00093000
.ZG15C           ANOP  ,                                                00093100
&ZXFUNCTION      SETC  ''          RESET IN/OUTPUT                      00093200
&ZMS             SETC  '"FUNCTION='             *KUKWA* MNOTE           00093300
&ZMS             SETC  '&ZMS.&FUNCTION"'                                00093400
&ZMS             SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '        00093500
&ZMS             SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'              00093600
&ZMS             SETC  '&ZMS "CONTINUE"'                                00093700
&ZMS             SETC  '&ZMS OR "RETURN".'                              00093800
                 MNOTE 8,' &ZMS '                                       00093900
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00094000
                 AGO   .ZG15E                                           00094100
.ZG15D           ANOP  ,                                                00094200
&XFUNCTION       SETC  'CONTINUE'  SET DEFAULT KEYWORD                  00094300
.ZG15E           ANOP  ,                                                00094400
.*------------------------------------------------------------------    00094500
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00094600
                 AIF   (K'&FUNCTION(1) GT 0).ZG15F  PARM                00094700
&XFUNCTION       SETC  ''          ENSURE NULL KEYWORD                  00094800
&ZXFUNCTION      SETC  ''          RESET IN/OUTPUT                      00094900
&ZMS             SETC  'THE'                                            00095000
&ZMS             SETC  '&ZMS "FUNCTION" KEY AND ITS'                    00095100
&ZMS             SETC  '&ZMS ARGUMENT ARE REQUIRED.'                    00095200
&ZMS             SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'              00095300
&ZMS             SETC  '&ZMS "CONTINUE"'                                00095400
&ZMS             SETC  '&ZMS OR "RETURN".'                              00095500
                 MNOTE 8,' &ZMS '                                       00095600
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00095700
.ZG15F           ANOP  ,                                                00095800
.*----------------------------------------------------------------***   00095900
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00096000
                 AIF   (N'&MONTKN LE 1).ZG17A   CK NUM                  00096100
&ZMS             SETC  '"MONTKN='  *KPOSA* MNOTE                        00096200
&ZMS             SETC  '&ZMS.&MONTKN"'                                  00096300
&ZMS             SETC  '&ZMS "MONTKN"'                                  00096400
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00096500
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00096600
.ZG17A           ANOP  ,                                                00096700
.*-------------------------------------------------------------------   00096800
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00096900
&ZXMONTKN        SETC  'INPUT'     SET IN/OUTPUT                        00097000
&XMONTKN         SETC  '&MONTKN(1)'             SET XVARIABLE           00097100
                 AIF   (N'&MONTKN GT 1).ZG17B   MULTI PARMS             00097200
&XMONTKN         SETC  '&MONTKN'   SET XVARIABLE                        00097300
.ZG17B           AIF   (K'&MONTKN(1) GT 0).ZG17C                        00097400
&ZXMONTKN        SETC  ''          RESET IN/OUTPUT                      00097500
&ZMS             SETC  ' '         *KRQDA*                              00097600
&ZMS             SETC  '&ZMS "MONTKN" KEY AND ITS'                      00097700
                 MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                 00097800
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00097900
.ZG17C           ANOP  ,                                                00098000
.*-------------------------------------------------------------------   00098100
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00098200
                 AIF   (K'&ZXMONTKN LE 0).ZG17R  NOT I/O                00098300
                 AIF   ('&XMONTKN'(1,1) NE '(').ZG17R                   00098400
&ZCGPR           SETC  '&XMONTKN'(2,K'&XMONTKN-2)                       00098500
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG17P                     00098600
                 AIF   (K'&ZCGPR GT 2).ZG17Q                            00098700
                 AIF   ('&ZCGPR' EQ '0').ZG17Q                          00098800
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00098900
                 AIF   (T'&ZCGPR NE 'N').ZG17Q  INVALID REG NAME        00099000
.ZG17P           ANOP  ,                                                00099100
                 AIF   (T'&ZCGPR NE 'N').ZG17R  NON NUMERIC             00099200
                 AIF   ('&ZCGPR' LT '2').ZG17Q                          00099300
                 AIF   ('&ZCGPR' LE '12').ZG17R                         00099400
.ZG17Q           ANOP  ,                                                00099500
&ZMS             SETC  '"MONTKN='  *KGPRA* MNOTE                        00099600
&ZMS             SETC  '&ZMS.&MONTKN"'                                  00099700
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00099800
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00099900
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00100000
.ZG17R           ANOP  ,                                                00100100
.*------------------------------------------------------------------    00100200
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00100300
&XPARENTKEYP     SETC  ''          INITIALIZE XVARIABLE                 00100400
.*-------------------------------------------------------------------   00100500
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00100600
.ZG21            ANOP  ,                                                00100700
                 AIF   (K'&PARENTKEYP(1) LE 0).ZG21A                    00100800
&ZTLC            SETC 'VALUE'                                           00100900
                 AIF   ('&PARENTKEYP(1)' NE '&ZTLC').ZG25               00101000
&XPARENTKEYP     SETC  'VALUE'     SET KEYWORD                          00101100
                 AIF   (N'&PARENTKEYP LE 1).ZG21A  CK NUM               00101200
&ZMS             SETC  '"PARENTKEYP='           *KPOSA* MNOTE           00101300
&ZMS             SETC  '&ZMS.&PARENTKEYP"'                              00101400
&ZMS             SETC  '&ZMS "PARENTKEYP"'                              00101500
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00101600
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00101700
.ZG21A           ANOP  ,                                                00101800
.*----------------------------------------------------------------***   00101900
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00102000
                 AIF   (N'&PARENTKEY LE 1).ZG23A  CK NUM                00102100
&ZMS             SETC  '"PARENTKEY='            *KPOSA* MNOTE           00102200
&ZMS             SETC  '&ZMS.&PARENTKEY"'                               00102300
&ZMS             SETC  '&ZMS "PARENTKEY"'                               00102400
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00102500
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00102600
.ZG23A           ANOP  ,                                                00102700
.*-------------------------------------------------------------------   00102800
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00102900
&ZXPARENTKEY     SETC  'INPUT'     SET IN/OUTPUT                        00103000
&XPARENTKEY      SETC  '&PARENTKEY(1)'          SET XVARIABLE           00103100
                 AIF   (N'&PARENTKEY GT 1).ZG23B  MULTI PARMS           00103200
&XPARENTKEY      SETC  '&PARENTKEY'             SET XVARIABLE           00103300
.ZG23B           AIF   (K'&PARENTKEY(1) GT 0).ZG23C                     00103400
&ZXPARENTKEY     SETC  ''          RESET IN/OUTPUT                      00103500
&ZMS             SETC  ' '         *KRQDA*                              00103600
&ZMS             SETC  '&ZMS "PARENTKEY" KEY AND ITS'                   00103700
                 MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                 00103800
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00103900
.ZG23C           ANOP  ,                                                00104000
.*-------------------------------------------------------------------   00104100
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00104200
                 AIF   (K'&ZXPARENTKEY LE 0).ZG23R  NOT I/O             00104300
                 AIF   ('&XPARENTKEY'(1,1) NE '(').ZG23R                00104400
&ZCGPR           SETC  '&XPARENTKEY'(2,K'&XPARENTKEY-2)                 00104500
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG23P                     00104600
                 AIF   (K'&ZCGPR GT 2).ZG23Q                            00104700
                 AIF   ('&ZCGPR' EQ '0').ZG23Q                          00104800
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00104900
                 AIF   (T'&ZCGPR NE 'N').ZG23Q  INVALID REG NAME        00105000
.ZG23P           ANOP  ,                                                00105100
                 AIF   (T'&ZCGPR NE 'N').ZG23R  NON NUMERIC             00105200
                 AIF   ('&ZCGPR' LT '2').ZG23Q                          00105300
                 AIF   ('&ZCGPR' LE '12').ZG23R                         00105400
.ZG23Q           ANOP  ,                                                00105500
&ZMS             SETC  '"PARENTKEY='            *KGPRA* MNOTE           00105600
&ZMS             SETC  '&ZMS.&PARENTKEY"'                               00105700
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00105800
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00105900
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00106000
.ZG23R           ANOP  ,                                                00106100
.*-------------------------------------------------------------------   00106200
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00106300
.ZG25            ANOP  ,                                                00106400
&ZTLC            SETC 'PSWKEY'                                          00106500
                 AIF   ('&PARENTKEYP(1)' NE '&ZTLC').ZG26               00106600
&XPARENTKEYP     SETC  'PSWKEY'    SET KEYWORD                          00106700
                 AIF   (N'&PARENTKEYP LE 1).ZG25A  CK NUM               00106800
&ZMS             SETC  '"PARENTKEYP='           *KPOSA* MNOTE           00106900
&ZMS             SETC  '&ZMS.&PARENTKEYP"'                              00107000
&ZMS             SETC  '&ZMS "PARENTKEYP"'                              00107100
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00107200
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00107300
.ZG25A           ANOP  ,                                                00107400
.*------------------------------------------------------------------    00107500
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00107600
&ZCVAL           SETC ''           CLEAR ERROR KEY ACCUMULATOR          00107700
.ZG25A0          AIF   (K'&PARENTKEY LE 0).ZG25A1  OK                   00107800
&ZCVAL           SETC '&ZCVAL PARENTKEY'        INCORRECT KEY USED      00107900
.ZG25A1          AIF   (K'&ZCVAL LE 0).ZG25A2   OK                      00108000
&ZCVAL           SETC '&ZCVAL'(2,K'&ZCVAL-1)                            00108100
&ZMS             SETC  '"PARENTKEYP'            *KMEIA* MNOTE           00108200
&ZMS             SETC  '&ZMS.=&PARENTKEYP"'                             00108300
&ZMS             SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'             00108400
                 MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'             00108500
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00108600
.ZG25A2          ANOP  ,                                                00108700
.*-------------------------------------------------------------------   00108800
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00108900
.ZG26            ANOP  ,                                                00109000
&ZTLC            SETC 'UNKNOWN'                                         00109100
                 AIF   ('&PARENTKEYP(1)' NE '&ZTLC').ZG27               00109200
&XPARENTKEYP     SETC  'UNKNOWN'   SET KEYWORD                          00109300
                 AIF   (N'&PARENTKEYP LE 1).ZG26A  CK NUM               00109400
&ZMS             SETC  '"PARENTKEYP='           *KPOSA* MNOTE           00109500
&ZMS             SETC  '&ZMS.&PARENTKEYP"'                              00109600
&ZMS             SETC  '&ZMS "PARENTKEYP"'                              00109700
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00109800
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00109900
.ZG26A           ANOP  ,                                                00110000
.*------------------------------------------------------------------    00110100
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00110200
&ZCVAL           SETC ''           CLEAR ERROR KEY ACCUMULATOR          00110300
.ZG26A0          AIF   (K'&PARENTKEY LE 0).ZG26A1  OK                   00110400
&ZCVAL           SETC '&ZCVAL PARENTKEY'        INCORRECT KEY USED      00110500
.ZG26A1          AIF   (K'&ZCVAL LE 0).ZG26A2   OK                      00110600
&ZCVAL           SETC '&ZCVAL'(2,K'&ZCVAL-1)                            00110700
&ZMS             SETC  '"PARENTKEYP'            *KMEIA* MNOTE           00110800
&ZMS             SETC  '&ZMS.=&PARENTKEYP"'                             00110900
&ZMS             SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'             00111000
                 MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'             00111100
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00111200
.ZG26A2          ANOP  ,                                                00111300
.*------------------------------------------------------------------    00111400
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00111500
.ZG27            ANOP  ,                                                00111600
&ZXPARENTKEYP    SETC  'INPUT'     SET IN/OUTPUT                        00111700
                 AIF   (K'&XPARENTKEYP GT 0).ZG27E  VALID ARG           00111800
                 AIF   (T'&PARENTKEYP EQ 'O').ZG27D  OMITTED            00111900
&ZASYSLNDX       SETA  0                                                00112000
.ZG27A           ANOP  ,           POSITIONAL MACRO KEY                 00112100
&ZASYSLNDX       SETA  &ZASYSLNDX+1                                     00112200
                 AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG27C                 00112300
&ZTLC            SETC 'PARENTKEYP'                                      00112400
                 AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG27A        00112500
.ZG27B           ANOP  ,                                                00112600
&ZXPARENTKEYP    SETC  ''          RESET IN/OUTPUT                      00112700
&ZMS             SETC  'THE "PARENTKEYP" KEY'   *KOPTA* MNOTE           00112800
&ZMS             SETC  '&ZMS MUST CONTAIN ONE'                          00112900
                 MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                 00113000
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00113100
                 AGO   .ZG27E                                           00113200
.ZG27C           ANOP  ,                                                00113300
&ZXPARENTKEYP    SETC  ''          RESET IN/OUTPUT                      00113400
&ZMS             SETC  '"PARENTKEYP='           *KUKWA* MNOTE           00113500
&ZMS             SETC  '&ZMS.&PARENTKEYP"'                              00113600
&ZMS             SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '        00113700
&ZMS             SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'              00113800
&ZMS             SETC  '&ZMS "VALUE",'                                  00113900
&ZMS             SETC  '&ZMS "PSWKEY",'                                 00114000
&ZMS             SETC  '&ZMS OR "UNKNOWN".'                             00114100
                 MNOTE 8,' &ZMS '                                       00114200
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00114300
                 AGO   .ZG27E                                           00114400
.ZG27D           ANOP  ,                                                00114500
&XPARENTKEYP     SETC  'VALUE'     SET DEFAULT KEYWORD                  00114600
.ZG27E           ANOP  ,                                                00114700
.*------------------------------------------------------------------    00114800
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00114900
                 AIF   (K'&PARENTKEYP(1) GT 0).ZG27F  PARM              00115000
&XPARENTKEYP     SETC  ''          ENSURE NULL KEYWORD                  00115100
&ZXPARENTKEYP    SETC  ''          RESET IN/OUTPUT                      00115200
&ZMS             SETC  'THE'                                            00115300
&ZMS             SETC  '&ZMS "PARENTKEYP" KEY AND ITS'                  00115400
&ZMS             SETC  '&ZMS ARGUMENT ARE REQUIRED.'                    00115500
&ZMS             SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'              00115600
&ZMS             SETC  '&ZMS "VALUE",'                                  00115700
&ZMS             SETC  '&ZMS "PSWKEY",'                                 00115800
&ZMS             SETC  '&ZMS OR "UNKNOWN".'                             00115900
                 MNOTE 8,' &ZMS '                                       00116000
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00116100
.ZG27F           ANOP  ,                                                00116200
.*------------------------------------------------------------------    00116300
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00116400
&XPARENTENV      SETC  ''          INITIALIZE XVARIABLE                 00116500
.*-------------------------------------------------------------------   00116600
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00116700
.ZG30            ANOP  ,                                                00116800
                 AIF   (K'&PARENTENV(1) LE 0).ZG30A                     00116900
&ZTLC            SETC 'NOSWITCH'                                        00117000
                 AIF   ('&PARENTENV(1)' NE '&ZTLC').ZG31                00117100
&XPARENTENV      SETC  'NOSWITCH'  SET KEYWORD                          00117200
                 AIF   (N'&PARENTENV LE 1).ZG30A  CK NUM                00117300
&ZMS             SETC  '"PARENTENV='            *KPOSA* MNOTE           00117400
&ZMS             SETC  '&ZMS.&PARENTENV"'                               00117500
&ZMS             SETC  '&ZMS "PARENTENV"'                               00117600
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00117700
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00117800
.ZG30A           ANOP  ,                                                00117900
.*-------------------------------------------------------------------   00118000
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00118100
.ZG31            ANOP  ,                                                00118200
&ZTLC            SETC 'SECONDARY'                                       00118300
                 AIF   ('&PARENTENV(1)' NE '&ZTLC').ZG32                00118400
&XPARENTENV      SETC  'SECONDARY'              SET KEYWORD             00118500
                 AIF   (N'&PARENTENV LE 1).ZG31A  CK NUM                00118600
&ZMS             SETC  '"PARENTENV='            *KPOSA* MNOTE           00118700
&ZMS             SETC  '&ZMS.&PARENTENV"'                               00118800
&ZMS             SETC  '&ZMS "PARENTENV"'                               00118900
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00119000
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00119100
.ZG31A           ANOP  ,                                                00119200
.*------------------------------------------------------------------    00119300
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00119400
.ZG32            ANOP  ,                                                00119500
&ZXPARENTENV     SETC  'INPUT'     SET IN/OUTPUT                        00119600
                 AIF   (K'&XPARENTENV GT 0).ZG32E  VALID ARG            00119700
                 AIF   (T'&PARENTENV EQ 'O').ZG32D  OMITTED             00119800
&ZASYSLNDX       SETA  0                                                00119900
.ZG32A           ANOP  ,           POSITIONAL MACRO KEY                 00120000
&ZASYSLNDX       SETA  &ZASYSLNDX+1                                     00120100
                 AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG32C                 00120200
&ZTLC            SETC 'PARENTENV'                                       00120300
                 AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG32A        00120400
.ZG32B           ANOP  ,                                                00120500
&ZXPARENTENV     SETC  ''          RESET IN/OUTPUT                      00120600
&ZMS             SETC  'THE "PARENTENV" KEY'    *KOPTA* MNOTE           00120700
&ZMS             SETC  '&ZMS MUST CONTAIN ONE'                          00120800
                 MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                 00120900
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00121000
                 AGO   .ZG32E                                           00121100
.ZG32C           ANOP  ,                                                00121200
&ZXPARENTENV     SETC  ''          RESET IN/OUTPUT                      00121300
&ZMS             SETC  '"PARENTENV='            *KUKWA* MNOTE           00121400
&ZMS             SETC  '&ZMS.&PARENTENV"'                               00121500
&ZMS             SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '        00121600
&ZMS             SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'              00121700
&ZMS             SETC  '&ZMS "NOSWITCH"'                                00121800
&ZMS             SETC  '&ZMS OR "SECONDARY".'                           00121900
                 MNOTE 8,' &ZMS '                                       00122000
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00122100
                 AGO   .ZG32E                                           00122200
.ZG32D           ANOP  ,                                                00122300
&XPARENTENV      SETC  'NOSWITCH'  SET DEFAULT KEYWORD                  00122400
.ZG32E           ANOP  ,                                                00122500
.*------------------------------------------------------------------    00122600
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00122700
                 AIF   (K'&PARENTENV(1) GT 0).ZG32F  PARM               00122800
&XPARENTENV      SETC  ''          ENSURE NULL KEYWORD                  00122900
&ZXPARENTENV     SETC  ''          RESET IN/OUTPUT                      00123000
&ZMS             SETC  'THE'                                            00123100
&ZMS             SETC  '&ZMS "PARENTENV" KEY AND ITS'                   00123200
&ZMS             SETC  '&ZMS ARGUMENT ARE REQUIRED.'                    00123300
&ZMS             SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'              00123400
&ZMS             SETC  '&ZMS "NOSWITCH"'                                00123500
&ZMS             SETC  '&ZMS OR "SECONDARY".'                           00123600
                 MNOTE 8,' &ZMS '                                       00123700
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00123800
.ZG32F           ANOP  ,                                                00123900
.*------------------------------------------------------------------    00124000
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00124100
&XCOMPCODE       SETC  ''          INITIALIZE XVARIABLE                 00124200
.*-------------------------------------------------------------------   00124300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00124400
.ZG35            ANOP  ,                                                00124500
                 AIF   (K'&COMPCODE(1) LE 0).ZG35A                      00124600
&ZTLC            SETC 'YES'                                             00124700
                 AIF   ('&COMPCODE(1)' NE '&ZTLC').ZG36                 00124800
&XCOMPCODE       SETC  'YES'       SET KEYWORD                          00124900
                 AIF   (N'&COMPCODE LE 1).ZG35A  CK NUM                 00125000
&ZMS             SETC  '"COMPCODE='             *KPOSA* MNOTE           00125100
&ZMS             SETC  '&ZMS.&COMPCODE"'                                00125200
&ZMS             SETC  '&ZMS "COMPCODE"'                                00125300
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00125400
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00125500
.ZG35A           ANOP  ,                                                00125600
.*-------------------------------------------------------------------   00125700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00125800
.ZG36            ANOP  ,                                                00125900
&ZTLC            SETC 'NO'                                              00126000
                 AIF   ('&COMPCODE(1)' NE '&ZTLC').ZG37                 00126100
&XCOMPCODE       SETC  'NO'        SET KEYWORD                          00126200
                 AIF   (N'&COMPCODE LE 1).ZG36A  CK NUM                 00126300
&ZMS             SETC  '"COMPCODE='             *KPOSA* MNOTE           00126400
&ZMS             SETC  '&ZMS.&COMPCODE"'                                00126500
&ZMS             SETC  '&ZMS "COMPCODE"'                                00126600
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00126700
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00126800
.ZG36A           ANOP  ,                                                00126900
.*------------------------------------------------------------------    00127000
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00127100
.ZG37            ANOP  ,                                                00127200
&ZXCOMPCODE      SETC  'INPUT'     SET IN/OUTPUT                        00127300
                 AIF   (K'&XCOMPCODE GT 0).ZG37E  VALID ARG             00127400
                 AIF   (T'&COMPCODE EQ 'O').ZG37D  OMITTED              00127500
&ZASYSLNDX       SETA  0                                                00127600
.ZG37A           ANOP  ,           POSITIONAL MACRO KEY                 00127700
&ZASYSLNDX       SETA  &ZASYSLNDX+1                                     00127800
                 AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG37C                 00127900
&ZTLC            SETC 'COMPCODE'                                        00128000
                 AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG37A        00128100
.ZG37B           ANOP  ,                                                00128200
&ZXCOMPCODE      SETC  ''          RESET IN/OUTPUT                      00128300
&ZMS             SETC  'THE "COMPCODE" KEY'     *KOPTA* MNOTE           00128400
&ZMS             SETC  '&ZMS MUST CONTAIN ONE'                          00128500
                 MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                 00128600
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00128700
                 AGO   .ZG37E                                           00128800
.ZG37C           ANOP  ,                                                00128900
&ZXCOMPCODE      SETC  ''          RESET IN/OUTPUT                      00129000
&ZMS             SETC  '"COMPCODE='             *KUKWA* MNOTE           00129100
&ZMS             SETC  '&ZMS.&COMPCODE"'                                00129200
&ZMS             SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '        00129300
&ZMS             SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'              00129400
&ZMS             SETC  '&ZMS "YES"'                                     00129500
&ZMS             SETC  '&ZMS OR "NO".'                                  00129600
                 MNOTE 8,' &ZMS '                                       00129700
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00129800
                 AGO   .ZG37E                                           00129900
.ZG37D           ANOP  ,                                                00130000
&XCOMPCODE       SETC  'YES'       SET DEFAULT KEYWORD                  00130100
.ZG37E           ANOP  ,                                                00130200
.*----------------------------------------------------------------***   00130300
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00130400
                 AIF   (N'&RETCODE LE 1).ZG39A  CK NUM                  00130500
&ZMS             SETC  '"RETCODE='              *KPOSA* MNOTE           00130600
&ZMS             SETC  '&ZMS.&RETCODE"'                                 00130700
&ZMS             SETC  '&ZMS "RETCODE"'                                 00130800
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00130900
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00131000
.ZG39A           ANOP  ,                                                00131100
.*-------------------------------------------------------------------   00131200
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00131300
                 AIF   (K'&RETCODE(1) LE 0).ZG39C  NO PARM              00131400
&ZXRETCODE       SETC  'OUTPUT'    SET OUTPUT                           00131500
&XRETCODE        SETC  '&RETCODE(1)'            SET XVARIABLE           00131600
                 AIF   (N'&RETCODE GT 1).ZG39C                          00131700
&XRETCODE        SETC  '&RETCODE'  SET XVARIABLE                        00131800
.ZG39C           ANOP  ,                                                00131900
.*-------------------------------------------------------------------   00132000
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00132100
                 AIF   (K'&ZXRETCODE LE 0).ZG39R  NOT I/O               00132200
                 AIF   ('&XRETCODE'(1,1) NE '(').ZG39R                  00132300
&ZCGPR           SETC  '&XRETCODE'(2,K'&XRETCODE-2)                     00132400
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG39P                     00132500
                 AIF   (K'&ZCGPR GT 2).ZG39Q                            00132600
                 AIF   ('&ZCGPR' EQ '0').ZG39Q                          00132700
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00132800
                 AIF   (T'&ZCGPR NE 'N').ZG39Q  INVALID REG NAME        00132900
.ZG39P           ANOP  ,                                                00133000
                 AIF   (T'&ZCGPR NE 'N').ZG39R  NON NUMERIC             00133100
                 AIF   ('&ZCGPR' LT '2').ZG39Q                          00133200
                 AIF   ('&ZCGPR' LE '12').ZG39R                         00133300
.ZG39Q           ANOP  ,                                                00133400
&ZMS             SETC  '"RETCODE='              *KGPRA* MNOTE           00133500
&ZMS             SETC  '&ZMS.&RETCODE"'                                 00133600
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00133700
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00133800
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00133900
.ZG39R           ANOP  ,                                                00134000
.*----------------------------------------------------------------***   00134100
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00134200
                 AIF   (N'&RSNCODE LE 1).ZG42A  CK NUM                  00134300
&ZMS             SETC  '"RSNCODE='              *KPOSA* MNOTE           00134400
&ZMS             SETC  '&ZMS.&RSNCODE"'                                 00134500
&ZMS             SETC  '&ZMS "RSNCODE"'                                 00134600
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00134700
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00134800
.ZG42A           ANOP  ,                                                00134900
.*-------------------------------------------------------------------   00135000
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00135100
                 AIF   (K'&RSNCODE(1) LE 0).ZG42C  NO PARM              00135200
&ZXRSNCODE       SETC  'OUTPUT'    SET OUTPUT                           00135300
&XRSNCODE        SETC  '&RSNCODE(1)'            SET XVARIABLE           00135400
                 AIF   (N'&RSNCODE GT 1).ZG42C                          00135500
&XRSNCODE        SETC  '&RSNCODE'  SET XVARIABLE                        00135600
.ZG42C           ANOP  ,                                                00135700
.*-------------------------------------------------------------------   00135800
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00135900
                 AIF   (K'&ZXRSNCODE LE 0).ZG42R  NOT I/O               00136000
                 AIF   ('&XRSNCODE'(1,1) NE '(').ZG42R                  00136100
&ZCGPR           SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                     00136200
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG42P                     00136300
                 AIF   (K'&ZCGPR GT 2).ZG42Q                            00136400
                 AIF   ('&ZCGPR' EQ '0').ZG42Q                          00136500
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00136600
                 AIF   (T'&ZCGPR NE 'N').ZG42Q  INVALID REG NAME        00136700
.ZG42P           ANOP  ,                                                00136800
                 AIF   (T'&ZCGPR NE 'N').ZG42R  NON NUMERIC             00136900
                 AIF   ('&ZCGPR' LT '2').ZG42Q                          00137000
                 AIF   ('&ZCGPR' LE '12').ZG42R                         00137100
.ZG42Q           ANOP  ,                                                00137200
&ZMS             SETC  '"RSNCODE='              *KGPRA* MNOTE           00137300
&ZMS             SETC  '&ZMS.&RSNCODE"'                                 00137400
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00137500
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00137600
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00137700
.ZG42R           ANOP  ,                                                00137800
.******************************************************************     00137900
.***AH.P00 CHECK STANDALONE POSITIONAL VARIABLES                        00138000
.******************************************************************     00138100
                 ACTR  10000                                            00138200
.*----------------------------------------------------------------***   00138300
.***AH.P02 EXTRA POSITIONALS                                            00138400
                 AIF   (N'&SYSLIST LE 0).ZGLISTX  NO EXTRAS             00138500
                 AIF   (N'&SYSLIST NE 2).ZGLISTX1  NOT NULL             00138600
                 AIF   ('&SYSLIST(1)' NE '').ZGLISTX1  NOT NULL         00138700
                 AIF   ('&SYSLIST(2)' EQ '').ZGLISTX  NOT NULL          00138800
.ZGLISTX1        ANOP  ,                                                00138900
&ZCVAL           SETC  ''          ERROR FIELD                          00139000
&ZAWRK           SETA  0           POSITIONAL NUMBER                    00139100
.ZGLIST2         ANOP  ,                                                00139200
&ZAWRK           SETA  &ZAWRK+1    NEXT POSITIONAL                      00139300
                 AIF   (&ZAWRK GT N'&SYSLIST).ZGLIST3  DONE             00139400
&ZCVAL           SETC '&ZCVAL,&SYSLIST(&ZAWRK)'  EXTRA                  00139500
                 AGO   .ZGLIST2                                         00139600
.*                                                                      00139700
.ZGLIST3         ANOP  ,                                                00139800
&ZCVAL           SETC '&ZCVAL'(2,K'&ZCVAL-1)    STRIP COMMA             00139900
&ZMS             SETC  'POSITIONAL ARGUMENT(S),'  *PPOSA* MNOTE         00140000
&ZMS             SETC  '&ZMS "&ZCVAL"'                                  00140100
&ZMS             SETC  '&ZMS CANNOT BE USED.'                           00140200
&ZMS             SETC  '&ZMS NO POSITIONAL ARGUMENTS'                   00140300
                 MNOTE 8,' &ZMS ARE ALLOWED.'                           00140400
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00140500
.ZGLISTX         ANOP  ,                                                00140600
&ZASYSLNDX       SETA  0                                                00140700
.*******************************************************************    00140800
.***AE.ZMR01 NO CODE GENERATED IF ERRORS DETECTED                       00140900
.*******************************************************************    00141000
                 AIF   (&ZMACRET NE 0).ZLX2     ERROR DETECTED          00141100
.*******************************************************************    00141200
.***AE.01  START OF IWMMXFER MACRO CODE                                 00141300
.*******************************************************************    00141400
                 LCLC  &M0M0001                 NAME                    00141500
&M0M0001         SETC  '&XLABEL'                SET NAME                00141600
                 AIF   (K'&XLABEL NE 0).XLAB2                           00141700
&M0M0001         SETC  'M00M&SYSNDX'            DEFAULT NAME            00141800
.*                                                                      00141900
.XLAB2           ANOP  ,                                                00142000
&M0M0001 DS    0H                             IWMMXFER-1                00142100
.*******************************************************************    00142200
.***AE.PR01 PRINT CONTROLS, DEFAULT IS YES                              00142300
.*******************************************************************    00142400
              PUSH  PRINT                                               00142500
                 AIF   ('&ZPRINT' NE 'NO').ZPRINTX  TURN PRINT ON       00142600
                 PRINT OFF         ++ PR01                              00142700
                 AGO   .ZPRNTXX                                         00142800
.ZPRINTX         PRINT ON                                               00142900
.ZPRNTXX         ANOP  ,                                                00143000
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00143100
         LCLC  &T1                                                      00143200
         AIF   ('&XCOMPCODE' EQ 'YES').STARTLOGIC                       00143300
         AIF   ('&XRETCODE' EQ '').RSNCODECHK                           00143400
&T1      SETC  'RETCODE, RSNCODE MAY NOT BE USED WITH COMPCODE(NO)'     00143500
         MNOTE 8,'&T1'                                                  00143600
         MEXIT                                                          00143700
.RSNCODECHK ANOP                                                        00143800
         AIF   ('&XRSNCODE' EQ '').STARTLOGIC                           00143900
&T1      SETC  'RETCODE, RSNCODE MAY NOT BE USED WITH COMPCODE(NO)'     00144000
         MNOTE 8,'&T1'                                                  00144100
         MEXIT                                                          00144200
.STARTLOGIC ANOP                                                        00144300
&T1      SETC  '&MONTKN'                                                00144400
         AIF   ('&MONTKN'(1,1) NE '(').MONTKNRS                         00144500
&T1      SETC  '&MONTKN'(2,K'&MONTKN-2)                                 00144600
&T1      SETC  '0(&T1.)'                                                00144700
.MONTKNRS  ANOP                                                         00144800
.* &T1 IS NOW A VALID BASE-DISPLACEMENT EXPRESSION                      00144900
         ICM   14,15,&T1               FETCH MONITORING TOKEN           00145000
.* GENERATE CODE WHICH DEPENDS ON HOW COMPCODE WAS SPECIFIED            00145100
         AIF   ('&XCOMPCODE' NE 'YES').NOCOMPCODE1                      00145200
.*                                                                      00145300
.********************************************************************** 00145400
.*                                                                      00145500
.*       COMPCODE(YES) code expansion follows                           00145600
.*       This block of code determines whether the input montkn=0,      00145700
.*        and for Runtime_Ver(Short_Form) also checks the eye-catcher.  00145800
.*                                                                      00145900
.********************************************************************** 00146000
.*                                                                      00146100
         BNZ   MONENV&SYSNDX           BRANCH WHEN MON ENV IS PRESENT   00146200
         LA    0,IWMRSNCODENOMONENV    SET REASON CODE = NO MON ENV     00146300
         LA    15,IWMRETCODEWARNING    SET WARNING RETURN CODE          00146400
         B     END&SYSNDX              BRANCH TO END LABEL              00146500
MONENV&SYSNDX DS    0H                 BRANCH LABEL FOR MON ENV PRESENT 00146600
         AIF   ('&XRUNTIME_VER' EQ 'MINIMAL').ENDCOMPCODE1              00146700
         CLC   PB_ID-PB(4,14),=CL4'PB  '                                00146800
         BE    MONENVOK&SYSNDX         BRANCH WHEN MON ENV PASSES       00146900
         LA    0,IWMRSNCODEBADMONENV   SET REASON CODE = BAD MON ENV    00147000
         LA    15,IWMRETCODEINVOCERROR SET INVOCATION ERROR RETURN CODE 00147100
         B     END&SYSNDX              BRANCH TO END LABEL              00147200
MONENVOK&SYSNDX DS    0H               BRANCH LABEL FOR MON ENV OK      00147300
                AGO .ENDCOMPCODE1                                       00147400
.*                                                                      00147500
.********************************************************************** 00147600
.*                                                                      00147700
.*       COMPCODE(NO) code expansion follows                            00147800
.*       This block of code determines whether the input montkn=0,      00147900
.*        and for Runtime_Ver(Short_Form) also checks the eye-catcher.  00148000
.*                                                                      00148100
.********************************************************************** 00148200
.*                                                                      00148300
.NOCOMPCODE1    ANOP                                                    00148400
         BZ    END&SYSNDX              BRANCH TO END LABEL              00148500
         AIF   ('&XRUNTIME_VER' EQ 'MINIMAL').ENDCOMPCODE1              00148600
         CLC   PB_ID-PB(4,14),=CL4'PB  '                                00148700
         BNE   END&SYSNDX              BRANCH TO END LABEL              00148800
.ENDCOMPCODE1    ANOP                                                   00148900
.*                                                                      00149000
.********************************************************************** 00149100
.*                                                                      00149200
.*       COMMON code expansion follows                                  00149300
.*       This block of code determines whether the input PB is related  00149400
.*        to a parent PB (i.e. high order bit is set),                  00149500
.*        or to an ASID/Enclave (high order bit off, but parent tkn^=0) 00149600
.*        or not related at all (parent tkn=0)                          00149700
.*                                                                      00149800
.********************************************************************** 00149900
.*                                                                      00150000
         USING PB,14                                                    00150100
.*                                                                      00150200
         ICM   15,15,PB_PARENT_MONTKN  EXTRACT PARENT MONITORING TOKEN  00150300
         BC    4,IWMMXFER_PAR_EXISTS&SYSNDX BRANCH IF PARENT ENV EXISTS 00150400
         BC    2,IWMMXFER_HOME&SYSNDX  BRANCH IF RELATED TO HOME SPACE  00150500
*                                      PB_PARENT_MONTKN IS ALL ZEROS    00150600
         AIF   ('&XCOMPCODE' NE 'YES').NOCOMPCODE11                     00150700
         LA    0,IWMRSNCODENORELATE    SET REASON CODE = NO RELATE DONE 00150800
         LA    15,IWMRETCODEINVOCERROR SET RC = INVOCATION ERROR        00150900
.NOCOMPCODE11   ANOP                                                    00151000
         B     END&SYSNDX              BRANCH TO END LABEL              00151100
IWMMXFER_PAR_EXISTS&SYSNDX DS 0H       BRANCH LABEL FOR PAR ENV EXISTS  00151200
.*                                                                      00151300
.*                                                                      00151400
          LCLC  &DMIRTVAL1                                              00151500
          LCLC  &DMIRTVAL2                                              00151600
          LCLC  &DMONTVAL1                                              00151700
          LCLC  &DMONTVAL2                                              00151800
          LCLC  &STATEVAL1                                              00151900
          LCLC  &STATEVAL2                                              00152000
          LCLC  &KEYVALUE                                               00152100
&KEYVALUE SETC  'NO'                                                    00152200
         AIF   ('&XFUNCTION' NE 'CONTINUE').ENDCONTINUE                 00152300
.*                                                                      00152400
.*******************************************************************    00152500
.*                                                                      00152600
.*       FOLLOWING IS LOGIC FOR FUNCTION(CONTINUE)                      00152700
.*                                                                      00152800
.*       This block of code sets up the instructions for                00152900
.*        extracting the mirror token of the dependent (input) PB,      00153000
.*        saving the dependent (input) montkn in the parent PB, and     00153100
.*        setting the state to active in the dependent (input) PB       00153200
.*                                                                      00153300
.*******************************************************************    00153400
.*                                                                      00153500
&DMIRTVAL1 SETC  'L'                                                    00153600
&DMIRTVAL2 SETC  '1,PB_MIRROR_TKN-PB(14,0)'                             00153700
.*                                                                      00153800
&DMONTVAL1 SETC  'ST'                                                   00153900
&DMONTVAL2 SETC  '14,PB_DEP_MONTKN-PB(0,15)'                            00154000
.*                                                                      00154100
&STATEVAL1 SETC  'MVI'                                                  00154200
&STATEVAL2 SETC  'PB_STATE,PB_STATE_ACTIVE'                             00154300
        AGO   .EXPANSION                                                00154400
.ENDCONTINUE    ANOP                                                    00154500
.*                                                                      00154600
.*******************************************************************    00154700
.*                                                                      00154800
.*       FOLLOWING IS LOGIC FOR FUNCTION(RETURN)                        00154900
.*                                                                      00155000
.*       This block of code sets up the instructions for                00155100
.*        clearing the dep. mirror token in the parent PB,              00155200
.*        clearing the dependent (input) montkn in the parent PB, and   00155300
.*        setting the state to free in the parent PB                    00155400
.*                                                                      00155500
.*******************************************************************    00155600
&DMIRTVAL1 SETC  'SLR'                                                  00155700
&DMIRTVAL2 SETC  '1,1'                                                  00155800
.*                                                                      00155900
&DMONTVAL1 SETC  'ST'                                                   00156000
&DMONTVAL2 SETC  '1,PB_DEP_MONTKN-PB(0,15)'                             00156100
.*                                                                      00156200
&STATEVAL1 SETC  'MVI'                                                  00156300
&STATEVAL2 SETC  'PB_STATE,PB_STATE_FREE'                               00156400
.*                                                                      00156500
.EXPANSION      ANOP                                                    00156600
.*                                                                      00156700
.*******************************************************************    00156800
.*                                                                      00156900
.*       FOLLOWING IS LOGIC FOR FUNCTION(CONTINUE|RETURN)               00157000
.*                                                                      00157100
.*       This block of code sets up the default instructions for        00157200
.*        changing addressability (DS 0H).                              00157300
.*        These symbolic substitutions will be updated below, as        00157400
.*        needed, to SAC to the correct ASC mode.                       00157500
.*                                                                      00157600
.*******************************************************************    00157700
.*                                                                      00157800
         LCLC  &SACTO1                                                  00157900
         LCLC  &SACTO2                                                  00158000
         LCLC  &SACBACK1                                                00158100
         LCLC  &SACBACK2                                                00158200
&SACTO1  SETC  'DS'                                                     00158300
&SACTO2  SETC  '0H'                                                     00158400
&SACBACK1 SETC  'DS'                                                    00158500
&SACBACK2 SETC  '0H'                                                    00158600
.*                                                                      00158700
         AIF   ('&XPARENTENV' NE 'NOSWITCH').ENDNOSWITCH1               00158800
.*                                                                      00158900
.*******************************************************************    00159000
.*                                                                      00159100
.*       Code expansion for PARENTENV(NOSWITCH) follows                 00159200
.*          for either Function(Continue | Return)                      00159300
.*          and RUNTIME_VER(SHORT_FORM | MINIMAL)                       00159400
.*                                                                      00159500
.*******************************************************************    00159600
.*                                                                      00159700
         AIF   ('&XRUNTIME_VER' EQ 'MINIMAL').MINVERCONT1               00159800
.*                                                                      00159900
.*******************************************************************    00160000
.*                                                                      00160100
.*       Code expansion for PARENTENV(NOSWITCH) follows                 00160200
.*          for either Function(Continue | Return)                      00160300
.*          with RUNTIME_VER(SHORT_FORM)                                00160400
.*                                                                      00160500
.*******************************************************************    00160600
.*                                                                      00160700
         CLC   PB_ID-PB(4,15),=CL4'PB  '                                00160800
         AGO   .COMMONSFVER1                                            00160900
.*                                                                      00161000
.ENDNOSWITCH1   ANOP                                                    00161100
.*                                                                      00161200
.*                                                                      00161300
.*******************************************************************    00161400
.*                                                                      00161500
.*       Code expansion for PARENTENV(SECONDARY) follows                00161600
.*          for either Function(Continue | Return)                      00161700
.*          and RUNTIME_VER(MINIMAL | SHORT_FORM)                       00161800
.*                                                                      00161900
.*******************************************************************    00162000
.*                                                                      00162100
         AIF   ('&XFUNCTION' EQ 'CONTINUE').SKIPEXTABN                  00162200
         ICM  14,15,PB_ABNORMAL_FLAGS  SAVE DEPENDENT PB ABNORMAL FLAGS 00162300
         DROP 14          RELEASE REGISTER 14                           00162400
.SKIPEXTABN ANOP                                                        00162500
.*                                                                      00162600
.*******************************************************************    00162700
.*       The following block of code sets up the SAC to secondary       00162800
.*******************************************************************    00162900
.*                                                                      00163000
&SACTO1  SETC  'SAC'                                                    00163100
&SACTO2  SETC  '256'                                                    00163200
&SACBACK1 SETC  'SAC'                                                   00163300
&SACBACK2 SETC  '0'                                                     00163400
         AIF   ('&XRUNTIME_VER' EQ 'MINIMAL').MINVERCONT1               00163500
.*                                                                      00163600
.*******************************************************************    00163700
.*                                                                      00163800
.*       Code expansion for RUNTIME_VER(SHORT_FORM) follows             00163900
.*          for Parentenv(Secondary)                                    00164000
.*          and either Function(Continue | Return)                      00164100
.*                                                                      00164200
.*******************************************************************    00164300
.*                                                                      00164400
.*       THE PB ACRONYM, REFERENCED AS A LITERAL, RESIDES IN CURRENT    00164500
.*         PRIMARY, AND MUST BE LOADED BEFORE CHANGING PSWKEY (SINCE    00164600
.*         THE MODULE MAY BE IN FETCH-PROTECTED STORAGE) AND BEFORE     00164700
.*         CHANGING ASC MODES.                                          00164800
.*                                                                      00164900
.*                       LOGIC:                                         00165000
.*       REG 0 HAS PB_ID (ALL FLOWS FOR SECONDARY)                      00165100
.*       PARENTKEYP(VALUE) ==> REG 1 HAS KEY NEEDED TO UPDATE PARENT    00165200
.*                             SET UP AR15 FOR PARENT PB                00165300
.*                             SAC TO AR                                00165400
.*                             SET REG 1 TO DEPENDENT MIRROR TOKEN      00165500
.*                                 USING INDEX REGISTER NOTATION        00165600
.*                                                                      00165700
.*       PARENTKEYP(PSWKEY|UNKNOWN) ==> SET REG 1 TO DEP MIRROR TOKEN   00165800
.*                             SAC TO SECONDARY                         00165900
.*                                                                      00166000
         L     0,=CL4'PB  '                                             00166100
         AIF   ('&PARENTKEYP' NE 'VALUE').ENDVALUE   BRANCH IF ^VALUE   00166200
.*                                                                      00166300
.*******************************************************************    00166400
.*       The following block of code handles Parentkeyp(Value)          00166500
.*******************************************************************    00166600
.*                                                                      00166700
         LA    1,1                                                      00166800
         SAR   15,1                    SET AR15 FOR SECONDARY           00166900
.*                                                                      00167000
.*       MUST ANTICIPATE NEED TO CHANGE PSW KEY,KEPT IN CURRENT PRIMARY 00167100
.*                                                                      00167200
&T1      SETC  '&PARENTKEY'                                             00167300
         AIF   ('&PARENTKEY'(1,1) NE '(').PARENTKEY1                    00167400
&T1      SETC  '&PARENTKEY'(2,K'&PARENTKEY-2)                           00167500
&T1      SETC  '0(&T1.)'                                                00167600
.PARENTKEY1 ANOP                                                        00167700
.* &T1 IS NOW A VALID BASE-DISPLACEMENT EXPRESSION                      00167800
         IC    1,&T1                                                    00167900
.*                                                                      00168000
.*******************************************************************    00168100
.*       The following block of code sets up the SAC to AR mode         00168200
.*        for PARENTKEYP(VALUE) and Parentenv(Secondary)                00168300
.*******************************************************************    00168400
.*                                                                      00168500
&SACTO1  SETC  'SAC'                                                    00168600
&SACTO2  SETC  '512'                                                    00168700
&KEYVALUE SETC  'YES'                                                   00168800
.*                                                                      00168900
         AGO  .COMSECSFVER1                                             00169000
.ENDVALUE    ANOP                                                       00169100
.*                                                                      00169200
.*******************************************************************    00169300
.*       The following block of code handles Parentkeyp(Unknown|Pswkey) 00169400
.*       The following instruction either extracts/clears the           00169500
.*        value of the dependent mirror token.                          00169600
.*******************************************************************    00169700
.*                                                                      00169800
         &DMIRTVAL1 &DMIRTVAL2                                          00169900
&DMIRTVAL1 SETC  'DS'                                                   00170000
&DMIRTVAL2 SETC  '0H'                                                   00170100
.COMSECSFVER1 ANOP                                                      00170200
.*                                                                      00170300
.*********************************************************************  00170400
.*                                                                      00170500
.* COMMON CODE FOR RUNTIME_VER(SHORT_FORM) WITH PARENTENV(SECONDARY)    00170600
.* This code establishes addressability, as needed, to the parent env.  00170700
.*  and checks the eye-catcher in the parent PB.                        00170800
.*                                                                      00170900
.*********************************************************************  00171000
.*                                                                      00171100
         &SACTO1 &SACTO2                                                00171200
&SACTO1  SETC  'DS'                                                     00171300
&SACTO2  SETC  '0H'                                                     00171400
         CL    0,PB_ID-PB(0,15)                                         00171500
.*                                                                      00171600
.COMMONSFVER1 ANOP                                                      00171700
.*                                                                      00171800
.*******************************************************************    00171900
.*                                                                      00172000
.*             COMMON CODE FOR SHORT-FORM VERIFICATION                  00172100
.*          for either Function(Continue | Return)                      00172200
.*          and either Parentenv(Noswitch | Secondary)                  00172300
.*                                                                      00172400
.*          This block of code reacts to the earlier test of the        00172500
.*           parent PB eyecatcher, and restores addressability,         00172600
.*           as needed, to current primary.                             00172700
.*                                                                      00172800
.*******************************************************************    00172900
.*                                                                      00173000
         BE    PARENVOK&SYSNDX         BRANCH WHEN PARENT ENV PASSES    00173100
         &SACBACK1 &SACBACK2                                            00173200
         AIF   ('&XCOMPCODE' NE 'YES').NOCOMPCODE12                     00173300
         LA    0,IWMRSNCODEBADPARENV   SET REASON CODE = BAD PAR ENV    00173400
         LA    15,IWMRETCODEINVOCERROR SET INVOCATION ERROR RETURN CODE 00173500
.NOCOMPCODE12   ANOP                                                    00173600
         B     END&SYSNDX              BRANCH TO END LABEL              00173700
PARENVOK&SYSNDX DS    0H               BRANCH LABEL FOR MON ENV OK      00173800
.*                                                                      00173900
.*******************************************************************    00174000
.*                                                                      00174100
.*       Code expansion for RUNTIME_VER(SHORT_FORM | MINIMAL) follows   00174200
.*          for either Function(Continue | Return)                      00174300
.*          and Parentenv(Noswitch | Secondary)                         00174400
.*                                                                      00174500
.*       This block of code performs the PSW key manipulations needed.  00174600
.*                                                                      00174700
.*******************************************************************    00174800
.*                                                                      00174900
.MINVERCONT1 ANOP                                                       00175000
.*                                                                      00175100
.*     THE CODE TO SET THE PSW KEY MUST TOLERATE RUNNING IN AR MODE.    00175200
.*     FOR THIS REASON, THE ADDRESS OF THE BYTE CONTAINING THE KEY      00175300
.*        HAS BEEN SAVED IN GPR01 WHEN NECESSARY (I.E. KEYVALUE=YES)    00175400
.*                                                                      00175500
         AIF   ('&PARENTKEYP' EQ 'PSWKEY').PSWKEY   BRANCH IF PSWKEY OK 00175600
         LR    0,2                 SAVE GPR 2 BEFORE USING IPK          00175700
         IPK                       SAVE PSWKEY IN BITS 24-27 OF GPR2    00175800
         AIF   ('&KEYVALUE' EQ 'YES').SPKAINST      BRANCH IF KEY IN R1 00175900
         AIF   ('&PARENTKEYP' EQ 'VALUE').VALUE     BRANCH IF VALUE     00176000
         SPKA  0(0)                SET THE PSW KEY TO 0                 00176100
         AGO   .PSWKEY                                                  00176200
.*                                                                      00176300
.VALUE   ANOP                                                           00176400
&T1      SETC  '&PARENTKEY'                                             00176500
         AIF   ('&PARENTKEY'(1,1) NE '(').PARENTKEY                     00176600
&T1      SETC  '&PARENTKEY'(2,K'&PARENTKEY-2)                           00176700
&T1      SETC  '0(&T1.)'                                                00176800
.PARENTKEY ANOP                                                         00176900
.* &T1 IS NOW A VALID BASE-DISPLACEMENT EXPRESSION                      00177000
         IC    1,&T1                                                    00177100
.SPKAINST ANOP                                                          00177200
         SPKA  0(1)               SET THE PSW KEY FROM GPR 1 BITS 24-27 00177300
.*                                                                      00177400
.PSWKEY ANOP                                                            00177500
.*                                                                      00177600
.********************************************************************** 00177700
.*       The following block of code                                    00177800
.*        sets/clears the dep mirror token value,                       00177900
.*        establishes addressability, as needed to the parent PB,       00178000
.*        saves the dep mirror token value in the parent PB, and        00178100
.*        saves the dep monitor token value in the parent PB.           00178200
.********************************************************************** 00178300
.*                                                                      00178400
         &DMIRTVAL1 &DMIRTVAL2                                          00178500
         &SACTO1 &SACTO2                                                00178600
         ST    1,PB_DEP_MIRROR_TKN-PB(0,15) SET DEPENDENT MIRROR TOKEN  00178700
         &DMONTVAL1 &DMONTVAL2 SET DEPENDENT MONITORING TOKEN           00178800
         AIF   ('&XFUNCTION' EQ 'CONTINUE').EXTRACTSCL                  00178900
.*                                                                      00179000
.********************************************************************** 00179100
.*                                                                      00179200
.*       Function(Return) code expansion follows                        00179300
.*       This block of code is responsible for propagating the abnormal 00179400
.*        flags from the dependent PB to the parent PB (ORs the two).   00179500
.*                                                                      00179600
.********************************************************************** 00179700
.*                                                                      00179800
         AIF   ('&XPARENTENV' EQ 'SECONDARY').GENABNSEC                 00179900
         L     1,PB_ABNORMAL_FLAGS-PB(0,15)  GET ABNORMAL FLAG          00180000
         O     1,PB_ABNORMAL_FLAGS  OR IN ABNORMAL FLAG FROM DEP PB     00180100
         ST    1,PB_ABNORMAL_FLAGS-PB(0,15)  STORE IN NEW ABNORMAL FLAG 00180200
         AGO   .SKIPGENABN                                              00180300
.GENABNSEC ANOP                                                         00180400
         L     1,PB_ABNORMAL_FLAGS-PB(0,15)  GET ABNORMAL FLAG          00180500
         OR    1,14                 OR IN ABNORMAL FLAG FROM DEP PB     00180600
         ST    1,PB_ABNORMAL_FLAGS-PB(0,15)  STORE IN NEW ABNORMAL FLAG 00180700
         AGO   .SKIPGENABN                                              00180800
.*                                                                      00180900
.********************************************************************** 00181000
.*                                                                      00181100
.*       Function(Continue) code expansion follows                      00181200
.*       This block of code is responsible for extracting the scl token 00181300
.*                                                                      00181400
.********************************************************************** 00181500
.*                                                                      00181600
.EXTRACTSCL ANOP                                                        00181700
         L     15,PB_SC_TKN-PB(0,15)  GET SERVICE CLASS TOKEN           00181800
.*                                                                      00181900
.*                                                                      00182000
.********************************************************************** 00182100
.*                                                                      00182200
.*       Function(Continue | Return) code expansion follows             00182300
.*       This block of code restores addressability to current primary, 00182400
.*        and restores the original PSW key.                            00182500
.*                                                                      00182600
.********************************************************************** 00182700
.*                                                                      00182800
.SKIPGENABN ANOP                                                        00182900
         &SACBACK1 &SACBACK2                                            00183000
.*                                                                      00183100
         AIF   ('&PARENTKEYP' EQ 'PSWKEY').PSWKEY2 BRANCH IF PSWKEY OK  00183200
         SPKA  0(2)                    RESTORE PSWKEY FROM GPR 2        00183300
         LR    2,0                     RESTORE GPR 2 TO ORIGINAL VALUE  00183400
.*                                                                      00183500
.PSWKEY2       ANOP                                                     00183600
         AIF   ('&XFUNCTION' EQ 'CONTINUE').SAVESCLTKN                  00183700
.*                                                                      00183800
.********************************************************************** 00183900
.*                                                                      00184000
.*       Function(Return) code expansion follows                        00184100
.*                                                                      00184200
.********************************************************************** 00184300
.*                                                                      00184400
         AIF   ('&XPARENTENV' EQ 'NOSWITCH').SKIPRESTORE                00184500
&T1      SETC  '&MONTKN'                                                00184600
         AIF   ('&MONTKN'(1,1) NE '(').MONTKNRS2                        00184700
&T1      SETC  '&MONTKN'(2,K'&MONTKN-2)                                 00184800
&T1      SETC  '0(&T1.)'                                                00184900
.MONTKNRS2 ANOP                                                         00185000
.* &T1 IS NOW A VALID BASE-DISPLACEMENT EXPRESSION                      00185100
         ICM   14,15,&T1             REFETCH MONITORING TOKEN           00185200
         USING PB,14                 SET BASING FOR PB                  00185300
.SKIPRESTORE    ANOP                                                    00185400
         SLR   15,15                                                    00185500
         ST    15,PB_SC_TKN            CLEAR SERVICE CLASS TOKEN        00185600
         CLI   PB_VERSION,3            Check if PB is at leaset ver 3   00185700
         BL    LOW1PBVERSION&SYSNDX     PB version lower then 3         00185800
         XC    PB_TRANS_TTOKEN,PB_TRANS_TTOKEN  Clear Trans Trace Token 00185900
LOW1PBVERSION&SYSNDX DS    0H                                           00186000
         AGO   .HOMELABEL                                               00186100
.*                                                                      00186200
.********************************************************************** 00186300
.*                                                                      00186400
.*       Function(Continue) code expansion follows                      00186500
.*                                                                      00186600
.********************************************************************** 00186700
.*                                                                      00186800
.SAVESCLTKN  ANOP                                                       00186900
         ST    15,PB_SC_TKN           SAVE SERVICE CLASS TOKEN          00187000
         CLI   PB_VERSION,3           Check if PB is at least ver 3     00187100
         BL    LOW2PBVERSION&SYSNDX   PB version lower then 3           00187200
         ICM   15,15,PB_PARENT_MONTKN EXTRACT PARENT MONITORING TOKEN   00187300
         AIF   ('&XPARENTENV' EQ 'SECONDARY').MVCPSEC                   00187400
         MVC   PB_TRANS_TTOKEN,PB_TRANS_TTOKEN-PB(15)            SAVE  *00187500
                                      THE TRANSACTION TRACE TOKEN       00187600
         AGO   .NOMVCPSEC                                               00187700
.MVCPSEC     ANOP                                                       00187800
         AIF   ('&PARENTKEYP' NE 'PSWKEY').NOPSWKEY PSWKEY LOGIC        00187900
         LR    1,2                 SAVE GPR 2 BEFORE USING IPK          00188000
         IPK                       SAVE PSWKEY IN BITS 24-27 OF GPR2    00188100
         LR    0,2                 SAVE PSWKEY IN GPR 1                 00188200
         LR    2,1                 RESTORE GPR 2 VALUE                  00188300
         AGO   .MVCPSEC1                                                00188400
.NOPSWKEY    ANOP                                                       00188500
         AIF   ('&PARENTKEYP' NE 'VALUE').NOVALUE VALUE LOGIC           00188600
&T1      SETC  '&PARENTKEY'                                             00188700
         AIF   ('&PARENTKEY'(1,1) NE '(').PARENTKEY2                    00188800
&T1      SETC  '&PARENTKEY'(2,K'&PARENTKEY-2)                           00188900
&T1      SETC  '0(&T1.)'                                                00189000
.PARENTKEY2 ANOP                                                        00189100
.* &T1 IS NOW A VALID BASE-DISPLACEMENT EXPRESSION                      00189200
         IC    0,&T1                                                    00189300
         AGO   .MVCPSEC1                                                00189400
.NOVALUE     ANOP                                                       00189500
         LA    0,0                    SET MVCP PSW KEY TO ZERO          00189600
.MVCPSEC1    ANOP                                                       00189700
         LA    1,32                   LENGTH OF TRANSACTION TRACE TOKEN 00189800
         MVCP  PB_TRANS_TTOKEN(1),PB_TRANS_TTOKEN-PB(15),0             *00189900
                                      SAVE THE TRANSACTION TRACE TOKEN  00190000
.NOMVCPSEC   ANOP                                                       00190100
LOW2PBVERSION&SYSNDX DS    0H                                           00190200
.*                                                                      00190300
.********************************************************************** 00190400
.*                                                                      00190500
.*       Function(Continue | Return) code expansion follows             00190600
.*                                                                      00190700
.********************************************************************** 00190800
.*                                                                      00190900
.HOMELABEL ANOP                                                         00191000
IWMMXFER_HOME&SYSNDX DS 0H                                              00191100
*                                                                       00191200
         &STATEVAL1 &STATEVAL2                                          00191300
         AIF   ('&XCOMPCODE' NE 'YES').ENDINLINE                        00191400
         LA    15,IWMRETCODEOK SET RETURN CODE = OK                     00191500
.ENDINLINE ANOP                                                         00191600
         DROP  14                                                       00191700
END&SYSNDX DS    0H                    END LABEL                        00191800
.*******************************************************************    00191900
.***        RETURN CODE PROCESSING                                      00192000
.*******************************************************************    00192100
         AIF   (N'&RETCODE LE 0).IWMMXFER_ENDRC_EXP                     00192200
         AIF   ('&XRETCODE'(1,1) EQ '(').IWMMXFER_RC_REG                00192300
         AIF   ('&XRETCODE' EQ 'GPR15').IWMMXFER_ENDRC_EXP              00192400
         AIF   ('&XRETCODE' EQ 'REG15').IWMMXFER_ENDRC_EXP              00192500
         AIF   ('&XRETCODE' EQ 'R15').IWMMXFER_ENDRC_EXP                00192600
         AIF   ('&XRETCODE' EQ '15').IWMMXFER_ENDRC_EXP                 00192700
         ST    15,&XRETCODE                                             00192800
         AGO   .IWMMXFER_ENDRC_EXP                                      00192900
.*                                                                      00193000
.IWMMXFER_RC_REG      ANOP  ,                                           00193100
&T1      SETC  '&XRETCODE'(2,K'&XRETCODE-2)                             00193200
         AIF   ('&T1' EQ 'GPR15').IWMMXFER_ENDRC_EXP                    00193300
         AIF   ('&T1' EQ 'REG15').IWMMXFER_ENDRC_EXP                    00193400
         AIF   ('&T1' EQ 'R15').IWMMXFER_ENDRC_EXP                      00193500
         AIF   ('&T1' EQ '15').IWMMXFER_ENDRC_EXP                       00193600
         LR    &T1,15                                                   00193700
.IWMMXFER_ENDRC_EXP   ANOP  ,                                           00193800
.*******************************************************************    00193900
.***        REASON CODE PROCESSING                                      00194000
.*******************************************************************    00194100
         AIF   (N'&RSNCODE LE 0).IWMMXFER_ENDRSN_EXP                    00194200
         AIF   ('&XRSNCODE'(1,1) EQ '(').IWMMXFER_RSN_REG               00194300
         AIF   ('&XRSNCODE' EQ 'GPR0').IWMMXFER_ENDRSN_EXP              00194400
         AIF   ('&XRSNCODE' EQ 'GPR00').IWMMXFER_ENDRSN_EXP             00194500
         AIF   ('&XRSNCODE' EQ 'REG0').IWMMXFER_ENDRSN_EXP              00194600
         AIF   ('&XRSNCODE' EQ 'REG00').IWMMXFER_ENDRSN_EXP             00194700
         AIF   ('&XRSNCODE' EQ 'R0').IWMMXFER_ENDRSN_EXP                00194800
         AIF   ('&XRSNCODE' EQ '0').IWMMXFER_ENDRSN_EXP                 00194900
         AIF   ('&XRSNCODE' EQ '00').IWMMXFER_ENDRSN_EXP                00195000
         ST    0,&XRSNCODE                                              00195100
         AGO   .IWMMXFER_ENDRSN_EXP                                     00195200
.*                                                                      00195300
.IWMMXFER_RSN_REG     ANOP  ,                                           00195400
&T1      SETC '&XRSNCODE'(2,K'&XRSNCODE-2)                              00195500
         AIF  ('&ZCGPR' EQ 'GPR0').IWMMXFER_ENDRSN_EXP                  00195600
         AIF  ('&ZCGPR' EQ 'GPR00').IWMMXFER_ENDRSN_EXP                 00195700
         AIF  ('&ZCGPR' EQ 'REG0').IWMMXFER_ENDRSN_EXP                  00195800
         AIF  ('&ZCGPR' EQ 'REG00').IWMMXFER_ENDRSN_EXP                 00195900
         AIF  ('&ZCGPR' EQ 'R0').IWMMXFER_ENDRSN_EXP                    00196000
         AIF  ('&ZCGPR' EQ '0').IWMMXFER_ENDRSN_EXP                     00196100
         AIF  ('&ZCGPR' EQ '00').IWMMXFER_ENDRSN_EXP                    00196200
         LR   &T1,0                                                     00196300
.IWMMXFER_ENDRSN_EXP  ANOP  ,                                           00196400
.*******************************************************************    00196500
&ZIWMMXFER            SETC  'YES'          SET IWMMXFER USED            00196600
         POP   PRINT                                                    00196700
*                                            IWMMXFER END               00196800
         SPACE 1                                                        00196900
         MEXIT                                                          00197000
.NOCODENEEDED ANOP                                                      00197100
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00197200
.********************************************************************   00197300
.***AL.A01  INTERNAL ARRAY TO PRODUCE FORMATTED CODE                    00197400
.********************************************************************   00197500
                      LCLA  &ZOPN          LIST INSTRUCTION INDEX       00197600
                      LCLA  &ZOPN1         INVOCATION INDEX             00197700
                      LCLC  &ZOPL(4095)    LABEL                        00197800
                      LCLC  &ZOPO(4095)    OPERATION                    00197900
                      LCLC  &ZOPV(4095)    VALUE                        00198000
                      LCLC  &ZOPD(4095)    DESCRIPTION                  00198100
.*                                                                      00198200
&ZOPN                 SETA  0              INITIAL INST INDEX VALUE     00198300
.*******************************************************************    00198400
.***AO.X02  RETURN CODE PROCESSING                                      00198500
.*******************************************************************    00198600
                      AIF   (N'&RETCODE LE 0).ZMRETX                    00198700
                      AIF   ('&XRETCODE'(1,1) EQ '(').ZMRET2            00198800
                      AIF   ('&XRETCODE' EQ 'GPR15').ZMRETX             00198900
                      AIF   ('&XRETCODE' EQ 'REG15').ZMRETX             00199000
                      AIF   ('&XRETCODE' EQ 'R15').ZMRETX               00199100
                      AIF   ('&XRETCODE' EQ '15').ZMRETX                00199200
&ZOPN                 SETA  &ZOPN+1                                     00199300
&ZOPL(&ZOPN)          SETC  ' '                                         00199400
&ZOPO(&ZOPN)          SETC  'ST'                                        00199500
&ZOPV(&ZOPN)          SETC  '15,&XRETCODE'                              00199600
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00199700
                      AGO   .ZMRETX                                     00199800
.*                                                                      00199900
.ZMRET2               ANOP  ,                                           00200000
&ZCGPR                SETC  '&XRETCODE'(2,K'&XRETCODE-2)                00200100
                      AIF   ('&ZCGPR' EQ 'GPR15').ZMRETX                00200200
                      AIF   ('&ZCGPR' EQ 'REG15').ZMRETX                00200300
                      AIF   ('&ZCGPR' EQ 'R15').ZMRETX                  00200400
                      AIF   ('&ZCGPR' EQ '15').ZMRETX                   00200500
&ZOPN                 SETA  &ZOPN+1                                     00200600
&ZOPL(&ZOPN)          SETC  ' '                                         00200700
&ZOPO(&ZOPN)          SETC  'LR'                                        00200800
&ZOPV(&ZOPN)          SETC  '&ZCGPR,15'                                 00200900
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00201000
.ZMRETX               ANOP  ,                                           00201100
.*******************************************************************    00201200
.***AO.X03  REASON CODE PROCESSING                                      00201300
.*******************************************************************    00201400
                      AIF   (N'&RSNCODE LE 0).ZMRSNX                    00201500
                      AIF   ('&XRSNCODE'(1,1) EQ '(').ZMRSN2            00201600
                      AIF   ('&XRSNCODE' EQ 'GPR0').ZMRSNX              00201700
                      AIF   ('&XRSNCODE' EQ 'GPR00').ZMRSNX             00201800
                      AIF   ('&XRSNCODE' EQ 'REG0').ZMRSNX              00201900
                      AIF   ('&XRSNCODE' EQ 'REG00').ZMRSNX             00202000
                      AIF   ('&XRSNCODE' EQ 'R0').ZMRSNX                00202100
                      AIF   ('&XRSNCODE' EQ '0').ZMRSNX                 00202200
                      AIF   ('&XRSNCODE' EQ '00').ZMRSNX                00202300
&ZOPN                 SETA  &ZOPN+1                                     00202400
&ZOPL(&ZOPN)          SETC  ' '                                         00202500
&ZOPO(&ZOPN)          SETC  'ST'                                        00202600
&ZOPV(&ZOPN)          SETC  '0,&XRSNCODE'                               00202700
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00202800
                      AGO   .ZMRSNX                                     00202900
.*                                                                      00203000
.ZMRSN2               ANOP  ,                                           00203100
&ZCGPR                SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                00203200
                      AIF   ('&ZCGPR' EQ 'GPR0').ZMRSNX                 00203300
                      AIF   ('&ZCGPR' EQ 'GPR00').ZMRSNX                00203400
                      AIF   ('&ZCGPR' EQ 'REG0').ZMRSNX                 00203500
                      AIF   ('&ZCGPR' EQ 'REG00').ZMRSNX                00203600
                      AIF   ('&ZCGPR' EQ 'R0').ZMRSNX                   00203700
                      AIF   ('&ZCGPR' EQ '0').ZMRSNX                    00203800
                      AIF   ('&ZCGPR' EQ '00').ZMRSNX                   00203900
&ZOPN                 SETA  &ZOPN+1                                     00204000
&ZOPL(&ZOPN)          SETC  ' '                                         00204100
&ZOPO(&ZOPN)          SETC  'LR'                                        00204200
&ZOPV(&ZOPN)          SETC  '&ZCGPR,0'                                  00204300
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00204400
.ZMRSNX               ANOP  ,                                           00204500
.*******************************************************************    00204600
.***AO.X05  FORMAT GENERATED INSTRUCTIONS                               00204700
.*******************************************************************    00204800
                      ACTR  10000                                       00204900
.*                                                                      00205000
                      LCLA  &ZLC           COLUMN POSITION              00205100
                      LCLA  &ZOPX          LIST TABLE INDEX             00205200
                      LCLC  &ZLL           LABEL                        00205300
                      LCLC  &ZLOP          OPERATION                    00205400
                      LCLC  &ZLV           VALUE                        00205500
                      LCLC  &ZLD           DESCRIPTION                  00205600
.*                                                                      00205700
&ZOPX                 SETA  1                                           00205800
.*******************************************************************    00205900
.***AP.X01  FORMAT GENERATED CODE                                       00206000
.ZL21                 AIF   (&ZOPX GT &ZOPN).ZLX1  B IF DONE            00206100
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00206200
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00206300
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00206400
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00206500
                      AIF   (K'&ZLD LE 0).ZL51                          00206600
&ZLC                  SETA  35             COMMENT COLUMN               00206700
                      AIF   ('&ZLD'(1,1) NE '*').ZL31                   00206800
&ZLC                  SETA  33             COMMENT COLUMN               00206900
.ZL31                 AIF   (K'&ZLV GE &ZLC-16-1).ZL41                  00207000
&ZLV                  SETC  '&ZLV'.' '                                  00207100
                      AGO   .ZL31                                       00207200
.*                                                                      00207300
.ZL41                 ANOP  ,                                           00207400
&ZLV                  SETC  '&ZLV'.' '                                  00207500
.ZL51                 ANOP  ,                                           00207600
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00207700
.*                                                                      00207800
&ZLL     &ZLOP &ZLV                                                     00207900
.*                                                                      00208000
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00208100
                      AGO   .ZL21          CONTINUE LOOPING             00208200
.*                                                                      00208300
.ZLX1                 ANOP  ,                                           00208400
.*******************************************************************    00208500
.***AP.X02  END OF IWMMXFER MACRO                                       00208600
&ZIWMMXFER            SETC  'YES'          SET IWMMXFER USED            00208700
         POP   PRINT                                                    00208800
*                                            IWMMXFER-1                 00208900
         SPACE 1                                                        00209000
.ZLX2                 ANOP  ,                                           00209100
         MEND                                                           00209200
**********************************************************************/ 00209300
*/*PB.OC01 INVOKE MACRO---------------------------------------------*/  00209400
*%IWMMXFER: MACRO KEYS(FUNCTION,RUNTIME_VER,MONTKN,PARENTKEYP,          00209500
*                 PARENTKEY,PARENTENV,COMPCODE,RETCODE,RSNCODE,         00209600
*                 PLISTVER);                                            00209700
*  ANS('?'||MACLABEL||' '||'IWMMXFEP '||MACLIST||                       00209800
*         ' '||MACKEYS||';') COL(MACLMAR);                              00209900
*%END IWMMXFER;                                                         00210000
