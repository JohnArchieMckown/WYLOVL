*%SCHEDIRB: MACRO KEYS(PLISTVER,EPPTR,TCBPTR,RBPTR,MODE,KEY,SVAREA,     00001000
*                 PARAMPTR,IQEPTR,RETCODE,MF);                          00002000
*/**** START OF SPECIFICATIONS **************************************** 00003000
*                                                                     * 00004000
*                                                                     * 00005000
*01* MACRO NAME:  SCHEDIRB                              -12/16/94-<0> * 00006000
*                                                                     * 00007000
*                                                                     * 00008000
*01* DESCRIPTIVE NAME:  Schedule IRB Services                         * 00009000
*                                                                     * 00010000
*01* PROPRIETARY STATEMENT:                                           * 00011000
*                                                                     * 00012000
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 00013000
*     THIS MACRO IS "RESTRICTED MATERIALS OF IBM"                     * 00014000
*     5655-068 (C) COPYRIGHT IBM CORP. 1992, 1995                     * 00015500
*                                                                     * 00017000
* STATUS= JBB5522                                                     * 00018000
*                                                                     * 00019000
*                                                                     * 00020000
*                                                                     * 00021000
*01* FUNCTION:                                                        * 00022000
*                                                                     * 00023000
*                                                                     * 00024000
*      The SCHEDIRB macro builds and schedules an IRB for asynchonous * 00025000
*      execution. The IRB may be scheduled for execution under any    * 00026000
*      task in the home address space or optionally to execute before * 00027000
*      a particular RB under the current task in the current address  * 00028000
*      space. Optionally, the invoker of SCHEDIRB can choose to       * 00029000
*      supply an IQE/IRB to be scheduled.                             * 00030000
*                                                                     * 00031000
*      REGISTER INFORMATION:                                          * 00032000
*                                                                     * 00033000
*                                                                     * 00034000
*      o   Registers on Entry to SCHEDIRB macro:                      * 00035000
*                                                                     * 00036000
*                                                                     * 00037000
*          -   General Purpose Registers                              * 00038000
*                                                                     * 00039000
*                                                                     * 00040000
*              Reg  0-15   Irrelevent                                 * 00041000
*                                                                     * 00042000
*                                                                     * 00043000
*                                                                     * 00043500
*          -   Access Registers                                       * 00044000
*                                                                     * 00045000
*                                                                     * 00046000
*              Reg  0-15   Irrelevant                                 * 00047000
*                                                                     * 00048000
*                                                                     * 00049000
*                                                                     * 00050000
*                                                                     * 00050300
*                                                                     * 00050600
*      o   Registers on Return From SCHEDIRB macro:                   * 00051000
*                                                                     * 00052000
*                                                                     * 00053000
*          -   General Purpose Registers                              * 00054000
*                                                                     * 00055000
*                                                                     * 00056000
*              Reg  0-1    Unpredictable                              * 00057000
*                                                                     * 00058000
*              Reg  2-13   Preserved                                  * 00059000
*                                                                     * 00060000
*              Reg 15      Unpredictable                              * 00061000
*                                                                     * 00062000
*              Reg 15      Return code                                * 00063000
*                                                                     * 00064000
*                                                                     * 00065000
*                                                                     * 00065500
*          -   Access Registers                                       * 00066000
*                                                                     * 00067000
*                                                                     * 00068000
*              Reg  0-1    Unpredictable                              * 00069000
*                                                                     * 00070000
*              Reg  2-13   Preserved                                  * 00071000
*                                                                     * 00072000
*              Reg  14-15  Unpredictable                              * 00073000
*                                                                     * 00074000
*                                                                     * 00075000
*                                                                     * 00076000
*                                                                     * 00076300
*                                                                     * 00076600
*      o   Registers on Entry to the asynchonous exit routine:        * 00077000
*                                                                     * 00078000
*                                                                     * 00079000
*          -   General Purpose Registers                              * 00080000
*                                                                     * 00081000
*                                                                     * 00082000
*              Reg  0      IQE address (if specified on IQEPTR=       * 00083000
*                          keyword), otherwise unpredictable          * 00084000
*                                                                     * 00085000
*              Reg 1       Parameter list address (as specified on    * 00086000
*                          PARAMPTR= keyword)                         * 00087000
*                                                                     * 00088000
*              Reg 2-12    Unpredictable                              * 00089000
*                                                                     * 00090000
*              Reg 13      Address of problem program register save   * 00091000
*                          area (if SVAREA=YES was specified)         * 00092000
*                                                                     * 00093000
*              Reg 14      Return address                             * 00094000
*                                                                     * 00095000
*              Reg 15      Unpredictable                              * 00096000
*                                                                     * 00097000
*                                                                     * 00098000
*                                                                     * 00098500
*          -   Access Registers                                       * 00099000
*                                                                     * 00100000
*                                                                     * 00101000
*              Reg  0-15   Unpredictable                              * 00102000
*                                                                     * 00103000
*                                                                     * 00104000
*                                                                     * 00105000
*                                                                     * 00106000
*                                                                     * 00108000
*                                                                     * 00109000
*                                                                     * 00111000
*01* ENVIRONMENT:                                                     * 00113000
*                                                                     * 00115000
*                                                                     * 00117000
*      Dispatchable unit mode: Task or SRB mode.                      * 00117200
*                                                                     * 00117400
*      Minimum authorization: Supervisor state or PKM allowing keys   * 00117600
*                        0-7.                                         * 00117800
*                                                                     * 00118000
*      AMODE:            31-bit.                                      * 00118200
*                                                                     * 00118400
*      ASC mode:         Primary or Access Register.                  * 00118600
*                                                                     * 00119000
*      Serialization:                                                 * 00120000
*                                                                     * 00121000
*                                                                     * 00121700
*                        o   Enabled or Disabled for I/O and external * 00122400
*                            interrupts.                              * 00123100
*                                                                     * 00124000
*                        o   Local lock must be held.                 * 00125000
*                                                                     * 00126000
*                        o   Control parameters must be in the        * 00127000
*                            primary address space.                   * 00128000
*                                                                     * 00129000
*                        o   HASN = PASN or HASN = SASN.              * 00129600
*                                                                     * 00130200
*                                                                     * 00131000
*                                                                     * 00131500
*      Restrictions:                                                  * 00132000
*                                                                     * 00133000
*                                                                     * 00134000
*                        o   The caller must have addressability to   * 00135000
*                            (and hold the Local lock of) the home    * 00136000
*                            space where the asynchronous exit will   * 00137000
*                            get control.                             * 00138000
*                                                                     * 00139000
*                        o   If the RBPTR= keyword is specified, the  * 00140000
*                            invoker must be in task mode.            * 00141000
*                                                                     * 00142000
*                        o   The caller must specify a 31-bit address * 00143000
*                            for the asynchronous exit entry point.   * 00144000
*                                                                     * 00145000
*                        o   If the RBPTR= keyword is specified and   * 00146000
*                            the system has suppressed asynchronous   * 00147000
*                            exits, the caller will receive return    * 00148000
*                            code '08'X.                              * 00149000
*                                                                     * 00150000
*                            NOTE:  If SCHEDIRB was invoked out of an * 00151000
*                            IRB or a timer exit this condition will  * 00152000
*                            not exist.                               * 00153000
*                                                                     * 00154000
*                        o   If the RBPTR= keyword is specified and   * 00155000
*                            the current task is in                   * 00156000
*                            Function-Must-Complete mode, the caller  * 00157000
*                            will receive return code '0C'X.          * 00158000
*                                                                     * 00159000
*                            NOTE:  If SCHEDIRB was invoked out of an * 00160000
*                            IRB or a timer exit this condition will  * 00161000
*                            not exist.                               * 00162000
*                                                                     * 00167000
*                        o   If the RBPTR= keyword is specified and   * 00168000
*                            this RB is the current RB or is not on   * 00169000
*                            the current task's RB chain, the caller  * 00170000
*                            will receive return code '10'X.          * 00171000
*                                                                     * 00172000
*                                                                     * 00173000
*                                                                     * 00174000
*                                                                     * 00176000
*                                                                     * 00176600
*01* SYNTAX:                                                          * 00177200
*                                                                     * 00177800
*[xlabel]  SCHEDIRB   [ PLISTVER                                      * 00178400
*                                =xplistver|IMPLIED_VERSION]        * 00179000
*                     ,EPPTR=xepptr                                  * 00179600
*                    |    ,TCBPTR=xtcbptr                            * 00180200
*                    |    ,RBPTR=xrbptr                              * 00180800
*                    |   [,MODE=PROB]                                * 00181400
*                    |   [,MODE=SUPR]                                * 00182000
*                    |   [,KEY=PROP]                                 * 00182600
*                    |   [,KEY=SUPR]                                 * 00183200
*                    |   [,SVAREA=NO]                                * 00183800
*                    |   [,SVAREA=YES]                               * 00184400
*                    |    [,PARAMPTR=xparamptr|NO_PARAM]            * 00185000
*                     ,IQEPTR=xiqeptr                                * 00187000
*                     [,RETCODE=xretcode]                             * 00189000
*                    [,MF=S]                                         * 00190000
*                    [,MF=(L,xmfctrl,xmfattr|0D)]                  * 00191000
*                    [,MF=(E,xmfctrl,COMPLETE)]                    * 00192000
*                                                                     * 00193000
*                                                                     * 00194000
*      Where:                                                         * 00195000
*                                                                     * 00196000
*                                                                     * 00197000
*      [xlabel]                                                       * 00198000
*          is an optional symbol, starting in column 1, that is the   * 00199000
*          name on the SCHEDIRB macro invocation.  The name must      * 00200000
*          conform to the rules for an ordinary assembler language    * 00201000
*          symbol.                                                    * 00202000
*          DEFAULT: No name.                                          * 00203000
*                                                                     * 00204000
*                                                                     * 00205000
*                                                                     * 00206000
*                                                                     * 00206100
*      [PLISTVER(xplistver|IMPLIED_VERSION)]                        * 00206200
*          is an optional byte input decimal value in the "0-0" range * 00206300
*          that specifies the macro version.  PLISTVER is the only    * 00206400
*          key allowed on the list form of MF and determines which    * 00206500
*          parameter list is generated.  Note that MAX may be         * 00206600
*          specified instead of a number, and the parameter list will * 00206700
*          be of the largest size currently supported. This size may  * 00206800
*          grow from release to release (thus possibly affecting the  * 00206900
*          amount of storage needed by your program).  If your        * 00207000
*          program can tolerate this, IBM recommends that you always  * 00207100
*          specify MAX when creating the list form parameter list as  * 00207200
*          that will ensure that the list form parameter list is      * 00207300
*          always long enough to hold whatever parameters might be    * 00207400
*          specified on the execute form.                             * 00207500
*          DEFAULT: IMPLIED_VERSION.  When PLISTVER is omitted, the   * 00207600
*          default is the lowest version which allows all of the      * 00207700
*          parameters specified on the invocation to be processed.    * 00207800
*                                                                     * 00207900
*                                                                     * 00208000
*                                                                     * 00208100
*                                                                     * 00208200
*      The following is a set of mutually exclusive keys.  This set   * 00208300
*      is required; only one key must be specified.                   * 00208400
*                                                                     * 00209000
*                                                                     * 00211000
*      EPPTR(xepptr)                                                  * 00212000
*          belongs to a set of mutually exclusive keys. It  is the    * 00213200
*          name (RS-type) (or address in register (2)-(12) ASM only)  * 00214400
*          of a  pointer input that contains the address of the AMODE * 00215600
*          31 asynchronous exit routine.                              * 00216800
*                                                                     * 00218000
*                                                                     * 00219000
*          The following is a set of mutually exclusive keys.  This   * 00220000
*          set is required; only one key must be specified.           * 00221000
*                                                                     * 00222000
*                                                                     * 00223000
*          TCBPTR(xtcbptr)                                            * 00224000
*              belongs to a set of mutually exclusive keys. It  is    * 00225100
*              the name (RS-type) (or address in register (2)-(12)    * 00226200
*              ASM only) of a  pointer input that contains the        * 00227300
*              address of the TCB in the home address space under     * 00228400
*              which the asynchronous exit is to run (i.e., no        * 00229500
*              guarantee is given as to when the IRB will execute).   * 00230600
*                                                                     * 00232000
*          RBPTR(xrbptr)                                              * 00233000
*              belongs to a set of mutually exclusive keys. It  is    * 00234000
*              the name (RS-type) (or address in register (2)-(12)    * 00235000
*              ASM only) of a  pointer input that contains the        * 00236000
*              address of the RB under the current TCB in the current * 00237000
*              address space before which the IRB will be queued for  * 00238000
*              execution (i.e., the IRB will execute before the       * 00239000
*              target RB will execute).                               * 00240000
*                                                                     * 00241000
*                                                                     * 00242000
*                                                                     * 00243000
*          End of a set of mutually exclusive required keys.          * 00244000
*                                                                     * 00245000
*                                                                     * 00246000
*                                                                     * 00247000
*          [MODE(PROB|SUPR)]                                        * 00248000
*              is an optional keyword input that describes the mode   * 00249000
*              in which the asynchronous exit routine operates.       * 00250000
*              DEFAULT: PROB                                          * 00251000
*                                                                     * 00252000
*                                                                     * 00253000
*              [MODE(PROB)]                                           * 00254000
*                  indicates problem mode                             * 00255000
*                                                                     * 00256000
*              [MODE(SUPR)]                                           * 00257000
*                  indicates supervisor mode                          * 00258000
*                                                                     * 00259000
*                                                                     * 00260000
*                                                                     * 00261000
*                                                                     * 00262000
*                                                                     * 00262300
*                                                                     * 00262600
*          [KEY(PROP|SUPR)]                                         * 00263000
*              is an optional keyword input that describes the key in * 00264000
*              which the asynchronous exit routine operates           * 00265000
*              DEFAULT: PROP                                          * 00266000
*                                                                     * 00267000
*                                                                     * 00268000
*              [KEY(PROP)]                                            * 00269000
*                  indicates to extract the key from the target TCB.  * 00270000
*                                                                     * 00271000
*              [KEY(SUPR)]                                            * 00272000
*                  indicates to use key zero.                         * 00273000
*                                                                     * 00273300
*                                                                     * 00273600
*                                                                     * 00274000
*                                                                     * 00275000
*                                                                     * 00276000
*                                                                     * 00277000
*          [SVAREA(NO|YES)]                                         * 00278000
*              is an optional keyword input that describes whether or * 00279000
*              not to obtain a 72-byte register save area from the    * 00280000
*              virtual storage assigned to the task specified by the  * 00281000
*              TCBPTR= keyword.                                       * 00282000
*              DEFAULT: NO                                            * 00283000
*                                                                     * 00284000
*                                                                     * 00285000
*              [SVAREA(NO)]                                           * 00286000
*                  indicates no save area is to be obtained.          * 00287000
*                                                                     * 00288000
*              [SVAREA(YES)]                                          * 00289000
*                  indicates that a save area is to be obtained.      * 00290000
*                                                                     * 00291000
*                                                                     * 00292000
*                                                                     * 00293000
*                                                                     * 00294000
*                                                                     * 00294300
*                                                                     * 00294600
*          [PARAMPTR(xparamptr|NO_PARAM)]                           * 00295000
*              is the name (RS-type) (or address in register (2)-(12) * 00296000
*              ASM only) of an optional  pointer input that contains  * 00297000
*              the address of a parameter list to be passed to the    * 00298000
*              asynchronous exit routine.                             * 00299000
*              DEFAULT: NO_PARAM                                      * 00300000
*                                                                     * 00301000
*                                                                     * 00302000
*                                                                     * 00302500
*      IQEPTR(xiqeptr)                                                * 00303000
*          belongs to a set of mutually exclusive keys. It  is the    * 00304000
*          name (RS-type) (or address in register (2)-(12) ASM only)  * 00305000
*          of a  pointer input that contains the address of the IQE   * 00306000
*          whose IRB is to be queued for asynchonous execution. Note  * 00307000
*          that if IQE is specified, SCHEDIRB will not obtain a new   * 00308000
*          IQE/IRB pair to be scheduled.                              * 00309000
*                                                                     * 00310000
*                                                                     * 00311000
*                                                                     * 00312000
*      End of a set of mutually exclusive required keys.              * 00322000
*                                                                     * 00323000
*                                                                     * 00324000
*                                                                     * 00325000
*      [RETCODE(xretcode)]                                            * 00326000
*          is the name (RS-type) of an optional fullword output       * 00327000
*          variable (or register (2)-(12) ASM only) into which the    * 00328000
*          return code is to be copied from GPR 15.                   * 00329000
*                                                                     * 00329500
*                                                                     * 00330000
*                                                                     * 00331000
*                                                                     * 00332000
*      [MF(S|L|E)]                                                  * 00333000
*          is an optional keyword input which specifies the macro     * 00334000
*          form.                                                      * 00335000
*          DEFAULT: S                                                 * 00336000
*                                                                     * 00337000
*                                                                     * 00338000
*          [MF(S)]                                                    * 00339000
*              specifies the standard form of the macro.  The "S"     * 00340000
*              form generates code to put the parameters into the     * 00341000
*              parameter list and invoke the desired service.  Full   * 00342000
*              checking for required macro keys is done along with    * 00343000
*              supplying defaults for omitted optional parameters.    * 00344000
*              The ?EPILOG macro must be invoked at the end of the    * 00345000
*              module.                                                * 00346000
*                                                                     * 00347000
*              For assembly language code modules, the "S" form       * 00348000
*              generates code to put the parameters into an in-line   * 00349000
*              parameter list and invoke the desired service.  Full   * 00350000
*              checking for required macro keys is done along with    * 00351000
*              supplying defaults for omitted optional parameters.    * 00352500
*                                                                     * 00354000
*          [MF(L,xmfctrl,xmfattr|BDY(DWORD))]                       * 00355000
*              specifies the list form of the macro.  The "L" form    * 00356000
*              defines an area to be used for the parameter list.     * 00357000
*              Only the PLISTVER key may be specified on the          * 00357400
*              invocation.  All other macro parameters are flagged as * 00357800
*              errors.  If PLISTVER is not specified, the original    * 00358200
*              parameter list definition is used.                     * 00358600
*                                                                     * 00359000
*            ,xmfctrl                                                 * 00360000
*              is a required input.  It is the name of a storage area * 00361000
*              for the parameter list.                                * 00362000
*                                                                     * 00363000
*            ,xmfattr|BDY(DWORD)                                    * 00364000
*              is an optional 60 character input string that varies   * 00365000
*              from 1 to 60 characters. It can contain any value that * 00366000
*              is valid on an assembler DS pseudo-op                  * 00367000
*              (assembler-only). You can use this parameter to force  * 00368000
*              boundary alignment of the parameter list.              * 00369000
*              DEFAULT: 0D for Assembler, BDY(DWORD) for PL/AS, which * 00370000
*              forces the parameter list to a doubleword boundary.    * 00371000
*                                                                     * 00372000
*          [MF(E,xmfctrl,COMPLETE)]                                 * 00373000
*              specifies the execute form of the macro.  The "E" form * 00374000
*              generates code to put the parameters into the          * 00375000
*              parameter list specified by xmfctrl and provides full  * 00376000
*              syntax checking with default setting.                  * 00377000
*                                                                     * 00378000
*            ,xmfctrl                                                 * 00379000
*              is a required input.  It is the name (RS-type) (or     * 00380000
*              address in register (1)-(12) ASM only) of a storage    * 00381000
*              area for the parameter list.                           * 00382000
*                                                                     * 00383000
*            ,COMPLETE                                              * 00384000
*              is an optional keyword input which specifies the       * 00385000
*              degree of macro parameter syntax checking.             * 00386000
*              DEFAULT: COMPLETE                                      * 00387000
*                                                                     * 00388000
*                                                                     * 00389000
*              COMPLETE   Checking for required macro keys is done    * 00390000
*                        and defaults are supplied for omitted        * 00390500
*                        optional parameters.                         * 00391000
*                                                                     * 00391500
*                                                                     * 00392000
*                                                                     * 00392500
*                                                                     * 00393000
*                                                                     * 00394000
*                                                                     * 00395000
*                                                                     * 00396000
*01* RETURN CODES:                                                    * 00397000
*                                                                     * 00398000
*                                                                     * 00399000
*       00        Successful completion.                              * 00400000
*                                                                     * 00401000
*       08        The RBPTR= keyword was specified, but the system    * 00402000
*                 has suppressed asynchonous exits.                   * 00403000
*                                                                     * 00404000
*       0C        The RBPTR= keyword was specified, but the current   * 00405000
*                 task is in Function-Must-Complete mode.             * 00406000
*                                                                     * 00407000
*       10        The RBPTR= keyword was specified, but the RB is the * 00409500
*                 current RB or is not on the current task's RB       * 00412000
*                 chain.                                              * 00413000
*                                                                     * 00413500
*                                                                     * 00414000
*                                                                     * 00415000
*01* REASON CODES:  None.                                             * 00416000
*                                                                     * 00417000
*01* MODULE TYPE:  ASSEM-PL/AS MACRO                                  * 00418000
*                                                                     * 00419000
*02*   PROCESSOR:  ASSEM-PL/AS                                        * 00420000
*                                                                     * 00421000
*01* COMPONENT:  SC1C5                                                * 00422000
*                                                                     * 00423000
*01* DISTRIBUTION LIBRARY: AMACLIB                                    * 00424000
*                                                                     * 00425000
*01* MACRO USAGE NOTES:                                               * 00426000
*                                                                     * 00427000
*                                                                     * 00428000
*    1.  Printing of the macro expansion is controlled by the ZPRINT  * 00429000
*        global macro variable.  Any value other than 'NO' will       * 00430000
*        result in the macro expansion being printed.  The default is * 00431000
*        'YES'.  The following examples illustrate how the ZPRINT     * 00432000
*        variable should be set.                                      * 00433000
*                                                                     * 00434000
*                    GBLC &ZPRINT                                     * 00435000
*            &ZPRINT SETC 'YES'          &ZPRINT SETC 'NO'            * 00436000
*                                                                     * 00437000
*                                                                     * 00438000
*    2.  All   keys   currently   contained  in  the  SCHEDIRB  macro * 00438100
*        correspond  to  version  0.   If you specify PLISTVER, use a * 00438200
*        value of 0 or MAX.                                           * 00438300
*                                                                     * 00438400
*                                                                     * 00438500
*                                                                     * 00438600
*                                                                     * 00438700
*01* CHANGE ACTIVITY:                                                 * 00439000
*                                                                     * 00440000
*   Flag LineItem  FMID    Date   ID    Comment                       * 00441000
*                                                                     * 00442000
*    $L0=POSIX    HBB4430 911128 PD16CU:  SCHEDIRB macro              * 00443000
*    $P1=POSIX    HBB4430 920318 PD16CU:  Disallow RBPTR with IQEPTR  * 00443500
*    $L1=PR522    JBB5522 941216 PD00XB:  Improve prolog wording      * 00443700
****** END OF SPECIFICATIONS *****************************************/ 00444000
*/********************************************************************* 00445000
         MACRO                                                          00446000
&XLABEL  SCHEDIRB &PLISTVER=,&EPPTR=,&TCBPTR=,&RBPTR=,&MODE=,&KEY=,    *00447000
               &SVAREA=,&PARAMPTR=,&IQEPTR=,&RETCODE=,&MF=              00448000
.*                                                                      00449000
*              MACDATE -12/16/94-<0>                                    00450000
.*                                                                      00451000
.*******************************************************************    00452000
.***AB.02  GLOBAL VARIABLES TO CONTROL PRINT AND CODE GENERATION        00453000
.*******************************************************************    00454000
              GBLC  &ZPRINT     YES=PRINT NO=NO PRINT                   00455000
              GBLC  &ZTEST      YES=TEST NO=NO TEST                     00456000
              GBLC  &ZSYSTEM    PCCODE10, MVS, SAK, VM, XAX             00457000
.*                                                                      00458000
              GBLC  &ZSCHEDIRB  YES=MACRO USED AT LEAST ONCE            00459000
.*******************************************************************    00460000
.***AB.03  COMMONLY USED LOCAL MACRO VARIABLES                          00461000
.*******************************************************************    00462000
              LCLC  &ZMS        ERROR MESSAGE WORK AREA                 00463000
              LCLC  &ZCNDX      LAST THREE SYSNDX CHARACTERS            00464000
              LCLC  &ZCLNG      USED WHEN LENGTH IS NEEDED              00465000
              LCLC  &ZCGPR      USED WHEN VALUE IS IN A GPR             00466000
              LCLC  &ZCVAL      USED TO CONTAIN FIXED VALUE             00467000
              LCLA  &ZAWRK      USED AS A WORK AREA                     00468000
              LCLA  &ZASIZ      USED FOR SIZE OF VALUE                  00469000
              LCLA  &ZN         NUMERIC WORK VARIABLE                   00470000
              LCLC  &ZC         CHARACTER WORK VARIABLE                 00471000
              LCLC  &ZTLC       CHARACTER TOO LONG VARIABLE             00472000
              LCLA  &ZTLA       VALUE TOO LONG VARIABLE                 00473000
              LCLA  &ZMACRET    MACRO RETURN CODE                       00474000
&ZMACRET      SETA  0           ASSUME NO ERRORS                        00475000
.*                                                                      00476000
              LCLC  &ZCSYSLIST(255)             NONXKEY, POS ARRAY      00477000
              LCLA  &ZASYSLNDX  WORK INDEX FOR ZCSYSLIST()              00478000
              LCLA  &ZPLLEN     PARAMETER LIST LENGTH                   00479000
              LCLC  &ZENDBASEPL                 End of base PL          00479100
              LCLA  &ZPLWORKA   PARAMETER LIST LENGTH                   00479200
.*******************************************************************    00479300
.***AB.04  MACRO VARIABLES FOR RANGES AND SETS OF ARGUMENTS             00479400
.*******************************************************************    00479500
              LCLA  &ZI         INDEX FOR ARRAY                         00479600
              LCLA  &ZJ         INDEX FOR PARMS                         00479700
              LCLA  &ZK         INDEX FOR PARSE                         00479800
              LCLA  &ZLO        LOW RANGE VALUE                         00479900
              LCLA  &ZHI        HIGH RANGE VALUE                        00480000
              LCLC  &ZW         WORK AREA FOR PARM                      00480100
.********************************************************************   00480200
.***AB.05  INVOKE MVS MACROS TO CONTROL CODE GENERATION                 00481000
.********************************************************************   00482000
              GBLC  &SYSSPLV    SP LEVEL 1,2,3 -SPLEVEL                 00483000
              GBLC  &SYSASCE    SYSTEM STATE P ANY AR-SYSSTATE          00484000
.*                                                                      00485000
              AIF   (K'&SYSASCE GT 0).ZSYS4     SYS STATE DEFINED       00486000
              AIF   (K'&SYSSPLV GT 0).ZSYS2     SP LEVEL DEFINED        00487000
              SPLEVEL  TEST                                             00488000
.ZSYS2        ANOP  ,                                                   00489000
              AIF   ('&SYSSPLV' EQ '1').ZSYS3   PRE SP 3.1              00490000
              AIF   ('&SYSSPLV' EQ '2').ZSYS3   PRE SP 3.1              00491000
              SYSSTATE TEST                                             00492000
              AGO   .ZSYS4                                              00493000
.ZSYS3        ANOP  ,                                                   00494000
&SYSASCE      SETC  'P'         ASSUME SYSSTATE PRIMARY                 00495000
.ZSYS4        ANOP  ,                                                   00496000
.*******************************************************************    00497000
.***AB.07  DEFINE ALL MACRO VARIABLES                                   00498000
.*******************************************************************    00499000
              LCLA  &XPLISTVER  ++ VALUE                                00499500
              LCLC  &XDUMMY2    ++ NAME                                 00500000
              LCLC  &XEPPTR     ++ NAME                                 00501000
              LCLC  &XDUMMY1    ++ NAME                                 00502000
              LCLC  &XTCBPTR    ++ NAME                                 00503000
              LCLC  &XRBPTR     ++ NAME                                 00504000
              LCLC  &XMODE      ++ VALUE                                00505000
              LCLC  &XKEY       ++ VALUE                                00506000
              LCLC  &XSVAREA    ++ VALUE                                00507000
              LCLC  &XPARAMPTR  ++ NAME                                 00508000
              LCLC  &XIQEPTR    ++ NAME                                 00509000
              LCLC  &XRETCODE   ++ NAME                                 00510000
              LCLC  &XMF        ++ VALUE                                00511000
              LCLC  &XMFCTRL    ++ NAME                                 00512000
              LCLC  &XMFATTR    ++ VALUE                                00513000
              LCLC  &XMFSCK     ++ VALUE                                00514000
.*******************************************************************    00515000
.***AB.13  DEFINE MACRO VARIABLES FOR INPUT/OUTPUT PROCESSING           00516000
.*******************************************************************    00517000
              LCLC  &ZXPLISTVER                 ++ INPUT VALUE          00517500
              LCLC  &ZXDUMMY2   ++ INPUT NAME                           00518000
              LCLC  &ZXEPPTR    ++ INPUT NAME                           00519000
              LCLC  &ZXDUMMY1   ++ INPUT NAME                           00520000
              LCLC  &ZXTCBPTR   ++ INPUT NAME                           00521000
              LCLC  &ZXRBPTR    ++ INPUT NAME                           00522000
              LCLC  &ZXMODE     ++ INPUT VALUE                          00523000
              LCLC  &ZXKEY      ++ INPUT VALUE                          00524000
              LCLC  &ZXSVAREA   ++ INPUT VALUE                          00525000
              LCLC  &ZXPARAMPTR                 ++ INPUT NAME           00526000
              LCLC  &ZXIQEPTR   ++ INPUT NAME                           00527000
              LCLC  &ZXRETCODE  ++ OUTPUT NAME                          00528000
              LCLC  &ZXMF       ++ INPUT VALUE                          00529000
              LCLC  &ZXMFCTRL   ++ INPUT NAME                           00530000
              LCLC  &ZXMFATTR   ++ INPUT VALUE                          00531000
              LCLC  &ZXMFSCK    ++ INPUT VALUE                          00532000
.********************************************************************   00533000
.***AC.PLV01  PROCESS PLISTVER                                      *   00533100
.********************************************************************   00533200
&XPLISTVER      SETA  0                                                 00533300
                AIF   (K'&PLISTVER(1) LE 0).ZPLV0                       00533400
                AIF   ('&PLISTVER(1)' NE 'MAX').ZPLV0                   00533500
&XPLISTVER      SETA  0                                                 00533600
.ZPLV0          ANOP  ,                                                 00533700
.*                                                                      00533800
                AIF   (K'&PLISTVER(1) LE 0).ZPVCKE                      00533900
                AIF   ('&PLISTVER(1)' EQ 'IMPLIED_VERSION').ZPVCKE      00534000
                AIF   ('&PLISTVER(1)' EQ 'MAX').ZPVCKE                  00534100
.*-------------------------------------------------------------------   00534200
                AIF   (N'&PLISTVER LE 1).ZPVCK3  CK NUM                 00534300
&ZMS            SETC  '"PLISTVER='         *KPOSA* MNOTE                00534400
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00534500
&ZMS            SETC  '&ZMS "PLISTVER"'                                 00534600
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00534700
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00534800
                AGO   .ZPVCK2                                           00534900
.ZPVCK3         ANOP  ,                                                 00535000
.*-------------------------------------------------------------------   00535100
                AIF   ('&PLISTVER'(1,1) NE '(').ZPVCK2                  00535200
&ZMS            SETC  '"PLISTVER='         *KGPRA* MNOTE                00535300
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00535400
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         00535500
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'                 00535600
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00535700
                AGO   .ZPVCKE                                           00535800
.ZPVCK2         ANOP  ,                                                 00535900
.*-------------------------------------------------------------------   00536000
&ZN             SETA   &PLISTVER(1)        CONVERT TO ARITHMETIC        00536100
                AIF   (&ZN GE &XPLISTVER).ZPVCK4                        00536200
&ZMS            SETC  'PLISTVER='          *KVALA* MNOTE                00536300
&ZMS            SETC  '&ZMS.&PLISTVER(1)'                               00536400
&ZMS            SETC  '&ZMS., BUT PLISTVER OF'                          00536500
&ZMS            SETC  '&ZMS &XPLISTVER'                                 00536600
                MNOTE 8,' &ZMS IS REQUIRED.'                            00536700
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00536800
                AGO   .ZPVCK5                                           00536900
.ZPVCK4         ANOP  ,                                                 00537000
&XPLISTVER      SETA  &PLISTVER(1)                                      00537100
.ZPVCK5         ANOP  ,                                                 00537200
.*-------------------------------------------------------------------   00537300
&ZCVAL          SETC  '&PLISTVER(1)'                                    00537400
                AIF   ('&ZCVAL'(1,1) EQ '(').ZPVCKE  IN GPR             00537500
                AIF   (T'&ZCVAL NE 'N').ZPVCK6  NUMERIC ERR             00537600
                AIF   (&XPLISTVER LT 0).ZPVCK6  TOO LOW                 00537700
                AIF   (&XPLISTVER LE 0).ZPVCKE  NOT HIGH                00537800
.ZPVCK6         ANOP   ,                                                00537900
&ZMS            SETC  '"PLISTVER='         *KRNGA* MNOTE                00538000
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00538100
&ZMS            SETC  '&ZMS THE RANGE IS "0-0"'                         00538200
                MNOTE 8,' &ZMS FOR ARGUMENT 1.'                         00538300
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00538400
.ZPVCKE         ANOP   ,                                                00538500
.********************************************************************   00538600
.***AG.MF01 PROCESS MF MACRO FORMS                                      00538700
.********************************************************************   00538800
              ACTR  10000                                               00538900
.*------------------------------------------------------------------    00539000
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00539100
&XMF          SETC  ''          INITIALIZE XVARIABLE                    00539200
.*-------------------------------------------------------------------   00540000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00541000
.ZG35         ANOP  ,                                                   00542000
&ZTLC         SETC 'S'                                                  00543000
              AIF   ('&MF(1)' NE '&ZTLC').ZG36                          00544000
&XMF          SETC  'S'         SET KEYWORD                             00545000
              AIF   (N'&MF LE 1).ZG35A          CK NUM                  00546000
&ZMS          SETC  '"MF='      *KPOSA* MNOTE                           00547000
&ZMS          SETC  '&ZMS.&MF"'                                         00548000
&ZMS          SETC  '&ZMS "MF"'                                         00549000
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00550000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00551000
.ZG35A        ANOP  ,                                                   00552000
.*-------------------------------------------------------------------   00553000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00554000
.ZG36         ANOP  ,                                                   00555000
&ZTLC         SETC 'L'                                                  00556000
              AIF   ('&MF(1)' NE '&ZTLC').ZG43                          00557000
&XMF          SETC  'L'         SET KEYWORD                             00558000
              AIF   (N'&MF LE 3).ZG36A          CK NUM                  00559000
&ZMS          SETC  '"MF='      *KPOSA* MNOTE                           00560000
&ZMS          SETC  '&ZMS.&MF"'                                         00561000
&ZMS          SETC  '&ZMS "MF"'                                         00562000
              MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'                00563000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00564000
.ZG36A        ANOP  ,                                                   00565000
.*-------------------------------------------------------------------   00566000
.***AG.KKCTL08 -MF(L) SPECIAL CHECK                                     00567000
              AIF   (N'&SYSLIST NE 0).ZG36B     POSITIONALS?            00568000
              AIF   ('&EPPTR' NE '').ZG36B      KEYS?                   00569000
              AIF   ('&TCBPTR' NE '').ZG36B     KEYS?                   00570000
              AIF   ('&RBPTR' NE '').ZG36B      KEYS?                   00571000
              AIF   ('&MODE' NE '').ZG36B       KEYS?                   00572000
              AIF   ('&KEY' NE '').ZG36B        KEYS?                   00573000
              AIF   ('&SVAREA' NE '').ZG36B     KEYS?                   00574000
              AIF   ('&PARAMPTR' NE '').ZG36B   KEYS?                   00575000
              AIF   ('&IQEPTR' NE '').ZG36B     KEYS?                   00576000
              AIF   ('&RETCODE' NE '').ZG36B    KEYS?                   00577000
              AGO    .ZG36C     INVOCATION OKAY                         00578000
.ZG36B        ANOP  ,                                                   00579000
&ZMS          SETC  'THE "L" FORM OF "MF"'      *MFLA* MNOTE            00580000
&ZMS          SETC  '&ZMS CAN ONLY HAVE'                                00581000
&ZMS          SETC  '&ZMS THE "PLISTVER" KEY'                           00582000
              MNOTE 8,' &ZMS SPECIFIED ON THE INVOCATION.'              00583000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00584000
.ZG36C        ANOP  ,                                                   00585000
.*-------------------------------------------------------------------   00586000
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00587000
&ZXMFCTRL     SETC  'INPUT'     SET IN/OUTPUT                           00588000
&XMFCTRL      SETC  '&MF(2,1)'  SET XVARIABLE                           00589000
              AIF   (N'&MF(2) GT 1).ZG38B       MULTI PARMS             00590000
&XMFCTRL      SETC  '&MF(2)'    SET XVARIABLE                           00591000
.ZG38B        AIF   (K'&MF(2) GT 0).ZG38C                               00592000
&ZXMFCTRL     SETC  ''          RESET IN/OUTPUT                         00593000
&ZMS          SETC  'WHEN "L" IS SPECIFIED'     *KRQDA*                 00594000
&ZMS          SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'                 00595000
              MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                        00596000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00597000
.ZG38C        ANOP  ,                                                   00598000
.*-------------------------------------------------------------------   00599000
.***AG.KCK01 NAME, OPT RQD INPUT, POS(2) -GPR NOT ALLOWED               00600000
              AIF   (K'&ZXMFCTRL LE 0).ZG38P    NOT I/O                 00601000
              AIF   ('&XMFCTRL'(1,1) NE '(').ZG38P                      00602000
&ZXMFCTRL     SETC  ''          RESET IN/OUTPUT                         00603000
&ZMS          SETC  '"MF='      *KGPRA* MNOTE                           00604000
&ZMS          SETC  '&ZMS.&MF"'                                         00605000
&ZMS          SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'           00606000
              MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 2.'                   00607000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00608000
.ZG38P        ANOP  ,                                                   00609000
.*-------------------------------------------------------------------   00610000
.***AG.KXVAR13 VALUE, OPT INPUT, POS(3) -XVARIABLE                      00611000
&ZXMFATTR     SETC  'INPUT'     SET IN/OUTPUT                           00612000
&XMFATTR      SETC  '0D'                                                00613000
              AIF   (K'&MF(3) LE 0).ZG41B       PARM                    00614000
&XMFATTR      SETC  '&MF(3,1)'  SET XVARIABLE                           00615000
              AIF   (N'&MF(3) GT 1).ZG41B       MULTI PARMS             00616000
&XMFATTR      SETC  '&MF(3)'    SET XVARIABLE                           00617000
.ZG41B        ANOP  ,                                                   00618000
.*-------------------------------------------------------------------   00619000
.***AG.KCK01 VALUE, OPT INPUT, POS(3) -GPR NOT ALLOWED                  00620000
              AIF   (K'&ZXMFATTR LE 0).ZG41P    NOT I/O                 00621000
              AIF   ('&XMFATTR'(1,1) NE '(').ZG41P                      00622000
&ZXMFATTR     SETC  ''          RESET IN/OUTPUT                         00623000
&ZMS          SETC  '"MF='      *KGPRA* MNOTE                           00624000
&ZMS          SETC  '&ZMS.&MF"'                                         00625000
&ZMS          SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'           00626000
              MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 3.'                   00627000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00628000
.ZG41P        ANOP  ,                                                   00629000
.*-------------------------------------------------------------------   00630000
.***AG.KCK03 VALUE, OPT INPUT, POS(3) -CHARACTER LENGTH                 00631000
              AIF   (K'&ZXMFATTR LE 0).ZG41S    NOT I/O                 00632000
              AIF   (K'&XMFATTR LE 60).ZG41S    LNG OK                  00633000
&ZXMFATTR     SETC  ''          RESET IN/OUTPUT                         00634000
&ZMS          SETC  '"MF='      *KLNGA* MNOTE                           00635000
&ZMS          SETC  '&ZMS.&MF"'                                         00636000
&ZMS          SETC  '&ZMS ARGUMENT 3 EXCEEDS THE MAXIMUM'               00637000
              MNOTE 8,' &ZMS LENGTH OF 60 CHARACTERS.'                  00638000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00639000
.ZG41S        ANOP  ,                                                   00640000
.*-------------------------------------------------------------------   00641000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00642000
.ZG43         ANOP  ,                                                   00643000
&ZTLC         SETC 'E'                                                  00644000
              AIF   ('&MF(1)' NE '&ZTLC').ZG51                          00645000
&XMF          SETC  'E'         SET KEYWORD                             00646000
              AIF   (N'&MF LE 3).ZG43A          CK NUM                  00647000
&ZMS          SETC  '"MF='      *KPOSA* MNOTE                           00648000
&ZMS          SETC  '&ZMS.&MF"'                                         00649000
&ZMS          SETC  '&ZMS "MF"'                                         00650000
              MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'                00651000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00652000
.ZG43A        ANOP  ,                                                   00653000
.*-------------------------------------------------------------------   00654000
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00655000
&ZXMFCTRL     SETC  'INPUT'     SET IN/OUTPUT                           00656000
&XMFCTRL      SETC  '&MF(2,1)'  SET XVARIABLE                           00657000
              AIF   (N'&MF(2) GT 1).ZG45B       MULTI PARMS             00658000
&XMFCTRL      SETC  '&MF(2)'    SET XVARIABLE                           00659000
.ZG45B        AIF   (K'&MF(2) GT 0).ZG45C                               00660000
&ZXMFCTRL     SETC  ''          RESET IN/OUTPUT                         00661000
&ZMS          SETC  'WHEN "E" IS SPECIFIED'     *KRQDA*                 00662000
&ZMS          SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'                 00663000
              MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                        00664000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00665000
.ZG45C        ANOP  ,                                                   00666000
.*-------------------------------------------------------------------   00667000
.***AG.KCK02 NAME, OPT RQD INPUT, POS(2) -GPR OUT OF RANGE              00668000
              AIF   (K'&ZXMFCTRL LE 0).ZG45R    NOT I/O                 00669000
              AIF   ('&XMFCTRL'(1,1) NE '(').ZG45R                      00670000
&ZCGPR        SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)                          00671000
              AIF   ('&ZCGPR'(1,1) NE '0').ZG45P                        00672000
              AIF   (K'&ZCGPR GT 2).ZG45Q                               00673000
              AIF   ('&ZCGPR' EQ '0').ZG45Q                             00674000
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00675000
              AIF   (T'&ZCGPR NE 'N').ZG45Q     INVALID REG NAME        00676000
.ZG45P        ANOP  ,                                                   00677000
              AIF   (T'&ZCGPR NE 'N').ZG45R     NON NUMERIC             00678000
              AIF   ('&ZCGPR' LT '1').ZG45Q                             00679000
              AIF   ('&ZCGPR' LE '12').ZG45R                            00680000
.ZG45Q        ANOP  ,                                                   00681000
&ZMS          SETC  '"MF='      *KGPRA* MNOTE                           00682000
&ZMS          SETC  '&ZMS.&MF"'                                         00683000
&ZMS          SETC  '&ZMS ARGUMENT 2 MUST SPECIFY A REGISTER'           00684000
              MNOTE 8,' &ZMS IN THE RANGE (1)-(12).'                    00685000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00686000
.ZG45R        ANOP  ,                                                   00687000
.*-------------------------------------------------------------------   00688000
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00689000
&XMFSCK       SETC  ''          INITIALIZE XVARIABLE                    00690000
.ZG49A   AIF   ('&MF(3)' NE 'COMPLETE').ZG50A                           00691000
&XMFSCK       SETC  'COMPLETE'  SET KEYWORD                             00692000
.*-------------------------------------------------------------------   00693000
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00694000
.ZG50A        AIF   (K'&XMFSCK GT 0).ZG50C      KEYWORD                 00695000
              AIF   (K'&MF(3) LE 0).ZG50B                               00696000
&ZMS          SETC  '"MF='      *KUKWA* MNOTE                           00697000
&ZMS          SETC  '&ZMS.&MF"'                                         00698000
&ZMS          SETC  '&ZMS ARGUMENT 3 IS AN UNKNOWN KEYWORD. '           00699000
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                 00700000
&ZMS          SETC  '&ZMS "COMPLETE".'          VALID KEYWORD           00700600
              MNOTE 8,' &ZMS '                                          00701200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00702000
.ZG50B        ANOP  ,                                                   00703000
&XMFSCK       SETC  'COMPLETE'  SET DEFAULT KEYWORD                     00704000
.ZG50C        ANOP  ,                                                   00705000
&ZXMFSCK      SETC  'INPUT'     SET IN/OUTPUT                           00706000
.*------------------------------------------------------------------    00707000
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00708000
.ZG51         ANOP  ,                                                   00709000
&ZXMF         SETC  'INPUT'     SET IN/OUTPUT                           00710000
              AIF   (K'&XMF GT 0).ZG51E         VALID ARG               00711000
              AIF   (T'&MF EQ 'O').ZG51D        OMITTED                 00712000
&ZASYSLNDX    SETA  0                                                   00713000
.ZG51A        ANOP  ,           POSITIONAL MACRO KEY                    00714000
&ZASYSLNDX    SETA  &ZASYSLNDX+1                                        00715000
              AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG51C                    00716000
&ZTLC         SETC 'MF'                                                 00717000
              AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG51A           00718000
.ZG51B        ANOP  ,                                                   00719000
&ZXMF         SETC  ''          RESET IN/OUTPUT                         00720000
&ZMS          SETC  'THE "MF" KEY'              *KOPTA* MNOTE           00721000
&ZMS          SETC  '&ZMS MUST CONTAIN ONE'                             00722000
              MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                    00723000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00724000
              AGO   .ZG51E                                              00725000
.ZG51C        ANOP  ,                                                   00726000
&ZXMF         SETC  ''          RESET IN/OUTPUT                         00727000
&ZMS          SETC  '"MF='      *KUKWA* MNOTE                           00728000
&ZMS          SETC  '&ZMS.&MF"'                                         00729000
&ZMS          SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '           00730000
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                 00731000
&ZMS          SETC  '&ZMS "S",'                 VALID KEYWORD           00732000
&ZMS          SETC  '&ZMS "L",'                 VALID KEYWORD           00733000
&ZMS          SETC  '&ZMS OR "E".'              VALID KEYWORD           00733600
              MNOTE 8,' &ZMS '                                          00734200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00735000
              AGO   .ZG51E                                              00736000
.ZG51D        ANOP  ,                                                   00737000
&XMF          SETC  'S'         SET DEFAULT KEYWORD                     00738000
&XMFSCK       SETC  'COMPLETE'  COMPLETE CHECKING                       00739000
.ZG51E        ANOP  ,                                                   00740000
.********************************************************************   00741000
.***AG.MF02  FULL MACRO SYNTAX CHECKING                                 00742000
.********************************************************************   00743000
              ACTR  10000                                               00744000
.*-------------------------------------------------------------------   00745000
.***AG.MF03 MF=(SLE)                                                    00746000
              AIF   ('&XMF' EQ 'L').ZGMFX                               00747000
.*----------------------------------------------------------------***   00748000
.***AG.KMEKY01 NAME, RQD INPUT, ME KEYS -XVARIABLE                      00749000
&XDUMMY2      SETC  ''          INITIALIZE XVARIABLE                    00750000
              AIF   (K'&EPPTR LE 0).ZG5C                                00751000
&ZXDUMMY2     SETC  'INPUT'     SET IN/OUTPUT                           00752000
&XDUMMY2      SETC  'EPPTR'     SET XVARIABLE                           00753000
&ZXEPPTR      SETC  'INPUT'     SET IN/OUTPUT                           00754000
&XEPPTR       SETC  '&EPPTR(1)'                 SET XVARIABLE PARM      00755000
              AIF   (N'&EPPTR GT 1).ZG5A        MULTIPLE PARMS          00756000
&XEPPTR       SETC  '&EPPTR'    SET XVARIABLE PARM                      00757000
.ZG5A         AIF   (N'&EPPTR LE 1).ZG5B        CK NUM                  00758000
&ZMS          SETC  '"EPPTR='   *KPOSA* MNOTE                           00759000
&ZMS          SETC  '&ZMS.&EPPTR"'                                      00760000
&ZMS          SETC  '&ZMS "EPPTR"'                                      00761000
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00762000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00763000
.ZG5B         AIF   (K'&XEPPTR GT 0).ZG5C       ONE PARM                00764000
&ZXDUMMY2     SETC  ''          RESET IN/OUTPUT                         00765000
&ZXEPPTR      SETC  ''          RESET IN/OUTPUT                         00766000
&ZMS          SETC  ' '         *KRQDA*                                 00767000
&ZMS          SETC  '&ZMS "EPPTR" KEY AND ITS ARGUMENT'                 00768000
              MNOTE 8,' &ZMS ARE REQUIRED.'                             00769000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00770000
.ZG5C         ANOP  ,                                                   00771000
.*----------------------------------------------------------------***   00772000
.***AG.KMEKY02 NAME, RQD INPUT, ME KEYS -XVARIABLE                      00773000
              AIF   (K'&IQEPTR LE 0).ZG28D      NO ME KEY               00774000
              AIF   (N'&IQEPTR LE 1).ZG28A      CK NUM                  00775000
&ZMS          SETC  '"IQEPTR='  *KPOSA* MNOTE                           00776000
&ZMS          SETC  '&ZMS.&IQEPTR"'                                     00777000
&ZMS          SETC  '&ZMS "IQEPTR"'                                     00778000
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00779000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00780000
.ZG28A        AIF   (K'&XDUMMY2 LE 0).ZG28B                             00781000
&ZMS          SETC  '"IQEPTR'   *KMEKA* MNOTE                           00782000
&ZMS          SETC  '&ZMS.=&IQEPTR"'                                    00783000
&ZMS          SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'               00784000
&ZMS          SETC  '&ZMS "&XDUMMY2"'                                   00785000
              MNOTE 8,' &ZMS KEY.'                                      00786000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00787000
              AGO   .ZG28D                                              00788000
.*                                                                      00789000
.ZG28B        ANOP  ,                                                   00790000
&ZXDUMMY2     SETC  'INPUT'     SET IN/OUTPUT                           00791000
&XDUMMY2      SETC  'IQEPTR'    SET XVARIABLE                           00792000
&ZXIQEPTR     SETC  'INPUT'     SET IN/OUTPUT                           00793000
&XIQEPTR      SETC  '&IQEPTR(1)'                SET XVARIABLE PARM      00794000
              AIF   (N'&IQEPTR GT 1).ZG28C      MULTIPLE PARMS          00795000
&XIQEPTR      SETC  '&IQEPTR'   SET XVARIABLE PARM                      00796000
.ZG28C        AIF   (K'&XIQEPTR GT 0).ZG28D     ONE PARM                00797000
&ZXDUMMY2     SETC  ''          RESET IN/OUTPUT                         00798000
&ZXIQEPTR     SETC  ''          RESET IN/OUTPUT                         00799000
&ZMS          SETC  ' '         *KRQDA*                                 00800000
&ZMS          SETC  '&ZMS "IQEPTR" KEY AND ITS ARGUMENT'                00801000
              MNOTE 8,' &ZMS ARE REQUIRED.'                             00802000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00803000
.ZG28D        ANOP  ,                                                   00804000
.*------------------------------------------------------------------    00805000
.***AG.KME4Y09 NAME, RQD INPUT, ME KEYS -CHECK IF KEY ENTERED           00806000
              AIF   (K'&XDUMMY2 GT 0).ZG29B                             00807000
&ZXDUMMY2     SETC  ''          RESET IN/OUTPUT                         00808000
&ZXEPPTR      SETC  ''          RESET IN/OUTPUT                         00809000
&XDUMMY2      SETC  ''          ENSURE NULL                             00810000
&XEPPTR       SETC  ''          ENSURE NULL                             00811000
&ZMS          SETC  'ONE OF THE FOLLOWING'      *KMERA* MNOTE           00812000
&ZMS          SETC  '&ZMS MUTUALLY EXCLUSIVE KEY(S) IS'                 00813000
&ZMS          SETC  '&ZMS REQUIRED:'                                    00814000
&ZMS          SETC  '&ZMS "EPPTR"'              VALID ME KEY            00814700
&ZMS          SETC  '&ZMS OR "IQEPTR".'         VALID ME KEY            00815400
              MNOTE 8,' &ZMS '                                          00816100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00817000
.ZG29B        ANOP  ,                                                   00818000
.*-------------------------------------------------------------------   00819000
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           00820000
.ZG5          AIF   ('&XDUMMY2' NE 'EPPTR').ZG28                        00821000
.*-------------------------------------------------------------------   00822000
.***AG.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 00823000
              AIF   (K'&ZXEPPTR LE 0).ZG5R      NOT I/O                 00824000
              AIF   ('&XEPPTR'(1,1) NE '(').ZG5R                        00825000
&ZCGPR        SETC  '&XEPPTR'(2,K'&XEPPTR-2)                            00826000
              AIF   ('&ZCGPR'(1,1) NE '0').ZG5P                         00946000
              AIF   (K'&ZCGPR GT 2).ZG5Q                                00947000
              AIF   ('&ZCGPR' EQ '0').ZG5Q                              00948000
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00949000
              AIF   (T'&ZCGPR NE 'N').ZG5Q      INVALID REG NAME        00950000
.ZG5P         ANOP  ,                                                   00951000
              AIF   (T'&ZCGPR NE 'N').ZG5R      NON NUMERIC             00952000
              AIF   ('&ZCGPR' LT '2').ZG5Q                              00953000
              AIF   ('&ZCGPR' LE '12').ZG5R                             00954000
.ZG5Q         ANOP  ,                                                   00955000
&ZMS          SETC  '"EPPTR='   *KGPRA* MNOTE                           00955100
&ZMS          SETC  '&ZMS.&EPPTR"'                                      00955200
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00955300
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00955400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00955500
.ZG5R         ANOP  ,                                                   00955600
.*----------------------------------------------------------------***   00955700
.***AG.KMEKY01 NAME, RQD INPUT, ME KEYS -XVARIABLE                      00955800
&XDUMMY1      SETC  ''          INITIALIZE XVARIABLE                    00955900
              AIF   (K'&TCBPTR LE 0).ZG7C                               00956000
&ZXDUMMY1     SETC  'INPUT'     SET IN/OUTPUT                           00956100
&XDUMMY1      SETC  'TCBPTR'    SET XVARIABLE                           00956200
&ZXTCBPTR     SETC  'INPUT'     SET IN/OUTPUT                           00956300
&XTCBPTR      SETC  '&TCBPTR(1)'                SET XVARIABLE PARM      00956400
              AIF   (N'&TCBPTR GT 1).ZG7A       MULTIPLE PARMS          00956500
&XTCBPTR      SETC  '&TCBPTR'   SET XVARIABLE PARM                      00956600
.ZG7A         AIF   (N'&TCBPTR LE 1).ZG7B       CK NUM                  00956700
&ZMS          SETC  '"TCBPTR='  *KPOSA* MNOTE                           00956800
&ZMS          SETC  '&ZMS.&TCBPTR"'                                     00956900
&ZMS          SETC  '&ZMS "TCBPTR"'                                     00957000
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00957100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00957200
.ZG7B         AIF   (K'&XTCBPTR GT 0).ZG7C      ONE PARM                00957300
&ZXDUMMY1     SETC  ''          RESET IN/OUTPUT                         00957400
&ZXTCBPTR     SETC  ''          RESET IN/OUTPUT                         00957500
&ZMS          SETC  ' '         *KRQDA*                                 00957600
&ZMS          SETC  '&ZMS "TCBPTR" KEY AND ITS ARGUMENT'                00957700
              MNOTE 8,' &ZMS ARE REQUIRED.'                             00957800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00957900
.ZG7C         ANOP  ,                                                   00958000
.*----------------------------------------------------------------***   00958100
.***AG.KMEKY02 NAME, RQD INPUT, ME KEYS -XVARIABLE                      00958200
              AIF   (K'&RBPTR LE 0).ZG8D        NO ME KEY               00958300
              AIF   (N'&RBPTR LE 1).ZG8A        CK NUM                  00958400
&ZMS          SETC  '"RBPTR='   *KPOSA* MNOTE                           00958500
&ZMS          SETC  '&ZMS.&RBPTR"'                                      00958600
&ZMS          SETC  '&ZMS "RBPTR"'                                      00958700
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00958800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00958900
.ZG8A         AIF   (K'&XDUMMY1 LE 0).ZG8B                              00959000
&ZMS          SETC  '"RBPTR'    *KMEKA* MNOTE                           00959100
&ZMS          SETC  '&ZMS.=&RBPTR"'                                     00959200
&ZMS          SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'               00959300
&ZMS          SETC  '&ZMS "&XDUMMY1"'                                   00959400
              MNOTE 8,' &ZMS KEY.'                                      00959500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00959600
              AGO   .ZG8D                                               00959700
.*                                                                      00959800
.ZG8B         ANOP  ,                                                   00959900
&ZXDUMMY1     SETC  'INPUT'     SET IN/OUTPUT                           00960000
&XDUMMY1      SETC  'RBPTR'     SET XVARIABLE                           00960100
&ZXRBPTR      SETC  'INPUT'     SET IN/OUTPUT                           00960200
&XRBPTR       SETC  '&RBPTR(1)'                 SET XVARIABLE PARM      00960300
              AIF   (N'&RBPTR GT 1).ZG8C        MULTIPLE PARMS          00960400
&XRBPTR       SETC  '&RBPTR'    SET XVARIABLE PARM                      00960500
.ZG8C         AIF   (K'&XRBPTR GT 0).ZG8D       ONE PARM                00960600
&ZXDUMMY1     SETC  ''          RESET IN/OUTPUT                         00960700
&ZXRBPTR      SETC  ''          RESET IN/OUTPUT                         00960800
&ZMS          SETC  ' '         *KRQDA*                                 00960900
&ZMS          SETC  '&ZMS "RBPTR" KEY AND ITS ARGUMENT'                 00961000
              MNOTE 8,' &ZMS ARE REQUIRED.'                             00961100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00961200
.ZG8D         ANOP  ,                                                   00961300
.*------------------------------------------------------------------    00961400
.***AG.KME4Y09 NAME, RQD INPUT, ME KEYS -CHECK IF KEY ENTERED           00961500
              AIF   (K'&XDUMMY1 GT 0).ZG9B                              00961600
&ZXDUMMY1     SETC  ''          RESET IN/OUTPUT                         00961700
&ZXTCBPTR     SETC  ''          RESET IN/OUTPUT                         00961800
&XDUMMY1      SETC  ''          ENSURE NULL                             00961900
&XTCBPTR      SETC  ''          ENSURE NULL                             00962000
&ZMS          SETC  'ONE OF THE FOLLOWING'      *KMERA* MNOTE           00962100
&ZMS          SETC  '&ZMS MUTUALLY EXCLUSIVE KEY(S) IS'                 00962200
&ZMS          SETC  '&ZMS REQUIRED:'                                    00962300
&ZMS          SETC  '&ZMS "TCBPTR"'             VALID ME KEY            00962400
&ZMS          SETC  '&ZMS OR "RBPTR".'          VALID ME KEY            00962500
              MNOTE 8,' &ZMS '                                          00962600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00962700
.ZG9B         ANOP  ,                                                   00962800
.*-------------------------------------------------------------------   00962900
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           00963000
.ZG7          AIF   ('&XDUMMY1' NE 'TCBPTR').ZG8                        00963100
.*-------------------------------------------------------------------   00963200
.***AG.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 00963300
              AIF   (K'&ZXTCBPTR LE 0).ZG7R     NOT I/O                 00963400
              AIF   ('&XTCBPTR'(1,1) NE '(').ZG7R                       00963500
&ZCGPR        SETC  '&XTCBPTR'(2,K'&XTCBPTR-2)                          00963600
              AIF   ('&ZCGPR'(1,1) NE '0').ZG7P                         00963700
              AIF   (K'&ZCGPR GT 2).ZG7Q                                00963800
              AIF   ('&ZCGPR' EQ '0').ZG7Q                              00963900
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00964000
              AIF   (T'&ZCGPR NE 'N').ZG7Q      INVALID REG NAME        00964100
.ZG7P         ANOP  ,                                                   00964200
              AIF   (T'&ZCGPR NE 'N').ZG7R      NON NUMERIC             00964300
              AIF   ('&ZCGPR' LT '2').ZG7Q                              00964400
              AIF   ('&ZCGPR' LE '12').ZG7R                             00964500
.ZG7Q         ANOP  ,                                                   00964600
&ZMS          SETC  '"TCBPTR='  *KGPRA* MNOTE                           00964700
&ZMS          SETC  '&ZMS.&TCBPTR"'                                     00964800
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00964900
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00965000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00965100
.ZG7R         ANOP  ,                                                   00965200
.*-------------------------------------------------------------------   00965300
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           00965400
.ZG8          AIF   ('&XDUMMY1' NE 'RBPTR').ZG9                         00965500
.*-------------------------------------------------------------------   00965600
.***AG.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 00965700
              AIF   (K'&ZXRBPTR LE 0).ZG8R      NOT I/O                 00965800
              AIF   ('&XRBPTR'(1,1) NE '(').ZG8R                        00965900
&ZCGPR        SETC  '&XRBPTR'(2,K'&XRBPTR-2)                            00966000
              AIF   ('&ZCGPR'(1,1) NE '0').ZG8P                         00966100
              AIF   (K'&ZCGPR GT 2).ZG8Q                                00966200
              AIF   ('&ZCGPR' EQ '0').ZG8Q                              00966300
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00966400
              AIF   (T'&ZCGPR NE 'N').ZG8Q      INVALID REG NAME        00966500
.ZG8P         ANOP  ,                                                   00966600
              AIF   (T'&ZCGPR NE 'N').ZG8R      NON NUMERIC             00966700
              AIF   ('&ZCGPR' LT '2').ZG8Q                              00966800
              AIF   ('&ZCGPR' LE '12').ZG8R                             00966900
.ZG8Q         ANOP  ,                                                   00967000
&ZMS          SETC  '"RBPTR='   *KGPRA* MNOTE                           00967100
&ZMS          SETC  '&ZMS.&RBPTR"'                                      00967200
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00967300
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00967400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00967500
.ZG8R         ANOP  ,                                                   00967600
.*-------------------------------------------------------------------   00967700
.***AG.KMEKY15 NAME, RQD INPUT, ME KEYS -END                            00967800
.ZG9          ANOP  ,           END MUTUALLY EXCLUSIVE KEYS             00967900
.*------------------------------------------------------------------    00968000
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00968100
&XMODE        SETC  ''          INITIALIZE XVARIABLE                    00968200
.*-------------------------------------------------------------------   00968300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00969000
.ZG12         ANOP  ,                                                   00970000
              AIF   (K'&MODE(1) LE 0).ZG12A                             00971000
&ZTLC         SETC 'PROB'                                               00972000
              AIF   ('&MODE(1)' NE '&ZTLC').ZG13                        00973000
&XMODE        SETC  'PROB'      SET KEYWORD                             00974000
              AIF   (N'&MODE LE 1).ZG12A        CK NUM                  00975000
&ZMS          SETC  '"MODE='    *KPOSA* MNOTE                           00976000
&ZMS          SETC  '&ZMS.&MODE"'                                       00977000
&ZMS          SETC  '&ZMS "MODE"'                                       00978000
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00979000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00980000
.ZG12A        ANOP  ,                                                   00981000
.*-------------------------------------------------------------------   00982000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00983000
.ZG13         ANOP  ,                                                   00984000
&ZTLC         SETC 'SUPR'                                               00985000
              AIF   ('&MODE(1)' NE '&ZTLC').ZG14                        00986000
&XMODE        SETC  'SUPR'      SET KEYWORD                             00987000
              AIF   (N'&MODE LE 1).ZG13A        CK NUM                  00988000
&ZMS          SETC  '"MODE='    *KPOSA* MNOTE                           00989000
&ZMS          SETC  '&ZMS.&MODE"'                                       00990000
&ZMS          SETC  '&ZMS "MODE"'                                       00991000
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00992000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00993000
.ZG13A        ANOP  ,                                                   00994000
.*------------------------------------------------------------------    00995000
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00996000
.ZG14         ANOP  ,                                                   00997000
&ZXMODE       SETC  'INPUT'     SET IN/OUTPUT                           00998000
              AIF   (K'&XMODE GT 0).ZG14E       VALID ARG               00999000
              AIF   (T'&MODE EQ 'O').ZG14D      OMITTED                 01000000
&ZASYSLNDX    SETA  0                                                   01001000
.ZG14A        ANOP  ,           POSITIONAL MACRO KEY                    01002000
&ZASYSLNDX    SETA  &ZASYSLNDX+1                                        01003000
              AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG14C                    01004000
&ZTLC         SETC 'MODE'                                               01005000
              AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG14A           01006000
.ZG14B        ANOP  ,                                                   01007000
&ZXMODE       SETC  ''          RESET IN/OUTPUT                         01008000
&ZMS          SETC  'THE "MODE" KEY'            *KOPTA* MNOTE           01009000
&ZMS          SETC  '&ZMS MUST CONTAIN ONE'                             01010000
              MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                    01011000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01012000
              AGO   .ZG14E                                              01013000
.ZG14C        ANOP  ,                                                   01014000
&ZXMODE       SETC  ''          RESET IN/OUTPUT                         01015000
&ZMS          SETC  '"MODE='    *KUKWA* MNOTE                           01016000
&ZMS          SETC  '&ZMS.&MODE"'                                       01017000
&ZMS          SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '           01018000
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                 01019000
&ZMS          SETC  '&ZMS "PROB"'               VALID KEYWORD           01020000
&ZMS          SETC  '&ZMS OR "SUPR".'           VALID KEYWORD           01020600
              MNOTE 8,' &ZMS '                                          01021200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01022000
              AGO   .ZG14E                                              01023000
.ZG14D        ANOP  ,                                                   01024000
&XMODE        SETC  'PROB'      SET DEFAULT KEYWORD                     01025000
.ZG14E        ANOP  ,                                                   01026000
.*------------------------------------------------------------------    01027000
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01028000
&XKEY         SETC  ''          INITIALIZE XVARIABLE                    01029000
.*-------------------------------------------------------------------   01030000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01031000
.ZG17         ANOP  ,                                                   01032000
              AIF   (K'&KEY(1) LE 0).ZG17A                              01033000
&ZTLC         SETC 'PROP'                                               01034000
              AIF   ('&KEY(1)' NE '&ZTLC').ZG18                         01035000
&XKEY         SETC  'PROP'      SET KEYWORD                             01036000
              AIF   (N'&KEY LE 1).ZG17A         CK NUM                  01037000
&ZMS          SETC  '"KEY='     *KPOSA* MNOTE                           01038000
&ZMS          SETC  '&ZMS.&KEY"'                                        01039000
&ZMS          SETC  '&ZMS "KEY"'                                        01040000
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 01041000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01042000
.ZG17A        ANOP  ,                                                   01043000
.*-------------------------------------------------------------------   01044000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01045000
.ZG18         ANOP  ,                                                   01046000
&ZTLC         SETC 'SUPR'                                               01047000
              AIF   ('&KEY(1)' NE '&ZTLC').ZG19                         01048000
&XKEY         SETC  'SUPR'      SET KEYWORD                             01049000
              AIF   (N'&KEY LE 1).ZG18A         CK NUM                  01050000
&ZMS          SETC  '"KEY='     *KPOSA* MNOTE                           01051000
&ZMS          SETC  '&ZMS.&KEY"'                                        01052000
&ZMS          SETC  '&ZMS "KEY"'                                        01053000
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 01054000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01055000
.ZG18A        ANOP  ,                                                   01056000
.*------------------------------------------------------------------    01057000
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01058000
.ZG19         ANOP  ,                                                   01059000
&ZXKEY        SETC  'INPUT'     SET IN/OUTPUT                           01060000
              AIF   (K'&XKEY GT 0).ZG19E        VALID ARG               01061000
              AIF   (T'&KEY EQ 'O').ZG19D       OMITTED                 01062000
&ZASYSLNDX    SETA  0                                                   01063000
.ZG19A        ANOP  ,           POSITIONAL MACRO KEY                    01064000
&ZASYSLNDX    SETA  &ZASYSLNDX+1                                        01065000
              AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG19C                    01066000
&ZTLC         SETC 'KEY'                                                01067000
              AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG19A           01068000
.ZG19B        ANOP  ,                                                   01069000
&ZXKEY        SETC  ''          RESET IN/OUTPUT                         01070000
&ZMS          SETC  'THE "KEY" KEY'             *KOPTA* MNOTE           01071000
&ZMS          SETC  '&ZMS MUST CONTAIN ONE'                             01072000
              MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                    01073000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01074000
              AGO   .ZG19E                                              01075000
.ZG19C        ANOP  ,                                                   01076000
&ZXKEY        SETC  ''          RESET IN/OUTPUT                         01077000
&ZMS          SETC  '"KEY='     *KUKWA* MNOTE                           01078000
&ZMS          SETC  '&ZMS.&KEY"'                                        01079000
&ZMS          SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '           01080000
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                 01081000
&ZMS          SETC  '&ZMS "PROP"'               VALID KEYWORD           01082000
&ZMS          SETC  '&ZMS OR "SUPR".'           VALID KEYWORD           01082600
              MNOTE 8,' &ZMS '                                          01083200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01084000
              AGO   .ZG19E                                              01085000
.ZG19D        ANOP  ,                                                   01086000
&XKEY         SETC  'PROP'      SET DEFAULT KEYWORD                     01087000
.ZG19E        ANOP  ,                                                   01088000
.*------------------------------------------------------------------    01089000
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01090000
&XSVAREA      SETC  ''          INITIALIZE XVARIABLE                    01091000
.*-------------------------------------------------------------------   01092000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01093000
.ZG22         ANOP  ,                                                   01094000
              AIF   (K'&SVAREA(1) LE 0).ZG22A                           01095000
&ZTLC         SETC 'NO'                                                 01096000
              AIF   ('&SVAREA(1)' NE '&ZTLC').ZG23                      01097000
&XSVAREA      SETC  'NO'        SET KEYWORD                             01098000
              AIF   (N'&SVAREA LE 1).ZG22A      CK NUM                  01099000
&ZMS          SETC  '"SVAREA='  *KPOSA* MNOTE                           01100000
&ZMS          SETC  '&ZMS.&SVAREA"'                                     01101000
&ZMS          SETC  '&ZMS "SVAREA"'                                     01102000
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 01103000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01104000
.ZG22A        ANOP  ,                                                   01105000
.*-------------------------------------------------------------------   01106000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01107000
.ZG23         ANOP  ,                                                   01108000
&ZTLC         SETC 'YES'                                                01109000
              AIF   ('&SVAREA(1)' NE '&ZTLC').ZG24                      01110000
&XSVAREA      SETC  'YES'       SET KEYWORD                             01111000
              AIF   (N'&SVAREA LE 1).ZG23A      CK NUM                  01112000
&ZMS          SETC  '"SVAREA='  *KPOSA* MNOTE                           01113000
&ZMS          SETC  '&ZMS.&SVAREA"'                                     01114000
&ZMS          SETC  '&ZMS "SVAREA"'                                     01115000
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 01116000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01117000
.ZG23A        ANOP  ,                                                   01118000
.*------------------------------------------------------------------    01119000
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01120000
.ZG24         ANOP  ,                                                   01121000
&ZXSVAREA     SETC  'INPUT'     SET IN/OUTPUT                           01122000
              AIF   (K'&XSVAREA GT 0).ZG24E     VALID ARG               01123000
              AIF   (T'&SVAREA EQ 'O').ZG24D    OMITTED                 01124000
&ZASYSLNDX    SETA  0                                                   01125000
.ZG24A        ANOP  ,           POSITIONAL MACRO KEY                    01126000
&ZASYSLNDX    SETA  &ZASYSLNDX+1                                        01127000
              AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG24C                    01128000
&ZTLC         SETC 'SVAREA'                                             01129000
              AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG24A           01130000
.ZG24B        ANOP  ,                                                   01131000
&ZXSVAREA     SETC  ''          RESET IN/OUTPUT                         01132000
&ZMS          SETC  'THE "SVAREA" KEY'          *KOPTA* MNOTE           01133000
&ZMS          SETC  '&ZMS MUST CONTAIN ONE'                             01134000
              MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                    01135000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01136000
              AGO   .ZG24E                                              01137000
.ZG24C        ANOP  ,                                                   01138000
&ZXSVAREA     SETC  ''          RESET IN/OUTPUT                         01139000
&ZMS          SETC  '"SVAREA='  *KUKWA* MNOTE                           01140000
&ZMS          SETC  '&ZMS.&SVAREA"'                                     01141000
&ZMS          SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '           01142000
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                 01143000
&ZMS          SETC  '&ZMS "NO"'                 VALID KEYWORD           01144000
&ZMS          SETC  '&ZMS OR "YES".'            VALID KEYWORD           01144600
              MNOTE 8,' &ZMS '                                          01145200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01146000
              AGO   .ZG24E                                              01147000
.ZG24D        ANOP  ,                                                   01148000
&XSVAREA      SETC  'NO'        SET DEFAULT KEYWORD                     01149000
.ZG24E        ANOP  ,                                                   01150000
.*----------------------------------------------------------------***   01151000
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     01152000
              AIF   (N'&PARAMPTR LE 1).ZG26A    CK NUM                  01153000
&ZMS          SETC  '"PARAMPTR='                *KPOSA* MNOTE           01154000
&ZMS          SETC  '&ZMS.&PARAMPTR"'                                   01155000
&ZMS          SETC  '&ZMS "PARAMPTR"'                                   01156000
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 01157000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01158000
.ZG26A        ANOP  ,                                                   01159000
.*-------------------------------------------------------------------   01160000
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         01161000
&ZXPARAMPTR   SETC  'INPUT'     SET IN/OUTPUT                           01162000
&XPARAMPTR    SETC  'NO_PARAM'                                          01163000
              AIF   (K'&PARAMPTR(1) LE 0).ZG26B  PARM                   01164000
&XPARAMPTR    SETC  '&PARAMPTR(1)'              SET XVARIABLE           01165000
              AIF   (N'&PARAMPTR GT 1).ZG26B    MULTI PARMS             01166000
&XPARAMPTR    SETC  '&PARAMPTR'                 SET XVARIABLE           01167000
.ZG26B        ANOP  ,                                                   01168000
.*-------------------------------------------------------------------   01169000
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    01170000
              AIF   (K'&ZXPARAMPTR LE 0).ZG26R  NOT I/O                 01171000
              AIF   ('&XPARAMPTR' EQ 'NO_PARAM').ZG26R                  01172000
              AIF   ('&XPARAMPTR'(1,1) NE '(').ZG26R                    01173000
&ZCGPR        SETC  '&XPARAMPTR'(2,K'&XPARAMPTR-2)                      01174000
              AIF   ('&ZCGPR'(1,1) NE '0').ZG26P                        01175000
              AIF   (K'&ZCGPR GT 2).ZG26Q                               01176000
              AIF   ('&ZCGPR' EQ '0').ZG26Q                             01177000
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       01178000
              AIF   (T'&ZCGPR NE 'N').ZG26Q     INVALID REG NAME        01179000
.ZG26P        ANOP  ,                                                   01180000
              AIF   (T'&ZCGPR NE 'N').ZG26R     NON NUMERIC             01181000
              AIF   ('&ZCGPR' LT '2').ZG26Q                             01182000
              AIF   ('&ZCGPR' LE '12').ZG26R                            01183000
.ZG26Q        ANOP  ,                                                   01184000
&ZMS          SETC  '"PARAMPTR='                *KGPRA* MNOTE           01185000
&ZMS          SETC  '&ZMS.&PARAMPTR"'                                   01186000
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           01187000
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    01188000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01189000
.ZG26R        ANOP  ,                                                   01190000
.*-------------------------------------------------------------------   01191000
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           01192000
.ZG28         AIF   ('&XDUMMY2' NE 'IQEPTR').ZG29                       01193000
.*-------------------------------------------------------------------   01194000
.***AG.KMEKY14 NAME, RQD INPUT, ME KEYS -DISALLOWED KEYS                01195000
&ZCVAL        SETC ''           ERROR KEY FIELD                         01196000
.ZG28I0       AIF   (K'&TCBPTR LE 0).ZG28I1                             01197000
&ZCVAL        SETC '&ZCVAL TCBPTR'              DISALLOWED KEY          01198000
.ZG28I1       AIF   (K'&RBPTR LE 0).ZG28I2                              01198500
&ZCVAL        SETC '&ZCVAL RBPTR'               DISALLOWED KEY          01199000
.ZG28I2       AIF   (K'&MODE LE 0).ZG28I3                               01199500
&ZCVAL        SETC '&ZCVAL MODE'                DISALLOWED KEY          01200000
.ZG28I3       AIF   (K'&KEY LE 0).ZG28I4                                01201000
&ZCVAL        SETC '&ZCVAL KEY'                 DISALLOWED KEY          01202000
.ZG28I4       AIF   (K'&SVAREA LE 0).ZG28I5                             01203000
&ZCVAL        SETC '&ZCVAL SVAREA'              DISALLOWED KEY          01204000
.ZG28I5       AIF   (K'&PARAMPTR LE 0).ZG28I6                           01205000
&ZCVAL        SETC '&ZCVAL PARAMPTR'            DISALLOWED KEY          01206000
.ZG28I6       AIF   (K'&ZCVAL LE 0).ZG28J       KEY                     01207000
&ZCVAL        SETC '&ZCVAL'(2,K'&ZCVAL-1)                               01208000
&ZMS          SETC  '"IQEPTR'   *KMEIA* MNOTE                           01209000
&ZMS          SETC  '&ZMS.=&IQEPTR"'                                    01210000
&ZMS          SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'                01211000
              MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'                01212000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01213000
.ZG28J        ANOP  ,                                                   01214000
.*-------------------------------------------------------------------   01215000
.***AG.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 01216000
              AIF   (K'&ZXIQEPTR LE 0).ZG28R    NOT I/O                 01217000
              AIF   ('&XIQEPTR'(1,1) NE '(').ZG28R                      01218000
&ZCGPR        SETC  '&XIQEPTR'(2,K'&XIQEPTR-2)                          01219000
              AIF   ('&ZCGPR'(1,1) NE '0').ZG28P                        01301000
              AIF   (K'&ZCGPR GT 2).ZG28Q                               01302000
              AIF   ('&ZCGPR' EQ '0').ZG28Q                             01303000
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       01304000
              AIF   (T'&ZCGPR NE 'N').ZG28Q     INVALID REG NAME        01305000
.ZG28P        ANOP  ,                                                   01306000
              AIF   (T'&ZCGPR NE 'N').ZG28R     NON NUMERIC             01307000
              AIF   ('&ZCGPR' LT '2').ZG28Q                             01308000
              AIF   ('&ZCGPR' LE '12').ZG28R                            01309000
.ZG28Q        ANOP  ,                                                   01310000
&ZMS          SETC  '"IQEPTR='  *KGPRA* MNOTE                           01310100
&ZMS          SETC  '&ZMS.&IQEPTR"'                                     01310200
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           01310300
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    01310400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01310500
.ZG28R        ANOP  ,                                                   01310600
.*-------------------------------------------------------------------   01310700
.***AG.KMEKY15 NAME, RQD INPUT, ME KEYS -END                            01310800
.ZG29         ANOP  ,           END MUTUALLY EXCLUSIVE KEYS             01310900
.*----------------------------------------------------------------***   01311000
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    01311100
              AIF   (N'&RETCODE LE 1).ZG31A     CK NUM                  01311200
&ZMS          SETC  '"RETCODE='                 *KPOSA* MNOTE           01311300
&ZMS          SETC  '&ZMS.&RETCODE"'                                    01311400
&ZMS          SETC  '&ZMS "RETCODE"'                                    01311500
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 01311600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01311700
.ZG31A        ANOP  ,                                                   01311800
.*-------------------------------------------------------------------   01311900
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        01312000
              AIF   (K'&RETCODE(1) LE 0).ZG31C  NO PARM                 01312100
&ZXRETCODE    SETC  'OUTPUT'    SET OUTPUT                              01312200
&XRETCODE     SETC  '&RETCODE(1)'               SET XVARIABLE           01312300
              AIF   (N'&RETCODE GT 1).ZG31C                             01312400
&XRETCODE     SETC  '&RETCODE'  SET XVARIABLE                           01312500
.ZG31C        ANOP  ,                                                   01312600
.*-------------------------------------------------------------------   01312700
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   01312800
              AIF   (K'&ZXRETCODE LE 0).ZG31R   NOT I/O                 01312900
              AIF   ('&XRETCODE'(1,1) NE '(').ZG31R                     01313000
&ZCGPR        SETC  '&XRETCODE'(2,K'&XRETCODE-2)                        01313100
              AIF   ('&ZCGPR'(1,1) NE '0').ZG31P                        01313200
              AIF   (K'&ZCGPR GT 2).ZG31Q                               01313300
              AIF   ('&ZCGPR' EQ '0').ZG31Q                             01313400
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       01313500
              AIF   (T'&ZCGPR NE 'N').ZG31Q     INVALID REG NAME        01313600
.ZG31P        ANOP  ,                                                   01313700
              AIF   (T'&ZCGPR NE 'N').ZG31R     NON NUMERIC             01313800
              AIF   ('&ZCGPR' LT '2').ZG31Q                             01313900
              AIF   ('&ZCGPR' LE '12').ZG31R                            01314000
.ZG31Q        ANOP  ,                                                   01314100
&ZMS          SETC  '"RETCODE='                 *KGPRA* MNOTE           01314200
&ZMS          SETC  '&ZMS.&RETCODE"'                                    01314300
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           01314400
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    01314500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01315000
.ZG31R        ANOP  ,                                                   01316000
.******************************************************************     01317000
.***AH.P00 CHECK STANDALONE POSITIONAL VARIABLES                        01318000
.******************************************************************     01319000
              ACTR  10000                                               01320000
.*----------------------------------------------------------------***   01321000
.***AH.P02 EXTRA POSITIONALS                                            01322000
              AIF   (N'&SYSLIST LE 0).ZGLISTX   NO EXTRAS               01323000
&ZCVAL        SETC  ''          ERROR FIELD                             01324000
&ZAWRK        SETA  0           POSITIONAL NUMBER                       01325000
.ZGLIST2      ANOP  ,                                                   01326000
&ZAWRK        SETA  &ZAWRK+1    NEXT POSITIONAL                         01327000
              AIF   (&ZAWRK GT N'&SYSLIST).ZGLIST3  DONE                01328000
&ZCVAL        SETC '&ZCVAL,&SYSLIST(&ZAWRK)'    EXTRA                   01329000
              AGO   .ZGLIST2                                            01330000
.*                                                                      01331000
.ZGLIST3      ANOP  ,                                                   01332000
&ZCVAL        SETC '&ZCVAL'(2,K'&ZCVAL-1)       STRIP COMMA             01333000
&ZMS          SETC  'POSITIONAL ARGUMENT(S),'   *PPOSA* MNOTE           01334000
&ZMS          SETC  '&ZMS "&ZCVAL"'                                     01335000
&ZMS          SETC  '&ZMS CANNOT BE USED.'                              01336000
&ZMS          SETC  '&ZMS NO POSITIONAL ARGUMENTS'                      01337000
              MNOTE 8,' &ZMS ARE ALLOWED.'                              01338000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01339000
.ZGLISTX      ANOP  ,                                                   01340000
&ZASYSLNDX    SETA  0                                                   01341000
.*-------------------------------------------------------------------   01342000
.***AG.MF04 MF=(SLE)                                                    01343000
.ZGMFX        ANOP  ,           END OF FULL SYNTAX CHECK                01344000
.*******************************************************************    01345000
.***AE.ZMR01 NO CODE GENERATED IF ERRORS DETECTED                       01346000
.*******************************************************************    01347000
              AIF   (&ZMACRET NE 0).ZLX2        ERROR DETECTED          01348000
.*******************************************************************    01349000
.***AE.01  START OF SCHEDIRB MACRO CODE                                 01350000
.*******************************************************************    01351000
              LCLC  &M0M0001                 NAME                       01352000
&M0M0001      SETC  '&XLABEL'                SET NAME                   01353000
              AIF   (K'&XLABEL NE 0).XLAB2                              01354000
&M0M0001      SETC  'M00M&SYSNDX'            DEFAULT NAME               01355000
.*                                                                      01356000
.XLAB2        ANOP  ,                                                   01357000
&M0M0001 DS    0H                             SCHEDIRB-0                01358000
.*******************************************************************    01359000
.***AE.PR01 PRINT CONTROLS, DEFAULT IS YES                              01360000
.*******************************************************************    01361000
              PUSH  PRINT                                               01362000
              AIF   ('&ZPRINT' NE 'NO').ZPRINTX  TURN PRINT ON          01363000
              PRINT OFF         ++ PR01                                 01364000
              AGO   .ZPRNTXX                                            01365000
.ZPRINTX      PRINT ON                                                  01366000
.ZPRNTXX      ANOP  ,                                                   01367000
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  01368000
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  01369000
.********************************************************************   01370000
.***AL.L01 INTERNAL ARRAY TO PRODUCE FORMATTED CODE                     01371000
.********************************************************************   01372000
                      LCLA  &ZOPN          LIST INSTRUCTION INDEX       01373000
                      LCLA  &ZOPN1         INVOCATION INDEX             01374000
                      LCLC  &ZOPL(4095)    LABEL                        01375000
                      LCLC  &ZOPO(4095)    OPERATION                    01376000
                      LCLC  &ZOPV(4095)    VALUE                        01377000
                      LCLC  &ZOPD(4095)    DESCRIPTION                  01378000
.*                                                                      01379000
&ZOPN                 SETA  0              INITIAL INST INDEX VALUE     01380000
.******************************************************************     01381000
.***AL.L10 SCHEDIRB FMT=LIST MF=S|L PARAMETERS                          01382000
.******************************************************************     01383000
                      AIF   ('&XMF' EQ 'L').ZLMFSL2                     01384000
                      AIF   ('&XMF' NE 'S').ZLMFSLX                     01385000
&XMFCTRL              SETC  '#Z'.'&SYSNDX'(1,4).'A'                     01386000
&XMFATTR              SETC  '0D'                                        01387000
.*                                                                      01388000
&ZOPN                 SETA  &ZOPN+1                                     01389000
&ZOPL(&ZOPN)          SETC  ' '                                         01390000
&ZOPO(&ZOPN)          SETC  'B'                                         01391000
&ZOPV(&ZOPN)          SETC  '&XMFCTRL.S'                                01392000
&ZOPD(&ZOPN)          SETC  '++ SCHEDIRB ARG PARMS'                     01393000
.*                                                                      01394000
&ZOPN                 SETA  &ZOPN+1                                     01395000
&ZOPL(&ZOPN)          SETC  ' '                                         01396000
&ZOPO(&ZOPN)          SETC  'SPACE'                                     01397000
&ZOPV(&ZOPN)          SETC  '1'                                         01398000
&ZOPD(&ZOPN)          SETC  ' '                                         01399000
.*                                                                      01400000
.ZLMFSL2              ANOP  ,                                           01401000
.*-------------------------------------------------------------------   01402000
.***AM.L01  SCHEDIRB FMT=LIST PARAMETERS                                01403000
&ZOPN                 SETA &ZOPN+1                                      01404000
&ZOPL(&ZOPN)          SETC '&XMFCTRL'                                   01405000
&ZOPO(&ZOPN)          SETC 'DS'                                         01406000
&ZOPV(&ZOPN)          SETC '&XMFATTR'                                   01407000
&ZOPD(&ZOPN)          SETC '++ SCHEDIRB PARM LIST'                      01408000
.*-------------------------------------------------------------------   01409000
.***AM.L02 XVERSION XL1                                                 01410000
&ZOPN                 SETA &ZOPN+1                                      01411000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XVERSION'                         01412000
&ZOPO(&ZOPN)          SETC 'DS'                                         01413000
&ZOPV(&ZOPN)          SETC 'XL1'                                        01414000
&ZOPD(&ZOPN)          SETC '++ INPUT XVERSION'                          01415000
.*-------------------------------------------------------------------   01416000
.***AM.L03 XFLAGS BL.8                                                  01417000
&ZOPN                 SETA &ZOPN+1                                      01418000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XFLAGS'                           01419000
&ZOPO(&ZOPN)          SETC 'DS'                                         01420000
&ZOPV(&ZOPN)          SETC 'BL.8'                                       01421000
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             01422000
.*                                                                      01423000
&ZOPN                 SETA  &ZOPN+1                                     01424000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XMODE_PROB'                      01425000
&ZOPO(&ZOPN)          SETC  'EQU'                                       01426000
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             01427000
&ZOPD(&ZOPN)          SETC  '++ XMODE.'                                 01428000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).PROB'                         01429000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01430000
.*                                                                      01431000
&ZOPN                 SETA  &ZOPN+1                                     01432000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XKEY_PROP'                       01433000
&ZOPO(&ZOPN)          SETC  'EQU'                                       01434000
&ZOPV(&ZOPN)          SETC  'B''01000000'''                             01435000
&ZOPD(&ZOPN)          SETC  '++ XKEY.'                                  01436000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).PROP'                         01437000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01438000
.*                                                                      01439000
&ZOPN                 SETA  &ZOPN+1                                     01440000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XSVAREA_YES'                     01441000
&ZOPO(&ZOPN)          SETC  'EQU'                                       01442000
&ZOPV(&ZOPN)          SETC  'B''00100000'''                             01443000
&ZOPD(&ZOPN)          SETC  '++ XSVAREA.'                               01444000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).YES'                          01445000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      01446000
.*-------------------------------------------------------------------   01447000
.***AM.L09  XRSV0002 CL2                                                01448000
&ZOPN                 SETA &ZOPN+1                                      01449000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0002'                         01450000
&ZOPO(&ZOPN)          SETC 'DS'                                         01451000
&ZOPV(&ZOPN)          SETC 'CL2'                                        01452000
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV0002'                      01453000
.*-------------------------------------------------------------------   01454000
.***AM.L09  XEPPTR A                                                    01455000
&ZOPN                 SETA &ZOPN+1                                      01456000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XEPPTR'                           01457000
&ZOPO(&ZOPN)          SETC 'DS'                                         01458000
&ZOPV(&ZOPN)          SETC 'A'                                          01459000
&ZOPD(&ZOPN)          SETC '++ &ZXEPPTR  XEPPTR'                        01460000
.*-------------------------------------------------------------------   01461000
.***AM.L09  XTCBPTR A                                                   01462000
&ZOPN                 SETA &ZOPN+1                                      01463000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XTCBPTR'                          01464000
&ZOPO(&ZOPN)          SETC 'DS'                                         01465000
&ZOPV(&ZOPN)          SETC 'A'                                          01466000
&ZOPD(&ZOPN)          SETC '++ &ZXTCBPTR  XTCBPTR'                      01467000
.*-------------------------------------------------------------------   01468000
.***AM.L09  XRBPTR A                                                    01469000
&ZOPN                 SETA &ZOPN+1                                      01470000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRBPTR'                           01471000
&ZOPO(&ZOPN)          SETC 'DS'                                         01472000
&ZOPV(&ZOPN)          SETC 'A'                                          01473000
&ZOPD(&ZOPN)          SETC '++ &ZXRBPTR  XRBPTR'                        01474000
.*-------------------------------------------------------------------   01475000
.***AM.L09  XPARAMPTR A                                                 01476000
&ZOPN                 SETA &ZOPN+1                                      01477000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XPARAMPTR'                        01478000
&ZOPO(&ZOPN)          SETC 'DS'                                         01479000
&ZOPV(&ZOPN)          SETC 'A'                                          01480000
&ZOPD(&ZOPN)          SETC '++ &ZXPARAMPTR  XPARAMPTR'                  01481000
.*-------------------------------------------------------------------   01482000
.***AM.L09  XIQEPTR A                                                   01483000
&ZOPN                 SETA &ZOPN+1                                      01484000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XIQEPTR'                          01485000
&ZOPO(&ZOPN)          SETC 'DS'                                         01486000
&ZOPV(&ZOPN)          SETC 'A'                                          01487000
&ZOPD(&ZOPN)          SETC '++ &ZXIQEPTR  XIQEPTR'                      01488000
.*-------------------------------------------------------------------   01489000
.***AM.L10 END OF SCHEDIRB LIST PARAMETERS                              01490000
&ZOPN                 SETA &ZOPN+1                                      01491000
&ZOPL(&ZOPN)          SETC '&XMFCTRL.L'                                 01492000
&ZOPO(&ZOPN)          SETC 'EQU'                                        01493000
&ZOPV(&ZOPN)          SETC '*-&XMFCTRL'                                 01494000
&ZOPD(&ZOPN)          SETC '++ LENGTH OF PLIST'                         01495000
.*                                                                      01496000
&ZOPN                 SETA &ZOPN+1                                      01497000
&ZOPL(&ZOPN)          SETC ' '                                          01498000
&ZOPO(&ZOPN)          SETC 'SPACE'                                      01499000
&ZOPV(&ZOPN)          SETC '1'                                          01500000
&ZOPD(&ZOPN)          SETC ' '                                          01501000
.*-------------------------------------------------------------------   01502000
.***AL.L12 SCHEDIRB FMT=LIST MF=S|L PARAMETERS                          01503000
                      AIF   ('&XMF' EQ 'L').ZMFLX  DONE IF MF=L         01504000
.*                                                                      01505000
&ZOPN                 SETA  &ZOPN+1                                     01506000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL.S'                                01507000
&ZOPO(&ZOPN)          SETC  'DC'                                        01508000
&ZOPV(&ZOPN)          SETC  '0H''0'''                                   01509000
&ZOPD(&ZOPN)          SETC  '++ SCHEDIRB ARG PARMS'                     01510000
.*                                                                      01511000
.ZLMFSLX              ANOP  ,                                           01512000
.*-------------------------------------------------------------------   01513000
.***AL.L13 SET ZPLLEN TO ITS APPROPRIATE VALUE                          01514000
&ZPLLEN               SETA 24                                           01515000
.*                                                                      01516000
.******************************************************************     01517000
.***AI.L01 SCHEDIRB FMT=LIST FILL IN PARAMETER AREA                     01518000
.******************************************************************     01519000
                      ACTR  10000                                       01520000
&ZCVAL                SETC  'LA'           ASSUME XA MODE               01521000
                      AIF   ('&SYSASCE' EQ 'P').ZIMFXA  SYSSTATE PRI    01522000
&ZCVAL                SETC  'LAE'          XAX MODE                     01523000
.ZIMFXA               ANOP ,                                            01524000
.*                                                                      01525000
                      AIF   ('&XMFCTRL'(1,1) NE '(').ZIMFN2  NOT GPR    01526000
&ZCGPR                SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)  GET GPR         01527000
                      AIF   ('&ZCGPR' EQ 'GPR1').ZIMFNX                 01528000
                      AIF   ('&ZCGPR' EQ 'GPR01').ZIMFNX                01529000
                      AIF   ('&ZCGPR' EQ 'REG1').ZIMFNX                 01530000
                      AIF   ('&ZCGPR' EQ 'REG01').ZIMFNX                01531000
                      AIF   ('&ZCGPR' EQ 'R1').ZIMFNX                   01532000
                      AIF   ('&ZCGPR' EQ '1').ZIMFNX                    01533000
                      AIF   ('&ZCGPR' EQ '01').ZIMFNX                   01534000
&ZOPN                 SETA  &ZOPN+1                                     01535000
&ZOPL(&ZOPN)          SETC  ' '                                         01536000
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    01537000
&ZOPV(&ZOPN)          SETC  '1,0(,&ZCGPR)'                              01538000
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       01539000
                      AGO   .ZIMFNX                                     01540000
.*                                                                      01541000
.ZIMFN2               ANOP ,                                            01542000
&ZOPN                 SETA  &ZOPN+1                                     01543000
&ZOPL(&ZOPN)          SETC  ' '                                         01544000
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    01545000
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL'                                01546000
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       01547000
.ZIMFNX               ANOP ,                                            01548000
.********************************************************************   01549000
.***AI.L02 SCHEDIRB FMT=LIST INITIALIZE PARAMETER AREA                  01550000
.********************************************************************   01551000
.***AI.L03 MF=(SLE)                                                     01552000
                      AIF   ('&XMF' EQ 'L').ZIMFLX                      01553000
.*                                                                      01554000
&ZOPN                 SETA  &ZOPN+1                                     01555000
&ZOPL(&ZOPN)          SETC  ' '                                         01556000
&ZOPO(&ZOPN)          SETC  'XC'                                        01557000
&ZOPV(&ZOPN)          SETC  '0(&ZPLLEN,1),0(1)'                         01558000
&ZOPD(&ZOPN)          SETC  '++ INITIALIZE'                             01559000
.ZIMFLX               ANOP  ,                                           01560000
.*-------------------------------------------------------------------   01561000
.***AI.L05 XFLAGS BL1                                                   01562000
&ZW                   SETC  ''                                          01563000
&ZCLNG                SETC  ''             RESET BIT ON FLAG            01564000
.*-------------------------------------------------------------------   01565000
.***AI.L08 XFLAGS "PROB"                                                01566000
.***      BL1'1XXXXXXX'                                                 01567000
         AIF   ('&XMODE' NE 'PROB').ZI3A                                01568000
&ZW                   SETC  '&ZW.1'                                     01569000
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01570000
                      AGO   .ZI3C                                       01571000
.*                                                                      01572000
.ZI3A                 ANOP  ,                                           01573000
&ZW                   SETC  '&ZW.0'                                     01574000
.ZI3C                 ANOP  ,                                           01575000
.*-------------------------------------------------------------------   01576000
.***AI.L08 XFLAGS "PROP"                                                01577000
.***      BL1'X1XXXXXX'                                                 01578000
         AIF   ('&XKEY' NE 'PROP').ZI4A                                 01579000
&ZW                   SETC  '&ZW.1'                                     01580000
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01581000
                      AGO   .ZI4C                                       01582000
.*                                                                      01583000
.ZI4A                 ANOP  ,                                           01584000
&ZW                   SETC  '&ZW.0'                                     01585000
.ZI4C                 ANOP  ,                                           01586000
.*-------------------------------------------------------------------   01587000
.***AI.L08 XFLAGS "YES"                                                 01588000
.***      BL1'XX1XXXXX'                                                 01589000
         AIF   ('&XSVAREA' NE 'YES').ZI5A                               01590000
&ZW                   SETC  '&ZW.100000'                                01591000
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              01592000
                      AGO   .ZI5C                                       01593000
.*                                                                      01594000
.ZI5A                 ANOP  ,                                           01595000
&ZW                   SETC  '&ZW.000000'                                01596000
.ZI5C                 ANOP  ,                                           01597000
.*-------------------------------------------------------------------   01598000
.***AI.L11 XFLAGS BL1                                                   01599000
                      AIF   ('&ZCLNG' NE 'YES').ZI5E  ALL ZERO BITS     01600000
&ZOPN                 SETA  &ZOPN+1                                     01601000
&ZOPL(&ZOPN)          SETC  ' '                                         01602000
&ZOPO(&ZOPN)          SETC  'OI'                                        01603000
&ZOPV(&ZOPN)          SETC  '1(1),B''&ZW'''                             01604000
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              01605000
.ZI5E                 ANOP  ,                                           01606000
.*-------------------------------------------------------------------   01607000
.***AI.L25  XEPPTR AL4                                                  01608000
                      AIF   ('&ZXEPPTR' EQ '').ZI7E  NOT USED           01609000
                      AIF   ('&ZXEPPTR' EQ 'OUTPUT').ZI7E               01610000
&ZCGPR                SETC  '&XEPPTR'                                   01611000
.*                                                                      01612000
                      AIF   ('&XEPPTR'(1,1) NE '(').ZI7B                01613000
&ZCGPR   SETC  '0('.'&XEPPTR'(2,K'&XEPPTR-2).')'                        01614000
                      AGO   .ZI7D                                       01615000
.ZI7B                 ANOP  ,                                           01616000
.*                                                                      01617000
&ZC                   SETC  '&XEPPTR'(1,1)                              01618000
                      AIF   (T'&ZC NE 'N').ZI7D                         01619000
&ZC                   SETC  '&XEPPTR'                                   01620000
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI7D                01621000
&ZCGPR                SETC  '=AL4(&XEPPTR)'                             01622000
.*                                                                      01623000
.ZI7D                 ANOP  ,                                           01624000
.*                                                                      01625000
&ZOPN                 SETA  &ZOPN+1                                     01626000
&ZOPL(&ZOPN)          SETC  ' '                                         01627000
&ZOPO(&ZOPN)          SETC  'MVC'                                       01628000
&ZOPV(&ZOPN)          SETC  '4(4,1),&ZCGPR'                             01629000
&ZOPD(&ZOPN)          SETC  '++ &ZXEPPTR XEPPTR AL4'                    01630000
.*                                                                      01631000
.ZI7E                 ANOP  ,                                           01632000
.*-------------------------------------------------------------------   01633000
.***AI.L25  XTCBPTR AL4                                                 01634000
                      AIF   ('&ZXTCBPTR' EQ '').ZI8E  NOT USED          01635000
                      AIF   ('&ZXTCBPTR' EQ 'OUTPUT').ZI8E              01636000
&ZCGPR                SETC  '&XTCBPTR'                                  01637000
.*                                                                      01638000
                      AIF   ('&XTCBPTR'(1,1) NE '(').ZI8B               01639000
&ZCGPR   SETC  '0('.'&XTCBPTR'(2,K'&XTCBPTR-2).')'                      01640000
.ZI8B                 ANOP  ,                                           01641000
.*                                                                      01642000
&ZC                   SETC  '&XTCBPTR'(1,1)                             01643000
                      AIF   (T'&ZC NE 'N').ZI8D                         01644000
&ZC                   SETC  '&XTCBPTR'                                  01645000
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI8D                01646000
&ZCGPR                SETC  '=AL4(&XTCBPTR)'                            01647000
.*                                                                      01648000
.ZI8D                 ANOP  ,                                           01649000
.*                                                                      01650000
&ZOPN                 SETA  &ZOPN+1                                     01651000
&ZOPL(&ZOPN)          SETC  ' '                                         01652000
&ZOPO(&ZOPN)          SETC  'MVC'                                       01653000
&ZOPV(&ZOPN)          SETC  '8(4,1),&ZCGPR'                             01654000
&ZOPD(&ZOPN)          SETC  '++ &ZXTCBPTR XTCBPTR AL4'                  01655000
.*                                                                      01656000
.ZI8E                 ANOP  ,                                           01657000
.*-------------------------------------------------------------------   01663000
.***AI.L25  XRBPTR AL4                                                  01664000
                      AIF   ('&ZXRBPTR' EQ '').ZI9E  NOT USED           01665000
                      AIF   ('&ZXRBPTR' EQ 'OUTPUT').ZI9E               01666000
&ZCGPR                SETC  '&XRBPTR'                                   01667000
.*                                                                      01668000
                      AIF   ('&XRBPTR'(1,1) NE '(').ZI9B                01669000
&ZCGPR   SETC  '0('.'&XRBPTR'(2,K'&XRBPTR-2).')'                        01670000
                      AGO   .ZI9D                                       01671000
.ZI9B                 ANOP  ,                                           01672000
.*                                                                      01673000
&ZC                   SETC  '&XRBPTR'(1,1)                              01674000
                      AIF   (T'&ZC NE 'N').ZI9D                         01675000
&ZC                   SETC  '&XRBPTR'                                   01676000
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI9D                01677000
&ZCGPR                SETC  '=AL4(&XRBPTR)'                             01678000
.*                                                                      01679000
.ZI9D                 ANOP  ,                                           01680000
.*                                                                      01681000
&ZOPN                 SETA  &ZOPN+1                                     01682000
&ZOPL(&ZOPN)          SETC  ' '                                         01683000
&ZOPO(&ZOPN)          SETC  'MVC'                                       01684000
&ZOPV(&ZOPN)          SETC  '12(4,1),&ZCGPR'                            01685000
&ZOPD(&ZOPN)          SETC  '++ &ZXRBPTR XRBPTR AL4'                    01686000
.*                                                                      01687000
.ZI9E                 ANOP  ,                                           01688000
.*-------------------------------------------------------------------   01689000
.***AI.L18  XPARAMPTR AL4                                               01690000
         AIF   ('&XPARAMPTR' NE 'NO_PARAM').ZI10                        01691000
&ZXPARAMPTR           SETC  ''             RESET INPUT/OUTPUT           01692000
.ZI10                 ANOP  ,                                           01693000
.*-------------------------------------------------------------------   01694000
.***AI.L25  XPARAMPTR AL4                                               01695000
                      AIF   ('&ZXPARAMPTR' EQ '').ZI10E  NOT USED       01696000
                      AIF   ('&ZXPARAMPTR' EQ 'OUTPUT').ZI10E           01697000
&ZCGPR                SETC  '&XPARAMPTR'                                01698000
.*                                                                      01699000
                      AIF   ('&XPARAMPTR'(1,1) NE '(').ZI10B            01700000
&ZCGPR   SETC  '0('.'&XPARAMPTR'(2,K'&XPARAMPTR-2).')'                  01701000
                      AGO   .ZI10D                                      01702000
.ZI10B                ANOP  ,                                           01703000
.*                                                                      01704000
&ZC                   SETC  '&XPARAMPTR'(1,1)                           01705000
                      AIF   (T'&ZC NE 'N').ZI10D                        01706000
&ZC                   SETC  '&XPARAMPTR'                                01707000
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI10D               01708000
&ZCGPR                SETC  '=AL4(&XPARAMPTR)'                          01709000
.*                                                                      01710000
.ZI10D                ANOP  ,                                           01711000
.*                                                                      01712000
&ZOPN                 SETA  &ZOPN+1                                     01713000
&ZOPL(&ZOPN)          SETC  ' '                                         01714000
&ZOPO(&ZOPN)          SETC  'MVC'                                       01715000
&ZOPV(&ZOPN)          SETC  '16(4,1),&ZCGPR'                            01716000
&ZOPD(&ZOPN)          SETC  '++ &ZXPARAMPTR XPARAMPTR AL4'              01717000
.*                                                                      01718000
.ZI10E                ANOP  ,                                           01719000
.*-------------------------------------------------------------------   01720000
.***AI.L25  XIQEPTR AL4                                                 01721000
                      AIF   ('&ZXIQEPTR' EQ '').ZI11E  NOT USED         01722000
                      AIF   ('&ZXIQEPTR' EQ 'OUTPUT').ZI11E             01723000
&ZCGPR                SETC  '&XIQEPTR'                                  01724000
.*                                                                      01725000
                      AIF   ('&XIQEPTR'(1,1) NE '(').ZI11B              01726000
&ZCGPR   SETC  '0('.'&XIQEPTR'(2,K'&XIQEPTR-2).')'                      01727000
.ZI11B                ANOP  ,                                           01728000
.*                                                                      01729000
&ZC                   SETC  '&XIQEPTR'(1,1)                             01730000
                      AIF   (T'&ZC NE 'N').ZI11D                        01731000
&ZC                   SETC  '&XIQEPTR'                                  01732000
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI11D               01733000
&ZCGPR                SETC  '=AL4(&XIQEPTR)'                            01734000
.*                                                                      01735000
.ZI11D                ANOP  ,                                           01736000
.*                                                                      01737000
&ZOPN                 SETA  &ZOPN+1                                     01738000
&ZOPL(&ZOPN)          SETC  ' '                                         01739000
&ZOPO(&ZOPN)          SETC  'MVC'                                       01740000
&ZOPV(&ZOPN)          SETC  '20(4,1),&ZCGPR'                            01741000
&ZOPD(&ZOPN)          SETC  '++ &ZXIQEPTR XIQEPTR AL4'                  01742000
.*                                                                      01743000
.ZI11E                ANOP  ,                                           01744000
.*-------------------------------------------------------------------   01745000
&ZOPN1                SETA &ZOPN                                        01746000
.*******************************************************************    01747000
.***  PROCESS SCHEDIRB OUTPUT PARAMETERS                                01748000
.*******************************************************************    01749000
                      ACTR  10000                                       01750000
.*******************************************************************    01751000
.***AO.X02  RETURN CODE PROCESSING                                      01752000
.*******************************************************************    01753000
                      AIF   (N'&RETCODE LE 0).ZMRETX                    01754000
                      AIF   ('&XRETCODE'(1,1) EQ '(').ZMRET2            01755000
                      AIF   ('&XRETCODE' EQ 'GPR15').ZMRETX             01756000
                      AIF   ('&XRETCODE' EQ 'REG15').ZMRETX             01757000
                      AIF   ('&XRETCODE' EQ 'R15').ZMRETX               01758000
                      AIF   ('&XRETCODE' EQ '15').ZMRETX                01759000
&ZOPN                 SETA  &ZOPN+1                                     01760000
&ZOPL(&ZOPN)          SETC  ' '                                         01761000
&ZOPO(&ZOPN)          SETC  'ST'                                        01762000
&ZOPV(&ZOPN)          SETC  '15,&XRETCODE'                              01763000
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        01764000
                      AGO   .ZMRETX                                     01765000
.*                                                                      01766000
.ZMRET2               ANOP  ,                                           01767000
&ZCGPR                SETC  '&XRETCODE'(2,K'&XRETCODE-2)                01768000
                      AIF   ('&ZCGPR' EQ 'GPR15').ZMRETX                01769000
                      AIF   ('&ZCGPR' EQ 'REG15').ZMRETX                01770000
                      AIF   ('&ZCGPR' EQ 'R15').ZMRETX                  01771000
                      AIF   ('&ZCGPR' EQ '15').ZMRETX                   01772000
&ZOPN                 SETA  &ZOPN+1                                     01773000
&ZOPL(&ZOPN)          SETC  ' '                                         01774000
&ZOPO(&ZOPN)          SETC  'LR'                                        01775000
&ZOPV(&ZOPN)          SETC  '&ZCGPR,15'                                 01776000
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        01777000
.ZMRETX               ANOP  ,                                           01778000
.*******************************************************************    01779000
.***AO.X04  LABEL FOR MF=L PROCESSING                                   01780000
.*******************************************************************    01781000
.ZMFLX                ANOP  ,              MF=L PROCESSING              01782000
.*******************************************************************    01783000
.***AO.X05  FORMAT GENERATED INSTRUCTIONS                               01784000
.*******************************************************************    01785000
                      ACTR  10000                                       01786000
.*                                                                      01787000
                      LCLA  &ZLC           COLUMN POSITION              01788000
                      LCLA  &ZOPX          LIST TABLE INDEX             01789000
                      LCLC  &ZLL           LABEL                        01790000
                      LCLC  &ZLOP          OPERATION                    01791000
                      LCLC  &ZLV           VALUE                        01792000
                      LCLC  &ZLD           DESCRIPTION                  01793000
.*                                                                      01794000
&ZOPX                 SETA  1                                           01795000
.ZL2                  AIF   (&ZOPX GT &ZOPN1).ZLX  B IF DONE            01796000
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              01797000
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              01798000
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              01799000
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              01800000
                      AIF   (K'&ZLD LE 0).ZL5                           01801000
&ZLC                  SETA  35             COMMENT COLUMN               01802000
                      AIF   ('&ZLD'(1,1) NE '*').ZL3                    01803000
&ZLC                  SETA  33             COMMMENT COLUMN              01804000
.ZL3                  AIF   (K'&ZLV GE &ZLC-16-1).ZL4                   01805000
&ZLV                  SETC  '&ZLV'.' '                                  01806000
                      AGO   .ZL3                                        01807000
.*                                                                      01808000
.ZL4                  ANOP  ,                                           01809000
&ZLV                  SETC  '&ZLV'.' '                                  01810000
.ZL5                  ANOP  ,                                           01811000
&ZLV                  SETC  '&ZLV'.'&ZLD'                               01812000
.*                                                                      01813000
&ZLL     &ZLOP &ZLV                                                     01814000
.*                                                                      01815000
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               01816000
                      AGO   .ZL2           CONTINUE LOOPING             01817000
.*                                                                      01818000
.ZLX                  ANOP  ,                                           01819000
                      AIF   ('&XMF' EQ 'L').ZLINKX  MF=L                01820000
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  01821000
         L     14,16(0,0)              GET CVT ADDRESS                  01822000
         L     14,772(14,0)            GET SFT ADDRESS                  01823000
         L     14,376(14,0)            GET LX FOR SERVICE ROUTINE       01824000
         PC    0(14)                                                    01825000
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  01826000
.ZLINKX               ANOP  ,                                           01827000
.*******************************************************************    01828000
.***AP.X01  FORMAT GENERATED CODE                                       01829000
.ZL21                 AIF   (&ZOPX GT &ZOPN).ZLX1  B IF DONE            01830000
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              01831000
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              01832000
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              01833000
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              01834000
                      AIF   (K'&ZLD LE 0).ZL51                          01835000
&ZLC                  SETA  35             COMMENT COLUMN               01836000
                      AIF   ('&ZLD'(1,1) NE '*').ZL31                   01837000
&ZLC                  SETA  33             COMMENT COLUMN               01838000
.ZL31                 AIF   (K'&ZLV GE &ZLC-16-1).ZL41                  01839000
&ZLV                  SETC  '&ZLV'.' '                                  01840000
                      AGO   .ZL31                                       01841000
.*                                                                      01842000
.ZL41                 ANOP  ,                                           01843000
&ZLV                  SETC  '&ZLV'.' '                                  01844000
.ZL51                 ANOP  ,                                           01845000
&ZLV                  SETC  '&ZLV'.'&ZLD'                               01846000
.*                                                                      01847000
&ZLL     &ZLOP &ZLV                                                     01848000
.*                                                                      01849000
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               01850000
                      AGO   .ZL21          CONTINUE LOOPING             01851000
.*                                                                      01852000
.ZLX1                 ANOP  ,                                           01853000
.*******************************************************************    01854000
.***AP.X02  END OF SCHEDIRB MACRO                                       01855000
&ZSCHEDIRB            SETC  'YES'          SET SCHEDIRB USED            01856000
         POP   PRINT                                                    01857000
*                                            SCHEDIRB-0                 01858000
         SPACE 1                                                        01859000
.ZLX2                 ANOP  ,                                           01860000
         MEND                                                           01861000
**********************************************************************/ 01862000
*/**** START OF SPECIFICATIONS **************************************** 01863000
*                                                                     * 01864000
*                                                                     * 01865000
*01* MACRO NAME:  SCHEDIRB                              -12/16/94-<0> * 01866000
*                                                                     * 01867000
*                                                                     * 01868000
*01* DESCRIPTIVE NAME:  Schedule IRB Services                         * 01869000
*                                                                     * 01870000
*01* PROPRIETARY STATEMENT:                                           * 01871000
*                                                                     * 01872000
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 01873000
*     THIS MACRO IS "RESTRICTED MATERIALS OF IBM"                     * 01874000
*     5655-068 (C) COPYRIGHT IBM CORP. 1992, 1995                     * 01875500
*                                                                     * 01877000
* STATUS= JBB5522                                                     * 01878000
*                                                                     * 01879000
*                                                                     * 01880000
*                                                                     * 01881000
*01* FUNCTION:                                                        * 01882000
*       See the SCHEDIRB macro prologue for details.                  * 01883000
*                                                                     * 01884000
*01* INPUT:                                                           * 01885000
*                                                                     * 01886000
*            ?SCHEDIRB    [PLISTVER                                   * 01886800
*                                   (xplistver|IMPLIED_VERSION)]    * 01887600
*                         EPPTR(xepptr)                              * 01888400
*                        |    TCBPTR(xtcbptr)                        * 01889200
*                        |    RBPTR(xrbptr)                          * 01890000
*                        |   [MODE(PROB)]                            * 01890800
*                        |   [MODE(SUPR)]                            * 01891600
*                        |   [KEY(PROP)]                             * 01892400
*                        |   [KEY(SUPR)]                             * 01893200
*                        |   [SVAREA(NO)]                            * 01894000
*                        |   [SVAREA(YES)]                           * 01894800
*                        |    [PARAMPTR(xparamptr|NO_PARAM)]        * 01895600
*                         IQEPTR(xiqeptr)                            * 01897000
*                         [RETCODE(xretcode)]                         * 01899000
*                        [MF(S)]                                     * 01900000
*                        [MF(L,xmfctrl,xmfattr|BDY(DWORD))]        * 01901000
*                        [MF(E,xmfctrl,COMPLETE)]                  * 01902000
*                                                                     * 01903000
****** END OF SPECIFICATIONS *****************************************/ 01904000
*/*PB.ECHO01 MACRO INVOCATION ECHO-----------------------------------*/ 01905000
*  ANS('@SPACE;') NORESCAN COL(MACLMAR);                                01906000
*  ANS('/* ? SCHEDIRB '||MACLIST||' ')                                  01907000
*      NORESCAN COL(MACLMAR+5);    /* START ECHO */                     01908000
*                                                                       01909000
*  DCL ZELO  FIXED;                                                     01910000
*  DCL ZECOL FIXED;                                                     01911000
*                                                                       01912000
*  ZELO=1;     /* STARTING COLUMN */                                    01913000
*  DO WHILE ZELO<=LENGTH(MACKEYS);  /* PARENTHSIS SCAN */               01914000
*    ZECOL=INDEX(MACKEYS(ZELO:LENGTH(MACKEYS)),')');                    01915000
*    IF ZECOL>0                                                         01916000
*      THEN                                                             01917000
*        DO;   /* PARENTHESIS FOUND */                                  01918000
*          ANS(MACKEYS(ZELO:ZELO+ZECOL-1)||' ')                         01919000
*             NORESCAN COL(MACLMAR+5);                                  01920000
*          ZELO=ZELO+ZECOL;        /* NEXT PORTION */                   01921000
*        END;                                                           01922000
*      ELSE                                                             01923000
*        DO;   /* REMAINING KEYS */                                     01924000
*          ANS(MACKEYS(ZELO:LENGTH(MACKEYS)))                           01925000
*             NORESCAN COL(MACLMAR+5);                                  01926000
*          ZELO=LENGTH(MACKEYS)+1;                                      01927000
*        END;                                                           01928000
*  END;                                                                 01929000
*  ANS(' -12/16/94-0- */')                                              01930000
*      NORESCAN COL(MACLMAR+5);    /* END ECHO */                       01931000
*/********************************************************************/ 01932000
*/*PV.DCL01 MACRO DECLARES AND CODE GENERATION CONTROLS              */ 01933000
*/********************************************************************/ 01934000
*  DCL ZPRINT  EXTERNAL; DEACT ZPRINT; /* YES=PRINT, NO=NO PRINT     */ 01935000
*  DCL ZTEST   EXTERNAL; DEACT ZTEST;  /* YES=TEST, NO=NO TEST       */ 01936000
*  DCL ZSYSTEM EXTERNAL; DEACT ZSYSTEM;/* PCCODE10, MVS, SAK, VM     */ 01937000
*                                                                       01938000
*  DCL   ZSCHEDIRB CHAR EXTERNAL; /* YES=USED AT LEAST ONCE          */ 01939000
*  DEACT ZSCHEDIRB;                                                     01940000
*                                                                       01941000
*  DCL ZMACRET FIXED; DEACT ZMACRET;                                    01942000
*  ZMACRET=0;                   /* MACRO COMPILE RETURN CODE         */ 01943000
*                                                                       01944000
*  DCL ZMS CHAR;   DEACT ZMS;   /* ERROR MESSAGE                     */ 01945000
*  DCL ZCVAL CHAR; DEACT ZCVAL; /* ERROR MESSAGE WORK AREA           */ 01946000
*                                                                       01947000
*  DCL ZI FIXED;  DEACT ZI;     /* INDEX FOR VARIABLE NUM OF PARMS   */ 01948000
*  DCL ZJ FIXED;  DEACT ZJ;     /* INDEX FOR VARIABLE NUM OF PARMS   */ 01949000
*  DCL ZK FIXED;  DEACT ZK;     /* INDEX FOR RANGE COLON (:)         */ 01950000
*  DCL ZL FIXED;  DEACT ZL;     /* INDEX FOR RANGE VALUE CHECKING    */ 01951000
*  DCL ZLO FIXED; DEACT ZLO;    /* LOW RANGE VALUE                   */ 01952000
*  DCL ZHI FIXED; DEACT ZHI;    /* HIGH RANGE VALUE                  */ 01953000
*  DCL ZW CHAR;   DEACT ZW;     /* WORK AREA FOR RANGE VALUE SUBLIST */ 01954000
*  DCL ZN FIXED;  DEACT ZN;     /* NUMERIC WORK VARIABLE             */ 01955000
*  DCL ZC CHAR;   DEACT ZC;     /* CHARACTER WORK VARIABLE           */ 01956000
*  DCL ZMAXINVOCLEN FIXED; DEACT ZMAXINVOCLEN;  /* INVOCATION LENGTH */ 01957000
*  DCL ZPLLEN FIXED; DEACT ZPLLEN;        /* PARAMETER LIST LENGTH   */ 01958000
*                                                                       01959000
*  DCL ZPRMMAX FIXED;           /* MAXIMUM PARM LIST SIZE            */ 01960000
*  DCL ZPRMNUM FIXED;           /* PARAMETER ARRAY INDEX             */ 01961000
*  DCL ZPRM(100);               /* PARAMETER ENTRY                   */ 01962000
*  DCL EHAMAXLEN FIXED EXTERNAL;   /* MAX ILIST SIZE FOR PARM LISTS  */ 01963000
*  DCL EHAREGS CHARACTER EXTERNAL; /* REG DCLS                       */ 01964000
*  DCL EHALIST CHARACTER EXTERNAL; /* STANDARD PARM LIST GENERATION  */ 01965000
*/*******************************************************************/  01966000
*/*PV.XVAR01 DECLARE ALL MACRO PARAMETER VARIABLES                  */  01967000
*/*******************************************************************/  01968000
*  DCL XPLISTVER FIXED;  DEACT XPLISTVER;  /***PV.XVAR02 INPUT VALUE */ 01968300
*  DCL ZXPLISTVER; DEACT ZXPLISTVER;  /***INPUT/OUTPUT CONTROL */       01968600
*  DCL XDUMMY2;  DEACT XDUMMY2;    /***PV.XVAR02 INPUT NAME */          01969000
*  DCL ZXDUMMY2; DEACT ZXDUMMY2;   /***INPUT/OUTPUT CONTROL */          01970000
*  DCL XEPPTR;  DEACT XEPPTR;      /***PV.XVAR02 INPUT NAME */          01971000
*  DCL ZXEPPTR; DEACT ZXEPPTR;     /***INPUT/OUTPUT CONTROL */          01972000
*  DCL XDUMMY1;  DEACT XDUMMY1;    /***PV.XVAR02 INPUT NAME */          01973000
*  DCL ZXDUMMY1; DEACT ZXDUMMY1;   /***INPUT/OUTPUT CONTROL */          01974000
*  DCL XTCBPTR;  DEACT XTCBPTR;    /***PV.XVAR02 INPUT NAME */          01975000
*  DCL ZXTCBPTR; DEACT ZXTCBPTR;   /***INPUT/OUTPUT CONTROL */          01976000
*  DCL XRBPTR;  DEACT XRBPTR;      /***PV.XVAR02 INPUT NAME */          01977000
*  DCL ZXRBPTR; DEACT ZXRBPTR;     /***INPUT/OUTPUT CONTROL */          01978000
*  DCL XMODE;  DEACT XMODE;        /***PV.XVAR02 INPUT VALUE */         01979000
*  DCL ZXMODE; DEACT ZXMODE;       /***INPUT/OUTPUT CONTROL */          01980000
*  DCL XKEY;  DEACT XKEY;          /***PV.XVAR02 INPUT VALUE */         01981000
*  DCL ZXKEY; DEACT ZXKEY;         /***INPUT/OUTPUT CONTROL */          01982000
*  DCL XSVAREA;  DEACT XSVAREA;    /***PV.XVAR02 INPUT VALUE */         01983000
*  DCL ZXSVAREA; DEACT ZXSVAREA;   /***INPUT/OUTPUT CONTROL */          01984000
*  DCL XPARAMPTR;  DEACT XPARAMPTR;  /***PV.XVAR02 INPUT NAME */        01985000
*  DCL ZXPARAMPTR; DEACT ZXPARAMPTR;  /***INPUT/OUTPUT CONTROL */       01986000
*  DCL XIQEPTR;  DEACT XIQEPTR;    /***PV.XVAR02 INPUT NAME */          01987000
*  DCL ZXIQEPTR; DEACT ZXIQEPTR;   /***INPUT/OUTPUT CONTROL */          01988000
*  DCL XRETCODE;  DEACT XRETCODE;  /***PV.XVAR02 OUTPUT NAME */         01989000
*  DCL ZXRETCODE; DEACT ZXRETCODE;  /***INPUT/OUTPUT CONTROL */         01990000
*  DCL XMF;  DEACT XMF;            /***PV.XVAR02 INPUT VALUE */         01991000
*  DCL ZXMF; DEACT ZXMF;           /***INPUT/OUTPUT CONTROL */          01992000
*  DCL XMFCTRL;  DEACT XMFCTRL;    /***PV.XVAR02 INPUT NAME */          01993000
*  DCL ZXMFCTRL; DEACT ZXMFCTRL;   /***INPUT/OUTPUT CONTROL */          01994000
*  DCL XMFATTR;  DEACT XMFATTR;    /***PV.XVAR02 INPUT VALUE */         01995000
*  DCL ZXMFATTR; DEACT ZXMFATTR;   /***INPUT/OUTPUT CONTROL */          01996000
*  DCL XMFSCK;  DEACT XMFSCK;      /***PV.XVAR02 INPUT VALUE */         01997000
*  DCL ZXMFSCK; DEACT ZXMFSCK;     /***INPUT/OUTPUT CONTROL */          01998000
*/********************************************************************/ 01999000
*/***PC.PLV01  PROCESS PLISTVER                                      */ 01999100
*/********************************************************************/ 01999200
*  IF TRANSLATE(PLISTVER(1)) = 'MAX' THEN                               01999300
*    XPLISTVER=0;                                                       01999400
*  ELSE                                                                 01999500
*    XPLISTVER=0;                                                       01999600
*  IF PLISTVER^=''                                                      01999700
*     & TRANSLATE(PLISTVER(1))^='IMPLIED_VERSION'                       01999800
*     & TRANSLATE(PLISTVER(1))^='MAX'                                   01999900
*    THEN                                                               02000000
*      DO;                                                              02000100
*        IF FIXED(PLISTVER(1))>=XPLISTVER                               02000200
*          THEN                                                         02000300
*              XPLISTVER=FIXED(PLISTVER(1));                            02000400
*          ELSE                                                         02000500
*            DO;                                                        02000600
*              ZMS=' 8, PLISTVER='||         /**KVALP* MSG*/            02000700
*                    PLISTVER(1)||                                      02000800
*                  ', BUT PLISTVER OF '||                               02000900
*                    CHAR(XPLISTVER)||                                  02001000
*                  ' IS REQUIRED.';                                     02001100
*              ANS MSG('?SCHEDIRB ---> '||ZMS);                         02001200
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          02001300
*              ZMACRET=8;                    /* MACRO ERROR */          02001400
*            END;                                                       02001500
*                                                                       02001600
*        IF PLISTVER='PLISTVER' | PLISTVER='()'  /*CHCK ENTRY*/         02001700
*          THEN                                                         02001800
*            DO;                                                        02001900
*              ZMS=' 8, THE "PLISTVER" KEY'|| /**KOPTP* MSG*/           02002000
*                  ' MUST CONTAIN ONE'||                                02002100
*                  ' (OR MORE) ARGUMENT(S).';                           02002200
*              ANS MSG('?SCHEDIRB ---> '||ZMS);                         02002300
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          02002400
*              ZMACRET=8;                    /* MACRO ERROR */          02002500
*            END;                                                       02002600
*        IF NUMBER(PLISTVER)>1               /* CHECK POSITIONALS */    02002700
*          THEN                                                         02002800
*            DO;                                                        02002900
*              ZMS=' 8, "PLISTVER'||         /**KPOSP* MSG*/            02003000
*                  PLISTVER||                                           02003100
*                  '" "PLISTVER"'||                                     02003200
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        02003300
*              ANS MSG('?SCHEDIRB ---> '||ZMS);                         02003400
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          02003500
*              ZMACRET=8;                    /* MACRO ERROR */          02003600
*            END;                                                       02003700
*                                                                       02003800
*        ZCVAL='';                           /* ERROR FLAG */           02003900
*        ZC=PLISTVER(1);                                                02004000
*        DO ZL=1 TO LENGTH(ZC);              /* MUST BE NUMBER */       02004100
*          IF ZC(ZL:ZL)<'0' |                /* MUST BE NUMERIC */      02004200
*             ZC(ZL:ZL)>'9'                  /* MUST BE NUMERIC */      02004300
*            THEN                                                       02004400
*              ZCVAL='NUMERIC';              /* NUMERIC ERROR */        02004500
*        END;                                                           02004600
*        IF ZCVAL=''                                                    02004700
*          THEN                                                         02004800
*            DO;                             /* CHECK RANGE LIMITS */   02004900
*              IF XPLISTVER<0 |              /* LOW LIMIT */            02005000
*                 XPLISTVER>0                /* HIGH LIMIT */           02005100
*                THEN                                                   02005200
*                  ZCVAL='RANGE';            /* RANGE ERROR */          02005300
*            END;                                                       02005400
*        IF ZCVAL^=''                                                   02005500
*          THEN                                                         02005600
*            DO;                             /* RANGE ERROR */          02005700
*              ZXPLISTVER='';                /* RESET IN/OUTPUT */      02005800
*              ZMS=' 8, "PLISTVER '||        /**KRNGP* MSG*/            02005900
*                  PLISTVER||                                           02006000
*                  '" THE RANGE IS "0-0"'||                             02006100
*                  ' FOR ARGUMENT 1.';                                  02006200
*              ANS MSG('?SCHEDIRB ---> '||ZMS);                         02006300
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          02006400
*              ZMACRET=8;                    /* MACRO ERROR */          02006500
*            END;                                                       02006600
*      END;                                                             02006700
*                                                                       02006800
*/********************************************************************/ 02006900
*/***PG.MF01  PROCESS MF MACRO FORMS                                 */ 02007000
*/********************************************************************/ 02007100
*/*PG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 02007200
*  XMF='';                                                              02007300
*/*PG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 02007400
*  IF TRANSLATE(MF(1))                                                  02007500
*              = 'S'                         /* CHECK FOR KEYWORD */    02007600
*    THEN                                                               02007700
*      DO;                                                              02008000
*        XMF='S';                            /* SET XVARIABLE */        02009000
*        IF NUMBER(MF)>1                     /* CHECK POSITIONALS */    02010000
*          THEN                                                         02011000
*            DO;                                                        02012000
*              ZMS=' 8, "MF'||               /**KPOSP* MSG*/            02013000
*                  MF||                                                 02014000
*                  '" "MF"'||                                           02015000
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        02016000
*              ANS MSG('?SCHEDIRB ---> '||ZMS);                         02017000
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          02018000
*              ZMACRET=8;                    /* MACRO ERROR */          02019000
*            END;                                                       02020000
*/*PG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 02021000
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KYWRDCTL DO GROUP */     02022000
*/*PG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 02023000
*  IF TRANSLATE(MF(1))                                                  02024000
*              = 'L'                         /* CHECK FOR KEYWORD */    02025000
*    THEN                                                               02026000
*      DO;                                                              02027000
*        XMF='L';                            /* SET XVARIABLE */        02028000
*        IF NUMBER(MF)>3                     /* CHECK POSITIONALS */    02029000
*          THEN                                                         02030000
*            DO;                                                        02031000
*              ZMS=' 8, "MF'||               /**KPOSP* MSG*/            02032000
*                  MF||                                                 02033000
*                  '" "MF"'||                                           02034000
*                  ' CAN HAVE ONLY 3 ARGUMENTS.';                       02035000
*              ANS MSG('?SCHEDIRB ---> '||ZMS);                         02036000
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          02037000
*              ZMACRET=8;                    /* MACRO ERROR */          02038000
*            END;                                                       02039000
*/*PG.KKCTL10 -MF(L) SPECIAL CHECK-----------------------------------*/ 02040000
*        ZMAXINVOCLEN = LENGTH(MF) + 2;                                 02041000
*        IF PLISTVER ^= ''                                              02041200
*          THEN                                                         02041400
*            ZMAXINVOCLEN=ZMAXINVOCLEN + LENGTH(PLISTVER) + 8;          02041600
*        IF LENGTH(MACKEYS) > ZMAXINVOCLEN |                            02042000
*           MACLIST ^= ''                    /* CHECK FOR OTHER PARMS*/ 02043000
*          THEN                                                         02044000
*            DO;                                                        02045000
*              ZMS=' 8, THE "L" FORM OF "MF"'|| /**MFLP* MSG*/          02046000
*                  ' CAN ONLY HAVE'||                                   02047000
*                  ' THE "PLISTVER" KEY'||                              02048000
*                  ' SPECIFIED ON THE INVOCATION.';                     02049000
*              ANS MSG('?SCHEDIRB ---> '||ZMS);                         02050000
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          02051000
*              ZMACRET=8;                    /* MACRO ERROR */          02052000
*            END;                                                       02053000
*/*PG.KXVAR03 NAME, OPT RQD INPUT, POS(2) -XVARIABLE-----------------*/ 02054000
*  XMFCTRL=MF(2);                            /* SET XVARIABLE */        02055000
*  IF MF(2)=''                               /* CHECK FOR NULL */       02056000
*   THEN                                                                02057000
*    DO;                                     /* KEY IS REQUIRED */      02058000
*        ZXMFCTRL='';                        /* RESET IN/OUTPUT */      02059000
*        ZMS=' 8, WHEN "L" IS SPECIFIED'||                              02060000
*            ' FOR THE "MF" KEY, POSITIONAL'||                          02061000
*            ' ARG 2 IS REQUIRED.';          /**KRQDP* MSG*/            02062000
*        ANS MSG('?SCHEDIRB ---> '||ZMS);                               02063000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                02064000
*        ZMACRET=8;                          /* MACRO ERROR */          02065000
*    END;                                                               02066000
*  ELSE                                                                 02067000
*    ZXMFCTRL='INPUT';                       /* SET IN/OUTPUT */        02068000
*/*PG.KXVAR13 VALUE, OPT INPUT, POS(3) -XVARIABLE--------------------*/ 02069000
*  ZXMFATTR='INPUT';                         /* SET IN/OUTPUT */        02070000
*  XMFATTR='BDY(DWORD)';                     /* SET DEFAULT */          02071000
*  IF MF(3)^=''                              /* CHECK FOR NULL */       02072000
*    THEN                                                               02073000
*      XMFATTR=MF(3);                        /* SET XVARIABLE */        02074000
*/*PG.KCK01 VALUE, OPT INPUT, POS(3) -CHARACTER LENGTH---------------*/ 02075000
*  IF ZXMFATTR^='' &                         /* NOT IN/OUTPUT */        02076000
*     LENGTH(XMFATTR)>60                                                02077000
*    THEN                                                               02078000
*      DO;                                                              02079000
*        ZXMFATTR='';                        /* RESET IN/OUTPUT */      02080000
*        ZMS=' 8, "MF'||                     /**KLNGP* MSG*/            02081000
*            MF||                                                       02082000
*            '" ARGUMENT 3 EXCEEDS THE MAXIMUM'||                       02083000
*            ' LENGTH OF 60 CHARACTERS. ';                              02084000
*        ANS MSG('?SCHEDIRB ---> '||ZMS);                               02085000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                02086000
*        ZMACRET=8;                          /* MACRO ERROR */          02087000
*      END;                                                             02088000
*/*PG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 02089000
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KYWRDCTL DO GROUP */     02090000
*/*PG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 02091000
*  IF TRANSLATE(MF(1))                                                  02092000
*              = 'E'                         /* CHECK FOR KEYWORD */    02093000
*    THEN                                                               02094000
*      DO;                                                              02095000
*        XMF='E';                            /* SET XVARIABLE */        02096000
*        IF NUMBER(MF)>3                     /* CHECK POSITIONALS */    02097000
*          THEN                                                         02098000
*            DO;                                                        02099000
*              ZMS=' 8, "MF'||               /**KPOSP* MSG*/            02100000
*                  MF||                                                 02101000
*                  '" "MF"'||                                           02102000
*                  ' CAN HAVE ONLY 3 ARGUMENTS.';                       02103000
*              ANS MSG('?SCHEDIRB ---> '||ZMS);                         02104000
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          02105000
*              ZMACRET=8;                    /* MACRO ERROR */          02106000
*            END;                                                       02107000
*/*PG.KXVAR03 NAME, OPT RQD INPUT, POS(2) -XVARIABLE-----------------*/ 02108000
*  XMFCTRL=MF(2);                            /* SET XVARIABLE */        02109000
*  IF MF(2)=''                               /* CHECK FOR NULL */       02110000
*   THEN                                                                02111000
*    DO;                                     /* KEY IS REQUIRED */      02112000
*        ZXMFCTRL='';                        /* RESET IN/OUTPUT */      02113000
*        ZMS=' 8, WHEN "E" IS SPECIFIED'||                              02114000
*            ' FOR THE "MF" KEY, POSITIONAL'||                          02115000
*            ' ARG 2 IS REQUIRED.';          /**KRQDP* MSG*/            02116000
*        ANS MSG('?SCHEDIRB ---> '||ZMS);                               02117000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                02118000
*        ZMACRET=8;                          /* MACRO ERROR */          02119000
*    END;                                                               02120000
*  ELSE                                                                 02121000
*    ZXMFCTRL='INPUT';                       /* SET IN/OUTPUT */        02122000
*/*PG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 02123000
*  XMFSCK='';                                /* RESET XVARIABLE */      02124000
*  IF TRANSLATE(MF(3))                                                  02125000
*              = 'COMPLETE'                  /* CHECK FOR KEYWORD */    02126000
*    THEN                                                               02127000
*      XMFSCK = 'COMPLETE';                  /* SET XVARIABLE */        02128000
*/*PG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 02129000
*  ZXMFSCK='INPUT';                          /* SET IN/OUTPUT */        02130000
*  IF XMFSCK=''                              /* CHECK FOR KEYWORD */    02131000
*    THEN                                                               02132000
*      DO;                                   /* KEYWORD NOT ENTERED */  02133000
*        XMFSCK='COMPLETE';                  /* SET DEFAULT */          02134000
*        IF MF(3)^=''                                                   02135000
*          THEN                                                         02136000
*            DO;                                                        02137000
*              ZXMFSCK='';                   /* RESET IN/OUTPUT */      02138000
*              ZMS=' 8, "MF'||               /**KUKWP* MSG*/            02139000
*                  MF||'"'||                                            02140000
*                  ' ARGUMENT 3 IS AN UNKNOWN KEYWORD. '||              02141000
*                  ' VALID KEYWORD CHOICE(S) ARE:'||                    02142000
*                  ' "COMPLETE".';           /* VALID KEYWORD */        02143000
*              ANS MSG('?SCHEDIRB ---> '||ZMS);                         02144000
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          02145000
*              ZMACRET=8;                    /* MACRO ERROR */          02146000
*            END;                                                       02147000
*      END;                                                             02148000
*/*PG.KKCTL05 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 02149000
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KYWRDCTL DO GROUP */     02150000
*/*PG.KKCTL06 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 02151000
*  IF MF='MF'                                                           02151600
*    | MF='()'                               /*CHECK ENTRY*/            02152200
*     THEN                                                              02153000
*       DO;                                                             02154000
*              ZMS=' 8, THE "MF" KEY'||      /**KOPTP* MSG*/            02155000
*                  ' MUST CONTAIN ONE'||                                02156000
*                  ' (OR MORE) ARGUMENT(S).';                           02157000
*              ANS MSG('?SCHEDIRB ---> '||ZMS);                         02158000
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          02159000
*              ZMACRET=8;                    /* MACRO ERROR */          02160000
*       END;                                                            02161000
*  ELSE                                                                 02162000
*    DO;                                                                02163000
*      ZXMF='INPUT';                         /* SET IN/OUTPUT */        02164000
*      IF XMF=''                             /* CHECK FOR KEYWORD */    02165000
*        THEN                                                           02166000
*          DO;                               /* KEYWORD NOT ENTERED */  02167000
*            XMF='S';                        /* SET DEFAULT */          02168000
*            XMFSCK='COMPLETE';              /* COMPLETE CHECKING */    02169000
*            IF MF(1)^=''                    /* CHECK FOR KEYWORD */    02170000
*              THEN                                                     02171000
*                DO;                                                    02172000
*                  ZXMF='';                  /* RESET IN/OUTPUT */      02173000
*              ZMS=' 8, "MF'||               /**KUKWP* MSG*/            02174000
*                  MF||'"'||                                            02175000
*                  ' ARGUMENT 1 IS AN UNKNOWN KEYWORD. '||              02176000
*                  ' VALID KEYWORD CHOICE(S) ARE:'||                    02177000
*                  ' "S",'||                 /* VALID KEYWORD */        02178000
*                  ' "L",'||                 /* VALID KEYWORD */        02179000
*                  ' OR "E".';               /* VALID KEYWORD */        02180000
*              ANS MSG('?SCHEDIRB ---> '||ZMS);                         02181000
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          02182000
*              ZMACRET=8;                    /* MACRO ERROR */          02183000
*                END;                                                   02184000
*          END;                                                         02185000
*    END;                                                               02186000
*/********************************************************************/ 02187000
*/***PD.P01 FULL DEFAULT CHECKING                                    */ 02188000
*/********************************************************************/ 02189000
*  IF PLISTVER=''                                                       02189200
*     | PLISTVER(1)='IMPLIED_VERSION'                                   02189400
*    THEN                                                               02189600
*      ZC='ON';                              /* DEFAULT FLAG ON */      02189800
*    ELSE                                                               02190000
*      ZC='OFF';                             /* DEFAULT FLAG OFF */     02190200
*/********************************************************************/ 02191000
*/***PD.P02 DEFAULT ECHO                                             */ 02192000
*/********************************************************************/ 02193000
*/*PD.P02 XMF^='L' & XMFSCK='COMPLETE' ------------------------------*/ 02194000
*  IF XMF^='L'                                                          02195000
*    THEN                                                               02196000
*      DO;                                   /* FULL SYNTAX CHECK */    02197000
*        ANS('/*DEFAULT(S): */')                                        02198000
*           NORESCAN COL(MACLMAR+5);                                    02198200
*/*PD.DFLT02 PRINT DEFAULT(S) IF APPROPRIATE ------------------------*/ 02198400
*  IF PLISTVER=''                                                       02198600
*    THEN                                                               02198800
*      ANS('/* PLISTVER('||                                             02199000
*          CHAR(XPLISTVER)||                                            02199200
*          ')*/')                                                       02199400
*          NORESCAN COL(MACLMAR+5);                                     02199600
*/*PD.KMEKY01 NAME, RQD INPUT, ME KEYS -XVARIABLE KEY----------------*/ 02200000
*  XDUMMY2='';                               /* RESET XVARIABLE */      02201000
*  IF EPPTR^=''                              /* CHECK ME KEY */         02202000
*    THEN                                                               02203000
*      DO;                                   /* VALID ME KEY */         02204000
*        XDUMMY2='EPPTR';                    /* SET XVARIABLE */        02205000
*      END;                                                             02206000
*/*PD.KMEKY02 NAME, RQD INPUT, ME KEYS -XVARIABLE KEY----------------*/ 02207000
*  IF IQEPTR^=''                             /* CHECK ME KEY */         02208000
*    THEN                                                               02209000
*      DO;                                                              02210000
*        IF XDUMMY2=''                       /* CHECK XVARIABLE */      02211000
*          THEN                                                         02212000
*            DO;                             /* VALID ME KEY */         02213000
*              XDUMMY2='IQEPTR';             /* SET XVAR1 */            02214000
*            END;                                                       02215000
*      END;                                                             02216000
*/*PD.KMEKY07 NAME, RQD INPUT, ME KEYS -ME KEY DEFAULT---------------*/ 02217000
*  IF XDUMMY2=''                             /* CHECK XVARIABLE */      02218000
*    THEN                                                               02219000
*      DO;                                                              02220000
*        XDUMMY2='EPPTR';                                               02221000
*        ZC='ON';                            /* DEFAULT FLAG ON */      02222000
*      END;                                                             02223000
*/*PD.KMEKY10 NAME, RQD INPUT, ME KEYS -START------------------------*/ 02224000
*  IF XDUMMY2='EPPTR'                        /* CHECK FOR ME KEY */     02225000
*    THEN                                                               02226000
*      DO;   /**** START OF A MUTUALLY EXCLUSIVE KEY DO GROUP */        02227000
*/*PD.KMEKY01 NAME, RQD INPUT, ME KEYS -XVARIABLE KEY----------------*/ 02228000
*  XDUMMY1='';                               /* RESET XVARIABLE */      02229000
*  IF TCBPTR^=''                             /* CHECK ME KEY */         02230000
*    THEN                                                               02231000
*      DO;                                   /* VALID ME KEY */         02232000
*        XDUMMY1='TCBPTR';                   /* SET XVARIABLE */        02233000
*      END;                                                             02234000
*/*PD.KMEKY02 NAME, RQD INPUT, ME KEYS -XVARIABLE KEY----------------*/ 02235000
*  IF RBPTR^=''                              /* CHECK ME KEY */         02236000
*    THEN                                                               02237000
*      DO;                                                              02238000
*        IF XDUMMY1=''                       /* CHECK XVARIABLE */      02239000
*          THEN                                                         02240000
*            DO;                             /* VALID ME KEY */         02241000
*              XDUMMY1='RBPTR';              /* SET XVAR1 */            02242000
*            END;                                                       02243000
*      END;                                                             02244000
*/*PD.KMEKY07 NAME, RQD INPUT, ME KEYS -ME KEY DEFAULT---------------*/ 02245000
*  IF XDUMMY1=''                             /* CHECK XVARIABLE */      02246000
*    THEN                                                               02247000
*      DO;                                                              02248000
*        XDUMMY1='TCBPTR';                                              02249000
*        ZC='ON';                            /* DEFAULT FLAG ON */      02250000
*      END;                                                             02251000
*/*PD.KMEKY10 NAME, RQD INPUT, ME KEYS -START------------------------*/ 02252000
*  IF XDUMMY1='TCBPTR'                       /* CHECK FOR ME KEY */     02253000
*    THEN                                                               02254000
*      DO;   /**** START OF A MUTUALLY EXCLUSIVE KEY DO GROUP */        02255000
*/*PD.KMEKY09 NAME, RQD INPUT, ME KEYS -END--------------------------*/ 02256000
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KEY DO GROUP */          02257000
*/*PD.KMEKY10 NAME, RQD INPUT, ME KEYS -START------------------------*/ 02258000
*  IF XDUMMY1='RBPTR'                        /* CHECK FOR ME KEY */     02259000
*    THEN                                                               02260000
*      DO;   /**** START OF A MUTUALLY EXCLUSIVE KEY DO GROUP */        02261000
*/*PD.KMEKY11 NAME, RQD INPUT, ME KEYS -END--------------------------*/ 02262000
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KEY DO GROUP */          02263000
*/*PD.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 02264000
*  IF MODE(1)=''                                                        02265000
*    THEN                                                               02266000
*      DO;                                                              02267000
*        ANS('/*MODE(PROB)*/')                                          02268000
*            NORESCAN COL(MACLMAR+5);                                   02269000
*        ZC='ON';                            /* DEFAULT FLAG ON */      02270000
*      END;                                                             02271000
*/*PD.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 02272000
*  IF KEY(1)=''                                                         02273000
*    THEN                                                               02274000
*      DO;                                                              02275000
*        ANS('/*KEY(PROP)*/')                                           02276000
*            NORESCAN COL(MACLMAR+5);                                   02277000
*        ZC='ON';                            /* DEFAULT FLAG ON */      02278000
*      END;                                                             02279000
*/*PD.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 02280000
*  IF SVAREA(1)=''                                                      02281000
*    THEN                                                               02282000
*      DO;                                                              02283000
*        ANS('/*SVAREA(NO)*/')                                          02284000
*            NORESCAN COL(MACLMAR+5);                                   02285000
*        ZC='ON';                            /* DEFAULT FLAG ON */      02286000
*      END;                                                             02287000
*/*PD.KXVAR01 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 02288000
*  XPARAMPTR='';                                                        02289000
*  IF PARAMPTR(1)=''                                                    02290000
*    THEN                                                               02291000
*      DO;                                                              02292000
*        XPARAMPTR='NO_PARAM';               /* SET DEFAULT */          02293000
*        ZC='ON';                            /* DEFAULT FLAG ON */      02294000
*      END;                                                             02295000
*/*PD.DFLT02 PRINT DEFAULT(S) IF APPROPRIATE ------------------------*/ 02296000
*  IF XPARAMPTR^=''                                                     02297000
*    THEN                                                               02298000
*      ANS('/* PARAMPTR('||                                             02299000
*          XPARAMPTR||                                                  02300000
*          ')*/')                                                       02301000
*          NORESCAN COL(MACLMAR+5);                                     02302000
*/*PD.KMEKY09 NAME, RQD INPUT, ME KEYS -END--------------------------*/ 02303000
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KEY DO GROUP */          02304000
*/*PD.KMEKY10 NAME, RQD INPUT, ME KEYS -START------------------------*/ 02305000
*  IF XDUMMY2='IQEPTR'                       /* CHECK FOR ME KEY */     02306000
*    THEN                                                               02307000
*      DO;   /**** START OF A MUTUALLY EXCLUSIVE KEY DO GROUP */        02308000
*/*PD.KMEKY11 NAME, RQD INPUT, ME KEYS -END--------------------------*/ 02324000
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KEY DO GROUP */          02325000
*  IF ZC='OFF'                               /*NO DEFAULTS TAKEN */     02326000
*    THEN                                                               02327000
*      ANS('/* NONE. */')                                               02328000
*         NORESCAN COL(MACLMAR+5);                                      02329000
*/*PD.P04 END DEFAULT ECHO ------------------------------------------*/ 02330000
*      END;                                                             02331000
*/********************************************************************/ 02332000
*/*PB.SYSL01 INVOKE SP LEVEL AND SYSTEM STATE MACROS                 */ 02333000
*/********************************************************************/ 02334000
*  DCL SYSSPLV CHAR EXTERNAL; DEACT SYSSPLV;/* SPLEVEL 1,2,3         */ 02335000
*  DCL SYSASCE CHAR EXTERNAL; DEACT SYSASCE;/* STATE ANY P AR */        02336000
*                                                                       02337000
*  IF SYSASCE=''                                                        02338000
*    THEN                                                               02339000
*      DO;                                                              02340000
*        IF SYSSPLV=''                                                  02341000
*          THEN                                                         02342000
*            ANS('?SPLEVEL  (TEST);') COL(MACLMAR);                     02343000
*        IF SYSSPLV^='1' & SYSSPLV^='2'                                 02344000
*          THEN                                                         02345000
*            ANS('?SYSSTATE (TEST);') COL(MACLMAR);                     02346000
*          ELSE                                                         02347000
*            SYSASCE='P';                    /* SYSSTATE DEFAULT*/      02348000
*      END;                                                             02349000
*/********************************************************************/ 02350000
*/***PG.P01 FULL MACRO SYNTAX CHECKING                               */ 02351000
*/********************************************************************/ 02352000
*/*PG.P02 XMF^='L' & XMFSCK='COMPLETE' ------------------------------*/ 02353000
*  IF XMF^='L'                                                          02354000
*    THEN                                                               02355000
*      DO;                                   /* FULL SYNTAX CHECK */    02356000
*/*PG.P03 EXCESSIVE POSITIONAL ARGUMENTS-----------------------------*/ 02357000
*  IF NUMBER(MACLIST)>0                      /* CHECK POSITIONALS */    02358000
*    THEN                                                               02359000
*      DO;                                                              02360000
*        ZMS=' 8, POSITIONAL ARGUMENT(S),'|| /**PPOSP* MSG*/            02361000
*            ' "'||MACLIST||'"'||                                       02362000
*            ' CANNOT BE USED.'||                                       02363000
*            ' NO POSITIONAL ARGUMENTS'||                               02364000
*            ' ARE ALLOWED.';                                           02365000
*        ANS MSG('?SCHEDIRB ---> '||ZMS);                               02366000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                02367000
*        ZMACRET=8;                          /* MACRO ERROR */          02368000
*      END;                                                             02369000
*/*PG.KMEKY01 NAME, RQD INPUT, ME KEYS -XVARIABLE KEY----------------*/ 02370000
*  XDUMMY2='';                               /* RESET XVARIABLE */      02371000
*  IF EPPTR^=''                              /* CHECK ME KEY */         02372000
*    THEN                                                               02373000
*      DO;                                   /* VALID ME KEY */         02374000
*        IF NUMBER(EPPTR)>1                  /* CHECK SUBLISTS */       02375000
*          THEN                                                         02376000
*            DO;                                                        02377000
*              ZMS=' 8, "EPPTR'||            /**KPOSP* MSG*/            02378000
*                  EPPTR||                                              02379000
*                  '" "EPPTR"'||                                        02380000
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        02381000
*              ANS MSG('?SCHEDIRB ---> '||ZMS);                         02382000
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          02383000
*              ZMACRET=8;                    /* MACRO ERROR */          02384000
*            END;                                                       02385000
*        XDUMMY2='EPPTR';                    /* SET XVARIABLE */        02386000
*        XEPPTR=EPPTR(1);                    /* SET XVARIABLE */        02387000
*        ZXDUMMY2='INPUT';                   /* SET IN/OUTPUT */        02388000
*        ZXEPPTR='INPUT';                    /* SET IN/OUTPUT */        02389000
*        IF EPPTR(1)=''                      /* CHECK ME KEY */         02390000
*          THEN                                                         02391000
*            DO;                                                        02392000
*              ZXDUMMY2='';                  /* RESET IN/OUTPUT */      02393000
*              ZXEPPTR='';                   /* RESET IN/OUTPUT */      02394000
*              ZMS=' 8,  '||                                            02395000
*                  ' "EPPTR" KEY AND ITS ARGUMENT'||                    02396000
*                  ' ARE REQUIRED.';         /**KRQDP* MSG*/            02397000
*              ANS MSG('?SCHEDIRB ---> '||ZMS);                         02398000
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          02399000
*              ZMACRET=8;                    /* MACRO ERROR */          02400000
*           END;                                                        02401000
*      END;                                                             02402000
*/*PG.KMEKY02 NAME, RQD INPUT, ME KEYS -XVARIABLE KEY----------------*/ 02403000
*  IF IQEPTR^=''                             /* CHECK ME KEY */         02404000
*    THEN                                                               02405000
*      DO;                                                              02406000
*        IF NUMBER(IQEPTR)>1                 /* CHECK SUBLISTS */       02407000
*          THEN                                                         02408000
*            DO;                                                        02409000
*              ZMS=' 8, "IQEPTR'||           /**KPOSP* MSG*/            02410000
*                  IQEPTR||                                             02411000
*                  '" "IQEPTR"'||                                       02412000
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        02413000
*              ANS MSG('?SCHEDIRB ---> '||ZMS);                         02414000
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          02415000
*              ZMACRET=8;                    /* MACRO ERROR */          02416000
*            END;                                                       02417000
*        IF XDUMMY2=''                       /* CHECK XVARIABLE */      02418000
*          THEN                                                         02419000
*            DO;                             /* VALID ME KEY */         02420000
*              XDUMMY2='IQEPTR';             /* SET XVAR1 */            02421000
*              XIQEPTR=IQEPTR(1);            /* SET XVAR2 */            02422000
*              ZXDUMMY2='INPUT';             /* SET IN/OUTPUT */        02423000
*              ZXIQEPTR='INPUT';             /* SET IN/OUTPUT */        02424000
*              IF IQEPTR(1)=''               /* CHECK ME KEY */         02425000
*                THEN                                                   02426000
*                  DO;                                                  02427000
*                    ZXDUMMY2='';            /* RESET IN/OUTPUT */      02428000
*                    ZXIQEPTR='';            /* RESET IN/OUTPUT */      02429000
*                    ZMS=' 8,  '||                                      02430000
*                        ' "IQEPTR" KEY AND ITS ARGUMENT'||             02431000
*                        ' ARE REQUIRED.';   /**KRQDP* MSG*/            02432000
*                    ANS MSG('?SCHEDIRB ---> '||ZMS);                   02433000
*                    ANS(COMMENT(ZMS)) COL(MACLMAR);                    02434000
*                    ZMACRET=8;              /* MACRO ERROR */          02435000
*                  END;                                                 02436000
*            END;                                                       02437000
*          ELSE                                                         02438000
*            DO;                                                        02439000
*              ZMS=' 8, "IQEPTR'||           /**KMEKP* MSG*/            02440000
*                  IQEPTR||'"'||                                        02441000
*                  ' IS MUTUALLY EXCLUSIVE WITH THE "'||                02442000
*                  XDUMMY2||                                            02443000
*                  '" KEY.';                                            02444000
*              ANS MSG('?SCHEDIRB ---> '||ZMS);                         02445000
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          02446000
*              ZMACRET=8;                    /* MACRO ERROR */          02447000
*            END;                                                       02448000
*      END;                                                             02449000
*/*PG.KMEKY08 NAME, RQD INPUT, ME KEYS -ME KEY DEFAULT---------------*/ 02450000
*  IF XDUMMY2=''                             /* CHECK XVARIABLE */      02451000
*    THEN                                                               02452000
*      DO;                                                              02453000
*        XDUMMY2='EPPTR';                    /* SET DEFAULT */          02454000
*        XEPPTR='0';                         /* SET DEFAULT */          02455000
*        ZXDUMMY2='';                        /* RESET IN/OUTPUT */      02456000
*        ZXEPPTR='';                         /* RESET IN/OUTPUT */      02457000
*        ZMS=' 8, ONE OF THE FOLLOWING'||    /**KMERP* MSG*/            02458000
*            ' MUTUALLY EXCLUSIVE KEY(S) IS'||                          02459000
*            ' REQUIRED:'||                                             02460000
*            ' "EPPTR"'||                    /* VALID ME KEY */         02461000
*            ' OR "IQEPTR".';                /* VALID ME KEY */         02462000
*        ANS MSG('?SCHEDIRB ---> '||ZMS);                               02463000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                02464000
*        ZMACRET=8;                          /* MACRO ERROR */          02465000
*      END;                                                             02466000
*/*PG.KMEKY11 NAME, RQD INPUT, ME KEYS -START------------------------*/ 02467000
*  IF XDUMMY2='EPPTR'                        /* CHECK FOR ME KEY */     02468000
*    THEN                                                               02469000
*      DO;   /**** START OF A MUTUALLY EXCLUSIVE KEY DO GROUP */        02470000
*/*PG.KMEKY01 NAME, RQD INPUT, ME KEYS -XVARIABLE KEY----------------*/ 02471000
*  XDUMMY1='';                               /* RESET XVARIABLE */      02472000
*  IF TCBPTR^=''                             /* CHECK ME KEY */         02473000
*    THEN                                                               02474000
*      DO;                                   /* VALID ME KEY */         02475000
*        IF NUMBER(TCBPTR)>1                 /* CHECK SUBLISTS */       02476000
*          THEN                                                         02477000
*            DO;                                                        02478000
*              ZMS=' 8, "TCBPTR'||           /**KPOSP* MSG*/            02479000
*                  TCBPTR||                                             02480000
*                  '" "TCBPTR"'||                                       02481000
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        02482000
*              ANS MSG('?SCHEDIRB ---> '||ZMS);                         02483000
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          02484000
*              ZMACRET=8;                    /* MACRO ERROR */          02485000
*            END;                                                       02486000
*        XDUMMY1='TCBPTR';                   /* SET XVARIABLE */        02487000
*        XTCBPTR=TCBPTR(1);                  /* SET XVARIABLE */        02488000
*        ZXDUMMY1='INPUT';                   /* SET IN/OUTPUT */        02489000
*        ZXTCBPTR='INPUT';                   /* SET IN/OUTPUT */        02490000
*        IF TCBPTR(1)=''                     /* CHECK ME KEY */         02491000
*          THEN                                                         02492000
*            DO;                                                        02493000
*              ZXDUMMY1='';                  /* RESET IN/OUTPUT */      02494000
*              ZXTCBPTR='';                  /* RESET IN/OUTPUT */      02495000
*              ZMS=' 8,  '||                                            02496000
*                  ' "TCBPTR" KEY AND ITS ARGUMENT'||                   02497000
*                  ' ARE REQUIRED.';         /**KRQDP* MSG*/            02498000
*              ANS MSG('?SCHEDIRB ---> '||ZMS);                         02499000
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          02500000
*              ZMACRET=8;                    /* MACRO ERROR */          02501000
*           END;                                                        02502000
*      END;                                                             02503000
*/*PG.KMEKY02 NAME, RQD INPUT, ME KEYS -XVARIABLE KEY----------------*/ 02504000
*  IF RBPTR^=''                              /* CHECK ME KEY */         02505000
*    THEN                                                               02506000
*      DO;                                                              02507000
*        IF NUMBER(RBPTR)>1                  /* CHECK SUBLISTS */       02508000
*          THEN                                                         02509000
*            DO;                                                        02510000
*              ZMS=' 8, "RBPTR'||            /**KPOSP* MSG*/            02511000
*                  RBPTR||                                              02512000
*                  '" "RBPTR"'||                                        02513000
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        02514000
*              ANS MSG('?SCHEDIRB ---> '||ZMS);                         02515000
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          02516000
*              ZMACRET=8;                    /* MACRO ERROR */          02517000
*            END;                                                       02518000
*        IF XDUMMY1=''                       /* CHECK XVARIABLE */      02519000
*          THEN                                                         02520000
*            DO;                             /* VALID ME KEY */         02521000
*              XDUMMY1='RBPTR';              /* SET XVAR1 */            02522000
*              XRBPTR=RBPTR(1);              /* SET XVAR2 */            02523000
*              ZXDUMMY1='INPUT';             /* SET IN/OUTPUT */        02524000
*              ZXRBPTR='INPUT';              /* SET IN/OUTPUT */        02525000
*              IF RBPTR(1)=''                /* CHECK ME KEY */         02526000
*                THEN                                                   02527000
*                  DO;                                                  02528000
*                    ZXDUMMY1='';            /* RESET IN/OUTPUT */      02529000
*                    ZXRBPTR='';             /* RESET IN/OUTPUT */      02530000
*                    ZMS=' 8,  '||                                      02531000
*                        ' "RBPTR" KEY AND ITS ARGUMENT'||              02532000
*                        ' ARE REQUIRED.';   /**KRQDP* MSG*/            02533000
*                    ANS MSG('?SCHEDIRB ---> '||ZMS);                   02534000
*                    ANS(COMMENT(ZMS)) COL(MACLMAR);                    02535000
*                    ZMACRET=8;              /* MACRO ERROR */          02536000
*                  END;                                                 02537000
*            END;                                                       02538000
*          ELSE                                                         02539000
*            DO;                                                        02540000
*              ZMS=' 8, "RBPTR'||            /**KMEKP* MSG*/            02541000
*                  RBPTR||'"'||                                         02542000
*                  ' IS MUTUALLY EXCLUSIVE WITH THE "'||                02543000
*                  XDUMMY1||                                            02544000
*                  '" KEY.';                                            02545000
*              ANS MSG('?SCHEDIRB ---> '||ZMS);                         02546000
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          02547000
*              ZMACRET=8;                    /* MACRO ERROR */          02548000
*            END;                                                       02549000
*      END;                                                             02550000
*/*PG.KMEKY08 NAME, RQD INPUT, ME KEYS -ME KEY DEFAULT---------------*/ 02551000
*  IF XDUMMY1=''                             /* CHECK XVARIABLE */      02552000
*    THEN                                                               02553000
*      DO;                                                              02554000
*        XDUMMY1='TCBPTR';                   /* SET DEFAULT */          02555000
*        XTCBPTR='0';                        /* SET DEFAULT */          02556000
*        ZXDUMMY1='';                        /* RESET IN/OUTPUT */      02557000
*        ZXTCBPTR='';                        /* RESET IN/OUTPUT */      02558000
*        ZMS=' 8, ONE OF THE FOLLOWING'||    /**KMERP* MSG*/            02559000
*            ' MUTUALLY EXCLUSIVE KEY(S) IS'||                          02560000
*            ' REQUIRED:'||                                             02561000
*            ' "TCBPTR"'||                   /* VALID ME KEY */         02562000
*            ' OR "RBPTR".';                 /* VALID ME KEY */         02563000
*        ANS MSG('?SCHEDIRB ---> '||ZMS);                               02564000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                02565000
*        ZMACRET=8;                          /* MACRO ERROR */          02566000
*      END;                                                             02567000
*/*PG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 02568000
*  XMODE='';                                                            02569000
*/*PG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 02570000
*  IF TRANSLATE(MODE(1))                                                02571000
*              = 'PROB'                      /* CHECK FOR KEYWORD */    02572000
*     | MODE(1)=''                           /* CHECK FOR NULL */       02573000
*    THEN                                                               02574000
*      DO;                                                              02575000
*        XMODE='PROB';                       /* SET XVARIABLE */        02576000
*        IF NUMBER(MODE)>1                   /* CHECK POSITIONALS */    02577000
*          THEN                                                         02578000
*            DO;                                                        02579000
*              ZMS=' 8, "MODE'||             /**KPOSP* MSG*/            02580000
*                  MODE||                                               02581000
*                  '" "MODE"'||                                         02582000
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        02583000
*              ANS MSG('?SCHEDIRB ---> '||ZMS);                         02584000
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          02585000
*              ZMACRET=8;                    /* MACRO ERROR */          02586000
*            END;                                                       02587000
*/*PG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 02588000
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KYWRDCTL DO GROUP */     02589000
*/*PG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 02590000
*  IF TRANSLATE(MODE(1))                                                02591000
*              = 'SUPR'                      /* CHECK FOR KEYWORD */    02592000
*    THEN                                                               02593000
*      DO;                                                              02594000
*        XMODE='SUPR';                       /* SET XVARIABLE */        02595000
*        IF NUMBER(MODE)>1                   /* CHECK POSITIONALS */    02596000
*          THEN                                                         02597000
*            DO;                                                        02598000
*              ZMS=' 8, "MODE'||             /**KPOSP* MSG*/            02599000
*                  MODE||                                               02600000
*                  '" "MODE"'||                                         02601000
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        02602000
*              ANS MSG('?SCHEDIRB ---> '||ZMS);                         02603000
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          02604000
*              ZMACRET=8;                    /* MACRO ERROR */          02605000
*            END;                                                       02606000
*/*PG.KKCTL05 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 02607000
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KYWRDCTL DO GROUP */     02608000
*/*PG.KKCTL06 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 02609000
*  IF MODE='MODE'                                                       02609600
*    | MODE='()'                             /*CHECK ENTRY*/            02610200
*     THEN                                                              02611000
*       DO;                                                             02612000
*              ZMS=' 8, THE "MODE" KEY'||    /**KOPTP* MSG*/            02613000
*                  ' MUST CONTAIN ONE'||                                02614000
*                  ' (OR MORE) ARGUMENT(S).';                           02615000
*              ANS MSG('?SCHEDIRB ---> '||ZMS);                         02616000
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          02617000
*              ZMACRET=8;                    /* MACRO ERROR */          02618000
*       END;                                                            02619000
*  ELSE                                                                 02620000
*    DO;                                                                02621000
*      ZXMODE='INPUT';                       /* SET IN/OUTPUT */        02622000
*      IF XMODE=''                           /* CHECK FOR KEYWORD */    02623000
*        THEN                                                           02624000
*          DO;                               /* KEYWORD NOT ENTERED */  02625000
*            XMODE='PROB';                   /* SET DEFAULT */          02626000
*            IF MODE(1)^=''                  /* CHECK FOR KEYWORD */    02627000
*              THEN                                                     02628000
*                DO;                                                    02629000
*                  ZXMODE='';                /* RESET IN/OUTPUT */      02630000
*              ZMS=' 8, "MODE'||             /**KUKWP* MSG*/            02631000
*                  MODE||'"'||                                          02632000
*                  ' ARGUMENT 1 IS AN UNKNOWN KEYWORD. '||              02633000
*                  ' VALID KEYWORD CHOICE(S) ARE:'||                    02634000
*                  ' "PROB"'||               /* VALID KEYWORD */        02635000
*                  ' OR "SUPR".';            /* VALID KEYWORD */        02636000
*              ANS MSG('?SCHEDIRB ---> '||ZMS);                         02637000
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          02638000
*              ZMACRET=8;                    /* MACRO ERROR */          02639000
*                END;                                                   02640000
*          END;                                                         02641000
*    END;                                                               02642000
*/*PG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 02643000
*  XKEY='';                                                             02644000
*/*PG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 02645000
*  IF TRANSLATE(KEY(1))                                                 02646000
*              = 'PROP'                      /* CHECK FOR KEYWORD */    02647000
*     | KEY(1)=''                            /* CHECK FOR NULL */       02648000
*    THEN                                                               02649000
*      DO;                                                              02650000
*        XKEY='PROP';                        /* SET XVARIABLE */        02651000
*        IF NUMBER(KEY)>1                    /* CHECK POSITIONALS */    02652000
*          THEN                                                         02653000
*            DO;                                                        02654000
*              ZMS=' 8, "KEY'||              /**KPOSP* MSG*/            02655000
*                  KEY||                                                02656000
*                  '" "KEY"'||                                          02657000
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        02658000
*              ANS MSG('?SCHEDIRB ---> '||ZMS);                         02659000
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          02660000
*              ZMACRET=8;                    /* MACRO ERROR */          02661000
*            END;                                                       02662000
*/*PG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 02663000
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KYWRDCTL DO GROUP */     02664000
*/*PG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 02665000
*  IF TRANSLATE(KEY(1))                                                 02666000
*              = 'SUPR'                      /* CHECK FOR KEYWORD */    02667000
*    THEN                                                               02668000
*      DO;                                                              02669000
*        XKEY='SUPR';                        /* SET XVARIABLE */        02670000
*        IF NUMBER(KEY)>1                    /* CHECK POSITIONALS */    02671000
*          THEN                                                         02672000
*            DO;                                                        02673000
*              ZMS=' 8, "KEY'||              /**KPOSP* MSG*/            02674000
*                  KEY||                                                02675000
*                  '" "KEY"'||                                          02676000
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        02677000
*              ANS MSG('?SCHEDIRB ---> '||ZMS);                         02678000
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          02679000
*              ZMACRET=8;                    /* MACRO ERROR */          02680000
*            END;                                                       02681000
*/*PG.KKCTL05 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 02682000
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KYWRDCTL DO GROUP */     02683000
*/*PG.KKCTL06 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 02684000
*  IF KEY='KEY'                                                         02684600
*    | KEY='()'                              /*CHECK ENTRY*/            02685200
*     THEN                                                              02686000
*       DO;                                                             02687000
*              ZMS=' 8, THE "KEY" KEY'||     /**KOPTP* MSG*/            02688000
*                  ' MUST CONTAIN ONE'||                                02689000
*                  ' (OR MORE) ARGUMENT(S).';                           02690000
*              ANS MSG('?SCHEDIRB ---> '||ZMS);                         02691000
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          02692000
*              ZMACRET=8;                    /* MACRO ERROR */          02693000
*       END;                                                            02694000
*  ELSE                                                                 02695000
*    DO;                                                                02696000
*      ZXKEY='INPUT';                        /* SET IN/OUTPUT */        02697000
*      IF XKEY=''                            /* CHECK FOR KEYWORD */    02698000
*        THEN                                                           02699000
*          DO;                               /* KEYWORD NOT ENTERED */  02700000
*            XKEY='PROP';                    /* SET DEFAULT */          02701000
*            IF KEY(1)^=''                   /* CHECK FOR KEYWORD */    02702000
*              THEN                                                     02703000
*                DO;                                                    02704000
*                  ZXKEY='';                 /* RESET IN/OUTPUT */      02705000
*              ZMS=' 8, "KEY'||              /**KUKWP* MSG*/            02706000
*                  KEY||'"'||                                           02707000
*                  ' ARGUMENT 1 IS AN UNKNOWN KEYWORD. '||              02708000
*                  ' VALID KEYWORD CHOICE(S) ARE:'||                    02709000
*                  ' "PROP"'||               /* VALID KEYWORD */        02710000
*                  ' OR "SUPR".';            /* VALID KEYWORD */        02711000
*              ANS MSG('?SCHEDIRB ---> '||ZMS);                         02712000
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          02713000
*              ZMACRET=8;                    /* MACRO ERROR */          02714000
*                END;                                                   02715000
*          END;                                                         02716000
*    END;                                                               02717000
*/*PG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 02718000
*  XSVAREA='';                                                          02719000
*/*PG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 02720000
*  IF TRANSLATE(SVAREA(1))                                              02721000
*              = 'NO'                        /* CHECK FOR KEYWORD */    02722000
*     | SVAREA(1)=''                         /* CHECK FOR NULL */       02723000
*    THEN                                                               02724000
*      DO;                                                              02725000
*        XSVAREA='NO';                       /* SET XVARIABLE */        02726000
*        IF NUMBER(SVAREA)>1                 /* CHECK POSITIONALS */    02727000
*          THEN                                                         02728000
*            DO;                                                        02729000
*              ZMS=' 8, "SVAREA'||           /**KPOSP* MSG*/            02730000
*                  SVAREA||                                             02731000
*                  '" "SVAREA"'||                                       02732000
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        02733000
*              ANS MSG('?SCHEDIRB ---> '||ZMS);                         02734000
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          02735000
*              ZMACRET=8;                    /* MACRO ERROR */          02736000
*            END;                                                       02737000
*/*PG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 02738000
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KYWRDCTL DO GROUP */     02739000
*/*PG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 02740000
*  IF TRANSLATE(SVAREA(1))                                              02741000
*              = 'YES'                       /* CHECK FOR KEYWORD */    02742000
*    THEN                                                               02743000
*      DO;                                                              02744000
*        XSVAREA='YES';                      /* SET XVARIABLE */        02745000
*        IF NUMBER(SVAREA)>1                 /* CHECK POSITIONALS */    02746000
*          THEN                                                         02747000
*            DO;                                                        02748000
*              ZMS=' 8, "SVAREA'||           /**KPOSP* MSG*/            02749000
*                  SVAREA||                                             02750000
*                  '" "SVAREA"'||                                       02751000
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        02752000
*              ANS MSG('?SCHEDIRB ---> '||ZMS);                         02753000
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          02754000
*              ZMACRET=8;                    /* MACRO ERROR */          02755000
*            END;                                                       02756000
*/*PG.KKCTL05 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 02757000
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KYWRDCTL DO GROUP */     02758000
*/*PG.KKCTL06 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 02759000
*  IF SVAREA='SVAREA'                                                   02759600
*    | SVAREA='()'                           /*CHECK ENTRY*/            02760200
*     THEN                                                              02761000
*       DO;                                                             02762000
*              ZMS=' 8, THE "SVAREA" KEY'||  /**KOPTP* MSG*/            02763000
*                  ' MUST CONTAIN ONE'||                                02764000
*                  ' (OR MORE) ARGUMENT(S).';                           02765000
*              ANS MSG('?SCHEDIRB ---> '||ZMS);                         02766000
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          02767000
*              ZMACRET=8;                    /* MACRO ERROR */          02768000
*       END;                                                            02769000
*  ELSE                                                                 02770000
*    DO;                                                                02771000
*      ZXSVAREA='INPUT';                     /* SET IN/OUTPUT */        02772000
*      IF XSVAREA=''                         /* CHECK FOR KEYWORD */    02773000
*        THEN                                                           02774000
*          DO;                               /* KEYWORD NOT ENTERED */  02775000
*            XSVAREA='NO';                   /* SET DEFAULT */          02776000
*            IF SVAREA(1)^=''                /* CHECK FOR KEYWORD */    02777000
*              THEN                                                     02778000
*                DO;                                                    02779000
*                  ZXSVAREA='';              /* RESET IN/OUTPUT */      02780000
*              ZMS=' 8, "SVAREA'||           /**KUKWP* MSG*/            02781000
*                  SVAREA||'"'||                                        02782000
*                  ' ARGUMENT 1 IS AN UNKNOWN KEYWORD. '||              02783000
*                  ' VALID KEYWORD CHOICE(S) ARE:'||                    02784000
*                  ' "NO"'||                 /* VALID KEYWORD */        02785000
*                  ' OR "YES".';             /* VALID KEYWORD */        02786000
*              ANS MSG('?SCHEDIRB ---> '||ZMS);                         02787000
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          02788000
*              ZMACRET=8;                    /* MACRO ERROR */          02789000
*                END;                                                   02790000
*          END;                                                         02791000
*    END;                                                               02792000
*/*PG.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 02793000
*  IF PARAMPTR='PARAMPTR' | PARAMPTR='()'    /*CHECK ENTRY*/            02794000
*    THEN                                                               02795000
*      DO;                                                              02796000
*        ZMS=' 8, THE "PARAMPTR" KEY'||      /**KOPTP* MSG*/            02797000
*            ' MUST CONTAIN ONE'||                                      02798000
*            ' (OR MORE) ARGUMENT(S).';                                 02799000
*        ANS MSG('?SCHEDIRB ---> '||ZMS);                               02800000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                02801000
*        ZMACRET=8;                          /* MACRO ERROR */          02802000
*      END;                                                             02803000
*  IF NUMBER(PARAMPTR)>1                     /* CHECK POSITIONALS */    02804000
*    THEN                                                               02805000
*      DO;                                                              02806000
*        ZMS=' 8, "PARAMPTR'||               /**KPOSP* MSG*/            02807000
*            PARAMPTR||                                                 02808000
*            '" "PARAMPTR"'||                                           02809000
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              02810000
*        ANS MSG('?SCHEDIRB ---> '||ZMS);                               02811000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                02812000
*        ZMACRET=8;                          /* MACRO ERROR */          02813000
*      END;                                                             02814000
*/*PG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 02815000
*  ZXPARAMPTR='INPUT';                       /* SET IN/OUTPUT */        02816000
*  XPARAMPTR='NO_PARAM';                     /* SET DEFAULT */          02817000
*  IF PARAMPTR(1)^=''                        /* CHECK FOR NULL */       02818000
*    THEN                                                               02819000
*      XPARAMPTR=PARAMPTR(1);                /* SET XVARIABLE */        02820000
*/*PG.KMEKY10 NAME, RQD INPUT, ME KEYS -END--------------------------*/ 02821000
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KEY DO GROUP */          02822000
*/*PG.KMEKY12 NAME, RQD INPUT, ME KEYS -DISALLOWED KEYS--------------*/ 02823000
*  IF XDUMMY2='IQEPTR'                       /* CHECK FOR ME KEY */     02824000
*    THEN                                                               02825000
*      DO;                                   /*DISALLOWED KEYS CHECK */ 02826500
*        ZCVAL='';                           /* INCORRECT KEYS FIELD */ 02828000
*        IF TCBPTR^=''                       /* CHECK KEY */            02829000
*          THEN                                                         02830000
*            ZCVAL=ZCVAL||',TCBPTR';         /* INCORRECT KEY USED */   02831000
*        IF RBPTR^=''                        /* CHECK KEY */            02831200
*          THEN                                                         02831400
*            ZCVAL=ZCVAL||',RBPTR';          /* INCORRECT KEY USED */   02831600
*        IF MODE^=''                         /* CHECK KEY */            02832000
*          THEN                                                         02833000
*            ZCVAL=ZCVAL||',MODE';           /* INCORRECT KEY USED */   02834000
*        IF KEY^=''                          /* CHECK KEY */            02835000
*          THEN                                                         02836000
*            ZCVAL=ZCVAL||',KEY';            /* INCORRECT KEY USED */   02837000
*        IF SVAREA^=''                       /* CHECK KEY */            02838000
*          THEN                                                         02839000
*            ZCVAL=ZCVAL||',SVAREA';         /* INCORRECT KEY USED */   02840000
*        IF PARAMPTR^=''                     /* CHECK KEY */            02841000
*          THEN                                                         02842000
*            ZCVAL=ZCVAL||',PARAMPTR';       /* INCORRECT KEY USED */   02843000
*        IF ZCVAL^=''                                                   02844000
*          THEN                                                         02845000
*            DO;                             /* INCORRECT KEYS USED */  02846000
*              ZCVAL=ZCVAL(2:LENGTH(ZCVAL));                            02847000
*              ZMS=' 8, "IQEPTR'||           /**KMEIP* MSG*/            02848000
*                  '"'||                                                02849000
*                  ' DOES NOT ALLOW THE USE OF THE'||                   02850000
*                  ' FOLLOWING KEY(S) "'||                              02851000
*                  ZCVAL||'".';                                         02852000
*              ANS MSG('?SCHEDIRB ---> '||ZMS);                         02853000
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          02854000
*              ZMACRET=8;                    /* MACRO ERROR */          02855000
*            END;                                                       02856000
*      END;                                                             02867000
*/*PG.KXVAR01 NAME, OPT OUTPUT, KEYS -EXCESSIVE ARGUMENTS------------*/ 02887000
*  IF RETCODE='RETCODE' | RETCODE='()'       /*CHECK ENTRY*/            02888000
*    THEN                                                               02889000
*      DO;                                                              02890000
*        ZMS=' 8, THE "RETCODE" KEY'||       /**KOPTP* MSG*/            02891000
*            ' MUST CONTAIN ONE'||                                      02892000
*            ' (OR MORE) ARGUMENT(S).';                                 02893000
*        ANS MSG('?SCHEDIRB ---> '||ZMS);                               02894000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                02895000
*        ZMACRET=8;                          /* MACRO ERROR */          02896000
*      END;                                                             02897000
*  IF NUMBER(RETCODE)>1                      /* CHECK POSITIONALS */    02898000
*    THEN                                                               02899000
*      DO;                                                              02900000
*        ZMS=' 8, "RETCODE'||                /**KPOSP* MSG*/            02901000
*            RETCODE||                                                  02902000
*            '" "RETCODE"'||                                            02903000
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              02904000
*        ANS MSG('?SCHEDIRB ---> '||ZMS);                               02905000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                02906000
*        ZMACRET=8;                          /* MACRO ERROR */          02907000
*      END;                                                             02908000
*/*PG.KXVAR15 NAME, OPT OUTPUT, KEYS -XVARIABLE----------------------*/ 02909000
*  IF RETCODE(1)^=''                         /* CHECK FOR NULL */       02910000
*    THEN                                                               02911000
*      DO;                                                              02912000
*        XRETCODE=RETCODE(1);                /* SET XVARIABLE */        02913000
*        ZXRETCODE='OUTPUT';                 /* SET OUTPUT */           02914000
*      END;                                                             02915000
*  ELSE                                                                 02916000
*    IF ZXRETCODE^=''                                                   02917000
*      THEN                                                             02918000
*        ZXRETCODE='';                       /* RESET OUTPUT */         02919000
*/*PG.P04 XMF^='L' & XMFSCK='COMPLETE' ------------------------------*/ 02920000
*      END;                                  /* END COMPLETE CHECKING*/ 02921000
*/********************************************************************/ 02922000
*/***PE.MR01 GENERATE CODE IF ZMACRET=0                              */ 02923000
*/********************************************************************/ 02924000
*  IF ZMACRET = 0                                                       02925000
*    THEN                                                               02926000
*      DO;                                                              02927000
*/********************************************************************/ 02928000
*/***PE.PR01 PRINT CONTROLS, DEFAULT IS YES                          */ 02929000
*/********************************************************************/ 02930000
*  ANS(MACCONC||'LIST PUSH NOECHO;') NORESCAN COL(MACLMAR);             02931000
*  IF ZPRINT='NO'                            /* PRINT IS OFF */         02932000
*    THEN                                                               02933000
*      ANS(MACCONC||'LIST OFF NOECHO;') NORESCAN COL(MACLMAR);          02934000
*    ELSE                                                               02935000
*      ANS(MACCONC||'LIST ON NOECHO;')  NORESCAN COL(MACLMAR);          02936000
*/********************************************************************/ 02937000
*/*PE.DO02 OUTER MACRO DO STATEMENT----------------------------------*/ 02938000
*  IF XMF^='L'                                                          02939000
*    THEN                                                               02940000
*      ANS('DO; /* SCHEDIRB-PLISTVER */')                               02941000
*          NORESCAN COL(MACLMAR);                                       02942000
*/*MCMPLS01 RFY 15*/                                                    02943000
*  IF XMF^='L' & ZMACRET = 0                                            02944000
*    THEN                                                               02945000
*      ANS('RFY GPR15F RSTD;') NORESCAN COL(MACLMAR);                   02946000
*/*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*/  02947000
*  DCL EHAMAPS CHAR EXTERNAL;                                           02948000
*  IF INDEX(EHAMAPS,'XM@')=0 THEN                                       02949000
*    EHAMAPS=EHAMAPS||'XM@,';                                           02950000
*/*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*/  02951000
*/*PL.LL01 ?SCHEDIRB MF=L PARAMETER LIST-----------------------------*/ 02952000
*  IF XMF='L'                                                           02953000
*    THEN                                                               02954000
*      DO;                                                              02955000
*        ANS('DCL 1 '||XMFCTRL||' '||XMFATTR||', '||                    02956000
*            '/* ?SCHEDIRB PARM LIST*/')                                02957000
*            NORESCAN COL(MACLMAR);                                     02958000
*/*PL.LL02  XVERSION FIXED(8) INPUT----------------------------------*/ 02959000
*        ANS('2 '||XMFCTRL||                                            02960000
*            '_XVERSION FIXED(8), '||                                   02961000
*            '/* INPUT XVERSION*/')                                     02962000
*            NORESCAN COL(MACLMAR+2);                                   02963000
*/*PL.LL04  XFLAGS BIT(8) FIELD_LABEL--------------------------------*/ 02964000
*        ANS('2 '||XMFCTRL||                                            02965000
*            '_XFLAGS BIT(8), '||                                       02966000
*            '/* FIELD_LABEL */')                                       02967000
*            NORESCAN COL(MACLMAR+2);                                   02968000
*/*PL.LL09 BIT 1XXXXXXX----------------------------------------------*/ 02969000
*          ANS('3 '||XMFCTRL||                                          02970000
*              '_XMODE_PROB BIT(1), '||                                 02971000
*              '/* BIT */')                                             02972000
*              NORESCAN COL(MACLMAR+2);                                 02973000
*/*PL.LL09 BIT X1XXXXXX----------------------------------------------*/ 02974000
*          ANS('3 '||XMFCTRL||                                          02975000
*              '_XKEY_PROP BIT(1), '||                                  02976000
*              '/* BIT */')                                             02977000
*              NORESCAN COL(MACLMAR+2);                                 02978000
*/*PL.LL09 BIT XX1XXXXX----------------------------------------------*/ 02979000
*          ANS('3 '||XMFCTRL||                                          02980000
*              '_XSVAREA_YES BIT(1), '||                                02981000
*              '/* BIT */')                                             02982000
*              NORESCAN COL(MACLMAR+2);                                 02983000
*/*PL.LL10 RESERVED BIT----------------------------------------------*/ 02984000
*          ANS('3 '||XMFCTRL||                                          02985000
*              '_XFLAGS_RSVD1 BIT(5), '||                               02986000
*              '/* BIT */')                                             02987000
*              NORESCAN COL(MACLMAR+2);                                 02988000
*/*PL.LL13  XRSV0002 CHAR(2) RESERVED--------------------------------*/ 02989000
*        ANS('2 '||XMFCTRL||                                            02990000
*            '_XRSV0002 CHAR(2), '||                                    02991000
*            '/* RESERVED */')                                          02992000
*            NORESCAN COL(MACLMAR+2);                                   02993000
*/*PL.LL13  XEPPTR PTR(31) INPUT-------------------------------------*/ 02994000
*        ANS('2 '||XMFCTRL||                                            02995000
*            '_XEPPTR PTR(31), '||                                      02996000
*            '/* '||ZXEPPTR||' XEPPTR */')                              02997000
*            NORESCAN COL(MACLMAR+2);                                   02998000
*/*PL.LL13  XTCBPTR PTR(31) INPUT------------------------------------*/ 02999000
*        ANS('2 '||XMFCTRL||                                            03000000
*            '_XTCBPTR PTR(31), '||                                     03001000
*            '/* '||ZXTCBPTR||' XTCBPTR */')                            03002000
*            NORESCAN COL(MACLMAR+2);                                   03003000
*/*PL.LL13  XRBPTR PTR(31) INPUT-------------------------------------*/ 03004000
*        ANS('2 '||XMFCTRL||                                            03005000
*            '_XRBPTR PTR(31), '||                                      03006000
*            '/* '||ZXRBPTR||' XRBPTR */')                              03007000
*            NORESCAN COL(MACLMAR+2);                                   03008000
*/*PL.LL13  XPARAMPTR PTR(31) INPUT----------------------------------*/ 03009000
*        ANS('2 '||XMFCTRL||                                            03010000
*            '_XPARAMPTR PTR(31), '||                                   03011000
*            '/* '||ZXPARAMPTR||' XPARAMPTR */')                        03012000
*            NORESCAN COL(MACLMAR+2);                                   03013000
*/*PL.LL13  XIQEPTR PTR(31) INPUT------------------------------------*/ 03014000
*        ANS('2 '||XMFCTRL||                                            03015000
*            '_XIQEPTR PTR(31), '||                                     03016000
*            '/* '||ZXIQEPTR||' XIQEPTR */')                            03017000
*            NORESCAN COL(MACLMAR+2);                                   03018000
*/*PL.LL18 ----------------------------------------------------------*/ 03019000
*        ANS('2 * CHAR(0);')                                            03020000
*            NORESCAN COL(MACLMAR+2);                                   03021000
*/*PL.LL17 END OF MF=L PARAMETER LIST--------------------------------*/ 03022000
*      END;                                                             03023000
*/*PL.L01 MACRO WORK VARIABLES---------------------------------------*/ 03024000
*  DCL ZPRMLINE CHAR;          /* ZPRM ARRAY ENTRY ACCUMULATOR      */  03025000
*  DEACT ZPRMLINE;                                                      03026000
*  DCL ZNDX CHAR;              /* UNIQUE LIST STRUCTURE NAME        */  03027000
*  DEACT ZNDX;                                                          03028000
*  ZNDX=MACINDEX(1:4);         /* MACINDEX LAST THREE DIGITS        */  03029000
*  DCL XVERSION CHAR;                                                   03030000
*  DEACT XVERSION;                                                      03031000
*/*PL.L02 ?SCHEDIRB PARAMETER LIST-----------------------------------*/ 03032000
*  IF XMF^='L'                                                          03033000
*    THEN                                                               03034000
*      DO;                                                              03035000
*/*PL.L03 ?SCHEDIRB PARAMETER LIST-----------------------------------*/ 03036000
*        IF XMF='S'                                                     03037000
*          THEN                                                         03038000
*            XMFCTRL='#ZPLIST';                                         03039000
*/*PL.L04 ?SCHEDIRB PARAMETER LIST-----------------------------------*/ 03040000
*        ZPRMLINE='DCL 1 #Z'||ZNDX||' DEF('||XMFCTRL||'),'||            03041000
*                 ' /* ?SCHEDIRB PARM LIST*/';                          03042000
*/*PL.L05  XVERSION FIXED(8) INPUT-----------------------------------*/ 03043000
*        ZPRMLINE=ZPRMLINE||' 2 #Z'||ZNDX||                             03044000
*                 '_XVERSION FIXED(8), '||                              03045000
*                 '/* INPUT XVERSION*/';                                03046000
*/*PL.L08  XFLAGS BIT(8) FIELD_LABEL---------------------------------*/ 03047000
*        ZPRMLINE=ZPRMLINE||' 2 #Z'||ZNDX||                             03048000
*                 '_XFLAGS BIT(8), '||                                  03049000
*                 '/* FIELD_LABEL */';                                  03050000
*/*PL.L08  XRSV0002 CHAR(2) RESERVED---------------------------------*/ 03051000
*        ZPRMLINE=ZPRMLINE||' 2 #Z'||ZNDX||                             03052000
*                 '_XRSV0002 CHAR(2), '||                               03053000
*                 '/* RESERVED */';                                     03054000
*/*PL.L08  XEPPTR PTR(31) INPUT--------------------------------------*/ 03055000
*        ZPRMLINE=ZPRMLINE||' 2 #Z'||ZNDX||                             03056000
*                 '_XEPPTR PTR(31), '||                                 03057000
*                 '/* '||ZXEPPTR||' XEPPTR */';                         03058000
*/*PL.L08  XTCBPTR PTR(31) INPUT-------------------------------------*/ 03059000
*        ZPRMLINE=ZPRMLINE||' 2 #Z'||ZNDX||                             03060000
*                 '_XTCBPTR PTR(31), '||                                03061000
*                 '/* '||ZXTCBPTR||' XTCBPTR */';                       03062000
*/*PL.L08  XRBPTR PTR(31) INPUT--------------------------------------*/ 03063000
*        ZPRMLINE=ZPRMLINE||' 2 #Z'||ZNDX||                             03064000
*                 '_XRBPTR PTR(31), '||                                 03065000
*                 '/* '||ZXRBPTR||' XRBPTR */';                         03066000
*/*PL.L08  XPARAMPTR PTR(31) INPUT-----------------------------------*/ 03067000
*        ZPRMLINE=ZPRMLINE||' 2 #Z'||ZNDX||                             03068000
*                 '_XPARAMPTR PTR(31), '||                              03069000
*                 '/* '||ZXPARAMPTR||' XPARAMPTR */';                   03070000
*/*PL.L08  XIQEPTR PTR(31) INPUT-------------------------------------*/ 03071000
*        ZPRMLINE=ZPRMLINE||' 2 #Z'||ZNDX||                             03072000
*                 '_XIQEPTR PTR(31), '||                                03073000
*                 '/* '||ZXIQEPTR||' XIQEPTR */';                       03074000
*/*PL.L11 CONSTANT TO ENSURE THAT LIST FORM IS LONG ENOUGH ----------*/ 03075000
*        ZPRMNUM=ZPRMNUM+1;                                             03076000
*        ZPRM(ZPRMNUM)=ZPRMLINE||' 2 * CHAR(0);';                       03077000
*        IF XPLISTVER^=0                                                03077100
*           & XMF^='S'                                                  03077200
*          THEN                                                         03077300
*            DO;                                                        03077400
*              ZPRMNUM=ZPRMNUM+1;                                       03077500
*              ZPRM(ZPRMNUM)=                                           03077600
*               'DCL #Z'||ZNDX||'_LENCHECK FIXED(32) CONSTANT('||       03077700
*               'LENGTH('||XMFCTRL||')-LENGTH(#Z'||ZNDX||'));'||        03077800
*               '/* CONSTANT TO ENSURE THAT THE LIST FORM'||            03077900
*               ' IS LONG ENOUGH */';                                   03078000
*            END;                                                       03078100
*/*PL.L12 PARAMETER LIST SIZE----------------------------------------*/ 03078200
*        ZPLLEN=24;                                                     03079000
*        IF ZPRMMAX<ZPLLEN                                              03080000
*           & XMF^='E'                                                  03081000
*          THEN                                                         03082000
*            ZPRMMAX=ZPLLEN;                                            03083000
*/*PL.L13 -----------------------------------------------------------*/ 03084000
*      END;                                                             03085000
*/*PI.L01 XMF^='L' & XMFSCK='COMPLETE' ------------------------------*/ 03086000
*  IF XMF^='L'                                                          03087000
*    THEN                                                               03088000
*      DO;                                                              03089000
*        ANS('RFY GPR15F UNRSTD;') NORESCAN COL(MACLMAR);               03090000
*/*PI.L03 CLEAR PARAMETER LIST --------------------------------------*/ 03091000
*            ANS('#Z'||ZNDX||'=''''B;'||                                03092000
*                '/* CLEAR PARAMETER AREA */')                          03093000
*                NORESCAN COL(MACLMAR);                                 03094000
*/*PI.L06 XFLAGS BIT(8)----------------------------------------------*/ 03095000
*        ZW='';                                                         03096000
*        ZMS='';                                                        03097000
*/*PI.L07 XFLAGS BIT(8) 1XXXXXXX-------------------------------------*/ 03098000
*        IF XMODE='PROB'                                                03099000
*          THEN                                                         03100000
*            ZW=ZW||'1';                                                03101000
*          ELSE                                                         03102000
*            ZW=ZW||'0';                                                03103000
*/*PI.L07 XFLAGS BIT(8) X1XXXXXX-------------------------------------*/ 03104000
*        IF XKEY='PROP'                                                 03105000
*          THEN                                                         03106000
*            ZW=ZW||'1';                                                03107000
*          ELSE                                                         03108000
*            ZW=ZW||'0';                                                03109000
*/*PI.L07 XFLAGS BIT(8) XX1XXXXX-------------------------------------*/ 03110000
*        IF XSVAREA='YES'                                               03111000
*          THEN                                                         03112000
*            ZW=ZW||'100000';                                           03113000
*          ELSE                                                         03114000
*            ZW=ZW||'000000';                                           03115000
*/*PI.L09 XFLAGS BIT(8)----------------------------------------------*/ 03116000
*        IF INDEX(ZW,'1')^=0                                            03117000
*          THEN                                                         03118000
*            ANS('#Z'||ZNDX||'_XFLAGS='||                               03119000
*                '#Z'||ZNDX||'_XFLAGS | '||                             03120000
*                ''''||ZW||'''B; '||                                    03121000
*                '/* BIT(8) */')                                        03122000
*                NORESCAN COL(MACLMAR);                                 03123000
*/*PI.L17 XEPPTR PTR(31)---------------------------------------------*/ 03124000
*        IF ZXEPPTR='INPUT' |                                           03125000
*           ZXEPPTR='INOUT'                                             03126000
*          THEN                                                         03127000
*            ANS('#Z'||ZNDX||'_XEPPTR='||                               03128000
*                XEPPTR||';'||                                          03129000
*                '/* XEPPTR PTR(31) */')                                03130000
*                NORESCAN COL(MACLMAR);                                 03131000
*/*PI.L17 XTCBPTR PTR(31)--------------------------------------------*/ 03132000
*        IF ZXTCBPTR='INPUT' |                                          03133000
*           ZXTCBPTR='INOUT'                                            03134000
*          THEN                                                         03135000
*            ANS('#Z'||ZNDX||'_XTCBPTR='||                              03136000
*                XTCBPTR||';'||                                         03137000
*                '/* XTCBPTR PTR(31) */')                               03138000
*                NORESCAN COL(MACLMAR);                                 03139000
*/*PI.L17 XRBPTR PTR(31)---------------------------------------------*/ 03144000
*        IF ZXRBPTR='INPUT' |                                           03145000
*           ZXRBPTR='INOUT'                                             03146000
*          THEN                                                         03147000
*            ANS('#Z'||ZNDX||'_XRBPTR='||                               03148000
*                XRBPTR||';'||                                          03149000
*                '/* XRBPTR PTR(31) */')                                03150000
*                NORESCAN COL(MACLMAR);                                 03151000
*/*PI.L14 CHECK FOR * AS THE PTR(31) ARGUMENT------------------------*/ 03152000
*        IF TRANSLATE(XPARAMPTR)                                        03152600
*                    = 'NO_PARAM'                                       03153200
*          THEN                                                         03154000
*            ZXPARAMPTR='';                  /* RESET INPUT/INOUT */    03155000
*/*PI.L17 XPARAMPTR PTR(31)------------------------------------------*/ 03156000
*        IF ZXPARAMPTR='INPUT' |                                        03157000
*           ZXPARAMPTR='INOUT'                                          03158000
*          THEN                                                         03159000
*            ANS('#Z'||ZNDX||'_XPARAMPTR='||                            03160000
*                XPARAMPTR||';'||                                       03161000
*                '/* XPARAMPTR PTR(31) */')                             03162000
*                NORESCAN COL(MACLMAR);                                 03163000
*/*PI.L17 XIQEPTR PTR(31)--------------------------------------------*/ 03164000
*        IF ZXIQEPTR='INPUT' |                                          03165000
*           ZXIQEPTR='INOUT'                                            03166000
*          THEN                                                         03167000
*            ANS('#Z'||ZNDX||'_XIQEPTR='||                              03168000
*                XIQEPTR||';'||                                         03169000
*                '/* XIQEPTR PTR(31) */')                               03170000
*                NORESCAN COL(MACLMAR);                                 03171000
*/*PI.L31 INVOKE FUNCTION--------------------------------------------*/ 03172000
*              ANS('RFY GPR01P RSTD;') NORESCAN COL(MACLMAR);           03173000
*              ANS('GPR01P=ADDR(#Z'||ZNDX||');'||                       03174000
*                  '/* PARAMETER LIST */')                              03175000
*                  NORESCAN COL(MACLMAR);                               03176000
*              IF SYSASCE^='P'                                          03177000
*                THEN                                                   03178000
*                  ANS('SAR(GPR01P,ALET(#Z'||ZNDX||'));'||              03179000
*                      '/* PARAMETER LIST AR */')                       03180000
*                      NORESCAN COL(MACLMAR);                           03181000
*/*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*/  03182000
*              ANS('PC(XM@(95)|1);') SKIP COL(5);                       03183000
*/*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*/  03184000
*              ANS('RFY GPR01P UNRSTD;') NORESCAN COL(MACLMAR);         03185000
*              IF NUMBER(RETCODE)>0                                     03186000
*                THEN                                                   03187000
*                  ANS('RFY GPR15F RSTD;') NORESCAN COL(MACLMAR);       03188000
*/*PO.L08 XRETCODE PTR(31) RETURN CODE-------------------------------*/ 03189000
*              IF NUMBER(RETCODE)>0                                     03190000
*                THEN                                                   03191000
*                    ANS(XRETCODE||                                     03192000
*                     '=GPR15F; /* SET RETURN CODE */')                 03193000
*                      NORESCAN COL(MACLMAR);                           03194000
*/*PO.L10 REMOVE REGISTER RESTRICTIONS-------------------------------*/ 03195000
*              IF NUMBER(RETCODE)>0                                     03196000
*                THEN                                                   03197000
*              ANS('RFY GPR15F UNRSTD;') NORESCAN COL(MACLMAR);         03198000
*/*PO.L12 END OF PARAMETER LIST PROCESSING---------------------------*/ 03199000
*      END;                                                             03200000
*/*PO.L13 SCHEDIRB USAGE INDICATOR-----------------------------------*/ 03201000
*  ZSCHEDIRB='YES';                          /* SET SCHEDIRB USED */    03202000
*/*PO.L15 END OF EXECUTABLE SCHEDIRB-PLISTVER MACRO------------------*/ 03203000
*  IF XMF^='L'                                                          03204000
*    THEN                                                               03205000
*      ANS('END; /* SCHEDIRB-PLISTVER */')                              03206000
*          NORESCAN COL(MACLMAR);                                       03207000
*/*PO.L16 RESTORE PRINT CONTROLS-------------------------------------*/ 03208000
*  ANS(MACCONC||'LIST POP NOECHO;') NORESCAN COL(MACLMAR);              03209000
*/*PO.L17 END OF SCHEDIRB MACRO--------------------------------------*/ 03210000
*  ANS(MACCONC||'SPACE;') NORESCAN COL(MACLMAR);                        03211000
*  ANS(' ') NORESCAN COL(MACLMAR);                                      03212000
*/*******************************************************************/  03213000
*/*  PO.L18 END OF CODE TO BE BYPASSED WHEN ZMACRET ^= 0            */  03214000
*/*******************************************************************/  03215000
*      END;                                                             03216000
*/*******************************************************************/  03217000
*/*  MVS ONLY     -CHECK IF AMG PARM LISTS ARE PRESENT              */  03218000
*/*               -ROUND MAX AMG PARM LIST TO DOUBLEWORD MULTIPLES  */  03219000
*/*******************************************************************/  03220000
*  IF ZPRMNUM>0                   /* NUMBER OF AMG PARM LIST ENTRIES*/  03221000
*    THEN                                                               03222000
*      DO;                                                              03223000
*        ZPRMMAX=((ZPRMMAX+7)/8)*8; /* ROUND PARM LIST SIZE UP TO       03224000
*                                      DOUBLEWORD MULTIPLES        */   03225000
*/*******************************************************************/  03226000
*/*  MVS -GENERATE PARM LIST DCL TO OVERLAY ?EPILOG'S ILIST AREA    */  03227000
*/*******************************************************************/  03228000
*        IF XMF ^= 'M' & XMF ^= 'E'                                     03229000
*          THEN                                                         03230000
*            DO;                                                        03231000
*              IF INDEX(EHALIST,',AMG,')=0 /* HAS DECLARE BEEN DONE?*/  03232000
*                THEN                                                   03233000
*                  DO;                                                  03234000
*                    ANS('?EPILOG                                       03235000
*                        STRING(''DCL #ZPLIST DEF(ILIST);'');');        03236000
*                    EHALIST=EHALIST||',AMG,';                          03237000
*                  END;                                                 03238000
*            END;                                                       03239000
*/*******************************************************************/  03240000
*/*  MVS  -EXTRACT PARM LISTS FROM AMG GLOBAL MACRO ARRAYS          */  03241000
*/*******************************************************************/  03242000
*        IF XMF ^= 'M' & XMF ^= 'E'                                     03243000
*          THEN                                                         03244000
*            DO;                                                        03245000
*              IF ZPRMMAX>EHAMAXLEN                                     03246000
*                THEN                                                   03247000
*                  EHAMAXLEN=ZPRMMAX; /* SET MAX PARM LIST SIZE     */  03248000
*            END;                                                       03249000
*        DO ZI=1 TO ZPRMNUM; /* EXTRACT AMG PARM LISTS               */ 03250000
*          ANS('?EPILOG STRING('''||ZPRM(ZI)||''');')                   03251000
*              COL(MACLMAR);                                            03252000
*        END;                                                           03253000
*      END;                                                             03254000
*/*-----------------------------------------------------------------*/  03255000
*/*  MVS  -ENSURE THAT GPRS NEEDED BY AMG MACROS WILL BE PROVIDED   */  03256000
*/*        BY ?EPILOG                                               */  03257000
*/*-----------------------------------------------------------------*/  03258000
*        IF INDEX(EHAREGS,'01P')=0                                      03259000
*          THEN                                                         03260000
*            EHAREGS=EHAREGS||'01P'; /* GPR01P                      */  03261000
*        IF INDEX(EHAREGS,'15F')=0                                      03262000
*          THEN                                                         03263000
*            EHAREGS=EHAREGS||'15F'; /* GPR15F                      */  03264000
*  RETURN CODE(ZMACRET);                                                03265000
*%END SCHEDIRB;                                                         03266000
