*%RESUME: MACRO                                                         00000100
*             KEYS(TCB,                                                 00000200
*             RB,                                                       00000300
*             MODE,                                                     00000400
*             ASYNC,                                                    00000500
*             ASCB,                                                     00000600
*             SPTOKEN,                                                  00000700
*             PURGE,                                                    00000800
*             REGS,                                   /*         @LxA*/ 00000900
*             RSCODE,                                                   00001000
*             MF,                                                       00001100
*             RELATED) ;                                                00001200
*/**** START OF SPECIFICATIONS ***************************************  00001300
*/***PROPRIETARY_STATEMENT********************************************/ 00001400
*/*                                                                  */ 00001500
*/*                                                                  */ 00001600
*/* LICENSED MATERIALS - PROPERTY OF IBM                             */ 00001700
*/* THIS MACRO IS "RESTRICTED MATERIALS OF IBM"                      */ 00001800
*/* 5645-001 (C) COPYRIGHT IBM CORP. 1980, 1997                      */ 00001900
*/*                                                                  */ 00002000
*/* STATUS= HBB6603                                                  */ 00002100
*/*                                                                  */ 00002200
*/***END_OF_PROPRIETARY_STATEMENT*************************************/ 00002300
*/*                                                                     00002400
*01* MACRO NAME:  RESUME                                                00002500
*                                                                       00002600
*01* DESCRIPTIVE NAME:  RESUME EXECUTION OF A WORK UNIT                 00002700
*                                                                       00002800
*01* MACRO NAME:  RESUME                                                00002900
*                                                                       00003000
*01* FUNCTION:                                                          00003100
*                                                                       00003200
*     PROVIDE THE INTERFACE TO SERVICE ROUTINES TO RESUME OR PURGE      00003300
*     A UNIT OF WORK THAT HAS BEEN PUT INTO A SUSPENDED STATE.          00003400
*                                                                       00003500
*01* EXTERNAL CLASSIFICATION:  GUPI                                     00003600
*                                                                       00003700
*01* END OF EXTERNAL CLASSIFICATION:                                    00003800
*                                                                       00003900
*01* OPERATION:                                                         00004000
*                                                                       00004100
*     THE RESUME MACRO PARSES THE KEYWORDS SUPPLIED.  IN THE            00004200
*     EVENT OF AN ERROR, SYNTAX CHECKING WILL ATTEMPT TO CONTINUE       00004300
*     FOR THE REMAINDER OF THE INPUT.  NO DATA WILL BE GENERATED.       00004400
*                                                                       00004500
*     IF NO ERRORS ARE FOUND, DATA IS GENERATED DEPENDING UPON THE      00004600
*     MF FORM SPECIFIED.                                                00004700
*                                                                       00004800
*     IF THE LIST OPTION WAS REQUESTED,  RESUME RESERVES THE            00004900
*     STORAGE FOR THE PARAMETER LIST USED BY IEAVSRBR, THE              00005000
*     SRB RESUME WITH TOKEN SERVICE ROUTINE.                            00005100
*                                                                       00005200
*     IF THE EXECUTE FORM WAS REQUESTED FOR THE SPTOKEN OPTION,         00005300
*     A PREVIOUSLY GENERATED PARAMETER LIST IS FILLED IN WITH           00005400
*     THE PROPER KEYWORD VALUES.                                        00005500
*                                                                       00005600
*     IF THE SPTOKEN OPTION IS SPECIFIED WITHOUT THE MF KEYWORD,        00005700
*     THE STANDARD FORM IS ASSUMED.  RESUME GENERATES AND FILLS         00005800
*     IN THE PARAMETER LIST WITH THE PROPER KEYWORD VALUES.             00005900
*                                                                       00006000
*     Registers on return to caller, RESUME of a suspended RB:          00006100
*                                                                       00006200
*     GPRs  0-1    Not preserved (used as work registers by the system) 00006300
*           2-3    Unchanged                                            00006400
*           4-5    High order byte changed                              00006500
*           6-10   Unchanged                                            00006600
*           11-13  Not preserved (used as work registers by the system) 00006700
*           14     Unchanged                                            00006800
*           15     Return code                                          00006900
*                                                                       00007000
*     ARs   0-1    Not preserved (used as work registers by the system) 00007100
*           2-13   Unchanged                                            00007200
*           14-15  Not preserved (Used as work registers by the system) 00007300
*                                                                       00007400
*     Registers on return to caller, RESUME of a suspended SRB (i.e.    00007500
*                  SPTOKEN specified):                                  00007600
*                                                                       00007700
*     GPRs  0-1    Not preserved (used as work registers by the system) 00007800
*           2-13   Unchanged                                            00007900
*           14     Not preserved (used as work register by the system)  00008000
*           15     Return code                                          00008100
*                                                                       00008200
*     ARs   0-1    Not preserved (used as work registers by the system) 00008300
*           2-13   Unchanged                                            00008400
*           14-15  Not preserved (Used as work registers by the system) 00008500
*                                                                       00008600
*01* SYNTAX:                                                            00008700
*                                                                       00008800
*       RESUME     TCB=(4)|A-TYPE ADDRESS|(2)-(12)                      00008900
*                  ,RB=(5)|A-TYPE ADDRESS|(2)-(12)                      00009000
*                  ,RETURN=Y|N                                          00009100
*                  ,MODE=UNCOND|COND                                    00009200
*                       <,ASYNC=N|Y>                                    00009300
*                  ,ASCB=RX-TYPE ADDRESS|(1)-(3), (6)-(12)              00009400
*                       <,RELATED=ANY-COMMENT>                          00009500
*                                                                       00009600
*       WHERE:                                                          00009700
*                                                                       00009800
*                                                                       00009900
*        TCB=(4)|A-TYPE ADDRESS|(2)-(12)                                00010000
*          IS A KEYWORD THAT SPECIFIES THE TCB ADDRESS OF THE TASK      00010100
*          TO BE RESUMED.  REGISTER (4) IS THE DEFAULT; IT IS           00010200
*          ASSUMED TO CONTAIN THE TCB ADDRESS.                          00010300
*                                                                       00010400
*        ,RB=(5)|A-TYPE ADDRESS|(2)-(12)                                00010500
*          IS A KEYWORD THAT SPECIFIES THE ADDRESS OF THE RB TO BE      00010600
*          RESUMED.  REGISTER (5) IS THE DEFAULT; IT IS ASSUMED TO      00010700
*          CONTAIN THE RB ADDRESS.  THE SPECIFICATION OF THE RB         00010800
*          OPERAND DETERMINES WHICH RB WILL HAVE ITS SUSPEND COUNT      00010900
*          DECREMENTED (WHICH RB WILL BE MADE READY FOR RESUMPTION      00011000
*          OF EXECUTION).                                               00011100
*                                                                       00011200
*        ,RETURN=Y|N                                                    00011300
*          IS A KEYWORD THAT SPECIFIES WHETHER CONTROL IS TO BE         00011400
*          RETURNED TO THE CALLER (RETURN=Y) OR TO THE TCTL ROUTINE     00011500
*          (RETURN=N).  RETURN=N CAN ONLY BE ISSUED IF THE CALLER       00011600
*          IS AN SRB RUNNING IN HOME MODE THAT SPECIFIES MODE=UNCOND    00011700
*          AND ASYNC=N, AND DOES NOT SPECIFY THE ASCB OPTION.  THE      00011800
*          TCTL ROUTINE PASSES CONTROL DIRECTLY FROM THE SRB TO A       00011900
*          TCB.                                                         00012000
*                                                                       00012100
*        ,MODE=UNCOND|COND                                              00012200
*          IS A KEYWORD THAT SPECIFIES THE ACTION RESUME TAKES IF       00012300
*          IT CANNOT IMMEDIATELY COMPLETE THE RESUME FUNCTION.          00012400
*          THIS ACTION ALSO DEPENDS ON THE ASYNC OPTION.                00012500
*                                                                       00012600
*          MODE=COND                                                    00012700
*            IF ASYNC=Y IS ALSO SPECIFIED, RESUME MAKES A CONDITIONAL   00012800
*            ATTEMPT TO ACQUIRE AN SRB FROM THE SUPERVISOR SRB POOL.    00012900
*            IF AN SRB IS AVAILABLE, IT IS SCHEDULED TO COMPLETE THE    00013000
*            RESUME FUNCTION ASYNCHRONOUSLY.                            00013100
*                                                                       00013200
*            IF ASYNC=N IS ALSO SPECIFIED, RESUME PLACES RETURN CODE    00013300
*            04 IN REGISTER 15 AND RETURNS TO THE CALLER.               00013400
*                                                                       00013500
*          MODE=UNCOND                                                  00013600
*            IF ASYNC=Y IS ALSO SPECIFIED, RESUME MAKES AN              00013700
*            UNCONDITIONAL ATTEMPT TO ACQUIRE AN SRB FROM THE           00013800
*            SUPERVISOR SRB POOL AND COMPLETES THE RESUME FUNCTION      00013900
*            ASYNCHRONOUSLY.                                            00014000
*                                                                       00014100
*            IF ASYNC=N IS ALSO SPECIFIED, RESUME UNCONDITIONALLY       00014200
*            OBTAINS THE CML LOCK OF THE ASCB WHOSE TCB OR RB IS        00014300
*            TO BE RESUMED.  THE TCB OR RB IS RESUMED BEFORE CONTROL    00014400
*            RETURNS TO THE CALLER.                                     00014500
*                                                                       00014600
*        <,ASYNC=N|Y>                                                   00014700
*          IS AN OPTIONAL KEYWORD THAT SPECIFIES WHETHER THE RESUME     00014800
*          IS TO BE COMPLETED ASYNCHRONOUSLY (Y) OR NOT (N).            00014900
*                                                                       00015000
*        ,ASCB=RX-TYPE ADDRESS|(1)-(3), (6)-(12)                        00015100
*          IS A KEYWORD THAT SPECIFIES THE ADDRESS OF THE ASCB WHOSE    00015200
*          TCB OR RB IS TO BE RESUMED.  THE CALLER MUST ESTABLISH       00015300
*          CURRENT ADDRESSABILITY TO THE ADDRESS SPACE BEFORE CALLING   00015400
*          CALLING RESUME.  IF THIS OPTION IS NOT SPECIFIED, THE        00015500
*          HOME ADDRESS SPACE IS ASSUMED.  THE OPTION MUST BE           00015600
*          SPECIFIED IF ASYNC=Y IS SPECIFIED.                           00015700
*                                                                       00015800
*                                                                       00015900
*       RESUME     SPTOKEN=RX-ADDRESS                                   00016000
*                  ,PURGE=NO|YES                                        00016100
*                       <,RSCODE=RX-ADDRESS|(2)-(12)>                   00016200
*                       <,MF=(E,RX-ADDRESS)|(E,(1)-(12))>               00016300
*                       <,RELATED=ANY-COMMENT>                          00016400
*                                                                       00016500
*       WHERE:                                                          00016600
*                                                                       00016700
*                                                                       00016800
*        SPTOKEN=RX-ADDRESS                                             00016900
*          IS A KEYWORD THAT SPECIFIES THE ADDRESS OF AN 8-BYTE AREA    00017000
*          WHICH CONTAINS A SUSPEND TOKEN THAT UNIQUELY IDENTIFIES      00017100
*          THE SUSPENDED SRB.                                           00017200
*                                                                       00017300
*        ,PURGE=NO|YES                                                  00017400
*          IS A KEYWORD THAT SPECIFIES WHETHER THE SUSPENDED SRB        00017500
*          RESUMES EXECUTION OR IS PURGED FROM THE SYSTEM.              00017600
*                                                                       00017700
*          PURGE=NO                                                     00017800
*            SIGNIFIES THAT THE SUSPENDED SRB IS TO BE RESUMED. THIS    00017900
*            IS THE DEFAULT.                                            00018000
*                                                                       00018100
*          PURGE=YES                                                    00018200
*            SIGNIFIES THAT THE SUSPENDED SRB IS TO BE PURGED.  A       00018300
*            PURGED SRB NEVER REGAINS CONTROL AND CANNOT BE RESUMED.    00018400
*            "PURGE=YES" IS MUTUALLY EXCLUSIVE WITH THE RSCODE KEYWORD. 00026600
*                                                                       00036700
*        <,RSCODE=RX-ADDRESS|(2)-(12)>                                  00046800
*          IS AN OPTIONAL KEYWORD THAT SPECIFIES THE ADDRESS OF A       00056900
*          FULLWORD WHICH CONTAINS THE RESUME CODE.  THIS RESUME CODE   00067000
*          IS RETURNED TO THE RESUMED SRB.  THE ACTUAL CONTENTS OF THE  00077100
*          RESUME CODE MAY BE ANY VALUE THAT FITS IN A FULLWORD.  IF    00087200
*          RSCODE IS NOT SPECIFIED, THE RESUME CODE RETURNED TO THE     00097300
*          SUSPENDED SRB WILL BE ZERO.                                  00107400
*                                                                       00117500
*        <,MF=(E,RX-ADDRESS)|(E,(1)-(12))>                              00127600
*          IS AN OPTIONAL KEYWORD THAT SPECIFIES THE EXECUTE FORM OF    00137700
*          THE RESUME MACRO INSTRUCTION.  THIS FORM USES A REMOTE       00147800
*          PARAMETER LIST CREATED BY (OR COPIED FROM) A LIST            00157900
*          GENERATED  BY THE LIST FORM OF THE MACRO.                    00168000
*                                                                       00178100
*                                                                       00188200
*  LIST FORM OF RESUME:                                                 00198300
*                                                                       00208400
*       RESUME     MF=L                                                 00218500
*                                                                       00228600
*                       <,RELATED=ANY-VALUE>                            00238700
*                                                                       00248800
*02* PLAS SYNTAX:                                                       00258900
*                                                                     * 00269000
*            ?RESUME    (RETURN|NORETURN)                             * 00279100
*                       TCB(TCB_ADDR)                                 * 00289200
*                       RB(RB_ADDR)                                   * 00299300
*                       MODE(UNCOND|COND)                             * 00309400
*                         ASYNC(N|Y)                                  * 00319500
*                       ASCB(ASCB_ADDR)                               * 00329600
*                         RELATED(ANY COMMENT)                        * 00339700
*                                                                     * 00349800
*    NOTE: THE PLAS EQUIVALENTS TO "RETURN=Y" AND "RETURN=N"          * 00359900
*          ARE THE POSITIONAL PARAMETERS "(RETURN)" AND "(NORETURN)"  * 00370000
*                                                                     * 00380100
*          THE DEFAULT IS (RETURN)                                    * 00390200
*                                                                     * 00400300
*            ?RESUME    SPTOKEN(SPTOKEN_ADDRESS)                      * 00410400
*                       PURGE(NO|YES)                                 * 00420500
*                         RSCODE(RESUME_CODE)                         * 00430600
*                         MF(E,CNTRL_ADDRESS)                         * 00440700
*                         RELATED(ANY COMMENT)                        * 00450800
*                                                                     * 00460900
*                                                                     * 00471000
*            ?RESUME    MF(L,CNTRL_ADDRESS)                           * 00481100
*                                                                     * 00491200
*                                                                       00501300
*01* INVOCATION REQUIREMENTS:                                           00511400
*                                                                       00521500
*                                                                       00531600
*      EXECUTION MODE:   TASK OR SRB MODE.                              00541700
*                                                                       00551800
*      AUTHORIZATION:    SUPERVISOR STATE.  ZERO PSW KEY.               00561900
*                                                                       00572000
*      ADDRESSING MODE:  31 BIT ADDRESSING MODE.                        00582100
*                                                                       00592200
*      ASC MODE:         PRIMARY OR ACCESS REGISTER ASC MODE.           00602300
*                                                                       00612400
*      SERIALIZATION:    ENABLED.  UNLOCKED.                            00622500
*                                                                       00632600
*                                                                       00642700
*01* RETURN CODES:                                                      00652800
*                                                                       00662900
*     For RESUME of a suspended RB:                                     00670400
*     One of the following (decimal) codes is returned from the Resume  00677900
*     Service Routine in register 15:                                   00685400
*                                                                       00693200
*        00     A normal, synchronous RESUME completed the function.    00703300
*                                                                       00713400
*        04     For MODE=COND and ASYNC=N, the RESUME cannot complete   00723500
*               the function.                                           00733600
*                                                                       00743700
*               For MODE=COND or MODE=UNCOND and ASYNC=Y, an SRB is     00744900
*               completing the function asynchronously.                 00746100
*                                                                       00747300
*        08     For MODE=COND and ASYNC=Y the SRB cannot be acquired    00748500
*               and RESUME cannot complete the function.                00749700
*                                                                       00750900
*                                                                       00752100
*     For RESUME of a suspended SRB:                                    00753300
*     One of the following (decimal) codes is returned from the Resume  00754500
*     Service Routine in register 15:                                   00755700
*                                                                       00756900
*        00     The SRB has been successfully resumed.                  00758100
*                                                                       00759300
*        04     The address space in which the suspended SRB would      00760500
*               have executed has been scheduled for termination.       00761700
*               The suspended SRB will be purged from the system.       00762900
*                                                                       00764100
*        08     The suspend token (SPTOKEN) does not identify a         00765300
*               validly suspended SRB routine.  The SRB may have        00766500
*               already been resumed or purged.                         00767700
*                                                                       00768900
*        24     An unexpected error occurred while resuming the         00770100
*               SRB routine.  The SRB was not resumed.                  00771300
*                                                                       00774000
*                                                                       00784100
*01* COMPONENT:  SC1C5 (SUPERVISOR CONTROL)                             00794200
*                                                                       00804300
*01* MACLIB:  AMACLIB                                                   00814400
*                                                                       00824500
*01* CHANGE ACTIVITY:                                                   00834600
*    $D0=DCR0075    HBB4410  880715  PD16FH:  RESUME SRB WITH TOKEN     00844700
*    $D1=DCR0242    HBB4410  891023  PD16FH:  EXITPARM OPTION           00854800
*    $P1=PEO3551    HBB4410  900226  PD16IG:  RAS ENHANCEMENTS          00864900
*    $01=OY40674    HBB4420  910315  PD16FH:  DEFAULT PURGE=YES         00869900
*    $P2=PIG0986    HBB5510  930115  PD16EJ:  Correct MF(L) parameter   00871600
*                                             list generation.          00873300
*    $P3=PQC0135    HBB6603  950407  PD152M:  Correct prolog for        00873700
*                                             register information and  00874100
*                                             return codes              00874500
*    $02=OW17775    HBB5510  960130  PDKD:   Correct AR-mode generation 00874700
*                                                                       00875000
*** END OF SPECIFICATIONS ******************************************/   00885100
*/********************************************************************  00895200
         MACRO                                                          00905300
&XLABEL  RESUME &TCB=,                                                 X00915400
               &RB=,                                                   X00925500
               &RETURN=,                                               X00935600
               &MODE=,                                                 X00945700
               &ASYNC=,                                                X00955800
               &ASCB=,                                                 X00965900
               &SPTOKEN=,                                              X00976000
               &PURGE=,                                                X00986100
               &RSCODE=,                                               X00996200
               &MF=,                                                   X01006300
               &RELATED=                                                01016400
.*                                                                      01026500
.*******************************************************************    01036600
.***AB.02  GLOBAL VARIABLES TO CONTROL PRINT AND CODE GENERATION        01046700
.*******************************************************************    01056800
.*                                                                      01066900
              GBLC  &ZSUSPEND   YES=MACRO USED AT LEAST ONCE            01077000
.*******************************************************************    01087100
.***AB.03  COMMONLY USED LOCAL MACRO VARIABLES                          01097200
.*******************************************************************    01107300
              LCLC  &ZMS        ERROR MESSAGE WORK AREA                 01117400
              LCLC  &ZMS2       SECOND ERROR MESSAGE STRING             01127500
              LCLA  &ZMA        BAD KEYWORD COUNT                       01137600
              LCLC  &ZCNDX      LAST THREE SYSNDX CHARACTERS            01147700
              LCLC  &ZCLNG      USED WHEN LENGTH IS NEEDED              01157800
              LCLC  &ZCGPR      USED WHEN VALUE IS IN A GPR             01167900
              LCLC  &ZCVAL      USED TO CONTAIN FIXED VALUE             01178000
              LCLA  &ZAWRK      USED AS A WORK AREA                     01188100
              LCLA  &ZASIZ      USED FOR SIZE OF VALUE                  01198200
              LCLA  &ZN         NUMERIC WORK VARIABLE                   01208300
              LCLC  &ZC         CHARACTER WORK VARIABLE                 01218400
              LCLA  &ZMACRET    MACRO RETURN CODE                       01228500
&ZMACRET      SETA  0           ASSUME NO ERRORS                        01238600
.*                                                                      01248700
              LCLC  &ZCSYSLIST(255)             NONXKEY, POS ARRAY      01258800
              LCLA  &ZASYSLNDX  WORK INDEX FOR ZCSYSLIST()              01268900
              LCLC  &GNAME1                     STRING FOR LABELS       01279000
              LCLC  &GNAME2                                             01289100
              LCLC  &M0M0001                    LABEL NAME              01299200
              LCLC  &SFTSLOT    ++ INDEX INTO SFT                       01309300
              LCLA  &SVTRSUA    ++  UNCONDITIONAL ASYNCHROUS EPA        01319400
              LCLA  &SVTRSCA    ++  CONDITIONAL ASYNCHROUS EPA          01329500
              LCLA  &SVTRSUS    ++  UNCONDITIONAL SYNCHROUS EPA         01339600
              LCLA  &SVTRSCS    ++  CONDITIONAL SYNCHROUS EPA           01349700
.********************************************************************   01359800
.***AB.05  INVOKE MVS MACROS TO CONTROL CODE GENERATION                 01369900
.*                                                                      01380000
.* TITLE: .ZSYS                                                         01390100
.*                                                                      01400200
.********************************************************************   01410300
              GBLC  &SYSSPLV    SP LEVEL 1,2,3 -SPLEVEL                 01420400
              GBLC  &SYSASCE    SYSTEM STATE P ANY AR-SYSSTATE          01430500
*             MACDATE = 02/26/90                                   @P1A 01440600
.*                                                                      01450700
&GNAME1       SETC  'IHB'.'&SYSNDX'.'K'         SET UP INLINE NAMES     01460800
&GNAME2       SETC  'IHB'.'&SYSNDX'.'R'                                 01470900
&SVTRSUA      SETA   X'104'                     SET SVT OFFSETS         01481000
&SVTRSCA      SETA   X'108'                                             01491100
&SVTRSUS      SETA   X'10C'                                             01501200
&SVTRSCS      SETA   X'014'                                             01511300
.*                                                                      01521400
              AIF   (K'&SYSASCE GT 0).ZSYS020   SYS STATE DEFINED       01531500
              AIF   (K'&SYSSPLV GT 0).ZSYS000   SP LEVEL DEFINED        01541600
              SPLEVEL  TEST                                             01551700
.ZSYS000      ANOP  ,                                                   01561800
              AIF   ('&SYSSPLV' EQ '1').ZSYS010 PRE SP 3.1              01571900
              AIF   ('&SYSSPLV' EQ '2').ZSYS010 PRE SP 3.1              01582000
              SYSSTATE TEST                                             01592100
              AGO   .ZSYS020                                            01602200
.ZSYS010      ANOP  ,                                                   01612300
&SYSASCE      SETC  'P'         ASSUME SYSSTATE PRIMARY                 01622400
.ZSYS020      ANOP  ,                                                   01632500
.*******************************************************************    01642600
.***AB.07  DEFINE ALL MACRO VARIABLES                                   01652700
.*******************************************************************    01662800
              LCLC  &XTCB       ++ NAME                                 01672900
              LCLC  &XRB        ++ NAME                                 01683000
              LCLC  &XRETURN    ++ VALUE                                01693100
              LCLC  &XMODE      ++ VALUE                                01703200
              LCLC  &XASYNC     ++ VALUE                                01713300
              LCLC  &XASCB      ++ NAME                                 01723400
              LCLC  &XSPTOKEN   ++ NAME                                 01733500
              LCLC  &XPURGE     ++ VALUE                                01743600
              LCLC  &XRSCODE    ++ NAME                                 01753700
              LCLC  &XMF        ++                                      01763800
.*******************************************************************    01773900
.***AB.13  DEFINE MACRO VARIABLES FOR INPUT/OUTPUT PROCESSING           01784000
.*******************************************************************    01794100
              LCLC  &ZXTCB      ++ INPUT NAME                           01804200
              LCLC  &ZXRB       ++ INPUT NAME                           01814300
              LCLC  &ZXRETURN   ++ INPUT VALUE                          01824400
              LCLC  &ZXMODE     ++ INPUT VALUE                          01834500
              LCLC  &ZXASYNC    ++ INPUT VALUE                          01844600
              LCLC  &ZXASCB     ++ INPUT NAME                           01854700
              LCLC  &ZXSPTOKEN  ++ NAME                                 01864800
              LCLC  &ZXPURGE    ++ VALUE                                01874900
              LCLC  &ZXRSCODE   ++ NAME                                 01885000
              LCLC  &ZXMF       ++                                      01895100
.********************************************************************   01905200
.***AG.MF02  FULL MACRO SYNTAX CHECKING                                 01915300
.********************************************************************   01925400
              ACTR  10000                                               01935500
.*-------------------------------------------------------------------   01945600
.ZSYS030      ANOP  ,           FULL SYNTAX CHECKING                    01955700
.*----------------------------------------------------------------***   01965800
.********************************************************************   01975900
.***         CHECK FOR ANY "RB" OPTIONS                                 01986000
.*                                                                      01996100
.* TITLE: .CHEK                                                         02006200
.*                                                                      02016300
.********************************************************************   02026400
&ZMS2         SETC  ''          INITIALIZE STRING OF SPECIFIED RB       02036500
.*                              OPTIONS                                 02046600
&ZMA          SETA  0           INIT COUNT OF SPECIFICATIONS            02056700
.*******************************************************************    02066800
.***         CHECK FOR "TCB"                                            02076900
.*******************************************************************    02087000
.CHEK000      ANOP                                                      02097100
              AIF   (T'&TCB EQ 'O').CHEK010                             02107200
&ZMA          SETA  &ZMA+1      BUMP COUNT OF RB KEYS                   02117300
&ZMS2         SETC  ' "TCB"'                                            02127400
.*******************************************************************    02137500
.***         CHECK FOR "RB"                                             02147600
.*******************************************************************    02157700
.CHEK010      ANOP                                                      02167800
              AIF   (T'&RB EQ 'O').CHEK030                              02177900
&ZMA          SETA  &ZMA+1      BUMP COUNT OF RB KEYS                   02188000
              AIF   (&ZMA EQ 0).CHEK020                                 02198100
&ZMS2         SETC  '&ZMS2. "RB"'                                       02208200
              AGO   .CHEK030                                            02218300
.CHEK020      ANOP                                                      02228400
&ZMS2         SETC  ' "RB"'                                             02238500
.*******************************************************************    02248600
.***         CHECK FOR "RETURN"                                         02258700
.*******************************************************************    02268800
.CHEK030      ANOP                                                      02278900
              AIF   (T'&RETURN EQ 'O').CHEK050                          02289000
&ZMA          SETA  &ZMA+1      BUMP COUNT OF RB KEYS                   02299100
              AIF   (&ZMA EQ 0).CHEK040                                 02309200
&ZMS2         SETC  '&ZMS2. "RETURN"'                                   02319300
              AGO   .CHEK050                                            02329400
.CHEK040      ANOP                                                      02339500
&ZMS2         SETC  ' "RETURN"'                                         02349600
.*******************************************************************    02359700
.***         CHECK FOR "MODE"                                           02369800
.*******************************************************************    02379900
.CHEK050      ANOP                                                      02390000
              AIF   (T'&MODE EQ 'O').CHEK070                            02400100
&ZMA          SETA  &ZMA+1      BUMP COUNT OF RB KEYS                   02410200
              AIF   (&ZMA EQ 0).CHEK060                                 02420300
&ZMS2         SETC  '&ZMS2. "MODE"'                                     02430400
              AGO   .CHEK070                                            02440500
.CHEK060      ANOP                                                      02450600
&ZMS2         SETC  ' "MODE"'                                           02460700
.*******************************************************************    02470800
.***         CHECK FOR "ASYNC"                                          02480900
.*******************************************************************    02491000
.CHEK070      ANOP                                                      02501100
              AIF   (T'&ASYNC EQ 'O').CHEK090                           02511200
&ZMA          SETA  &ZMA+1      BUMP COUNT OF RB KEYS                   02521300
              AIF   (&ZMA EQ 0).CHEK080                                 02531400
&ZMS2         SETC  '&ZMS2. "ASYNC"'                                    02541500
              AGO   .CHEK090                                            02551600
.CHEK080      ANOP                                                      02561700
&ZMS2         SETC  ' "ASYNC"'                                          02571800
.*******************************************************************    02581900
.***         CHECK FOR "ASCB"                                           02592000
.*******************************************************************    02602100
.CHEK090      ANOP                                                      02612200
              AIF   (T'&ASCB EQ 'O').CHEK110                            02622300
&ZMA          SETA  &ZMA+1      BUMP COUNT BAD KEYS                     02632400
              AIF   (&ZMA EQ 0).CHEK100                                 02642500
&ZMS2         SETC  '&ZMS2. "ASCB"'                                     02652600
              AGO   .CHEK110                                            02662700
.CHEK100      ANOP                                                      02672800
&ZMS2         SETC  ' "ASCB"'                                           02682900
.CHEK110      ANOP                                                      02693000
              AIF   (&ZMA EQ 0).CHEK120     NO RB OPTIONS? CHECK TOKEN  02703100
              AIF   (T'&SPTOKEN EQ 'O').RB000                           02713200
.*******************************************************************    02723300
.***         GENERATE MNOTE FOR MUTUALLY EXCLUSIVE KEYWORDS             02733400
.*******************************************************************    02743500
&ZMS          SETC  '&ZMS2 AND "SPTOKEN" ARE'                           02753600
              MNOTE 8,' &ZMS MUTUALLY EXCLUSIVE. '                      02763700
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             02773800
              AGO   .RB000                     PROCESS RB               02783900
.********************************************************************   02794000
.***         CHECK FOR "SPTOKEN" OPTION                                 02804100
.********************************************************************   02814200
.CHEK120      ANOP                                                      02824300
              AIF   (T'&SPTOKEN NE 'O').RGEN160 PROCESS SPTOKEN         02834400
.********************************************************************   02844500
.***         CHECK FOR LIST FORM                                        02854600
.********************************************************************   02864700
              AIF   (T'&MF EQ 'O').RB000       NO MF? PROCESS AS RB     02874800
              AIF   ('&MF' EQ 'L').TGE090      PROCESS LIST FORM        02884900
.********************************************************************   02895000
.***  "MF" SPECIFIED THAT IS NOT LIST FORM WITHOUT SPTOKEN CHECK ERROR  02905100
.*                                                                      02915200
.* TITLE: .MF                                                           02925300
.*                                                                      02935400
.********************************************************************   02945500
              AIF   ('&MF(1)' NE 'E' AND '&MF(1)' NE 'S').MF000         02955600
.*                                                                      02965700
.*         "MF" SPECIFIED WITHOUT SPTOKEN                               02975800
.*                                                                      02985900
&ZMS          SETC  '"MF='      *KUKWA* MNOTE                           02996000
&ZMS          SETC  '&ZMS.&MF"'                                         03006100
&ZMS          SETC  '&ZMS MAY ONLY BE SPECIFIED'                        03016200
&ZMS          SETC  '&ZMS "SPTOKEN".'                                   03026300
              MNOTE 8,' &ZMS '                                          03036400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             03046500
              AGO   .TGE150                                             03056600
.*                                                                      03066700
.*         UNRECOGNIZED MACRO FORM DETECTED -- GENERATE MNOTE           03076800
.*                                                                      03086900
.MF000        ANOP                                                      03097000
&ZMS          SETC  '"MF='      *KUKWA* MNOTE                           03107100
&ZMS          SETC  '&ZMS.&MF"'                                         03117200
&ZMS          SETC  '&ZMS IS INCORRECT. '                               03127300
&ZMS          SETC  '&ZMS KEYWORD CHOICE IS: '                          03137400
&ZMS          SETC  '&ZMS "MF=L".'                                      03147500
              MNOTE 8,' &ZMS '                                          03157600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             03167700
              AGO   .TGE150                                             03177800
.********************************************************************   03187900
.***         PROCESS RESUME RB                                          03198000
.*                                                                      03208100
.* TITLE: .RB                                                           03218200
.*                                                                      03228300
.********************************************************************   03238400
.RB000        ANOP                                                      03248500
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     03258600
              AIF   (N'&TCB LE 1).RB010         CK NUM                  03268700
&ZMS          SETC  '"TCB='     *KPOSA* MNOTE                           03278800
&ZMS          SETC  '&ZMS.&TCB"'                                        03288900
&ZMS          SETC  '&ZMS "TCB"'                                        03299000
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 03309100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             03319200
.RB010        ANOP  ,                                                   03329300
.*-------------------------------------------------------------------   03339400
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         03349500
&ZXTCB        SETC  'INPUT'     SET IN/OUTPUT                           03359600
&XTCB         SETC  '(4)'       SET DEFAULT                             03369700
              AIF   (K'&TCB(1) LE 0).RB020      PARM                    03379800
&XTCB         SETC  '&TCB(1)'   SET XVARIABLE                           03389900
              AIF   (N'&TCB GT 1).RB020         MULTIPLE PARMS          03400000
&XTCB         SETC  '&TCB'      SET XVARIABLE                           03410100
.RB020        ANOP  ,                                                   03420200
.*-------------------------------------------------------------------   03430300
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    03440400
              AIF   (K'&ZXTCB LE 0).RB050       NOT I/O                 03450500
              AIF   ('&XTCB'(1,1) NE '(').RB050                         03460600
&ZCGPR        SETC  '&XTCB'(2,K'&XTCB-2)                                03470700
              AIF   ('&ZCGPR'(1,1) NE '0').RB030                        03480800
              AIF   (K'&ZCGPR GT 2).RB040                               03490900
              AIF   ('&ZCGPR' EQ '0').RB040                             03501000
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       03511100
              AIF   (T'&ZCGPR NE 'N').RB040     INVALID REG NAME        03521200
.RB030        ANOP  ,                                                   03531300
              AIF   (T'&ZCGPR NE 'N').RB050     NON NUMERIC             03541400
              AIF   ('&ZCGPR' LT '2').RB040                             03551500
              AIF   ('&ZCGPR' LE '12').RB050                            03561600
.RB040        ANOP  ,                                                   03571700
&ZMS          SETC  '"TCB='     *KGPRA* MNOTE                           03581800
&ZMS          SETC  '&ZMS.&TCB"'                                        03591900
&ZMS          SETC  '&ZMS IS INCORRECT.  MUST SPECIFY A REGISTER'       03602000
&ZMS          SETC  '&ZMS                     '                         03612100
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    03622200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             03632300
.RB050        ANOP  ,                                                   03642400
.*----------------------------------------------------------------***   03652500
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     03662600
              AIF   (N'&RB LE 1).RB060          CK NUM                  03672700
&ZMS          SETC  '"RB='      *KPOSA* MNOTE                           03682800
&ZMS          SETC  '&ZMS.&RB"'                                         03692900
&ZMS          SETC  '&ZMS "RB"'                                         03703000
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 03713100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             03723200
.RB060        ANOP  ,                                                   03733300
.*-------------------------------------------------------------------   03743400
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         03753500
&ZXRB         SETC  'INPUT'     SET IN/OUTPUT                           03763600
&XRB          SETC  '(5)'       SET DEFAULT                             03773700
              AIF   (K'&RB(1) LE 0).RB070       PARM                    03783800
&XRB          SETC  '&RB(1)'    SET XVARIABLE                           03793900
              AIF   (N'&RB GT 1).RB070          MULTIPLE PARMS          03804000
&XRB          SETC  '&RB'       SET XVARIABLE                           03814100
.RB070        ANOP  ,                                                   03824200
.*-------------------------------------------------------------------   03834300
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    03844400
              AIF   (K'&ZXRB LE 0).RB100        NOT I/O                 03854500
              AIF   ('&XRB'(1,1) NE '(').RB100                          03864600
&ZCGPR        SETC  '&XRB'(2,K'&XRB-2)                                  03874700
              AIF   ('&ZCGPR'(1,1) NE '0').RB080                        03884800
              AIF   (K'&ZCGPR GT 2).RB090                               03894900
              AIF   ('&ZCGPR' EQ '0').RB090                             03905000
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       03915100
              AIF   (T'&ZCGPR NE 'N').RB090     INVALID REG NAME        03925200
.RB080        ANOP  ,                                                   03935300
              AIF   (T'&ZCGPR NE 'N').RB100     NON NUMERIC             03945400
.********************************************************************   03955500
.***  CHECK THAT REGISTER SPECIFICATION FOR RB IS WITHIN RANGE          03965600
.*            (2) - (3) OR (5) - (12)                                   03975700
.********************************************************************   03985800
              AIF   ('&ZCGPR' LT '2').RB090     REGS 0-1 ARE BAD        03995900
              AIF   ('&ZCGPR' EQ '2').RB100     REG  2 IS O.K.          04006000
              AIF   ('&ZCGPR' EQ '3').RB100     REG  3 IS O.K.          04016100
              AIF   ('&ZCGPR' EQ '4').RB090     REG  4 IS BAD.          04026200
              AIF   ('&ZCGPR' LE '12').RB100    REGS 5-12 O.K.          04036300
.RB090        ANOP  ,                                                   04046400
&ZMS          SETC  '"RB='    *KGPRA* MNOTE                             04056500
&ZMS          SETC  '&ZMS.&RB"'                                         04066600
&ZMS          SETC  '&ZMS IS INCORRECT.  MUST SPECIFY A REGISTER'       04076700
&ZMS          SETC  '&ZMS                     '                         04086800
              MNOTE 8,' &ZMS IN THE RANGE (2)-(3) OR (5)-(12). '        04096900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04107000
.RB100        ANOP  ,                                                   04117100
.*----------------------------------------------------------------***   04127200
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             04137300
              AIF   (N'&RETURN LE 1).RB110      CK NUM                  04147400
&ZMS          SETC  '"RETURN='  *KPOSA* MNOTE                           04157500
&ZMS          SETC  '&ZMS.&RETURN"'                                     04167600
&ZMS          SETC  '&ZMS "RETURN"'                                     04177700
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 04187800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04197900
.RB110        ANOP  ,                                                   04208000
.*-------------------------------------------------------------------   04218100
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             04228200
&XRETURN      SETC  ''          INITIALIZE XVARIABLE                    04238300
.RB120        AIF   ('&RETURN(1)' NE 'Y').RB130                         04248400
&XRETURN      SETC  'Y'         SET KEYWORD                             04258500
.*-------------------------------------------------------------------   04268600
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             04278700
.RB130        AIF   ('&RETURN(1)' NE 'N').RB140                         04288800
&XRETURN      SETC  'N'         SET KEYWORD                             04298900
.*-------------------------------------------------------------------   04309000
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             04319100
.RB140        AIF   (K'&XRETURN GT 0).RB160     KEYWORD                 04329200
              AIF   (K'&RETURN(1) LE 0).RB150                           04339300
&ZMS          SETC  '"RETURN='  *KUKWA* MNOTE                           04349400
&ZMS          SETC  '&ZMS.&RETURN"'                                     04359500
&ZMS          SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '           04369600
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                 04379700
&ZMS          SETC  '&ZMS "Y"'  VALID KEYWORD                           04389800
              MNOTE 8,' &ZMS OR "N".'                                   04399900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04410000
.RB150        ANOP  ,                                                   04420100
&XRETURN      SETC  'Y'         SET DEFAULT KEYWORD                     04430200
.RB160        ANOP  ,                                                   04440300
&ZXRETURN     SETC  'INPUT'     SET IN/OUTPUT                           04450400
.*----------------------------------------------------------------***   04460500
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             04470600
              AIF   (N'&MODE LE 1).RB170        CK NUM                  04480700
&ZMS          SETC  '"MODE='    *KPOSA* MNOTE                           04490800
&ZMS          SETC  '&ZMS.&MODE"'                                       04500900
&ZMS          SETC  '&ZMS "MODE"'                                       04511000
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 04521100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04531200
.RB170        ANOP  ,                                                   04541300
.*-------------------------------------------------------------------   04551400
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             04561500
&XMODE        SETC  ''          INITIALIZE XVARIABLE                    04571600
.RB180   AIF   ('&MODE(1)' NE 'UNCOND').RB190                           04581700
&XMODE        SETC  'UNCOND'    SET KEYWORD                             04591800
.*-------------------------------------------------------------------   04601900
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             04612000
.RB190        AIF   ('&MODE(1)' NE 'COND').RB200                        04622100
&XMODE        SETC  'COND'      SET KEYWORD                             04632200
.*-------------------------------------------------------------------   04642300
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             04652400
.RB200        AIF   (K'&XMODE GT 0).RB220       KEYWORD                 04662500
              AIF   (K'&MODE(1) LE 0).RB210                             04672600
&ZMS          SETC  '"MODE='    *KUKWA* MNOTE                           04682700
&ZMS          SETC  '&ZMS.&MODE"'                                       04692800
&ZMS          SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '           04702900
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                 04713000
&ZMS          SETC  '&ZMS "UNCOND"'             VALID KEYWORD           04723100
              MNOTE 8,' &ZMS OR "COND".'                                04733200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04743300
.RB210        ANOP  ,                                                   04753400
&XMODE        SETC  'UNCOND'    SET DEFAULT KEYWORD                     04763500
.RB220        ANOP  ,                                                   04773600
&ZXMODE       SETC  'INPUT'     SET IN/OUTPUT                           04783700
.*----------------------------------------------------------------***   04793800
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             04803900
              AIF   (N'&ASYNC LE 1).RB230       CK NUM                  04814000
&ZMS          SETC  '"ASYNC='   *KPOSA* MNOTE                           04824100
&ZMS          SETC  '&ZMS.&ASYNC"'                                      04834200
&ZMS          SETC  '&ZMS "ASYNC"'                                      04844300
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 04854400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04864500
.RB230        ANOP  ,                                                   04874600
.*-------------------------------------------------------------------   04884700
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             04894800
&XASYNC       SETC  ''          INITIALIZE XVARIABLE                    04904900
.RB240   AIF   ('&ASYNC(1)' NE 'Y').RB250                               04915000
&XASYNC       SETC  'Y'         SET KEYWORD                             04925100
.*-------------------------------------------------------------------   04935200
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             04945300
.RB250   AIF   ('&ASYNC(1)' NE 'N').RB260                               04955400
&XASYNC       SETC  'N'         SET KEYWORD                             04965500
.*-------------------------------------------------------------------   04975600
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             04985700
.RB260        AIF   (K'&XASYNC GT 0).RB280      KEYWORD                 04995800
              AIF   (K'&ASYNC(1) LE 0).RB270                            05005900
&ZMS          SETC  '"ASYNC='   *KUKWA* MNOTE                           05016000
&ZMS          SETC  '&ZMS.&ASYNC"'                                      05026100
&ZMS          SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '           05036200
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                 05046300
&ZMS          SETC  '&ZMS "Y"'  VALID KEYWORD                           05056400
              MNOTE 8,' &ZMS OR "N".'                                   05066500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             05076600
.RB270        ANOP  ,                                                   05086700
&XASYNC       SETC  'N'         SET DEFAULT KEYWORD                     05096800
.RB280        ANOP  ,                                                   05106900
&ZXASYNC      SETC  'INPUT'     SET IN/OUTPUT                           05117000
.*----------------------------------------------------------------***   05127100
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     05137200
              AIF   (N'&ASCB LE 1).RB290        CK NUM                  05147300
&ZMS          SETC  '"ASCB='    *KPOSA* MNOTE                           05157400
&ZMS          SETC  '&ZMS.&ASCB"'                                       05167500
&ZMS          SETC  '&ZMS "ASCB"'                                       05177600
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 05187700
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             05197800
.RB290        ANOP  ,                                                   05207900
.*-------------------------------------------------------------------   05218000
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         05228100
&ZXASCB       SETC  'INPUT'     SET IN/OUTPUT                           05238200
&XASCB        SETC  'PSAAOLD'   SET DEFAULT                             05248300
              AIF   (K'&ASCB(1) LE 0).RB300     PARM                    05258400
&XASCB        SETC  '&ASCB(1)'  SET XVARIABLE                           05268500
              AIF   (N'&ASCB GT 1).RB300        MULTIPLE PARMS          05278600
&XASCB        SETC  '&ASCB'     SET XVARIABLE                           05288700
.RB300        ANOP  ,                                                   05298800
.*-------------------------------------------------------------------   05308900
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    05319000
              AIF   (K'&ZXASCB LE 0).RB330      NOT I/O                 05329100
              AIF   ('&XASCB'(1,1) NE '(').RB330                        05339200
&ZCGPR        SETC  '&XASCB'(2,K'&XASCB-2)                              05349300
              AIF   ('&ZCGPR'(1,1) NE '0').RB310                        05359400
              AIF   (K'&ZCGPR GT 2).RB320                               05369500
              AIF   ('&ZCGPR' EQ '0').RB320                             05379600
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       05389700
              AIF   (T'&ZCGPR NE 'N').RB320     INVALID REG NAME        05399800
.RB310        ANOP  ,                                                   05409900
              AIF   (T'&ZCGPR NE 'N').RB330     NON NUMERIC             05420000
.********************************************************************   05430100
.***  CHECK THAT REGISTER SPECIFICATION FOR ASCB IS WITHIN RANGE        05440200
.*            (1) OR (2) - (3) OR (6) - (12)                            05450300
.********************************************************************   05460400
              AIF   ('&ZCGPR' EQ '1').RB330     REG  1 IS O.K.          05470500
              AIF   ('&ZCGPR' EQ '2').RB330     REG  2 IS O.K.          05480600
              AIF   ('&ZCGPR' EQ '3').RB330     REG  3 IS O.K.          05490700
              AIF   ('&ZCGPR' LT '6').RB320     REGS 4-5 BAD.           05500800
              AIF   ('&ZCGPR' LE '12').RB330    REGS 6-12 O.K.          05510900
.RB320        ANOP  ,                                                   05521000
&ZMS          SETC  '"ASCB='    *KGPRA* MNOTE                           05531100
&ZMS          SETC  '&ZMS.&ASCB"'                                       05541200
&ZMS          SETC  '&ZMS IS INCORRECT.  MUST SPECIFY A REGISTER'       05551300
&ZMS          SETC  '&ZMS                     '                         05561400
              MNOTE 8,' &ZMS IN THE RANGE (1)-(3) OR (6)-(12). '        05571500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             05581600
.RB330        ANOP  ,                                                   05591700
.RB340        ANOP  ,           END OF FULL SYNTAX CHECK                05601800
.*******************************************************************    05611900
.***  CHECK FOR SPTOKEN OPTIONS ILLEGALLY SPECIFIED WITH "RB"           05622000
.*******************************************************************    05632100
&ZMS          SETC  ''          CLEAR MNOTE WORK AREAS                  05642200
&ZMA          SETA  0           CLEAR COUNT OF ERRORS                   05652300
              AIF   (T'&PURGE EQ 'O').RB350                             05662400
&ZMA          SETA  &ZMA+1      BUMP COUNT BAD KEYS                     05672500
&ZMS          SETC  ' "PURGE"'                                          05682600
.*******************************************************************    05692700
.***         CHECK FOR "RSCODE"                                         05702800
.*******************************************************************    05712900
.RB350        ANOP                                                      05723000
              AIF   (T'&RSCODE EQ 'O').RB370                            05733100
&ZMA          SETA  &ZMA+1      BUMP COUNT BAD KEYS                     05743200
              AIF   (&ZMA EQ 1).RB360                                   05753300
&ZMS          SETC  '&ZMS., "RSCODE"'                                   05763400
              AGO   .RB370                                              05773500
.RB360        ANOP                                                      05783600
&ZMS          SETC  ' "RSCODE"'                                         05793700
.*******************************************************************    05803800
.***         CHECK FOR "MF"                                             05813900
.*******************************************************************    05824000
.RB370        ANOP                                                      05834100
              AIF   (T'&MF EQ 'O').RB390                                05844200
&ZMA          SETA  &ZMA+1      BUMP COUNT BAD KEYS                     05854300
              AIF   (&ZMA EQ 1).RB380                                   05864400
&ZMS          SETC  '&ZMS., "MF"'                                       05874500
              AGO   .RB390                                              05884600
.RB380        ANOP                                                      05894700
&ZMS          SETC  ' "MF"'                                             05904800
.RB390        ANOP                                                      05914900
              AIF   (&ZMA EQ 0).RB410   IF KEYWORDS OK, GO GENERATE     05925000
.*******************************************************************    05935100
.***         GENERATE MNOTE                                             05945200
.*******************************************************************    05955300
              AIF   (&ZMA GT 1).RB400                                   05965400
&ZMS          SETC  '&ZMS. KEYWORD IS NOT VALID '                       05975500
&ZMS          SETC  '&ZMS.WITH "&ZMS2". '                               05985600
              MNOTE 8,' &ZMS '                                          05995700
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             06005800
              AGO   .RB410      CONTINUE                                06015900
.RB400        ANOP                                                      06026000
&ZMS          SETC  '&ZMS. KEYWORDS ARE NOT VALID '                     06036100
&ZMS          SETC  '&ZMS.WITH "&ZMS2". '                               06046200
              MNOTE 8,' &ZMS '                                          06056300
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             06066400
              AGO   .RB410      CONTINUE                                06076500
.*******************************************************************    06086600
.***  CHECK FOR MUTUALLY EXCLUSIVE "RB" KEYS OR MISSING DEPENDENCIES    06096700
.*******************************************************************    06106800
.RB410        ANOP                                                      06116900
              AIF ('&XRETURN' EQ 'Y').RB460                             06127000
.*******************************************************************    06137100
.***  "RETURN=NO" MAY ONLY BE SPECIFIED IF "MODE=UNCOND" AND            06147200
.***  "ASYNC=N" AND "ASCB" OPTION WAS NOT SPECIFIED                     06157300
.*******************************************************************    06167400
&ZMS2         SETC  ''          INITIALIZE STRING OF SPECIFIED RB       06177500
.*                              OPTIONS                                 06187600
&ZMA          SETA  0           INIT COUNT OF SPECIFICATIONS            06197700
.*******************************************************************    06207800
.***         CHECK FOR "MODE=COND"                                      06217900
.*******************************************************************    06228000
              AIF   ('&XMODE' EQ 'UNCOND').RB420                        06238100
&ZMA          SETA  &ZMA+1      BUMP COUNT BAD KEYS                     06248200
&ZMS2         SETC  ' "MODE=COND"'                                      06258300
.*******************************************************************    06268400
.***         CHECK FOR "ASYNC=Y"                                        06278500
.*******************************************************************    06288600
.RB420        ANOP                                                      06298700
              AIF   ('&XASYNC' EQ 'N').RB440                            06308800
&ZMA          SETA  &ZMA+1      BUMP COUNT BAD KEYS                     06318900
              AIF   (&ZMA EQ 0).RB430                                   06329000
&ZMS2         SETC  '&ZMS2. "ASYNC=Y"'                                  06339100
              AGO   .RB440                                              06349200
.RB430        ANOP                                                      06359300
&ZMS2         SETC  ' "ASYNC=Y"'                                        06369400
.*******************************************************************    06379500
.***         CHECK FOR "ASCB" SPECIFICATION                             06389600
.*******************************************************************    06399700
.RB440        ANOP                                                      06409800
              AIF   (T'&ASCB EQ 'O').RB460                              06419900
&ZMA          SETA  &ZMA+1      BUMP COUNT BAD KEYS                     06430000
              AIF   (&ZMA EQ 0).RB450                                   06440100
&ZMS2         SETC  '&ZMS2. "ASCB=&ASCB"'                               06450200
              AGO   .RB460                                              06460300
.RB450        ANOP                                                      06470400
&ZMS2         SETC  ' "ASCB=&ASCB"'                                     06480500
.RB460        ANOP                                                      06490600
              AIF   (&ZMA EQ 0).RB470   IF KEYWORDS OK, CONTINUE        06500700
.*******************************************************************    06510800
.***         GENERATE MNOTE                                             06520900
.*******************************************************************    06531000
&ZMS          SETC  '&ZMS2 AND "RETURN=N" ARE '                         06541100
&ZMS          SETC  '&ZMS.MUTUALLY EXCLUSIVE. '                         06551200
              MNOTE 8,' &ZMS '                                          06561300
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             06571400
              AGO   .RB470      CONTINUE                                06581500
.*******************************************************************    06591600
.***         "ASYNC=Y" MAY ONLY BE SPECIFIED IF "ASCB" IS SUPPLIED      06601700
.*******************************************************************    06611800
.RB470        ANOP                                                      06621900
              AIF ('&XASYNC' EQ 'N').RGEN000                            06632000
              AIF (T'&ASCB NE 'O').RGEN000                              06642100
.*******************************************************************    06652200
.***         GENERATE MNOTE                                             06662300
.*******************************************************************    06672400
&ZMS          SETC  'AN ASCB ADDRESS IS REQUIRED '                      06682500
&ZMS          SETC  '&ZMS.WITH "ASYNC=Y". '                             06692600
              MNOTE 8,' &ZMS '                                          06702700
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             06712800
              AGO   .RGEN000                                            06722900
.*******************************************************************    06733000
.***       GENERATE CODE IF ZMACRET=0                                   06743100
.*                                                                      06753200
.* TITLE: .RGEN000                                                      06763300
.*                                                                      06773400
.*******************************************************************    06783500
.RGEN000      ANOP                                                      06793600
              AIF   (&ZMACRET NE 0).TGE160      ERROR DETECTED          06803700
.*******************************************************************    06813800
.***AE.01  START OF RESUME MACRO CODE                                   06823900
.*******************************************************************    06834000
&M0M0001      SETC  '&XLABEL'                SET LABEL                  06844100
              AIF   (K'&XLABEL NE 0).RGEN010                            06854200
&M0M0001      SETC  'M00M&SYSNDX'            DEFAULT LABEL              06864300
.*                                                                      06874400
.RGEN010      ANOP  ,                                                   06884500
&M0M0001 DS    0H                             RESUME-0                  06894600
.********************************************************************** 06904700
.*        GENERATE BAL CODE FOR TCB=                                    06914800
.********************************************************************** 06924900
         AIF  ('&XTCB' EQ '(4)').RGEN030                                06935000
         AIF  ('&XTCB'(1,1) EQ '(').RGEN020                             06945100
.*       MUST BE  ADDRESS OF TCB                                        06955200
         L     4,&XTCB                 LOAD TCB ADDRESS                 06965300
         AGO   .RGEN030                                                 06975400
.*       TCB ADDRESS IS IN A REGISTER NOT 4                             06985500
.RGEN020 ANOP                                                           06995600
         LR    4,&TCB(1)               LOAD TCB ADDRESS                 07005700
         AGO   .RGEN030                                                 07015800
.********************************************************************** 07025900
.*        GENERATE BAL CODE FOR RB=                                     07036000
.********************************************************************** 07046100
.RGEN030 ANOP                                                           07056200
.*                                     REGISTER 4 HAS TCB               07066300
.*                                     ADDRESS                          07076400
         AIF   ('&XRB' EQ '(5)').RGEN050                                07086500
         AIF   ('&XRB'(1,1) EQ '(').RGEN040                             07096600
.*       MUST BE  ADDRESS OF RB                                         07106700
         L     5,&XRB                  LOAD RB ADDRESS                  07116800
         AGO    .RGEN050                                                07126900
.*       RB ADDRESS IS IN A REGISTER NOT 5                              07137000
.RGEN040 ANOP                                                           07147100
         LR    5,&RB(1)                LOAD RB ADDRESS                  07157200
         AGO   .RGEN050                                                 07167300
.********************************************************************** 07177400
.*       GENERATE BAL CODE FOR ASCB=                                    07187500
.********************************************************************** 07197600
.RGEN050 ANOP                                                           07207700
.*                                     REGISTER 5 HAS RB                07217800
.*                                     ADDRESS                          07227900
         AIF   ('&XASCB' EQ '(1)').RGEN080                              07238000
         AIF   (('&XMODE' EQ 'COND') AND ('&ASCB' EQ '')).RGEN060       07248100
         AIF   ('&ASCB' EQ '').RGEN080                                  07258200
         AIF   ('&XASCB'(1,1) EQ '(').RGEN070                           07268300
         L     1,&XASCB                LOAD ASCB ADDRESS                07278400
         AGO   .RGEN080                                                 07288500
.RGEN060 ANOP                                                           07298600
         L     1,PSAAOLD-PSA(0,0)      USE PSAAOLD AS ASCB ADDR         07308700
         AGO   .RGEN080                                                 07318800
.*                                     ASCB ADDRESS IS IN A REGISTER    07328900
.RGEN070 ANOP                                                           07339000
         LR    1,&ASCB(1)              LOAD ASCB ADDRESS                07349100
         AGO   .RGEN080                                                 07359200
.********************************************************************** 07369300
.*       GENERATE BAL CODE FOR ASYNC=                                   07379400
.********************************************************************** 07389500
.RGEN080 ANOP                                                           07399600
.*                                     REGISTER 1 HAS ASCB              07409700
.*                                     ADDRESS                          07419800
         AIF   ('&XASYNC' EQ 'N').RGEN110                               07429900
         AIF   ('&XMODE' EQ 'COND').RGEN090                             07440000
.*                                                                      07450100
.*       RESUME UNCONDITIONAL ASYNCHRONOUS RETURN=Y                     07460200
.*                                                                      07470300
         L     15,PSASVT-PSA(0,0)      GET SVT ADDRESS                  07480400
         L     15,&SVTRSUA.(0,15)      RESUME UNCOND ASYNC             X07490500
                                       EPA FROM SVTRSUA                 07500600
         AGO   .RGEN100                                                 07510700
.RGEN090 ANOP                                                           07520800
.*                                                                      07530900
.*       RESUME CONDITIONAL ASYNCHRONOUS RETURN=Y                       07541000
.*                                                                      07551100
         L     15,PSASVT-PSA(0,0)      GET SVT ADDRESS                  07561200
         L     15,&SVTRSCA.(0,15)      RESUME COND ASYNC ENTRY         X07571300
                                       EPA FROM SVTRSCA                 07581400
.RGEN100 ANOP                                                           07591500
         BALR  14,15                   GOTO ROUTINE,INDICATE            07601600
*                                      RETURN                           07611700
         MEXIT                                                          07621800
.********************************************************************** 07631900
.*       GENERATE ENTRY CODE FOR RETURN=N OPTION                        07642000
.********************************************************************** 07652100
.RGEN110 ANOP                                                           07662200
         AIF   ('&XRETURN' EQ 'Y').RGEN130                              07672300
.*                                                                      07682400
.*       RESUME UNCONDITIONAL SYNCHRONOUS RETURN=N                      07692500
.*                                                                      07702600
         L     15,FLCCVT-FLC(0,0)      GET CVT ADDRESS                  07712700
         SLR   14,14                   INDICATE  NO RETURN              07722800
         L     15,CVTRSUME-CVT(0,15)   RESUME RETURN=N ENTRY            07732900
         BR    15                      GO TO ROUTINE                    07743000
.RGEN120 MEXIT                                                          07753100
.*       RETURN=Y                                                       07763200
.RGEN130 ANOP                                                           07773300
.********************************************************************** 07783400
.*       GENERATE ENTRY CODE FOR SYNC, RETURN=Y                         07793500
.********************************************************************** 07803600
         AIF   ('&MODE' NE 'COND').RGEN140                              07813700
.*                                                                      07823800
.*       RESUME CONDITIONAL SYNCHRONOUS RETURN=Y                        07833900
.*                                                                      07844000
         L     15,PSASVT-PSA(0,0)      GET SVT ADDRESS                  07854100
         L     15,&SVTRSCS.(0,15)      RESUME COND SYNC ENTRY          X07864200
                                       EPA FROM SVTRSCS                 07874300
         BALR  14,15                   GO TO RESUME                     07884400
         MEXIT                                                          07894500
.RGEN140 ANOP                                                           07904600
         AIF   ('&ASCB' EQ '').RGEN150                                  07914700
.*                                                                      07924800
.*       RESUME UNCONDITIONAL SYNCHRONOUS ASCB=ADDR RETURN=Y            07934900
.*                                                                      07945000
         L     15,PSASVT-PSA(0,0)      GET SVT ADDRESS                  07955100
         L     15,&SVTRSUS.(0,15)      RESUME UNCOND SYNC ENTRY        X07965200
                                       EPA FROM SVTRSUS                 07975300
         BALR  14,15                   GOTO ROUTINE, INDICATE           07985400
*                                      RETURN                           07995500
         MEXIT                                                          08005600
.RGEN150 ANOP                                                           08015700
.*                                                                      08025800
.*       RESUME UNCONDITIONAL SYNCHRONOUS RETURN=Y                      08035900
.*                                                                      08046000
         L     15,FLCCVT-FLC(0,0)      GET CVT ADDRESS                  08056100
         L     15,CVTRSUME-CVT(0,15)   RESUME UNCOND SYNC ENTRY         08066200
         BALR  14,15                   GO TO ROUTINE, INDICATE          08076300
*                                      RETURN                           08086400
         AGO   .TGE150                                                  08096500
.*******************************************************************    08106600
.***AB.07  PERFORM "SPTOKEN" PROCESSING                                 08116700
.*******************************************************************    08126800
.RGEN160 ANOP                                                           08136900
.********************************************************************   08147000
.***AG.MF01 PROCESS MF MACRO FORMS                                      08157100
.********************************************************************   08167200
              ACTR  10000                                               08177300
.********************************************************************   08187400
.***AG.MF02  FULL MACRO SYNTAX CHECKING                                 08197500
.********************************************************************   08207600
              ACTR  10000                                               08217700
.*-------------------------------------------------------------------   08227800
.***AG.MF03 MF=(SLE)                                                    08237900
&XMF          SETC  'S'         INITIALIZE DEFAULT                      08248000
              AIF   (T'&MF EQ 'O').RGEN180                              08258100
              AIF   ('&MF' EQ 'S').RGEN180                              08268200
&XMF          SETC  'E'         TRY EXECUTE FORM                        08278300
              AIF   ('&MF(1)' EQ 'E').RGEN170                           08288400
.********************************************************************   08298500
.***         INCORRECT MACRO FORM SPECIFIED                             08308600
.********************************************************************   08318700
&ZMS          SETC  '"MF='      *KUKWA* MNOTE                           08328800
&ZMS          SETC  '&ZMS.&MF"'                                         08338900
&ZMS          SETC  '&ZMS KEYWORD IS NOT VALID WITH'                    08349000
&ZMS          SETC  '&ZMS "SPTOKEN".'                                   08359100
              MNOTE 8,' &ZMS '                                          08369200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             08379300
&XMF          SETC  'S'         RESET MACRO FORM TO DEFAULT             08389400
              AGO   .RGEN180    CONTINUE PROCESSING                     08399500
.********************************************************************   08409600
.***         CHECK POSITIONALS ON MF=E                                  08419700
.********************************************************************   08429800
.RGEN170      ANOP                                                      08439900
              AIF    (N'&MF EQ 2).RGEN180       CHECK FOR 2 SUBLISTS    08450000
.********************************************************************   08460100
.***         WRONG NUMBER OF SUBLISTS SPECIFIED                         08470200
.********************************************************************   08480300
&ZMS          SETC  '"MF='      *KUKWA* MNOTE                           08490400
&ZMS          SETC  '&ZMS.&MF"'                                         08500500
&ZMS          SETC  '&ZMS IS INCORRECT. '                               08510600
&ZMS          SETC  '&ZMS PARAMETER LIST NAME '                         08520700
&ZMS          SETC  '&ZMS IS REQUIRED. '                                08530800
              MNOTE 8,' &ZMS '                                          08540900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             08551000
.RGEN180      ANOP  ,           CONTINUE SPTOKEN PROCESSING             08561100
.*----------------------------------------------------------------***   08571200
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     08581300
              AIF   (N'&SPTOKEN LE 1).RGEN190   CK NUM                  08591400
&ZMS          SETC  '"SPTOKEN='                 *KPOSA* MNOTE           08601500
&ZMS          SETC  '&ZMS.&SPTOKEN"'                                    08611600
&ZMS          SETC  '&ZMS "SPTOKEN"'                                    08621700
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 08631800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             08641900
.RGEN190      ANOP  ,                                                   08652000
.*-------------------------------------------------------------------   08662100
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         08672200
&ZXSPTOKEN    SETC  'INPUT'     SET IN/OUTPUT                           08682300
&XSPTOKEN     SETC  '&SPTOKEN(1)'               SET XVARIABLE           08692400
              AIF   (N'&SPTOKEN GT 1).RGEN200   MULTIPLE PARMS          08702500
&XSPTOKEN     SETC  '&SPTOKEN'  SET XVARIABLE                           08712600
.RGEN200      AIF   (K'&SPTOKEN(1) GT 0).RGEN210                        08722700
&ZXSPTOKEN    SETC  ''          RESET IN/OUTPUT                         08732800
&ZMS          SETC  ' '         *KRQDA*                                 08742900
&ZMS          SETC  '&ZMS "SPTOKEN" KEY AND ITS ARGUMENT ARE'           08753000
              MNOTE 8,' &ZMS REQUIRED.'                                 08763100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             08773200
.RGEN210      ANOP  ,                                                   08783300
.********************************************************************   08793400
.***         CHECK OPTIONAL "PURGE" KEYWORD                             08803500
.********************************************************************   08813600
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             08823700
&XPURGE       SETC  ''           INITIALIZE XVARIABLE                   08833800
.RGEN220      AIF   ('&PURGE(1)' NE 'YES').RGEN230                      08843900
&XPURGE       SETC  'YES'        SET KEYWORD                            08854000
&SFTSLOT      SETC  '66'         INITIALIZE SFT SLOT INDEX              08864100
.*-------------------------------------------------------------------   08874200
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             08884300
.RGEN230      AIF   ('&PURGE(1)' NE 'NO').RGEN240                       08894400
&XPURGE       SETC  'NO'         SET KEYWORD                            08904500
&SFTSLOT      SETC  '65'         INITIALIZE SFT SLOT INDEX              08914600
.*-------------------------------------------------------------------   08924700
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             08934800
.RGEN240      AIF   (K'&XPURGE GT 0).RGEN260    KEYWORD                 08944900
              AIF   (K'&PURGE(1) LE 0).RGEN250                          08955000
&ZMS          SETC  '"PURGE='  *KUKWA* MNOTE                            08965100
&ZMS          SETC  '&ZMS.&PURGE"'                                      08975200
&ZMS          SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '           08985300
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                 08995400
&ZMS          SETC  '&ZMS "YES"'                VALID KEYWORD           09005500
              MNOTE 8,' &ZMS OR "NO".'          HERE                    09015600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             09025700
.RGEN250      ANOP  ,                                                   09035800
&XPURGE       SETC  'NO'        SET DEFAULT KEYWORD                @01C 09045900
&SFTSLOT      SETC  '65'         INITIALIZE SFT SLOT INDEX              09056000
.RGEN260      ANOP  ,                                                   09066100
&ZXPURGE      SETC  'INPUT'     SET IN/OUTPUT                           09076200
.*-------------------------------------------------------------------   09086300
.***AG.KCK01 NAME, RQD INPUT, KEYS -GPR NOT ALLOWED                     09096400
              AIF   (K'&ZXSPTOKEN LE 0).RGEN270 NOT I/O                 09106500
              AIF   ('&XSPTOKEN'(1,1) NE '(').RGEN270                   09116600
&ZXSPTOKEN    SETC  ''          RESET IN/OUTPUT                         09126700
&ZMS          SETC  '"SPTOKEN='                 *KGPRA* MNOTE           09136800
&ZMS          SETC  '&ZMS.&SPTOKEN"'                                    09146900
&ZMS          SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'           09157000
              MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'                   09167100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             09177200
.RGEN270      ANOP  ,                                                   09187300
.*----------------------------------------------------------------***   09197400
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     09207500
              AIF   (N'&RSCODE LE 1).RGEN280    CK NUM                  09217600
&ZMS          SETC  '"RSCODE='  *KPOSA* MNOTE                           09227700
&ZMS          SETC  '&ZMS.&RSCODE"'                                     09237800
&ZMS          SETC  '&ZMS "RSCODE"'                                     09247900
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 09258000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             09268100
.RGEN280      ANOP  ,                                                   09278200
.********************************************************************   09288300
.***         CHECK REGISTER NOTATION FOR "RSCODE"                       09298400
.********************************************************************   09308500
&ZXRSCODE     SETC  'INPUT'     SET IN/OUTPUT                           09318600
.*-------------------------------------------------------------------   09328700
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    09338800
              AIF   (K'&ZXRSCODE LE 0).RGEN310  NOT I/O                 09348900
              AIF   ('&XRSCODE' EQ '').RGEN310                          09359000
              AIF   ('&XRSCODE'(1,1) NE '(').RGEN310                    09369100
&ZCGPR        SETC  '&XRSCODE'(2,K'&XRSCODE-2)                          09379200
              AIF   ('&ZCGPR'(1,1) NE '0').RGEN290                      09389300
              AIF   (K'&ZCGPR GT 2).RGEN300                             09399400
              AIF   ('&ZCGPR' EQ '0').RGEN300                           09409500
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       09419600
              AIF   (T'&ZCGPR NE 'N').RGEN300   INVALID REG NAME        09429700
.RGEN290      ANOP  ,                                                   09439800
              AIF   (T'&ZCGPR NE 'N').RGEN310   NON NUMERIC             09449900
              AIF   ('&ZCGPR' LT '2').RGEN300                           09460000
              AIF   ('&ZCGPR' LE '12').RGEN310                          09470100
.RGEN300      ANOP  ,                                                   09480200
&ZMS          SETC  '"RSCODE='  *KGPRA* MNOTE                           09490300
&ZMS          SETC  '&ZMS.&RSCODE"'                                     09500400
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           09510500
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    09520600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             09530700
.*******************************************************************    09540800
.***   "RSCODE" MAY NOT BE SPECIFIED WITH "PURGE=YES"                   09550900
.*******************************************************************    09561000
.RGEN310      ANOP  ,                                                   09571100
              AIF ('&XPURGE' EQ 'NO').RGEN320                           09581200
              AIF (T'&RSCODE EQ 'O').RGEN320                            09591300
.*******************************************************************    09601400
.***         GENERATE MNOTE                                             09611500
.*******************************************************************    09621600
&ZMS          SETC  '"PURGE=YES" AND "RSCODE=&RSCODE" '                 09631700
&ZMS          SETC  '&ZMS.ARE MUTUALLY EXCLUSIVE. '                     09641800
              MNOTE 8,' &ZMS '                                          09651900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             09662000
              AGO   .RGEN320                                            09672100
.RGEN320      ANOP  ,                                                   09682200
.RGEN330      ANOP  ,           END OF FULL SYNTAX CHECK                09692300
.*******************************************************************    09702400
.***       GENERATE CODE IF ZMACRET=0                                   09712500
.*******************************************************************    09722600
              AIF   (&ZMACRET NE 0).TGE150      ERROR DETECTED          09732700
.*******************************************************************    09742800
.***       SEPARATE STANDARD FORM FROM EXECUTE FORM                     09752900
.*******************************************************************    09763000
&XLIST        SETC  '&GNAME1'              ASSUME STANDARD FORM         09773100
              AIF   ('&XMF' EQ 'S').RGEN340  STANDARD? CONTINUE PROC    09783200
&XLIST        SETC  '&MF(2)'               ELSE ASSIGN NAME FOR LIST    09793300
              AGO   .TGE000                GO GENERATE EXECUTE FORM     09803400
.*******************************************************************    09813500
.***       START OF SUSPEND MACRO CODE (STANDARD FORM)                  09823600
.*******************************************************************    09833700
.RGEN340      ANOP                                                      09843800
&M0M0001      SETC  '&XLABEL'                SET LABEL                  09853900
              AIF   (K'&XLABEL NE 0).RGEN350                            09864000
&M0M0001      SETC  'M00M&SYSNDX'            DEFAULT LABEL              09874100
.*                                                                      09884200
.RGEN350      ANOP  ,                                                   09894300
&M0M0001 DS    0H                             SUSPEND-0                 09904400
         LAE    1,&XLIST                   POINT GPR/AR 1 TO LIST       09914500
.********************************************************************   09924600
.*    GENERATE INLINE PARAMETER LIST                                *   09934700
.********************************************************************   09944800
         LAE    14,&SPTOKEN                LOAD ALET/ADDRESS OF TOKEN   09954900
         STAM   14,14,8(1)                 STORE ALET INTO LIST         09965000
         ST     14,12(,1)                  STORE ADDR INTO LIST  @02C   09975100
         AIF    (T'&RSCODE NE 'O').RGEN360                              09985200
.*                                                                      09995300
.*  "RSCODE" NOT SPECIFIED -- MAKE SURE FIELD IN PARM LIST IS ZERO      10005400
.*                                                                      10015500
         SLR    14,14                      CLEAR WORK REG               10025600
         ST     14,4(,1)                 STORE ZERO CODE IN LIST @02C   10035700
         AGO    .RGEN380                                                10045800
.*                                                                      10055900
.*  "RSCODE" IS SPECIFIED -- CHECK FOR REGISTER SPECIFICATION           10066000
.*                                                                      10076100
.RGEN360 ANOP                                                           10086200
         AIF    ('&RSCODE'(1,1) EQ '(').RGEN370                         10096300
         L      14,&RSCODE                 LOAD RESUME CODE             10106400
         ST     14,4(,1)                   STORE INTO PARM LIST  @02C   10116500
         AGO    .RGEN380                                                10126600
.RGEN370 ANOP                                                           10136700
         ST     &RSCODE(1),4(,1)           STORE RESUME CODE     @02C   10146800
*                                          INTO PARAMETER LIST          10156900
.RGEN380 ANOP                                                           10167000
         B      &GNAME2                    BRANCH AROUND PARM LIST      10177100
         CNOP   0,4                        FORCE LIST TO WORD BOUNDARY  10187200
.*                                                                      10197300
&GNAME1  DS     0CL16                      SUSPEND/RESUME WITH TOKEN    10207400
*                                          (INPUT/OUTPUT)               10217500
         DC     XL1'01'                    PARAMETER LEVEL INDICATOR    10227600
         DC     XL3'00'                                                 10237700
         DC     A(0)                       RESUME CODE                  10247800
         DC     F'0'                       ALET OF SUSPEND TOKEN        10257900
         DC     A(0)                       ADDRESS OF SUSPEND TOKEN     10268000
.********************************************************************   10278100
.*    GENERATE PC LINKAGE TO RESUME WITH TOKEN SERVICE ROUTINE      *   10288200
.*    R14 IS USED AS A WORK REGISTER                                *   10298300
.********************************************************************   10308400
&GNAME2  L      14,16(0,0)                 GET ADDRESS OF CVT           10318500
         L      14,772(14,0)               GET ADDRESS OF SFT           10328600
         L      14,(&SFTSLOT-1)*4(14,0)    GET LX/EX FOR ROUTINE        10338700
         AIF    ('&XPURGE' EQ 'YES').RGEN390                            10348800
         PC     0(14)                      PC TO RESUME WITH TOKEN      10358900
*                                          SERVICE ROUTINE              10369000
         AGO    .TGE080                                                 10379100
.RGEN390 ANOP                                                           10389200
         PC     0(14)                      PC TO PURGE WITH TOKEN       10399300
*                                          SERVICE ROUTINE              10409400
         AGO    .TGE080                    REJOIN COMMON GENERATION     10419500
.*******************************************************************    10429600
.***       START OF SUSPEND MACRO CODE (EXECUTE FORM)                   10439700
.*                                                                      10449800
.* TITLE: .TGE                                                          10459900
.*                                                                      10470000
.*******************************************************************    10480100
.TGE000       ANOP                                                      10490200
&M0M0001      SETC  '&XLABEL'                SET LABEL                  10500300
              AIF   (K'&XLABEL NE 0).TGE010                             10510400
&M0M0001      SETC  'M00M&SYSNDX'            DEFAULT LABEL              10520500
.*                                                                      10530600
.TGE010       ANOP  ,                                                   10540700
&M0M0001 DS    0H                             SUSPEND-0                 10550800
.********************************************************************   10560900
.*    CHECK FOR REGISTER TYPE PARAMETER LIST ADDRESS                *   10571000
.********************************************************************   10581100
         AIF    ('&MF(2)'(1,1) EQ '(').TGE020   BRANCH TO PROCESS       10591200
         LAE    1,&XLIST                   POINT GPR/AR 1 TO LIST       10601300
         AGO    .TGE030                    CONTINUE PROCESSING          10611400
.TGE020  ANOP                                                           10621500
&XLIST   SETC   '&MF(2)'(2,K'&MF(2)-2)     EXTRACT REGISTER NAME        10631600
         LAE    1,0(0,&XLIST)              POINT GPR/AR 1 TO LIST       10641700
         AGO    .TGE030                    CONTINUE PROCESSING          10651800
.********************************************************************   10661900
.*    FILL IN PARAMETER LIST                                        *   10672000
.********************************************************************   10682100
.TGE030  ANOP                                                           10692200
         XC     0(16,1),0(1)               CLEAR PARAMETER LIST         10702300
         MVI    0(1),X'01'                 INIT PARAMETER LEVEL         10712400
         LAE    14,&SPTOKEN                LOAD ALET/ADDRESS OF TOKEN   10722500
         STAM   14,14,8(1)                 STORE ALET INTO LIST         10732600
         ST     14,12(,1)                  STORE ADDR INTO LIST  @02C   10742700
         AIF    (T'&RSCODE NE 'O').TGE040                               10752800
.*                                                                      10762900
.*  "RSCODE" NOT SPECIFIED -- MAKE SURE FIELD IN PARM LIST IS ZERO      10773000
.*                                                                      10783100
         SLR    14,14                      CLEAR WORK REG               10793200
         ST     14,4(,1)                 STORE ZERO CODE IN LIST @02C   10803300
         AGO    .TGE060                                                 10813400
.*                                                                      10823500
.*  "RSCODE" IS SPECIFIED -- CHECK FOR REGISTER SPECIFICATION           10833600
.*                                                                      10843700
.TGE040  ANOP                                                           10853800
         AIF    ('&RSCODE'(1,1) EQ '(').TGE050                          10863900
         L      14,&RSCODE                 LOAD RESUME CODE             10874000
         ST     14,4(,1)                   STORE INTO PARM LIST  @02C   10884100
         AGO    .TGE060                                                 10894200
.TGE050  ANOP                                                           10904300
         ST     &RSCODE(1),4(,1)           STORE RESUME CODE IN LIST    10914400
*                                          INTO LIST             @02C   10924500
.TGE060  ANOP                                                           10934600
.********************************************************************   10944700
.*    GENERATE PC LINKAGE TO RESUME WITH TOKEN SERVICE ROUTINE      *   10954800
.*    R14 IS USED AS A WORK REGISTER                                *   10964900
.********************************************************************   10975000
&GNAME2  L      14,16(0,0)                 GET ADDRESS OF CVT           10985100
         L      14,772(14,0)               GET ADDRESS OF SFT           10995200
         L      14,(&SFTSLOT-1)*4(14,0)    GET LX/EX FOR ROUTINE        11005300
         AIF    ('&XPURGE' EQ 'YES').TGE070                             11015400
         PC     0(14)                      PC TO RESUME WITH TOKEN      11025500
*                                          SERVICE ROUTINE              11035600
         AGO    .TGE080                                                 11045700
.TGE070  ANOP                                                           11055800
         PC     0(14)                      PC TO PURGE WITH TOKEN       11065900
*                                          SERVICE ROUTINE              11076000
         AGO    .TGE080                    REJOIN COMMON GENERATION     11086100
.*******************************************************************    11096200
.***       END OF CODE GENERATION                                       11106300
.*******************************************************************    11116400
.TGE080  ANOP                                                           11126500
         AGO    .TGE150                                                 11136600
.********************************************************************   11146700
.*     MF=L PROCEDURE                                               *   11156800
.********************************************************************   11166900
.TGE090       ANOP   ,                                                  11177000
.*******************************************************************    11187100
.*** CHECK FOR "SPTOKEN" OPTIONS ILLEGALLY SPECIFIED WITH "MF"          11197200
.*** (ANY "RB" OPTIONS SHOULD HAVE BEEN DETECTED AT THE TOP OF MACRO)   11207300
.*******************************************************************    11217400
&ZMS          SETC  ''          CLEAR MNOTE WORK AREAS                  11227500
&ZMA          SETA  0           CLEAR COUNT OF ERRORS                   11237600
              AIF   (T'&PURGE EQ 'O').TGE100                            11247700
&ZMA          SETA  &ZMA+1      BUMP COUNT BAD KEYS                     11257800
&ZMS          SETC  ' "PURGE"'                                          11267900
.*******************************************************************    11278000
.***         CHECK FOR "RSCODE"                                         11288100
.*******************************************************************    11298200
.TGE100       ANOP                                                      11308300
              AIF   (T'&RSCODE EQ 'O').TGE120                           11318400
&ZMA          SETA  &ZMA+1      BUMP COUNT BAD KEYS                     11328500
              AIF   (&ZMA EQ 1).TGE110                                  11338600
&ZMS          SETC  '&ZMS., "RSCODE"'                                   11348700
              AGO   .TGE140                                             11358800
.TGE110       ANOP                                                      11368900
&ZMS          SETC  ' "RSCODE"'                                         11379000
.TGE120       ANOP                                                      11389100
              AIF   (&ZMA EQ 0).TGE140  IF KEYWORDS OK, GO GENERATE     11399200
.*******************************************************************    11409300
.***         GENERATE MNOTE                                             11419400
.*******************************************************************    11429500
              AIF   (&ZMA GT 1).TGE130                                  11439600
&ZMS          SETC  '&ZMS. KEYWORD IS NOT VALID '                       11449700
&ZMS          SETC  '&ZMS.WITH "MF=&MF". '                              11459800
              MNOTE 8,' &ZMS '                                          11469900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             11480000
              AGO   .TGE140     GO GENERATE CODE                        11490100
.TGE130       ANOP                                                      11500200
&ZMS          SETC  '&ZMS. KEYWORDS ARE NOT VALID '                     11510300
&ZMS          SETC  '&ZMS.WITH "MF=&MF". '                              11520400
              MNOTE 8,' &ZMS '                                          11530500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             11540600
.*******************************************************************    11550700
.***       GENERATE CODE IF ZMACRET=0                                   11560800
.*******************************************************************    11570900
.TGE140       ANOP  ,                                                   11581000
              AIF   (&ZMACRET NE 0).TGE150      ERROR DETECTED          11591100
.*******************************************************************    11601200
.***       START OF SUSPEND MACRO CODE  (LIST FORM)                     11611300
.*******************************************************************    11621400
         DS    0F                                                       11631500
&XLABEL  DS    0CL16                       SUSPEND/RESUME WITH TOKEN    11641600
*                                          (INPUT/OUTPUT)               11651700
         DC    XL1'01'                     PARAMETER LEVEL INDICATOR    11661800
         DC    XL3'00'                                                  11671900
         DC    A(0)                        RESUME CODE                  11682000
         DC    F'0'                        ALET OF SUSPEND TOKEN        11692100
         DC    A(0)                        ADDRESS OF SUSPEND TOKEN     11702200
.*                                                                      11712300
         AGO    .TGE150                                                 11722400
.********************************************************************   11732500
.***       EXIT MACRO                                                   11742600
.********************************************************************   11752700
.TGE150  ANOP                                                           11762800
         SPACE 1                                                        11772900
.TGE160  ANOP                                                           11783000
.TGE170  ANOP                                                           11793100
         MEXIT                                                          11803200
         MEND                                                           11813300
**********************************************************************/ 11823400
*/**** START OF SPECIFICATIONS **************************************** 11833500
*                                                                     * 11843600
*01* MACRO NAME:  RESUME                                              * 11853700
*                                                                     * 11863800
*01* DESCRIPTIVE NAME:  RESUME EXECUTION OF A SUSPENDED UNIT OF WORK  * 11873900
*                                                                     * 11884000
*01* STATUS: HBB4410                                                  * 11894100
*                                                                     * 11904200
*01* FUNCTION:                                                        * 11914300
*       SEE THE RESUME MACRO PROLOGUE FOR DETAILS.                    * 11924400
*                                                                     * 11934500
*01* INPUT:                                                           * 11944600
*                                                                     * 11954700
*            ?RESUME    (RETURN|NORETURN)                             * 11964800
*                       TCB(TCB_ADDR)                                 * 11974900
*                       RB(RB_ADDR)                                   * 11985000
*                       MODE(UNCOND|COND)                             * 11995100
*                       ASYNC(N|Y)                                    * 12005200
*                       ASCB(ASCB_ADDR)                               * 12015300
*                       RELATED(ANY COMMENT)                          * 12025400
*                                                                     * 12035500
*    NOTE: THE PLAS EQUIVALENTS TO "RETURN=Y" AND "RETURN=N"          * 12045600
*          ARE THE POSITIONAL PARAMETERS "(RETURN)" AND "(NORETURN)"  * 12055700
*                                                                     * 12065800
*          THE DEFAULT IS (RETURN)                                    * 12075900
*                                                                     * 12086000
*            ?RESUME    SPTOKEN(SPTOKEN_ADDRESS)                      * 12096100
*                       PURGE(NO|YES)                                 * 12106200
*                       RSCODE(RESUME_CODE)                           * 12116300
*                       MF(E,CNTRL_ADDRESS)                           * 12126400
*                       RELATED(ANY COMMENT)                          * 12136500
*                                                                     * 12146600
*                                                                     * 12156700
*            ?RESUME    MF(L,CNTRL_ADDRESS)                           * 12166800
*                                                                     * 12176900
****** END OF SPECIFICATIONS *****************************************/ 12250000
*/*PB.ECHO02 ECHO MACRO COMMENT--------------------------------------*/ 12300000
*  IF MACLABEL ^='' THEN                /* IF USER SPECIFIED A LABEL */ 12350000
*     ANS(MACLABEL) COL(2);             /* THEN GENERATE IT          */ 12400000
*/********************************************************************/ 12450000
*/*PV.DCL01 MACRO DECLARES AND CODE GENERATION CONTROLS              */ 12500000
*/********************************************************************/ 12550000
*  DCL   ZSUSPEND CHAR EXTERNAL;    /* PARAMETER LIST MAP PRODUCED AT   12600000
*                                      LEAST ONCE                    */ 12650000
*  DEACT ZSUSPEND;                                                      12700000
*                                                                       12750000
*  DCL ZMACRET FIXED; DEACT ZMACRET;                                    12800000
*  ZMACRET=0;                   /* MACRO COMPILE RETURN CODE         */ 12850000
*                                                                       12900000
*  DCL ZMS  CHAR;  DEACT ZMS;   /* ERROR MESSAGE                     */ 12950000
*  DCL ZMS2 CHAR;  DEACT ZMS2;  /* SECOND ERROR MESSAGE STRING       */ 13000000
*  DCL ZMA FIXED;  DEACT ZMA;   /* BAD KEYWORD COUNT                 */ 13050000
*  DCL ZCVAL CHAR; DEACT ZCVAL; /* ERROR MESSAGE WORK AREA           */ 13100000
*                                                                       13150000
*  DCL ZI FIXED;  DEACT ZI;     /* INDEX FOR VARIABLE NUM OF PARMS   */ 13200000
*  DCL ZJ FIXED;  DEACT ZJ;     /* INDEX FOR VARIABLE NUM OF PARMS   */ 13250000
*  DCL ZK FIXED;  DEACT ZK;     /* INDEX FOR RANGE COLON (:)         */ 13300000
*  DCL ZL FIXED;  DEACT ZL;     /* INDEX FOR RANGE VALUE CHECKING    */ 13350000
*  DCL ZLO FIXED; DEACT ZLO;    /* LOW RANGE VALUE                   */ 13400000
*  DCL ZHI FIXED; DEACT ZHI;    /* HIGH RANGE VALUE                  */ 13450000
*  DCL ZW CHAR;   DEACT ZW;     /* WORK AREA FOR RANGE VALUE SUBLIST */ 13500000
*  DCL ZN FIXED;  DEACT ZN;     /* NUMERIC WORK VARIABLE             */ 13550000
*  DCL ZC CHAR;   DEACT ZC;     /* CHARACTER WORK VARIABLE           */ 13600000
*                                                                       13650000
*  DCL ZPRMMAX FIXED;           /* MAXIMUM PARM LIST SIZE            */ 13700000
*  DCL ZPRMNUM FIXED;           /* PARAMETER ARRAY INDEX             */ 13750000
*  DCL ZPRM(100);               /* PARAMETER ENTRY                   */ 13800000
*  DCL EHAMAXLEN FIXED EXTERNAL;   /* MAX ILIST SIZE FOR PARM LISTS  */ 13850000
*  DCL EHAMAPS CHARACTER EXTERNAL; /* MAPPINGS DECLARED BY EPILOG    */ 13900000
*  DCL EHAREGS CHARACTER EXTERNAL; /* REG DCLS                       */ 13950000
*  DCL EHALIST CHARACTER EXTERNAL; /* STANDARD PARM LIST GENERATION  */ 14000000
*/*******************************************************************/  14050000
*/*PV.XVAR01 DECLARE ALL MACRO PARAMETER VARIABLES                  */  14100000
*/*******************************************************************/  14150000
*  DCL XTCB;  DEACT XTCB;          /***PV.XVAR02 INPUT NAME */          14200000
*  DCL ZXTCB; DEACT ZXTCB;         /***INPUT/OUTPUT CONTROL */          14250000
*  DCL XRB;  DEACT XRB;            /***PV.XVAR02 INPUT NAME */          14300000
*  DCL ZXRB; DEACT ZXRB;           /***INPUT/OUTPUT CONTROL */          14350000
*  DCL XRETURN;  DEACT XRETURN;    /***PV.XVAR02 INPUT VALUE */         14400000
*  DCL ZXRETURN; DEACT ZXRETURN;   /***INPUT/OUTPUT CONTROL */          14450000
*  DCL XMODE;  DEACT XMODE;        /***PV.XVAR02 INPUT VALUE */         14500000
*  DCL ZXMODE; DEACT ZXMODE;       /***INPUT/OUTPUT CONTROL */          14550000
*  DCL XASYNC;  DEACT XASYNC;      /***PV.XVAR02 INPUT VALUE */         14600000
*  DCL ZXASYNC; DEACT ZXASYNC;     /***INPUT/OUTPUT CONTROL */          14650000
*  DCL XASCB;  DEACT XASCB;        /***PV.XVAR02 INPUT NAME */          14700000
*  DCL ZXASCB; DEACT ZXASCB;       /***INPUT/OUTPUT CONTROL */          14750000
*  DCL XSPTOKEN; DEACT XSPTOKEN;    /**INPUT NAME           */          14800000
*  DCL ZXSPTOKEN; DEACT ZXSPTOKEN;  /**INPUT/OUTPUT CONTROL */          14850000
*  DCL XPURGE;   DEACT XPURGE;      /**INPUT VALUE          */          14900000
*  DCL ZXPURGE;  DEACT ZXPURGE;     /**INPUT/OUTPUT CONTROL */          14950000
*  DCL XMF;      DEACT XMF;         /**INPUT VALUE/NAME     */          15000000
*  DCL XLIST;    DEACT XLIST;       /**INPUT PARM LIST NAME */          15050000
*  DCL XMAP;     DEACT XMAP;        /**PARAMETER LIST MAP   */          15100000
*  DCL XRSCODE;  DEACT XRSCODE;     /**INPUT NAME           */          15150000
*  DCL ZRSCODE;  DEACT ZRSCODE;     /**INPUT/OUTPUT CONTROL */          15200000
*  DCL IVDOCMT   CHARACTER;        /***DO/END COMMENT       */          15250000
*  DCL IVPLSIZE  FIXED;             /**PARAMETER LIST SIZE  */          15300000
*  DCL IVSTRING  CHAR;              /**EPILOG WORKAREA      */          15350000
*  DCL SFTSLOT   CHAR;              /**INDEX INTO SFT       */          15400000
*  DCL PCS  CHAR;  DEACT PCS;       /**STRING FOR NAME OF SELECTED PC   15450000
*                                      ROUTINE                       */ 15500000
*/********************************************************************/ 15550000
*/*PB.SYSL01 INVOKE SP LEVEL AND SYSTEM STATE MACROS                 */ 15600000
*/********************************************************************/ 15650000
*  DCL SYSSPLV CHAR EXTERNAL; DEACT SYSSPLV;/* SPLEVEL 1,2,3         */ 15700000
*  DCL SYSASCE CHAR EXTERNAL; DEACT SYSASCE;/* STATE ANY P AR        */ 15750000
*  IVPLSIZE=24;                     /* INITIALIZE PARAMETER LIST        15783300
*                                      SIZE VARIABLE                 */ 15816600
*                                                                       15850000
*  IF SYSASCE=''                                                        15900000
*    THEN                                                               15950000
*      DO;                                                              16000000
*        IF SYSSPLV=''                                                  16050000
*          THEN                                                         16100000
*            ANS('?SPLEVEL  (TEST);') COL(MACLMAR);                     16150000
*        IF SYSSPLV^='1' & SYSSPLV^='2'                                 16200000
*          THEN                                                         16250000
*            ANS('?SYSSTATE (TEST);') COL(MACLMAR);                     16300000
*          ELSE                                                         16350000
*            SYSASCE='P';                    /* SYSSTATE DEFAULT*/      16400000
*      END;                                                             16450000
*  /******************************************************************/ 16500000
*  /* CHECK FOR ANY "RB" OPTIONS                                     */ 16550000
*  /******************************************************************/ 16600000
*  ZMS2=' ';                        /* INITIALIZE STRING OF SPECIFIED   16650000
*                                      "RB" OPTIONS                  */ 16700000
*  IF MACLIST^='' THEN                                                  16750000
*     DO;                                                               16800000
*          ZMS2=ZMS2 || '"'  || MACLIST(1) || '"';                      16850000
*     END;                                                              16900000
*  IF (TCB^='') THEN                                                    16950000
*    DO;                                                                17000000
*      ZMS2=ZMS2 || ' "TCB' || TCB || '"';                              17050000
*    END;                                                               17100000
*  IF (RB^='') THEN                                                     17150000
*    DO;                                                                17200000
*      ZMS2=ZMS2 || ' "RB' || RB || '"';                                17250000
*    END;                                                               17300000
*  IF (MODE^='') THEN                                                   17350000
*    DO;                                                                17400000
*      ZMS2=ZMS2 || ' "MODE' || MODE || '"';                            17450000
*    END;                                                               17500000
*  IF (ASYNC^='') THEN                                                  17550000
*    DO;                                                                17600000
*      ZMS2=ZMS2 || ' "ASYNC' || ASYNC || '"';                          17650000
*    END;                                                               17700000
*  IF (ASCB^='') THEN                                                   17750000
*    DO;                                                                17800000
*      ZMS2=ZMS2 || ' "ASCB' || ASCB || '"';                            17850000
*    END;                                                               17900000
*  IF (ZMS2^=' ') THEN                                                  17950000
*    DO;                            /* "RB" OPTIONS SPECIFIED        */ 18000000
*      IF (SPTOKEN^='') THEN                                            18050000
*        DO;                        /* "RB" OPTIONS AND "SPTOKEN" BOTH  18100000
*                                      SPECIFIED                     */ 18150000
*          ZMS=' 8, ' || ZMS2 || ' ' ||                                 18200000
*              ' AND "SPTOKEN" ' ||                                     18250000
*              ' ARE MUTUALLY EXCLUSIVE. '  ;                           18300000
*          ANS MSG('?RESUME ---> '||ZMS);                               18350000
*          ZMS =   '?RESUME ---> '||ZMS;                                18400000
*          ANS(COMMENT(ZMS)) COL(MACLMAR);                              18450000
*          ZMACRET=8;                        /* MACRO ERROR */          18500000
*        END;                                                           18550000
*      GOTO RPROC;                  /* BRANCH TO "RB" PROCEDURE      */ 18600000
*    END;                                                               18650000
*  /******************************************************************/ 18700000
*  /* CHECK FOR "SPTOKEN" OPTION                                     */ 18750000
*  /******************************************************************/ 18800000
*  IF (SPTOKEN^='') THEN                                                18850000
*    DO;                                                                18900000
*      GOTO TPROC;                  /* BRANCH TO SPTOKEN PROCEDURE   */ 18950000
*    END;                                                               19000000
*  /******************************************************************/ 19050000
*  /* CHECK FOR LIST FORM                                            */ 19100000
*  /******************************************************************/ 19150000
*  IF (MF^='') THEN                                                     19200000
*    DO;                            /* VERIFY MACRO FORM             */ 19250000
*      IF (MF(1)='L') THEN                                              19300000
*        DO;                                                            19350000
*          XMF='L';                                                     19400000
*          GOTO LPROC;                                                  19450000
*        END;                                                           19500000
*      /**************************************************************/ 19550000
*      /* "MF" SPECIFIED THAT IS NOT LIST FORM WITHOUT SPTOKEN --    */ 19600000
*      /* CHECK ERROR                                                */ 19650000
*      /**************************************************************/ 19700000
*      IF (MF(1)='E') | (MF(1)='S') THEN                                19750000
*        DO;                                                            19800000
*          ZMS=' 8, "MF' || MF || '"' ||     /**KOPTP* MSG*/            19850000
*              ' MAY ONLY BE SPECIFIED WITH ' ||                        19900000
*              ' "SPTOKEN". ';                                          19950000
*          ANS MSG('?RESUME ---> '||ZMS);                               20000000
*          ZMS =   '?RESUME ---> '||ZMS;                                20050000
*          ANS(COMMENT(ZMS)) COL(MACLMAR);                              20100000
*          ZMACRET=8;                        /* MACRO ERROR */          20150000
*          XMF='S';                                                     20200000
*          GOTO XPROC;              /* EXIT FROM MACRO               */ 20250000
*        END;                                                           20300000
*      ELSE                                                             20350000
*        DO;                                                            20400000
*          ZMS=' 8, "MF' || MF || '"' ||     /**KOPTP* MSG*/            20450000
*              ' IS INCORRECT. ' ||                                     20500000
*              ' KEYWORD CHOICE IS:' ||                                 20550000
*              ' "MF(L,CNTRL_ADDR)". ';                                 20600000
*          ANS MSG('?RESUME ---> '||ZMS);                               20650000
*          ZMS =   '?RESUME ---> '||ZMS;                                20700000
*          ANS(COMMENT(ZMS)) COL(MACLMAR);                              20750000
*          ZMACRET=8;                        /* MACRO ERROR */          20800000
*          XMF='S';                                                     20850000
*          GOTO XPROC;              /* EXIT FROM MACRO               */ 20900000
*        END;                                                           20950000
*    END;                                                               21000000
*/********************************************************************/ 21050000
*/*** OLD STYLE RB RESUME PROCEDURE                                  */ 21100000
*/********************************************************************/ 21150000
*  RPROC: ;                                                             21200000
*  IF TCB='TCB' | TCB='()'                   /*CHCK ENTRY*/             21250000
*    THEN                                                               21300000
*      DO;                                                              21350000
*        ZMS=' 8, THE "TCB" KEY'||           /**KOPTP* MSG*/            21400000
*            ' MUST CONTAIN ONE'||                                      21450000
*            ' (OR MORE) ARGUMENT(S).';                                 21500000
*        ANS MSG('?RESUME ---> '||ZMS);                                 21550000
*        ZMS =   '?RESUME ---> '||ZMS;                                  21600000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                21650000
*        ZMACRET=8;                          /* MACRO ERROR */          21700000
*      END;                                                             21750000
*  IF NUMBER(TCB)>1                          /* CHECK POSITIONALS */    21800000
*    THEN                                                               21850000
*      DO;                                                              21900000
*        ZMS=' 8, "TCB'||                    /**KPOSP* MSG*/            21950000
*            TCB||                                                      22000000
*            '" "TCB"'||                                                22050000
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              22100000
*        ANS MSG('?RESUME ---> '||ZMS);                                 22150000
*        ZMS =   '?RESUME ---> '||ZMS;                                  22200000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                22250000
*        ZMACRET=8;                          /* MACRO ERROR */          22300000
*      END;                                                             22350000
*/*PG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 22400000
*  ZXTCB='INPUT';                            /* SET IN/OUTPUT */        22450000
*  XTCB='GPR04P';                            /* SET DEFAULT */          22500000
*  IF TCB(1)^=''                             /* CHECK FOR NULL */       22550000
*    THEN                                                               22600000
*      XTCB=TCB(1);                          /* SET XVARIABLE */        22650000
*/*PG.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 22700000
*  IF RB='RB' | RB='()'                      /*CHCK ENTRY*/             22750000
*    THEN                                                               22800000
*      DO;                                                              22850000
*        ZMS=' 8, THE "RB" KEY'||            /**KOPTP* MSG*/            22900000
*            ' MUST CONTAIN ONE'||                                      22950000
*            ' (OR MORE) ARGUMENT(S).';                                 23000000
*        ANS MSG('?RESUME ---> '||ZMS);                                 23050000
*        ZMS =   '?RESUME ---> '||ZMS;                                  23100000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                23150000
*        ZMACRET=8;                          /* MACRO ERROR */          23200000
*      END;                                                             23250000
*  IF NUMBER(RB)>1                           /* CHECK POSITIONALS */    23300000
*    THEN                                                               23350000
*      DO;                                                              23400000
*        ZMS=' 8, "RB'||                     /**KPOSP* MSG*/            23450000
*            RB||                                                       23500000
*            '" "RB"'||                                                 23550000
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              23600000
*        ANS MSG('?RESUME ---> '||ZMS);                                 23650000
*        ZMS =   '?RESUME ---> '||ZMS;                                  23700000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                23750000
*        ZMACRET=8;                          /* MACRO ERROR */          23800000
*      END;                                                             23850000
*/*PG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 23900000
*  ZXRB='INPUT';                             /* SET IN/OUTPUT */        23950000
*  XRB='GPR05P';                             /* SET DEFAULT */          24000000
*  IF RB(1)^=''                              /* CHECK FOR NULL */       24050000
*    THEN                                                               24100000
*      XRB=RB(1);                            /* SET XVARIABLE */        24150000
*/*PG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 24200000
*  IF NUMBER(MACLIST)>1                      /* CHECK POSITIONALS */    24250000
*    THEN                                                               24300000
*      DO;                                                              24350000
*        ZMS=' 8, "' || MACLIST || '" IS INCORRECT.' ||                 24400000
*            ' TOO MANY POSITIONAL PARAMETERS.'      ||                 24450000
*            ' SPECIFY "(RETURN)" OR "(NORETURN)".';                    24500000
*        ANS MSG('?RESUME ---> '||ZMS);                                 24550000
*        ZMS =   '?RESUME ---> '||ZMS;                                  24600000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                24650000
*        ZMACRET=8;                          /* MACRO ERROR */          24700000
*      END;                                                             24750000
*/*PG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 24800000
*  XRETURN='';                               /* RESET XVARIABLE */      24850000
*  IF MACLIST(1) = 'RETURN'                                             24900000
*    THEN                                                               24950000
*      XRETURN = 'Y';                        /* SET XVARIABLE */        25000000
*/*PG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 25050000
*  IF MACLIST(1) = 'NORETURN'                                           25100000
*    THEN                                                               25150000
*      XRETURN = 'N';                        /* SET XVARIABLE */        25200000
*/*PG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 25250000
*  ZXRETURN='INPUT';                         /* SET IN/OUTPUT */        25300000
*  IF XRETURN=''                             /* CHECK FOR KEYWORD */    25350000
*    THEN                                                               25400000
*      DO;                                   /* KEYWORD NOT ENTERED */  25450000
*        XRETURN='Y';                        /* SET DEFAULT */          25500000
*        IF MACLIST^=''                                                 25550000
*          THEN                                                         25600000
*            DO;                                                        25650000
*              ZXRETURN='';                  /* RESET IN/OUTPUT */      25700000
*              ZMS=' 8, "' || MACLIST ||     /**KUKWP* MSG*/            25750000
*                  ' IS INCORRECT. POSITIONAL PARAMETER' ||             25800000
*                  ' MUST BE "(RETURN)" OR "(NORETURN)". ';             25850000
*              ANS MSG('?RESUME ---> '||ZMS);                           25900000
*              ZMS =   '?RESUME ---> '||ZMS;                            25950000
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          26000000
*              ZMACRET=8;                    /* MACRO ERROR */          26050000
*            END;                                                       26100000
*      END;                                                             26150000
*/*PG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 26200000
*  IF MODE='MODE'                            /* CHECK ENTRY */          26250000
*    THEN                                                               26300000
*      DO;                                                              26350000
*        ZMS=' 8, THE "MODE" KEY'||          /**KOPTP* MSG*/            26400000
*            ' MUST CONTAIN ONE'||                                      26450000
*            ' (OR MORE) ARGUMENT(S).';                                 26500000
*        ANS MSG('?RESUME ---> '||ZMS);                                 26550000
*        ZMS =   '?RESUME ---> '||ZMS;                                  26600000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                26650000
*        ZMACRET=8;                          /* MACRO ERROR */          26700000
*      END;                                                             26750000
*  IF NUMBER(MODE)>1                         /* CHECK POSITIONALS */    26800000
*    THEN                                                               26850000
*      DO;                                                              26900000
*        ZMS=' 8, "MODE'||                   /**KPOSP* MSG*/            26950000
*            MODE||                                                     27000000
*            '" "MODE"'||                                               27050000
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              27100000
*        ANS MSG('?RESUME ---> '||ZMS);                                 27150000
*        ZMS =   '?RESUME ---> '||ZMS;                                  27200000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                27250000
*        ZMACRET=8;                          /* MACRO ERROR */          27300000
*      END;                                                             27350000
*/*PG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 27400000
*  XMODE='';                                 /* RESET XVARIABLE */      27450000
*  IF MODE(1) = 'UNCOND'                                                27500000
*    THEN                                                               27550000
*      XMODE = 'UNCOND';                     /* SET XVARIABLE */        27600000
*/*PG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 27650000
*  IF MODE(1) = 'COND'                                                  27700000
*    THEN                                                               27750000
*      XMODE = 'COND';                       /* SET XVARIABLE */        27800000
*/*PG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 27850000
*  ZXMODE='INPUT';                           /* SET IN/OUTPUT */        27900000
*  IF XMODE=''                               /* CHECK FOR KEYWORD */    27950000
*    THEN                                                               28000000
*      DO;                                   /* KEYWORD NOT ENTERED */  28050000
*        XMODE='UNCOND';                     /* SET DEFAULT */          28100000
*        IF MODE(1)^=''                                                 28150000
*          THEN                                                         28200000
*            DO;                                                        28250000
*              ZXMODE='';                    /* RESET IN/OUTPUT */      28300000
*              ZMS=' 8, "MODE'||             /**KUKWP* MSG*/            28350000
*                  MODE||'"'||                                          28400000
*                  ' ARGUMENT 1 IS AN UNKNOWN KEYWORD. '||              28450000
*                  ' VALID KEYWORD CHOICE(S) ARE:'||                    28500000
*                  ' "UNCOND"'||             /* VALID KEYWORD */        28550000
*                  ' OR "COND".';            /* VALID KEYWORD */        28600000
*              ANS MSG('?RESUME ---> '||ZMS);                           28650000
*              ZMS =   '?RESUME ---> '||ZMS;                            28700000
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          28750000
*              ZMACRET=8;                    /* MACRO ERROR */          28800000
*            END;                                                       28850000
*      END;                                                             28900000
*/*PG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 28950000
*  IF ASYNC='ASYNC'                          /* CHECK ENTRY */          29000000
*    THEN                                                               29050000
*      DO;                                                              29100000
*        ZMS=' 8, THE "ASYNC" KEY'||         /**KOPTP* MSG*/            29150000
*            ' MUST CONTAIN ONE'||                                      29200000
*            ' (OR MORE) ARGUMENT(S).';                                 29250000
*        ANS MSG('?RESUME ---> '||ZMS);                                 29300000
*        ZMS =   '?RESUME ---> '||ZMS;                                  29350000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                29400000
*        ZMACRET=8;                          /* MACRO ERROR */          29450000
*      END;                                                             29500000
*  IF NUMBER(ASYNC)>1                        /* CHECK POSITIONALS */    29550000
*    THEN                                                               29600000
*      DO;                                                              29650000
*        ZMS=' 8, "ASYNC'||                  /**KPOSP* MSG*/            29700000
*            ASYNC||                                                    29750000
*            '" "ASYNC"'||                                              29800000
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              29850000
*        ANS MSG('?RESUME ---> '||ZMS);                                 29900000
*        ZMS =   '?RESUME ---> '||ZMS;                                  29950000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                30000000
*        ZMACRET=8;                          /* MACRO ERROR */          30050000
*      END;                                                             30100000
*/*PG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 30150000
*  XASYNC='';                                /* RESET XVARIABLE */      30200000
*  IF ASYNC(1) = 'Y'                                                    30250000
*    THEN                                                               30300000
*      XASYNC = 'Y';                         /* SET XVARIABLE */        30350000
*/*PG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 30400000
*  IF ASYNC(1) = 'N'                                                    30450000
*    THEN                                                               30500000
*      XASYNC = 'N';                         /* SET XVARIABLE */        30550000
*/*PG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 30600000
*  ZXASYNC='INPUT';                          /* SET IN/OUTPUT */        30650000
*  IF XASYNC=''                              /* CHECK FOR KEYWORD */    30700000
*    THEN                                                               30750000
*      DO;                                   /* KEYWORD NOT ENTERED */  30800000
*        XASYNC='N';                         /* SET DEFAULT */          30850000
*        IF ASYNC(1)^=''                                                30900000
*          THEN                                                         30950000
*            DO;                                                        31000000
*              ZXASYNC='';                   /* RESET IN/OUTPUT */      31050000
*              ZMS=' 8, "ASYNC'||            /**KUKWP* MSG*/            31100000
*                  ASYNC||'"'||                                         31150000
*                  ' ARGUMENT 1 IS AN UNKNOWN KEYWORD. '||              31200000
*                  ' VALID KEYWORD CHOICE(S) ARE:'||                    31250000
*                  ' "Y"'||                  /* VALID KEYWORD */        31300000
*                  ' OR "N".';               /* VALID KEYWORD */        31350000
*              ANS MSG('?RESUME ---> '||ZMS);                           31400000
*              ZMS =   '?RESUME ---> '||ZMS;                            31450000
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          31500000
*              ZMACRET=8;                    /* MACRO ERROR */          31550000
*            END;                                                       31600000
*      END;                                                             31650000
*/*PG.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 31700000
*  IF ASCB='ASCB' | ASCB='()'                /*CHCK ENTRY*/             31750000
*    THEN                                                               31800000
*      DO;                                                              31850000
*        ZMS=' 8, THE "ASCB" KEY'||          /**KOPTP* MSG*/            31900000
*            ' MUST CONTAIN ONE'||                                      31950000
*            ' (OR MORE) ARGUMENT(S).';                                 32000000
*        ANS MSG('?RESUME ---> '||ZMS);                                 32050000
*        ZMS =   '?RESUME ---> '||ZMS;                                  32100000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                32150000
*        ZMACRET=8;                          /* MACRO ERROR */          32200000
*      END;                                                             32250000
*  IF NUMBER(ASCB)>1                         /* CHECK POSITIONALS */    32300000
*    THEN                                                               32350000
*      DO;                                                              32400000
*        ZMS=' 8, "ASCB'||                   /**KPOSP* MSG*/            32450000
*            ASCB||                                                     32500000
*            '" "ASCB"'||                                               32550000
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              32600000
*        ANS MSG('?RESUME ---> '||ZMS);                                 32650000
*        ZMS =   '?RESUME ---> '||ZMS;                                  32700000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                32750000
*        ZMACRET=8;                          /* MACRO ERROR */          32800000
*      END;                                                             32850000
*/*PG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 32900000
*  ZXASCB='INPUT';                           /* SET IN/OUTPUT */        32950000
*  XASCB='PSAAOLD';                          /* SET DEFAULT */          33000000
*  IF ASCB(1)^=''                            /* CHECK FOR NULL */       33050000
*    THEN                                                               33100000
*      XASCB=ASCB(1);                        /* SET XVARIABLE */        33150000
*/********************************************************************/ 33200000
*/* CHECK FOR "SPTOKEN" OPTIONS ILLEGALLY SPECIFIED WITH "RB"        */ 33250000
*/********************************************************************/ 33300000
*  ZMS='';                          /* CLEAR MNOTE STRING VARIABLE   */ 33350000
*  ZMA=0;                           /* CLEAR COUNT OF BAD KEYS       */ 33400000
*  IF PURGE^='' THEN                                                    33450000
*    DO;                            /* ILLEGAL "PURGE" SPECIFICATION */ 33500000
*      ZMS='"PURGE"';                                                   33550000
*      ZMA=1;                                                           33600000
*    END;                                                               33650000
*  IF RSCODE^='' THEN                                                   33700000
*    DO;                            /* ILLEGAL "RSCODE" SPECIFICATION   33750000
*                                                                    */ 33800000
*      IF ZMA=0 THEN                                                    33850000
*        DO;                        /* FIRST BAD KEY DETECTED        */ 33900000
*          ZMS='"RSCODE"';                                              33950000
*          ZMA=1;                   /* INITIALIZE ERROR COUNT        */ 34000000
*        END;                                                           34050000
*      ELSE                                                             34100000
*        DO;                        /* MULTIPLE BAD KEYS DETECTED    */ 34150000
*          ZMS = ZMS || ', "RSCODE"';                                   34200000
*          ZMA=ZMA+1;               /* BUMP COUNT OF ERRORS          */ 34250000
*        END;                                                           34300000
*    END;                                                               34350000
*  IF MF^='' THEN                                                       34400000
*    DO;                            /* ILLEGAL "MF" SPECIFICATION       34450000
*                                                                    */ 34500000
*      IF ZMA=0 THEN                                                    34550000
*        DO;                        /* FIRST BAD KEY DETECTED        */ 34600000
*          ZMS='"MF"';                                                  34650000
*          ZMA=1;                   /* INITIALIZE ERROR COUNT        */ 34700000
*        END;                                                           34750000
*      ELSE                                                             34800000
*        DO;                        /* MULTIPLE BAD KEYS DETECTED    */ 34850000
*          ZMS = ZMS || ', "MF"';                                       34900000
*          ZMA=ZMA+1;               /* BUMP COUNT OF ERRORS          */ 34950000
*        END;                                                           35000000
*    END;                                                               35050000
*  IF ZMA>0 THEN                                                        35100000
*    DO;                            /* BAD KEY(S) DETECTED           */ 35150000
*      IF ZMA=1 THEN                                                    35200000
*        DO;                        /* SINGLE BAD KEY                */ 35250000
*              ZMS=' 8, ' || ZMS ||                                     35300000
*                  ' KEYWORD IS NOT VALID WITH ' || ZMS2;               35350000
*              ANS MSG('?RESUME ---> '||ZMS);                           35400000
*              ZMS =   '?RESUME ---> '||ZMS ;                           35450000
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          35500000
*              ZMACRET=8;                    /* MACRO ERROR */          35550000
*        END;                                                           35600000
*      ELSE                                                             35650000
*        DO;                                                            35700000
*              ZMS=' 8, ' || ZMS ||                                     35750000
*                  ' KEYWORDS ARE NOT VALID WITH ' || ZMS2;             35800000
*              ANS MSG('?RESUME ---> '||ZMS);                           35850000
*              ZMS =   '?RESUME ---> '||ZMS ;                           35900000
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          35950000
*              ZMACRET=8;                    /* MACRO ERROR */          36000000
*        END;                                                           36050000
*    END;                                                               36100000
*/* PROCESS "REGS" KEYWORD                                           */ 36125000
*/********************************************************************/ 36150000
*  IF REGS ^= '' THEN                        /*                      */ 36152600
*  DO;                                                                  36155200
*    /* We avoid using TRANSLATE so that PLS users of RESUME can        36157800
*       continue to work. They cannot specify REGS.                  */ 36160400
*    DCL ASAXMACUCSTRING CHAR EXT;                                      36163000
*    ANS('?ASAXMAC UpperCase('||REGS(1)||');') RESCAN;                  36165600
*    IF ASAXMACUCSTRING ^= 'STDSAVE' THEN                               36168200
*    DO;                                     /*                      */ 36170800
*              ZMS=' 8, ' ||                                            36173400
*                  ' REGS OPERAND MUST BE "STDSAVE"';                   36176000
*              ANS MSG('?RESUME ---> '||ZMS);                           36178600
*              ZMS =   '?RESUME ---> '||ZMS ;                           36181200
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          36183800
*              ZMACRET=8;                    /* MACRO ERROR */          36186400
*    END;                                    /*                      */ 36189000
*    ELSE                                    /*                      */ 36191600
*      ZXREGS = 'STDSAVE';                   /*                      */ 36194200
*  END;                                                                 36195500
*/********************************************************************/ 36196800
*/* PROCESS "RELATED" KEYWORD                                        */ 36200000
*/********************************************************************/ 36250000
*  ZXRELATED='INPUT';                        /* SET IN/OUTPUT */        36300000
*  IF RELATED(1)^=''                         /* CHECK FOR NULL */       36350000
*    THEN                                                               36400000
*      XRELATED=RELATED(1);                  /* SET XVARIABLE */        36450000
*  IF ZXRELATED^='' &                        /* NOT IN/OUTPUT */        36500000
*     XRELATED^='NULL' &                     /* NOT STAR DEFAULT */     36550000
*     LENGTH(XRELATED)>256                                              36600000
*    THEN                                                               36650000
*      DO;                                                              36700000
*        ZXRELATED='';                       /* RESET IN/OUTPUT */      36750000
*        ZMS=' 8, "RELATED'||                /**KLNGP* MSG*/            36800000
*            RELATED||                                                  36850000
*            '" ARGUMENT 1 EXCEEDS THE MAXIMUM'||                       36900000
*            ' LENGTH OF 256 CHARACTERS. ';                             36950000
*        ANS MSG('?RESUME ---> '||ZMS);                                 37000000
*        ZMS =   '?RESUME ---> '||ZMS;                                  37050000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                37100000
*        ZMACRET=8;                          /* MACRO ERROR */          37150000
*      END;                                                             37200000
*/********************************************************************/ 37250000
*/* CHECK FOR MUTUALLY EXCLUSIVE "RB" KEYS OR MISSING DEPENDENCIES   */ 37300000
*/********************************************************************/ 37350000
*IF (XRETURN='N') THEN                                                  37400000
*  DO;                                                                  37450000
*    /****************************************************************/ 37500000
*    /* "RETURN(N)" MAY ONLY BE SPECIFIED IF "MODE(UNCOND)" AND      */ 37550000
*    /* "ASYNC(N)" AND "ASCB" OPTION WAS NOT SPECIFIED               */ 37600000
*    /****************************************************************/ 37650000
*    ZMS2='';                       /* INITIALIZE WORKAREA           */ 37700000
*    IF (XMODE='COND') THEN                                             37750000
*      DO;                                                              37800000
*        ZMS2=ZMS2 || ' "MODE' || MODE || '"';                          37850000
*      END;                                                             37900000
*    IF (XASYNC='COND') THEN                                            37950000
*      DO;                                                              38000000
*        ZMS2=ZMS2 || ' "ASYNC' || ASYNC || '"';                        38050000
*      END;                                                             38100000
*    IF (ASCB^='') THEN                                                 38150000
*      DO;                                                              38200000
*        ZMS2=ZMS2 || ' "ASCB' || ASCB || '"';                          38250000
*      END;                                                             38300000
*    IF (ZMS2^='') THEN                                                 38350000
*      DO;                                                              38400000
*          ZMS=' 8, ' || ZMS2 || ' ' ||                                 38450000
*              ' AND "RETURN(N)" ' ||                                   38500000
*              ' ARE MUTUALLY EXCLUSIVE. '  ;                           38550000
*          ANS MSG('?RESUME ---> '||ZMS);                               38600000
*          ZMS =   '?RESUME ---> '||ZMS;                                38650000
*          ANS(COMMENT(ZMS)) COL(MACLMAR);                              38700000
*          ZMACRET=8;                        /* MACRO ERROR */          38750000
*      END;                                                             38800000
*  END;                             /* END "RETURN(N)" VALIDATION    */ 38850000
*IF (XASYNC='Y') THEN                                                   38900000
*  DO;                                                                  38950000
*    /****************************************************************/ 39000000
*    /* "ASYNC(Y)" MAY ONLY BE SPECIFIED IF "ASCB" IS SPECIFIED      */ 39050000
*    /****************************************************************/ 39100000
*    IF (ASCB='') THEN                                                  39150000
*      DO;                                                              39200000
*          ZMS=' 8, AN ASCB ADDRESS IS REQUIRED' ||                     39250000
*              ' WITH "ASYNC(Y)" BUT IS NOT SUPPLIED. ';                39300000
*          ANS MSG('?RESUME ---> '||ZMS);                               39350000
*          ZMS =   '?RESUME ---> '||ZMS;                                39400000
*          ANS(COMMENT(ZMS)) COL(MACLMAR);                              39450000
*          ZMACRET=8;                        /* MACRO ERROR */          39500000
*      END;                                                             39550000
*  END;                             /* END "ASYC(Y)" VALIDATION      */ 39600000
*/********************************************************************/ 39650000
*/***PE.MR01 GENERATE CODE IF ZMACRET=0                              */ 39700000
*/********************************************************************/ 39750000
*  IF ZMACRET = 0                                                       39800000
*    THEN                                                               39850000
*      DO;                                                              39900000
*      IVDOCMT  = '?RESUME '||MACLIST||' '||MACKEYS||' ' ||             39950000
*                'MACDATE(02/26/90)'; /* Set up DO - END comment @P1C*/ 40000000
*      ANS('DO; '||COMMENT(IVDOCMT))                                    40050000
*          NORESCAN COL(MACLMAR);                                       40100000
*        IF INDEX(EHAREGS,'11P') = 0 THEN          /*            @LxA*/ 40101000
*          EHAREGS=EHAREGS||'11P'; /* GPR11P                     @LxA*/ 40102000
*        IF INDEX(EHAREGS,'12P') = 0 THEN          /*            @LxA*/ 40103000
*          EHAREGS=EHAREGS||'12P'; /* GPR12P                     @LxA*/ 40104000
*        IF INDEX(EHAREGS,'13P') = 0 THEN          /*            @LxA*/ 40105000
*          EHAREGS=EHAREGS||'13P'; /* GPR13P                     @LxA*/ 40106000
*        IF INDEX(EHAREGS,'14P') = 0 THEN          /*            @LxA*/ 40107000
*          EHAREGS=EHAREGS||'14P'; /* GPR14P                     @LxA*/ 40108000
*       ENTRYN = 'IANY24';                         /*            @LxA*/ 40109000
*          IF ZXREGS = 'STDSAVE' THEN              /*            @LxA*/ 40110000
*          DO;                                     /*            @LxA*/ 40111000
*        IF INDEX(EHAREGS,'02P') = 0 THEN          /*            @LxA*/ 40112000
*          EHAREGS=EHAREGS||'02P'; /* GPR02P                     @LxA*/ 40113000
*       ENTRYN = 'RESUME_'||MACINDEX;              /*            @LxA*/ 40114000
*       ANS('DCL '||ENTRYN||' ENTRY BASED VALRG(*) '||                  40115000
*          'OPTIONS(SETS(GPR11P,GPR12P,GPR13P)                          40116000
*                 NOSAVE(GPR11P,GPR12P,GPR13P));')                      40117000
*           SKIP NORESCAN;                                    /* @LxA*/ 40118000
*       ANS('DCL R13_SAVE_'||MACINDEX||' PTR REG(*);')                  40119000
*           SKIP NORESCAN;                                    /* @LxA*/ 40120000
*       ANS('DCL 1 SaveArea_'||MACINDEX||' Char(72) Based(GPR13P)       40121000
*                 ,2 * Char(12)                                         40122000
*                 ,2 SA1412_'||MACINDEX||' Char(60)                     40123000
*                  ,3 SA14_'||MACINDEX||' Char(4)                       40124000
*                  ,3 * Char(12)                                        40125000
*                  ,3 SA212_'||MACINDEX||' Char(44)                     40126000
*            ;')                                                        40127000
*           SKIP NORESCAN;                                    /* @LxA*/ 40128000
*       ANS('RFY GPR13P RSTD;')                                         40129000
*           SKIP NORESCAN;                                    /* @LxA*/ 40130000
*       ANS('R13_SAVE_'||MACINDEX||' = GPR13P;')                        40131000
*           SKIP NORESCAN;                                    /* @LxA*/ 40132000
*    /* We must GEN the STM/LM, with pseudo FLOWS information so that   40133000
*       the compiler understands the register history and can           40134000
*       successfully assign a register for R13_Save                  */ 40135000
*       ANS('GEN FLOWS(LM_'||Macindex||') '||                           40136000
*           'REFS(GPR14P,GPR12P,GPR13P'||                               40137000
*                ',SA1412_'||MACINDEX||')')                             40138000
*           SKIP NORESCAN;                                    /* @LxA*/ 40139000
*       ANS(                                                            40140000
*'(STM   GPR14P,GPR12P,SA1412_'||MACINDEX||'(GPR13P));')                40141000
*           SKIP NORESCAN COL(11);                            /* @LxA*/ 40142000
*       ANS('RFY GPR13P UNRSTD;')                                       40143000
*           SKIP NORESCAN;                                    /* @LxA*/ 40144000
*          END;                                    /*            @LxA*/ 40145000
*                                                                       40146000
*       ANS('RFY (GPR11P,GPR12P,GPR13P) RSTD;')                         40147000
*           SKIP NORESCAN;                                    /* @LxA*/ 40148000
*      ANS('RFY GPR01P RSTD;') NORESCAN COL(MACLMAR);                   40150000
*      ANS('RFY GPR04P RSTD;') NORESCAN COL(MACLMAR);                   40200000
*      ANS('RFY GPR05P RSTD;') NORESCAN COL(MACLMAR);                   40250000
*      IF (XTCB^='GPR04P') THEN                                         40300000
*        DO;                        /* GENERATE CODE TO LOAD REGISTER   40350000
*                                      4 WITH TCB ADDRESS            */ 40400000
*          ANS('GPR04P=' || XTCB || '; ' ||                             40450000
*              COMMENT('GET TCB ADDRESS'))                              40500000
*                  NORESCAN COL(MACLMAR);                               40550000
*        END;                                                           40600000
*      IF (XRB^='GPR05P') THEN                                          40650000
*        DO;                        /* GENERATE CODE TO LOAD REGISTER   40700000
*                                      5 WITH RB ADDRESS             */ 40750000
*          ANS('GPR05P=' || XRB || '; ' ||                              40800000
*              COMMENT('GET RB ADDRESS'))                               40850000
*                  NORESCAN COL(MACLMAR);                               40900000
*        END;                                                           40950000
*      IF (ASCB^='') | (XMODE='COND') THEN                              41000000
*        DO;                        /* GENERATE CODE TO LOAD REGISTER   41050000
*                                      1 WITH ASCB ADDRESS           */ 41100000
*          ANS('GPR01P=' || XASCB || '; '   ||                          41150000
*              COMMENT('GET ASCB ADDRESS'))                             41200000
*                      NORESCAN COL(MACLMAR);                           41250000
*        END;                                                           41300000
*      /**************************************************************/ 41350000
*      /* GENERATE CALL TO SERVICE ROUTINE DEPENDING ON OPTIONS      */ 41400000
*      /**************************************************************/ 41450000
*      IF (XMODE='UNCOND') & (XASYNC='Y') & (XRETURN='Y') THEN          41500000
*        DO;                        /* RESUME UNCONDITIONAL             41550000
*                                      ASYNCHRONOUS RETURN=Y         */ 41600000
*          ANS('CALL SVTRSUA->'||ENTRYN||';' ||                         41650000
*              COMMENT('CALL RESUME UNCOND ASYNC'))                     41700000
*                  NORESCAN COL(MACLMAR);                               41750000
*        END;                                                           41800000
*      ELSE                                                             41850000
*        IF (XMODE='COND') & (XASYNC='Y') & (XRETURN='Y') THEN          41900000
*          DO;                      /* RESUME CONDITIONAL ASYNCHRONOUS  41950000
*                                      RETURN=Y                      */ 42000000
*          ANS('CALL SVTRSCA->'||ENTRYN||';' ||                         42050000
*              COMMENT('CALL RESUME COND ASYNC'))                       42100000
*                  NORESCAN COL(MACLMAR);                               42150000
*          END;                                                         42200000
*      ELSE                                                             42250000
*        IF (XMODE='UNCOND') & (XASYNC='N') & (XRETURN='N') THEN        42300000
*          DO;                      /* RESUME UNCONDITIONAL             42350000
*                                      SYNCHRONOUS RETURN=N          */ 42400000
*          ANS('RFY GPR14P RSTD;') NORESCAN COL(MACLMAR);               42450000
*          ANS('RFY GPR15P RSTD;') NORESCAN COL(MACLMAR);               42500000
*          ANS('GPR14P=0; ' ||                                          42550000
*              COMMENT('INDICATE NO RETURN '))                          42600000
*                  NORESCAN COL(MACLMAR);                               42650000
*          ANS('GPR15P=CVTRSUME; ' ||                                   42700000
*              COMMENT('GET SERVICE ROUTINE EPA '))                     42750000
*                  NORESCAN COL(MACLMAR);                               42800000
*              ANS('GEN(BR GPR15P)') COL(MACLMAR  ) SKIP;               42850000
*              ANS(' REFS(GPR15P);') COL(MACLMAR+2) SKIP;               42900000
*              ANS('  /* ENTER RESUME RETURN(N) */');                   42950000
*          ANS('RFY GPR14P UNRSTD;') NORESCAN COL(MACLMAR);             43000000
*          ANS('RFY GPR15P UNRSTD;') NORESCAN COL(MACLMAR);             43050000
*          END;                                                         43100000
*      ELSE                                                             43150000
*        IF (XMODE='COND') & (XASYNC='N') & (XRETURN='Y') THEN          43200000
*          DO;                      /* RESUME CONDITIONAL               43250000
*                                      SYNCHRONOUS RETURN=Y          */ 43300000
*          ANS('CALL SVTRSCS->'||ENTRYN||';' ||                         43350000
*              COMMENT('CALL RESUME COND SYNC '))                       43400000
*                  NORESCAN COL(MACLMAR);                               43450000
*          END;                                                         43500000
*      ELSE                                                             43550000
*        IF (XMODE='UNCOND') & (XASYNC='N') &                           43600000
*           (XRETURN='Y') & (ASCB^='') THEN                             43650000
*          DO;                      /* RESUME UNCONDITIONAL             43700000
*                                      SYNCHRONOUS RETURN=Y          */ 43750000
*          ANS('CALL SVTRSUS->'||ENTRYN||';' ||                         43800000
*              COMMENT('CALL RESUME UNCOND SYNC '))                     43850000
*                  NORESCAN COL(MACLMAR);                               43900000
*          END;                                                         43950000
*      ELSE                                                             44000000
*          DO;                      /* RESUME UNCONDITIONAL             44050000
*                                      SYNCHRONOUS RETURN=Y          */ 44100000
*          ANS('CALL CVTRSUME->'||ENTRYN||';' ||                        44150000
*              COMMENT('CALL RESUME UNCOND SYNC '))                     44200000
*                  NORESCAN COL(MACLMAR);                               44250000
*          END;                                                         44300000
*      ANS('RFY GPR01P UNRSTD;') NORESCAN COL(MACLMAR);                 44350000
*      ANS('RFY GPR04P UNRSTD;') NORESCAN COL(MACLMAR);                 44400000
*      ANS('RFY GPR05P UNRSTD;') NORESCAN COL(MACLMAR);                 44450000
*       ANS('RFY (GPR11P,GPR12P,GPR13P) UNRSTD;')                       44451800
*           SKIP NORESCAN;                                    /* @LxA*/ 44453600
*          IF ZXREGS = 'STDSAVE' THEN              /*            @LxA*/ 44455400
*          DO;                                     /*            @LxA*/ 44457200
*       ANS('RFY GPR13P RSTD;')                                         44459000
*           SKIP NORESCAN;                                    /* @LxA*/ 44460800
*       ANS('GPR13P = R13_SAVE_'||MACINDEX||';')                        44462600
*           SKIP NORESCAN;                                    /* @LxA*/ 44464400
*       ANS('GEN EXIT NOSEQFLOW '||                                     44466200
*           'REFS(GPR14P,GPR02P,GPR12P,GPR13P'||                        44468000
*                ',SA14_'||MACINDEX||                                   44469800
*                ',SA212_'||MACINDEX||');')                             44471600
*           SKIP NORESCAN;                                    /* @LxA*/ 44473400
*       ANS(                                                            44475200
*'L     GPR14P,SA14_'||MACINDEX||'(GPR13P)')                            44477000
*           SKIP NORESCAN COL(11);                            /* @LxA*/ 44478800
*       ANS(                                                            44480600
*'LM    GPR02P,GPR12P,SA212_'||MACINDEX||'(GPR13P)')                    44482400
*           SKIP NORESCAN COL(11);                            /* @LxA*/ 44484200
*       ANS('@ENDGEN;')                                                 44486000
*           SKIP NORESCAN;                                    /* @LxA*/ 44487800
*       ANS('LM_'||MACINDEX||':;')                                      44489600
*           SKIP NORESCAN;                                    /* @LxA*/ 44491400
*       ANS('RFY GPR13P UNRSTD;')                                       44493200
*           SKIP NORESCAN;                                    /* @LxA*/ 44495000
*          END;                                    /*            @LxA*/ 44496800
*      ANS('END; '||COMMENT(IVDOCMT))                                   44500000
*          NORESCAN COL(MACLMAR);                                       44550000
*      ANS(MACCONC||'SPACE;') NORESCAN COL(MACLMAR);                    44600000
*      ANS(' ') NORESCAN COL(MACLMAR);                                  44650000
*/*******************************************************************/  44700000
*/*  PO.L18 END OF CODE TO BE BYPASSED WHEN ZMACRET ^= 0            */  44750000
*/*******************************************************************/  44800000
*      END;                                                             44850000
*/*-----------------------------------------------------------------*/  44900000
*/*  MVS  -ENSURE THAT GPRS NEEDED BY AMG MACROS WILL BE PROVIDED   */  44950000
*/*        BY ?EPILOG                                               */  45000000
*/*-----------------------------------------------------------------*/  45050000
*        IF INDEX(EHAREGS,'14P')=0                                      45100000
*          & XRETURN='N'                                                45150000
*          THEN                     /* SPECIAL "NO RETURN" CASE      */ 45200000
*            EHAREGS=EHAREGS||'14P'; /* GPR14P                       */ 45250000
*        IF INDEX(EHAREGS,'01P')=0                                      45300000
*          THEN                                                         45350000
*            EHAREGS=EHAREGS||'01P'; /* GPR01P                       */ 45400000
*        IF INDEX(EHAREGS,'04P')=0                                      45450000
*          THEN                                                         45500000
*            EHAREGS=EHAREGS||'04P'; /* GPR04P                       */ 45550000
*        IF INDEX(EHAREGS,'05P')=0                                      45600000
*          THEN                                                         45650000
*            EHAREGS=EHAREGS||'05P'; /* GPR05P                       */ 45700000
*        IF INDEX(EHAREGS,'15P')=0                                      45750000
*          THEN                                                         45800000
*            EHAREGS=EHAREGS||'15P'; /* GPR05P                       */ 45850000
*  XPROC: ;                                                             45900000
*  RETURN CODE(ZMACRET);                                                45950000
*/********************************************************************/ 46000000
*/* "SPTOKEN" PROCEDURE                                              */ 46050000
*/********************************************************************/ 46100000
*  TPROC: ;                                                             46150000
*/********************************************************************/ 46200000
*/***PG.MF00  PROCESS MF MACRO FORMS                                 */ 46250000
*/********************************************************************/ 46300000
*   IF (MF='') | (MF(1)='S') THEN                                       46350000
*       DO;                                                             46400000
*         XMF='S';                                                      46450000
*       END;                                                            46500000
*   IF MF(1)='L' THEN                                                   46550000
*     DO;                                                               46600000
*              ZMS=' 8, "MF' || MF || '"' ||                            46650000
*                  ' KEYWORD IS NOT VALID WITH ' ||                     46700000
*                  '"SPTOKEN". ';                                       46750000
*              ANS MSG('?RESUME ---> '||ZMS);                           46800000
*              ZMS =   '?RESUME ---> '||ZMS ;                           46850000
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          46900000
*              XMF='S';                                                 46950000
*              ZMACRET=8;                    /* MACRO ERROR */          47000000
*              END;                                                     47050000
*   IF MF(1)='E' THEN                                                   47100000
*     DO;                                                               47150000
*       XMF='E';                                                        47200000
*       IF NUMBER(MF)<2                      /* CHECK POSITIONALS */    47250000
*          THEN                                                         47300000
*             DO;                                                       47350000
*               ZMS=' 8, "MF'||                                         47400000
*                   MF||'"'||                                           47450000
*                   ' IS INCORRECT. '||                                 47500000
*                   ' PARAMETER LIST NAME IS REQUIRED. ';               47550000
*               ANS MSG('?RESUME ---> '||ZMS);                          47600000
*               ZMS =   '?RESUME ---> '||ZMS ;                          47650000
*               ANS(COMMENT(ZMS)) COL(MACLMAR);                         47700000
*               ZMACRET=8;                   /* MACRO ERROR */          47750000
*             END;                                                      47800000
*     END;                                                              47850000
*   IF XMF='' THEN                                                      47900000
*     DO;                           /* UNRECOGNIZED MACRO FORM       */ 47950000
*         ZMS=' 8, "MF'||                                               48000000
*             MF||'"'||                                                 48050000
*             ' IS INCORRECT. '||                                       48100000
*             ' KEYWORD CHOICE IS:'    ||                               48150000
*             ' "MF=(E,CNTRL_ADDR)".  ';                                48200000
*         ANS MSG('?RESUME ---> '||ZMS);                                48250000
*         ZMS =   '?RESUME ---> '||ZMS ;                                48300000
*         ANS(COMMENT(ZMS)) COL(MACLMAR);                               48350000
*         ZMACRET=8;                          /* MACRO ERROR */         48400000
*         XMF='S';                   /* SET MACRO FORM TO DEFAULT    */ 48450000
*     END;                                                              48500000
*/*PG.KXVAR01 NAME, RQD INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 48550000
*  IF NUMBER(SPTOKEN)>1                      /* CHECK POSITIONALS */    48600000
*    THEN                                                               48650000
*      DO;                                                              48700000
*        ZMS=' 8, "SPTOKEN'||                /**KPOSP* MSG*/            48750000
*            SPTOKEN||                                                  48800000
*            '" "SPTOKEN"'||                                            48850000
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              48900000
*        ANS MSG('?RESUME ---> '||ZMS);                                 48950000
*        ZMS =   '?RESUME ---> '||ZMS ;                                 49000000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49050000
*        ZMACRET=8;                          /* MACRO ERROR */          49100000
*      END;                                                             49150000
*/*PG.KXVAR03 NAME, RQD INPUT, KEYS -XVARIABLE-----------------------*/ 49200000
*  XSPTOKEN=SPTOKEN(1);                      /* SET XVARIABLE */        49250000
*  IF SPTOKEN(1)=''                          /* CHECK FOR NULL */       49300000
*   THEN                                                                49350000
*    DO;                                     /* KEY IS REQUIRED */      49400000
*        ZXSPTOKEN='';                       /* RESET IN/OUTPUT */      49450000
*        ZMS=' 8,  '||                                                  49500000
*            ' "SPTOKEN" KEY AND ITS ARGUMENT ARE'||                    49550000
*            ' REQUIRED.';                   /**KRQDP* MSG*/            49600000
*        ANS MSG('?RESUME ---> '||ZMS);                                 49650000
*        ZMS =   '?RESUME ---> '||ZMS ;                                 49700000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                49750000
*        ZMACRET=8;                          /* MACRO ERROR */          49800000
*    END;                                                               49850000
*    ELSE                                                               49900000
*     ZXSPTOKEN='INPUT';                     /* SET IN/OUTPUT */        49950000
*/*PG.KXVAR01 NAME, RQD INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 50000000
*/********************************************************************/ 50050000
*/* CHECK OPTIONAL "PURGE" KEYWORD                                   */ 50100000
*/********************************************************************/ 50150000
*  IF PURGE='PURGE'                          /* CHECK ENTRY */          50200000
*    THEN                                                               50250000
*      DO;                                                              50300000
*        ZMS=' 8, THE "PURGE" KEY'||         /**KOPTP* MSG*/            50350000
*            ' MUST CONTAIN ONE'||                                      50400000
*            ' ARGUMENT(S).';                                           50450000
*        ANS MSG('?RESUME ---> '||ZMS);                                 50500000
*        ZMS =   '?RESUME ---> '||ZMS;                                  50550000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                50600000
*        ZMACRET=8;                          /* MACRO ERROR */          50650000
*      END;                                                             50700000
*  IF NUMBER(PURGE)>1                        /* CHECK POSITIONALS */    50750000
*    THEN                                                               50800000
*      DO;                                                              50850000
*        ZMS=' 8, "PURGE'||                  /**KPOSP* MSG*/            50900000
*            PURGE||                                                    50950000
*            '" "PURGE"'||                                              51000000
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              51050000
*        ANS MSG('?RESUME ---> '||ZMS);                                 51100000
*        ZMS =   '?RESUME ---> '||ZMS;                                  51150000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                51200000
*        ZMACRET=8;                          /* MACRO ERROR */          51250000
*      END;                                                             51300000
*/*PG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 51350000
*  XPURGE='';                                 /* RESET XVARIABLE */     51400000
*  IF PURGE(1) = 'YES' THEN                                             51450000
*    DO;                            /* USER SPECIFIED PURGE(YES)     */ 51500000
*      XPURGE = 'YES';              /* SET XVARIABLE                 */ 51550000
*      SFTSLOT= '66';               /* INITIALIZE SFT SLOT INDEX TO     51600000
*                                      ENTER PURGE ROUTINE           */ 51650000
*      PCS='PC TO PURGE WITH TOKEN ROUTINE'; /* INITIALIZE COMMENT FOR  51700000
*                                      PURGE ROUTINE                 */ 51750000
*    END;                                                               51800000
*  IF PURGE(1) = 'NO' THEN                                              51850000
*    DO;                            /* USER SPECIFIED PURGE(NO)      */ 51900000
*      XPURGE = 'NO';               /* SET XVARIABLE                 */ 51950000
*      SFTSLOT= '65';               /* INITIALIZE SFT SLOT INDEX TO     52000000
*                                      ENTER RESUME ROUTINE          */ 52050000
*      PCS='PC TO RESUME WITH TOKEN ROUTINE'; /* INITIALIZE COMMENT     52100000
*                                      FOR RESUME ROUTINE            */ 52150000
*    END;                                                               52200000
*/*PG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 52250000
*  ZXPURGE='INPUT';                           /* SET IN/OUTPUT */       52300000
*  IF XPURGE=''                               /* CHECK FOR KEYWORD */   52350000
*    THEN                                                               52400000
*      DO;                                   /* KEYWORD NOT ENTERED */  52450000
*        XPURGE='NO';                         /* SET DEFAULT */         52500000
*        SFTSLOT= '65';             /* INITIALIZE SFT SLOT INDEX TO     52550000
*                                      ENTER RESUME ROUTINE          */ 52600000
*        PCS='PC TO RESUME WITH TOKEN ROUTINE';  /* INITIALIZE COMMENT  52650000
*                                      FOR RESUME ROUTINE            */ 52700000
*        IF PURGE(1)^=''                                                52750000
*          THEN                                                         52800000
*            DO;                                                        52850000
*              ZXPURGE='';                    /* RESET IN/OUTPUT */     52900000
*              ZMS=' 8, "PURGE'||             /**KUKWP* MSG*/           52950000
*                  PURGE||'"'||                                         53000000
*                  ' ARGUMENT 1 IS AN UNKNOWN KEYWORD. '||              53050000
*                  ' VALID KEYWORD CHOICE(S) ARE:'||                    53100000
*                  ' "YES"'||                /* VALID KEYWORD */        53150000
*                  ' OR "NO".';              /* VALID KEYWORD */        53200000
*              ANS MSG('?RESUME ---> '||ZMS);                           53250000
*              ZMS =   '?RESUME ---> '||ZMS;                            53300000
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          53350000
*              ZMACRET=8;                    /* MACRO ERROR */          53400000
*            END;                                                       53450000
*      END;                                                             53500000
*/*PG.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 53550000
*  IF RSCODE='RSCODE' | RSCODE='()'          /*CHCK ENTRY*/             53600000
*    THEN                                                               53650000
*      DO;                                                              53700000
*        ZMS=' 8, THE "RSCODE" KEY'||        /**KOPTP* MSG*/            53750000
*            ' MUST CONTAIN ONE'||                                      53800000
*            ' (OR MORE) ARGUMENT(S).';                                 53850000
*        ANS MSG('?RESUME ---> '||ZMS);                                 53900000
*        ZMS =   '?RESUME ---> '||ZMS ;                                 53950000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                54000000
*        ZMACRET=8;                          /* MACRO ERROR */          54050000
*      END;                                                             54100000
*  IF NUMBER(RSCODE)>1                       /* CHECK POSITIONALS */    54150000
*    THEN                                                               54200000
*      DO;                                                              54250000
*        ZMS=' 8, "RSCODE'||                 /**KPOSP* MSG*/            54300000
*            RSCODE||                                                   54350000
*            '" "RSCODE"'||                                             54400000
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              54450000
*        ANS MSG('?RESUME ---> '||ZMS);                                 54500000
*        ZMS =   '?RESUME ---> '||ZMS ;                                 54550000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                54600000
*        ZMACRET=8;                          /* MACRO ERROR */          54650000
*      END;                                                             54700000
*  XRSCODE='0';                              /* SET DEFAULT */          54750000
*  IF RSCODE(1)^=''                          /* CHECK FOR PARMS */      54800000
*    THEN                                                               54850000
*      XRSCODE=RSCODE(1);                    /* SET XVARIABLE */        54900000
*/********************************************************************/ 54950000
*/* PROCESS "RELATED" KEYWORD                                        */ 55000000
*/********************************************************************/ 55050000
*  ZXRELATED='INPUT';                        /* SET IN/OUTPUT */        55100000
*  IF RELATED   ^=''                         /* CHECK FOR NULL */       55150000
*    THEN                                                               55200000
*      XRELATED=RELATED   ;                  /* SET XVARIABLE */        55250000
*  IF ZXRELATED^='' &                        /* NOT IN/OUTPUT */        55300000
*     XRELATED^='NULL' &                     /* NOT STAR DEFAULT */     55350000
*     LENGTH(XRELATED)>256                                              55400000
*    THEN                                                               55450000
*      DO;                                                              55500000
*        ZXRELATED='';                       /* RESET IN/OUTPUT */      55550000
*        ZMS=' 8, "RELATED'||                /**KLNGP* MSG*/            55600000
*            RELATED||                                                  55650000
*            '" ARGUMENT 1 EXCEEDS THE MAXIMUM'||                       55700000
*            ' LENGTH OF 256 CHARACTERS. ';                             55750000
*        ANS MSG('?RESUME ---> '||ZMS);                                 55800000
*        ZMS =   '?RESUME ---> '||ZMS ;                                 55850000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                55900000
*        ZMACRET=8;                          /* MACRO ERROR */          55950000
*      END;                                                             56000000
*/********************************************************************/ 56050000
*/* CHECK FOR MUTUALLY EXCLUSIVE "SPTOKEN" OPTIONS                   */ 56100000
*/********************************************************************/ 56150000
*IF (XPURGE='YES') & (RSCODE^='') THEN                                  56200000
*  DO;                              /* "RSCODE" IS ONLY VALID IF        56250000
*                                      "PURGE(NO)" IS SPECIFIED      */ 56300000
*          ZMS=' 8, "PURGE(YES)" AND'         ||                        56350000
*              ' "RSCODE'  || RSCODE || '"' ||                          56400000
*              ' ARE MUTUALLY EXCLUSIVE. '  ;                           56450000
*          ANS MSG('?RESUME ---> '||ZMS);                               56500000
*          ZMS =   '?RESUME ---> '||ZMS;                                56550000
*          ANS(COMMENT(ZMS)) COL(MACLMAR);                              56600000
*          ZMACRET=8;                        /* MACRO ERROR */          56650000
*  END;                             /* END SPECIAL "RSCODE" ERROR       56700000
*                                      PROCESSING                    */ 56750000
*/********************************************************************/ 56800000
*/***PE.MR01 GENERATE CODE IF ZMACRET=0                              */ 56850000
*/********************************************************************/ 56900000
*  IF ZMACRET = 0                                                       56950000
*    THEN                                                               57000000
*      DO;                                                              57050000
*/********************************************************************/ 57100000
*/* GET NAME OF PARAMETER LIST                                       */ 57150000
*/********************************************************************/ 57200000
*  IF XMF='E' THEN                                                      57250000
*    DO;                            /* EXECUTE FORM                  */ 57300000
*      XLIST=MF(2);                 /* ASSIGN NAME FOR LIST          */ 57350000
*    END;                                                               57400000
*  ELSE                                                                 57450000
*    DO;                            /* STANDARD FORM                 */ 57500000
*      XLIST='ILIST';               /* ASSIGN NAME FROM EPILOG       */ 57550000
*    END;                                                               57600000
*/********************************************************************/ 57650000
*/* GET MAP FOR PARAMETER LIST                                       */ 57700000
*/********************************************************************/ 57750000
*  IF (SYSASCE='AR') | (SYSASCE='ANY') THEN                             57800000
*    DO;                            /* AR ASC MODE PROGRAM           */ 57850000
*      XMAP='SRP$LIST';             /* USE ALET-QUALIFIED MAPPING       57883300
*                                                                @P1C*/ 57916600
*    END;                                                               57950000
*  ELSE                                                                 58000000
*    DO;                            /* PRIMARY ASC MODE PROGRAM      */ 58050000
*      XMAP='SRP$PRIM';             /* USE PRIMARY MAPPING       @P1C*/ 58100000
*    END;                                                               58150000
*      /**************************************************************/ 58200000
*      /* ENSURE A STANDARD LIST LARGE ENOUGH FOR THE SUSPEND        */ 58250000
*      /* WITH TOKEN PARAMETER LIST GENERATED BY EPILOG              */ 58300000
*      /**************************************************************/ 58350000
*      IF EHAMAXLEN<IVPLSIZE THEN   /* IF THE SUSPEND WITH TOKEN        58400000
*                                      PARAMETER LIST IS LARGER THAN    58450000
*                                      THE CURRENT MAXIMUM           */ 58500000
*        EHAMAXLEN=IVPLSIZE;        /* INCREASE THE MAXIMUM PARAMETER   58550000
*                                      LIST SIZE FOR EPILOG          */ 58600000
*  /******************************************************************/ 58650000
*  /* NOW, GENERATE CODE                                             */ 58700000
*  /******************************************************************/ 58750000
*      IVDOCMT  = '?RESUME '||MACLIST||' '||MACKEYS||' ' ||             58800000
*               'MACDATE(02/26/90)'; /* Set up DO - END comment  @P1C*/ 58850000
*      ANS('DO; '||COMMENT(IVDOCMT))                                    58900000
*          NORESCAN COL(MACLMAR);                                       58950000
*          ANS('RFY GPR01P RSTD;') NORESCAN COL(MACLMAR);               59000000
*          ANS('RFY GPR14F RSTD;') NORESCAN COL(MACLMAR);               59050000
*          ANS('RFY GPR15F RSTD;') NORESCAN COL(MACLMAR);               59100000
*          ANS(MACCONC||'SPACE;') NORESCAN COL(MACLMAR);                59150000
*          ANS('SRP$VIA=ALET('|| XLIST || '); ' ||                      59200000
*             COMMENT('GET ALET FOR PARAMETER LIST'))                   59250000
*                NORESCAN COL(MACLMAR); /*                       @P1C*/ 59300000
*          ANS('SRP$PTR=ADDR('|| XLIST || '); ' ||                      59350000
*             COMMENT('GET ADDRESS OF PARAMETER LIST'))                 59400000
*                NORESCAN COL(MACLMAR); /*                       @P1C*/ 59450000
*          ANS(XMAP || '=' || XMAP || '&&' || XMAP || '; ' ||           59500000
*             COMMENT('CLEAR THE PARAMETER LIST'))                      59550000
*                NORESCAN COL(MACLMAR);                                 59600000
*          ANS(XMAP || '.SRP$LEVEL=1; '||                               59650000
*             COMMENT('SET PARAMETER LIST LEVEL INDICATOR'))            59700000
*                NORESCAN COL(MACLMAR); /*                       @P1C*/ 59750000
*          ANS(XMAP || '.SRP$ALET=ALET('|| XSPTOKEN || '); '||          59800000
*             COMMENT('GET ALET FOR TOKEN'))                            59850000
*                NORESCAN COL(MACLMAR); /*                       @P1C*/ 59900000
*          ANS(XMAP || '.SRP$TOKEN=ADDR('|| XSPTOKEN || '); '||         59950000
*             COMMENT('GET ADDRESS OF TOKEN'))                          60000000
*                NORESCAN COL(MACLMAR); /*                       @P1C*/ 60050000
*          ANS(XMAP || '.SRP$RCODE='|| XRSCODE || '; ' ||               60100000
*             COMMENT('COPY RESUME CODE'))                              60150000
*                NORESCAN COL(MACLMAR); /*                       @P1C*/ 60200000
*  /******************************************************************/ 60250000
*  /* GENERATE PC LINKAGE TEXT FOR RESUME WITH TOKEN                 */ 60300000
*  /******************************************************************/ 60350000
*          ANS('GPR14F=XM@('||SFTSLOT||'); ' ||                         60400000
*             COMMENT('GET LX/EX FROM SFT'))                            60450000
*                NORESCAN COL(MACLMAR);                                 60500000
*          ANS('GPR01P=SRP$PTR; ' ||                                    60550000
*             COMMENT('GET PARAMETER LIST ADDRESS'))                    60600000
*                NORESCAN COL(MACLMAR); /*                       @P1C*/ 60650000
*          ANS('SAR(GPR01P,SRP$VIA); ' ||                               60700000
*             COMMENT('LOAD AR1 WITH PARAMETER LIST ALET'))             60750000
*                NORESCAN COL(MACLMAR); /*                       @P1C*/ 60800000
*          ANS('PC(GPR14F); ' ||                                        60850000
*             COMMENT(PCS))                                             60900000
*                NORESCAN COL(MACLMAR);                                 60950000
*  ANS(MACCONC||'SPACE;') NORESCAN COL(MACLMAR);                        61000000
*                  ANS('RFY GPR01P UNRSTD;') NORESCAN COL(MACLMAR);     61050000
*                  ANS('RFY GPR14F UNRSTD;') NORESCAN COL(MACLMAR);     61100000
*                  ANS('RFY GPR15F UNRSTD;') NORESCAN COL(MACLMAR);     61150000
*      ANS('END; '||COMMENT(IVDOCMT))                                   61200000
*          NORESCAN COL(MACLMAR);                                       61250000
*  ANS(MACCONC||'SPACE;') NORESCAN COL(MACLMAR);                        61300000
*  ANS(' ') NORESCAN COL(MACLMAR);                                      61350000
*/*-----------------------------------------------------------------*/  61400000
*/*  MVS  -ENSURE THAT GPRS NEEDED BY MACRO WILL BE PROVIDED BY     */  61450000
*/*        ?EPILOG                                                  */  61500000
*/*-----------------------------------------------------------------*/  61550000
*        IF INDEX(EHAREGS,'01P')=0                                      61600000
*          THEN                                                         61650000
*            EHAREGS=EHAREGS||'01P'; /* GPR01F                      */  61700000
*        IF INDEX(EHAREGS,'14F')=0                                      61750000
*          THEN                                                         61800000
*            EHAREGS=EHAREGS||'14F'; /* GPR15P                      */  61850000
*        IF INDEX(EHAREGS,'15F')=0                                      61900000
*          THEN                                                         61950000
*            EHAREGS=EHAREGS||'15F'; /* GPR15P                      */  62000000
*/*-----------------------------------------------------------------*/  62050000
*/*  MAKE SURE THE CROSS-MEMORY SERVICES DECLARES ARE SETUP BY      */  62100000
*/*        ?EPILOG                                                  */  62150000
*/*-----------------------------------------------------------------*/  62200000
*        IF INDEX(EHAMAPS,'XM@')=0                                      62250000
*          THEN                                                         62300000
*            EHAMAPS=EHAMAPS||'XM@,'; /* DEFINE XM SERVICES         */  62350000
* /*******************************************************************/ 62400000
* /* MAKE SURE THE PARAMETER LIST MAP IS GENERATED BY EPILOG         */ 62450000
* /*******************************************************************/ 62500000
* IF (ZSUSPEND^='YES') THEN                                             62550000
*  DO;                               /* SETUP BASE MAPPING IN EPILOG */ 62600000
*  ZSUSPEND='YES';                   /* INDICATE MAPPING DECLARED    */ 62650000
*  IVSTRING='DCL 1 SRP$LIST BASED(SRP$PTR) VIA(SRP$VIA) BDY(WORD),'||   62700000
*        ' /* SUSPEND WITH TOKEN PARAMETER LIST MAPPING  @P1C*/ '  ||   62750000
*               '3 SRP$LEVEL  FIXED(8),'                           ||   62800000
*                  '/* PARAMETER LEVEL INDICATOR   @P1C*/ '        ||   62850000
*               '3 *          CHAR( 3),'                           ||   62900000
*                  '/* RESERVED                  */ '              ||   62950000
*               '3 SRP$EXIT  PTR(31),'                             ||   62984600
*                  '/* THE ADDRESS OF THE SUSPEND EXIT   @P1C*/ '  ||   63019200
*               '4 SRP$RCODE FIXED(31),'                           ||   63053800
*                  '/* THE RESUME CODE   @P1C*/ '                  ||   63088400
*               '3 SRP$ALET   FIXED(32),'                          ||   63123000
*                  '/* THE ALET OF THE SUSPEND TOKEN   @P1C*/ '    ||   63157600
*               '3 SRP$TOKEN  PTR(31),'                            ||   63192200
*                  '/* THE ADDRESS OF THE SUSPEND TOKEN   @P1C*/ ' ||   63226800
*               '3 SRP$EAL    FIXED(32),'                          ||   63261400
*                  '/* THE ALET OF EXIT PARAMETER      @P1C*/ '    ||   63296000
*               '3 SRP$EAD    PTR(31);'                            ||   63330600
*            '/* THE ADDRESS OF THE EXIT PARAMETER  @P1C*/ '; /* @D1C*/ 63365200
*  IVSTRING=IVSTRING||                                                  63400000
*       'DCL SRP$VIA FIXED(32); '  ||                                   63450000
*           '/* ALET VARIABLE FOR PARAMETER LIST   @P1C*/ ';            63500000
*  IVSTRING=IVSTRING||                                                  63550000
*       'DCL SRP$PTR PTR(31);   '  ||                                   63600000
*           '/* POINTER TO THE PARAMETER LIST    @P1C*/ ';              63650000
*  IVSTRING=IVSTRING||                                                  63700000
*       'DCL 1 SRP$PRIM BASED(SRP$PTR) BDY(WORD) LIKE SRP$LIST; ' ||    63750000
*       '/* PARAMETER LIST MAP FOR PRIMARY MODE INVOCATIONS   @P1C*/';  63800000
*   ANS (' ?EPILOG STRING('''||IVSTRING||''');'); /* ADD BASED MAPPING  63850000
*                                      TO EPILOG STRING CONSTANTS    */ 63900000
*  END;                              /* END BASE MAPPING SETUP       */ 63950000
*/*******************************************************************/  64000000
*/*  PO.L18 END OF CODE TO BE BYPASSED WHEN ZMACRET ^= 0            */  64050000
*/*******************************************************************/  64100000
*      END;                                                             64150000
*  RETURN CODE(ZMACRET);                                                64200000
*/********************************************************************/ 64250000
*/* "MF(L)" PROCEDURE                                                */ 64300000
*/********************************************************************/ 64350000
*  LPROC: ;                                                             64400000
*/********************************************************************/ 64450000
*/* CHECK FOR "SPTOKEN" OPTIONS SPECIFIED WITH MF(L) (ANY "RB" STUFF */ 64500000
*/* SHOULD HAVE BEEN DETECTED AT THE TOP OF THE MACRO)               */ 64550000
*/********************************************************************/ 64600000
*  ZMS='';                          /* CLEAR MNOTE STRING VARIABLE   */ 64650000
*  ZMA=0;                           /* CLEAR COUNT OF BAD KEYS       */ 64700000
*  IF PURGE^='' THEN                                                    64750000
*    DO;                            /* ILLEGAL "PURGE" SPECIFICATION */ 64800000
*      ZMS='"PURGE"';                                                   64850000
*      ZMA=1;                                                           64900000
*    END;                                                               64950000
*  IF RSCODE^='' THEN                                                   65000000
*    DO;                            /* ILLEGAL "RSCODE" SPECIFICATION   65050000
*                                                                    */ 65100000
*      IF ZMA=0 THEN                                                    65150000
*        DO;                        /* FIRST BAD KEY DETECTED        */ 65200000
*          ZMS='"RSCODE"';                                              65250000
*          ZMA=1;                   /* INITIALIZE ERROR COUNT        */ 65300000
*        END;                                                           65350000
*      ELSE                                                             65400000
*        DO;                        /* MULTIPLE BAD KEYS DETECTED    */ 65450000
*          ZMS = ZMS || ', "RSCODE"';                                   65500000
*          ZMA=ZMA+1;               /* BUMP COUNT OF ERRORS          */ 65550000
*        END;                                                           65600000
*    END;                                                               65650000
*  IF ZMA>0 THEN                                                        65700000
*    DO;                            /* BAD KEY(S) DETECTED           */ 65750000
*      IF ZMA=1 THEN                                                    65800000
*        DO;                        /* SINGLE BAD KEY                */ 65850000
*              ZMS=' 8, ' || ZMS ||                                     65900000
*                  ' KEYWORD IS NOT VALID WITH ' ||                     65950000
*                  '"MF' || MF || '. ';                                 66000000
*              ANS MSG('?RESUME ---> '||ZMS);                           66050000
*              ZMS =   '?RESUME ---> '||ZMS ;                           66100000
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          66150000
*              ZMACRET=8;                    /* MACRO ERROR */          66200000
*        END;                                                           66250000
*      ELSE                                                             66300000
*        DO;                                                            66350000
*              ZMS=' 8, ' || ZMS ||                                     66400000
*                  ' KEYWORDS ARE NOT VALID WITH ' ||                   66450000
*                  '"MF' || MF || '. ';                                 66500000
*              ANS MSG('?RESUME ---> '||ZMS);                           66550000
*              ZMS =   '?RESUME ---> '||ZMS ;                           66600000
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          66650000
*              ZMACRET=8;                    /* MACRO ERROR */          66700000
*        END;                                                           66750000
*    END;                                                               66800000
*/********************************************************************/ 66850000
*/* CHECK FOR PARAMETER LIST NAME                                    */ 66900000
*/********************************************************************/ 66950000
*    IF NUMBER(MF)<2                         /* CHECK POSITIONALS */    67000000
*        THEN                                                           67050000
*          DO;                                                          67100000
*            ZMS=' 8, "MF'||                                            67150000
*                MF||'"'||                                              67200000
*                ' IS INCORRECT. '||                                    67250000
*                ' PARAMETER LIST NAME IS REQUIRED. ';                  67300000
*            ANS MSG('?RESUME ---> '||ZMS);                             67350000
*            ZMS =   '?RESUME ---> '||ZMS ;                             67400000
*            ANS(COMMENT(ZMS)) COL(MACLMAR);                            67450000
*            ZMACRET=8;                      /* MACRO ERROR */          67500000
*      END;                                                             67550000
*    ELSE                                                               67600000
*      DO;                          /* SAVE LIST NAME                */ 67650000
*        XLIST = MF(2);                                                 67700000
*      END;                                                             67750000
*/********************************************************************/ 67800000
*/* PROCESS "RELATED" KEYWORD                                        */ 67850000
*/********************************************************************/ 67900000
*  ZXRELATED='INPUT';                        /* SET IN/OUTPUT */        67950000
*  IF RELATED   ^=''                         /* CHECK FOR NULL */       68000000
*    THEN                                                               68050000
*      XRELATED=RELATED   ;                  /* SET XVARIABLE */        68100000
*  IF ZXRELATED^='' &                        /* NOT IN/OUTPUT */        68150000
*     XRELATED^='NULL' &                     /* NOT STAR DEFAULT */     68200000
*     LENGTH(XRELATED)>256                                              68250000
*    THEN                                                               68300000
*      DO;                                                              68350000
*        ZXRELATED='';                       /* RESET IN/OUTPUT */      68400000
*        ZMS=' 8, "RELATED'||                /**KLNGP* MSG*/            68450000
*            RELATED||                                                  68500000
*            '" ARGUMENT 1 EXCEEDS THE MAXIMUM'||                       68550000
*            ' LENGTH OF 256 CHARACTERS. ';                             68600000
*        ANS MSG('?RESUME ---> '||ZMS);                                 68650000
*        ZMS =   '?RESUME ---> '||ZMS ;                                 68700000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                68750000
*        ZMACRET=8;                          /* MACRO ERROR */          68800000
*      END;                                                             68850000
*/********************************************************************/ 68900000
*/*      GENERATE PARAMETER LIST IF NO ERRORS                        */ 68950000
*/********************************************************************/ 69000000
* IF (ZMACRET=0) THEN               /* Generate parameter list       */ 69050000
*  DO;                                                                  69100000
*     ANS('DCL 1 '|| XLIST ||' BDY(WORD) '                      ||      69150000
*         'CHAR(LENGTH(SRP$LIST)) LIKE(SRP$LIST); '             ||      69200000
*            COMMENT(' RESUME WITH TOKEN PARAMETER LIST'))              69250000
*            NORESCAN COL(MACLMAR+5); /*                         @P2C*/ 69300000
* /*******************************************************************/ 69350000
* /* MAKE SURE THE PARAMETER LIST MAP IS GENERATED BY EPILOG         */ 69400000
* /*******************************************************************/ 69450000
* IF (ZSUSPEND^='YES') THEN                                             69500000
*  DO;                               /* SETUP BASE MAPPING IN EPILOG */ 69550000
*  ZSUSPEND='YES';                   /* INDICATE MAPPING DECLARED    */ 69600000
*  IVSTRING='DCL 1 SRP$LIST BASED(SRP$PTR) VIA(SRP$VIA) BDY(WORD),'||   69650000
*        ' /* SUSPEND WITH TOKEN PARAMETER LIST MAPPING   @P1C*/ ' ||   69700000
*               '3 SRP$LEVEL  FIXED(8),'                           ||   69750000
*                  '/* PARAMETER LEVEL INDICATOR   @P1C*/ '        ||   69800000
*               '3 *          CHAR( 3),'                           ||   69850000
*                  '/* RESERVED                  */ '              ||   69900000
*               '3 SRP$EXIT  PTR(31),'                             ||   69934600
*                  '/* THE ADDRESS OF THE SUSPEND EXIT   @P1C*/ '  ||   69969200
*               '4 SRP$RCODE FIXED(31),'                           ||   70003800
*                  '/* THE RESUME CODE   @P1C*/ '                  ||   70038400
*               '3 SRP$ALET   FIXED(32),'                          ||   70073000
*                  '/* THE ALET OF THE SUSPEND TOKEN   @P1C*/ '    ||   70107600
*               '3 SRP$TOKEN  PTR(31),'                            ||   70142200
*                  '/* THE ADDRESS OF THE SUSPEND TOKEN   @P1C*/ ' ||   70176800
*               '3 SRP$EAL    FIXED(32),'                          ||   70211400
*                  '/* THE ALET OF EXIT PARAMETER      @P1C*/ '    ||   70246000
*               '3 SRP$EAD    PTR(31);'                            ||   70280600
*           '/* THE ADDRESS OF THE EXIT PARAMETER   @P1C*/ '; /* @D1C*/ 70315200
*  IVSTRING=IVSTRING||                                                  70350000
*       'DCL SRP$VIA FIXED(32); '  ||                                   70400000
*           '/* ALET VARIABLE FOR PARAMETER LIST   @P1C*/ ';            70450000
*  IVSTRING=IVSTRING||                                                  70500000
*       'DCL SRP$PTR PTR(31);   '  ||                                   70550000
*           '/* POINTER TO THE PARAMETER LIST    @P1C*/ ';              70600000
*  IVSTRING=IVSTRING||                                                  70650000
*       'DCL 1 SRP$PRIM BASED(SRP$PTR) BDY(WORD) LIKE SRP$LIST; ' ||    70700000
*       '/* PARAMETER LIST MAP FOR PRIMARY MODE INVOCATIONS   @P1C*/';  70750000
*   ANS (' ?EPILOG STRING('''||IVSTRING||''');'); /* ADD BASED MAPPING  70800000
*                                      TO EPILOG STRING CONSTANTS   */  70850000
*  END;                              /* END BASE MAPPING SETUP      */  70900000
*/*-----------------------------------------------------------------*/  70950000
*/*  MAKE SURE THE CROSS-MEMORY SERVICES DECLARES ARE SETUP BY      */  71000000
*/*        ?EPILOG                                                  */  71050000
*/*-----------------------------------------------------------------*/  71100000
*        IF INDEX(EHAMAPS,'XM@')=0                                      71150000
*          THEN                                                         71200000
*            EHAMAPS=EHAMAPS||'XM@,'; /* DEFINE XM SERVICES         */  71250000
*/*******************************************************************/  71300000
*/*  PO.L18 END OF CODE TO BE BYPASSED WHEN ZMACRET ^= 0            */  71350000
*/*******************************************************************/  71400000
* END;                              /* END LIST GENERATION          */  71450000
*  RETURN CODE(ZMACRET);                                                71500000
*%END RESUME;                                                           71550000
