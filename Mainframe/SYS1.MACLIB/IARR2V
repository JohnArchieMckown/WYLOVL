*/**** START OF SPECIFICATIONS **************************************** 00000100
*                                                                     * 00000200
*                                                                     * 00000300
*01* MACRO NAME:  IARR2V                                -99/07/31-<0> * 00000400
*                                                                     * 00000500
*                                                                     * 00000600
*01* DESCRIPTIVE NAME:  Convert RSA to VSA                            * 00000700
*                                                                     * 00000800
*01* PROPRIETARY STATEMENT:                                           * 00000900
*                                                                     * 00001000
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 00001100
*     5647-A01 (C) COPYRIGHT IBM CORP. 1994, 2000                     * 00001200
*                                                                     * 00001300
* STATUS= HBB7703                                                     * 00001400
*                                                                     * 00001500
*                                                                     * 00001600
*                                                                     * 00001700
*01* FUNCTION:                                                        * 00001800
*                                                                     * 00001900
*                                                                     * 00002000
*      Convert an input real storage address to a virtual storage     * 00002100
*      address, ASID, and STOKEN.                                     * 00002200
*                                                                     * 00002300
*                                                                     * 00002400
*      o   If the input real storage address is contained in a real   * 00002500
*          storage frame that backs a single page, the ASID will      * 00002600
*          indicate the address space that owns the frame (an ASID of * 00002700
*          X'FFFF' indicates that the frame backs a common area       * 00002800
*          page), and the STOKEN will indicate the address space or   * 00002900
*          data space that uses the frame.                            * 00003000
*                                                                     * 00003100
*      o   If the input real storage address is contained in a real   * 00003200
*          storage frame that backs multiple pages (i.e. backs a      * 00003300
*          shared page), a search is performed for the first virtual  * 00003400
*          address in the following list that is valid:               * 00003500
*                                                                     * 00003600
*                                                                     * 00003700
*          1.  Lowest fixed common area virtual address.              * 00003800
*                                                                     * 00003900
*          2.  Lowest fixed home address space virtual address.       * 00004000
*                                                                     * 00004100
*          3.  Lowest fixed data space virtual address for a data     * 00004200
*              space owned by the home address space.                 * 00004300
*                                                                     * 00004400
*          4.  Lowest DREF common area virtual address.               * 00004500
*                                                                     * 00004600
*          5.  Lowest DREF home address space virtual address.        * 00004700
*                                                                     * 00004800
*          6.  Lowest DREF data space virtual address for a data      * 00004900
*              space owned by the home address space.                 * 00005000
*                                                                     * 00005100
*          7.  Lowest pageable common area virtual address.           * 00005200
*                                                                     * 00005300
*          8.  Lowest pageable home address space virtual address.    * 00005400
*                                                                     * 00005500
*          9.  Lowest pageable data space virtual address for a data  * 00005600
*              space owned by the home address space.                 * 00005700
*                                                                     * 00005800
*          10. Lowest fixed primary address space virtual address.    * 00005900
*                                                                     * 00006000
*          11. Lowest DREF primary address space virtual address.     * 00006100
*                                                                     * 00006200
*          12. Lowest pageable primary address space virtual address. * 00006300
*                                                                     * 00006400
*          13. Lowest fixed data space virtual address for a data     * 00006500
*              space owned by the primary address space.              * 00006600
*                                                                     * 00006700
*          14. Lowest DREF data space virtual address for a data      * 00006800
*              space owned by the primary address space.              * 00006900
*                                                                     * 00007000
*          15. Lowest pageable data space virtual address for a data  * 00007100
*              space owned by the primary address space.              * 00007200
*                                                                     * 00007300
*          16. Lowest fixed secondary address space virtual address.  * 00007400
*                                                                     * 00007500
*          17. Lowest DREF secondary address space virtual address.   * 00007600
*                                                                     * 00007700
*          18. Lowest pageable secondary address space virtual        * 00007800
*              address.                                               * 00007900
*                                                                     * 00008000
*          19. Lowest fixed data space virtual address for a data     * 00008100
*              space owned by the secondary address space.            * 00008200
*                                                                     * 00008300
*          20. Lowest DREF data space virtual address for a data      * 00008400
*              space owned by the secondary address space.            * 00008500
*                                                                     * 00008600
*          21. Lowest pageable data space virtual address for a data  * 00008700
*              space owned by the secondary address space.            * 00008800
*                                                                     * 00008900
*                                                                     * 00009000
*                                                                     * 00009100
*          The ASID will indicate the address space that uses the     * 00009200
*          frame, and the STOKEN will indicate the address space or   * 00009300
*          data space that uses the frame.                            * 00009400
*                                                                     * 00009500
*      o   In all other cases (the real storage frame does not back   * 00009600
*          any page, or backs a read-only nucleus page), a non-zero   * 00009700
*          return code and diagnostic reason code are issued.         * 00009800
*                                                                     * 00009900
*                                                                     * 00010000
*                                                                     * 00010100
*01* EXTERNAL CLASSIFICATION:  GUPI                                   * 00010200
*                                                                     * 00010300
*01* END OF EXTERNAL CLASSIFICATION:                                  * 00010400
*                                                                     * 00010500
*01* ENVIRONMENT:                                                     * 00010600
*                                                                     * 00010700
*                                                                     * 00010800
*      Minimum authorization: Problem or Supervisor state.  Any PSW   * 00010900
*                        key.                                         * 00011000
*                                                                     * 00011100
*      Dispatchable unit mode: Task, SRB, FLIH or DIE mode.           * 00011200
*                                                                     * 00011300
*      Cross Memory Mode: Any PASN, any HASN, any SASN.               * 00011400
*                                                                     * 00011500
*      AMODE:            24- or 31-bit.                               * 00011600
*                                                                     * 00011700
*      ASC mode:         Primary, Secondary, or Access Register.      * 00011800
*                                                                     * 00011900
*      Interrupt status: Enabled or disabled for I/O and external     * 00012000
*                        interrupts.                                  * 00012100
*                                                                     * 00012200
*      Locks:            No locks held, except the local lock and/or  * 00012300
*                        the CPU lock may be held.                    * 00012400
*                                                                     * 00012500
*      Control parameters: None.                                      * 00012600
*                                                                     * 00012700
*                                                                     * 00012800
*                                                                     * 00012900
*01* PROGRAMMING REQUIREMENTS:                                        * 00013000
*                                                                     * 00013100
*       None other than the interface requirements above.             * 00013200
*                                                                     * 00013300
*01* RESTRICTIONS:                                                    * 00013400
*                                                                     * 00013500
*       BRANCH linkage is restricted to supervisor state, key 0       * 00013600
*       callers.                                                      * 00013700
*                                                                     * 00013800
*01* PERFORMANCE IMPLICATIONS:                                        * 00013900
*                                                                     * 00014000
*       None.                                                         * 00014100
*                                                                     * 00014200
*01* INPUT REGISTERS:  GR0-GR15    Undefined                          * 00014300
*                                                                     * 00014400
*  Before issuing the IARR2V macro, the caller does not have to place * 00014500
*  any information into any register unless using it in register      * 00014600
*  notation for a particular parameter, or using it as a base         * 00014700
*  register.                                                          * 00014800
*                                                                     * 00014900
*01* OUTPUT REGISTERS: GR0         ASID if return code is zero or     * 00015000
*                                  four, or reason code.              * 00015100
*                      GR1         Virtual storage address if return  * 00015200
*                                  code is zero or four.              * 00015300
*                      GR2-GR13    Unchanged.                         * 00015400
*                      GR14        Return address.                    * 00015500
*                      GR15        Return code.                       * 00015600
*                      AR0         First four bytes of STOKEN if      * 00015700
*                                  return code is zero or four.       * 00015800
*                      AR1         Last four bytes of STOKEN if       * 00015900
*                                  return code is zero or four.       * 00016000
*                      AR2-AR13    Unchanged.                         * 00016100
*                      AR14        Total shared view count if return  * 00016200
*                                  code is zero or four.              * 00016300
*                      AR15        Valid shared view count if return  * 00016400
*                                  code is zero or four.              * 00016500
*                                                                     * 00016600
*  Note: the ASID value will be 'FFFF' (hexadecimal) if the returned  * 00016700
*  address represents COMMON area storage.                            * 00016800
*                                                                     * 00016900
*  Some callers depend on register contents remaining the same before * 00017000
*  and after issuing a service.  If the system changes the contents   * 00017100
*  of registers on which the caller depends, the caller must save     * 00017200
*  them before issuing the service, and restore them after the system * 00017300
*  returns control.                                                   * 00017400
*                                                                     * 00017500
*01* SYNTAX:                                                          * 00017600
*                                                                     * 00017700
*[xlabel]  IARR2V    RSA=xrsa                                        * 00017800
*                   ,RSA64=xrsa64                                    * 00017900
*                   [,VSA=xvsa]                                       * 00018000
*                   [,ASID=xasid]                                     * 00018100
*                   [,STOKEN=xstoken]                                 * 00018200
*                   [,WORKREG=xworkreg|NONE                         * 00018300
*                       [,NUMVIEW=xnumview]                           * 00018400
*                       [,NUMVALID=xnumvalid]]                        * 00018500
*                   [,LINKAGE=SYSTEM|BRANCH]                        * 00018600
*                   [,RETCODE=xretcode]                               * 00018700
*                   [,RSNCODE=xrsncode]                               * 00018800
*                   [,COM=xcom|NULL]                                * 00018900
*                   [,REM=xrem|NULL]                                * 00019000
*                                                                     * 00019100
*                                                                     * 00019200
*      Where:                                                         * 00019300
*                                                                     * 00019400
*                                                                     * 00019500
*      [xlabel]                                                       * 00019600
*          is an optional symbol, starting in column 1, that is the   * 00019700
*          name on the IARR2V macro invocation.  The name must        * 00019800
*          conform to the rules for an ordinary assembler language    * 00019900
*          symbol.                                                    * 00020000
*          DEFAULT: No name.                                          * 00020100
*                                                                     * 00020200
*                                                                     * 00020300
*                                                                     * 00020400
*                                                                     * 00020500
*      The following is a set of mutually exclusive keys.  This set   * 00020600
*      is required; only one key must be specified.                   * 00020700
*                                                                     * 00020800
*                                                                     * 00020900
*      RSA=xrsa                                                       * 00021000
*          belongs to a set of mutually exclusive keys. It is the     * 00021100
*          name (RS-type), or address in register (2)-(12), of a 4    * 00021200
*          byte input that contains the address (31-bit real storage  * 00021300
*          address) to be converted to a virtual storage address.     * 00021400
*                                                                     * 00021500
*      RSA64=xrsa64                                                   * 00021600
*          belongs to a set of mutually exclusive keys. It is the     * 00021700
*          name (RS-type), or address in register (2)-(12), of an 8   * 00021800
*          byte input that contains the address (64-bit real storage  * 00021900
*          address) to be converted to a virtual storage address. To  * 00022000
*          use this keyword, the SYSSTATE macro must be invoked       * 00022100
*          specifying ARCHLVL greater than 1.                         * 00022200
*                                                                     * 00022300
*                                                                     * 00022400
*                                                                     * 00022500
*      End of a set of mutually exclusive required keys.              * 00022600
*                                                                     * 00022700
*                                                                     * 00022800
*                                                                     * 00022900
*      [VSA=xvsa]                                                     * 00023000
*          is the name (RS-type), or address in register (2)-(12), of * 00023100
*          an optional 4 byte output that will contain the address    * 00023200
*          (virtual storage address) that maps to the input real      * 00023300
*          storage address.                                           * 00023400
*                                                                     * 00023500
*                                                                     * 00023600
*                                                                     * 00023700
*                                                                     * 00023800
*      [ASID=xasid]                                                   * 00023900
*          is the name (RS-type), or address in register (2)-(12), of * 00024000
*          an optional fullword output that will contain the ASID of  * 00024100
*          the address space associated with the output virtual       * 00024200
*          storage address.  Bit 0 will be set to 1 if the input real * 00024300
*          storage address is contained in a frame that backs a       * 00024400
*          shared page, and will be set to 0 if the input real        * 00024500
*          storage address is contained in a frame that does not back * 00024600
*          a shared page.  Bit 1 will be set to 1 if the input real   * 00024700
*          storage address is contained in a frame that backs a       * 00024800
*          shared segment page, and will be set to 0 if the input     * 00024900
*          real storage address is contained in a frame that does not * 00025000
*          back a shared segment page.  Bits 1-15 will always be set  * 00025100
*          to 0's.  Bits 16-31 will contain the 16-bit ASID.          * 00025200
*                                                                     * 00025300
*                                                                     * 00025400
*                                                                     * 00025500
*                                                                     * 00025600
*      [STOKEN=xstoken]                                               * 00025700
*          is the name (RS-type) of an optional 8 character output    * 00025800
*          that will contain the STOKEN for the address space or data * 00025900
*          space associated with the output virtual storage address.  * 00026000
*                                                                     * 00026100
*                                                                     * 00026200
*                                                                     * 00026300
*                                                                     * 00026400
*      [WORKREG=xworkreg|NONE                                       * 00026500
*          is an optional input.  It is the name (RS-type), or        * 00026600
*          address in register (2)-(12), that indicates a GR/AR pair  * 00026700
*          to be used as work registers if page sharing counts are to * 00026800
*          be returned.  If this keyword is not present on the macro  * 00026900
*          invocation, the page sharing counts will not be returned.  * 00027000
*          The GR/AR pair used as work registers must not be any of   * 00027100
*          the following: GR0/AR0, GR1/AR1, GR14/AR14, GR15/AR15.     * 00027200
*          DEFAULT: NONE                                              * 00027300
*                                                                     * 00027400
*                                                                     * 00027500
*          [NUMVIEW=xnumview]                                         * 00027600
*              is the name (RS-type) of an optional fullword output   * 00027700
*              that will contain the number of page sharing views     * 00027800
*              associated with the input real storage address.  This  * 00027900
*              count will be non-zero only if bit 0 of the output     * 00028000
*              ASID is set to 1.                                      * 00028100
*                                                                     * 00028200
*                                                                     * 00028300
*                                                                     * 00028400
*                                                                     * 00028500
*          [NUMVALID=xnumvalid]]                                      * 00028600
*              is the name (RS-type) of an optional fullword output   * 00028700
*              that will contain the number of page sharing views     * 00028800
*              associated with the input real storage address that    * 00028900
*              are valid in real storage.  This count will be         * 00029000
*              non-zero only if bit 0 of the output ASID is set to 1. * 00029100
*                                                                     * 00029200
*                                                                     * 00029300
*                                                                     * 00029400
*                                                                     * 00029500
*                                                                     * 00029600
*                                                                     * 00029700
*      [LINKAGE=SYSTEM|BRANCH]                                      * 00029800
*          is an optional keyword input that specifies whether the    * 00029900
*          real-to-virtual translation routine is invoked via a PC or * 00030000
*          via a direct branch.                                       * 00030100
*          DEFAULT: SYSTEM                                            * 00030200
*                                                                     * 00030300
*                                                                     * 00030400
*          LINKAGE=SYSTEM                                             * 00030500
*              specifies that the translation routine is invoked via  * 00030600
*              a PC.                                                  * 00030700
*                                                                     * 00030800
*          LINKAGE=BRANCH                                             * 00030900
*              specifies that the translation routine is invoked via  * 00031000
*              a direct branch (restricted to supervisor state key 0  * 00031100
*              callers).                                              * 00031200
*                                                                     * 00031300
*                                                                     * 00031400
*                                                                     * 00031500
*                                                                     * 00031600
*                                                                     * 00031700
*                                                                     * 00031800
*      [RETCODE=xretcode]                                             * 00031900
*          is the name (RS-type) of an optional fullword output       * 00032000
*          variable, or register (2)-(12), into which the return code * 00032100
*          is to be copied from GPR 15.                               * 00032200
*                                                                     * 00032300
*                                                                     * 00032400
*                                                                     * 00032500
*                                                                     * 00032600
*      [RSNCODE=xrsncode]                                             * 00032700
*          is the name (RS-type) of an optional 4 character output    * 00032800
*          variable, or register (2)-(12), into which the reason code * 00032900
*          is to be copied from GPR 0.                                * 00033000
*                                                                     * 00033100
*                                                                     * 00033200
*                                                                     * 00033300
*                                                                     * 00033400
*      [COM=xcom|NULL]                                              * 00033500
*          is an optional character input  that will appear in the    * 00033600
*          block comment before the macro invocation echo. It can be  * 00033700
*          used to comment the macro invocation.  The comment string  * 00033800
*          must be enclosed in quotes if it contains any lower case   * 00033900
*          characters.                                                * 00034000
*          DEFAULT: NULL                                              * 00034100
*                                                                     * 00034200
*                                                                     * 00034300
*                                                                     * 00034400
*                                                                     * 00034500
*      [REM=xrem|NULL]                                              * 00034600
*          is an optional character input  that will appear in the    * 00034700
*          block comment with the macro invocation echo. It can be    * 00034800
*          used to comment the macro invocation. The remark string    * 00034900
*          must be enclosed in quotes if it contains any lower case   * 00035000
*          characters.                                                * 00035100
*          DEFAULT: NULL                                              * 00035200
*                                                                     * 00035300
*                                                                     * 00035400
*                                                                     * 00035500
*01* RETURN CODES:                                                    * 00035600
*                                                                     * 00035700
*                                                                     * 00035800
*       00        Successful completion.  The input real storage      * 00035900
*                 address translated to an address space virtual      * 00036000
*                 address.  Register 0 contains the ASID of the       * 00036100
*                 address space that owns the real storage frame (if  * 00036200
*                 the address space page is part of a page sharing    * 00036300
*                 group, bit 0 of register 0 is set to 1).            * 00036400
*                                                                     * 00036500
*       04        Successful completion.  The input real storage      * 00036600
*                 address translated to a data space virtual address. * 00036700
*                 Register 0 contains the ASID of the address space   * 00036800
*                 that owns the data space that owns the real storage * 00036900
*                 frame (if the data space page is part of a page     * 00037000
*                 sharing group, bit 0 of register 0 is set to 1).    * 00037100
*                                                                     * 00037200
*       08        Unsuccessful completion.                            * 00037300
*                                                                     * 00037400
*                                                                     * 00037500
*                                                                     * 00037600
*01* REASON CODES:                                                    * 00037700
*                                                                     * 00037800
*       REASON    RETURN                                              * 00037900
*       CODE      CODE      DESCRIPTION                               * 00038000
*                                          * 00038100
*                                                                     * 00038200
*                                                                     * 00038300
*       xx0001xx  08        The  input  real  storage  address is not * 00038400
*                           within the bounds of real storage.        * 00038500
*                                                                     * 00038600
*       xx0002xx  08        The frame corresponding to the input real * 00038700
*                           storage  address  is  not  assigned  to a * 00038800
*                           page.                                     * 00038900
*                                                                     * 00039000
*       xx0003xx  08        The frame corresponding to the input real * 00039100
*                           storage  address contains shared data but * 00039200
*                           no  virtual  address  for  any accessible * 00039300
*                           address  space  (either home, primary, or * 00039400
*                           secondary) maps to it.                    * 00039500
*                                                                     * 00039600
*       xx0004xx  08        IARR2V service was recursively invoked.   * 00039700
*                                                                     * 00039800
*       xx0005xx  08        The frame corresponding to the input real * 00039900
*                           storage  address  is  assigned  to a data * 00040000
*                           space,  but  the  data space STOKEN could * 00040100
*                           not be found.                             * 00040200
*                                                                     * 00040300
*                                                                     * 00040400
*                                                                     * 00040500
*01* MODULE TYPE:  ASSEM MACRO                                        * 00040600
*                                                                     * 00040700
*02*   PROCESSOR:  ASSEM                                              * 00040800
*                                                                     * 00040900
*01* COMPONENT:  SC1CR                                                * 00041000
*                                                                     * 00041100
*01* DISTRIBUTION LIBRARY: AMACLIB                                    * 00041200
*                                                                     * 00041300
*01* MACRO USAGE NOTES:                                               * 00041400
*                                                                     * 00041500
*                                                                     * 00041600
*    1.  Printing of the macro expansion is controlled by the ZPRINT  * 00041700
*        global macro variable.  Any value other than 'NO' will       * 00041800
*        result in the macro expansion being printed.  The default is * 00041900
*        'YES'.  The following examples illustrate how the ZPRINT     * 00042000
*        variable should be set.                                      * 00042100
*                                                                     * 00042200
*                    GBLC &ZPRINT                                     * 00042300
*            &ZPRINT SETC 'YES'          &ZPRINT SETC 'NO'            * 00042400
*                                                                     * 00042500
*                                                                     * 00042600
*                                                                     * 00042700
*01* CHANGE ACTIVITY:                                                 * 00042800
*                                                                     * 00042900
*   Flag LineItem  FMID    Date   ID    Comment                       * 00043000
*                                                                     * 00043100
*    $L0=CAPTU3J@ HBB5520 931212 PD00KI:  Shared Data support.        * 00043200
*    $P1=PN71216  HBB5520 940728 PD00KI:  Shared Data support.        * 00043300
*    $01=OW19167  HBB5520 960417 PD00CS:  Common area view support.   * 00043400
*    $P2=PVT0162  HBB6606 971208 PD00HL:  PLX version of the macro    * 00043500
*                                         does not return the VSA     * 00043600
*                                         correctly.                  * 00043700
*    $L1=64BIT    HBB7703 981220 PD002D:  64-Bit Interface Changes.   * 00043800
****** END OF SPECIFICATIONS *****************************************/ 00043900
*/* TLINE 1 *********************************************************** 00044000
         MACRO                                                          00044100
&XLABEL  IARR2V &RSA=,&RSA64=,&VSA=,&ASID=,&STOKEN=,&WORKREG=,         *00044200
               &NUMVIEW=,&NUMVALID=,&LINKAGE=,&RETCODE=,&RSNCODE=,     *00044300
               &COM=,&REM=                                              00044400
.*                                                                      00044500
*              MACDATE -99/07/31-<0>                                    00044600
.*                                                                      00044700
.*******************************************************************    00044800
.***AB.02  GLOBAL VARIABLES TO CONTROL PRINT AND CODE GENERATION        00044900
.*******************************************************************    00045000
              GBLC  &ZPRINT     YES=PRINT NO=NO PRINT                   00045100
              GBLC  &ZTEST      YES=TEST NO=NO TEST                     00045200
              GBLC  &ZSYSTEM    PCCODE10, MVS, SAK, VM, XAX             00045300
.*                                                                      00045400
              GBLC  &ZIARR2V    YES=MACRO USED AT LEAST ONCE            00045500
.*******************************************************************    00045600
.***AB.03  COMMONLY USED LOCAL MACRO VARIABLES                          00045700
.*******************************************************************    00045800
              LCLC  &ZMS        ERROR MESSAGE WORK AREA                 00045900
              LCLC  &ZCNDX      LAST THREE SYSNDX CHARACTERS            00046000
              LCLC  &ZCLNG      USED WHEN LENGTH IS NEEDED              00046100
              LCLC  &ZCGPR      USED WHEN VALUE IS IN A GPR             00046200
              LCLC  &ZCVAL      USED TO CONTAIN FIXED VALUE             00046300
              LCLA  &ZAWRK      USED AS A WORK AREA                     00046400
              LCLA  &ZASIZ      USED FOR SIZE OF VALUE                  00046500
              LCLA  &ZN         NUMERIC WORK VARIABLE                   00046600
              LCLC  &ZC         CHARACTER WORK VARIABLE                 00046700
              LCLC  &ZTLC       CHARACTER TOO LONG VARIABLE             00046800
              LCLA  &ZTLA       VALUE TOO LONG VARIABLE                 00046900
              LCLA  &ZMACRET    MACRO RETURN CODE                       00047000
&ZMACRET      SETA  0           ASSUME NO ERRORS                        00047100
.*                                                                      00047200
              LCLC  &ZCSYSLIST(255)             NONXKEY, POS ARRAY      00047300
              LCLA  &ZASYSLNDX  WORK INDEX FOR ZCSYSLIST()              00047400
              LCLA  &ZPLLEN     PARAMETER LIST LENGTH                   00047500
              LCLC  &ZENDBASEPL                 End of base PL          00047600
.*******************************************************************    00047700
.***AB.04  MACRO VARIABLES FOR RANGES AND SETS OF ARGUMENTS             00047800
.*******************************************************************    00047900
              LCLA  &ZI         INDEX FOR ARRAY                         00048000
              LCLA  &ZJ         INDEX FOR PARMS                         00048100
              LCLA  &ZK         INDEX FOR PARSE                         00048200
              LCLA  &ZLO        LOW RANGE VALUE                         00048300
              LCLA  &ZHI        HIGH RANGE VALUE                        00048400
              LCLC  &ZW         WORK AREA FOR PARM                      00048500
.*******************************************************************    00048600
.***AB.07  DEFINE ALL MACRO VARIABLES                                   00048700
.*******************************************************************    00048800
              LCLC  &XDUMME0A   ++ NAME                                 00048900
              LCLC  &XRSA       ++ NAME                                 00049000
              LCLC  &XRSA64     ++ NAME                                 00049100
              LCLC  &XVSA       ++ NAME                                 00049200
              LCLC  &XASID      ++ NAME                                 00049300
              LCLC  &XSTOKEN    ++ NAME                                 00049400
              LCLC  &XWORKREG   ++ NAME                                 00049500
              LCLC  &XNUMVIEW   ++ NAME                                 00049600
              LCLC  &XNUMVALID  ++ NAME                                 00049700
              LCLC  &XLINKAGE   ++ VALUE                                00049800
              LCLC  &XRETCODE   ++ NAME                                 00049900
              LCLC  &XRSNCODE   ++ NAME                                 00050000
              LCLC  &XCOM       ++ VALUE                                00050100
              LCLC  &XREM       ++ VALUE                                00050200
.*******************************************************************    00050300
.***AB.13  DEFINE MACRO VARIABLES FOR INPUT/OUTPUT PROCESSING           00050400
.*******************************************************************    00050500
              LCLC  &ZXDUMME0A  ++ INPUT NAME                           00050600
              LCLC  &ZXRSA      ++ INPUT NAME                           00050700
              LCLC  &ZXRSA64    ++ INPUT NAME                           00050800
              LCLC  &ZXVSA      ++ OUTPUT NAME                          00050900
              LCLC  &ZXASID     ++ OUTPUT NAME                          00051000
              LCLC  &ZXSTOKEN   ++ OUTPUT NAME                          00051100
              LCLC  &ZXWORKREG  ++ INPUT NAME                           00051200
              LCLC  &ZXNUMVIEW  ++ OUTPUT NAME                          00051300
              LCLC  &ZXNUMVALID                 ++ OUTPUT NAME          00051400
              LCLC  &ZXLINKAGE  ++ INPUT VALUE                          00051500
              LCLC  &ZXRETCODE  ++ OUTPUT NAME                          00051600
              LCLC  &ZXRSNCODE  ++ OUTPUT NAME                          00051700
              LCLC  &ZXCOM      ++ INPUT VALUE                          00051800
              LCLC  &ZXREM      ++ INPUT VALUE                          00051900
.********************************************************************   00052000
.***AG.MF02  FULL MACRO SYNTAX CHECKING                                 00052100
.********************************************************************   00052200
              ACTR  10000                                               00052300
.*----------------------------------------------------------------***   00052400
.***AG.KMEKY01 NAME, RQD INPUT, ME KEYS -XVARIABLE                      00052500
&XDUMME0A     SETC  ''          INITIALIZE XVARIABLE                    00052600
              AIF   (K'&RSA LE 0).ZG2C                                  00052700
&ZXDUMME0A    SETC  'INPUT'     SET IN/OUTPUT                           00052800
&XDUMME0A     SETC  'RSA'       SET XVARIABLE                           00052900
&ZXRSA        SETC  'INPUT'     SET IN/OUTPUT                           00053000
&XRSA         SETC  '&RSA(1)'   SET XVARIABLE PARM                      00053100
              AIF   (N'&RSA GT 1).ZG2A                                  00053200
&XRSA         SETC  '&RSA'      SET XVARIABLE PARM                      00053300
.ZG2A         AIF   (N'&RSA LE 1).ZG2B          CK NUM                  00053400
&ZMS          SETC  '"RSA='     *KPOSA* MNOTE                           00053500
&ZMS          SETC  '&ZMS.&RSA"'                                        00053600
&ZMS          SETC  '&ZMS "RSA"'                                        00053700
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00053800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00053900
.ZG2B         AIF   (K'&XRSA GT 0).ZG2C         ONE PARM                00054000
&ZXDUMME0A    SETC  ''          RESET IN/OUTPUT                         00054100
&ZXRSA        SETC  ''          RESET IN/OUTPUT                         00054200
&ZMS          SETC  ' '         *KRQDA*                                 00054300
&ZMS          SETC  '&ZMS "RSA" KEY AND ITS'                            00054400
              MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                    00054500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00054600
.ZG2C         ANOP  ,                                                   00054700
.*----------------------------------------------------------------***   00054800
.***AG.KMEKY02 NAME, RQD INPUT, ME KEYS -XVARIABLE                      00054900
              AIF   (K'&RSA64 LE 0).ZG3D        NO ME KEY               00055000
              AIF   (N'&RSA64 LE 1).ZG3A        CK NUM                  00055100
&ZMS          SETC  '"RSA64='   *KPOSA* MNOTE                           00055200
&ZMS          SETC  '&ZMS.&RSA64"'                                      00055300
&ZMS          SETC  '&ZMS "RSA64"'                                      00055400
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00055500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00055600
.ZG3A         AIF   (K'&XDUMME0A LE 0).ZG3B                             00055700
&ZMS          SETC  '"RSA64'    *KMEKA* MNOTE                           00055800
&ZMS          SETC  '&ZMS.=&RSA64"'                                     00055900
&ZMS          SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'               00056000
&ZMS          SETC  '&ZMS "&XDUMME0A"'                                  00056100
              MNOTE 8,' &ZMS KEY.'                                      00056200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00056300
              AGO   .ZG3D                                               00056400
.*                                                                      00056500
.ZG3B         ANOP  ,                                                   00056600
&ZXDUMME0A    SETC  'INPUT'     SET IN/OUTPUT                           00056700
&XDUMME0A     SETC  'RSA64'     SET XVARIABLE                           00056800
&ZXRSA64      SETC  'INPUT'     SET IN/OUTPUT                           00056900
&XRSA64       SETC  '&RSA64(1)'                 SET XVARIABLE PARM      00057000
              AIF   (N'&RSA64 GT 1).ZG3C                                00057100
&XRSA64       SETC  '&RSA64'    SET XVARIABLE PARM                      00057200
.ZG3C         AIF   (K'&XRSA64 GT 0).ZG3D       ONE PARM                00057300
&ZXDUMME0A    SETC  ''          RESET IN/OUTPUT                         00057400
&ZXRSA64      SETC  ''          RESET IN/OUTPUT                         00057500
&ZMS          SETC  ' '         *KRQDA*                                 00057600
&ZMS          SETC  '&ZMS "RSA64" KEY AND ITS'                          00057700
              MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                    00057800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00057900
.ZG3D         ANOP  ,                                                   00058000
.*------------------------------------------------------------------    00058100
.***AG.KME4Y09 NAME, RQD INPUT, ME KEYS -CHECK IF KEY ENTERED           00058200
              AIF   (K'&XDUMME0A GT 0).ZG4B                             00058300
&ZXDUMME0A    SETC  ''          RESET IN/OUTPUT                         00058400
&ZXRSA        SETC  ''          RESET IN/OUTPUT                         00058500
&XDUMME0A     SETC  ''          ENSURE NULL                             00058600
&XRSA         SETC  ''          ENSURE NULL                             00058700
&ZMS          SETC  'ONE OF THE FOLLOWING'      *KMERA* MNOTE           00058800
&ZMS          SETC  '&ZMS MUTUALLY EXCLUSIVE KEY(S) IS'                 00058900
&ZMS          SETC  '&ZMS REQUIRED:'                                    00059000
&ZMS          SETC  '&ZMS "RSA"'                VALID ME KEY            00059100
&ZMS          SETC  '&ZMS OR "RSA64".'          VALID ME KEY            00059200
              MNOTE 8,' &ZMS '                                          00059300
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00059400
.ZG4B         ANOP  ,                                                   00059500
.*-------------------------------------------------------------------   00059600
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           00059700
.ZG2          AIF   ('&XDUMME0A' NE 'RSA').ZG3                          00059800
.*-------------------------------------------------------------------   00059900
.***AG.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 00060000
              AIF   (K'&ZXRSA LE 0).ZG2R        NOT I/O                 00060100
              AIF   ('&XRSA'(1,1) NE '(').ZG2R                          00060200
&ZCGPR        SETC  '&XRSA'(2,K'&XRSA-2)                                00060300
              AIF   ('&ZCGPR'(1,1) NE '0').ZG2P                         00060400
              AIF   (K'&ZCGPR GT 2).ZG2Q                                00060500
              AIF   ('&ZCGPR' EQ '0').ZG2Q                              00060600
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00060700
              AIF   (T'&ZCGPR NE 'N').ZG2Q      INVALID REG NAME        00060800
.ZG2P         ANOP  ,                                                   00060900
              AIF   (T'&ZCGPR NE 'N').ZG2R      NON NUMERIC             00061000
              AIF   ('&ZCGPR' LT '2').ZG2Q                              00061100
              AIF   ('&ZCGPR' LE '12').ZG2R                             00061200
.ZG2Q         ANOP  ,                                                   00061300
&ZMS          SETC  '"RSA='     *KGPRA* MNOTE                           00061400
&ZMS          SETC  '&ZMS.&RSA"'                                        00061500
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00061600
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00061700
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00061800
.ZG2R         ANOP  ,                                                   00061900
.*-------------------------------------------------------------------   00062000
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           00062100
.ZG3          AIF   ('&XDUMME0A' NE 'RSA64').ZG4                        00062200
.*-------------------------------------------------------------------   00062300
.***AG.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 00062400
              AIF   (K'&ZXRSA64 LE 0).ZG3R      NOT I/O                 00062500
              AIF   ('&XRSA64'(1,1) NE '(').ZG3R                        00062600
&ZCGPR        SETC  '&XRSA64'(2,K'&XRSA64-2)                            00062700
              AIF   ('&ZCGPR'(1,1) NE '0').ZG3P                         00062800
              AIF   (K'&ZCGPR GT 2).ZG3Q                                00062900
              AIF   ('&ZCGPR' EQ '0').ZG3Q                              00063000
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00063100
              AIF   (T'&ZCGPR NE 'N').ZG3Q      INVALID REG NAME        00063200
.ZG3P         ANOP  ,                                                   00063300
              AIF   (T'&ZCGPR NE 'N').ZG3R      NON NUMERIC             00063400
              AIF   ('&ZCGPR' LT '2').ZG3Q                              00063500
              AIF   ('&ZCGPR' LE '12').ZG3R                             00063600
.ZG3Q         ANOP  ,                                                   00063700
&ZMS          SETC  '"RSA64='   *KGPRA* MNOTE                           00063800
&ZMS          SETC  '&ZMS.&RSA64"'                                      00063900
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00064000
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00064100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00064200
.ZG3R         ANOP  ,                                                   00064300
.*-------------------------------------------------------------------   00064400
.***AG.KMEKY15 NAME, RQD INPUT, ME KEYS -END                            00064500
.ZG4          ANOP  ,           END MUTUALLY EXCLUSIVE KEYS             00064600
.*----------------------------------------------------------------***   00064700
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00064800
              AIF   (N'&VSA LE 1).ZG6A          CK NUM                  00064900
&ZMS          SETC  '"VSA='     *KPOSA* MNOTE                           00065000
&ZMS          SETC  '&ZMS.&VSA"'                                        00065100
&ZMS          SETC  '&ZMS "VSA"'                                        00065200
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00065300
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00065400
.ZG6A         ANOP  ,                                                   00065500
.*-------------------------------------------------------------------   00065600
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00065700
              AIF   (K'&VSA(1) LE 0).ZG6C       NO PARM                 00065800
&ZXVSA        SETC  'OUTPUT'    SET OUTPUT                              00065900
&XVSA         SETC  '&VSA(1)'   SET XVARIABLE                           00066000
              AIF   (N'&VSA GT 1).ZG6C                                  00066100
&XVSA         SETC  '&VSA'      SET XVARIABLE                           00066200
.ZG6C         ANOP  ,                                                   00066300
.*-------------------------------------------------------------------   00066400
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00066500
              AIF   (K'&ZXVSA LE 0).ZG6R        NOT I/O                 00066600
              AIF   ('&XVSA'(1,1) NE '(').ZG6R                          00066700
&ZCGPR        SETC  '&XVSA'(2,K'&XVSA-2)                                00066800
              AIF   ('&ZCGPR'(1,1) NE '0').ZG6P                         00066900
              AIF   (K'&ZCGPR GT 2).ZG6Q                                00067000
              AIF   ('&ZCGPR' EQ '0').ZG6Q                              00067100
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00067200
              AIF   (T'&ZCGPR NE 'N').ZG6Q      INVALID REG NAME        00067300
.ZG6P         ANOP  ,                                                   00067400
              AIF   (T'&ZCGPR NE 'N').ZG6R      NON NUMERIC             00067500
              AIF   ('&ZCGPR' LT '2').ZG6Q                              00067600
              AIF   ('&ZCGPR' LE '12').ZG6R                             00067700
.ZG6Q         ANOP  ,                                                   00067800
&ZMS          SETC  '"VSA='     *KGPRA* MNOTE                           00067900
&ZMS          SETC  '&ZMS.&VSA"'                                        00068000
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00068100
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00068200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00068300
.ZG6R         ANOP  ,                                                   00068400
.*----------------------------------------------------------------***   00068500
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00068600
              AIF   (N'&ASID LE 1).ZG9A         CK NUM                  00068700
&ZMS          SETC  '"ASID='    *KPOSA* MNOTE                           00068800
&ZMS          SETC  '&ZMS.&ASID"'                                       00068900
&ZMS          SETC  '&ZMS "ASID"'                                       00069000
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00069100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00069200
.ZG9A         ANOP  ,                                                   00069300
.*-------------------------------------------------------------------   00069400
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00069500
              AIF   (K'&ASID(1) LE 0).ZG9C      NO PARM                 00069600
&ZXASID       SETC  'OUTPUT'    SET OUTPUT                              00069700
&XASID        SETC  '&ASID(1)'  SET XVARIABLE                           00069800
              AIF   (N'&ASID GT 1).ZG9C                                 00069900
&XASID        SETC  '&ASID'     SET XVARIABLE                           00070000
.ZG9C         ANOP  ,                                                   00070100
.*-------------------------------------------------------------------   00070200
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00070300
              AIF   (K'&ZXASID LE 0).ZG9R       NOT I/O                 00070400
              AIF   ('&XASID'(1,1) NE '(').ZG9R                         00070500
&ZCGPR        SETC  '&XASID'(2,K'&XASID-2)                              00070600
              AIF   ('&ZCGPR'(1,1) NE '0').ZG9P                         00070700
              AIF   (K'&ZCGPR GT 2).ZG9Q                                00070800
              AIF   ('&ZCGPR' EQ '0').ZG9Q                              00070900
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00071000
              AIF   (T'&ZCGPR NE 'N').ZG9Q      INVALID REG NAME        00071100
.ZG9P         ANOP  ,                                                   00071200
              AIF   (T'&ZCGPR NE 'N').ZG9R      NON NUMERIC             00071300
              AIF   ('&ZCGPR' LT '2').ZG9Q                              00071400
              AIF   ('&ZCGPR' LE '12').ZG9R                             00071500
.ZG9Q         ANOP  ,                                                   00071600
&ZMS          SETC  '"ASID='    *KGPRA* MNOTE                           00071700
&ZMS          SETC  '&ZMS.&ASID"'                                       00071800
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00071900
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00072000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00072100
.ZG9R         ANOP  ,                                                   00072200
.*----------------------------------------------------------------***   00072300
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00072400
              AIF   (N'&STOKEN LE 1).ZG12A      CK NUM                  00072500
&ZMS          SETC  '"STOKEN='  *KPOSA* MNOTE                           00072600
&ZMS          SETC  '&ZMS.&STOKEN"'                                     00072700
&ZMS          SETC  '&ZMS "STOKEN"'                                     00072800
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00072900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00073000
.ZG12A        ANOP  ,                                                   00073100
.*-------------------------------------------------------------------   00073200
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00073300
              AIF   (K'&STOKEN(1) LE 0).ZG12C   NO PARM                 00073400
&ZXSTOKEN     SETC  'OUTPUT'    SET OUTPUT                              00073500
&XSTOKEN      SETC  '&STOKEN(1)'                SET XVARIABLE           00073600
              AIF   (N'&STOKEN GT 1).ZG12C                              00073700
&XSTOKEN      SETC  '&STOKEN'   SET XVARIABLE                           00073800
.ZG12C        ANOP  ,                                                   00073900
.*-------------------------------------------------------------------   00074000
.***AG.KCK01 NAME, OPT OUTPUT, KEYS -GPR NOT ALLOWED                    00074100
              AIF   (K'&ZXSTOKEN LE 0).ZG12P    NOT I/O                 00074200
              AIF   ('&XSTOKEN'(1,1) NE '(').ZG12P                      00074300
&ZXSTOKEN     SETC  ''          RESET IN/OUTPUT                         00074400
&ZMS          SETC  '"STOKEN='  *KGPRA* MNOTE                           00074500
&ZMS          SETC  '&ZMS.&STOKEN"'                                     00074600
&ZMS          SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'           00074700
              MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'                   00074800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00074900
.ZG12P        ANOP  ,                                                   00075000
.*----------------------------------------------------------------***   00075100
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00075200
              AIF   (N'&WORKREG LE 1).ZG15A     CK NUM                  00075300
&ZMS          SETC  '"WORKREG='                 *KPOSA* MNOTE           00075400
&ZMS          SETC  '&ZMS.&WORKREG"'                                    00075500
&ZMS          SETC  '&ZMS "WORKREG"'                                    00075600
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00075700
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00075800
.ZG15A        ANOP  ,                                                   00075900
.*-------------------------------------------------------------------   00076000
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00076100
&ZXWORKREG    SETC  'INPUT'     SET IN/OUTPUT                           00076200
&XWORKREG     SETC  'NONE'                                              00076300
              AIF   (K'&WORKREG(1) LE 0).ZG15B  PARM                    00076400
&XWORKREG     SETC  '&WORKREG(1)'               SET XVARIABLE           00076500
              AIF   (N'&WORKREG GT 1).ZG15B     MULTI PARMS             00076600
&XWORKREG     SETC  '&WORKREG'  SET XVARIABLE                           00076700
.ZG15B        ANOP  ,                                                   00076800
.*-------------------------------------------------------------------   00076900
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00077000
              AIF   (K'&ZXWORKREG LE 0).ZG15R   NOT I/O                 00077100
         AIF   ('&XWORKREG' EQ 'NONE').ZG15R                            00077200
              AIF   ('&XWORKREG'(1,1) NE '(').ZG15R                     00077300
&ZCGPR        SETC  '&XWORKREG'(2,K'&XWORKREG-2)                        00077400
              AIF   ('&ZCGPR'(1,1) NE '0').ZG15P                        00077500
              AIF   (K'&ZCGPR GT 2).ZG15Q                               00077600
              AIF   ('&ZCGPR' EQ '0').ZG15Q                             00077700
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00077800
              AIF   (T'&ZCGPR NE 'N').ZG15Q     INVALID REG NAME        00077900
.ZG15P        ANOP  ,                                                   00078000
              AIF   (T'&ZCGPR NE 'N').ZG15R     NON NUMERIC             00078100
              AIF   ('&ZCGPR' LT '2').ZG15Q                             00078200
              AIF   ('&ZCGPR' LE '12').ZG15R                            00078300
.ZG15Q        ANOP  ,                                                   00078400
&ZMS          SETC  '"WORKREG='                 *KGPRA* MNOTE           00078500
&ZMS          SETC  '&ZMS.&WORKREG"'                                    00078600
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00078700
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00078800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00078900
.ZG15R        ANOP  ,                                                   00079000
.*----------------------------------------------------------------***   00079100
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00079200
              AIF   (N'&NUMVIEW LE 1).ZG17A     CK NUM                  00079300
&ZMS          SETC  '"NUMVIEW='                 *KPOSA* MNOTE           00079400
&ZMS          SETC  '&ZMS.&NUMVIEW"'                                    00079500
&ZMS          SETC  '&ZMS "NUMVIEW"'                                    00079600
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00079700
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00079800
.ZG17A        ANOP  ,                                                   00079900
.*-------------------------------------------------------------------   00080000
.***AG.KXVAR18 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00080100
              AIF   (K'&NUMVIEW(1) LE 0).ZG17C  PARM                    00080200
&ZXNUMVIEW    SETC  'OUTPUT'    SET OUTPUT                              00080300
&XNUMVIEW     SETC  '&NUMVIEW(1)'               SET XVARIABLE           00080400
              AIF   (N'&NUMVIEW GT 1).ZG17B     MULTIPLE PARMS          00080500
&XNUMVIEW     SETC  '&NUMVIEW'  SET XVARIABLE                           00080600
.ZG17B        AIF   (K'&WORKREG(1) GT 0).ZG17C  KEY                     00080700
&ZMS          SETC  '"NUMVIEW'  *KDEPA* MNOTE                           00080800
&ZMS          SETC  '&ZMS.=&NUMVIEW"'                                   00080900
&ZMS          SETC  '&ZMS CAN ONLY BE SPECIFIED IF'                     00081000
&ZMS          SETC  '&ZMS '                                             00081100
&ZMS          SETC  '&ZMS "WORKREG"'                                    00081200
              MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                        00081300
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00081400
.ZG17C        ANOP  ,                                                   00081500
.*-------------------------------------------------------------------   00081600
.***AG.KCK01 NAME, OPT OUTPUT, KEYS -GPR NOT ALLOWED                    00081700
              AIF   (K'&ZXNUMVIEW LE 0).ZG17P   NOT I/O                 00081800
              AIF   ('&XNUMVIEW'(1,1) NE '(').ZG17P                     00081900
&ZXNUMVIEW    SETC  ''          RESET IN/OUTPUT                         00082000
&ZMS          SETC  '"NUMVIEW='                 *KGPRA* MNOTE           00082100
&ZMS          SETC  '&ZMS.&NUMVIEW"'                                    00082200
&ZMS          SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'           00082300
              MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'                   00082400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00082500
.ZG17P        ANOP  ,                                                   00082600
.*----------------------------------------------------------------***   00082700
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00082800
              AIF   (N'&NUMVALID LE 1).ZG20A    CK NUM                  00082900
&ZMS          SETC  '"NUMVALID='                *KPOSA* MNOTE           00083000
&ZMS          SETC  '&ZMS.&NUMVALID"'                                   00083100
&ZMS          SETC  '&ZMS "NUMVALID"'                                   00083200
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00083300
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00083400
.ZG20A        ANOP  ,                                                   00083500
.*-------------------------------------------------------------------   00083600
.***AG.KXVAR18 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00083700
              AIF   (K'&NUMVALID(1) LE 0).ZG20C  PARM                   00083800
&ZXNUMVALID   SETC  'OUTPUT'    SET OUTPUT                              00083900
&XNUMVALID    SETC  '&NUMVALID(1)'              SET XVARIABLE           00084000
              AIF   (N'&NUMVALID GT 1).ZG20B    MULTIPLE PARMS          00084100
&XNUMVALID    SETC  '&NUMVALID'                 SET XVARIABLE           00084200
.ZG20B        AIF   (K'&WORKREG(1) GT 0).ZG20C  KEY                     00084300
&ZMS          SETC  '"NUMVALID'                 *KDEPA* MNOTE           00084400
&ZMS          SETC  '&ZMS.=&NUMVALID"'                                  00084500
&ZMS          SETC  '&ZMS CAN ONLY BE SPECIFIED IF'                     00084600
&ZMS          SETC  '&ZMS '                                             00084700
&ZMS          SETC  '&ZMS "WORKREG"'                                    00084800
              MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                        00084900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00085000
.ZG20C        ANOP  ,                                                   00085100
.*-------------------------------------------------------------------   00085200
.***AG.KCK01 NAME, OPT OUTPUT, KEYS -GPR NOT ALLOWED                    00085300
              AIF   (K'&ZXNUMVALID LE 0).ZG20P  NOT I/O                 00085400
              AIF   ('&XNUMVALID'(1,1) NE '(').ZG20P                    00085500
&ZXNUMVALID   SETC  ''          RESET IN/OUTPUT                         00085600
&ZMS          SETC  '"NUMVALID='                *KGPRA* MNOTE           00085700
&ZMS          SETC  '&ZMS.&NUMVALID"'                                   00085800
&ZMS          SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'           00085900
              MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'                   00086000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00086100
.ZG20P        ANOP  ,                                                   00086200
.*----------------------------------------------------------------***   00086300
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00086400
              AIF   (N'&LINKAGE LE 1).ZG24A     CK NUM                  00086500
&ZMS          SETC  '"LINKAGE='                 *KPOSA* MNOTE           00086600
&ZMS          SETC  '&ZMS.&LINKAGE"'                                    00086700
&ZMS          SETC  '&ZMS "LINKAGE"'                                    00086800
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00086900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00087000
.ZG24A        ANOP  ,                                                   00087100
.*-------------------------------------------------------------------   00087200
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00087300
&XLINKAGE     SETC  ''          INITIALIZE XVARIABLE                    00087400
.ZG25A   AIF   ('&LINKAGE(1)' NE 'SYSTEM').ZG26A                        00087500
&XLINKAGE     SETC  'SYSTEM'    SET KEYWORD                             00087600
.*-------------------------------------------------------------------   00087700
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00087800
.ZG26A   AIF   ('&LINKAGE(1)' NE 'BRANCH').ZG27A                        00087900
&XLINKAGE     SETC  'BRANCH'    SET KEYWORD                             00088000
.*-------------------------------------------------------------------   00088100
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00088200
.ZG27A        AIF   (K'&XLINKAGE GT 0).ZG27C    KEYWORD                 00088300
              AIF   (K'&LINKAGE(1) LE 0).ZG27B                          00088400
&ZMS          SETC  '"LINKAGE='                 *KUKWA* MNOTE           00088500
&ZMS          SETC  '&ZMS.&LINKAGE"'                                    00088600
&ZMS          SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '           00088700
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                 00088800
&ZMS          SETC  '&ZMS "SYSTEM"'                                     00088900
&ZMS          SETC  '&ZMS OR "BRANCH".'                                 00089000
              MNOTE 8,' &ZMS '                                          00089100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00089200
.ZG27B        ANOP  ,                                                   00089300
&XLINKAGE     SETC  'SYSTEM'    SET DEFAULT KEYWORD                     00089400
.ZG27C        ANOP  ,                                                   00089500
&ZXLINKAGE    SETC  'INPUT'     SET IN/OUTPUT                           00089600
.*----------------------------------------------------------------***   00089700
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00089800
              AIF   (N'&RETCODE LE 1).ZG29A     CK NUM                  00089900
&ZMS          SETC  '"RETCODE='                 *KPOSA* MNOTE           00090000
&ZMS          SETC  '&ZMS.&RETCODE"'                                    00090100
&ZMS          SETC  '&ZMS "RETCODE"'                                    00090200
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00090300
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00090400
.ZG29A        ANOP  ,                                                   00090500
.*-------------------------------------------------------------------   00090600
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00090700
              AIF   (K'&RETCODE(1) LE 0).ZG29C  NO PARM                 00090800
&ZXRETCODE    SETC  'OUTPUT'    SET OUTPUT                              00090900
&XRETCODE     SETC  '&RETCODE(1)'               SET XVARIABLE           00091000
              AIF   (N'&RETCODE GT 1).ZG29C                             00091100
&XRETCODE     SETC  '&RETCODE'  SET XVARIABLE                           00091200
.ZG29C        ANOP  ,                                                   00091300
.*-------------------------------------------------------------------   00091400
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00091500
              AIF   (K'&ZXRETCODE LE 0).ZG29R   NOT I/O                 00091600
              AIF   ('&XRETCODE'(1,1) NE '(').ZG29R                     00091700
&ZCGPR        SETC  '&XRETCODE'(2,K'&XRETCODE-2)                        00091800
              AIF   ('&ZCGPR'(1,1) NE '0').ZG29P                        00091900
              AIF   (K'&ZCGPR GT 2).ZG29Q                               00092000
              AIF   ('&ZCGPR' EQ '0').ZG29Q                             00092100
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00092200
              AIF   (T'&ZCGPR NE 'N').ZG29Q     INVALID REG NAME        00092300
.ZG29P        ANOP  ,                                                   00092400
              AIF   (T'&ZCGPR NE 'N').ZG29R     NON NUMERIC             00092500
              AIF   ('&ZCGPR' LT '2').ZG29Q                             00092600
              AIF   ('&ZCGPR' LE '12').ZG29R                            00092700
.ZG29Q        ANOP  ,                                                   00092800
&ZMS          SETC  '"RETCODE='                 *KGPRA* MNOTE           00092900
&ZMS          SETC  '&ZMS.&RETCODE"'                                    00093000
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00093100
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00093200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00093300
.ZG29R        ANOP  ,                                                   00093400
.*----------------------------------------------------------------***   00093500
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00093600
              AIF   (N'&RSNCODE LE 1).ZG32A     CK NUM                  00093700
&ZMS          SETC  '"RSNCODE='                 *KPOSA* MNOTE           00093800
&ZMS          SETC  '&ZMS.&RSNCODE"'                                    00093900
&ZMS          SETC  '&ZMS "RSNCODE"'                                    00094000
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00094100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00094200
.ZG32A        ANOP  ,                                                   00094300
.*-------------------------------------------------------------------   00094400
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00094500
              AIF   (K'&RSNCODE(1) LE 0).ZG32C  NO PARM                 00094600
&ZXRSNCODE    SETC  'OUTPUT'    SET OUTPUT                              00094700
&XRSNCODE     SETC  '&RSNCODE(1)'               SET XVARIABLE           00094800
              AIF   (N'&RSNCODE GT 1).ZG32C                             00094900
&XRSNCODE     SETC  '&RSNCODE'  SET XVARIABLE                           00095000
.ZG32C        ANOP  ,                                                   00095100
.*-------------------------------------------------------------------   00095200
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00095300
              AIF   (K'&ZXRSNCODE LE 0).ZG32R   NOT I/O                 00095400
              AIF   ('&XRSNCODE'(1,1) NE '(').ZG32R                     00095500
&ZCGPR        SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                        00095600
              AIF   ('&ZCGPR'(1,1) NE '0').ZG32P                        00095700
              AIF   (K'&ZCGPR GT 2).ZG32Q                               00095800
              AIF   ('&ZCGPR' EQ '0').ZG32Q                             00095900
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00096000
              AIF   (T'&ZCGPR NE 'N').ZG32Q     INVALID REG NAME        00096100
.ZG32P        ANOP  ,                                                   00096200
              AIF   (T'&ZCGPR NE 'N').ZG32R     NON NUMERIC             00096300
              AIF   ('&ZCGPR' LT '2').ZG32Q                             00096400
              AIF   ('&ZCGPR' LE '12').ZG32R                            00096500
.ZG32Q        ANOP  ,                                                   00096600
&ZMS          SETC  '"RSNCODE='                 *KGPRA* MNOTE           00096700
&ZMS          SETC  '&ZMS.&RSNCODE"'                                    00096800
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00096900
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00097000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00097100
.ZG32R        ANOP  ,                                                   00097200
.*----------------------------------------------------------------***   00097300
.***AG.KXVAR05 VALUE, OPT INPUT, KEYS -XVARIABLE KEY                    00097400
              AIF   (N'&COM LE 1).ZG35A         CK NUM                  00097500
&ZMS          SETC  '"COM='     *KPOSA* MNOTE                           00097600
&ZMS          SETC  '&ZMS.&COM"'                                        00097700
&ZMS          SETC  '&ZMS "COM"'                                        00097800
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00097900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00098000
.ZG35A        ANOP  ,                                                   00098100
.*-------------------------------------------------------------------   00098200
.***AG.KXVAR13 VALUE, OPT INPUT, KEYS -XVARIABLE                        00098300
&ZXCOM        SETC  'INPUT'     SET IN/OUTPUT                           00098400
&XCOM         SETC  'NULL'                                              00098500
              AIF   (K'&COM(1) LE 0).ZG35B      PARM                    00098600
&XCOM         SETC  '&COM(1)'   SET XVARIABLE                           00098700
              AIF   (N'&COM GT 1).ZG35B         MULTI PARMS             00098800
&XCOM         SETC  '&COM'      SET XVARIABLE                           00098900
.ZG35B        ANOP  ,                                                   00099000
.*-------------------------------------------------------------------   00099100
.***AG.KCK01 VALUE, OPT INPUT, KEYS -GPR NOT ALLOWED                    00099200
              AIF   (K'&ZXCOM LE 0).ZG35P       NOT I/O                 00099300
              AIF   ('&XCOM' EQ 'NULL').ZG35P                           00099400
              AIF   ('&XCOM'(1,1) NE '(').ZG35P                         00099500
&ZXCOM        SETC  ''          RESET IN/OUTPUT                         00099600
&ZMS          SETC  '"COM='     *KGPRA* MNOTE                           00099700
&ZMS          SETC  '&ZMS.&COM"'                                        00099800
&ZMS          SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'           00099900
              MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'                   00100000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00100100
.ZG35P        ANOP  ,                                                   00100200
.*-------------------------------------------------------------------   00100300
.***AG.KCK03 VALUE, OPT INPUT, KEYS -CHARACTER LENGTH                   00100400
              AIF   (K'&ZXCOM LE 0).ZG35S       NOT I/O                 00100500
              AIF   ('&XCOM' EQ 'NULL').ZG35S                           00100600
              AIF   (K'&XCOM LE 256).ZG35S      LNG OK                  00100700
&ZXCOM        SETC  ''          RESET IN/OUTPUT                         00100800
&ZMS          SETC  '"COM='     *KLNGA* MNOTE                           00100900
&ZMS          SETC  '&ZMS.&COM"'                                        00101000
&ZMS          SETC  '&ZMS ARGUMENT 1 EXCEEDS THE MAXIMUM'               00101100
              MNOTE 8,' &ZMS LENGTH OF 256 CHARACTERS.'                 00101200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00101300
.ZG35S        ANOP  ,                                                   00101400
.*----------------------------------------------------------------***   00101500
.***AG.KXVAR05 VALUE, OPT INPUT, KEYS -XVARIABLE KEY                    00101600
              AIF   (N'&REM LE 1).ZG38A         CK NUM                  00101700
&ZMS          SETC  '"REM='     *KPOSA* MNOTE                           00101800
&ZMS          SETC  '&ZMS.&REM"'                                        00101900
&ZMS          SETC  '&ZMS "REM"'                                        00102000
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00102100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00102200
.ZG38A        ANOP  ,                                                   00102300
.*-------------------------------------------------------------------   00102400
.***AG.KXVAR13 VALUE, OPT INPUT, KEYS -XVARIABLE                        00102500
&ZXREM        SETC  'INPUT'     SET IN/OUTPUT                           00102600
&XREM         SETC  'NULL'                                              00102700
              AIF   (K'&REM(1) LE 0).ZG38B      PARM                    00102800
&XREM         SETC  '&REM(1)'   SET XVARIABLE                           00102900
              AIF   (N'&REM GT 1).ZG38B         MULTI PARMS             00103000
&XREM         SETC  '&REM'      SET XVARIABLE                           00103100
.ZG38B        ANOP  ,                                                   00103200
.*-------------------------------------------------------------------   00103300
.***AG.KCK01 VALUE, OPT INPUT, KEYS -GPR NOT ALLOWED                    00103400
              AIF   (K'&ZXREM LE 0).ZG38P       NOT I/O                 00103500
              AIF   ('&XREM' EQ 'NULL').ZG38P                           00103600
              AIF   ('&XREM'(1,1) NE '(').ZG38P                         00103700
&ZXREM        SETC  ''          RESET IN/OUTPUT                         00103800
&ZMS          SETC  '"REM='     *KGPRA* MNOTE                           00103900
&ZMS          SETC  '&ZMS.&REM"'                                        00104000
&ZMS          SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'           00104100
              MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'                   00104200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00104300
.ZG38P        ANOP  ,                                                   00104400
.*-------------------------------------------------------------------   00104500
.***AG.KCK03 VALUE, OPT INPUT, KEYS -CHARACTER LENGTH                   00104600
              AIF   (K'&ZXREM LE 0).ZG38S       NOT I/O                 00104700
              AIF   ('&XREM' EQ 'NULL').ZG38S                           00104800
              AIF   (K'&XREM LE 256).ZG38S      LNG OK                  00104900
&ZXREM        SETC  ''          RESET IN/OUTPUT                         00105000
&ZMS          SETC  '"REM='     *KLNGA* MNOTE                           00105100
&ZMS          SETC  '&ZMS.&REM"'                                        00105200
&ZMS          SETC  '&ZMS ARGUMENT 1 EXCEEDS THE MAXIMUM'               00105300
              MNOTE 8,' &ZMS LENGTH OF 256 CHARACTERS.'                 00105400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00105500
.ZG38S        ANOP  ,                                                   00105600
.******************************************************************     00105700
.***AH.P00 CHECK STANDALONE POSITIONAL VARIABLES                        00105800
.******************************************************************     00105900
              ACTR  10000                                               00106000
.*----------------------------------------------------------------***   00106100
.***AH.P02 EXTRA POSITIONALS                                            00106200
              AIF   (N'&SYSLIST LE 0).ZGLISTX   NO EXTRAS               00106300
              AIF   (N'&SYSLIST NE 2).ZGLISTX1  NOT NULL                00106400
              AIF   ('&SYSLIST(1)' NE '').ZGLISTX1  NOT NULL            00106500
              AIF   ('&SYSLIST(2)' EQ '').ZGLISTX  NOT NULL             00106600
.ZGLISTX1     ANOP  ,                                                   00106700
&ZCVAL        SETC  ''          ERROR FIELD                             00106800
&ZAWRK        SETA  0           POSITIONAL NUMBER                       00106900
.ZGLIST2      ANOP  ,                                                   00107000
&ZAWRK        SETA  &ZAWRK+1    NEXT POSITIONAL                         00107100
              AIF   (&ZAWRK GT N'&SYSLIST).ZGLIST3  DONE                00107200
&ZCVAL        SETC '&ZCVAL,&SYSLIST(&ZAWRK)'    EXTRA                   00107300
              AGO   .ZGLIST2                                            00107400
.*                                                                      00107500
.ZGLIST3      ANOP  ,                                                   00107600
&ZCVAL        SETC '&ZCVAL'(2,K'&ZCVAL-1)       STRIP COMMA             00107700
&ZMS          SETC  'POSITIONAL ARGUMENT(S),'   *PPOSA* MNOTE           00107800
&ZMS          SETC  '&ZMS "&ZCVAL"'                                     00107900
&ZMS          SETC  '&ZMS CANNOT BE USED.'                              00108000
&ZMS          SETC  '&ZMS NO POSITIONAL ARGUMENTS'                      00108100
              MNOTE 8,' &ZMS ARE ALLOWED.'                              00108200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00108300
.ZGLISTX      ANOP  ,                                                   00108400
&ZASYSLNDX    SETA  0                                                   00108500
.*******************************************************************    00108600
.***AE.ZMR01 NO CODE GENERATED IF ERRORS DETECTED                       00108700
.*******************************************************************    00108800
              AIF   (&ZMACRET NE 0).ZLX2        ERROR DETECTED          00108900
.*******************************************************************    00109000
.***AE.01  START OF IARR2V MACRO CODE                                   00109100
.*******************************************************************    00109200
              LCLC  &M0M0001                 NAME                       00109300
&M0M0001      SETC  '&XLABEL'                SET NAME                   00109400
              AIF   (K'&XLABEL NE 0).XLAB2                              00109500
&M0M0001      SETC  'M00M&SYSNDX'            DEFAULT NAME               00109600
.*                                                                      00109700
.XLAB2        ANOP  ,                                                   00109800
&M0M0001 DS    0H                             IARR2V-0                  00109900
.*******************************************************************    00110000
.***AE.PR01 PRINT CONTROLS, DEFAULT IS YES                              00110100
.*******************************************************************    00110200
              PUSH  PRINT                                               00110300
              AIF   ('&ZPRINT' NE 'NO').ZPRINTX  TURN PRINT ON          00110400
              PRINT OFF         ++ PR01                                 00110500
              AGO   .ZPRNTXX                                            00110600
.ZPRINTX      PRINT ON                                                  00110700
.ZPRNTXX      ANOP  ,                                                   00110800
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00110900
         GBLA  &SYSALVL                                                 00111000
         AIF   (&ZMACRET NE 0).R2VDONE                                  00111100
         SYSSTATE TEST                                                  00111200
         AIF   (&SYSALVL LE 1 AND '&XRSA64' NE '').R2VFAIL              00111300
         AIF   ('&XWORKREG' EQ '').R2VWRIN                              00111400
         AIF   ('&XWORKREG' EQ ' ').R2VWRIN                             00111500
         AIF   ('&XWORKREG' EQ 'NONE').R2VWRIN                          00111600
         LR    &XWORKREG,13            Save GR 13                       00111700
         CPYA  &XWORKREG,13            Save AR 13                       00111800
         AIF   ('&XRSA64' NE '').R2V64I If input is a 64-bit address    00111900
         SLR   1,1                     Input is a 31-bit address and   X00112000
                                       return page sharing counts       00112100
         AGO   .R2VWRIX                                                 00112200
.R2V64I  ANOP                                                           00112300
         LA    1,1                     Input is a 64-bit address and   X00112400
                                       return page sharing counts       00112500
         AGO   .R2VWRIX                                                 00112600
.R2VWRIN ANOP                                                           00112700
         AIF   ('&XRSA' NE '').R2VWRIA  If input is a 31-bit address    00112800
         LA    1,5                     Input is a 64-bit address and   X00112900
                                       don't return page sharing counts 00113000
         AGO   .R2VWRIX                                                 00113100
.R2VWRIA ANOP                                                           00113200
         LA    1,4                     Input is a 31-bit address and   X00113300
                                       don't return page sharing counts 00113400
.R2VWRIX ANOP                                                           00113500
         SAR   1,1                     Pass it in AR1                   00113600
         AIF   ('&XRSA64' NE '').R2VRSA64                               00113700
         AIF   ('&XRSA' EQ '(1)').R2VCALL                               00113800
         AIF   ('&XRSA'(1,1) EQ '(').R2VRSAR                            00113900
         L     1,&XRSA                 Get RSA                          00114000
         AGO   .R2VCALL                                                 00114100
.R2VRSAR LR    1,&XRSA                 Get RSA                          00114200
         AGO   .R2VCALL                                                 00114300
.R2VRSA64 ANOP                                                          00114400
         AIF   ('&XRSA64' EQ '(1)').R2VCALL                             00114500
         AIF   ('&XRSA64'(1,1) EQ '(').R2V64R                           00114600
         LG    1,&XRSA64               Get RSA64                        00114700
         AGO   .R2VCALL                                                 00114800
.R2V64R  LGR   1,&XRSA64               Get RSA64                        00114900
.R2VCALL AIF   ('&XLINKAGE' EQ 'SYSTEM').R2VPC                          00115000
         AIF   ('&XLINKAGE' EQ 'BRANCH').R2VBALR                        00115100
         AGO   .R2VRET                                                  00115200
.R2VPC   L     14,16                   Get CVT address                  00115300
         L     14,772(14,0)            Get function table address       00115400
         L     14,208(14,0)            Get LX for IARR2V service        00115500
         LA    15,13                   Get EX for IARR2V service        00115600
         OR    14,15                   Get PC number                    00115700
         PC    0(14)                   Call IARWTRVX                    00115800
         AGO   .R2VRET                                                  00115900
.R2VBALR L     15,16                   Get CVT address                  00116000
         L     15,356(15,0)            Get PVT address                  00116100
         L     15,16(15,0)             Get PVT extention address        00116200
         L     15,20(15,0)             Get IARWTRV entry point          00116300
         BASSM 14,15                   Call IARWTRV                     00116400
.R2VRET  ANOP                                                           00116500
         AIF   ('&XWORKREG' EQ '').R2VWROX                              00116600
         AIF   ('&XWORKREG' EQ ' ').R2VWROX                             00116700
         AIF   ('&XWORKREG' EQ 'NONE').R2VWROX                          00116800
         LR    13,&XWORKREG            Restore GR 13                    00116900
         CPYA  13,&XWORKREG            Restore AR 13                    00117000
.R2VWROX ANOP                                                           00117100
         AIF   ('&XVSA' EQ '' AND '&XASID' EQ '' AND                   *00117200
               '&XSTOKEN' EQ '').R2VDONE                                00117300
         C     15,=F'8'                Bad return code?                 00117400
         BNL   R2V&SYSNDX              No...continue                    00117500
         AIF   ('&XVSA' EQ '(1)' OR '&XVSA' EQ '').R2VVSAX              00117600
         AIF   ('&XVSA'(1,1) EQ '(').R2VVSAR                            00117700
         ST    1,&XVSA                 Save VSA                         00117800
         AGO   .R2VVSAX                                                 00117900
.R2VVSAR LR    &XVSA,1                 Save VSA                         00118000
.R2VVSAX ANOP                                                           00118100
         AIF   ('&XASID' EQ '(0)' OR '&XASID' EQ '').R2VASIX            00118200
         AIF   ('&XASID'(1,1) EQ '(').R2VASIR                           00118300
         ST    0,&XASID                Save ASID                        00118400
         AGO   .R2VASIX                                                 00118500
.R2VASIR LR    &XASID,0                Save ASID                        00118600
.R2VASIX ANOP                                                           00118700
         AIF   ('&XSTOKEN' EQ '').R2VSTKX                               00118800
         STAM  0,1,&XSTOKEN            Save STOKEN                      00118900
.R2VSTKX ANOP                                                           00119000
         AIF   ('&XWORKREG' EQ '').R2VWRXX                              00119100
         AIF   ('&XWORKREG' EQ ' ').R2VWRXX                             00119200
         AIF   ('&XWORKREG' EQ 'NONE').R2VWRXX                          00119300
         AIF   ('&XNUMVIEW' EQ '').R2VNVWX                              00119400
         STAM  14,14,&XNUMVIEW         Save NUMVIEW                     00119500
.R2VNVWX ANOP                                                           00119600
         AIF   ('&XNUMVALID' EQ '').R2VNVLX                             00119700
         STAM  15,15,&XNUMVALID        Save NUMVALID                    00119800
         AGO   .R2VNVLX                                                 00119900
.R2VFAIL ANOP                                                           00120000
         MNOTE 8,'TO USE KEYWORD "RSA64", THE SYSSTATE MACRO MUST BE INx00120100
               VOKED WITH ARCHLVL GREATER THAN 1.'                      00120200
.R2VNVLX ANOP                                                           00120300
.R2VWRXX ANOP                                                           00120400
R2V&SYSNDX  DS    0H                                                    00120500
.R2VDONE ANOP                                                           00120600
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00120700
.********************************************************************   00120800
.***AL.A01  INTERNAL ARRAY TO PRODUCE FORMATTED CODE                    00120900
.********************************************************************   00121000
                      LCLA  &ZOPN          LIST INSTRUCTION INDEX       00121100
                      LCLA  &ZOPN1         INVOCATION INDEX             00121200
                      LCLC  &ZOPL(4095)    LABEL                        00121300
                      LCLC  &ZOPO(4095)    OPERATION                    00121400
                      LCLC  &ZOPV(4095)    VALUE                        00121500
                      LCLC  &ZOPD(4095)    DESCRIPTION                  00121600
.*                                                                      00121700
&ZOPN                 SETA  0              INITIAL INST INDEX VALUE     00121800
.*******************************************************************    00121900
.***AO.X02  RETURN CODE PROCESSING                                      00122000
.*******************************************************************    00122100
                      AIF   (N'&RETCODE LE 0).ZMRETX                    00122200
                      AIF   ('&XRETCODE'(1,1) EQ '(').ZMRET2            00122300
                      AIF   ('&XRETCODE' EQ 'GPR15').ZMRETX             00122400
                      AIF   ('&XRETCODE' EQ 'REG15').ZMRETX             00122500
                      AIF   ('&XRETCODE' EQ 'R15').ZMRETX               00122600
                      AIF   ('&XRETCODE' EQ '15').ZMRETX                00122700
&ZOPN                 SETA  &ZOPN+1                                     00122800
&ZOPL(&ZOPN)          SETC  ' '                                         00122900
&ZOPO(&ZOPN)          SETC  'ST'                                        00123000
&ZOPV(&ZOPN)          SETC  '15,&XRETCODE'                              00123100
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00123200
                      AGO   .ZMRETX                                     00123300
.*                                                                      00123400
.ZMRET2               ANOP  ,                                           00123500
&ZCGPR                SETC  '&XRETCODE'(2,K'&XRETCODE-2)                00123600
                      AIF   ('&ZCGPR' EQ 'GPR15').ZMRETX                00123700
                      AIF   ('&ZCGPR' EQ 'REG15').ZMRETX                00123800
                      AIF   ('&ZCGPR' EQ 'R15').ZMRETX                  00123900
                      AIF   ('&ZCGPR' EQ '15').ZMRETX                   00124000
&ZOPN                 SETA  &ZOPN+1                                     00124100
&ZOPL(&ZOPN)          SETC  ' '                                         00124200
&ZOPO(&ZOPN)          SETC  'LR'                                        00124300
&ZOPV(&ZOPN)          SETC  '&ZCGPR,15'                                 00124400
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00124500
.ZMRETX               ANOP  ,                                           00124600
.*******************************************************************    00124700
.***AO.X03  REASON CODE PROCESSING                                      00124800
.*******************************************************************    00124900
                      AIF   (N'&RSNCODE LE 0).ZMRSNX                    00125000
                      AIF   ('&XRSNCODE'(1,1) EQ '(').ZMRSN2            00125100
                      AIF   ('&XRSNCODE' EQ 'GPR0').ZMRSNX              00125200
                      AIF   ('&XRSNCODE' EQ 'GPR00').ZMRSNX             00125300
                      AIF   ('&XRSNCODE' EQ 'REG0').ZMRSNX              00125400
                      AIF   ('&XRSNCODE' EQ 'REG00').ZMRSNX             00125500
                      AIF   ('&XRSNCODE' EQ 'R0').ZMRSNX                00125600
                      AIF   ('&XRSNCODE' EQ '0').ZMRSNX                 00125700
                      AIF   ('&XRSNCODE' EQ '00').ZMRSNX                00125800
&ZOPN                 SETA  &ZOPN+1                                     00125900
&ZOPL(&ZOPN)          SETC  ' '                                         00126000
&ZOPO(&ZOPN)          SETC  'ST'                                        00126100
&ZOPV(&ZOPN)          SETC  '0,&XRSNCODE'                               00126200
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00126300
                      AGO   .ZMRSNX                                     00126400
.*                                                                      00126500
.ZMRSN2               ANOP  ,                                           00126600
&ZCGPR                SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                00126700
                      AIF   ('&ZCGPR' EQ 'GPR0').ZMRSNX                 00126800
                      AIF   ('&ZCGPR' EQ 'GPR00').ZMRSNX                00126900
                      AIF   ('&ZCGPR' EQ 'REG0').ZMRSNX                 00127000
                      AIF   ('&ZCGPR' EQ 'REG00').ZMRSNX                00127100
                      AIF   ('&ZCGPR' EQ 'R0').ZMRSNX                   00127200
                      AIF   ('&ZCGPR' EQ '0').ZMRSNX                    00127300
                      AIF   ('&ZCGPR' EQ '00').ZMRSNX                   00127400
&ZOPN                 SETA  &ZOPN+1                                     00127500
&ZOPL(&ZOPN)          SETC  ' '                                         00127600
&ZOPO(&ZOPN)          SETC  'LR'                                        00127700
&ZOPV(&ZOPN)          SETC  '&ZCGPR,0'                                  00127800
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00127900
.ZMRSNX               ANOP  ,                                           00128000
.*******************************************************************    00128100
.***AO.X05  FORMAT GENERATED INSTRUCTIONS                               00128200
.*******************************************************************    00128300
                      ACTR  10000                                       00128400
.*                                                                      00128500
                      LCLA  &ZLC           COLUMN POSITION              00128600
                      LCLA  &ZOPX          LIST TABLE INDEX             00128700
                      LCLC  &ZLL           LABEL                        00128800
                      LCLC  &ZLOP          OPERATION                    00128900
                      LCLC  &ZLV           VALUE                        00129000
                      LCLC  &ZLD           DESCRIPTION                  00129100
.*                                                                      00129200
&ZOPX                 SETA  1                                           00129300
.*******************************************************************    00129400
.***AP.X01  FORMAT GENERATED CODE                                       00129500
.ZL21                 AIF   (&ZOPX GT &ZOPN).ZLX1  B IF DONE            00129600
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00129700
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00129800
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00129900
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00130000
                      AIF   (K'&ZLD LE 0).ZL51                          00130100
&ZLC                  SETA  35             COMMENT COLUMN               00130200
                      AIF   ('&ZLD'(1,1) NE '*').ZL31                   00130300
&ZLC                  SETA  33             COMMENT COLUMN               00130400
.ZL31                 AIF   (K'&ZLV GE &ZLC-16-1).ZL41                  00130500
&ZLV                  SETC  '&ZLV'.' '                                  00130600
                      AGO   .ZL31                                       00130700
.*                                                                      00130800
.ZL41                 ANOP  ,                                           00130900
&ZLV                  SETC  '&ZLV'.' '                                  00131000
.ZL51                 ANOP  ,                                           00131100
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00131200
.*                                                                      00131300
&ZLL     &ZLOP &ZLV                                                     00131400
.*                                                                      00131500
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00131600
                      AGO   .ZL21          CONTINUE LOOPING             00131700
.*                                                                      00131800
.ZLX1                 ANOP  ,                                           00131900
.*******************************************************************    00132000
.***AP.X02  END OF IARR2V MACRO                                         00132100
&ZIARR2V              SETC  'YES'          SET IARR2V USED              00132200
         POP   PRINT                                                    00132300
*                                            IARR2V-0                   00132400
         SPACE 1                                                        00132500
.ZLX2                 ANOP  ,                                           00132600
         MEND                                                           00132700
**********************************************************************/ 00132800
*/*PB.OC01 INVOKE MACRO---------------------------------------------*/  00132900
*%IARR2V: MACRO KEYS(RSA,RSA64,VSA,ASID,STOKEN,WORKREG,NUMVIEW,         00133000
*                 NUMVALID,LINKAGE,RETCODE,RSNCODE,COM,REM);            00133100
*  ANS('?'||MACLABEL||' '||'IARR2VP '||MACLIST||                        00133200
*         ' '||MACKEYS||';') COL(MACLMAR);                              00133300
*%END IARR2V;                                                           00133400
