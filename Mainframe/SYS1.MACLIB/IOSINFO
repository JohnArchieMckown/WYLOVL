* %/*                                                                   00050000
         MACRO                                                          00100000
&NAME    IOSINFO  &FUNCTN=,&UCB=,&OUTPUT=,&RTNCODE=                     00150000
.********************************************************************** 00200000
.*01* MACRO NAME = IOSINFO                                            * 00250000
.*                                                                    * 00300000
.*01* DESCRIPTIVE NAME = INFO - UCB Information                       * 00350000
.*                                                                    * 00400000
.*01* COPYRIGHT =                                                     * 00450000
.*     5740-XC6                                                       * 00500000
.*     THIS MACRO IS "RESTRICTED MATERIALS OF IBM"                    * 00550000
.*     (C) COPYRIGHT IBM CORP. 1984, 1986                             * 00600000
.*     LICENSED MATERIALS - PROPERTY OF IBM                           * 00650000
.*                                                                    * 00700000
.*01* STATUS = JBB2220                                                * 00750000
.*                                                                    * 00800000
.*01* MACRO CALL                                                      * 00850000
.*         ASSEMBLER-H -                                              * 00900000
.*    LABEL IOSINFO  FUNCTN=x,UCB=(reg)|addr,OUTPUT=(reg)|addr,       * 00950000
.*                   RTNCODE=(reg)|addr                               * 01000000
.*                                                                    * 01050000
.*          PLS3  -                                                   * 01100000
.*    ?LABEL: IOSINFO  FUNCTN(x) UCB(variable name)                   * 01150000
.*            OUTPUT(variable name) RTNCODE(variable name)            * 01200000
.*                                                                    * 01250000
.*01* FUNCTION - IOSINFO is an IOS service routine which allows       * 01300000
.*               the caller to obtain information from IOS            * 01350000
.*               without being dependent on the location or           * 01400000
.*               format of the information as maintained by IOS.      * 01450000
.*                                                                    * 01500000
.*01* RESTRICTIONS = None                                             * 01550000
.*                                                                    * 01600000
.*01* REGISTER CONVENTIONS -                                          * 01650000
.*           ENTRY REGISTERS                                          * 01700000
.*                   0   Used as a work register.                     * 01750000
.*                   1   Will be used to pass the UCB common segment  * 01800000
.*                       address to the service routine.              * 01850000
.*                  13   Must point to an 18 word save area.          * 01900000
.*                  14   Return address.                              * 01950000
.*                  15   Entry point address.                         * 02000000
.*           EXIT REGISTERS                                           * 02050000
.*                   1   Will contain the information for the         * 02100000
.*                       OUTPUT operand upon return.                  * 02150000
.*                  15   Return code.                                 * 02200000
.*                                                                    * 02250000
.*01* INPUT -                                                         * 02300000
.*           Users of the IOSINFO MACRO must be in 31 BIT mode.       * 02350000
.*                  All addresses must be 31 BIT addresses.           * 02400000
.*                                                                    * 02450000
.*                                                                    * 02500000
.*           LABEL  - Optional                                        * 02550000
.*                                                                    * 02600000
.*           FUNCTN=  Specifies the type of information requested     * 02650000
.*                    from IOS.                                       * 02700000
.*                  SUBCHNO - Obtain a subchannel number for a        * 02750000
.*                            given UCB.                              * 02800000
.*                                                                    * 02850000
.*           UCB=   Register or fullword storage location.            * 02900000
.*                  Fullword value which contains the base            * 02950000
.*                  address of the UCB to be queried.                 * 03000000
.*                                                                    * 03050000
.*           OUTPUT= Register or fullword storage location.           * 03100000
.*                   Fullword value that is to contain the requested  * 03150000
.*                   information upon return.                         * 03200000
.*                     For FUNCTN=SUBCHNO, OUTPUT contains the        * 03250000
.*                     subsystem identification word (SID). The       * 03300000
.*                     SID is a fullword value that identifies the    * 03350000
.*                     subchannel. The first halfword is X'0001',     * 03400000
.*                     and the last halfword contains the subchannel  * 03450000
.*                     number.                                        * 03500000
.*                                                                    * 03550000
.*           RTNCODE= Register or fullword storage location.          * 03600000
.*                    Return code:                                    * 03650000
.*                      0 - SUCCESSFUL                                * 03700000
.*                      4 - UNSUCCESSFUL                              * 03750000
.*                                                                    * 03800000
.*01* OUTPUT -                                                        * 03850000
.*           OUTPUT  - Contains the requested information if          * 03900000
.*                     successful.                                    * 03950000
.*           RTNCODE - Contains the return code.                      * 04000000
.*                                                                    * 04050000
.*01* DEPENDENCIES -  None                                            * 04100000
.*                                                                    * 04150000
.*01* ATTRIBUTES - A bilingual executable macro.                      * 04200000
.*           STATE: Supervisor or Problem program.                    * 04250000
.*           KEY:   Any.                                              * 04300000
.*           MODE:  Any (TASK, SRB).                                  * 04350000
.*           SERIALIZATION:  Locked or Unlocked.                      * 04400000
.*           TYPE:  Reentrant.                                        * 04450000
.*                                                                    * 04500000
.*01* RESTRICTIONS -  FOR PLS PROGRAMS:                               * 04550000
.*                       - The UCB variable must be PTR(31).          * 04600000
.*                       - The OUTPUT variable must be FIXED(32).     * 04650000
.*                       - The RTNCODE variable must be FIXED(31).    * 04700000
.*                 -  FOR BAL PROGRAMS:                               * 04750000
.*                       - Do not use register 15 for OUTPUT.         * 04800000
.*                                                                    * 04850000
.*01* MODULE TYPE  -  MACRO                                           * 04900000
.*                                                                    * 04950000
.*01* PROCESSOR    -  ASSEMBLER-H AND PLS3                            * 05000000
.*                                                                    * 05050000
.*01* NOTES -                                                         * 05100000
.*         The subchannel is not tied to the UCB after NIP processing.* 05150000
.*         If the UCB is not connected at the time of service routine * 05200000
.*         invocation, return code 4 will be given. However, should   * 05250000
.*         the UCB and subchannel become not-connected or connected   * 05300000
.*         at a later point, no notification will be given.           * 05350000
.*         i.e. They may not be connected upon return from the        * 05400000
.*         service routine.                                           * 05450000
.*                                                                    * 05500000
.*                                                                    * 05550000
.*                                                                    * 05600000
.*                                                                    * 05650000
.*         THE FOLLOWING MACROS ARE REQUIRED:                         * 05700000
.*                CVT  DSECT=YES                                      * 05750000
.*                PSA  DSECT=YES                                      * 05800000
.*                EPILOG (necessary only in PLS)                      * 05850000
.*                                                                    * 05900000
.*         Registers 0,1,14,15 may be destroyed by the macro.         * 05950000
.*         Registers 2 - 13 will be maintained across the interface.  * 06000000
.*                                                                    * 06050000
.*01* CHANGE ACTIVITY -                                               * 06100000
.*                                                                    * 06150000
.*    $MAC(IOSINFO) COMP(SC1C3): Interface to IOS service routine.    * 06200000
.*                                                                    * 06250000
.*    PN  REASON  RLSE    DATE   ORG   COMMENTS                       * 06300000
.*    $D0=DCR22   JBB2133 830919 PDLD: New Macro                      * 06350000
.*    $P1=PAE0235 JBB2133 840119 PDLD: Need R15 as IECVGENA base   @P1A 06400000
.*    $L1=VERS    HBB3310 860416 PDLE: Versioning macro into product  * 06450000
.*                                                                 @L1A 06500000
.*                                                                    * 06516600
.*    $01=OY47085 JBB3313 910911 PDMC: Support for OY43794.        @01A 06533200
.********************************************************************** 06550000
.*                                                                      06600000
.*                                                                      06650000
         LCLC  &OUTREG,&RTNREG,&UCBREG                                  06700000
         LCLC  &ERR,&LABEL                                              06750000
.*                                                                      06800000
&LABEL   SETC  '&NAME'                     SET UP LABEL                 06850000
&OUTREG  SETC  '1'                         REGISTER FOR &OUTPUT         06900000
&RTNREG  SETC  '15'                        REGISTER FOR &RTNCODE        06950000
&UCBREG  SETC  '1'                         REGISTER FOR &UCB            07000000
&ERR     SETC  '0'                         INITIALIZE TO NO ERRORS      07050000
.*                                                                      07100000
         AIF   ('&FUNCTN' NE '').TEST1                                  07150000
         MNOTE 8,'*** FUNCTN PARAMETER IS REQUIRED.'                    07200000
&ERR     SETC  '8'                         INDICATE ERROR               07250000
         AGO   .TEST2                                                   07300000
.*                                                                      07350000
.TEST1   AIF   ('&FUNCTN' EQ 'SUBCHNO').TEST2                           07400000
         MNOTE 8,'*** FUNCTN=&FUNCTN IS INVALID.'                       07450000
&ERR     SETC  '8'                         INDICATE ERROR               07500000
.*                                                                      07550000
.TEST2   AIF   ('&UCB' NE '').TEST3                                     07600000
         MNOTE 8,'*** UCB PARAMETER IS REQUIRED.'                       07650000
&ERR     SETC  '8'                         INDICATE ERROR               07700000
.*                                                                      07750000
.TEST3   AIF   ('&OUTPUT' NE '' AND '&RTNCODE' NE '').TEST4             07800000
         MNOTE 8,'*** A REQUIRED KEYWORD PARAMETER HAS NOT BEEN SUPPLIEX07850000
               D. OUTPUT AND RTNCODE MUST BE SPECIFIED.'                07900000
&ERR     SETC  '8'                         INDICATE ERROR               07950000
.*                                                                      08000000
.TEST4   AIF   ('&OUTPUT' EQ '(&RTNREG)').PRMERR   ILLEGAL REGISTER     08050000
         AIF   ('&ERR' EQ '8').ERREND      DO NOT GENERATE CODE         08100000
.*                                                                      08150000
.*    GENERATE ASSEMBLER CODE                                           08200000
.*                                        PUT UCB ADDRESS IN &UCBREG    08250000
         AIF   ('&UCB' EQ '(&UCBREG)').SKP   SKIP IF UCB IN UCBREG      08300000
         AIF   ('&UCB'(1,1) EQ '(').REG      RR FORMAT                  08350000
&LABEL   L     &UCBREG,&UCB                LOAD UCB ADDRESS             08400000
         AGO   .NULLAB                                                  08450000
.REG     ANOP                              RR FORMAT                    08500000
&LABEL   LR    &UCBREG,&UCB(1)             LOAD UCB ADDRESS             08550000
.*                                                                      08600000
.NULLAB  ANOP                              SET LABEL NULL               08650000
&LABEL   SETC  ''                          INDICATE LABEL SET           08700000
.SKP     ANOP                                                           08750000
.*                                                                      08800000
&LABEL   L     15,CVTPTR(0,0)              GET CVT POINTER              08850000
         L     15,CVTIXAVL-CVTMAP(0,15)    GET IOCOM POINTER            08900000
         L     15,84(0,15)                 GET IECVGENA ENTRY PT   @P1C 08950000
         BAL   14,28(0,15)                 IOS SUBCHANL ID ROUTINE @P1C 09000000
.*                                                                      09050000
         AIF ('&OUTPUT'(1,1) EQ '(').REG1  OUTPUT ADDRESS IN REGISTER   09100000
         ST    &OUTREG,&OUTPUT             GET SID                      09150000
         AGO   .INF010                                                  09200000
.REG1    ANOP                                                           09250000
         AIF ('&OUTPUT' EQ '(&OUTREG)').INF010  SKIP IF ALREADY THERE   09300000
         LR    &OUTPUT(1),&OUTREG          GET SID                      09350000
.*                                                                      09400000
.INF010  ANOP                                                           09450000
         AIF ('&RTNCODE'(1,1) EQ '(').REG2 RTNCODE ADDRESS IN REGISTER  09500000
         ST    &RTNREG,&RTNCODE            GET RETURN CODE              09550000
         AGO   .END                                                     09600000
.REG2    ANOP                                                           09650000
         AIF ('&RTNCODE' EQ '(&RTNREG)').END     SKIP IF ALREADY THERE  09700000
         LR    &RTNCODE(1),&RTNREG         GET RETURN CODE              09750000
         MEXIT                                                          09800000
.*                                                                      09850000
.PRMERR  MNOTE 8,'*** OUTPUT=&OUTPUT CONFLICTS WITH THE RETURN CODE REGX09900000
               ISTER. USE A DIFFERENT REGISTER OR VALUE FOR OUTPUT.'    09950000
.*                                                                      10000000
.ERREND  MNOTE 8,'*** INVALID PARAMETERS ENCOUNTERED. NO CODE GENERATEDX10050000
               .'                                                       10100000
.END     MEND                                                           10150000
         EJECT                                                          10200000
         */                                                             10250000
 IOSINFO:                                                               10300000
   MACRO                                                                10350000
   KEYS(FUNCTN,UCB,OUTPUT,RTNCODE);                                     10400000
   /*  EXTERNAL VARIABLES                                            */ 10450000
   DCL  EHAREGS  CHAR   EXT;       /* REGS TO BE DCLD BY EPILOG      */ 10500000
   DCL  EHARC    FIXED  EXT;       /* FOR ERROR RC FROM MACRO        */ 10550000
   /*  INTERNAL VARIABLES                                            */ 10600000
   DCL  ERR      FIXED;            /* FLAG FOR ERROR FOUND           */ 10650000
   DCL  ERRCODE  FIXED;            /* RETURN CODE IF ERRORS          */ 10700000
   DCL  ERRMSG   CHAR;             /* ERROR MESSAGE TO PRINT         */ 10750000
   DCL  GPR1     CHAR;             /* REG 1  MUST BE RESPECIFIED     */ 10800000
   DCL  GPR15    CHAR;             /* REG 15 MUST BE RESPECIFIED     */ 10850000
   DCL  INDENT   FIXED;            /* INDENT VALUE FOR LISTING       */ 10900000
   DCL  IMACRO   CHAR;             /* MACRO PARAMETERS               */ 10950000
  @SPACE(1);                                                            11000000
   IMACRO=' ?'||MACLABEL||MACNAME||MACLIST||' '||MACKEYS||' ';          11050000
   GPR1  =  ' GPR01F';             /* REG 1  MUST BE RESPECIFIED     */ 11100000
   GPR15 =  ',GPR15F';             /* REG 15 MUST BE RESPECIFIED     */ 11150000
   ERR = 8;                        /* ERROR SEVERITY                 */ 11200000
   ERRCODE=0;                      /* INITIALIZE ERROR CODE          */ 11250000
   IF (MACCOL > 42) THEN                                                11300000
      INDENT=MACLMAR+3;            /* ENSURE BAL GEN'D ON ONE LINE   */ 11350000
   ELSE INDENT=MACCOL+2;           /* INDENT TWO COLUMNS FOR FORMAT  */ 11400000
  @SPACE(1);                                                            11450000
   IF MACLABEL^='' THEN            /* GENERATE MACLABEL              */ 11500000
      ANS(MACLABEL)  COL(MACLMAR);                                      11550000
   ANS('DO; '|| COMMENT(IMACRO)) COL(MACCOL); /* START CODE & LIST      11600000
                                                 MACRO PARAMETERS*/     11650000
   IF NUMBER(MACLIST) > 0 THEN DO;        /* CHECK FOR POSITIONALS   */ 11700000
     ERRMSG = 'A POSITIONAL PARAMETER HAS BEEN SUPPLIED, NONE EXIST.';  11750000
     ANS MSG(ERRMSG);                                                   11800000
     ANS (COMMENT(ERRMSG)) COL(INDENT);                                 11850000
     ERRCODE = ERR;                                                     11900000
     END;                                                               11950000
   IF FUNCTN = '' THEN DO;                         /* TEST FUNCTN    */ 12000000
      ERRMSG ='FUNCTN PARAMETER IS REQUIRED.';                          12050000
      ANS MSG(ERRMSG);                                                  12100000
      ANS(COMMENT(ERRMSG)) COL(INDENT);                                 12150000
      ERRCODE=ERR;                                                      12200000
      END;                                                              12250000
   ELSE                                                                 12300000
   IF FUNCTN(1) ^= 'SUBCHNO' THEN DO;              /* TEST FUNCTN    */ 12350000
      ERRMSG ='FUNCTN '||FUNCTN||' IS INVALID.';                        12400000
      ANS MSG(ERRMSG);                                                  12450000
      ANS(COMMENT(ERRMSG)) COL(INDENT);                                 12500000
      ERRCODE=ERR;                                                      12550000
      END;                                                              12600000
   IF UCB = '' THEN DO;                            /* TEST UCB       */ 12650000
      ERRMSG ='UCB PARAMETER IS REQUIRED.';                             12700000
      ANS MSG(ERRMSG);                                                  12750000
      ANS(COMMENT(ERRMSG)) COL(INDENT);                                 12800000
      ERRCODE=ERR;                                                      12850000
      END;                                                              12900000
   IF OUTPUT='' | RTNCODE=''  THEN                                      12950000
      DO;                                 /* TEST OUTPUT AND RTNCODE */ 13000000
      ERRMSG ='A REQUIRED KEYWORD PARAMETER HAS NOT BEEN SUPPLIED.'     13050000
            ||'OUTPUT AND RTNCODE MUST BE SPECIFIED.';                  13100000
      ANS MSG(ERRMSG);                                                  13150000
      ANS(COMMENT(ERRMSG)) COL(INDENT);                                 13200000
      ERRCODE=ERR;                                                      13250000
      END;                                                              13300000
    @SPACE;                                                             13350000
 IF ERRCODE =ERR THEN              /* ANY PARAMETER ERRORS?          */ 13400000
    DO;                            /* YES                            */ 13450000
      ANS(COMMENT('INVALID PARAMETERS ENCOUNTERED. NO CODE GENERATED;') 13500000
       ) COL(INDENT);              /* PRINT ERROR MESSAGE            */ 13550000
      ANS('END; '||COMMENT(IMACRO)) COL(MACCOL);                        13600000
      IF ERRCODE > EHARC THEN EHARC = ERRCODE; /* SET GLOBAL RC      */ 13650000
      RETURN CODE(ERRCODE);        /* RETURN WITH NON-ZERO RETURN       13700000
                                      CODE                           */ 13750000
    END;                                                                13800000
 /*                 DECLARE REGISTERS IF NECESSARY                   */ 13850000
 IF INDEX(EHAREGS,'01F')=0 THEN    /* HAS REG1 BEEN DECLARED         */ 13900000
    EHAREGS=EHAREGS||'01F';        /*  NO, ADD TO EHAREGS            */ 13950000
 IF INDEX(EHAREGS,'15F')=0 THEN    /* HAS REG15 BEEN DECLARED        */ 14000000
    EHAREGS=EHAREGS||'15F';        /*  NO, ADD TO EHAREGS            */ 14050000
 /*                 PRODUCE PLS CODE                                 */ 14100000
 ANS('RFY('||GPR1||GPR15||') RSTD; ')    COL(INDENT);                   14150000
 ANS('GPR01F='||UCB(1)||'; '    ||                                      14200000
    COMMENT(' REG1 = UCB ADDRESS '))     COL(INDENT);                   14250000
 ANS('GEN (L     15,CVTPTR(0,0)); '||                                   14300000
    COMMENT(' GET CVT POINTER '))        COL(INDENT);                   14350000
 ANS('GEN (L     15,CVTIXAVL-CVTMAP(0,15))                              14400000
    REFS(CVTIXAVL); '           ||                                      14450000
    COMMENT(' GET IOCOM POINTER '))      COL(INDENT);                   14500000
 ANS('GEN (L     15,84(0,15)); '||                                      14550000
    COMMENT(' GET IECVGENA ENTRY PT '))  COL(INDENT);                   14600000
 ANS('GEN (BAL   14,28(0,15)); '||                                      14650000
    COMMENT(' IOS SUBCHANL ID ROUTINE ')) COL(INDENT);                  14700000
 ANS(OUTPUT(1) ||'=GPR01F; '    ||                                      14750000
    COMMENT(' GET SID '))                COL(INDENT);                   14800000
 ANS(RTNCODE(1)||'=GPR15F; '    ||                                      14850000
    COMMENT(' GET RETURN CODE '))        COL(INDENT);                   14900000
 ANS('RFY('||GPR1||GPR15||') UNRSTD; ')  COL(INDENT);                   14950000
 ANS('END; '||COMMENT(IMACRO))  COL(MACCOL); /* END CODE & LIST         15000000
                                                MACRO PARAMETERS    */  15050000
 RETURN CODE(ERRCODE);             /* RETURN SUCCESSFUL             */  15100000
 %END IOSINFO;                                                          15150000
