*/**** START OF SPECIFICATIONS **************************************** 00000100
*                                                                     * 00000200
*                                                                     * 00000300
*01* MACRO NAME:  IXLFCOMP                              -09/18/96-<0> * 00000400
*                                                                     * 00000500
*                                                                     * 00000600
*01* DESCRIPTIVE NAME:  Force Asynchronous Request Completion         * 00000700
*                                                                     * 00000800
*01* PROPRIETARY STATEMENT:                                           * 00000900
*                                                                     * 00001000
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 00001100
*     THIS MACRO IS "RESTRICTED MATERIALS OF IBM"                     * 00001200
*     5655-068 (C) COPYRIGHT IBM CORP. 1993, 1994                     * 00001300
*                                                                     * 00001400
* STATUS= HBB5520                                                     * 00001500
*                                                                     * 00001600
*                                                                     * 00001700
*                                                                     * 00001800
*01* FUNCTION:                                                        * 00001900
*                                                                     * 00002000
*                                                                     * 00002100
*      The IXLFCOMP service routine is given control from the         * 00002200
*      IXLFCOMP macro.  This service forces completion of and/or      * 00002300
*      returns status information for a previously initiated IXLLIST  * 00002400
*      or IXLCACHE request.                                           * 00002500
*                                                                     * 00002600
*01* EXTERNAL CLASSIFICATION:  GUPI                                   * 00002700
*                                                                     * 00002800
*01* END OF EXTERNAL CLASSIFICATION:                                  * 00002900
*                                                                     * 00003000
*01* ENVIRONMENT:                                                     * 00003100
*                                                                     * 00003200
*                                                                     * 00003300
*      Minimum authorization: Supervisor state and PSW key 0-7.       * 00003400
*                                                                     * 00003500
*      Dispatchable unit mode: Task or SRB mode.                      * 00003600
*                                                                     * 00003700
*      Cross Memory Mode: Any PASN, any HASN, any SASN.               * 00003800
*                                                                     * 00003900
*                        The current primary address space must be    * 00004000
*                        the same as the primary address space at the * 00004100
*                        time the connection service, IXLCONN, was    * 00004200
*                        issued for the structure.                    * 00004300
*                                                                     * 00004400
*      AMODE:            31-bit.                                      * 00004500
*                                                                     * 00004600
*      ASC mode:         Primary or Access Register.                  * 00004700
*                                                                     * 00004800
*      Interrupt status: Enabled or disabled for I/O and external     * 00004900
*                        interrupts.                                  * 00005000
*                                                                     * 00005100
*      Locks:            Disabled callers must be legally disabled by * 00005200
*                        holding the CPU lock and cannot hold other   * 00005300
*                        disabled locks (invocation by DIE routines   * 00005400
*                        is not supported).  Enabled callers must not * 00005500
*                        hold any locks.  When OPTYPE=COMPLETE is     * 00005600
*                        specified the caller must be enabled.        * 00005700
*                                                                     * 00005800
*      Control parameters:                                            * 00005900
*                                                                     * 00006000
*                                                                     * 00006100
*                        1.  The caller's parameter list must be      * 00006200
*                            addressable in the caller's primary      * 00006300
*                            address space.                           * 00006400
*                                                                     * 00006500
*                        2.  If the caller is running in Access       * 00006600
*                            Register ASC mode and specifies a macro  * 00006700
*                            parameter using explicit register        * 00006800
*                            notation the access register             * 00006900
*                            corresponding to the general register    * 00007000
*                            must appropriately qualify the general   * 00007100
*                            register.                                * 00007200
*                                                                     * 00007300
*                        3.  Any virtual storage areas specified on   * 00007400
*                            the IXLFCOMP request may be addressable  * 00007500
*                            in the caller's primary, secondary, or   * 00007600
*                            home address spaces, from the PASN       * 00007700
*                            access list, or from the DU access list. * 00007800
*                                                                     * 00007900
*                        4.  Any virtual storage areas specified on   * 00008000
*                            the corresponding prior IXLLIST or       * 00008100
*                            IXLCACHE request must still be           * 00008200
*                            addressable as they were at the time of  * 00008300
*                            the prior request.  See the IXLLIST or   * 00008400
*                            IXLCACHE macros for the addressability   * 00008500
*                            requirements of the virtual storage      * 00008600
*                            areas associated with those requests.    * 00008700
*                                                                     * 00008800
*                                                                     * 00008900
*                                                                     * 00009000
*                                                                     * 00009100
*                                                                     * 00009200
*01* PROGRAMMING REQUIREMENTS:                                        * 00009300
*                                                                     * 00009400
*                                                                     * 00009500
*    1.  Access Register mode invokers must specify SYSSTATE          * 00009600
*        ASCENV=AR prior to invoking this macro.                      * 00009700
*                                                                     * 00009800
*                                                                     * 00009900
*                                                                     * 00010000
*01* RESTRICTIONS:                                                    * 00010100
*                                                                     * 00010200
*                                                                     * 00010300
*    1.  The request represented by REQTOKEN must have been initiated * 00010400
*        by the same connection.                                      * 00010500
*                                                                     * 00010600
*    2.  If the caller is disabled then the parameter list and all    * 00010700
*        storage areas addressed by macro parameters must reside in   * 00010800
*        either fixed or disabled reference storage.  Furthermore,    * 00010900
*        any virtual storage areas which were specified on the        * 00011000
*        corresponding prior IXLLIST or IXLCACHE invocation must also * 00011100
*        reside in fixed or disabled reference storage if the         * 00011200
*        IXLFCOMP caller is disabled.                                 * 00011300
*                                                                     * 00011400
*    3.  The caller may not be running as a Disabled Interrupt Exit   * 00011500
*        (DIE).                                                       * 00011600
*                                                                     * 00011700
*                                                                     * 00011800
*                                                                     * 00011900
*01* INPUT REGISTER INFORMATION:                                      * 00012000
*                                                                     * 00012100
*    Before issuing the IXLFCOMP macro, the caller does not have to   * 00012200
*    place any information into any register or AR unless using it in * 00012300
*    register notation for a particular parameter, or using it as a   * 00012400
*    base register.                                                   * 00012500
*                                                                     * 00012600
*01* OUTPUT REGISTER INFORMATION:                                     * 00012700
*                                                                     * 00012800
*    When control returns to the caller, the GPRs contain:            * 00012900
*                                                                     * 00013000
*                                                                     * 00013100
*    REGISTER  CONTENTS                                               * 00013200
*                                                                     * 00013300
*    0         Reason code                                            * 00013400
*                                                                     * 00013500
*    1         Used as work registers by the system                   * 00013600
*                                                                     * 00013700
*    2-13      Unchanged                                              * 00013800
*                                                                     * 00013900
*    14        Used as work registers by the system.                  * 00014000
*                                                                     * 00014100
*    15        Return code                                            * 00014200
*                                                                     * 00014300
*                                                                     * 00014400
*                                                                     * 00014500
*    When control returns to the caller, the ARs contain:             * 00014600
*                                                                     * 00014700
*                                                                     * 00014800
*    REGISTER  CONTENTS                                               * 00014900
*                                                                     * 00015000
*    0-1       Used as work registers by the system                   * 00015100
*                                                                     * 00015200
*    2-13      Unchanged                                              * 00015300
*                                                                     * 00015400
*    14-15     Used as work registers by the system.                  * 00015500
*                                                                     * 00015600
*                                                                     * 00015700
*                                                                     * 00015800
*01* PERFORMANCE IMPLICATIONS:                                        * 00015900
*                                                                     * 00016000
*    None.                                                            * 00016100
*                                                                     * 00016200
*01* SYNTAX:                                                          * 00016300
*                                                                     * 00016400
*[xlabel]  IXLFCOMP     CONTOKEN=xcontoken                            * 00016500
*                      ,REQTOKEN=xreqtoken                            * 00016600
*                     [,OPTYPE=COMPLETE|TEST]                       * 00016700
*                     [,RETCODE=xretcode]                             * 00016800
*                     [,RSNCODE=xrsncode]                             * 00016900
*                     [,PLISTVER=xplistver|IMPLIED_VERSION]         * 00017000
*                    [,MF=S]                                         * 00017100
*                    [,MF=(L,xmfctrl,xmfattr|0D)]                  * 00017200
*                    [,MF=(E,xmfctrl,COMPLETE)]                    * 00017300
*                                                                     * 00017400
*                                                                     * 00017500
*      Where:                                                         * 00017600
*                                                                     * 00017700
*                                                                     * 00017800
*      [xlabel]                                                       * 00017900
*          is an optional symbol, starting in column 1, that is the   * 00018000
*          name on the IXLFCOMP macro invocation.  The name must      * 00018100
*          conform to the rules for an ordinary assembler language    * 00018200
*          symbol.                                                    * 00018300
*          DEFAULT: No name.                                          * 00018400
*                                                                     * 00018500
*                                                                     * 00018600
*                                                                     * 00018700
*                                                                     * 00018800
*      CONTOKEN=xcontoken                                             * 00018900
*          is the name (RS-type), or address in register (2)-(12), of * 00019000
*          a required 16 character input field that contains the      * 00019100
*          connect token returned by the IXLCONN service.  The        * 00019200
*          CONTOKEN uniquely identifies the user's connection to the  * 00019300
*          structure.                                                 * 00019400
*                                                                     * 00019500
*                                                                     * 00019600
*                                                                     * 00019700
*                                                                     * 00019800
*      REQTOKEN=xreqtoken                                             * 00019900
*          is the name (RS-type), or address in register (2)-(12), of * 00020000
*          a required 16 character input field that contains the      * 00020100
*          asynchronous request token returned on a previous          * 00020200
*          invocation of IXLLIST or IXLCACHE.                         * 00020300
*                                                                     * 00020400
*          The asynchronous request token uniquely identifies a prior * 00020500
*          asynchronous request.                                      * 00020600
*                                                                     * 00020700
*                                                                     * 00020800
*                                                                     * 00020900
*                                                                     * 00021000
*      [OPTYPE=COMPLETE|TEST]                                       * 00021100
*          is an optional keyword input which specifies the type of   * 00021200
*          operation to be performed.  The invoker may either wait    * 00021300
*          for the initiating request to complete or only test        * 00021400
*          whether the request has completed.                         * 00021500
*                                                                     * 00021600
*          When IXLFCOMP detects that the initiating request has      * 00021700
*          completed the virtual and real storage areas for structure * 00021800
*          entry data, adjunct data, and the answer area specified on * 00021900
*          the initiating request will be appropriately updated.      * 00022000
*          DEFAULT: COMPLETE                                          * 00022100
*                                                                     * 00022200
*                                                                     * 00022300
*          OPTYPE=COMPLETE                                            * 00022400
*              Specifies that control be returned to the invoker when * 00022500
*              the initiating request has completed.                  * 00022600
*                                                                     * 00022700
*              If the request identified by REQTOKEN has not          * 00022800
*              completed then the invoker will be suspended until it  * 00022900
*              has completed.  The invoker must be executing in an    * 00023000
*              enabled state to use this option.                      * 00023100
*                                                                     * 00023200
*          OPTYPE=TEST                                                * 00023300
*              Specifies that the processing status of the initiating * 00023400
*              request be tested.  The return code indicates whether  * 00023500
*              the request has completed.                             * 00023600
*                                                                     * 00023700
*              This option may be used by invokers that may not be    * 00023800
*              suspended to poll for request completion.              * 00023900
*                                                                     * 00024000
*                                                                     * 00024100
*                                                                     * 00024200
*                                                                     * 00024300
*                                                                     * 00024400
*                                                                     * 00024500
*      [RETCODE=xretcode]                                             * 00024600
*          is the name (RS-type) of an optional fullword output       * 00024700
*          variable, or register (2)-(12), into which the return code * 00024800
*          is to be copied from GPR 15.                               * 00024900
*                                                                     * 00025000
*                                                                     * 00025100
*                                                                     * 00025200
*                                                                     * 00025300
*      [RSNCODE=xrsncode]                                             * 00025400
*          is the name (RS-type) of an optional fullword output       * 00025500
*          variable, or register (2)-(12), into which the reason code * 00025600
*          is to be copied from GPR 0.                                * 00025700
*                                                                     * 00025800
*                                                                     * 00025900
*                                                                     * 00026000
*                                                                     * 00026100
*      [PLISTVER=xplistver|IMPLIED_VERSION]                         * 00026200
*          is an optional byte input decimal value in the "0-0" range * 00026300
*          that specifies the macro version.  PLISTVER is the only    * 00026400
*          key allowed on the list form of MF and determines which    * 00026500
*          parameter list is generated.  Note that MAX may be         * 00026600
*          specified instead of a number, and the parameter list will * 00026700
*          be of the largest size currently supported. This size may  * 00026800
*          grow from release to release (thus possibly affecting the  * 00026900
*          amount of storage needed by your program).  If your        * 00027000
*          program can tolerate this, IBM recommends that you always  * 00027100
*          specify MAX when creating the list form parameter list as  * 00027200
*          that will ensure that the list form parameter list is      * 00027300
*          always long enough to hold whatever parameters might be    * 00027400
*          specified on the execute form.                             * 00027500
*          DEFAULT: IMPLIED_VERSION.  When PLISTVER is omitted, the   * 00027600
*          default is the lowest version which allows all of the      * 00027700
*          parameters specified on the invocation to be processed.    * 00027800
*                                                                     * 00027900
*                                                                     * 00028000
*                                                                     * 00028100
*                                                                     * 00028200
*      [MF=S|L|E]                                                   * 00028300
*          is an optional keyword input which specifies the macro     * 00028400
*          form.                                                      * 00028500
*          DEFAULT: S                                                 * 00028600
*                                                                     * 00028700
*                                                                     * 00028800
*          [MF=S]                                                     * 00028900
*              specifies the standard form of the macro.  The "S"     * 00029000
*              form generates code to put the parameters into an      * 00029100
*              in-line parameter list and invoke the desired service. * 00029200
*              Full checking for required macro keys is done along    * 00029300
*              with supplying defaults for omitted optional           * 00029400
*              parameters.                                            * 00029500
*                                                                     * 00029600
*          [MF=(L,xmfctrl,xmfattr|0D)]                              * 00029700
*              specifies the list form of the macro.  The "L" form    * 00029800
*              defines an area to be used for the parameter list.     * 00029900
*              Only the PLISTVER key may be specified on the          * 00030000
*              invocation.  All other macro parameters are flagged as * 00030100
*              errors.  If PLISTVER is not specified, the original    * 00030200
*              parameter list definition is used.                     * 00030300
*                                                                     * 00030400
*            ,xmfctrl                                                 * 00030500
*              is a required input.  It is the name of a storage area * 00030600
*              for the parameter list.                                * 00030700
*                                                                     * 00030800
*            ,xmfattr|0D                                            * 00030900
*              is an optional 60 character input string that varies   * 00031000
*              from 1 to 60 characters. Use it to force boundary      * 00031100
*              alignment of the parameter list. Use any value that    * 00031200
*              represents a boundary and is valid on an assembler DS  * 00031300
*              pseudo op.                                             * 00031400
*              DEFAULT: 0D which forces the parameter list to a       * 00031500
*              doubleword boundary.                                   * 00031600
*                                                                     * 00031700
*          [MF=(E,xmfctrl,COMPLETE)]                                * 00031800
*              specifies the execute form of the macro.  The "E" form * 00031900
*              generates code to put the parameters into the          * 00032000
*              parameter list specified by xmfctrl and provides full  * 00032100
*              syntax checking with default setting.                  * 00032200
*                                                                     * 00032300
*            ,xmfctrl                                                 * 00032400
*              is a required input.  It is the name (RS-type), or     * 00032500
*              address in register (1)-(12), of a storage area for    * 00032600
*              the parameter list.                                    * 00032700
*                                                                     * 00032800
*            ,COMPLETE                                              * 00032900
*              is an optional keyword input which specifies the       * 00033000
*              degree of macro parameter syntax checking.             * 00033100
*              DEFAULT: COMPLETE                                      * 00033200
*                                                                     * 00033300
*                                                                     * 00033400
*              COMPLETE                                               * 00033500
*                  Checking for required macro keys is done and       * 00033600
*                  defaults are supplied for omitted optional         * 00033700
*                  parameters.                                        * 00033800
*                                                                     * 00033900
*                                                                     * 00034000
*                                                                     * 00034100
*                                                                     * 00034200
*                                                                     * 00034300
*                                                                     * 00034400
*                                                                     * 00034500
*01* RETURN CODES:                                                    * 00034600
*                                                                     * 00034700
*                                                                     * 00034800
*                 The following return and reason codes may be        * 00034900
*                 returned by the IXLFCOMP service, in addition to    * 00035000
*                 those described for IXLLIST and IXLCACHE.  If the   * 00035100
*                 return and reason code is one of the following,     * 00035200
*                 then they pertain to the IXLFCOMP request itself.   * 00035300
*                 Otherwise,  the return and reason code pertain to   * 00035400
*                 the prior IXLLIST or IXLCACHE request which has     * 00035500
*                 completed.                                          * 00035600
*                                                                     * 00035700
*                                                                     * 00035800
*       4         IxlRetCodeWarning:  Warning.  The request           * 00035900
*                 completed, but with exceptional circumstances.      * 00036000
*                                                                     * 00036100
*                 HEX REASON  MEANING                                 * 00036200
*                 CODE                                                * 00036300
*                                                                     * 00036400
*                                                                     * 00036500
*                 xxxx0413    IxlRsnCodeReqNotComp:  The request      * 00036600
*                             identified by REQTOKEN has not          * 00036700
*                             completed, for an OPTYPE=TEST request.  * 00036800
*                                                                     * 00036900
*                                                                     * 00037000
*                                                                     * 00037100
*                                                                     * 00037200
*       8         IxlRetCodeParmError:  Error.  The request cannot be * 00037300
*                 completed due to a user error.                      * 00037400
*                                                                     * 00037500
*                 HEX REASON  MEANING                                 * 00037600
*                 CODE                                                * 00037700
*                                                                     * 00037800
*                                                                     * 00037900
*                 xxxx0801    IxlRsnCodeBadParmlist:  Unable to       * 00038000
*                             access the IXLFCOMP parameter list.     * 00038100
*                                                                     * 00038200
*                 xxxx0804    IxlRsnCodeBadVersion#:  The version     * 00038300
*                             number in the parameter list is not     * 00038400
*                             valid.  This usually indicates that the * 00038500
*                             level of the macro is incompatible with * 00038600
*                             the level of the XES service code.      * 00038700
*                                                                     * 00038800
*                 xxxx080A    IxlRsnCodeBadContoken:  Invalid         * 00038900
*                             contoken specified.  The contoken is    * 00039000
*                             invalid for one of the following        * 00039100
*                             reasons:  disconnect has occurred, EOT  * 00039200
*                             of the connector's task, input contoken * 00039300
*                             is not the contoken returned from       * 00039400
*                             IXLCONN, the request was issued outside * 00039500
*                             the connector's address space, or the   * 00039600
*                             contoken has been invalidated for       * 00039700
*                             rebuild.                                * 00039800
*                                                                     * 00039900
*                 xxxx0831    IxlRsnCodeBadReqToken:  An invalid      * 00040000
*                             asynchronous request token was          * 00040100
*                             specified.  The request cannot be       * 00040200
*                             completed without a valid asynchronous  * 00040300
*                             request token.                          * 00040400
*                                                                     * 00040500
*                 xxxx0851    IxlRsnCodeNoSuspenDisable:  A request   * 00040600
*                             specifying OPTYPE=COMPLETE  failed      * 00040700
*                             because the prior IXLLIST or IXLCACHE   * 00040800
*                             request has not completed, and the      * 00040900
*                             caller is disabled and cannot be        * 00041000
*                             suspended.                              * 00041100
*                                                                     * 00041200
*                                                                     * 00041300
*                                                                     * 00041400
*                                                                     * 00041500
*       10        IxlRetCodeCompError:  XES processing failure.  The  * 00041600
*                 state of the involved structure and the disposition * 00041700
*                 of the request are unpredictable.                   * 00041800
*                                                                     * 00041900
*                                                                     * 00042000
*                                                                     * 00042100
*01* REASON CODES:                                                    * 00042200
*                                                                     * 00042300
*       Reason codes, as appropriate, are defined under their         * 00042400
*       corresponding return code.  Reason code and return code       * 00042500
*       constants are defined within IXLYCON.                         * 00042600
*                                                                     * 00042700
*01* MODULE TYPE:  ASSEM MACRO                                        * 00042800
*                                                                     * 00042900
*02*   PROCESSOR:  ASSEM                                              * 00043000
*                                                                     * 00043100
*01* COMPONENT:  SCIXL                                                * 00043200
*                                                                     * 00043300
*01* DISTRIBUTION LIBRARY: AMACLIB                                    * 00043400
*                                                                     * 00043500
*01* MACRO USAGE NOTES:                                               * 00043600
*                                                                     * 00043700
*                                                                     * 00043800
*    1.  Printing of the macro expansion is controlled by the ZPRINT  * 00043900
*        global macro variable.  Any value other than 'NO' will       * 00044000
*        result in the macro expansion being printed.  The default is * 00044100
*        'YES'.  The following examples illustrate how the ZPRINT     * 00044200
*        variable should be set.                                      * 00044300
*                                                                     * 00044400
*                    GBLC &ZPRINT                                     * 00044500
*            &ZPRINT SETC 'YES'          &ZPRINT SETC 'NO'            * 00044600
*                                                                     * 00044700
*                                                                     * 00044800
*    2.  All   keys   currently   contained  in  the  IXLFCOMP  macro * 00044900
*        correspond  to  version  0.   If you specify PLISTVER, use a * 00045000
*        value of 0 or MAX.                                           * 00045100
*                                                                     * 00045200
*                                                                     * 00045300
*                                                                     * 00045400
*                                                                     * 00045500
*01* CHANGE ACTIVITY:                                                 * 00045600
*                                                                     * 00045700
*   Flag LineItem  FMID    Date   ID    Comment                       * 00045800
*                                                                     * 00045900
*    $L0=SYSLKSMG HBB5510 900904 PD00K1:  Locking support             * 00046000
*    $D1=DIG0018  HBB5510 921105 PD00AO:  >4K support                 * 00046100
*    $D2=DIG0048  HBB5510 930114 PD00AO:  Miscellaneous changes       * 00046200
*    $P1=PIG5178  HBB5510 940314 PD00AO:  Performance                 * 00046300
*    $P2=PIG5236  HBB5510 940314 PD00FR:  Document DIE mode           * 00046400
*                                         restriction                 * 00046500
*    $01=OW15589  HBB5520 960415 PD00FR:  Documentation updates       * 00046600
****** END OF SPECIFICATIONS *****************************************/ 00046700
*/********************************************************************* 00046800
         MACRO                                                          00046900
&XLABEL  IXLFCOMP &CONTOKEN=,&REQTOKEN=,&OPTYPE=,&RETCODE=,&RSNCODE=,  *00047000
               &PLISTVER=,&MF=                                          00047100
.*                                                                      00047200
*              MACDATE -09/18/96-<0>                                    00047300
.*                                                                      00047400
.*******************************************************************    00047500
.***AB.02  GLOBAL VARIABLES TO CONTROL PRINT AND CODE GENERATION        00047600
.*******************************************************************    00047700
              GBLC  &ZPRINT     YES=PRINT NO=NO PRINT                   00047800
              GBLC  &ZTEST      YES=TEST NO=NO TEST                     00047900
              GBLC  &ZSYSTEM    PCCODE10, MVS, SAK, VM, XAX             00048000
.*                                                                      00048100
              GBLC  &ZIXLFCOMP  YES=MACRO USED AT LEAST ONCE            00048200
.*******************************************************************    00048300
.***AB.03  COMMONLY USED LOCAL MACRO VARIABLES                          00048400
.*******************************************************************    00048500
              LCLC  &ZMS        ERROR MESSAGE WORK AREA                 00048600
              LCLC  &ZCNDX      LAST THREE SYSNDX CHARACTERS            00048700
              LCLC  &ZCLNG      USED WHEN LENGTH IS NEEDED              00048800
              LCLC  &ZCGPR      USED WHEN VALUE IS IN A GPR             00048900
              LCLC  &ZCVAL      USED TO CONTAIN FIXED VALUE             00049000
              LCLA  &ZAWRK      USED AS A WORK AREA                     00049100
              LCLA  &ZASIZ      USED FOR SIZE OF VALUE                  00049200
              LCLA  &ZN         NUMERIC WORK VARIABLE                   00049300
              LCLC  &ZC         CHARACTER WORK VARIABLE                 00049400
              LCLC  &ZTLC       CHARACTER TOO LONG VARIABLE             00049500
              LCLA  &ZTLA       VALUE TOO LONG VARIABLE                 00049600
              LCLA  &ZMACRET    MACRO RETURN CODE                       00049700
&ZMACRET      SETA  0           ASSUME NO ERRORS                        00049800
.*                                                                      00049900
              LCLC  &ZCSYSLIST(255)             NONXKEY, POS ARRAY      00050000
              LCLA  &ZASYSLNDX  WORK INDEX FOR ZCSYSLIST()              00050100
              LCLA  &ZPLLEN     PARAMETER LIST LENGTH                   00050200
              LCLC  &ZENDBASEPL                 End of base PL          00050300
              LCLA  &ZPLWORKA   PARAMETER LIST LENGTH                   00050400
.*******************************************************************    00050500
.***AB.04  MACRO VARIABLES FOR RANGES AND SETS OF ARGUMENTS             00050600
.*******************************************************************    00050700
              LCLA  &ZI         INDEX FOR ARRAY                         00050800
              LCLA  &ZJ         INDEX FOR PARMS                         00050900
              LCLA  &ZK         INDEX FOR PARSE                         00051000
              LCLA  &ZLO        LOW RANGE VALUE                         00051100
              LCLA  &ZHI        HIGH RANGE VALUE                        00051200
              LCLC  &ZW         WORK AREA FOR PARM                      00051300
.********************************************************************   00051400
.***AB.05  INVOKE MVS MACROS TO CONTROL CODE GENERATION                 00051500
.********************************************************************   00051600
              GBLC  &SYSSPLV    SP LEVEL 1,2,3 -SPLEVEL                 00051700
              GBLC  &SYSASCE    SYSTEM STATE P ANY AR-SYSSTATE          00051800
.*                                                                      00051900
              AIF   (K'&SYSASCE GT 0).ZSYS4     SYS STATE DEFINED       00052000
              AIF   (K'&SYSSPLV GT 0).ZSYS2     SP LEVEL DEFINED        00052100
              SPLEVEL  TEST                                             00052200
.ZSYS2        ANOP  ,                                                   00052300
              AIF   ('&SYSSPLV' EQ '1').ZSYS3   PRE SP 3.1              00052400
              AIF   ('&SYSSPLV' EQ '2').ZSYS3   PRE SP 3.1              00052500
              SYSSTATE TEST                                             00052600
              AGO   .ZSYS4                                              00052700
.ZSYS3        ANOP  ,                                                   00052800
&SYSASCE      SETC  'P'         ASSUME SYSSTATE PRIMARY                 00052900
.ZSYS4        ANOP  ,                                                   00053000
.*******************************************************************    00053100
.***AB.07  DEFINE ALL MACRO VARIABLES                                   00053200
.*******************************************************************    00053300
              LCLC  &XCONTOKEN  ++ NAME                                 00053400
              LCLC  &XREQTOKEN  ++ NAME                                 00053500
              LCLC  &XOPTYPE    ++ VALUE                                00053600
              LCLC  &XRETCODE   ++ NAME                                 00053700
              LCLC  &XRSNCODE   ++ NAME                                 00053800
              LCLA  &XPLISTVER  ++ VALUE                                00053900
              LCLC  &XMF        ++ VALUE                                00054000
              LCLC  &XMFCTRL    ++ NAME                                 00054100
              LCLC  &XMFATTR    ++ VALUE                                00054200
              LCLC  &XMFSCK     ++ VALUE                                00054300
.*******************************************************************    00054400
.***AB.13  DEFINE MACRO VARIABLES FOR INPUT/OUTPUT PROCESSING           00054500
.*******************************************************************    00054600
              LCLC  &ZXCONTOKEN                 ++ INPUT NAME           00054700
              LCLC  &ZXREQTOKEN                 ++ INPUT NAME           00054800
              LCLC  &ZXOPTYPE   ++ INPUT VALUE                          00054900
              LCLC  &ZXRETCODE  ++ OUTPUT NAME                          00055000
              LCLC  &ZXRSNCODE  ++ OUTPUT NAME                          00055100
              LCLC  &ZXPLISTVER                 ++ INPUT VALUE          00055200
              LCLC  &ZXMF       ++ INPUT VALUE                          00055300
              LCLC  &ZXMFCTRL   ++ INPUT NAME                           00055400
              LCLC  &ZXMFATTR   ++ INPUT VALUE                          00055500
              LCLC  &ZXMFSCK    ++ INPUT VALUE                          00055600
.********************************************************************   00055700
.***AC.PLV01  PROCESS PLISTVER                                      *   00055800
.********************************************************************   00055900
&XPLISTVER      SETA  0                                                 00056000
                AIF   (K'&PLISTVER(1) LE 0).ZPLV0                       00056100
                AIF   ('&PLISTVER(1)' NE 'MAX').ZPLV0                   00056200
&XPLISTVER      SETA  0                                                 00056300
.ZPLV0          ANOP  ,                                                 00056400
.*                                                                      00056500
                AIF   (K'&PLISTVER(1) LE 0).ZPVCKE                      00056600
                AIF   ('&PLISTVER(1)' EQ 'IMPLIED_VERSION').ZPVCKE      00056700
                AIF   ('&PLISTVER(1)' EQ 'MAX').ZPVCKE                  00056800
.*-------------------------------------------------------------------   00056900
                AIF   (N'&PLISTVER LE 1).ZPVCK3  CK NUM                 00057000
&ZMS            SETC  '"PLISTVER='         *KPOSA* MNOTE                00057100
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00057200
&ZMS            SETC  '&ZMS "PLISTVER"'                                 00057300
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00057400
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00057500
                AGO   .ZPVCK2                                           00057600
.ZPVCK3         ANOP  ,                                                 00057700
.*-------------------------------------------------------------------   00057800
                AIF   ('&PLISTVER'(1,1) NE '(').ZPVCK2                  00057900
&ZMS            SETC  '"PLISTVER='         *KGPRA* MNOTE                00058000
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00058100
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         00058200
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'                 00058300
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00058400
                AGO   .ZPVCKE                                           00058500
.ZPVCK2         ANOP  ,                                                 00058600
.*-------------------------------------------------------------------   00058700
&ZCVAL          SETC  '&PLISTVER(1)'                                    00058800
                AIF   ('&ZCVAL'(1,1) EQ '(').ZPVCKE  IN GPR             00058900
                AIF   (T'&ZCVAL NE 'N').ZPVCK6  NUMERIC ERR             00059000
&ZN             SETA   &PLISTVER(1)        CONVERT TO ARITHMETIC        00059100
                AIF   (&ZN LT 0).ZPVCK6    TOO LOW                      00059200
                AIF   (&ZN LE 0).ZPVCK4A   NOT HIGH                     00059300
.ZPVCK6         ANOP  ,                                                 00059400
&ZMS            SETC  '"PLISTVER='         *KRNGA* MNOTE                00059500
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00059600
&ZMS            SETC  '&ZMS THE RANGE IS "0-0"'                         00059700
                MNOTE 8,' &ZMS FOR ARGUMENT 1.'                         00059800
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00059900
&XPLISTVER      SETA  0                                                 00060000
                AGO   .ZPVCKE                                           00060100
.*-------------------------------------------------------------------   00060200
.ZPVCK4A        ANOP  ,                                                 00060300
                AIF   (&ZN GE &XPLISTVER).ZPVCK4                        00060400
&ZMS            SETC  'PLISTVER='          *KVALA* MNOTE                00060500
&ZMS            SETC  '&ZMS.&PLISTVER(1)'                               00060600
&ZMS            SETC  '&ZMS., BUT PLISTVER OF'                          00060700
&ZMS            SETC  '&ZMS &XPLISTVER'                                 00060800
                MNOTE 8,' &ZMS IS REQUIRED.'                            00060900
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00061000
                AGO   .ZPVCK5                                           00061100
.ZPVCK4         ANOP  ,                                                 00061200
&XPLISTVER      SETA  &PLISTVER(1)                                      00061300
.ZPVCK5         ANOP  ,                                                 00061400
.ZPVCKE         ANOP  ,                                                 00061500
.********************************************************************   00061600
.***AG.MF01 PROCESS MF MACRO FORMS                                      00061700
.********************************************************************   00061800
              ACTR  10000                                               00061900
.*------------------------------------------------------------------    00062000
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00062100
&XMF          SETC  ''          INITIALIZE XVARIABLE                    00062200
.*-------------------------------------------------------------------   00062300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00062400
.ZG23         ANOP  ,                                                   00062500
&ZTLC         SETC 'S'                                                  00062600
              AIF   ('&MF(1)' NE '&ZTLC').ZG24                          00062700
&XMF          SETC  'S'         SET KEYWORD                             00062800
              AIF   (N'&MF LE 1).ZG23A          CK NUM                  00062900
&ZMS          SETC  '"MF='      *KPOSA* MNOTE                           00063000
&ZMS          SETC  '&ZMS.&MF"'                                         00063100
&ZMS          SETC  '&ZMS "MF"'                                         00063200
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00063300
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00063400
.ZG23A        ANOP  ,                                                   00063500
.*-------------------------------------------------------------------   00063600
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00063700
.ZG24         ANOP  ,                                                   00063800
&ZTLC         SETC 'L'                                                  00063900
              AIF   ('&MF(1)' NE '&ZTLC').ZG31                          00064000
&XMF          SETC  'L'         SET KEYWORD                             00064100
              AIF   (N'&MF LE 3).ZG24A          CK NUM                  00064200
&ZMS          SETC  '"MF='      *KPOSA* MNOTE                           00064300
&ZMS          SETC  '&ZMS.&MF"'                                         00064400
&ZMS          SETC  '&ZMS "MF"'                                         00064500
              MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'                00064600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00064700
.ZG24A        ANOP  ,                                                   00064800
.*-------------------------------------------------------------------   00064900
.***AG.KKCTL08 -MF(L) SPECIAL CHECK                                     00065000
              AIF   (N'&SYSLIST NE 0).ZG24B     POSITIONALS?            00065100
              AIF   ('&CONTOKEN' NE '').ZG24B   KEYS?                   00065200
              AIF   ('&REQTOKEN' NE '').ZG24B   KEYS?                   00065300
              AIF   ('&OPTYPE' NE '').ZG24B     KEYS?                   00065400
              AIF   ('&RETCODE' NE '').ZG24B    KEYS?                   00065500
              AIF   ('&RSNCODE' NE '').ZG24B    KEYS?                   00065600
              AGO    .ZG24C     INVOCATION OKAY                         00065700
.ZG24B        ANOP  ,                                                   00065800
&ZMS          SETC  'THE "L" FORM OF "MF"'      *MFLA* MNOTE            00065900
&ZMS          SETC  '&ZMS CAN ONLY HAVE'                                00066000
&ZMS          SETC  '&ZMS THE "PLISTVER" KEY'                           00066100
              MNOTE 8,' &ZMS SPECIFIED ON THE INVOCATION.'              00066200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00066300
.ZG24C        ANOP  ,                                                   00066400
.*-------------------------------------------------------------------   00066500
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00066600
&ZXMFCTRL     SETC  'INPUT'     SET IN/OUTPUT                           00066700
&XMFCTRL      SETC  '&MF(2,1)'  SET XVARIABLE                           00066800
              AIF   (N'&MF(2) GT 1).ZG26B       MULTI PARMS             00066900
&XMFCTRL      SETC  '&MF(2)'    SET XVARIABLE                           00067000
.ZG26B        AIF   (K'&MF(2) GT 0).ZG26C                               00067100
&ZXMFCTRL     SETC  ''          RESET IN/OUTPUT                         00067200
&ZMS          SETC  'WHEN "L" IS SPECIFIED'     *KRQDA*                 00067300
&ZMS          SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'                 00067400
              MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                        00067500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00067600
.ZG26C        ANOP  ,                                                   00067700
.*-------------------------------------------------------------------   00067800
.***AG.KCK01 NAME, OPT RQD INPUT, POS(2) -GPR NOT ALLOWED               00067900
              AIF   (K'&ZXMFCTRL LE 0).ZG26P    NOT I/O                 00068000
              AIF   ('&XMFCTRL'(1,1) NE '(').ZG26P                      00068100
&ZXMFCTRL     SETC  ''          RESET IN/OUTPUT                         00068200
&ZMS          SETC  '"MF='      *KGPRA* MNOTE                           00068300
&ZMS          SETC  '&ZMS.&MF"'                                         00068400
&ZMS          SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'           00068500
              MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 2.'                   00068600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00068700
.ZG26P        ANOP  ,                                                   00068800
.*-------------------------------------------------------------------   00068900
.***AG.KXVAR13 VALUE, OPT INPUT, POS(3) -XVARIABLE                      00069000
&ZXMFATTR     SETC  'INPUT'     SET IN/OUTPUT                           00069100
&XMFATTR      SETC  '0D'                                                00069200
              AIF   (K'&MF(3) LE 0).ZG29B       PARM                    00069300
&XMFATTR      SETC  '&MF(3,1)'  SET XVARIABLE                           00069400
              AIF   (N'&MF(3) GT 1).ZG29B       MULTI PARMS             00069500
&XMFATTR      SETC  '&MF(3)'    SET XVARIABLE                           00069600
.ZG29B        ANOP  ,                                                   00069700
.*-------------------------------------------------------------------   00069800
.***AG.KCK01 VALUE, OPT INPUT, POS(3) -GPR NOT ALLOWED                  00069900
              AIF   (K'&ZXMFATTR LE 0).ZG29P    NOT I/O                 00070000
              AIF   ('&XMFATTR'(1,1) NE '(').ZG29P                      00070100
&ZXMFATTR     SETC  ''          RESET IN/OUTPUT                         00070200
&ZMS          SETC  '"MF='      *KGPRA* MNOTE                           00070300
&ZMS          SETC  '&ZMS.&MF"'                                         00070400
&ZMS          SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'           00070500
              MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 3.'                   00070600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00070700
.ZG29P        ANOP  ,                                                   00070800
.*-------------------------------------------------------------------   00070900
.***AG.KCK03 VALUE, OPT INPUT, POS(3) -CHARACTER LENGTH                 00071000
              AIF   (K'&ZXMFATTR LE 0).ZG29S    NOT I/O                 00071100
              AIF   (K'&XMFATTR LE 60).ZG29S    LNG OK                  00071200
&ZXMFATTR     SETC  ''          RESET IN/OUTPUT                         00071300
&ZMS          SETC  '"MF='      *KLNGA* MNOTE                           00071400
&ZMS          SETC  '&ZMS.&MF"'                                         00071500
&ZMS          SETC  '&ZMS ARGUMENT 3 EXCEEDS THE MAXIMUM'               00071600
              MNOTE 8,' &ZMS LENGTH OF 60 CHARACTERS.'                  00071700
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00071800
.ZG29S        ANOP  ,                                                   00071900
.*-------------------------------------------------------------------   00072000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00072100
.ZG31         ANOP  ,                                                   00072200
&ZTLC         SETC 'E'                                                  00072300
              AIF   ('&MF(1)' NE '&ZTLC').ZG39                          00072400
&XMF          SETC  'E'         SET KEYWORD                             00072500
              AIF   (N'&MF LE 3).ZG31A          CK NUM                  00072600
&ZMS          SETC  '"MF='      *KPOSA* MNOTE                           00072700
&ZMS          SETC  '&ZMS.&MF"'                                         00072800
&ZMS          SETC  '&ZMS "MF"'                                         00072900
              MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'                00073000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00073100
.ZG31A        ANOP  ,                                                   00073200
.*-------------------------------------------------------------------   00073300
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00073400
&ZXMFCTRL     SETC  'INPUT'     SET IN/OUTPUT                           00073500
&XMFCTRL      SETC  '&MF(2,1)'  SET XVARIABLE                           00073600
              AIF   (N'&MF(2) GT 1).ZG33B       MULTI PARMS             00073700
&XMFCTRL      SETC  '&MF(2)'    SET XVARIABLE                           00073800
.ZG33B        AIF   (K'&MF(2) GT 0).ZG33C                               00073900
&ZXMFCTRL     SETC  ''          RESET IN/OUTPUT                         00074000
&ZMS          SETC  'WHEN "E" IS SPECIFIED'     *KRQDA*                 00074100
&ZMS          SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'                 00074200
              MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                        00074300
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00074400
.ZG33C        ANOP  ,                                                   00074500
.*-------------------------------------------------------------------   00074600
.***AG.KCK02 NAME, OPT RQD INPUT, POS(2) -GPR OUT OF RANGE              00074700
              AIF   (K'&ZXMFCTRL LE 0).ZG33R    NOT I/O                 00074800
              AIF   ('&XMFCTRL'(1,1) NE '(').ZG33R                      00074900
&ZCGPR        SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)                          00075000
              AIF   ('&ZCGPR'(1,1) NE '0').ZG33P                        00075100
              AIF   (K'&ZCGPR GT 2).ZG33Q                               00075200
              AIF   ('&ZCGPR' EQ '0').ZG33Q                             00075300
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00075400
              AIF   (T'&ZCGPR NE 'N').ZG33Q     INVALID REG NAME        00075500
.ZG33P        ANOP  ,                                                   00075600
              AIF   (T'&ZCGPR NE 'N').ZG33R     NON NUMERIC             00075700
              AIF   ('&ZCGPR' LT '1').ZG33Q                             00075800
              AIF   ('&ZCGPR' LE '12').ZG33R                            00075900
.ZG33Q        ANOP  ,                                                   00076000
&ZMS          SETC  '"MF='      *KGPRA* MNOTE                           00076100
&ZMS          SETC  '&ZMS.&MF"'                                         00076200
&ZMS          SETC  '&ZMS ARGUMENT 2 MUST SPECIFY A REGISTER'           00076300
              MNOTE 8,' &ZMS IN THE RANGE (1)-(12).'                    00076400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00076500
.ZG33R        ANOP  ,                                                   00076600
.*-------------------------------------------------------------------   00076700
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00076800
&XMFSCK       SETC  ''          INITIALIZE XVARIABLE                    00076900
.ZG37A   AIF   ('&MF(3)' NE 'COMPLETE').ZG38A                           00077000
&XMFSCK       SETC  'COMPLETE'  SET KEYWORD                             00077100
.*-------------------------------------------------------------------   00077200
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00077300
.ZG38A        AIF   (K'&XMFSCK GT 0).ZG38C      KEYWORD                 00077400
              AIF   (K'&MF(3) LE 0).ZG38B                               00077500
&ZMS          SETC  '"MF='      *KUKWA* MNOTE                           00077600
&ZMS          SETC  '&ZMS.&MF"'                                         00077700
&ZMS          SETC  '&ZMS ARGUMENT 3 IS AN UNKNOWN KEYWORD. '           00077800
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                 00077900
&ZMS          SETC  '&ZMS "COMPLETE".'          VALID KEYWORD           00078000
              MNOTE 8,' &ZMS '                                          00078100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00078200
.ZG38B        ANOP  ,                                                   00078300
&XMFSCK       SETC  'COMPLETE'  SET DEFAULT KEYWORD                     00078400
.ZG38C        ANOP  ,                                                   00078500
&ZXMFSCK      SETC  'INPUT'     SET IN/OUTPUT                           00078600
.*------------------------------------------------------------------    00078700
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00078800
.ZG39         ANOP  ,                                                   00078900
&ZXMF         SETC  'INPUT'     SET IN/OUTPUT                           00079000
              AIF   (K'&XMF GT 0).ZG39E         VALID ARG               00079100
              AIF   (T'&MF EQ 'O').ZG39D        OMITTED                 00079200
&ZASYSLNDX    SETA  0                                                   00079300
.ZG39A        ANOP  ,           POSITIONAL MACRO KEY                    00079400
&ZASYSLNDX    SETA  &ZASYSLNDX+1                                        00079500
              AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG39C                    00079600
&ZTLC         SETC 'MF'                                                 00079700
              AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG39A           00079800
.ZG39B        ANOP  ,                                                   00079900
&ZXMF         SETC  ''          RESET IN/OUTPUT                         00080000
&ZMS          SETC  'THE "MF" KEY'              *KOPTA* MNOTE           00080100
&ZMS          SETC  '&ZMS MUST CONTAIN ONE'                             00080200
              MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                    00080300
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00080400
              AGO   .ZG39E                                              00080500
.ZG39C        ANOP  ,                                                   00080600
&ZXMF         SETC  ''          RESET IN/OUTPUT                         00080700
&ZMS          SETC  '"MF='      *KUKWA* MNOTE                           00080800
&ZMS          SETC  '&ZMS.&MF"'                                         00080900
&ZMS          SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '           00081000
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                 00081100
&ZMS          SETC  '&ZMS "S",'                 VALID KEYWORD           00081200
&ZMS          SETC  '&ZMS "L",'                 VALID KEYWORD           00081300
&ZMS          SETC  '&ZMS OR "E".'              VALID KEYWORD           00081400
              MNOTE 8,' &ZMS '                                          00081500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00081600
              AGO   .ZG39E                                              00081700
.ZG39D        ANOP  ,                                                   00081800
&XMF          SETC  'S'         SET DEFAULT KEYWORD                     00081900
&XMFSCK       SETC  'COMPLETE'  COMPLETE CHECKING                       00082000
.ZG39E        ANOP  ,                                                   00082100
.********************************************************************   00082200
.***AG.MF02  FULL MACRO SYNTAX CHECKING                                 00082300
.********************************************************************   00082400
              ACTR  10000                                               00082500
.*-------------------------------------------------------------------   00082600
.***AG.MF03 MF=(SLE)                                                    00082700
              AIF   ('&XMF' EQ 'L').ZGMFX                               00082800
.*----------------------------------------------------------------***   00082900
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00083000
              AIF   (N'&CONTOKEN LE 1).ZG2A     CK NUM                  00083100
&ZMS          SETC  '"CONTOKEN='                *KPOSA* MNOTE           00083200
&ZMS          SETC  '&ZMS.&CONTOKEN"'                                   00083300
&ZMS          SETC  '&ZMS "CONTOKEN"'                                   00083400
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00083500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00083600
.ZG2A         ANOP  ,                                                   00083700
.*-------------------------------------------------------------------   00083800
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00083900
&ZXCONTOKEN   SETC  'INPUT'     SET IN/OUTPUT                           00084000
&XCONTOKEN    SETC  '&CONTOKEN(1)'              SET XVARIABLE           00084100
              AIF   (N'&CONTOKEN GT 1).ZG2B     MULTI PARMS             00084200
&XCONTOKEN    SETC  '&CONTOKEN'                 SET XVARIABLE           00084300
.ZG2B         AIF   (K'&CONTOKEN(1) GT 0).ZG2C                          00084400
&ZXCONTOKEN   SETC  ''          RESET IN/OUTPUT                         00084500
&ZMS          SETC  ' '         *KRQDA*                                 00084600
&ZMS          SETC  '&ZMS "CONTOKEN" KEY AND ITS ARGUMENT'              00084700
              MNOTE 8,' &ZMS ARE REQUIRED.'                             00084800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00084900
.ZG2C         ANOP  ,                                                   00085000
.*-------------------------------------------------------------------   00085100
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00085200
              AIF   (K'&ZXCONTOKEN LE 0).ZG2R   NOT I/O                 00085300
              AIF   ('&XCONTOKEN'(1,1) NE '(').ZG2R                     00085400
&ZCGPR        SETC  '&XCONTOKEN'(2,K'&XCONTOKEN-2)                      00085500
              AIF   ('&ZCGPR'(1,1) NE '0').ZG2P                         00085600
              AIF   (K'&ZCGPR GT 2).ZG2Q                                00085700
              AIF   ('&ZCGPR' EQ '0').ZG2Q                              00085800
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00085900
              AIF   (T'&ZCGPR NE 'N').ZG2Q      INVALID REG NAME        00086000
.ZG2P         ANOP  ,                                                   00086100
              AIF   (T'&ZCGPR NE 'N').ZG2R      NON NUMERIC             00086200
              AIF   ('&ZCGPR' LT '2').ZG2Q                              00086300
              AIF   ('&ZCGPR' LE '12').ZG2R                             00086400
.ZG2Q         ANOP  ,                                                   00086500
&ZMS          SETC  '"CONTOKEN='                *KGPRA* MNOTE           00086600
&ZMS          SETC  '&ZMS.&CONTOKEN"'                                   00086700
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00086800
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00086900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00087000
.ZG2R         ANOP  ,                                                   00087100
.*----------------------------------------------------------------***   00087200
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00087300
              AIF   (N'&REQTOKEN LE 1).ZG5A     CK NUM                  00087400
&ZMS          SETC  '"REQTOKEN='                *KPOSA* MNOTE           00087500
&ZMS          SETC  '&ZMS.&REQTOKEN"'                                   00087600
&ZMS          SETC  '&ZMS "REQTOKEN"'                                   00087700
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00087800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00087900
.ZG5A         ANOP  ,                                                   00088000
.*-------------------------------------------------------------------   00088100
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00088200
&ZXREQTOKEN   SETC  'INPUT'     SET IN/OUTPUT                           00088300
&XREQTOKEN    SETC  '&REQTOKEN(1)'              SET XVARIABLE           00088400
              AIF   (N'&REQTOKEN GT 1).ZG5B     MULTI PARMS             00088500
&XREQTOKEN    SETC  '&REQTOKEN'                 SET XVARIABLE           00088600
.ZG5B         AIF   (K'&REQTOKEN(1) GT 0).ZG5C                          00088700
&ZXREQTOKEN   SETC  ''          RESET IN/OUTPUT                         00088800
&ZMS          SETC  ' '         *KRQDA*                                 00088900
&ZMS          SETC  '&ZMS "REQTOKEN" KEY AND ITS ARGUMENT'              00089000
              MNOTE 8,' &ZMS ARE REQUIRED.'                             00089100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00089200
.ZG5C         ANOP  ,                                                   00089300
.*-------------------------------------------------------------------   00089400
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00089500
              AIF   (K'&ZXREQTOKEN LE 0).ZG5R   NOT I/O                 00089600
              AIF   ('&XREQTOKEN'(1,1) NE '(').ZG5R                     00089700
&ZCGPR        SETC  '&XREQTOKEN'(2,K'&XREQTOKEN-2)                      00089800
              AIF   ('&ZCGPR'(1,1) NE '0').ZG5P                         00089900
              AIF   (K'&ZCGPR GT 2).ZG5Q                                00090000
              AIF   ('&ZCGPR' EQ '0').ZG5Q                              00090100
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00090200
              AIF   (T'&ZCGPR NE 'N').ZG5Q      INVALID REG NAME        00090300
.ZG5P         ANOP  ,                                                   00090400
              AIF   (T'&ZCGPR NE 'N').ZG5R      NON NUMERIC             00090500
              AIF   ('&ZCGPR' LT '2').ZG5Q                              00090600
              AIF   ('&ZCGPR' LE '12').ZG5R                             00090700
.ZG5Q         ANOP  ,                                                   00090800
&ZMS          SETC  '"REQTOKEN='                *KGPRA* MNOTE           00090900
&ZMS          SETC  '&ZMS.&REQTOKEN"'                                   00091000
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00091100
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00091200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00091300
.ZG5R         ANOP  ,                                                   00091400
.*----------------------------------------------------------------***   00091500
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00091600
              AIF   (N'&OPTYPE LE 1).ZG8A       CK NUM                  00091700
&ZMS          SETC  '"OPTYPE='  *KPOSA* MNOTE                           00091800
&ZMS          SETC  '&ZMS.&OPTYPE"'                                     00091900
&ZMS          SETC  '&ZMS "OPTYPE"'                                     00092000
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00092100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00092200
.ZG8A         ANOP  ,                                                   00092300
.*-------------------------------------------------------------------   00092400
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00092500
&XOPTYPE      SETC  ''          INITIALIZE XVARIABLE                    00092600
.ZG9A   AIF   ('&OPTYPE(1)' NE 'COMPLETE').ZG10A                        00092700
&XOPTYPE      SETC  'COMPLETE'  SET KEYWORD                             00092800
.*-------------------------------------------------------------------   00092900
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00093000
.ZG10A   AIF   ('&OPTYPE(1)' NE 'TEST').ZG11A                           00093100
&XOPTYPE      SETC  'TEST'      SET KEYWORD                             00093200
.*-------------------------------------------------------------------   00093300
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00093400
.ZG11A        AIF   (K'&XOPTYPE GT 0).ZG11C     KEYWORD                 00093500
              AIF   (K'&OPTYPE(1) LE 0).ZG11B                           00093600
&ZMS          SETC  '"OPTYPE='  *KUKWA* MNOTE                           00093700
&ZMS          SETC  '&ZMS.&OPTYPE"'                                     00093800
&ZMS          SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '           00093900
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                 00094000
&ZMS          SETC  '&ZMS "COMPLETE"'           VALID KEYWORD           00094100
&ZMS          SETC  '&ZMS OR "TEST".'           VALID KEYWORD           00094200
              MNOTE 8,' &ZMS '                                          00094300
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00094400
.ZG11B        ANOP  ,                                                   00094500
&XOPTYPE      SETC  'COMPLETE'  SET DEFAULT KEYWORD                     00094600
.ZG11C        ANOP  ,                                                   00094700
&ZXOPTYPE     SETC  'INPUT'     SET IN/OUTPUT                           00094800
.*----------------------------------------------------------------***   00094900
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00095000
              AIF   (N'&RETCODE LE 1).ZG13A     CK NUM                  00095100
&ZMS          SETC  '"RETCODE='                 *KPOSA* MNOTE           00095200
&ZMS          SETC  '&ZMS.&RETCODE"'                                    00095300
&ZMS          SETC  '&ZMS "RETCODE"'                                    00095400
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00095500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00095600
.ZG13A        ANOP  ,                                                   00095700
.*-------------------------------------------------------------------   00095800
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00095900
              AIF   (K'&RETCODE(1) LE 0).ZG13C  NO PARM                 00096000
&ZXRETCODE    SETC  'OUTPUT'    SET OUTPUT                              00096100
&XRETCODE     SETC  '&RETCODE(1)'               SET XVARIABLE           00096200
              AIF   (N'&RETCODE GT 1).ZG13C                             00096300
&XRETCODE     SETC  '&RETCODE'  SET XVARIABLE                           00096400
.ZG13C        ANOP  ,                                                   00096500
.*-------------------------------------------------------------------   00096600
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00096700
              AIF   (K'&ZXRETCODE LE 0).ZG13R   NOT I/O                 00096800
              AIF   ('&XRETCODE'(1,1) NE '(').ZG13R                     00096900
&ZCGPR        SETC  '&XRETCODE'(2,K'&XRETCODE-2)                        00097000
              AIF   ('&ZCGPR'(1,1) NE '0').ZG13P                        00097100
              AIF   (K'&ZCGPR GT 2).ZG13Q                               00097200
              AIF   ('&ZCGPR' EQ '0').ZG13Q                             00097300
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00097400
              AIF   (T'&ZCGPR NE 'N').ZG13Q     INVALID REG NAME        00097500
.ZG13P        ANOP  ,                                                   00097600
              AIF   (T'&ZCGPR NE 'N').ZG13R     NON NUMERIC             00097700
              AIF   ('&ZCGPR' LT '2').ZG13Q                             00097800
              AIF   ('&ZCGPR' LE '12').ZG13R                            00097900
.ZG13Q        ANOP  ,                                                   00098000
&ZMS          SETC  '"RETCODE='                 *KGPRA* MNOTE           00098100
&ZMS          SETC  '&ZMS.&RETCODE"'                                    00098200
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00098300
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00098400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00098500
.ZG13R        ANOP  ,                                                   00098600
.*----------------------------------------------------------------***   00098700
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00098800
              AIF   (N'&RSNCODE LE 1).ZG16A     CK NUM                  00098900
&ZMS          SETC  '"RSNCODE='                 *KPOSA* MNOTE           00099000
&ZMS          SETC  '&ZMS.&RSNCODE"'                                    00099100
&ZMS          SETC  '&ZMS "RSNCODE"'                                    00099200
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00099300
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00099400
.ZG16A        ANOP  ,                                                   00099500
.*-------------------------------------------------------------------   00099600
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00099700
              AIF   (K'&RSNCODE(1) LE 0).ZG16C  NO PARM                 00099800
&ZXRSNCODE    SETC  'OUTPUT'    SET OUTPUT                              00099900
&XRSNCODE     SETC  '&RSNCODE(1)'               SET XVARIABLE           00100000
              AIF   (N'&RSNCODE GT 1).ZG16C                             00100100
&XRSNCODE     SETC  '&RSNCODE'  SET XVARIABLE                           00100200
.ZG16C        ANOP  ,                                                   00100300
.*-------------------------------------------------------------------   00100400
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00100500
              AIF   (K'&ZXRSNCODE LE 0).ZG16R   NOT I/O                 00100600
              AIF   ('&XRSNCODE'(1,1) NE '(').ZG16R                     00100700
&ZCGPR        SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                        00100800
              AIF   ('&ZCGPR'(1,1) NE '0').ZG16P                        00100900
              AIF   (K'&ZCGPR GT 2).ZG16Q                               00101000
              AIF   ('&ZCGPR' EQ '0').ZG16Q                             00101100
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00101200
              AIF   (T'&ZCGPR NE 'N').ZG16Q     INVALID REG NAME        00101300
.ZG16P        ANOP  ,                                                   00101400
              AIF   (T'&ZCGPR NE 'N').ZG16R     NON NUMERIC             00101500
              AIF   ('&ZCGPR' LT '2').ZG16Q                             00101600
              AIF   ('&ZCGPR' LE '12').ZG16R                            00101700
.ZG16Q        ANOP  ,                                                   00101800
&ZMS          SETC  '"RSNCODE='                 *KGPRA* MNOTE           00101900
&ZMS          SETC  '&ZMS.&RSNCODE"'                                    00102000
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00102100
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00102200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00102300
.ZG16R        ANOP  ,                                                   00102400
.******************************************************************     00102500
.***AH.P00 CHECK STANDALONE POSITIONAL VARIABLES                        00102600
.******************************************************************     00102700
              ACTR  10000                                               00102800
.*----------------------------------------------------------------***   00102900
.***AH.P02 EXTRA POSITIONALS                                            00103000
              AIF   (N'&SYSLIST LE 0).ZGLISTX   NO EXTRAS               00103100
              AIF   (N'&SYSLIST NE 2).ZGLISTX1  NOT NULL                00103200
              AIF   ('&SYSLIST(1)' NE '').ZGLISTX1  NOT NULL            00103300
              AIF   ('&SYSLIST(2)' EQ '').ZGLISTX  NOT NULL             00103400
.ZGLISTX1     ANOP  ,                                                   00103500
&ZCVAL        SETC  ''          ERROR FIELD                             00103600
&ZAWRK        SETA  0           POSITIONAL NUMBER                       00103700
.ZGLIST2      ANOP  ,                                                   00103800
&ZAWRK        SETA  &ZAWRK+1    NEXT POSITIONAL                         00103900
              AIF   (&ZAWRK GT N'&SYSLIST).ZGLIST3  DONE                00104000
&ZCVAL        SETC '&ZCVAL,&SYSLIST(&ZAWRK)'    EXTRA                   00104100
              AGO   .ZGLIST2                                            00104200
.*                                                                      00104300
.ZGLIST3      ANOP  ,                                                   00104400
&ZCVAL        SETC '&ZCVAL'(2,K'&ZCVAL-1)       STRIP COMMA             00104500
&ZMS          SETC  'POSITIONAL ARGUMENT(S),'   *PPOSA* MNOTE           00104600
&ZMS          SETC  '&ZMS "&ZCVAL"'                                     00104700
&ZMS          SETC  '&ZMS CANNOT BE USED.'                              00104800
&ZMS          SETC  '&ZMS NO POSITIONAL ARGUMENTS'                      00104900
              MNOTE 8,' &ZMS ARE ALLOWED.'                              00105000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00105100
.ZGLISTX      ANOP  ,                                                   00105200
&ZASYSLNDX    SETA  0                                                   00105300
.*-------------------------------------------------------------------   00105400
.***AG.MF04 MF=(SLE)                                                    00105500
.ZGMFX        ANOP  ,           END OF FULL SYNTAX CHECK                00105600
.*******************************************************************    00105700
.***AE.ZMR01 NO CODE GENERATED IF ERRORS DETECTED                       00105800
.*******************************************************************    00105900
              AIF   (&ZMACRET NE 0).ZLX2        ERROR DETECTED          00106000
.*******************************************************************    00106100
.***AE.01  START OF IXLFCOMP MACRO CODE                                 00106200
.*******************************************************************    00106300
              LCLC  &M0M0001                 NAME                       00106400
&M0M0001      SETC  '&XLABEL'                SET NAME                   00106500
              AIF   (K'&XLABEL NE 0).XLAB2                              00106600
&M0M0001      SETC  'M00M&SYSNDX'            DEFAULT NAME               00106700
.*                                                                      00106800
.XLAB2        ANOP  ,                                                   00106900
              AIF   ('&XMF' EQ 'L').XLAB3                               00107000
&M0M0001 DS    0H                             IXLFCOMP-0                00107100
.XLAB3        ANOP  ,                                                   00107200
.*******************************************************************    00107300
.***AE.PR01 PRINT CONTROLS, DEFAULT IS YES                              00107400
.*******************************************************************    00107500
              PUSH  PRINT                                               00107600
              AIF   ('&ZPRINT' NE 'NO').ZPRINTX  TURN PRINT ON          00107700
              PRINT OFF         ++ PR01                                 00107800
              AGO   .ZPRNTXX                                            00107900
.ZPRINTX      PRINT ON                                                  00108000
.ZPRNTXX      ANOP  ,                                                   00108100
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00108200
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00108300
.********************************************************************   00108400
.***AL.L01 INTERNAL ARRAY TO PRODUCE FORMATTED CODE                     00108500
.********************************************************************   00108600
                      LCLA  &ZOPN          LIST INSTRUCTION INDEX       00108700
                      LCLA  &ZOPN1         INVOCATION INDEX             00108800
                      LCLC  &ZOPL(4095)    LABEL                        00108900
                      LCLC  &ZOPO(4095)    OPERATION                    00109000
                      LCLC  &ZOPV(4095)    VALUE                        00109100
                      LCLC  &ZOPD(4095)    DESCRIPTION                  00109200
.*                                                                      00109300
&ZOPN                 SETA  0              INITIAL INST INDEX VALUE     00109400
.******************************************************************     00109500
.***AL.L10 IXLFCOMP FMT=LIST MF=S|L PARAMETERS                          00109600
.******************************************************************     00109700
                      AIF   ('&XMF' EQ 'L').ZLMFSL2                     00109800
                      AIF   ('&XMF' NE 'S').ZLMFSLX                     00109900
&XMFCTRL              SETC  '#Z'.'&SYSNDX'(1,4).'A'                     00110000
&XMFATTR              SETC  '0D'                                        00110100
.*                                                                      00110200
&ZOPN                 SETA  &ZOPN+1                                     00110300
&ZOPL(&ZOPN)          SETC  ' '                                         00110400
&ZOPO(&ZOPN)          SETC  'B'                                         00110500
&ZOPV(&ZOPN)          SETC  '&XMFCTRL.S'                                00110600
&ZOPD(&ZOPN)          SETC  '++ IXLFCOMP ARG PARMS'                     00110700
.*                                                                      00110800
&ZOPN                 SETA  &ZOPN+1                                     00110900
&ZOPL(&ZOPN)          SETC  ' '                                         00111000
&ZOPO(&ZOPN)          SETC  'SPACE'                                     00111100
&ZOPV(&ZOPN)          SETC  '1'                                         00111200
&ZOPD(&ZOPN)          SETC  ' '                                         00111300
.*                                                                      00111400
.ZLMFSL2              ANOP  ,                                           00111500
.*-------------------------------------------------------------------   00111600
.***AM.L00  IXLFCOMP FMT=LIST name                                      00111700
                      AIF   ('&XMF' NE 'L').ZLMFSL2M                    00111800
&ZOPN                 SETA &ZOPN+1                                      00111900
&ZOPL(&ZOPN)          SETC '&M0M0001'                                   00112000
&ZOPO(&ZOPN)          SETC 'EQU'                                        00112100
&ZOPV(&ZOPN)          SETC '&XMFCTRL'                                   00112200
&ZOPD(&ZOPN)          SETC '++ IXLFCOMP NAME'                           00112300
.ZLMFSL2M             ANOP  ,                                           00112400
.*-------------------------------------------------------------------   00112500
.***AM.L01  IXLFCOMP FMT=LIST PARAMETERS                                00112600
&ZOPN                 SETA &ZOPN+1                                      00112700
&ZOPL(&ZOPN)          SETC '&XMFCTRL'                                   00112800
&ZOPO(&ZOPN)          SETC 'DS'                                         00112900
&ZOPV(&ZOPN)          SETC '&XMFATTR'                                   00113000
&ZOPD(&ZOPN)          SETC '++ IXLFCOMP PARM LIST'                      00113100
.*-------------------------------------------------------------------   00113200
.***AM.L02 XVERSION XL1                                                 00113300
&ZOPN                 SETA &ZOPN+1                                      00113400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XVERSION'                         00113500
&ZOPO(&ZOPN)          SETC 'DS'                                         00113600
&ZOPV(&ZOPN)          SETC 'XL1'                                        00113700
&ZOPD(&ZOPN)          SETC '++ INPUT XVERSION'                          00113800
.*-------------------------------------------------------------------   00113900
.***AM.L03 XFLAGS BL.8                                                  00114000
&ZOPN                 SETA &ZOPN+1                                      00114100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XFLAGS'                           00114200
&ZOPO(&ZOPN)          SETC 'DS'                                         00114300
&ZOPV(&ZOPN)          SETC 'BL.8'                                       00114400
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             00114500
.*                                                                      00114600
&ZOPN                 SETA  &ZOPN+1                                     00114700
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XOPTYPE_TEST'                    00114800
&ZOPO(&ZOPN)          SETC  'EQU'                                       00114900
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             00115000
&ZOPD(&ZOPN)          SETC  '++ XOPTYPE.'                               00115100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).TEST'                         00115200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00115300
.*                                                                      00115400
&ZOPN                 SETA  &ZOPN+1                                     00115500
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._RCVRYRESULTSAVAIL'               00115600
&ZOPO(&ZOPN)          SETC  'EQU'                                       00115700
&ZOPV(&ZOPN)          SETC  'B''00000001'''                             00115800
&ZOPD(&ZOPN)          SETC  '++ MACUSED.'                               00115900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).FCOMP'                        00116000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00116100
.*-------------------------------------------------------------------   00116200
.***AM.L09  XRSV0001 CL2                                                00116300
&ZOPN                 SETA &ZOPN+1                                      00116400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0001'                         00116500
&ZOPO(&ZOPN)          SETC 'DS'                                         00116600
&ZOPV(&ZOPN)          SETC 'CL2'                                        00116700
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV0001'                      00116800
.*-------------------------------------------------------------------   00116900
.***AM.L09  XCONTOKEN CL16                                              00117000
&ZOPN                 SETA &ZOPN+1                                      00117100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCONTOKEN'                        00117200
&ZOPO(&ZOPN)          SETC 'DS'                                         00117300
&ZOPV(&ZOPN)          SETC 'CL16'                                       00117400
&ZOPD(&ZOPN)          SETC '++ &ZXCONTOKEN  XCONTOKEN'                  00117500
.*-------------------------------------------------------------------   00117600
.***AM.L09  XREQTOKEN CL16                                              00117700
&ZOPN                 SETA &ZOPN+1                                      00117800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XREQTOKEN'                        00117900
&ZOPO(&ZOPN)          SETC 'DS'                                         00118000
&ZOPV(&ZOPN)          SETC 'CL16'                                       00118100
&ZOPD(&ZOPN)          SETC '++ &ZXREQTOKEN  XREQTOKEN'                  00118200
.*-------------------------------------------------------------------   00118300
.***AM.L10 END OF IXLFCOMP LIST PARAMETERS                              00118400
&ZOPN                 SETA &ZOPN+1                                      00118500
&ZOPL(&ZOPN)          SETC '&XMFCTRL.L'                                 00118600
&ZOPO(&ZOPN)          SETC 'EQU'                                        00118700
&ZOPV(&ZOPN)          SETC '*-&XMFCTRL'                                 00118800
&ZOPD(&ZOPN)          SETC '++ LENGTH OF PLIST'                         00118900
.*                                                                      00119000
&ZOPN                 SETA &ZOPN+1                                      00119100
&ZOPL(&ZOPN)          SETC ' '                                          00119200
&ZOPO(&ZOPN)          SETC 'SPACE'                                      00119300
&ZOPV(&ZOPN)          SETC '1'                                          00119400
&ZOPD(&ZOPN)          SETC ' '                                          00119500
.*-------------------------------------------------------------------   00119600
.***AL.L12 IXLFCOMP FMT=LIST MF=S|L PARAMETERS                          00119700
                      AIF   ('&XMF' EQ 'L').ZMFLX  DONE IF MF=L         00119800
.*                                                                      00119900
&ZOPN                 SETA  &ZOPN+1                                     00120000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL.S'                                00120100
&ZOPO(&ZOPN)          SETC  'DC'                                        00120200
&ZOPV(&ZOPN)          SETC  '0H''0'''                                   00120300
&ZOPD(&ZOPN)          SETC  '++ IXLFCOMP ARG PARMS'                     00120400
.*                                                                      00120500
.ZLMFSLX              ANOP  ,                                           00120600
.*-------------------------------------------------------------------   00120700
.***AL.L13 SET ZPLLEN TO ITS APPROPRIATE VALUE                          00120800
&ZPLLEN               SETA 36                                           00120900
.*                                                                      00121000
.******************************************************************     00121100
.***AI.L01 IXLFCOMP FMT=LIST FILL IN PARAMETER AREA                     00121200
.******************************************************************     00121300
                      ACTR  10000                                       00121400
&ZCVAL                SETC  'LA'           ASSUME XA MODE               00121500
                      AIF   ('&SYSASCE' EQ 'P').ZIMFXA  SYSSTATE PRI    00121600
&ZCVAL                SETC  'LAE'          XAX MODE                     00121700
.ZIMFXA               ANOP ,                                            00121800
.*                                                                      00121900
                      AIF   ('&XMFCTRL'(1,1) NE '(').ZIMFN2  NOT GPR    00122000
&ZCGPR                SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)  GET GPR         00122100
                      AIF   ('&ZCGPR' EQ 'GPR1').ZIMFNX                 00122200
                      AIF   ('&ZCGPR' EQ 'GPR01').ZIMFNX                00122300
                      AIF   ('&ZCGPR' EQ 'REG1').ZIMFNX                 00122400
                      AIF   ('&ZCGPR' EQ 'REG01').ZIMFNX                00122500
                      AIF   ('&ZCGPR' EQ 'R1').ZIMFNX                   00122600
                      AIF   ('&ZCGPR' EQ '1').ZIMFNX                    00122700
                      AIF   ('&ZCGPR' EQ '01').ZIMFNX                   00122800
&ZOPN                 SETA  &ZOPN+1                                     00122900
&ZOPL(&ZOPN)          SETC  ' '                                         00123000
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00123100
&ZOPV(&ZOPN)          SETC  '1,0(,&ZCGPR)'                              00123200
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00123300
                      AGO   .ZIMFNX                                     00123400
.*                                                                      00123500
.ZIMFN2               ANOP ,                                            00123600
&ZOPN                 SETA  &ZOPN+1                                     00123700
&ZOPL(&ZOPN)          SETC  ' '                                         00123800
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00123900
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL'                                00124000
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00124100
.ZIMFNX               ANOP ,                                            00124200
.********************************************************************   00124300
.***AI.L02 IXLFCOMP FMT=LIST INITIALIZE PARAMETER AREA                  00124400
.********************************************************************   00124500
.***AI.L03 MF=(SLE)                                                     00124600
                      AIF   ('&XMF' EQ 'L').ZIMFLX                      00124700
.*                                                                      00124800
&ZOPN                 SETA  &ZOPN+1                                     00124900
&ZOPL(&ZOPN)          SETC  ' '                                         00125000
&ZOPO(&ZOPN)          SETC  'XC'                                        00125100
&ZOPV(&ZOPN)          SETC  '0(&ZPLLEN,1),0(1)'                         00125200
&ZOPD(&ZOPN)          SETC  '++ INITIALIZE'                             00125300
.ZIMFLX               ANOP  ,                                           00125400
.*-------------------------------------------------------------------   00125500
.***AI.L05 XFLAGS BL1                                                   00125600
&ZW                   SETC  ''                                          00125700
&ZCLNG                SETC  ''             RESET BIT ON FLAG            00125800
.*-------------------------------------------------------------------   00125900
.***AI.L08 XFLAGS "TEST"                                                00126000
.***      BL1'1XXXXXXX'                                                 00126100
         AIF   ('&XOPTYPE' NE 'TEST').ZI3A                              00126200
&ZW                   SETC  '&ZW.1'                                     00126300
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00126400
                      AGO   .ZI3C                                       00126500
.*                                                                      00126600
.ZI3A                 ANOP  ,                                           00126700
&ZW                   SETC  '&ZW.0'                                     00126800
.ZI3C                 ANOP  ,                                           00126900
.*-------------------------------------------------------------------   00127000
.***AI.L08 XFLAGS "FCOMP"                                               00127100
.***      BL1'XXXXXXX1'                                                 00127200
&ZW                   SETC  '&ZW.0000000'                               00127300
.*-------------------------------------------------------------------   00127400
.***AI.L11 XFLAGS BL1                                                   00127500
                      AIF   ('&ZCLNG' NE 'YES').ZI4E  ALL ZERO BITS     00127600
&ZOPN                 SETA  &ZOPN+1                                     00127700
&ZOPL(&ZOPN)          SETC  ' '                                         00127800
&ZOPO(&ZOPN)          SETC  'OI'                                        00127900
&ZOPV(&ZOPN)          SETC  '1(1),B''&ZW'''                             00128000
&ZOPD(&ZOPN)          SETC  '++ 39 BL1'                                 00128100
.ZI4E                 ANOP  ,                                           00128200
.*-------------------------------------------------------------------   00128300
.***AI.L25  XCONTOKEN CL16                                              00128400
                      AIF   ('&ZXCONTOKEN' EQ '').ZI6E                  00128500
                      AIF   ('&ZXCONTOKEN' EQ 'OUTPUT').ZI6E            00128600
&ZCGPR                SETC  '&XCONTOKEN'                                00128700
.*                                                                      00128800
                      AIF   ('&XCONTOKEN'(1,1) NE '(').ZI6B             00128900
&ZCGPR   SETC  '0('.'&XCONTOKEN'(2,K'&XCONTOKEN-2).')'                  00129000
.ZI6B                 ANOP  ,                                           00129100
.*                                                                      00129200
&ZOPN                 SETA  &ZOPN+1                                     00129300
&ZOPL(&ZOPN)          SETC  ' '                                         00129400
&ZOPO(&ZOPN)          SETC  'MVC'                                       00129500
&ZOPV(&ZOPN)          SETC  '4(16,1),&ZCGPR'                            00129600
&ZOPD(&ZOPN)          SETC  '++ &ZXCONTOKEN XCONTOKEN'                  00129700
.*                                                                      00129800
.ZI6E                 ANOP  ,                                           00129900
.*-------------------------------------------------------------------   00130000
.***AI.L25  XREQTOKEN CL16                                              00130100
                      AIF   ('&ZXREQTOKEN' EQ '').ZI7E                  00130200
                      AIF   ('&ZXREQTOKEN' EQ 'OUTPUT').ZI7E            00130300
&ZCGPR                SETC  '&XREQTOKEN'                                00130400
.*                                                                      00130500
                      AIF   ('&XREQTOKEN'(1,1) NE '(').ZI7B             00130600
&ZCGPR   SETC  '0('.'&XREQTOKEN'(2,K'&XREQTOKEN-2).')'                  00130700
.ZI7B                 ANOP  ,                                           00130800
.*                                                                      00130900
&ZOPN                 SETA  &ZOPN+1                                     00131000
&ZOPL(&ZOPN)          SETC  ' '                                         00131100
&ZOPO(&ZOPN)          SETC  'MVC'                                       00131200
&ZOPV(&ZOPN)          SETC  '20(16,1),&ZCGPR'                           00131300
&ZOPD(&ZOPN)          SETC  '++ &ZXREQTOKEN XREQTOKEN'                  00131400
.*                                                                      00131500
.ZI7E                 ANOP  ,                                           00131600
.*-------------------------------------------------------------------   00131700
&ZOPN1                SETA &ZOPN                                        00131800
.*******************************************************************    00131900
.***  PROCESS IXLFCOMP OUTPUT PARAMETERS                                00132000
.*******************************************************************    00132100
                      ACTR  10000                                       00132200
.*******************************************************************    00132300
.***AO.X02  RETURN CODE PROCESSING                                      00132400
.*******************************************************************    00132500
                      AIF   (N'&RETCODE LE 0).ZMRETX                    00132600
                      AIF   ('&XRETCODE'(1,1) EQ '(').ZMRET2            00132700
                      AIF   ('&XRETCODE' EQ 'GPR15').ZMRETX             00132800
                      AIF   ('&XRETCODE' EQ 'REG15').ZMRETX             00132900
                      AIF   ('&XRETCODE' EQ 'R15').ZMRETX               00133000
                      AIF   ('&XRETCODE' EQ '15').ZMRETX                00133100
&ZOPN                 SETA  &ZOPN+1                                     00133200
&ZOPL(&ZOPN)          SETC  ' '                                         00133300
&ZOPO(&ZOPN)          SETC  'ST'                                        00133400
&ZOPV(&ZOPN)          SETC  '15,&XRETCODE'                              00133500
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00133600
                      AGO   .ZMRETX                                     00133700
.*                                                                      00133800
.ZMRET2               ANOP  ,                                           00133900
&ZCGPR                SETC  '&XRETCODE'(2,K'&XRETCODE-2)                00134000
                      AIF   ('&ZCGPR' EQ 'GPR15').ZMRETX                00134100
                      AIF   ('&ZCGPR' EQ 'REG15').ZMRETX                00134200
                      AIF   ('&ZCGPR' EQ 'R15').ZMRETX                  00134300
                      AIF   ('&ZCGPR' EQ '15').ZMRETX                   00134400
&ZOPN                 SETA  &ZOPN+1                                     00134500
&ZOPL(&ZOPN)          SETC  ' '                                         00134600
&ZOPO(&ZOPN)          SETC  'LR'                                        00134700
&ZOPV(&ZOPN)          SETC  '&ZCGPR,15'                                 00134800
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00134900
.ZMRETX               ANOP  ,                                           00135000
.*******************************************************************    00135100
.***AO.X03  REASON CODE PROCESSING                                      00135200
.*******************************************************************    00135300
                      AIF   (N'&RSNCODE LE 0).ZMRSNX                    00135400
                      AIF   ('&XRSNCODE'(1,1) EQ '(').ZMRSN2            00135500
                      AIF   ('&XRSNCODE' EQ 'GPR0').ZMRSNX              00135600
                      AIF   ('&XRSNCODE' EQ 'GPR00').ZMRSNX             00135700
                      AIF   ('&XRSNCODE' EQ 'REG0').ZMRSNX              00135800
                      AIF   ('&XRSNCODE' EQ 'REG00').ZMRSNX             00135900
                      AIF   ('&XRSNCODE' EQ 'R0').ZMRSNX                00136000
                      AIF   ('&XRSNCODE' EQ '0').ZMRSNX                 00136100
                      AIF   ('&XRSNCODE' EQ '00').ZMRSNX                00136200
&ZOPN                 SETA  &ZOPN+1                                     00136300
&ZOPL(&ZOPN)          SETC  ' '                                         00136400
&ZOPO(&ZOPN)          SETC  'ST'                                        00136500
&ZOPV(&ZOPN)          SETC  '0,&XRSNCODE'                               00136600
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00136700
                      AGO   .ZMRSNX                                     00136800
.*                                                                      00136900
.ZMRSN2               ANOP  ,                                           00137000
&ZCGPR                SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                00137100
                      AIF   ('&ZCGPR' EQ 'GPR0').ZMRSNX                 00137200
                      AIF   ('&ZCGPR' EQ 'GPR00').ZMRSNX                00137300
                      AIF   ('&ZCGPR' EQ 'REG0').ZMRSNX                 00137400
                      AIF   ('&ZCGPR' EQ 'REG00').ZMRSNX                00137500
                      AIF   ('&ZCGPR' EQ 'R0').ZMRSNX                   00137600
                      AIF   ('&ZCGPR' EQ '0').ZMRSNX                    00137700
                      AIF   ('&ZCGPR' EQ '00').ZMRSNX                   00137800
&ZOPN                 SETA  &ZOPN+1                                     00137900
&ZOPL(&ZOPN)          SETC  ' '                                         00138000
&ZOPO(&ZOPN)          SETC  'LR'                                        00138100
&ZOPV(&ZOPN)          SETC  '&ZCGPR,0'                                  00138200
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00138300
.ZMRSNX               ANOP  ,                                           00138400
.*******************************************************************    00138500
.***AO.X04  LABEL FOR MF=L PROCESSING                                   00138600
.*******************************************************************    00138700
.ZMFLX                ANOP  ,              MF=L PROCESSING              00138800
.*******************************************************************    00138900
.***AO.X05  FORMAT GENERATED INSTRUCTIONS                               00139000
.*******************************************************************    00139100
                      ACTR  10000                                       00139200
.*                                                                      00139300
                      LCLA  &ZLC           COLUMN POSITION              00139400
                      LCLA  &ZOPX          LIST TABLE INDEX             00139500
                      LCLC  &ZLL           LABEL                        00139600
                      LCLC  &ZLOP          OPERATION                    00139700
                      LCLC  &ZLV           VALUE                        00139800
                      LCLC  &ZLD           DESCRIPTION                  00139900
.*                                                                      00140000
&ZOPX                 SETA  1                                           00140100
.ZL2                  AIF   (&ZOPX GT &ZOPN1).ZLX  B IF DONE            00140200
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00140300
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00140400
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00140500
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00140600
                      AIF   (K'&ZLD LE 0).ZL5                           00140700
&ZLC                  SETA  35             COMMENT COLUMN               00140800
                      AIF   ('&ZLD'(1,1) NE '*').ZL3                    00140900
&ZLC                  SETA  33             COMMMENT COLUMN              00141000
.ZL3                  AIF   (K'&ZLV GE &ZLC-16-1).ZL4                   00141100
&ZLV                  SETC  '&ZLV'.' '                                  00141200
                      AGO   .ZL3                                        00141300
.*                                                                      00141400
.ZL4                  ANOP  ,                                           00141500
&ZLV                  SETC  '&ZLV'.' '                                  00141600
.ZL5                  ANOP  ,                                           00141700
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00141800
.*                                                                      00141900
&ZLL     &ZLOP &ZLV                                                     00142000
.*                                                                      00142100
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00142200
                      AGO   .ZL2           CONTINUE LOOPING             00142300
.*                                                                      00142400
.ZLX                  ANOP  ,                                           00142500
                      AIF   ('&XMF' EQ 'L').ZLINKX  MF=L                00142600
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00142700
.**------------------------------------------------------------------** 00142800
.**  Start of user maclasm code                                      ** 00142900
.**------------------------------------------------------------------** 00143000
.*                                                                      00143100
.**------------------------------------------------------------------** 00143200
.**  Ensure AR1 is 0 for primary callers                             ** 00143300
.**------------------------------------------------------------------** 00143400
.*                                                                      00143500
.**  This code is necessary because the entry linkage of the called  ** 00143600
.**  routine needs to reference fields in the parameter list while   ** 00143700
.**  executing in AR mode without knowing the mode of the caller.    ** 00143800
.*                                                                      00143900
         AIF   ('&SYSASCE' NE 'P').CALLSKIPSETAR1  Check for AR mode    00144000
         LAE   1,0(1,0)                 Make sure AR1 is cleared        00144100
.CALLSKIPSETAR1 ANOP ,                                                  00144200
.*                                                                      00144300
.*                                                                      00144400
.**------------------------------------------------------------------** 00144500
.**  Generate the linkage to the force completion                    ** 00144600
.**------------------------------------------------------------------** 00144700
.*                                                                      00144800
.**  Note that in the following instructions the index register is   ** 00144900
.**  used instead of the base register so that ALET translation is   ** 00145000
.**  not performed and the code works the same in both primary and   ** 00145100
.**  AR mode.                                                        ** 00145200
.*                                                                      00145300
         L     15,16(0,0)               Get CVT address            @D1C 00145400
         L     15,140(15,0)             Get ECVT address           @D1C 00145500
         L     15,256(15,0)             Get XRAT address           @D1C 00145600
         L     15,48(15,0)              FComp mainline routine     @D1C 00145700
         BALR  14,15                    Branch to routine          @D1C 00145800
.*                                                                      00145900
.*                                                                      00146000
.**------------------------------------------------------------------** 00146100
.**  End of user maclasm code                                        ** 00146200
.**------------------------------------------------------------------** 00146300
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00146400
.ZLINKX               ANOP  ,                                           00146500
.*******************************************************************    00146600
.***AP.X01  FORMAT GENERATED CODE                                       00146700
.ZL21                 AIF   (&ZOPX GT &ZOPN).ZLX1  B IF DONE            00146800
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00146900
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00147000
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00147100
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00147200
                      AIF   (K'&ZLD LE 0).ZL51                          00147300
&ZLC                  SETA  35             COMMENT COLUMN               00147400
                      AIF   ('&ZLD'(1,1) NE '*').ZL31                   00147500
&ZLC                  SETA  33             COMMENT COLUMN               00147600
.ZL31                 AIF   (K'&ZLV GE &ZLC-16-1).ZL41                  00147700
&ZLV                  SETC  '&ZLV'.' '                                  00147800
                      AGO   .ZL31                                       00147900
.*                                                                      00148000
.ZL41                 ANOP  ,                                           00148100
&ZLV                  SETC  '&ZLV'.' '                                  00148200
.ZL51                 ANOP  ,                                           00148300
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00148400
.*                                                                      00148500
&ZLL     &ZLOP &ZLV                                                     00148600
.*                                                                      00148700
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00148800
                      AGO   .ZL21          CONTINUE LOOPING             00148900
.*                                                                      00149000
.ZLX1                 ANOP  ,                                           00149100
.*******************************************************************    00149200
.***AP.X02  END OF IXLFCOMP MACRO                                       00149300
&ZIXLFCOMP            SETC  'YES'          SET IXLFCOMP USED            00149400
         POP   PRINT                                                    00149500
*                                            IXLFCOMP-0                 00149600
         SPACE 1                                                        00149700
.ZLX2                 ANOP  ,                                           00149800
         MEND                                                           00149900
**********************************************************************/ 00150000
*/*PB.OC01 INVOKE MACRO---------------------------------------------*/  00150100
*%IXLFCOMP: MACRO KEYS(CONTOKEN,REQTOKEN,OPTYPE,RETCODE,RSNCODE,        00150200
*                 PLISTVER,MF);                                         00150300
*  ANS('?'||MACLABEL||' '||'IXLFCOMQ '||MACLIST||                       00150400
*         ' '||MACKEYS||';') COL(MACLMAR);                              00150500
*%END IXLFCOMP;                                                         00150600
