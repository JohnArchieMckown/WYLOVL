*/**** START OF SPECIFICATIONS **************************************** 00000100
*                                                                     * 00000200
*                                                                     * 00000300
*01* MACRO NAME:  CSVDYLPA                              -11/03/99-<0> * 00000400
*                                                                     * 00000500
*                                                                     * 00000600
*01* DESCRIPTIVE NAME:  Dynamic LPA Services                          * 00000700
*                                                                     * 00000800
*01* PROPRIETARY STATEMENT:                                           * 00000900
*                                                                     * 00001000
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 00001100
*     5647-A01 (C) COPYRIGHT IBM CORP. 1997, 2000                     * 00001200
*                                                                     * 00001300
* STATUS= HBB7703                                                     * 00001400
*                                                                     * 00001500
*                                                                     * 00001600
*                                                                     * 00001700
*01* FUNCTION:                                                        * 00001800
*                                                                     * 00001900
*                                                                     * 00002000
*      CSVDYLPA allows you to to request dynamic LPA services.  Be    * 00002100
*      aware, however, that LPA module areas built at IPL time (LPA,  * 00002200
*      MLPA, FLPA) are not modified. Instead, this set of services    * 00002300
*      lets you add modules to, and delete modules from, common       * 00002400
*      storage. It does this in such a way that, when searching by    * 00002500
*      module name, the system will locate the copy of a module added * 00002600
*      by dynamic LPA services even if it was present in PLPA, MLPA,  * 00002700
*      or FLPA.                                                       * 00002800
*                                                                     * 00002900
*      With CSVDYLPA, you can request services to:                    * 00003000
*                                                                     * 00003100
*                                                                     * 00003200
*      o   Add one or more modules to common storage (REQUEST=ADD).   * 00003300
*                                                                     * 00003400
*      o   Delete one or more modules that were previously added      * 00003500
*          using dynamic LPA services (REQUEST=DELETE).               * 00003600
*                                                                     * 00003700
*      o   Query information about support for LPA services           * 00003800
*          (REQUEST=QUERYDYN).                                        * 00003900
*                                                                     * 00004000
*                                                                     * 00004100
*                                                                     * 00004200
*      REQUEST=ADD allows you to add one or more modules or aliases   * 00004300
*      to LPA.                                                        * 00004400
*                                                                     * 00004500
*      REQUEST=DELETE allows you to remove from LPA one or more       * 00004600
*      modules or aliases that had previously been added by dynamic   * 00004700
*      LPA services.                                                  * 00004800
*                                                                     * 00004900
*      REQUEST=QUERYDYN allows you to query whether the ADD and       * 00005000
*      DELETE functions are available. This function can be used on   * 00005100
*      any MVS/ESA or follow-on product release.                      * 00005200
*                                                                     * 00005300
*01* EXTERNAL CLASSIFICATION:                                         * 00005400
*                                                                     * 00005500
*02* PI:   BASE                                                       * 00005600
*                                                                     * 00005700
*02* NONE: FIELDS                                                     * 00005800
*          CMDINFO                                                    * 00005900
*          LINKAGE                                                    * 00006000
*          MF=M                                                       * 00006100
*                                                                     * 00006200
*01* END OF EXTERNAL CLASSIFICATION:                                  * 00006300
*                                                                     * 00006400
*01* ENVIRONMENT:                                                     * 00006500
*                                                                     * 00006600
*                                                                     * 00006700
*      Minimum authorization: With the exception of the QUERYDYN      * 00006800
*                        request, the dynamic LPA functions require   * 00006900
*                        Any of the following:                        * 00007000
*                                                                     * 00007100
*                                                                     * 00007200
*                        o   Supervisor state                         * 00007300
*                                                                     * 00007400
*                        o   PKM 0-7                                  * 00007500
*                                                                     * 00007600
*                        o   PSW key 0-7                              * 00007700
*                                                                     * 00007800
*                        o   APF authorized                           * 00007900
*                                                                     * 00008000
*                        o   Authorized for UPDATE to the RACF        * 00008100
*                            FACILITY class resource                  * 00008200
*                            CSVDYLPA.ADD.modname for the ADD         * 00008300
*                            request, and CSVDYLPA.DELETE.modname for * 00008400
*                            the DELETE request.                      * 00008500
*                                                                     * 00008600
*                                                                     * 00008700
*                        Users of REQUEST=ADD MODINFOTYPE=MEMBERMASK  * 00008800
*                        require any of the following:                * 00008900
*                                                                     * 00009000
*                                                                     * 00009100
*                        o   Supervisor state                         * 00009200
*                                                                     * 00009300
*                        o   PKM 0-7                                  * 00009400
*                                                                     * 00009500
*                        o   PSW key 0-7                              * 00009600
*                                                                     * 00009700
*                        o   APF authorized                           * 00009800
*                                                                     * 00009900
*                                                                     * 00010000
*                                                                     * 00010100
*                        Users of REQUEST=ADD DCB, REQUEST=ADD        * 00010200
*                        DCBPTR, REQUEST=ADD MASKDCB, or REQUEST=ADD  * 00010300
*                        MASKDCBPTR require any of the following:     * 00010400
*                                                                     * 00010500
*                                                                     * 00010600
*                        o   Supervisor state                         * 00010700
*                                                                     * 00010800
*                        o   PKM 0-7                                  * 00010900
*                                                                     * 00011000
*                        o   PSW key 0-7                              * 00011100
*                                                                     * 00011200
*                        o   APF authorized                           * 00011300
*                                                                     * 00011400
*                                                                     * 00011500
*                                                                     * 00011600
*                        The minimum authority for the Querydyn       * 00011700
*                        request is problem state and PSW key 8-15.   * 00011800
*                                                                     * 00011900
*      Dispatchable unit mode: Task mode.                             * 00012000
*                                                                     * 00012100
*      Cross Memory Mode: PASN=HASN=SASN.                             * 00012200
*                                                                     * 00012300
*      AMODE:            31-bit.                                      * 00012400
*                                                                     * 00012500
*      ASC mode:         Primary or Access Register.                  * 00012600
*                                                                     * 00012700
*      Interrupt status: Enabled for I/O and external interrupts.     * 00012800
*                                                                     * 00012900
*      Locks:            The caller must not be locked.               * 00013000
*                                                                     * 00013100
*      Control parameters: Control parameters must be in the primary  * 00013200
*                        address space or, for AR-mode callers, must  * 00013300
*                        be in an address/data space that is          * 00013400
*                        addressable through a public entry on the    * 00013500
*                        caller's dispatchable unit access list       * 00013600
*                        (DU-AL).                                     * 00013700
*                                                                     * 00013800
*                        The user-provided data set name via the      * 00013900
*                        DSNAME parameter has the same requirements   * 00014000
*                        and restrictions as the control parameters.  * 00014100
*                                                                     * 00014200
*                        The user-provided information via the        * 00014300
*                        MODINFO parameter has the same requirements  * 00014400
*                        and restrictions as the control parameters.  * 00014500
*                                                                     * 00014600
*                                                                     * 00014700
*                                                                     * 00014800
*01* PROGRAMMING REQUIREMENTS:                                        * 00014900
*                                                                     * 00015000
*    The caller should include the CSVLPRET macro to get equate       * 00015100
*    symbols for the return and reason codes.                         * 00015200
*                                                                     * 00015300
*    The caller must include the CSVLPRET macro to get a mapping of   * 00015400
*    the input/output area provided via the MODINFO                   * 00015500
*                                                                     * 00015600
*    The caller may hold the system ENQ resource with QNAME SYSZCSV   * 00015700
*    and RNAME CSVDYLPA in the exclusive state.  While this ENQ       * 00015800
*    resource is held, any other requests to use the CSVDYLPA         * 00015900
*    services to ADD or DELETE will be delayed.  The ENQ resource     * 00016000
*    must not be held in the shared state when using CSVDYLPA         * 00016100
*    services.  parameter for REQUEST=ADD and REQUEST=DELETE.         * 00016200
*                                                                     * 00016300
*    The caller must include the CSVLPRET macro to get equates for    * 00016400
*    the information returned via the DYNFUNC parameter for           * 00016500
*    REQUEST=QUERYDYN.                                                * 00016600
*                                                                     * 00016700
*01* RESTRICTIONS:                                                    * 00016800
*                                                                     * 00016900
*    The caller must not have functional recovery routines (FRRs)     * 00017000
*    established.                                                     * 00017100
*                                                                     * 00017200
*01* INPUT REGISTER INFORMATION:                                      * 00017300
*                                                                     * 00017400
*    Before issuing the CSVDYLPA macro, the caller does not have to   * 00017500
*    place any information into any general purpose register (GPR) or * 00017600
*    access register (AR) unless using it in register notation for a  * 00017700
*    particular parameter, or using it as a base register.            * 00017800
*                                                                     * 00017900
*01* OUTPUT REGISTER INFORMATION:                                     * 00018000
*                                                                     * 00018100
*    When control returns to the caller, the GPRs contain:            * 00018200
*                                                                     * 00018300
*                                                                     * 00018400
*    REGISTER    CONTENTS                                             * 00018500
*                                                                     * 00018600
*    0           Reason code if GPR15 is not 0 (Used as a work        * 00018700
*                register by the system for REQUEST=QUERYDYN)         * 00018800
*                                                                     * 00018900
*    1           Used as a work register by the system                * 00019000
*                                                                     * 00019100
*    2-13        Unchanged                                            * 00019200
*                                                                     * 00019300
*    14          Used as a work register by the system                * 00019400
*                                                                     * 00019500
*    15          Return code (Used as a work register by the system   * 00019600
*                for REQUEST=QUERYDYN)                                * 00019700
*                                                                     * 00019800
*                                                                     * 00019900
*                                                                     * 00020000
*    When control returns to the caller, the ARs contain:             * 00020100
*                                                                     * 00020200
*                                                                     * 00020300
*    REGISTER    CONTENTS                                             * 00020400
*                                                                     * 00020500
*    0-1         Used as work registers by the system                 * 00020600
*                                                                     * 00020700
*    2-13        Unchanged                                            * 00020800
*                                                                     * 00020900
*    14-15       Used as work registers by the system                 * 00021000
*                                                                     * 00021100
*                                                                     * 00021200
*                                                                     * 00021300
*    Some callers depend on register contents remaining the same      * 00021400
*    before and after issuing a service.  If the system changes the   * 00021500
*    contents of registers on which the caller depends, the caller    * 00021600
*    must save them before issuing the service, and restore them      * 00021700
*    after the system returns control.                                * 00021800
*                                                                     * 00021900
*01* PERFORMANCE IMPLICATIONS:                                        * 00022000
*    None.                                                            * 00022100
*                                                                     * 00022200
*01* SYNTAX:                                                          * 00022300
*                                                                     * 00022400
*[xlabel]  CSVDYLPA    REQUEST=ADD                                   * 00022500
*                    |    ,MODINFOTYPE=MEMBERLIST                    * 00022600
*                    |   |     ,MODINFO=xmodinfo                      * 00022700
*                    |   |    [,MODINFOX=xmodinfox|NO_MODINFOX]     * 00022800
*                    |   |     ,NUMMOD=xnummod                        * 00022900
*                    |   |   [,BYADDR=NO                             * 00023000
*                    |   |   |    ,DSNAME=xdsname                    * 00023100
*                    |   |   |    ,DDNAME=xddname                    * 00023200
*                    |   |   |    ,DCB=xdcb                          * 00023300
*                    |   |   |    ,DCBPTR=xdcbptr]                   * 00023400
*                    |   |   [,BYADDR=YES]                           * 00023500
*                    |    ,MODINFOTYPE=MEMBERMASK                    * 00023600
*                    |         ,MODINFO=xmodinfo                      * 00023700
*                    |        ,MASKDSNAME=xmaskdsname                * 00023800
*                    |        ,MASKDDNAME=xmaskddname                * 00023900
*                    |        ,MASKDCB=xmaskdcb                      * 00024000
*                    |        ,MASKDCBPTR=xmaskdcbptr                * 00024100
*                    |         ,OUTAREAPTR=xoutareaptr                * 00024200
*                    |         ,OUTAREALEN=xoutarealen                * 00024300
*                    |         ,OUTAREANUM=xoutareanum                * 00024400
*                    |         ,OUTAREASP=xoutareasp                  * 00024500
*                    |   [,APFREQUIRED=YES]                          * 00024600
*                    |   [,APFREQUIRED=NO]                           * 00024700
*                    |   [,SECMODCHECK=YES]                          * 00024800
*                    |   [,SECMODCHECK=NO]                           * 00024900
*                    |     ,REQUESTOR=xrequestor                      * 00025000
*                    |   [,MODPROB=CONTINUE]                         * 00025100
*                    |   [,MODPROB=STOP]                             * 00025200
*                    |    [,ERRORDATA=xerrordata]                     * 00025300
*                     ,REQUEST=DELETE                                * 00025400
*                    |     ,MODINFO=xmodinfo                          * 00025500
*                    |     ,NUMMOD=xnummod                            * 00025600
*                    |   [,TYPE=BYTOKEN]                             * 00025700
*                    |   [,TYPE=CURRENT]                             * 00025800
*                    |   [,TYPE=OLDEST]                              * 00025900
*                    |   [,SECMODCHECK=YES]                          * 00026000
*                    |   [,SECMODCHECK=NO]                           * 00026100
*                     ,REQUEST=QUERYDYN                              * 00026200
*                          ,DYNFUNC=xdynfunc                          * 00026300
*                    [,LINKAGE=SYSTEM]                               * 00026400
*                    [,LINKAGE=INTERNAL                              * 00026500
*                          ,CMDINFO=xcmdinfo]                         * 00026600
*                     [,RETCODE=xretcode]                             * 00026700
*                     [,RSNCODE=xrsncode]                             * 00026800
*                     [,PLISTVER=xplistver|IMPLIED_VERSION]         * 00026900
*                    [,MF=S]                                         * 00027000
*                    [,MF=(L,xmfctrl,xmfattr|0D)]                  * 00027100
*                    [,MF=(M,xmfctrl,COMPLETE|NOCHECK)]            * 00027200
*                    [,MF=(E,xmfctrl,COMPLETE|NOCHECK)]            * 00027300
*                                                                     * 00027400
*                                                                     * 00027500
*      Where:                                                         * 00027600
*                                                                     * 00027700
*                                                                     * 00027800
*      [xlabel]                                                       * 00027900
*          is an optional symbol, starting in column 1, that is the   * 00028000
*          name on the CSVDYLPA macro invocation.  The name must      * 00028100
*          conform to the rules for an ordinary assembler language    * 00028200
*          symbol.                                                    * 00028300
*          DEFAULT: No name.                                          * 00028400
*                                                                     * 00028500
*                                                                     * 00028600
*                                                                     * 00028700
*                                                                     * 00028800
*      REQUEST=ADD|DELETE|QUERYDYN                                  * 00028900
*          is a required keyword input that indicates the type of     * 00029000
*          request.                                                   * 00029100
*                                                                     * 00029200
*                                                                     * 00029300
*          REQUEST=ADD                                                * 00029400
*              indicates to add one or more modules to LPA.  Note     * 00029500
*              that if the module already exists within LPA, the      * 00029600
*              request is still processed. The original copy of the   * 00029700
*              module is not deleted. A new copy of the module is     * 00029800
*              created, and subsequent searches of LPA will only find * 00029900
*              that new copy. A token is returned for each load       * 00030000
*              module.  The token must be used on the DELETE request  * 00030100
*              unless using the TYPE=CURRENT or TYPE=OLDEST option of * 00030200
*              REQUEST=DELETE.  This token is in the LPMEA area.      * 00030300
*                                                                     * 00030400
*                                                                     * 00030500
*              MODINFOTYPE=MEMBERLIST|MEMBERMASK                    * 00030600
*                  is a required keyword input that indicates the     * 00030700
*                  type of MODINFO area provided.  In all cases, the  * 00030800
*                  MODINFO area contains entries mapped by DSECT      * 00030900
*                  LPMEA in macro CSVLPRET. Each entry contains a     * 00031000
*                  flag area which should be cleared before calling   * 00031100
*                  the CSVDYLPA service.                              * 00031200
*                                                                     * 00031300
*                  You can indicate that                              * 00031400
*                                                                     * 00031500
*                                                                     * 00031600
*                  o   the module is to be placed into fixed storage  * 00031700
*                      (as opposed to pageable),                      * 00031800
*                                                                     * 00031900
*                  o   the module is to be placed into page-protected * 00032000
*                      storage (as occurs within the LPA initialized  * 00032100
*                      during IPL). Note that when you request this   * 00032200
*                      option, the module size will be rounded up to  * 00032300
*                      the next higher page multiple, thus likely     * 00032400
*                      using more space than the module itself truly  * 00032500
*                      needs.                                         * 00032600
*                                                                     * 00032700
*                  o   the storage acquired for the module is to be   * 00032800
*                      OWNER=SYSTEM (as opposed to OWNER=HOME).       * 00032900
*                                                                     * 00033000
*                                                                     * 00033100
*                                                                     * 00033200
*                                                                     * 00033300
*                  MODINFOTYPE=MEMBERLIST                             * 00033400
*                      indicates that the area contains the list of   * 00033500
*                      modules to be processed.                       * 00033600
*                                                                     * 00033700
*                                                                     * 00033800
*                      MODINFO=xmodinfo                               * 00033900
*                          is the name (RS-type), or address in       * 00034000
*                          register (2)-(12), of a required character * 00034100
*                          input/output that specifies an area that   * 00034200
*                          contains contiguous entries. Each entry    * 00034300
*                          contains a module (or alias) name and      * 00034400
*                          status flags.  Each name in the area must  * 00034500
*                          be unique.  The system processes more      * 00034600
*                          efficiently if the names in the area are   * 00034700
*                          in ascending EBCDIC order (e.g., "A", then * 00034800
*                          "B", then "C").  The number of entries     * 00034900
*                          must match the value provided via the      * 00035000
*                          nummod parameter.                          * 00035100
*                                                                     * 00035200
*                          On output, among other possibilities, the  * 00035300
*                          status area might indicate:                * 00035400
*                                                                     * 00035500
*                                                                     * 00035600
*                          o   the module could not be located.       * 00035700
*                                                                     * 00035800
*                          o   an error occurred processing the input * 00035900
*                              data set (in which case no further     * 00036000
*                              processing of additional modules is    * 00036100
*                              done).                                 * 00036200
*                                                                     * 00036300
*                          o   you are not authorized to process the  * 00036400
*                              particular module.                     * 00036500
*                                                                     * 00036600
*                                                                     * 00036700
*                                                                     * 00036800
*                          For a complete list of the possible        * 00036900
*                          problem types, refer to the equate symbols * 00037000
*                          beginning with LpmeaModprob in the         * 00037100
*                          CSVLPRET data area.                        * 00037200
*                                                                     * 00037300
*                          If you specify an alias for an existing    * 00037400
*                          load module, the processing will not       * 00037500
*                          simply add that alias. Rather, it will     * 00037600
*                          create a new copy of the load module that  * 00037700
*                          is associated with that alias.             * 00037800
*                                                                     * 00037900
*                          Within each LPMEA, the module name should  * 00038000
*                          be left-justified padded on the right with * 00038100
*                          EBCDIC blanks if less than 8 characters    * 00038200
*                          long. There should be no embedded blanks.  * 00038300
*                                                                     * 00038400
*                                                                     * 00038500
*                                                                     * 00038600
*                                                                     * 00038700
*                      [MODINFOX=xmodinfox|NO_MODINFOX]             * 00038800
*                          is the name (RS-type), or address in       * 00038900
*                          register (2)-(12), of an optional          * 00039000
*                          character input that specifies an area     * 00039100
*                          that contains contiguous entries. Each     * 00039200
*                          entry contains additional information that * 00039300
*                          is used when processing the information in * 00039400
*                          the corresponding entry in the modinfo     * 00039500
*                          area. It is mapped by DSECT LPMEAX in      * 00039600
*                          macro IHALPRET.                            * 00039700
*                                                                     * 00039800
*                          You can indicate that the system is to     * 00039900
*                          update a particular SVC table entry for a  * 00040000
*                          given entry name. You provide the SVC      * 00040100
*                          number (and the extended SVC routing       * 00040200
*                          number if appropriate). The system         * 00040300
*                          performs an SVCUPDTE function to update    * 00040400
*                          SVC processing so that it will give        * 00040500
*                          control to the newly added LPA routine     * 00040600
*                          when that particular SVC is issued.        * 00040700
*                                                                     * 00040800
*                          This area must contain the number of       * 00040900
*                          entries indicated by the nummod parameter. * 00041000
*                          DEFAULT: NO_MODINFOX                       * 00041100
*                                                                     * 00041200
*                                                                     * 00041300
*                                                                     * 00041400
*                                                                     * 00041500
*                      NUMMOD=xnummod                                 * 00041600
*                          is the name (RS-type), or address in       * 00041700
*                          register (2)-(12), of a required fullword  * 00041800
*                          input that contains the number of entries  * 00041900
*                          in the area specified by the modinfo       * 00042000
*                          parameter and also, when specified, by the * 00042100
*                          modinfox parameter.  Nummod must be in the * 00042200
*                          range 1-256.                               * 00042300
*                                                                     * 00042400
*                                                                     * 00042500
*                                                                     * 00042600
*                                                                     * 00042700
*                      [BYADDR=NO|YES]                              * 00042800
*                          is an optional keyword input that          * 00042900
*                          indicates whether the modules have already * 00043000
*                          been fetched into storage.                 * 00043100
*                          DEFAULT: NO                                * 00043200
*                                                                     * 00043300
*                                                                     * 00043400
*                          [BYADDR=NO                                 * 00043500
*                              indicates that the modules need to be  * 00043600
*                              fetched.                               * 00043700
*                                                                     * 00043800
*                                                                     * 00043900
*                              The following is a set of mutually     * 00044000
*                              exclusive keys.  This set is required; * 00044100
*                              only one key must be specified.        * 00044200
*                                                                     * 00044300
*                                                                     * 00044400
*                              DSNAME=xdsname                         * 00044500
*                                  belongs to a set of mutually       * 00044600
*                                  exclusive keys. It is the name     * 00044700
*                                  (RS-type), or address in register  * 00044800
*                                  (2)-(12), of a 44 character input  * 00044900
*                                  that contains the name of the data * 00045000
*                                  set/library from which all the     * 00045100
*                                  input modules are to be loaded.    * 00045200
*                                  The data set must be cataloged.    * 00045300
*                                  It may be allocated as a PDS or    * 00045400
*                                  PDSE program library.              * 00045500
*                                                                     * 00045600
*                                  Note that if the data set is       * 00045700
*                                  migrated, the issuer's unit of     * 00045800
*                                  work will wait until the data set  * 00045900
*                                  is retrieved before continuing.    * 00046000
*                                                                     * 00046100
*                                  If the caller is authorized only   * 00046200
*                                  by the RACF FACILITY class         * 00046300
*                                  resource (is not supervisor state, * 00046400
*                                  system key, system PKM, or APF     * 00046500
*                                  authorized), then the data set     * 00046600
*                                  must be APF authorized. Similarly, * 00046700
*                                  if the caller is supervisor state, * 00046800
*                                  system key, or system PKM, or APF  * 00046900
*                                  authorized, the data set need not  * 00047000
*                                  be APF authorized.                 * 00047100
*                                                                     * 00047200
*                              DDNAME=xddname                         * 00047300
*                                  belongs to a set of mutually       * 00047400
*                                  exclusive keys. It is the name     * 00047500
*                                  (RS-type), or address in register  * 00047600
*                                  (2)-(12), of an 8 character input  * 00047700
*                                  that contains the DDNAME of the    * 00047800
*                                  data set/library (or concatenation * 00047900
*                                  of libraries) from which all the   * 00048000
*                                  input modules are to be loaded.    * 00048100
*                                  The system will open the DDNAME    * 00048200
*                                  for input.                         * 00048300
*                                                                     * 00048400
*                                  If the caller is authorized only   * 00048500
*                                  by the RACF FACILITY class         * 00048600
*                                  resource (is not supervisor state, * 00048700
*                                  system key, system PKM, or APF     * 00048800
*                                  authorized), then the              * 00048900
*                                  concatenation must be APF          * 00049000
*                                  authorized.                        * 00049100
*                                                                     * 00049200
*                              DCB=xdcb                               * 00049300
*                                  belongs to a set of mutually       * 00049400
*                                  exclusive keys. It is the name     * 00049500
*                                  (RS-type), or address in register  * 00049600
*                                  (2)-(12), of a character input     * 00049700
*                                  that contains the opened DCB       * 00049800
*                                  representing the data set/library  * 00049900
*                                  (or concatenation of libraries)    * 00050000
*                                  from which all the input modules   * 00050100
*                                  are to be loaded.  The DCB must be * 00050200
*                                  opened for input.                  * 00050300
*                                                                     * 00050400
*                                  The caller must be either          * 00050500
*                                  supervisor state, system key,      * 00050600
*                                  system PKM, or APF authorized to   * 00050700
*                                  use this option.                   * 00050800
*                                                                     * 00050900
*                              DCBPTR=xdcbptr]                        * 00051000
*                                  belongs to a set of mutually       * 00051100
*                                  exclusive keys. It is the name     * 00051200
*                                  (RS-type), or address in register  * 00051300
*                                  (2)-(12), of a 4 byte input that   * 00051400
*                                  contains the address that contains * 00051500
*                                  the address of the opened DCB      * 00051600
*                                  representing the data set/library  * 00051700
*                                  (or concatenation of libraries)    * 00051800
*                                  from which all the input modules   * 00051900
*                                  are to be loaded.  The DCB must be * 00052000
*                                  opened for input.  You can specify * 00052100
*                                  DCBPTR=CVTLINK to request that the * 00052200
*                                  LNKLST be used as the library      * 00052300
*                                  concatenation (you must have an    * 00052400
*                                  assembler USING established on the * 00052500
*                                  CVT data area in order to use      * 00052600
*                                  this).                             * 00052700
*                                                                     * 00052800
*                                  The caller must be either          * 00052900
*                                  supervisor state, system key,      * 00053000
*                                  system PKM, or APF authorized to   * 00053100
*                                  use this option.                   * 00053200
*                                                                     * 00053300
*                                                                     * 00053400
*                                                                     * 00053500
*                              End of a set of mutually exclusive     * 00053600
*                              required keys.                         * 00053700
*                                                                     * 00053800
*                                                                     * 00053900
*                          [BYADDR=YES]                               * 00054000
*                              indicates that the modules have        * 00054100
*                              already been fetched.  In this case,   * 00054200
*                              the MODINFO area must be present not   * 00054300
*                              only with the module names but also    * 00054400
*                              with the following LPMEA fields set    * 00054500
*                              for each module:                       * 00054600
*                                                                     * 00054700
*                                                                     * 00054800
*                              o   LpmeaEntryPointAddr - the entry    * 00054900
*                                  point address (with bit 0 of that  * 00055000
*                                  address being on if the entry is   * 00055100
*                                  to receive control in AMODE 31).   * 00055200
*                                                                     * 00055300
*                              o   LpmeaLoadPointAddr - the load      * 00055400
*                                  point address (the start) of the   * 00055500
*                                  primary segment.                   * 00055600
*                                                                     * 00055700
*                              o   LpmeaModlen - the length of that   * 00055800
*                                  load segment.                      * 00055900
*                                                                     * 00056000
*                              o   LpmeaLoadPointAddr2 - if the load  * 00056100
*                                  module represents a split RMODE    * 00056200
*                                  load module, the load point        * 00056300
*                                  address of the secondary segment;  * 00056400
*                                  otherwise 0.                       * 00056500
*                                                                     * 00056600
*                              o   LpmeaModlen2 - if the load module  * 00056700
*                                  represents a split RMODE load      * 00056800
*                                  module, the length of that         * 00056900
*                                  secondary load segment; otherwise  * 00057000
*                                  0.                                 * 00057100
*                                                                     * 00057200
*                                                                     * 00057300
*                                                                     * 00057400
*                              All addresses must be in common        * 00057500
*                              storage, and the entry point address   * 00057600
*                              must be within the primary segment.    * 00057700
*                              It is up to the caller to page fix and * 00057800
*                              page protect the storage as needed.    * 00057900
*                                                                     * 00058000
*                                                                     * 00058100
*                                                                     * 00058200
*                                                                     * 00058300
*                                                                     * 00058400
*                  MODINFOTYPE=MEMBERMASK                             * 00058500
*                      indicates that the area is input/output, and   * 00058600
*                      contains only 1 entry. The module name in that * 00058700
*                      entry is treated as a "mask".  All members in  * 00058800
*                      the data set represented by the input (data    * 00058900
*                      set, DCB, or DDNAME) that match the input mask * 00059000
*                      (the mask may contain wildcard characters "*"  * 00059100
*                      and "?" and a wildcard match will be done) are * 00059200
*                      processed.  The system first creates a list of * 00059300
*                      the members that are to be processed and then  * 00059400
*                      continues in the same manner as for            * 00059500
*                      MODINFOTYPE=MEMBERLIST.                        * 00059600
*                                                                     * 00059700
*                                                                     * 00059800
*                      MODINFO=xmodinfo                               * 00059900
*                          is the name (RS-type), or address in       * 00060000
*                          register (2)-(12), of a required character * 00060100
*                          input/output that specifies an area that   * 00060200
*                          contains a single entry. The entry         * 00060300
*                          contains a member name mask and status     * 00060400
*                          flags.                                     * 00060500
*                                                                     * 00060600
*                          Within the LPMEA, the module name field    * 00060700
*                          represents a member name mask. All members * 00060800
*                          that match this mask (using wildcard       * 00060900
*                          matching with "*" representing 0 or more   * 00061000
*                          characters, and "?" representing exactly   * 00061100
*                          one character) will be processed. The      * 00061200
*                          member name mask should be left-justified  * 00061300
*                          within the 8-byte field and padded on the  * 00061400
*                          right with EBCDIC blanks if less than 8    * 00061500
*                          characters long. There should be no        * 00061600
*                          embedded blanks.                           * 00061700
*                                                                     * 00061800
*                                                                     * 00061900
*                                                                     * 00062000
*                                                                     * 00062100
*                      The following is a set of mutually exclusive   * 00062200
*                      keys.  This set is required; only one key must * 00062300
*                      be specified.                                  * 00062400
*                                                                     * 00062500
*                                                                     * 00062600
*                      MASKDSNAME=xmaskdsname                         * 00062700
*                          belongs to a set of mutually exclusive     * 00062800
*                          keys. It is the name (RS-type), or address * 00062900
*                          in register (2)-(12), of a 44 character    * 00063000
*                          input that contains the name of the data   * 00063100
*                          set/library from which all the input       * 00063200
*                          modules are to be loaded.  The data set    * 00063300
*                          must be cataloged.  It may be allocated as * 00063400
*                          a PDS or PDSE program library.             * 00063500
*                                                                     * 00063600
*                          Note that if the data set is migrated, the * 00063700
*                          issuer's unit of work will wait until the  * 00063800
*                          data set is retrieved before continuing.   * 00063900
*                                                                     * 00064000
*                          If the caller is authorized only by the    * 00064100
*                          RACF FACILITY class resource (is not       * 00064200
*                          supervisor state, system key, system PKM,  * 00064300
*                          or APF authorized), then the data set must * 00064400
*                          be APF authorized. Similarly, if the       * 00064500
*                          caller is supervisor state, system key, or * 00064600
*                          system PKM, or APF authorized, the data    * 00064700
*                          set need not be APF authorized.            * 00064800
*                                                                     * 00064900
*                      MASKDDNAME=xmaskddname                         * 00065000
*                          belongs to a set of mutually exclusive     * 00065100
*                          keys. It is the name (RS-type), or address * 00065200
*                          in register (2)-(12), of an 8 character    * 00065300
*                          input that contains the DDNAME of the data * 00065400
*                          set/library (or concatenation of           * 00065500
*                          libraries) from which all the input        * 00065600
*                          modules are to be loaded. The system will  * 00065700
*                          open the DDNAME for input.                 * 00065800
*                                                                     * 00065900
*                          If the caller is authorized only by the    * 00066000
*                          RACF FACILITY class resource (is not       * 00066100
*                          supervisor state, system key, system PKM,  * 00066200
*                          or APF authorized), then the concatenation * 00066300
*                          must be APF authorized.                    * 00066400
*                                                                     * 00066500
*                      MASKDCB=xmaskdcb                               * 00066600
*                          belongs to a set of mutually exclusive     * 00066700
*                          keys. It is the name (RS-type), or address * 00066800
*                          in register (2)-(12), of a character input * 00066900
*                          that contains the opened DCB representing  * 00067000
*                          the data set/library (or concatenation of  * 00067100
*                          libraries) from which all the input        * 00067200
*                          modules are to be loaded.  The DCB must be * 00067300
*                          opened for input.                          * 00067400
*                                                                     * 00067500
*                          The caller must be either supervisor       * 00067600
*                          state, system key, system PKM, or APF      * 00067700
*                          authorized to use this option.             * 00067800
*                                                                     * 00067900
*                      MASKDCBPTR=xmaskdcbptr                         * 00068000
*                          belongs to a set of mutually exclusive     * 00068100
*                          keys. It is the name (RS-type), or address * 00068200
*                          in register (2)-(12), of a 4 byte input    * 00068300
*                          that contains the address that contains    * 00068400
*                          the address of the opened DCB representing * 00068500
*                          the data set/library (or concatenation of  * 00068600
*                          libraries) from which all the input        * 00068700
*                          modules are to be loaded.  The DCB must be * 00068800
*                          opened for input.  You can specify         * 00068900
*                          MASKDCBPTR=CVTLINK to request that the     * 00069000
*                          LNKLST be used as the library              * 00069100
*                          concatenation (you must have an assembler  * 00069200
*                          USING established on the CVT data area in  * 00069300
*                          order to use this).                        * 00069400
*                                                                     * 00069500
*                          The caller must be either supervisor       * 00069600
*                          state, system key, system PKM, or APF      * 00069700
*                          authorized to use this option, unless      * 00069800
*                          CVTLINK was specified.                     * 00069900
*                                                                     * 00070000
*                                                                     * 00070100
*                                                                     * 00070200
*                      End of a set of mutually exclusive required    * 00070300
*                      keys.                                          * 00070400
*                                                                     * 00070500
*                                                                     * 00070600
*                                                                     * 00070700
*                      OUTAREAPTR=xoutareaptr                         * 00070800
*                          is the name (RS-type), or address in       * 00070900
*                          register (2)-(12), of a required 4 byte    * 00071000
*                          output that will contain the address of an * 00071100
*                          area obtained by the system. The area      * 00071200
*                          contains information about each member     * 00071300
*                          processed.  It consists of contiguous      * 00071400
*                          entries, each mapped by DSECT LPMEA within * 00071500
*                          macro CSVLPRET.                            * 00071600
*                                                                     * 00071700
*                          It is expected that the caller will free   * 00071800
*                          this area, using either FREEMAIN or        * 00071900
*                          STORAGE RELEASE, after processing it.  The * 00072000
*                          area is in the key of the caller of        * 00072100
*                          CSVDYLPA. Its length is contained in the   * 00072200
*                          output field specified by the OutAreaLen   * 00072300
*                          parameter.  Its subpool is contained in    * 00072400
*                          the output field specified by the          * 00072500
*                          OutAreaSP parameter.                       * 00072600
*                                                                     * 00072700
*                          This area will be obtained on behalf of    * 00072800
*                          the caller, and so must be freed, whenever * 00072900
*                          the return code is less than 8             * 00073000
*                          (CsvdylpaRc_InvParm) and when the output   * 00073100
*                          field specified by the OutAreaNum          * 00073200
*                          parameter is non-zero.                     * 00073300
*                                                                     * 00073400
*                                                                     * 00073500
*                                                                     * 00073600
*                                                                     * 00073700
*                      OUTAREALEN=xoutarealen                         * 00073800
*                          is the name (RS-type), or address in       * 00073900
*                          register (2)-(12), of a required fullword  * 00074000
*                          output that is to contain the length of    * 00074100
*                          the output area.                           * 00074200
*                                                                     * 00074300
*                                                                     * 00074400
*                                                                     * 00074500
*                                                                     * 00074600
*                      OUTAREANUM=xoutareanum                         * 00074700
*                          is the name (RS-type), or address in       * 00074800
*                          register (2)-(12), of a required fullword  * 00074900
*                          output that is to contain the number of    * 00075000
*                          entries in the output area.                * 00075100
*                                                                     * 00075200
*                                                                     * 00075300
*                                                                     * 00075400
*                                                                     * 00075500
*                      OUTAREASP=xoutareasp                           * 00075600
*                          is the name (RS-type), or address in       * 00075700
*                          register (2)-(12), of a required byte      * 00075800
*                          input/output that on input contains the    * 00075900
*                          subpool to use for the output area.  If    * 00076000
*                          the value is zero or specifies an          * 00076100
*                          unauthorized subpool, the system will use  * 00076200
*                          subpool 230.  Since the storage obtained   * 00076300
*                          is expected to be in the key of the        * 00076400
*                          CSVDYLPA caller, the subpool must either   * 00076500
*                          be one that is key-specifiable or one that * 00076600
*                          is only in the key of the CSVDYLPA caller. * 00076700
*                          If it is not, the system will use subpool  * 00076800
*                          230.  On output, the field contains the    * 00076900
*                          subpool that was actually used.            * 00077000
*                                                                     * 00077100
*                                                                     * 00077200
*                                                                     * 00077300
*                                                                     * 00077400
*                                                                     * 00077500
*                                                                     * 00077600
*                                                                     * 00077700
*                                                                     * 00077800
*              [APFREQUIRED=YES|NO]                                 * 00077900
*                  is an optional keyword input that indicates        * 00078000
*                  whether or not the input data set or data set      * 00078100
*                  concatenation (specified by data set name, DCB, or * 00078200
*                  DDNAME) must be APF authorized. This keyword is    * 00078300
*                  ignored unless the caller is supervisor state,     * 00078400
*                  system key, system PKM, or APF authorized.  In all * 00078500
*                  other cases, APFREQUIRED=YES is used.              * 00078600
*                  DEFAULT: YES                                       * 00078700
*                                                                     * 00078800
*                                                                     * 00078900
*                  [APFREQUIRED=YES]                                  * 00079000
*                      indicates that the input data set or data set  * 00079100
*                      concatenation must be APF authorized.          * 00079200
*                                                                     * 00079300
*                  [APFREQUIRED=NO]                                   * 00079400
*                      indicates that the input data set or data set  * 00079500
*                      concatenation need not be APF authorized.      * 00079600
*                                                                     * 00079700
*                                                                     * 00079800
*                                                                     * 00079900
*                                                                     * 00080000
*                                                                     * 00080100
*                                                                     * 00080200
*              [SECMODCHECK=YES|NO]                                 * 00080300
*                  is an optional keyword input that indicates        * 00080400
*                  whether or not the RACF FACILITY class check       * 00080500
*                  should be done for the module or alias being       * 00080600
*                  added.  This keyword is ignored unless the caller  * 00080700
*                  is supervisor state, system key, system PKM, or    * 00080800
*                  APF authorized.  In all other cases,               * 00080900
*                  SECMODCHECK=YES is used.                           * 00081000
*                  DEFAULT: YES                                       * 00081100
*                                                                     * 00081200
*                                                                     * 00081300
*                  [SECMODCHECK=YES]                                  * 00081400
*                      indicates to do the RACF FACILITY class check. * 00081500
*                      For a caller in supervisor state, system key,  * 00081600
*                      system PKM, or APF authorized, the operation   * 00081700
*                      is allowed when the check results either in    * 00081800
*                      "success" or "no matching profile exists."     * 00081900
*                      For unauthorized callers, the operation is     * 00082000
*                      allowed only when the check results in         * 00082100
*                      "success".                                     * 00082200
*                                                                     * 00082300
*                  [SECMODCHECK=NO]                                   * 00082400
*                      indicates not to do the RACF FACILITY class    * 00082500
*                      check.                                         * 00082600
*                                                                     * 00082700
*                                                                     * 00082800
*                                                                     * 00082900
*                                                                     * 00083000
*                                                                     * 00083100
*                                                                     * 00083200
*              REQUESTOR=xrequestor                                   * 00083300
*                  is the name (RS-type), or address in register      * 00083400
*                  (2)-(12), of a required 16 character input that    * 00083500
*                  identifies the requestor. This string is only used * 00083600
*                  for helping to identify in a dump which requestor  * 00083700
*                  caused the particular module to be added to LPA.   * 00083800
*                  Thus it is important that requesting products      * 00083900
*                  specify a value that does not match the value      * 00084000
*                  specified by another product.  IBM requestors      * 00084100
*                  should begin the string with their component       * 00084200
*                  prefix.                                            * 00084300
*                                                                     * 00084400
*                                                                     * 00084500
*                                                                     * 00084600
*                                                                     * 00084700
*              [MODPROB=CONTINUE|STOP]                              * 00084800
*                  is an optional keyword input that indicates the    * 00084900
*                  action to be taken by the system if it encounters  * 00085000
*                  a problem processing an individual module entry (a * 00085100
*                  condition that will not result in a return code    * 00085200
*                  greater than 4). This includes, but is not limited * 00085300
*                  to, such cases as:                                 * 00085400
*                                                                     * 00085500
*                                                                     * 00085600
*                  o   The system could not locate the specified      * 00085700
*                      module or alias;                               * 00085800
*                                                                     * 00085900
*                  o   The system could not allocate all the required * 00086000
*                      storage; and                                   * 00086100
*                                                                     * 00086200
*                  o   The system could not load the module indicated * 00086300
*                      by the directory entry.                        * 00086400
*                                                                     * 00086500
*                                                                     * 00086600
*                  The equate symbols with names beginning with       * 00086700
*                  "LpmeaModprob", in macro CSVLPRET, describe the    * 00086800
*                  full set of conditions.                            * 00086900
*                                                                     * 00087000
*                  When any such problem, or a situation resulting in * 00087100
*                  a return code of at least 8, is encountered, no    * 00087200
*                  modules are added to LPA.                          * 00087300
*                  DEFAULT: CONTINUE                                  * 00087400
*                                                                     * 00087500
*                                                                     * 00087600
*                  [MODPROB=CONTINUE]                                 * 00087700
*                      indicates to continue processing subsequent    * 00087800
*                      members in order to detect problems associated * 00087900
*                      with those subsequent members.  Any entry not  * 00088000
*                      successfully processed will have the           * 00088100
*                      LpmeaModprob bit on, with additional           * 00088200
*                      information as indicated by the                * 00088300
*                      LpmeaModprobFunction field.                    * 00088400
*                                                                     * 00088500
*                  [MODPROB=STOP]                                     * 00088600
*                      indicates to stop processing.  The entry not   * 00088700
*                      successfully processed will have the           * 00088800
*                      LpmeaModprob bit on, with additional           * 00088900
*                      information as indicated by the                * 00089000
*                      LpmeaModprobFunction field.                    * 00089100
*                                                                     * 00089200
*                                                                     * 00089300
*                                                                     * 00089400
*                                                                     * 00089500
*                                                                     * 00089600
*                                                                     * 00089700
*              [ERRORDATA=xerrordata]                                 * 00089800
*                  is the name (RS-type), or address in register      * 00089900
*                  (2)-(12), of an optional 8 character output that   * 00090000
*                  contains additional diagnostic data for certain    * 00090100
*                  cases.  In particular,                             * 00090200
*                                                                     * 00090300
*                                                                     * 00090400
*                  o   For return code 8 (symbol CsvdylpaRc_InvParm)  * 00090500
*                      with reason code X'xxyy0829' (symbol           * 00090600
*                      CsvdylpaRsnBadAlloc), bytes 0-1 are the error  * 00090700
*                      reason code from the DYNALLOC service, bytes   * 00090800
*                      2-3 are the information reason code from the   * 00090900
*                      DYNALLOC service, and bytes 4-7 are the SMS    * 00091000
*                      reason code from the DYNALLOC service (which   * 00091100
*                      is only relevant when the error reason code is * 00091200
*                      of the form X'97xx').                          * 00091300
*                                                                     * 00091400
*                                                                     * 00091500
*                                                                     * 00091600
*                                                                     * 00091700
*                                                                     * 00091800
*          REQUEST=DELETE                                             * 00091900
*              indicates to remove one or more modules from LPA.  You * 00092000
*              can only remove a module that has been added to LPA    * 00092100
*              using dynamic LPA services.  You cannot remove a       * 00092200
*              module that was built into LPA during IPL.             * 00092300
*                                                                     * 00092400
*              REQUEST=DELETE must be used with extreme caution, as   * 00092500
*              the system does not keep track of whether or not any   * 00092600
*              code is currently running within the code that is to   * 00092700
*              be deleted. It is up to the caller to request deletion * 00092800
*              at an appropriate point.                               * 00092900
*                                                                     * 00093000
*              The system will free the storage for the module when   * 00093100
*              there are no longer any major names or aliases         * 00093200
*              associated with that storage.                          * 00093300
*                                                                     * 00093400
*                                                                     * 00093500
*              MODINFO=xmodinfo                                       * 00093600
*                  is the name (RS-type), or address in register      * 00093700
*                  (2)-(12), of a required character input/output     * 00093800
*                  that specifies an area that contains contiguous    * 00093900
*                  entries. Each entry contains a module name, a      * 00094000
*                  delete token (when TYPE=BYTOKEN is specified or    * 00094100
*                  defaulted), and status flags. Each entry is mapped * 00094200
*                  by DSECT LPMED in macro CSVLPRET.  The number of   * 00094300
*                  entries must match the value provided via the      * 00094400
*                  nummod parameter.  The flags area in each entry    * 00094500
*                  should be cleared before calling the CSVDYLPA      * 00094600
*                  service.                                           * 00094700
*                                                                     * 00094800
*                  When deleting a module using TYPE=BYTOKEN, you use * 00094900
*                  the token returned by CSVDYLPA REQUEST=ADD for     * 00095000
*                  that module (placing it in the LpmedDeleteToken    * 00095100
*                  field of the LPMED DSECT).                         * 00095200
*                                                                     * 00095300
*                  On output, among other possibilities, the status   * 00095400
*                  area might indicate:                               * 00095500
*                                                                     * 00095600
*                                                                     * 00095700
*                  o   The module had not been added using dynamic    * 00095800
*                      LPA services;                                  * 00095900
*                                                                     * 00096000
*                  o   You are not authorized to process the          * 00096100
*                      particular module.                             * 00096200
*                                                                     * 00096300
*                                                                     * 00096400
*                                                                     * 00096500
*                  For a complete list of the possible problem types, * 00096600
*                  refer to the equate symbols beginning with         * 00096700
*                  LpmedModprob in the CSVLPRET data area.            * 00096800
*                                                                     * 00096900
*                  Within each LPMED, the module name should be       * 00097000
*                  left-justified padded on the right with EBCDIC     * 00097100
*                  blanks if less than 8 characters long. There       * 00097200
*                  should be no embedded blanks.                      * 00097300
*                                                                     * 00097400
*                                                                     * 00097500
*                                                                     * 00097600
*                                                                     * 00097700
*              NUMMOD=xnummod                                         * 00097800
*                  is the name (RS-type), or address in register      * 00097900
*                  (2)-(12), of a required fullword input that        * 00098000
*                  contains the number of entries in the area         * 00098100
*                  specified by the modinfo parameter.  Nummod must   * 00098200
*                  be in the range 1-256.                             * 00098300
*                                                                     * 00098400
*                                                                     * 00098500
*                                                                     * 00098600
*                                                                     * 00098700
*              [TYPE=BYTOKEN|CURRENT|OLDEST]                        * 00098800
*                  is an optional keyword input that indicates the    * 00098900
*                  type of deletion requested.                        * 00099000
*                  DEFAULT: BYTOKEN                                   * 00099100
*                                                                     * 00099200
*                                                                     * 00099300
*                  [TYPE=BYTOKEN]                                     * 00099400
*                      indicates that the delete token is provided,   * 00099500
*                      and identifies the instance of the module to   * 00099600
*                      delete.                                        * 00099700
*                                                                     * 00099800
*                  [TYPE=CURRENT]                                     * 00099900
*                      indicates that the most current instance of    * 00100000
*                      the module that was added by dynamic LPA       * 00100100
*                      services is to be deleted.                     * 00100200
*                                                                     * 00100300
*                  [TYPE=OLDEST]                                      * 00100400
*                      indicates that the oldest instance of the      * 00100500
*                      module that was added by dynamic LPA services, * 00100600
*                      other than the current one, is to be deleted.  * 00100700
*                                                                     * 00100800
*                                                                     * 00100900
*                                                                     * 00101000
*                                                                     * 00101100
*                                                                     * 00101200
*                                                                     * 00101300
*              [SECMODCHECK=YES|NO]                                 * 00101400
*                  is an optional keyword input that indicates        * 00101500
*                  whether or not the RACF FACILITY class check       * 00101600
*                  should be done for the module or alias being       * 00101700
*                  deleted.  This keyword is ignored unless the       * 00101800
*                  caller is supervisor state, system key, system     * 00101900
*                  PKM, or APF authorized.  In all other cases,       * 00102000
*                  SECMODCHECK=YES is used.                           * 00102100
*                  DEFAULT: YES                                       * 00102200
*                                                                     * 00102300
*                                                                     * 00102400
*                  [SECMODCHECK=YES]                                  * 00102500
*                      indicates to do the RACF FACILITY class check. * 00102600
*                      For a caller in supervisor state, system key,  * 00102700
*                      system PKM, or APF authorized, the operation   * 00102800
*                      is allowed when the check results either in    * 00102900
*                      "success" or "no matching profile exists."     * 00103000
*                      For unauthorized callers, the operation is     * 00103100
*                      allowed only when the check results in         * 00103200
*                      "success".                                     * 00103300
*                                                                     * 00103400
*                  [SECMODCHECK=NO]                                   * 00103500
*                      indicates not to do the RACF FACILITY class    * 00103600
*                      check.                                         * 00103700
*                                                                     * 00103800
*                                                                     * 00103900
*                                                                     * 00104000
*                                                                     * 00104100
*                                                                     * 00104200
*          REQUEST=QUERYDYN                                           * 00104300
*              indicates to return an indication of whether modules   * 00104400
*              can be added to or deleted from LPA.  The RETCODE,     * 00104500
*              RSNCODE, and MF keys cannot be specified.              * 00104600
*                                                                     * 00104700
*                                                                     * 00104800
*              DYNFUNC=xdynfunc                                       * 00104900
*                  is the name (RS-type), or address in register      * 00105000
*                  (2)-(12), of a required byte output that will      * 00105100
*                  contain the availability of the ADD and DELETE     * 00105200
*                  functions.  If 0 (symbol CsvdylpaDynNotAvailable   * 00105300
*                  in macro CSVLPRET) the functions are not           * 00105400
*                  available. If 1 (symbol CsvdylpaDynAvailable) the  * 00105500
*                  functions are available.                           * 00105600
*                                                                     * 00105700
*                                                                     * 00105800
*                                                                     * 00105900
*                                                                     * 00106000
*                                                                     * 00106100
*                                                                     * 00106200
*                                                                     * 00106300
*                                                                     * 00106400
*      [LINKAGE=SYSTEM|INTERNAL]                                    * 00106500
*          is an optional keyword input that indicates the type of    * 00106600
*          linkage required.  LINKAGE must not be specified with      * 00106700
*          MF=M.  This parameter is not a part of the intended        * 00106800
*          interface.                                                 * 00106900
*          DEFAULT: SYSTEM                                            * 00107000
*                                                                     * 00107100
*                                                                     * 00107200
*          [LINKAGE=SYSTEM]                                           * 00107300
*              indicates to use the normal system-provided linkage.   * 00107400
*                                                                     * 00107500
*          [LINKAGE=INTERNAL                                          * 00107600
*              This is not a part of the intended interface. It is    * 00107700
*              restricted to MVS use only by the Contents Supervision * 00107800
*              component.                                             * 00107900
*                                                                     * 00108000
*                                                                     * 00108100
*              CMDINFO=xcmdinfo]                                      * 00108200
*                  is the name (RS-type), or address in register      * 00108300
*                  (2)-(12), of a required character input that is    * 00108400
*                  not a part of the intended interface. It is        * 00108500
*                  restricted to MVS use only by the Contents         * 00108600
*                  Supervision component.                             * 00108700
*                                                                     * 00108800
*                                                                     * 00108900
*                                                                     * 00109000
*                                                                     * 00109100
*                                                                     * 00109200
*                                                                     * 00109300
*                                                                     * 00109400
*                                                                     * 00109500
*      [RETCODE=xretcode]                                             * 00109600
*          is the name (RS-type) of an optional fullword output       * 00109700
*          variable, or register (2)-(12), into which the return code * 00109800
*          is to be copied from GPR 15.                               * 00109900
*                                                                     * 00110000
*                                                                     * 00110100
*                                                                     * 00110200
*                                                                     * 00110300
*      [RSNCODE=xrsncode]                                             * 00110400
*          is the name (RS-type) of an optional fullword output       * 00110500
*          variable, or register (2)-(12), into which the reason code * 00110600
*          is to be copied from GPR 0.                                * 00110700
*                                                                     * 00110800
*                                                                     * 00110900
*                                                                     * 00111000
*                                                                     * 00111100
*      [PLISTVER=xplistver|IMPLIED_VERSION]                         * 00111200
*          is an optional byte input decimal value in the "0-0" range * 00111300
*          that specifies the macro version.  PLISTVER is the only    * 00111400
*          key allowed on the list form of MF and determines which    * 00111500
*          parameter list is generated (see Macro USAGE NOTE 2).      * 00111600
*          Note that MAX may be specified instead of a number, and    * 00111700
*          the parameter list will be of the largest size currently   * 00111800
*          supported. This size may grow from release to release      * 00111900
*          (thus possibly affecting the amount of storage needed by   * 00112000
*          your program).  If your program can tolerate this, IBM     * 00112100
*          recommends that you always specify MAX when creating the   * 00112200
*          list form parameter list as that will ensure that the list * 00112300
*          form parameter list is always long enough to hold whatever * 00112400
*          parameters might be specified on the execute form.         * 00112500
*          DEFAULT: IMPLIED_VERSION.  When PLISTVER is omitted, the   * 00112600
*          default is the lowest version which allows all of the      * 00112700
*          parameters specified on the invocation to be processed.    * 00112800
*                                                                     * 00112900
*                                                                     * 00113000
*                                                                     * 00113100
*                                                                     * 00113200
*      [MF=S|L|M|E]                                                 * 00113300
*          is an optional keyword input which specifies the macro     * 00113400
*          form.                                                      * 00113500
*          DEFAULT: S                                                 * 00113600
*                                                                     * 00113700
*                                                                     * 00113800
*          [MF=S]                                                     * 00113900
*              specifies the standard form of the macro.  The "S"     * 00114000
*              form generates code to put the parameters into an      * 00114100
*              in-line parameter list and invoke the desired service. * 00114200
*              Full checking for required macro keys is done along    * 00114300
*              with supplying defaults for omitted optional           * 00114400
*              parameters.                                            * 00114500
*                                                                     * 00114600
*          [MF=(L,xmfctrl,xmfattr|0D)]                              * 00114700
*              specifies the list form of the macro.  The "L" form    * 00114800
*              defines an area to be used for the parameter list.     * 00114900
*              Only the PLISTVER key may be specified on the          * 00115000
*              invocation.  All other macro parameters are flagged as * 00115100
*              errors.  If PLISTVER is not specified, the original    * 00115200
*              parameter list definition is used.                     * 00115300
*                                                                     * 00115400
*            ,xmfctrl                                                 * 00115500
*              is a required input.  It is the name of a storage area * 00115600
*              for the parameter list.                                * 00115700
*                                                                     * 00115800
*            ,xmfattr|0D                                            * 00115900
*              is an optional 60 character input string that varies   * 00116000
*              from 1 to 60 characters. Use it to force boundary      * 00116100
*              alignment of the parameter list. Use only 0F or 0D.    * 00116200
*              DEFAULT: 0D which forces the parameter list to a       * 00116300
*              doubleword boundary.                                   * 00116400
*                                                                     * 00116500
*          [MF(M,xmfctrl,COMPLETE|NOCHECK)]                         * 00116600
*              specifies the modify form of the macro.  The "M" form  * 00116700
*              generates code to put the parameters into the          * 00116800
*              parameter list specified by xmfctrl.                   * 00116900
*                                                                     * 00117000
*            ,xmfctrl                                                 * 00117100
*              is a required input.  It is the name (RS-type), or     * 00117200
*              address in register (1)-(12), of a storage area for    * 00117300
*              the parameter list.                                    * 00117400
*                                                                     * 00117500
*            ,COMPLETE|NOCHECK]                                     * 00117600
*              is an optional keyword input which specifies the       * 00117700
*              degree of macro parameter syntax checking.             * 00117800
*              DEFAULT: COMPLETE                                      * 00117900
*                                                                     * 00118000
*                                                                     * 00118100
*              COMPLETE                                               * 00118200
*                  Checking for required macro keys is done and       * 00118300
*                  defaults are supplied for omitted optional         * 00118400
*                  parameters.  (See Macro Usage Note 2).             * 00118500
*                                                                     * 00118600
*              NOCHECK                                                * 00118700
*                  Checking for required macro keys is not done nor   * 00118800
*                  are defaults supplied for omitted optional         * 00118900
*                  parameters.                                        * 00119000
*                                                                     * 00119100
*                                                                     * 00119200
*                                                                     * 00119300
*          [MF=(E,xmfctrl,COMPLETE|NOCHECK)]                        * 00119400
*              specifies the execute form of the macro.  The "E" form * 00119500
*              generates code to put the parameters into the          * 00119600
*              parameter list specified by xmfctrl and invoke the     * 00119700
*              desired service.                                       * 00119800
*                                                                     * 00119900
*            ,xmfctrl                                                 * 00120000
*              is a required input.  It is the name (RS-type), or     * 00120100
*              address in register (1)-(12), of a storage area for    * 00120200
*              the parameter list.                                    * 00120300
*                                                                     * 00120400
*            ,COMPLETE|NOCHECK                                      * 00120500
*              is an optional keyword input which specifies the       * 00120600
*              degree of macro parameter syntax checking.             * 00120700
*              DEFAULT: COMPLETE                                      * 00120800
*                                                                     * 00120900
*                                                                     * 00121000
*              COMPLETE                                               * 00121100
*                  Checking for required macro keys is done and       * 00121200
*                  defaults are supplied for omitted optional         * 00121300
*                  parameters.  (See Macro Usage Note 2).             * 00121400
*                                                                     * 00121500
*              NOCHECK                                                * 00121600
*                  Checking for required macro keys is not done nor   * 00121700
*                  are defaults supplied for omitted optional         * 00121800
*                  parameters.                                        * 00121900
*                                                                     * 00122000
*                                                                     * 00122100
*                                                                     * 00122200
*                                                                     * 00122300
*                                                                     * 00122400
*                                                                     * 00122500
*                                                                     * 00122600
*01* ABEND CODES:  None.                                              * 00122700
*                                                                     * 00122800
*01* RETURN CODES:                                                    * 00122900
*                                                                     * 00123000
*                                                                     * 00123100
*                 Macro CSVLPRET provides equate symbols for the      * 00123200
*                 return and reason codes.                            * 00123300
*                                                                     * 00123400
*       0         Name: CsvdylpaRc_OK                                 * 00123500
*                                                                     * 00123600
*                 Meaning:  CSVDYLPA request successful.              * 00123700
*                                                                     * 00123800
*                 Action:  None required.                             * 00123900
*                                                                     * 00124000
*                                                                     * 00124100
*                 ADD       MEANING: All modules successfully added   * 00124200
*                           to LPA.                                   * 00124300
*                                                                     * 00124400
*                           ACTION: None required.                    * 00124500
*                                                                     * 00124600
*                 DELETE    MEANING: All modules removed from LPA.    * 00124700
*                                                                     * 00124800
*                           ACTION: None required.                    * 00124900
*                                                                     * 00125000
*                                                                     * 00125100
*                                                                     * 00125200
*                                                                     * 00125300
*       4         Name: CsvdylpaRc_Warn                               * 00125400
*                                                                     * 00125500
*                 Meaning: Warning                                    * 00125600
*                                                                     * 00125700
*                 Action:  Refer to the action provided with the      * 00125800
*                 specific reason code.                               * 00125900
*                                                                     * 00126000
*                                                                     * 00126100
*                 HEX REASON  MEANING/ACTION                          * 00126200
*                 CODE                                                * 00126300
*                                                                     * 00126400
*                 xxxx0401    Name: CsvdylpaRsnNotAllSuccessful       * 00126500
*                                                                     * 00126600
*                             Meaning: For ADD and DELETE request, at * 00126700
*                             least one input module could not be     * 00126800
*                             processed successfully. Information     * 00126900
*                             about the problem is contained within   * 00127000
*                             the MODINFO entry for that module, in   * 00127100
*                             field LpmeaOutputFlags (for ADD) or     * 00127200
*                             field LpmedOutputFlags (for DELETE).    * 00127300
*                             The system continued to process entries * 00127400
*                             after the one for which the problem     * 00127500
*                             occurred.                               * 00127600
*                                                                     * 00127700
*                             Action: Fix the problem before          * 00127800
*                             requesting the function again.          * 00127900
*                                                                     * 00128000
*                                                                     * 00128100
*                                                                     * 00128200
*                                                                     * 00128300
*       8         Name: CsvdylpaRc_InvParm                            * 00128400
*                                                                     * 00128500
*                 Meaning:  CSVDYLPA request specifies parmeters that * 00128600
*                 are not valid.  For ADD and DELETE, when the        * 00128700
*                 problem occurred while processing a particular      * 00128800
*                 MODINFO entry, the system will not process any      * 00128900
*                 additional MODINFO entries.                         * 00129000
*                                                                     * 00129100
*                 Action:  Refer to the action provided with the      * 00129200
*                 specific reason code.                               * 00129300
*                                                                     * 00129400
*                                                                     * 00129500
*                 HEX REASON  MEANING/ACTION                          * 00129600
*                 CODE                                                * 00129700
*                                                                     * 00129800
*                 xxxx0801    Name: CsvdylpaRsnBadParmlist            * 00129900
*                                                                     * 00130000
*                             Meaning: Unable to access parameter     * 00130100
*                             list.                                   * 00130200
*                                                                     * 00130300
*                             Action: Check for possible storage      * 00130400
*                             overlay.                                * 00130500
*                                                                     * 00130600
*                 xxxx0802    Name: CsvdylpaRsnSrbMode                * 00130700
*                                                                     * 00130800
*                             Meaning: SRB mode.                      * 00130900
*                                                                     * 00131000
*                             Action: Avoid requesting this function  * 00131100
*                             in SRB mode.                            * 00131200
*                                                                     * 00131300
*                 xxxx0803    Name: CsvdylpaRsnNotEnabled             * 00131400
*                                                                     * 00131500
*                             Meaning: Not Enabled.                   * 00131600
*                                                                     * 00131700
*                             Action: Avoid requesting this function  * 00131800
*                             while not enabled.                      * 00131900
*                                                                     * 00132000
*                 xxxx0805    Name: CsvdylpaRsnHomeNotPrimary         * 00132100
*                                                                     * 00132200
*                             Meaning: Home address space different   * 00132300
*                             from primary address space.             * 00132400
*                                                                     * 00132500
*                             Action: Avoid requesting this function  * 00132600
*                             in this environment.                    * 00132700
*                                                                     * 00132800
*                 xxxx0809    Name: CsvdylpaRsnBadRequestType         * 00132900
*                                                                     * 00133000
*                             Meaning: Request type is not valid.     * 00133100
*                                                                     * 00133200
*                             Action: Check for possible storage      * 00133300
*                             overlay of the parameter list.          * 00133400
*                                                                     * 00133500
*                 xxxx080A    Name: CsvdylpaRsnBadEstaex              * 00133600
*                                                                     * 00133700
*                             Meaning: Unable to establish ESTAEX.    * 00133800
*                             "xxxx" contains the ESTAEX return code. * 00133900
*                             There could be an FRR established.      * 00134000
*                                                                     * 00134100
*                             Action:  Refer to documentation for     * 00134200
*                             ESTAEX return code "xxxx".              * 00134300
*                                                                     * 00134400
*                 xxxx080B    Name: CsvdylpaRsnReservedNot0           * 00134500
*                                                                     * 00134600
*                             Meaning: Reserved field not 0.          * 00134700
*                                                                     * 00134800
*                             Action: Check for possible storage      * 00134900
*                             overlay of the parameter list.          * 00135000
*                                                                     * 00135100
*                 xxxx080D    Name: CsvdylpaRsnBadParmlistALET        * 00135200
*                                                                     * 00135300
*                             Meaning: Unable to use ALET of          * 00135400
*                             parameter list.                         * 00135500
*                                                                     * 00135600
*                             Action: Make sure that the ALET of the  * 00135700
*                             parameter list is valid. You might not  * 00135800
*                             have set up its access register         * 00135900
*                             properly.                               * 00136000
*                                                                     * 00136100
*                 xxxx080E    Name: CsvdylpaRsnBadVersion             * 00136200
*                                                                     * 00136300
*                             Meaning: Bad version number.            * 00136400
*                                                                     * 00136500
*                             Action: Check for possible storage      * 00136600
*                             overlay of the parameter list.          * 00136700
*                                                                     * 00136800
*                 xxxx080F    Name: CsvdylpaRsnLocked                 * 00136900
*                                                                     * 00137000
*                             Meaning: Locked                         * 00137100
*                                                                     * 00137200
*                             Action: Avoid requesting this function  * 00137300
*                             in this environment.                    * 00137400
*                                                                     * 00137500
*                 xxxx0815    Name: CsvdylpaRsnBadDsnameArea          * 00137600
*                                                                     * 00137700
*                             Meaning: Unable to access data set      * 00137800
*                             name.                                   * 00137900
*                                                                     * 00138000
*                             Action: Make sure that the DSNAME area  * 00138100
*                             is valid.                               * 00138200
*                                                                     * 00138300
*                 xxxx0816    Name: CsvdylpaRsnBadModinfoArea         * 00138400
*                                                                     * 00138500
*                             Meaning: Unable to access MODINFO area. * 00138600
*                                                                     * 00138700
*                             Action: Make sure that the MODINFO area * 00138800
*                             is valid.                               * 00138900
*                                                                     * 00139000
*                 xxxx0817    Name: CsvdylpaRsnBadModinfoALET         * 00139100
*                                                                     * 00139200
*                             Meaning: Unable to use ALET of MODINFO  * 00139300
*                             area.                                   * 00139400
*                                                                     * 00139500
*                             Action: Make sure that the ALET of the  * 00139600
*                             MODINFO area is valid. You might not    * 00139700
*                             have set up its access register         * 00139800
*                             properly.                               * 00139900
*                                                                     * 00140000
*                 xxxx0818    Name: CsvdylpaRsnBadOpen                * 00140100
*                                                                     * 00140200
*                             Meaning: Unable to open specified data  * 00140300
*                             set.                                    * 00140400
*                                                                     * 00140500
*                             Action: Make sure that you specified    * 00140600
*                             the proper data set, that it is a PDS   * 00140700
*                             or PDSE program library, and that it    * 00140800
*                             can be located by the system.           * 00140900
*                                                                     * 00141000
*                 xxxx081D    Name: CsvdylpaRsnBadNumMod              * 00141100
*                                                                     * 00141200
*                             Meaning:  The value provided by the     * 00141300
*                             NUMMOD parameter is 0 or exceeds 256.   * 00141400
*                                                                     * 00141500
*                             Action: Specify a non-zero NUMMOD       * 00141600
*                             parameter value.  Instead of providing  * 00141700
*                             more than 256 entries in a single call, * 00141800
*                             use multiple calls each of which        * 00141900
*                             provides no more than 256 entries.      * 00142000
*                                                                     * 00142100
*                 xxxx0820    Name: CsvdylpaRsnBadDsnameALET          * 00142200
*                                                                     * 00142300
*                             Meaning: Bad dsname ALET.               * 00142400
*                                                                     * 00142500
*                             Action: Make sure that the ALET of the  * 00142600
*                             DSNAME area is valid. You might not     * 00142700
*                             have set up its access register         * 00142800
*                             properly.                               * 00142900
*                                                                     * 00143000
*                 xxxx0822    Name: CsvdylpaRsnBadModuleName          * 00143100
*                                                                     * 00143200
*                             Meaning: Bad modulename - first         * 00143300
*                             character is 0 or blank.                * 00143400
*                                                                     * 00143500
*                             Action: Provide a valid module name.    * 00143600
*                                                                     * 00143700
*                 xxxx0823    Name: CsvdylpaRsnBadDsname              * 00143800
*                                                                     * 00143900
*                             Meaning: Bad DSNAME - first character   * 00144000
*                             is 0 or blank.                          * 00144100
*                                                                     * 00144200
*                             Action: Provide a valid data set name.  * 00144300
*                                                                     * 00144400
*                 xxxx0829    Name: CsvdylpaRsnBadAlloc               * 00144500
*                                                                     * 00144600
*                             Meaning: Unable to allocate data set.   * 00144700
*                                                                     * 00144800
*                             Action: Make sure that you specified    * 00144900
*                             the proper data set, that it is a PDS   * 00145000
*                             or PDSE program library, and that it    * 00145100
*                             can be located by the system.           * 00145200
*                                                                     * 00145300
*                 xxxx082B    Name: CsvdylpaRsnFunctionNotAvailable   * 00145400
*                                                                     * 00145500
*                             Meaning: Required DFSMS function or     * 00145600
*                             dynamic allocation is not available or  * 00145700
*                             request issued prior to the LNKLST      * 00145800
*                             being available.                        * 00145900
*                                                                     * 00146000
*                             Action:  Make sure that the required    * 00146100
*                             DFSMS support is installed.  Avoid      * 00146200
*                             requesting the function in an           * 00146300
*                             environment where dynamic allocation is * 00146400
*                             not available.  Avoid requesting the    * 00146500
*                             function until the LNKLST is available. * 00146600
*                             Avoid requesting dynamic LPA services   * 00146700
*                             via the PROG=xx parameter of the        * 00146800
*                             IEASYSxx parmlib member.                * 00146900
*                                                                     * 00147000
*                 xxxx082C    Name: CsvdylpaRsnNotAuthDCB             * 00147100
*                                                                     * 00147200
*                             Meaning: Not authorized to use DCB      * 00147300
*                             option.  Must be supervisor state, PKM  * 00147400
*                             allowing key 0-7, PSW key 0-7, or APF   * 00147500
*                             authorized.                             * 00147600
*                                                                     * 00147700
*                             Action: Avoid using the DCB option      * 00147800
*                             without the required authorization.     * 00147900
*                                                                     * 00148000
*                 xxxx082D    Name: CsvdylpaRsnNotAuthConcat          * 00148100
*                                                                     * 00148200
*                             Meaning: If not supervisor state, PKM   * 00148300
*                             allowing key 0-7, PSW key 0-7, or APF   * 00148400
*                             authorized, or if APFREQUIRED=YES is    * 00148500
*                             specified or defaulted, the             * 00148600
*                             concatenation represented by the input  * 00148700
*                             DDNAME or DCB must be APF authorized.   * 00148800
*                                                                     * 00148900
*                             Action: Avoid using a non-APF           * 00149000
*                             authorized concatenation without the    * 00149100
*                             required authorization.                 * 00149200
*                                                                     * 00149300
*                 xxxx082E    Name: CsvdylpaRsnNotAuthMemberMask      * 00149400
*                                                                     * 00149500
*                             Meaning: Not authorized to use          * 00149600
*                             MemberMask option.  Must be supervisor  * 00149700
*                             state, PKM allowing key 0-7, PSW key    * 00149800
*                             0-7, or APF authorized.                 * 00149900
*                                                                     * 00150000
*                             Action: Avoid using the                 * 00150100
*                             MODINFOTYPE=MEMBERMASK function without * 00150200
*                             the required authorization.             * 00150300
*                                                                     * 00150400
*                 xxxx0830    Name: CsvdylpaRsnBadModinfoxArea        * 00150500
*                                                                     * 00150600
*                             Meaning: Unable to access MODINFOX      * 00150700
*                             area.                                   * 00150800
*                                                                     * 00150900
*                             Action: Make sure that the MODINFOX     * 00151000
*                             area is valid.                          * 00151100
*                                                                     * 00151200
*                 xxxx0831    Name: CsvdylpaRsnBadModinfoxALET        * 00151300
*                                                                     * 00151400
*                             Meaning: Unable to use ALET of MODINFOX * 00151500
*                             area.                                   * 00151600
*                                                                     * 00151700
*                             Action: Make sure that the ALET of the  * 00151800
*                             MODINFOX area is valid. You might not   * 00151900
*                             have set up its access register         * 00152000
*                             properly.                               * 00152100
*                                                                     * 00152200
*                 xxxx0833    Name: CsvdylpaRsnNotESVC                * 00152300
*                                                                     * 00152400
*                             Meaning: An extended SVC was selected,  * 00152500
*                             but the specified SVC number is not an  * 00152600
*                             extended SVC.                           * 00152700
*                                                                     * 00152800
*                             Action: Fix the SVC number.             * 00152900
*                                                                     * 00153000
*                 xxxx0834    Name: CsvdylpaRsnBadESvcrnum            * 00153100
*                                                                     * 00153200
*                             Meaning: The routing number for the     * 00153300
*                             selected extended SVC exceeded the      * 00153400
*                             number of entries for that extended SVC * 00153500
*                             that were defined at IPL.               * 00153600
*                                                                     * 00153700
*                             Action: Fix the extended SVC routine    * 00153800
*                             number.                                 * 00153900
*                                                                     * 00154000
*                 xxxx083C    Name: CsvdylpaRsnNotPartitioned         * 00154100
*                                                                     * 00154200
*                             Meaning:  For ADD request, the data set * 00154300
*                             is not partitioned.                     * 00154400
*                                                                     * 00154500
*                             Action: Make sure that you specified    * 00154600
*                             the proper data set and that it is a    * 00154700
*                             PDS or PDSE program library.            * 00154800
*                                                                     * 00154900
*                 xxxx083D    Name: CsvdylpaRsnBadByaddrInfo          * 00155000
*                                                                     * 00155100
*                             Meaning:  For ADD request with          * 00155200
*                             BYADDR=YES, the module information is   * 00155300
*                             incorrect.                              * 00155400
*                                                                     * 00155500
*                             Action: Make sure that the entry point  * 00155600
*                             and load point addresses represent      * 00155700
*                             common area storage. Make sure that the * 00155800
*                             entry point lies within the primary     * 00155900
*                             load segment.                           * 00156000
*                                                                     * 00156100
*                 xxxx083E    Name: CsvdylpaRsnNotAuthByaddr          * 00156200
*                                                                     * 00156300
*                             Meaning: Not authorized to use          * 00156400
*                             BYADDR=YES option.  Must be supervisor  * 00156500
*                             state, PKM allowing key 0-7, PSW key    * 00156600
*                             0-7, or APF authorized.                 * 00156700
*                                                                     * 00156800
*                             Action: Avoid using BYADDR=YES without  * 00156900
*                             the required authorization.             * 00157000
*                                                                     * 00157100
*                 xxxx083F    Name: CsvdylpaRsnBadDcbArea             * 00157200
*                                                                     * 00157300
*                             Meaning: Unable to access the opened    * 00157400
*                             DCB.                                    * 00157500
*                                                                     * 00157600
*                             Action: Make sure that the DCB has been * 00157700
*                             opened.                                 * 00157800
*                                                                     * 00157900
*                 xxxx0840    Name: CsvdylpaRsnEnqHeldShared          * 00158000
*                                                                     * 00158100
*                             Meaning: The ENQ resource with QNAME    * 00158200
*                             SYSZCSV and RNAME CSVDYLPA was held in  * 00158300
*                             the shared state on entry to dynamic    * 00158400
*                             LPA services.                           * 00158500
*                                                                     * 00158600
*                             Action: Avoid holding the ENQ shared    * 00158700
*                             when using dynamic LPA services.        * 00158800
*                                                                     * 00158900
*                                                                     * 00159000
*                                                                     * 00159100
*                                                                     * 00159200
*       C         Name: CsvdylpaRc_Env                                * 00159300
*                                                                     * 00159400
*                 Meaning: Environmental error                        * 00159500
*                                                                     * 00159600
*                 Action:  Refer to the action provided with the      * 00159700
*                 specific reason code.                               * 00159800
*                                                                     * 00159900
*                                                                     * 00160000
*                 HEX REASON  MEANING/ACTION                          * 00160100
*                 CODE                                                * 00160200
*                                                                     * 00160300
*                 xxxx0C02    Name: CsvdylpaRsnNoStorage              * 00160400
*                                                                     * 00160500
*                             Meaning: There is not sufficient        * 00160600
*                             storage to complete the request.        * 00160700
*                                                                     * 00160800
*                             Action: Contact your system programmer. * 00160900
*                             There is a shortage of common storage.  * 00161000
*                                                                     * 00161100
*                 xxxx0C04    Name: CsvdylpaRsnBadDirectory           * 00161200
*                                                                     * 00161300
*                             Meaning: When using the MemberMask      * 00161400
*                             option, the data set directory was in   * 00161500
*                             error. Either an I/O error occurred     * 00161600
*                             accessing the directory, or the format  * 00161700
*                             of a directory entry was incorrect.     * 00161800
*                                                                     * 00161900
*                             Action: Fix the data set directory.     * 00162000
*                             Make sure that the data set is a PDS or * 00162100
*                             PDSE program library.                   * 00162200
*                                                                     * 00162300
*                 xxxx0C05    Name: CsvdylpaRsnStoragelimExceeded     * 00162400
*                                                                     * 00162500
*                             Meaning:  For ADD request, the amount   * 00162600
*                             of module storage needed for the        * 00162700
*                             request would have caused the amount of * 00162800
*                             CSA or ECSA remaining to fall below the * 00162900
*                             threshold specified by the system       * 00163000
*                             programmer using the LPA CSAMIN         * 00163100
*                             statement of PROGxx or the SETPROG      * 00163200
*                             LPA,CSAMIN system command.              * 00163300
*                                                                     * 00163400
*                             Action: Specify that fewer modules be   * 00163500
*                             added, or have the system programmer    * 00163600
*                             reduce the CSAMIN amounts.              * 00163700
*                                                                     * 00163800
*                                                                     * 00163900
*                                                                     * 00164000
*                                                                     * 00164100
*       10        Name: CsvdylpaRC_CompError                          * 00164200
*                                                                     * 00164300
*                 Meaning:  Unexpected failure.                       * 00164400
*                                                                     * 00164500
*                 Action:  Refer to the action provided with the      * 00164600
*                 specific reason code.                               * 00164700
*                                                                     * 00164800
*                                                                     * 00164900
*                 HEX REASON  MEANING/ACTION                          * 00165000
*                 CODE                                                * 00165100
*                                                                     * 00165200
*                 xxxx1001    Name: CsvdylpaRsnCompError              * 00165300
*                                                                     * 00165400
*                             Meaning: Unexpected failure.  The state * 00165500
*                             of the request is unpredictable.        * 00165600
*                                                                     * 00165700
*                             Action: Contact your system programmer. * 00165800
*                                                                     * 00165900
*                                                                     * 00166000
*                                                                     * 00166100
*                                                                     * 00166200
*                                                                     * 00166300
*01* REASON CODES:                                                    * 00166400
*                                                                     * 00166500
*       Reason codes, as appropriate, are defined under their         * 00166600
*       corresponding return code.                                    * 00166700
*                                                                     * 00166800
*01* MODULE TYPE:  ASSEM MACRO                                        * 00166900
*                                                                     * 00167000
*02*   PROCESSOR:  ASSEM                                              * 00167100
*                                                                     * 00167200
*01* COMPONENT:  SC1CJ                                                * 00167300
*                                                                     * 00167400
*01* DISTRIBUTION LIBRARY: AMACLIB                                    * 00167500
*                                                                     * 00167600
*01* EXAMPLES:                                                        * 00167700
*                                                                     * 00167800
*    Example 1                                                        * 00167900
*                                                                     * 00168000
*    Operation:                                                       * 00168100
*                                                                     * 00168200
*                                                                     * 00168300
*    1.  Add a module to LPA                                          * 00168400
*                                                                     * 00168500
*    2.  Delete a module from LPA                                     * 00168600
*                                                                     * 00168700
*                                                                     * 00168800
*                                                                     * 00168900
*    The code is as follows.                                          * 00169000
*                                                                     * 00169100
*      *************************************************************  * 00169200
*      * Set up MODINFO area, for module "MYMODULE", indicating    *  * 00169300
*      * that the module is to be page-fixed.                      *  * 00169400
*      * Add the module to LPA, locating the module using          *  * 00169500
*      * data set 'SYS1.MYDS'.                                     *  * 00169600
*      *************************************************************  * 00169700
*               LA    2,ADDINFO                                       * 00169800
*               USING LPMEA,2                                         * 00169900
*               XC    ADDINFO(LPMEA_LEN),ADDINFO                      * 00170000
*               MVC   LPMEANAME,=CL8'MYMODULE'                        * 00170100
*               OI    LPMEAINPUTFLAGS0,LPMEAFIXED                     * 00170200
*               DROP  2                                               * 00170300
*               CSVDYLPA REQUEST=ADD,MODINFOTYPE=MEMBERLIST,        * * 00170400
*                     MODINFO=(2),NUMMOD=LMODN,                     * * 00170500
*                     DSNAME=LDS1,                                  * * 00170600
*                     REQUESTOR=LREQ,                               * * 00170700
*                     RETCODE=LRETCODE,RSNCODE=LRSNCODE,            * * 00170800
*                     MF=(E,DYLPAL)                                   * 00170900
*      *                                                              * 00171000
*      * Place code to check return/reason codes here                 * 00171100
*      *                                                              * 00171200
*       ... processing code here ...                                  * 00171300
*      *                                                              * 00171400
*      *************************************************************  * 00171500
*      * Set up MODINFO area, for module "MYMODULE", using the     *  * 00171600
*      * token returned on REQUEST=ADD.                            *  * 00171700
*      * Delete the module from LPA.                               *  * 00171800
*      *************************************************************  * 00171900
*               LA    3,ADDINFO                                       * 00172000
*               USING LPMEA,3                                         * 00172100
*               LA    2,DELINFO                                       * 00172200
*               USING LPMED,2                                         * 00172300
*               XC    DELINFO(LPMED_LEN),DELINFO                      * 00172400
*               MVC   LPMEDNAME,LPMEANAME                             * 00172500
*               MVC   LPMEDDELETETOKEN,LPMEADELETETOKEN               * 00172600
*               DROP  2,3                                             * 00172700
*               CSVDYLPA REQUEST=DELETE,MODINFO=(2),NUMMOD=LMODN,   * * 00172800
*                     RETCODE=LRETCODE,RSNCODE=LRSNCODE,            * * 00172900
*                     MF=(E,DYLPAL)                                   * 00173000
*      *                                                              * 00173100
*      * Place code to check return/reason codes here.                * 00173200
*      *                                                              * 00173300
*      LMODN    DC    F'1'                                            * 00173400
*      LDS1     DC    CL44'SYS1.MYDS'                                 * 00173500
*      LREQ     DC    CL16'CSVDYLPA EXAMPLE'                          * 00173600
*               CSVLPRET              Return code information         * 00173700
*      DYNAREA  DSECT                                                 * 00173800
*      ADDINFO  DS    0D                                              * 00173900
*               ORG   ADDINFO+LPMEA_LEN                               * 00174000
*      DELINFO  DS    0D                                              * 00174100
*               ORG   DELINFO+LPMED_LEN                               * 00174200
*      LRETCODE DS    F                                               * 00174300
*      LRSNCODE DS    F                                               * 00174400
*               CSVDYLPA MF=(L,DYLPAL)                                * 00174500
*                                                                     * 00174600
*                                                                     * 00174700
*01* MACRO USAGE NOTES:                                               * 00174800
*                                                                     * 00174900
*                                                                     * 00175000
*    1.  Printing of the macro expansion is controlled by the ZPRINT  * 00175100
*        global macro variable.  Any value other than 'NO' will       * 00175200
*        result in the macro expansion being printed.  The default is * 00175300
*        'YES'.  The following examples illustrate how the ZPRINT     * 00175400
*        variable should be set.                                      * 00175500
*                                                                     * 00175600
*                    GBLC &ZPRINT                                     * 00175700
*            &ZPRINT SETC 'YES'          &ZPRINT SETC 'NO'            * 00175800
*                                                                     * 00175900
*                                                                     * 00176000
*    2.  When using the NOCHECK option in conjunction with the Modify * 00176100
*        and/or  Execute  forms,  be  sure  that  it is preceded by a * 00176200
*        Modify   or  Execute  form  invocation  which  specifies  or * 00176300
*        defaults  to  the  COMPLETE  option.   This insures that the * 00176400
*        parameter  list  is  initialized completely.   The parameter * 00176500
*        list  field which identifies the version number of the macro * 00176600
*        is only set when the Standard form or the Complete option of * 00176700
*        the  Execute/Modify  form  is  used,  or  when  PLISTVER  is * 00176800
*        explicitly  specified.  Be sure that the resulting parameter * 00176900
*        list version number covers all the keys that you use.        * 00177000
*                                                                     * 00177100
*                                                                     * 00177200
*    3.  All   keys   currently   contained  in  the  CSVDYLPA  macro * 00177300
*        correspond  to  version  0.   If you specify PLISTVER, use a * 00177400
*        value of 0 or MAX.                                           * 00177500
*                                                                     * 00177600
*                                                                     * 00177700
*                                                                     * 00177800
*                                                                     * 00177900
*01* CHANGE ACTIVITY:                                                 * 00178000
*                                                                     * 00178100
*   Flag LineItem  FMID    Date   ID    Comment                       * 00178200
*                                                                     * 00178300
*    $L0=DYLPAAMG JBB6604 961001 PD00XB:  Dynamic LPA                 * 00178400
*    $L1=DYLPACSV JBB6604 961001 PD00XB:  Dynamic LPA                 * 00178500
*    $01=OW26531  JBB6604 970603 PD00XB:  Caller can hold ENQ         * 00178600
****** END OF SPECIFICATIONS *****************************************/ 00178700
*/* TLINE 1 *********************************************************** 00178800
         MACRO                                                          00178900
&XLABEL  CSVDYLPA &REQUEST=,&MODINFOTYPE=,&MODINFO=,&MODINFOX=,        *00179000
               &NUMMOD=,&BYADDR=,&DSNAME=,&DDNAME=,&DCB=,&DCBPTR=,     *00179100
               &MASKDSNAME=,&MASKDDNAME=,&MASKDCB=,&MASKDCBPTR=,       *00179200
               &OUTAREAPTR=,&OUTAREALEN=,&OUTAREANUM=,&OUTAREASP=,     *00179300
               &APFREQUIRED=,&SECMODCHECK=,&REQUESTOR=,&MODPROB=,      *00179400
               &ERRORDATA=,&TYPE=,&DYNFUNC=,&LINKAGE=,&CMDINFO=,       *00179500
               &RETCODE=,&RSNCODE=,&PLISTVER=,&MF=                      00179600
.*                                                                      00179700
*                 MACDATE -11/03/99-<0>                                 00179800
.*                                                                      00179900
.*******************************************************************    00180000
.***AB.02  GLOBAL VARIABLES TO CONTROL PRINT AND CODE GENERATION        00180100
.*******************************************************************    00180200
                 GBLC  &ZPRINT     YES=PRINT NO=NO PRINT                00180300
                 GBLC  &ZTEST      YES=TEST NO=NO TEST                  00180400
                 GBLC  &ZSYSTEM    PCCODE10, MVS, SAK, VM, XAX          00180500
.*                                                                      00180600
                 GBLC  &ZCSVDYLPA  YES=MACRO USED AT LEAST ONCE         00180700
.*******************************************************************    00180800
.***AB.03  COMMONLY USED LOCAL MACRO VARIABLES                          00180900
.*******************************************************************    00181000
                 LCLC  &ZMS        ERROR MESSAGE WORK AREA              00181100
                 LCLC  &ZCNDX      LAST THREE SYSNDX CHARACTERS         00181200
                 LCLC  &ZCLNG      USED WHEN LENGTH IS NEEDED           00181300
                 LCLC  &ZCGPR      USED WHEN VALUE IS IN A GPR          00181400
                 LCLC  &ZCVAL      USED TO CONTAIN FIXED VALUE          00181500
                 LCLA  &ZAWRK      USED AS A WORK AREA                  00181600
                 LCLA  &ZASIZ      USED FOR SIZE OF VALUE               00181700
                 LCLA  &ZN         NUMERIC WORK VARIABLE                00181800
                 LCLC  &ZC         CHARACTER WORK VARIABLE              00181900
                 LCLC  &ZTLC       CHARACTER TOO LONG VARIABLE          00182000
                 LCLA  &ZTLA       VALUE TOO LONG VARIABLE              00182100
                 LCLA  &ZMACRET    MACRO RETURN CODE                    00182200
&ZMACRET         SETA  0           ASSUME NO ERRORS                     00182300
.*                                                                      00182400
                 LCLC  &ZCSYSLIST(255)          NONXKEY, POS ARRAY      00182500
                 LCLA  &ZASYSLNDX  WORK INDEX FOR ZCSYSLIST()           00182600
                 LCLA  &ZPLLEN     PARAMETER LIST LENGTH                00182700
                 LCLC  &ZENDBASEPL              End of base PL          00182800
                 LCLA  &ZPLWORKA   PARAMETER LIST LENGTH                00182900
.*******************************************************************    00183000
.***AB.04  MACRO VARIABLES FOR RANGES AND SETS OF ARGUMENTS             00183100
.*******************************************************************    00183200
                 LCLA  &ZI         INDEX FOR ARRAY                      00183300
                 LCLA  &ZJ         INDEX FOR PARMS                      00183400
                 LCLA  &ZK         INDEX FOR PARSE                      00183500
                 LCLA  &ZLO        LOW RANGE VALUE                      00183600
                 LCLA  &ZHI        HIGH RANGE VALUE                     00183700
                 LCLC  &ZW         WORK AREA FOR PARM                   00183800
.********************************************************************   00183900
.***AB.05  INVOKE MVS MACROS TO CONTROL CODE GENERATION                 00184000
.********************************************************************   00184100
                 GBLC  &SYSSPLV    SP LEVEL 1,2,3 -SPLEVEL              00184200
                 GBLC  &SYSASCE    SYSTEM STATE P ANY AR-SYSSTATE       00184300
                 GBLA  &SYSALVL    SYSSTATE ARCHLVL                     00184400
.*                                                                      00184500
                 AIF   (K'&SYSASCE GT 0).ZSYS4  SYS STATE DEFINED       00184600
                 AIF   (K'&SYSSPLV GT 0).ZSYS2  SP LEVEL DEFINED        00184700
                 SPLEVEL  TEST                                          00184800
.ZSYS2           ANOP  ,                                                00184900
                 AIF   ('&SYSSPLV' EQ '1').ZSYS3  PRE SP 3.1            00185000
                 AIF   ('&SYSSPLV' EQ '2').ZSYS3  PRE SP 3.1            00185100
                 SYSSTATE TEST                                          00185200
                 AGO   .ZSYS4                                           00185300
.ZSYS3           ANOP  ,                                                00185400
&SYSASCE         SETC  'P'         ASSUME SYSSTATE PRIMARY              00185500
.ZSYS4           ANOP  ,                                                00185600
.*******************************************************************    00185700
.***AB.07  DEFINE ALL MACRO VARIABLES                                   00185800
.*******************************************************************    00185900
                 LCLC  &XREQUEST   ++ VALUE                             00186000
                 LCLC  &XMODINFOTYPE            ++ VALUE                00186100
                 LCLC  &XMODINFO   ++ NAME                              00186200
                 LCLC  &XMODINFOX  ++ NAME                              00186300
                 LCLC  &XNUMMOD    ++ NAME                              00186400
                 LCLC  &XBYADDR    ++ VALUE                             00186500
                 LCLC  &XDUMMY1    ++ NAME                              00186600
                 LCLC  &XDSNAME    ++ NAME                              00186700
                 LCLC  &XDDNAME    ++ NAME                              00186800
                 LCLC  &XDCB       ++ NAME                              00186900
                 LCLC  &XDCBPTR    ++ NAME                              00187000
                 LCLC  &XMASKDSNAME             ++ NAME                 00187100
                 LCLC  &XMASKDDNAME             ++ NAME                 00187200
                 LCLC  &XMASKDCB   ++ NAME                              00187300
                 LCLC  &XMASKDCBPTR             ++ NAME                 00187400
                 LCLC  &XOUTAREAPTR             ++ NAME                 00187500
                 LCLC  &XOUTAREALEN             ++ NAME                 00187600
                 LCLC  &XOUTAREANUM             ++ NAME                 00187700
                 LCLC  &XOUTAREASP              ++ NAME                 00187800
                 LCLC  &XAPFREQUIRED            ++ VALUE                00187900
                 LCLC  &XSECMODCHECK            ++ VALUE                00188000
                 LCLC  &XREQUESTOR              ++ NAME                 00188100
                 LCLC  &XMODPROB   ++ VALUE                             00188200
                 LCLC  &XERRORDATA              ++ NAME                 00188300
                 LCLC  &XTYPE      ++ VALUE                             00188400
                 LCLC  &XDYNFUNC   ++ NAME                              00188500
                 LCLC  &XLINKAGE   ++ VALUE                             00188600
                 LCLC  &XCMDINFO   ++ NAME                              00188700
                 LCLC  &XRETCODE   ++ NAME                              00188800
                 LCLC  &XRSNCODE   ++ NAME                              00188900
                 LCLA  &XPLISTVER  ++ VALUE                             00189000
                 LCLC  &XMF        ++ VALUE                             00189100
                 LCLC  &XMFCTRL    ++ NAME                              00189200
                 LCLC  &XMFATTR    ++ VALUE                             00189300
                 LCLC  &XMFSCK     ++ VALUE                             00189400
.*******************************************************************    00189500
.***AB.13  DEFINE MACRO VARIABLES FOR INPUT/OUTPUT PROCESSING           00189600
.*******************************************************************    00189700
                 LCLC  &ZXREQUEST  ++ INPUT VALUE                       00189800
                 LCLC  &ZXMODINFOTYPE           ++ INPUT VALUE          00189900
                 LCLC  &ZXMODINFO  ++ INOUT NAME                        00190000
                 LCLC  &ZXMODINFOX              ++ INPUT NAME           00190100
                 LCLC  &ZXNUMMOD   ++ INPUT NAME                        00190200
                 LCLC  &ZXBYADDR   ++ INPUT VALUE                       00190300
                 LCLC  &ZXDUMMY1   ++ INPUT NAME                        00190400
                 LCLC  &ZXDSNAME   ++ INPUT NAME                        00190500
                 LCLC  &ZXDDNAME   ++ INPUT NAME                        00190600
                 LCLC  &ZXDCB      ++ INPUT NAME                        00190700
                 LCLC  &ZXDCBPTR   ++ INPUT NAME                        00190800
                 LCLC  &ZXMASKDSNAME            ++ INPUT NAME           00190900
                 LCLC  &ZXMASKDDNAME            ++ INPUT NAME           00191000
                 LCLC  &ZXMASKDCB  ++ INPUT NAME                        00191100
                 LCLC  &ZXMASKDCBPTR            ++ INPUT NAME           00191200
                 LCLC  &ZXOUTAREAPTR            ++ OUTPUT NAME          00191300
                 LCLC  &ZXOUTAREALEN            ++ OUTPUT NAME          00191400
                 LCLC  &ZXOUTAREANUM            ++ OUTPUT NAME          00191500
                 LCLC  &ZXOUTAREASP             ++ INOUT NAME           00191600
                 LCLC  &ZXAPFREQUIRED           ++ INPUT VALUE          00191700
                 LCLC  &ZXSECMODCHECK           ++ INPUT VALUE          00191800
                 LCLC  &ZXREQUESTOR             ++ INPUT NAME           00191900
                 LCLC  &ZXMODPROB  ++ INPUT VALUE                       00192000
                 LCLC  &ZXERRORDATA             ++ OUTPUT NAME          00192100
                 LCLC  &ZXTYPE     ++ INPUT VALUE                       00192200
                 LCLC  &ZXDYNFUNC  ++ OUTPUT NAME                       00192300
                 LCLC  &ZXLINKAGE  ++ INPUT VALUE                       00192400
                 LCLC  &ZXCMDINFO  ++ INPUT NAME                        00192500
                 LCLC  &ZXRETCODE  ++ OUTPUT NAME                       00192600
                 LCLC  &ZXRSNCODE  ++ OUTPUT NAME                       00192700
                 LCLC  &ZXPLISTVER              ++ INPUT VALUE          00192800
                 LCLC  &ZXMF       ++ INPUT VALUE                       00192900
                 LCLC  &ZXMFCTRL   ++ INPUT NAME                        00193000
                 LCLC  &ZXMFATTR   ++ INPUT VALUE                       00193100
                 LCLC  &ZXMFSCK    ++ INPUT VALUE                       00193200
.********************************************************************   00193300
.***AC.PLV01  PROCESS PLISTVER                                      *   00193400
.********************************************************************   00193500
&XPLISTVER      SETA  0                                                 00193600
                AIF   (K'&PLISTVER(1) LE 0).ZPLV0                       00193700
                AIF   ('&PLISTVER(1)' NE 'MAX').ZPLV0                   00193800
&XPLISTVER      SETA  0                                                 00193900
.ZPLV0          ANOP  ,                                                 00194000
.*                                                                      00194100
                AIF   (K'&PLISTVER(1) LE 0).ZPVCKE                      00194200
                AIF   ('&PLISTVER(1)' EQ 'IMPLIED_VERSION').ZPVCKE      00194300
                AIF   ('&PLISTVER(1)' EQ 'MAX').ZPVCKE                  00194400
.*-------------------------------------------------------------------   00194500
                AIF   (N'&PLISTVER LE 1).ZPVCK3  CK NUM                 00194600
&ZMS            SETC  '"PLISTVER='         *KPOSA* MNOTE                00194700
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00194800
&ZMS            SETC  '&ZMS "PLISTVER"'                                 00194900
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00195000
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00195100
                AGO   .ZPVCK2                                           00195200
.ZPVCK3         ANOP  ,                                                 00195300
.*-------------------------------------------------------------------   00195400
                AIF   ('&PLISTVER'(1,1) NE '(').ZPVCK2                  00195500
&ZMS            SETC  '"PLISTVER='         *KGPRA* MNOTE                00195600
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00195700
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         00195800
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'                 00195900
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00196000
                AGO   .ZPVCKE                                           00196100
.ZPVCK2         ANOP  ,                                                 00196200
.*-------------------------------------------------------------------   00196300
&ZCVAL          SETC  '&PLISTVER(1)'                                    00196400
                AIF   ('&ZCVAL'(1,1) EQ '(').ZPVCKE  IN GPR             00196500
                AIF   (T'&ZCVAL NE 'N').ZPVCK6  NUMERIC ERR             00196600
&ZN             SETA   &PLISTVER(1)        CONVERT TO ARITHMETIC        00196700
                AIF   (&ZN LT 0).ZPVCK6    TOO LOW                      00196800
                AIF   (&ZN LE 0).ZPVCK4A   NOT HIGH                     00196900
.ZPVCK6         ANOP  ,                                                 00197000
&ZMS            SETC  '"PLISTVER='         *KRNGA* MNOTE                00197100
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00197200
&ZMS            SETC  '&ZMS THE RANGE IS "0-0"'                         00197300
                MNOTE 8,' &ZMS FOR ARGUMENT 1.'                         00197400
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00197500
&XPLISTVER      SETA  0                                                 00197600
                AGO   .ZPVCKE                                           00197700
.*-------------------------------------------------------------------   00197800
.ZPVCK4A        ANOP  ,                                                 00197900
                AIF   (&ZN GE &XPLISTVER).ZPVCK4                        00198000
&ZMS            SETC  'PLISTVER='          *KVALA* MNOTE                00198100
&ZMS            SETC  '&ZMS.&PLISTVER(1)'                               00198200
&ZMS            SETC  '&ZMS., BUT PLISTVER OF'                          00198300
&ZMS            SETC  '&ZMS &XPLISTVER'                                 00198400
                MNOTE 8,' &ZMS IS REQUIRED.'                            00198500
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00198600
                AGO   .ZPVCK5                                           00198700
.ZPVCK4         ANOP  ,                                                 00198800
&XPLISTVER      SETA  &PLISTVER(1)                                      00198900
.ZPVCK5         ANOP  ,                                                 00199000
.ZPVCKE         ANOP  ,                                                 00199100
.********************************************************************   00199200
.***AG.MF01 PROCESS MF MACRO FORMS                                      00199300
.********************************************************************   00199400
                 ACTR  10000                                            00199500
.*------------------------------------------------------------------    00199600
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00199700
&XMF             SETC  ''          INITIALIZE XVARIABLE                 00199800
.*-------------------------------------------------------------------   00199900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00200000
.ZG113           ANOP  ,                                                00200100
&ZTLC            SETC 'S'                                               00200200
                 AIF   ('&MF(1)' NE '&ZTLC').ZG114                      00200300
&XMF             SETC  'S'         SET KEYWORD                          00200400
&XMFSCK          SETC  'COMPLETE'  SET XMFSCK                           00200500
                 AIF   (N'&MF LE 1).ZG113A      CK NUM                  00200600
&ZMS             SETC  '"MF='      *KPOSA* MNOTE                        00200700
&ZMS             SETC  '&ZMS.&MF"'                                      00200800
&ZMS             SETC  '&ZMS "MF"'                                      00200900
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00201000
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00201100
.ZG113A          ANOP  ,                                                00201200
.*-------------------------------------------------------------------   00201300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00201400
.ZG114           ANOP  ,                                                00201500
&ZTLC            SETC 'L'                                               00201600
                 AIF   ('&MF(1)' NE '&ZTLC').ZG121                      00201700
&XMF             SETC  'L'         SET KEYWORD                          00201800
                 AIF   (N'&MF LE 3).ZG114A      CK NUM                  00201900
&ZMS             SETC  '"MF='      *KPOSA* MNOTE                        00202000
&ZMS             SETC  '&ZMS.&MF"'                                      00202100
&ZMS             SETC  '&ZMS "MF"'                                      00202200
                 MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'             00202300
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00202400
.ZG114A          ANOP  ,                                                00202500
.*-------------------------------------------------------------------   00202600
.***AG.KKCTL08 -MF(L) SPECIAL CHECK                                     00202700
                 AIF   (N'&SYSLIST NE 0).ZG114B  POSITIONALS?           00202800
                 AIF   ('&REQUEST' NE '').ZG114B  KEYS?                 00202900
                 AIF   ('&MODINFOTYPE' NE '').ZG114B  KEYS?             00203000
                 AIF   ('&MODINFO' NE '').ZG114B  KEYS?                 00203100
                 AIF   ('&MODINFOX' NE '').ZG114B  KEYS?                00203200
                 AIF   ('&NUMMOD' NE '').ZG114B  KEYS?                  00203300
                 AIF   ('&BYADDR' NE '').ZG114B  KEYS?                  00203400
                 AIF   ('&DSNAME' NE '').ZG114B  KEYS?                  00203500
                 AIF   ('&DDNAME' NE '').ZG114B  KEYS?                  00203600
                 AIF   ('&DCB' NE '').ZG114B    KEYS?                   00203700
                 AIF   ('&DCBPTR' NE '').ZG114B  KEYS?                  00203800
                 AIF   ('&MASKDSNAME' NE '').ZG114B  KEYS?              00203900
                 AIF   ('&MASKDDNAME' NE '').ZG114B  KEYS?              00204000
                 AIF   ('&MASKDCB' NE '').ZG114B  KEYS?                 00204100
                 AIF   ('&MASKDCBPTR' NE '').ZG114B  KEYS?              00204200
                 AIF   ('&OUTAREAPTR' NE '').ZG114B  KEYS?              00204300
                 AIF   ('&OUTAREALEN' NE '').ZG114B  KEYS?              00204400
                 AIF   ('&OUTAREANUM' NE '').ZG114B  KEYS?              00204500
                 AIF   ('&OUTAREASP' NE '').ZG114B  KEYS?               00204600
                 AIF   ('&APFREQUIRED' NE '').ZG114B  KEYS?             00204700
                 AIF   ('&SECMODCHECK' NE '').ZG114B  KEYS?             00204800
                 AIF   ('&REQUESTOR' NE '').ZG114B  KEYS?               00204900
                 AIF   ('&MODPROB' NE '').ZG114B  KEYS?                 00205000
                 AIF   ('&ERRORDATA' NE '').ZG114B  KEYS?               00205100
                 AIF   ('&TYPE' NE '').ZG114B   KEYS?                   00205200
                 AIF   ('&DYNFUNC' NE '').ZG114B  KEYS?                 00205300
                 AIF   ('&LINKAGE' NE '').ZG114B  KEYS?                 00205400
                 AIF   ('&CMDINFO' NE '').ZG114B  KEYS?                 00205500
                 AIF   ('&RETCODE' NE '').ZG114B  KEYS?                 00205600
                 AIF   ('&RSNCODE' NE '').ZG114B  KEYS?                 00205700
                 AGO    .ZG114C    INVOCATION OKAY                      00205800
.ZG114B          ANOP  ,                                                00205900
&ZMS             SETC  'THE "L" FORM OF "MF"'   *MFLA* MNOTE            00206000
&ZMS             SETC  '&ZMS CAN ONLY HAVE'                             00206100
&ZMS             SETC  '&ZMS THE "PLISTVER" KEY'                        00206200
                 MNOTE 8,' &ZMS SPECIFIED ON THE INVOCATION.'           00206300
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00206400
.ZG114C          ANOP  ,                                                00206500
.*-------------------------------------------------------------------   00206600
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00206700
&ZXMFCTRL        SETC  'INPUT'     SET IN/OUTPUT                        00206800
&XMFCTRL         SETC  '&MF(2,1)'  SET XVARIABLE                        00206900
                 AIF   (N'&MF(2) GT 1).ZG116B   MULTI PARMS             00207000
&XMFCTRL         SETC  '&MF(2)'    SET XVARIABLE                        00207100
.ZG116B          AIF   (K'&MF(2) GT 0).ZG116C                           00207200
&ZXMFCTRL        SETC  ''          RESET IN/OUTPUT                      00207300
&ZMS             SETC  'WHEN "L" IS SPECIFIED'  *KRQDA*                 00207400
&ZMS             SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'              00207500
                 MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                     00207600
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00207700
.ZG116C          ANOP  ,                                                00207800
.*-------------------------------------------------------------------   00207900
.***AG.KCK01 NAME, OPT RQD INPUT, POS(2) -GPR NOT ALLOWED               00208000
                 AIF   (K'&ZXMFCTRL LE 0).ZG116P  NOT I/O               00208100
                 AIF   ('&XMFCTRL'(1,1) NE '(').ZG116P                  00208200
&ZXMFCTRL        SETC  ''          RESET IN/OUTPUT                      00208300
&ZMS             SETC  '"MF='      *KGPRA* MNOTE                        00208400
&ZMS             SETC  '&ZMS.&MF"'                                      00208500
&ZMS             SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'        00208600
                 MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 2.'                00208700
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00208800
.ZG116P          ANOP  ,                                                00208900
.*-------------------------------------------------------------------   00209000
.***AG.KXVAR13 VALUE, OPT INPUT, POS(3) -XVARIABLE                      00209100
&ZXMFATTR        SETC  'INPUT'     SET IN/OUTPUT                        00209200
&XMFATTR         SETC  '0D'                                             00209300
                 AIF   (K'&MF(3) LE 0).ZG119B   PARM                    00209400
&XMFATTR         SETC  '&MF(3,1)'  SET XVARIABLE                        00209500
                 AIF   (N'&MF(3) GT 1).ZG119B   MULTI PARMS             00209600
&XMFATTR         SETC  '&MF(3)'    SET XVARIABLE                        00209700
.ZG119B          ANOP  ,                                                00209800
.*-------------------------------------------------------------------   00209900
.***AG.KCK01 VALUE, OPT INPUT, POS(3) -GPR NOT ALLOWED                  00210000
                 AIF   (K'&ZXMFATTR LE 0).ZG119P  NOT I/O               00210100
                 AIF   ('&XMFATTR'(1,1) NE '(').ZG119P                  00210200
&ZXMFATTR        SETC  ''          RESET IN/OUTPUT                      00210300
&ZMS             SETC  '"MF='      *KGPRA* MNOTE                        00210400
&ZMS             SETC  '&ZMS.&MF"'                                      00210500
&ZMS             SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'        00210600
                 MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 3.'                00210700
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00210800
.ZG119P          ANOP  ,                                                00210900
.*-------------------------------------------------------------------   00211000
.***AG.KCK03 VALUE, OPT INPUT, POS(3) -CHARACTER LENGTH                 00211100
                 AIF   (K'&ZXMFATTR LE 0).ZG119S  NOT I/O               00211200
                 AIF   (K'&XMFATTR LE 60).ZG119S  LNG OK                00211300
&ZXMFATTR        SETC  ''          RESET IN/OUTPUT                      00211400
&ZMS             SETC  '"MF='      *KLNGA* MNOTE                        00211500
&ZMS             SETC  '&ZMS.&MF"'                                      00211600
&ZMS             SETC  '&ZMS ARGUMENT 3 EXCEEDS THE MAXIMUM'            00211700
                 MNOTE 8,' &ZMS LENGTH OF 60 CHARACTERS.'               00211800
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00211900
.ZG119S          ANOP  ,                                                00212000
.*-------------------------------------------------------------------   00212100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00212200
.ZG121           ANOP  ,                                                00212300
&ZTLC            SETC 'M'                                               00212400
                 AIF   ('&MF(1)' NE '&ZTLC').ZG130                      00212500
&XMF             SETC  'M'         SET KEYWORD                          00212600
                 AIF   (N'&MF LE 3).ZG121A      CK NUM                  00212700
&ZMS             SETC  '"MF='      *KPOSA* MNOTE                        00212800
&ZMS             SETC  '&ZMS.&MF"'                                      00212900
&ZMS             SETC  '&ZMS "MF"'                                      00213000
                 MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'             00213100
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00213200
.ZG121A          ANOP  ,                                                00213300
.*-------------------------------------------------------------------   00213400
.***AG.KKCTL09 -MF(M) OUTPUT KEYS SPECIFIED?                            00213500
                 AIF   ('&OUTAREAPTR' NE '').ZG121B  OUTPUT SPECIFIED?  00213600
                 AIF   ('&OUTAREALEN' NE '').ZG121B                     00213700
                 AIF   ('&OUTAREANUM' NE '').ZG121B                     00213800
                 AIF   ('&ERRORDATA' NE '').ZG121B                      00213900
                 AIF   ('&DYNFUNC' NE '').ZG121B                        00214000
                 AGO    .ZG121C    INVOCATION OKAY                      00214100
.ZG121B          ANOP  ,                                                00214200
&ZMS             SETC  'THE "M" FORM OF "MF" CANNOT'  *MFMOA* MNOTE     00214300
&ZMS             SETC  '&ZMS HAVE THE FOLLOWING OUTPUT KEY(S)'          00214400
&ZMS             SETC  '&ZMS SPECIFIED ON THE INVOCATION:'              00214500
&ZMS             SETC  '&ZMS "OUTAREAPTR"'                              00214600
&ZMS             SETC  '&ZMS OR "OUTAREALEN"'                           00214700
&ZMS             SETC  '&ZMS OR "OUTAREANUM"'                           00214800
&ZMS             SETC  '&ZMS OR "ERRORDATA"'                            00214900
&ZMS             SETC  '&ZMS OR "DYNFUNC"'                              00215000
                 MNOTE 8,' &ZMS '                                       00215100
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00215200
.ZG121C          ANOP  ,                                                00215300
.*-------------------------------------------------------------------   00215400
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00215500
&ZXMFCTRL        SETC  'INPUT'     SET IN/OUTPUT                        00215600
&XMFCTRL         SETC  '&MF(2,1)'  SET XVARIABLE                        00215700
                 AIF   (N'&MF(2) GT 1).ZG123B   MULTI PARMS             00215800
&XMFCTRL         SETC  '&MF(2)'    SET XVARIABLE                        00215900
.ZG123B          AIF   (K'&MF(2) GT 0).ZG123C                           00216000
&ZXMFCTRL        SETC  ''          RESET IN/OUTPUT                      00216100
&ZMS             SETC  'WHEN "M" IS SPECIFIED'  *KRQDA*                 00216200
&ZMS             SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'              00216300
                 MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                     00216400
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00216500
.ZG123C          ANOP  ,                                                00216600
.*-------------------------------------------------------------------   00216700
.***AG.KCK02 NAME, OPT RQD INPUT, POS(2) -GPR OUT OF RANGE              00216800
                 AIF   (K'&ZXMFCTRL LE 0).ZG123R  NOT I/O               00216900
                 AIF   ('&XMFCTRL'(1,1) NE '(').ZG123R                  00217000
&ZCGPR           SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)                       00217100
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG123P                    00217200
                 AIF   (K'&ZCGPR GT 2).ZG123Q                           00217300
                 AIF   ('&ZCGPR' EQ '0').ZG123Q                         00217400
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00217500
                 AIF   (T'&ZCGPR NE 'N').ZG123Q  INVALID REG NAME       00217600
.ZG123P          ANOP  ,                                                00217700
                 AIF   (T'&ZCGPR NE 'N').ZG123R  NON NUMERIC            00217800
                 AIF   ('&ZCGPR' LT '1').ZG123Q                         00217900
                 AIF   ('&ZCGPR' LE '12').ZG123R                        00218000
.ZG123Q          ANOP  ,                                                00218100
&ZMS             SETC  '"MF='      *KGPRA* MNOTE                        00218200
&ZMS             SETC  '&ZMS.&MF"'                                      00218300
&ZMS             SETC  '&ZMS ARGUMENT 2 MUST SPECIFY A REGISTER'        00218400
                 MNOTE 8,' &ZMS IN THE RANGE (1)-(12).'                 00218500
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00218600
.ZG123R          ANOP  ,                                                00218700
.*-------------------------------------------------------------------   00218800
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00218900
&XMFSCK          SETC  ''          INITIALIZE XVARIABLE                 00219000
.ZG127A   AIF   ('&MF(3)' NE 'COMPLETE').ZG128A                         00219100
&XMFSCK          SETC  'COMPLETE'  SET KEYWORD                          00219200
.*-------------------------------------------------------------------   00219300
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00219400
.ZG128A   AIF   ('&MF(3)' NE 'NOCHECK').ZG129A                          00219500
&XMFSCK          SETC  'NOCHECK'   SET KEYWORD                          00219600
.*-------------------------------------------------------------------   00219700
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00219800
.ZG129A          AIF   (K'&XMFSCK GT 0).ZG129C  KEYWORD                 00219900
                 AIF   (K'&MF(3) LE 0).ZG129B                           00220000
&ZMS             SETC  '"MF='      *KUKWA* MNOTE                        00220100
&ZMS             SETC  '&ZMS.&MF"'                                      00220200
&ZMS             SETC  '&ZMS ARGUMENT 3 IS AN UNKNOWN KEYWORD. '        00220300
&ZMS             SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'              00220400
&ZMS             SETC  '&ZMS "COMPLETE"'                                00220500
&ZMS             SETC  '&ZMS OR "NOCHECK".'                             00220600
                 MNOTE 8,' &ZMS '                                       00220700
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00220800
.ZG129B          ANOP  ,                                                00220900
&XMFSCK          SETC  'COMPLETE'  SET DEFAULT KEYWORD                  00221000
.ZG129C          ANOP  ,                                                00221100
&ZXMFSCK         SETC  'INPUT'     SET IN/OUTPUT                        00221200
.*-------------------------------------------------------------------   00221300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00221400
.ZG130           ANOP  ,                                                00221500
&ZTLC            SETC 'E'                                               00221600
                 AIF   ('&MF(1)' NE '&ZTLC').ZG139                      00221700
&XMF             SETC  'E'         SET KEYWORD                          00221800
                 AIF   (N'&MF LE 3).ZG130A      CK NUM                  00221900
&ZMS             SETC  '"MF='      *KPOSA* MNOTE                        00222000
&ZMS             SETC  '&ZMS.&MF"'                                      00222100
&ZMS             SETC  '&ZMS "MF"'                                      00222200
                 MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'             00222300
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00222400
.ZG130A          ANOP  ,                                                00222500
.*-------------------------------------------------------------------   00222600
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00222700
&ZXMFCTRL        SETC  'INPUT'     SET IN/OUTPUT                        00222800
&XMFCTRL         SETC  '&MF(2,1)'  SET XVARIABLE                        00222900
                 AIF   (N'&MF(2) GT 1).ZG132B   MULTI PARMS             00223000
&XMFCTRL         SETC  '&MF(2)'    SET XVARIABLE                        00223100
.ZG132B          AIF   (K'&MF(2) GT 0).ZG132C                           00223200
&ZXMFCTRL        SETC  ''          RESET IN/OUTPUT                      00223300
&ZMS             SETC  'WHEN "E" IS SPECIFIED'  *KRQDA*                 00223400
&ZMS             SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'              00223500
                 MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                     00223600
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00223700
.ZG132C          ANOP  ,                                                00223800
.*-------------------------------------------------------------------   00223900
.***AG.KCK02 NAME, OPT RQD INPUT, POS(2) -GPR OUT OF RANGE              00224000
                 AIF   (K'&ZXMFCTRL LE 0).ZG132R  NOT I/O               00224100
                 AIF   ('&XMFCTRL'(1,1) NE '(').ZG132R                  00224200
&ZCGPR           SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)                       00224300
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG132P                    00224400
                 AIF   (K'&ZCGPR GT 2).ZG132Q                           00224500
                 AIF   ('&ZCGPR' EQ '0').ZG132Q                         00224600
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00224700
                 AIF   (T'&ZCGPR NE 'N').ZG132Q  INVALID REG NAME       00224800
.ZG132P          ANOP  ,                                                00224900
                 AIF   (T'&ZCGPR NE 'N').ZG132R  NON NUMERIC            00225000
                 AIF   ('&ZCGPR' LT '1').ZG132Q                         00225100
                 AIF   ('&ZCGPR' LE '12').ZG132R                        00225200
.ZG132Q          ANOP  ,                                                00225300
&ZMS             SETC  '"MF='      *KGPRA* MNOTE                        00225400
&ZMS             SETC  '&ZMS.&MF"'                                      00225500
&ZMS             SETC  '&ZMS ARGUMENT 2 MUST SPECIFY A REGISTER'        00225600
                 MNOTE 8,' &ZMS IN THE RANGE (1)-(12).'                 00225700
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00225800
.ZG132R          ANOP  ,                                                00225900
.*-------------------------------------------------------------------   00226000
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00226100
&XMFSCK          SETC  ''          INITIALIZE XVARIABLE                 00226200
.ZG136A   AIF   ('&MF(3)' NE 'COMPLETE').ZG137A                         00226300
&XMFSCK          SETC  'COMPLETE'  SET KEYWORD                          00226400
.*-------------------------------------------------------------------   00226500
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00226600
.ZG137A   AIF   ('&MF(3)' NE 'NOCHECK').ZG138A                          00226700
&XMFSCK          SETC  'NOCHECK'   SET KEYWORD                          00226800
.*-------------------------------------------------------------------   00226900
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00227000
.ZG138A          AIF   (K'&XMFSCK GT 0).ZG138C  KEYWORD                 00227100
                 AIF   (K'&MF(3) LE 0).ZG138B                           00227200
&ZMS             SETC  '"MF='      *KUKWA* MNOTE                        00227300
&ZMS             SETC  '&ZMS.&MF"'                                      00227400
&ZMS             SETC  '&ZMS ARGUMENT 3 IS AN UNKNOWN KEYWORD. '        00227500
&ZMS             SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'              00227600
&ZMS             SETC  '&ZMS "COMPLETE"'                                00227700
&ZMS             SETC  '&ZMS OR "NOCHECK".'                             00227800
                 MNOTE 8,' &ZMS '                                       00227900
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00228000
.ZG138B          ANOP  ,                                                00228100
&XMFSCK          SETC  'COMPLETE'  SET DEFAULT KEYWORD                  00228200
.ZG138C          ANOP  ,                                                00228300
&ZXMFSCK         SETC  'INPUT'     SET IN/OUTPUT                        00228400
.*------------------------------------------------------------------    00228500
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00228600
.ZG139           ANOP  ,                                                00228700
&ZXMF            SETC  'INPUT'     SET IN/OUTPUT                        00228800
                 AIF   (K'&XMF GT 0).ZG139E     VALID ARG               00228900
                 AIF   (T'&MF EQ 'O').ZG139D    OMITTED                 00229000
&ZASYSLNDX       SETA  0                                                00229100
.ZG139A          ANOP  ,           POSITIONAL MACRO KEY                 00229200
&ZASYSLNDX       SETA  &ZASYSLNDX+1                                     00229300
                 AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG139C                00229400
&ZTLC            SETC 'MF'                                              00229500
                 AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG139A       00229600
.ZG139B          ANOP  ,                                                00229700
&ZXMF            SETC  ''          RESET IN/OUTPUT                      00229800
&ZMS             SETC  'THE "MF" KEY'           *KOPTA* MNOTE           00229900
&ZMS             SETC  '&ZMS MUST CONTAIN ONE'                          00230000
                 MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                 00230100
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00230200
                 AGO   .ZG139E                                          00230300
.ZG139C          ANOP  ,                                                00230400
&ZXMF            SETC  ''          RESET IN/OUTPUT                      00230500
&ZMS             SETC  '"MF='      *KUKWA* MNOTE                        00230600
&ZMS             SETC  '&ZMS.&MF"'                                      00230700
&ZMS             SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '        00230800
&ZMS             SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'              00230900
&ZMS             SETC  '&ZMS "S",'                                      00231000
&ZMS             SETC  '&ZMS "L",'                                      00231100
&ZMS             SETC  '&ZMS "M",'                                      00231200
&ZMS             SETC  '&ZMS OR "E".'                                   00231300
                 MNOTE 8,' &ZMS '                                       00231400
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00231500
                 AGO   .ZG139E                                          00231600
.ZG139D          ANOP  ,                                                00231700
&XMF             SETC  'S'         SET DEFAULT KEYWORD                  00231800
&XMFSCK          SETC  'COMPLETE'  COMPLETE CHECKING                    00231900
.ZG139E          ANOP  ,                                                00232000
.********************************************************************   00232100
.***AG.MF02  FULL MACRO SYNTAX CHECKING                                 00232200
.********************************************************************   00232300
                 ACTR  10000                                            00232400
.*-------------------------------------------------------------------   00232500
.***AG.MF03 MF=(SLME)                                                   00232600
                 AIF   ('&XMF' EQ 'L').ZGMFX                            00232700
                 AIF   ('&XMFSCK' NE 'COMPLETE').ZGMFX                  00232800
.*------------------------------------------------------------------    00232900
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00233000
&XREQUEST        SETC  ''          INITIALIZE XVARIABLE                 00233100
.*-------------------------------------------------------------------   00233200
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00233300
.ZG3             ANOP  ,                                                00233400
                 AIF   (K'&REQUEST(1) LE 0).ZG3A                        00233500
&ZTLC            SETC 'ADD'                                             00233600
                 AIF   ('&REQUEST(1)' NE '&ZTLC').ZG71                  00233700
&XREQUEST        SETC  'ADD'       SET KEYWORD                          00233800
                 AIF   (N'&REQUEST LE 1).ZG3A   CK NUM                  00233900
&ZMS             SETC  '"REQUEST='              *KPOSA* MNOTE           00234000
&ZMS             SETC  '&ZMS.&REQUEST"'                                 00234100
&ZMS             SETC  '&ZMS "REQUEST"'                                 00234200
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00234300
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00234400
.ZG3A            ANOP  ,                                                00234500
.*------------------------------------------------------------------    00234600
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00234700
&ZCVAL           SETC ''           CLEAR ERROR KEY ACCUMULATOR          00234800
.ZG3A0           AIF   (K'&TYPE LE 0).ZG3A1     OK                      00234900
&ZCVAL           SETC '&ZCVAL TYPE'             INCORRECT KEY USED      00235000
.ZG3A1           AIF   (K'&DYNFUNC LE 0).ZG3A2  OK                      00235100
&ZCVAL           SETC '&ZCVAL DYNFUNC'          INCORRECT KEY USED      00235200
.ZG3A2           AIF   (K'&ZCVAL LE 0).ZG3A3    OK                      00235300
&ZCVAL           SETC '&ZCVAL'(2,K'&ZCVAL-1)                            00235400
&ZMS             SETC  '"REQUEST'  *KMEIA* MNOTE                        00235500
&ZMS             SETC  '&ZMS.=&REQUEST"'                                00235600
&ZMS             SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'             00235700
                 MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'             00235800
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00235900
.ZG3A3           ANOP  ,                                                00236000
.*------------------------------------------------------------------    00236100
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00236200
&XMODINFOTYPE    SETC  ''          INITIALIZE XVARIABLE                 00236300
.*-------------------------------------------------------------------   00236400
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00236500
.ZG6             ANOP  ,                                                00236600
                 AIF   (K'&MODINFOTYPE(1) LE 0).ZG6A                    00236700
&ZTLC            SETC 'MEMBERLIST'                                      00236800
                 AIF   ('&MODINFOTYPE(1)' NE '&ZTLC').ZG27              00236900
&XMODINFOTYPE    SETC  'MEMBERLIST'             SET KEYWORD             00237000
                 AIF   (N'&MODINFOTYPE LE 1).ZG6A  CK NUM               00237100
&ZMS             SETC  '"MODINFOTYPE='          *KPOSA* MNOTE           00237200
&ZMS             SETC  '&ZMS.&MODINFOTYPE"'                             00237300
&ZMS             SETC  '&ZMS "MODINFOTYPE"'                             00237400
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00237500
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00237600
.ZG6A            ANOP  ,                                                00237700
.*------------------------------------------------------------------    00237800
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00237900
&ZCVAL           SETC ''           CLEAR ERROR KEY ACCUMULATOR          00238000
.ZG6A0           AIF   (K'&MASKDSNAME LE 0).ZG6A1  OK                   00238100
&ZCVAL           SETC '&ZCVAL MASKDSNAME'       INCORRECT KEY USED      00238200
.ZG6A1           AIF   (K'&MASKDDNAME LE 0).ZG6A2  OK                   00238300
&ZCVAL           SETC '&ZCVAL MASKDDNAME'       INCORRECT KEY USED      00238400
.ZG6A2           AIF   (K'&MASKDCB LE 0).ZG6A3  OK                      00238500
&ZCVAL           SETC '&ZCVAL MASKDCB'          INCORRECT KEY USED      00238600
.ZG6A3           AIF   (K'&MASKDCBPTR LE 0).ZG6A4  OK                   00238700
&ZCVAL           SETC '&ZCVAL MASKDCBPTR'       INCORRECT KEY USED      00238800
.ZG6A4           AIF   (K'&OUTAREAPTR LE 0).ZG6A5  OK                   00238900
&ZCVAL           SETC '&ZCVAL OUTAREAPTR'       INCORRECT KEY USED      00239000
.ZG6A5           AIF   (K'&OUTAREALEN LE 0).ZG6A6  OK                   00239100
&ZCVAL           SETC '&ZCVAL OUTAREALEN'       INCORRECT KEY USED      00239200
.ZG6A6           AIF   (K'&OUTAREANUM LE 0).ZG6A7  OK                   00239300
&ZCVAL           SETC '&ZCVAL OUTAREANUM'       INCORRECT KEY USED      00239400
.ZG6A7           AIF   (K'&OUTAREASP LE 0).ZG6A8  OK                    00239500
&ZCVAL           SETC '&ZCVAL OUTAREASP'        INCORRECT KEY USED      00239600
.ZG6A8           AIF   (K'&ZCVAL LE 0).ZG6A9    OK                      00239700
&ZCVAL           SETC '&ZCVAL'(2,K'&ZCVAL-1)                            00239800
&ZMS             SETC  '"MODINFOTYPE'           *KMEIA* MNOTE           00239900
&ZMS             SETC  '&ZMS.=&MODINFOTYPE"'                            00240000
&ZMS             SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'             00240100
                 MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'             00240200
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00240300
.ZG6A9           ANOP  ,                                                00240400
.*----------------------------------------------------------------***   00240500
.***AG.KXVAR05 NAME, RQD INOUT, KEYS -XVARIABLE KEY                     00240600
                 AIF   (N'&MODINFO LE 1).ZG8A   CK NUM                  00240700
&ZMS             SETC  '"MODINFO='              *KPOSA* MNOTE           00240800
&ZMS             SETC  '&ZMS.&MODINFO"'                                 00240900
&ZMS             SETC  '&ZMS "MODINFO"'                                 00241000
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00241100
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00241200
.ZG8A            ANOP  ,                                                00241300
.*-------------------------------------------------------------------   00241400
.***AG.KXVAR06 NAME, RQD INOUT, KEYS -XVARIABLE                         00241500
&ZXMODINFO       SETC  'INOUT'     SET IN/OUTPUT                        00241600
&XMODINFO        SETC  '&MODINFO(1)'            SET XVARIABLE           00241700
                 AIF   (N'&MODINFO GT 1).ZG8B   MULTI PARMS             00241800
&XMODINFO        SETC  '&MODINFO'  SET XVARIABLE                        00241900
.ZG8B            AIF   (K'&MODINFO(1) GT 0).ZG8C                        00242000
&ZXMODINFO       SETC  ''          RESET IN/OUTPUT                      00242100
&ZMS             SETC  ' '         *KRQDA*                              00242200
&ZMS             SETC  '&ZMS "MODINFO" KEY AND ITS'                     00242300
                 MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                 00242400
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00242500
.ZG8C            ANOP  ,                                                00242600
.*-------------------------------------------------------------------   00242700
.***AG.KCK02 NAME, RQD INOUT, KEYS -GPR OUT OF RANGE                    00242800
                 AIF   (K'&ZXMODINFO LE 0).ZG8R  NOT I/O                00242900
                 AIF   ('&XMODINFO'(1,1) NE '(').ZG8R                   00243000
&ZCGPR           SETC  '&XMODINFO'(2,K'&XMODINFO-2)                     00243100
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG8P                      00243200
                 AIF   (K'&ZCGPR GT 2).ZG8Q                             00243300
                 AIF   ('&ZCGPR' EQ '0').ZG8Q                           00243400
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00243500
                 AIF   (T'&ZCGPR NE 'N').ZG8Q   INVALID REG NAME        00243600
.ZG8P            ANOP  ,                                                00243700
                 AIF   (T'&ZCGPR NE 'N').ZG8R   NON NUMERIC             00243800
                 AIF   ('&ZCGPR' LT '2').ZG8Q                           00243900
                 AIF   ('&ZCGPR' LE '12').ZG8R                          00244000
.ZG8Q            ANOP  ,                                                00244100
&ZMS             SETC  '"MODINFO='              *KGPRA* MNOTE           00244200
&ZMS             SETC  '&ZMS.&MODINFO"'                                 00244300
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00244400
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00244500
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00244600
.ZG8R            ANOP  ,                                                00244700
.*----------------------------------------------------------------***   00244800
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00244900
                 AIF   (N'&MODINFOX LE 1).ZG11A  CK NUM                 00245000
&ZMS             SETC  '"MODINFOX='             *KPOSA* MNOTE           00245100
&ZMS             SETC  '&ZMS.&MODINFOX"'                                00245200
&ZMS             SETC  '&ZMS "MODINFOX"'                                00245300
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00245400
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00245500
.ZG11A           ANOP  ,                                                00245600
.*-------------------------------------------------------------------   00245700
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00245800
&ZXMODINFOX      SETC  'INPUT'     SET IN/OUTPUT                        00245900
&XMODINFOX       SETC  'NO_MODINFOX'                                    00246000
                 AIF   (K'&MODINFOX(1) LE 0).ZG11B  PARM                00246100
&XMODINFOX       SETC  '&MODINFOX(1)'           SET XVARIABLE           00246200
                 AIF   (N'&MODINFOX GT 1).ZG11B  MULTI PARMS            00246300
&XMODINFOX       SETC  '&MODINFOX'              SET XVARIABLE           00246400
.ZG11B           ANOP  ,                                                00246500
.*-------------------------------------------------------------------   00246600
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00246700
                 AIF   (K'&ZXMODINFOX LE 0).ZG11R  NOT I/O              00246800
         AIF   ('&XMODINFOX' EQ 'NO_MODINFOX').ZG11R                    00246900
                 AIF   ('&XMODINFOX'(1,1) NE '(').ZG11R                 00247000
&ZCGPR           SETC  '&XMODINFOX'(2,K'&XMODINFOX-2)                   00247100
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG11P                     00247200
                 AIF   (K'&ZCGPR GT 2).ZG11Q                            00247300
                 AIF   ('&ZCGPR' EQ '0').ZG11Q                          00247400
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00247500
                 AIF   (T'&ZCGPR NE 'N').ZG11Q  INVALID REG NAME        00247600
.ZG11P           ANOP  ,                                                00247700
                 AIF   (T'&ZCGPR NE 'N').ZG11R  NON NUMERIC             00247800
                 AIF   ('&ZCGPR' LT '2').ZG11Q                          00247900
                 AIF   ('&ZCGPR' LE '12').ZG11R                         00248000
.ZG11Q           ANOP  ,                                                00248100
&ZMS             SETC  '"MODINFOX='             *KGPRA* MNOTE           00248200
&ZMS             SETC  '&ZMS.&MODINFOX"'                                00248300
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00248400
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00248500
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00248600
.ZG11R           ANOP  ,                                                00248700
.*----------------------------------------------------------------***   00248800
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00248900
                 AIF   (N'&NUMMOD LE 1).ZG14A   CK NUM                  00249000
&ZMS             SETC  '"NUMMOD='  *KPOSA* MNOTE                        00249100
&ZMS             SETC  '&ZMS.&NUMMOD"'                                  00249200
&ZMS             SETC  '&ZMS "NUMMOD"'                                  00249300
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00249400
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00249500
.ZG14A           ANOP  ,                                                00249600
.*-------------------------------------------------------------------   00249700
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00249800
&ZXNUMMOD        SETC  'INPUT'     SET IN/OUTPUT                        00249900
&XNUMMOD         SETC  '&NUMMOD(1)'             SET XVARIABLE           00250000
                 AIF   (N'&NUMMOD GT 1).ZG14B   MULTI PARMS             00250100
&XNUMMOD         SETC  '&NUMMOD'   SET XVARIABLE                        00250200
.ZG14B           AIF   (K'&NUMMOD(1) GT 0).ZG14C                        00250300
&ZXNUMMOD        SETC  ''          RESET IN/OUTPUT                      00250400
&ZMS             SETC  ' '         *KRQDA*                              00250500
&ZMS             SETC  '&ZMS "NUMMOD" KEY AND ITS'                      00250600
                 MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                 00250700
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00250800
.ZG14C           ANOP  ,                                                00250900
.*-------------------------------------------------------------------   00251000
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00251100
                 AIF   (K'&ZXNUMMOD LE 0).ZG14R  NOT I/O                00251200
                 AIF   ('&XNUMMOD'(1,1) NE '(').ZG14R                   00251300
&ZCGPR           SETC  '&XNUMMOD'(2,K'&XNUMMOD-2)                       00251400
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG14P                     00251500
                 AIF   (K'&ZCGPR GT 2).ZG14Q                            00251600
                 AIF   ('&ZCGPR' EQ '0').ZG14Q                          00251700
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00251800
                 AIF   (T'&ZCGPR NE 'N').ZG14Q  INVALID REG NAME        00251900
.ZG14P           ANOP  ,                                                00252000
                 AIF   (T'&ZCGPR NE 'N').ZG14R  NON NUMERIC             00252100
                 AIF   ('&ZCGPR' LT '2').ZG14Q                          00252200
                 AIF   ('&ZCGPR' LE '12').ZG14R                         00252300
.ZG14Q           ANOP  ,                                                00252400
&ZMS             SETC  '"NUMMOD='  *KGPRA* MNOTE                        00252500
&ZMS             SETC  '&ZMS.&NUMMOD"'                                  00252600
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00252700
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00252800
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00252900
.ZG14R           ANOP  ,                                                00253000
.*------------------------------------------------------------------    00253100
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00253200
&XBYADDR         SETC  ''          INITIALIZE XVARIABLE                 00253300
.*-------------------------------------------------------------------   00253400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00253500
.ZG18            ANOP  ,                                                00253600
                 AIF   (K'&BYADDR(1) LE 0).ZG18A                        00253700
&ZTLC            SETC 'NO'                                              00253800
                 AIF   ('&BYADDR(1)' NE '&ZTLC').ZG25                   00253900
&XBYADDR         SETC  'NO'        SET KEYWORD                          00254000
                 AIF   (N'&BYADDR LE 1).ZG18A   CK NUM                  00254100
&ZMS             SETC  '"BYADDR='  *KPOSA* MNOTE                        00254200
&ZMS             SETC  '&ZMS.&BYADDR"'                                  00254300
&ZMS             SETC  '&ZMS "BYADDR"'                                  00254400
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00254500
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00254600
.ZG18A           ANOP  ,                                                00254700
.*----------------------------------------------------------------***   00254800
.***AG.KMEKY01 NAME, OPT RQD INPUT, ME KEYS -XVARIABLE                  00254900
&XDUMMY1         SETC  ''          INITIALIZE XVARIABLE                 00255000
                 AIF   (K'&DSNAME LE 0).ZG20C                           00255100
&ZXDUMMY1        SETC  'INPUT'     SET IN/OUTPUT                        00255200
&XDUMMY1         SETC  'DSNAME'    SET XVARIABLE                        00255300
&ZXDSNAME        SETC  'INPUT'     SET IN/OUTPUT                        00255400
&XDSNAME         SETC  '&DSNAME(1)'             SET XVARIABLE PARM      00255500
                 AIF   (N'&DSNAME GT 1).ZG20A                           00255600
&XDSNAME         SETC  '&DSNAME'   SET XVARIABLE PARM                   00255700
.ZG20A           AIF   (N'&DSNAME LE 1).ZG20B   CK NUM                  00255800
&ZMS             SETC  '"DSNAME='  *KPOSA* MNOTE                        00255900
&ZMS             SETC  '&ZMS.&DSNAME"'                                  00256000
&ZMS             SETC  '&ZMS "DSNAME"'                                  00256100
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00256200
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00256300
.ZG20B           AIF   (K'&XDSNAME GT 0).ZG20C  ONE PARM                00256400
&ZXDUMMY1        SETC  ''          RESET IN/OUTPUT                      00256500
&ZXDSNAME        SETC  ''          RESET IN/OUTPUT                      00256600
&ZMS             SETC  ' '         *KRQDA*                              00256700
&ZMS             SETC  '&ZMS "DSNAME" KEY AND ITS'                      00256800
                 MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                 00256900
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00257000
.ZG20C           ANOP  ,                                                00257100
.*----------------------------------------------------------------***   00257200
.***AG.KMEKY02 NAME, OPT RQD INPUT, ME KEYS -XVARIABLE                  00257300
                 AIF   (K'&DDNAME LE 0).ZG21D   NO ME KEY               00257400
                 AIF   (N'&DDNAME LE 1).ZG21A   CK NUM                  00257500
&ZMS             SETC  '"DDNAME='  *KPOSA* MNOTE                        00257600
&ZMS             SETC  '&ZMS.&DDNAME"'                                  00257700
&ZMS             SETC  '&ZMS "DDNAME"'                                  00257800
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00257900
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00258000
.ZG21A           AIF   (K'&XDUMMY1 LE 0).ZG21B                          00258100
&ZMS             SETC  '"DDNAME'   *KMEKA* MNOTE                        00258200
&ZMS             SETC  '&ZMS.=&DDNAME"'                                 00258300
&ZMS             SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'            00258400
&ZMS             SETC  '&ZMS "&XDUMMY1"'                                00258500
                 MNOTE 8,' &ZMS KEY.'                                   00258600
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00258700
                 AGO   .ZG21D                                           00258800
.*                                                                      00258900
.ZG21B           ANOP  ,                                                00259000
&ZXDUMMY1        SETC  'INPUT'     SET IN/OUTPUT                        00259100
&XDUMMY1         SETC  'DDNAME'    SET XVARIABLE                        00259200
&ZXDDNAME        SETC  'INPUT'     SET IN/OUTPUT                        00259300
&XDDNAME         SETC  '&DDNAME(1)'             SET XVARIABLE PARM      00259400
                 AIF   (N'&DDNAME GT 1).ZG21C                           00259500
&XDDNAME         SETC  '&DDNAME'   SET XVARIABLE PARM                   00259600
.ZG21C           AIF   (K'&XDDNAME GT 0).ZG21D  ONE PARM                00259700
&ZXDUMMY1        SETC  ''          RESET IN/OUTPUT                      00259800
&ZXDDNAME        SETC  ''          RESET IN/OUTPUT                      00259900
&ZMS             SETC  ' '         *KRQDA*                              00260000
&ZMS             SETC  '&ZMS "DDNAME" KEY AND ITS'                      00260100
                 MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                 00260200
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00260300
.ZG21D           ANOP  ,                                                00260400
.*----------------------------------------------------------------***   00260500
.***AG.KMEKY02 NAME, OPT RQD INPUT, ME KEYS -XVARIABLE                  00260600
                 AIF   (K'&DCB LE 0).ZG22D      NO ME KEY               00260700
                 AIF   (N'&DCB LE 1).ZG22A      CK NUM                  00260800
&ZMS             SETC  '"DCB='     *KPOSA* MNOTE                        00260900
&ZMS             SETC  '&ZMS.&DCB"'                                     00261000
&ZMS             SETC  '&ZMS "DCB"'                                     00261100
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00261200
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00261300
.ZG22A           AIF   (K'&XDUMMY1 LE 0).ZG22B                          00261400
&ZMS             SETC  '"DCB'      *KMEKA* MNOTE                        00261500
&ZMS             SETC  '&ZMS.=&DCB"'                                    00261600
&ZMS             SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'            00261700
&ZMS             SETC  '&ZMS "&XDUMMY1"'                                00261800
                 MNOTE 8,' &ZMS KEY.'                                   00261900
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00262000
                 AGO   .ZG22D                                           00262100
.*                                                                      00262200
.ZG22B           ANOP  ,                                                00262300
&ZXDUMMY1        SETC  'INPUT'     SET IN/OUTPUT                        00262400
&XDUMMY1         SETC  'DCB'       SET XVARIABLE                        00262500
&ZXDCB           SETC  'INPUT'     SET IN/OUTPUT                        00262600
&XDCB            SETC  '&DCB(1)'   SET XVARIABLE PARM                   00262700
                 AIF   (N'&DCB GT 1).ZG22C                              00262800
&XDCB            SETC  '&DCB'      SET XVARIABLE PARM                   00262900
.ZG22C           AIF   (K'&XDCB GT 0).ZG22D     ONE PARM                00263000
&ZXDUMMY1        SETC  ''          RESET IN/OUTPUT                      00263100
&ZXDCB           SETC  ''          RESET IN/OUTPUT                      00263200
&ZMS             SETC  ' '         *KRQDA*                              00263300
&ZMS             SETC  '&ZMS "DCB" KEY AND ITS'                         00263400
                 MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                 00263500
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00263600
.ZG22D           ANOP  ,                                                00263700
.*----------------------------------------------------------------***   00263800
.***AG.KMEKY02 NAME, OPT RQD INPUT, ME KEYS -XVARIABLE                  00263900
                 AIF   (K'&DCBPTR LE 0).ZG23D   NO ME KEY               00264000
                 AIF   (N'&DCBPTR LE 1).ZG23A   CK NUM                  00264100
&ZMS             SETC  '"DCBPTR='  *KPOSA* MNOTE                        00264200
&ZMS             SETC  '&ZMS.&DCBPTR"'                                  00264300
&ZMS             SETC  '&ZMS "DCBPTR"'                                  00264400
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00264500
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00264600
.ZG23A           AIF   (K'&XDUMMY1 LE 0).ZG23B                          00264700
&ZMS             SETC  '"DCBPTR'   *KMEKA* MNOTE                        00264800
&ZMS             SETC  '&ZMS.=&DCBPTR"'                                 00264900
&ZMS             SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'            00265000
&ZMS             SETC  '&ZMS "&XDUMMY1"'                                00265100
                 MNOTE 8,' &ZMS KEY.'                                   00265200
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00265300
                 AGO   .ZG23D                                           00265400
.*                                                                      00265500
.ZG23B           ANOP  ,                                                00265600
&ZXDUMMY1        SETC  'INPUT'     SET IN/OUTPUT                        00265700
&XDUMMY1         SETC  'DCBPTR'    SET XVARIABLE                        00265800
&ZXDCBPTR        SETC  'INPUT'     SET IN/OUTPUT                        00265900
&XDCBPTR         SETC  '&DCBPTR(1)'             SET XVARIABLE PARM      00266000
                 AIF   (N'&DCBPTR GT 1).ZG23C                           00266100
&XDCBPTR         SETC  '&DCBPTR'   SET XVARIABLE PARM                   00266200
.ZG23C           AIF   (K'&XDCBPTR GT 0).ZG23D  ONE PARM                00266300
&ZXDUMMY1        SETC  ''          RESET IN/OUTPUT                      00266400
&ZXDCBPTR        SETC  ''          RESET IN/OUTPUT                      00266500
&ZMS             SETC  ' '         *KRQDA*                              00266600
&ZMS             SETC  '&ZMS "DCBPTR" KEY AND ITS'                      00266700
                 MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                 00266800
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00266900
.ZG23D           ANOP  ,                                                00267000
.*------------------------------------------------------------------    00267100
.***AG.KME4Y09 NAME, OPT RQD INPUT, ME KEYS -CHECK IF KEY ENTERED       00267200
                 AIF   (K'&XDUMMY1 GT 0).ZG24B                          00267300
&ZXDUMMY1        SETC  ''          RESET IN/OUTPUT                      00267400
&ZXDSNAME        SETC  ''          RESET IN/OUTPUT                      00267500
&XDUMMY1         SETC  ''          ENSURE NULL                          00267600
&XDSNAME         SETC  ''          ENSURE NULL                          00267700
&ZMS             SETC  'ONE OF THE FOLLOWING'   *KMERA* MNOTE           00267800
&ZMS             SETC  '&ZMS MUTUALLY EXCLUSIVE KEY(S) IS'              00267900
&ZMS             SETC  '&ZMS REQUIRED:'                                 00268000
&ZMS             SETC  '&ZMS "DSNAME",'         VALID ME KEY            00268100
&ZMS             SETC  '&ZMS "DDNAME",'         VALID ME KEY            00268200
&ZMS             SETC  '&ZMS "DCB",'            VALID ME KEY            00268300
&ZMS             SETC  '&ZMS OR "DCBPTR".'      VALID ME KEY            00268400
                 MNOTE 8,' &ZMS '                                       00268500
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00268600
.ZG24B           ANOP  ,                                                00268700
.*-------------------------------------------------------------------   00268800
.***AG.KMEKY13 NAME, OPT RQD INPUT, ME KEYS -PROCESS DEPENDENCIES       00268900
.ZG20            AIF   ('&XDUMMY1' NE 'DSNAME').ZG21                    00269000
.*-------------------------------------------------------------------   00269100
.***AG.KCK02 NAME, OPT RQD INPUT, ME KEYS -GPR OUT OF RANGE             00269200
                 AIF   (K'&ZXDSNAME LE 0).ZG20R  NOT I/O                00269300
                 AIF   ('&XDSNAME'(1,1) NE '(').ZG20R                   00269400
&ZCGPR           SETC  '&XDSNAME'(2,K'&XDSNAME-2)                       00269500
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG20P                     00269600
                 AIF   (K'&ZCGPR GT 2).ZG20Q                            00269700
                 AIF   ('&ZCGPR' EQ '0').ZG20Q                          00269800
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00269900
                 AIF   (T'&ZCGPR NE 'N').ZG20Q  INVALID REG NAME        00270000
.ZG20P           ANOP  ,                                                00270100
                 AIF   (T'&ZCGPR NE 'N').ZG20R  NON NUMERIC             00270200
                 AIF   ('&ZCGPR' LT '2').ZG20Q                          00270300
                 AIF   ('&ZCGPR' LE '12').ZG20R                         00270400
.ZG20Q           ANOP  ,                                                00270500
&ZMS             SETC  '"DSNAME='  *KGPRA* MNOTE                        00270600
&ZMS             SETC  '&ZMS.&DSNAME"'                                  00270700
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00270800
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00270900
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00271000
.ZG20R           ANOP  ,                                                00271100
.*-------------------------------------------------------------------   00271200
.***AG.KMEKY13 NAME, OPT RQD INPUT, ME KEYS -PROCESS DEPENDENCIES       00271300
.ZG21            AIF   ('&XDUMMY1' NE 'DDNAME').ZG22                    00271400
.*-------------------------------------------------------------------   00271500
.***AG.KCK02 NAME, OPT RQD INPUT, ME KEYS -GPR OUT OF RANGE             00271600
                 AIF   (K'&ZXDDNAME LE 0).ZG21R  NOT I/O                00271700
                 AIF   ('&XDDNAME'(1,1) NE '(').ZG21R                   00271800
&ZCGPR           SETC  '&XDDNAME'(2,K'&XDDNAME-2)                       00271900
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG21P                     00272000
                 AIF   (K'&ZCGPR GT 2).ZG21Q                            00272100
                 AIF   ('&ZCGPR' EQ '0').ZG21Q                          00272200
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00272300
                 AIF   (T'&ZCGPR NE 'N').ZG21Q  INVALID REG NAME        00272400
.ZG21P           ANOP  ,                                                00272500
                 AIF   (T'&ZCGPR NE 'N').ZG21R  NON NUMERIC             00272600
                 AIF   ('&ZCGPR' LT '2').ZG21Q                          00272700
                 AIF   ('&ZCGPR' LE '12').ZG21R                         00272800
.ZG21Q           ANOP  ,                                                00272900
&ZMS             SETC  '"DDNAME='  *KGPRA* MNOTE                        00273000
&ZMS             SETC  '&ZMS.&DDNAME"'                                  00273100
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00273200
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00273300
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00273400
.ZG21R           ANOP  ,                                                00273500
.*-------------------------------------------------------------------   00273600
.***AG.KMEKY13 NAME, OPT RQD INPUT, ME KEYS -PROCESS DEPENDENCIES       00273700
.ZG22            AIF   ('&XDUMMY1' NE 'DCB').ZG23                       00273800
.*-------------------------------------------------------------------   00273900
.***AG.KCK02 NAME, OPT RQD INPUT, ME KEYS -GPR OUT OF RANGE             00274000
                 AIF   (K'&ZXDCB LE 0).ZG22R    NOT I/O                 00274100
                 AIF   ('&XDCB'(1,1) NE '(').ZG22R                      00274200
&ZCGPR           SETC  '&XDCB'(2,K'&XDCB-2)                             00274300
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG22P                     00274400
                 AIF   (K'&ZCGPR GT 2).ZG22Q                            00274500
                 AIF   ('&ZCGPR' EQ '0').ZG22Q                          00274600
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00274700
                 AIF   (T'&ZCGPR NE 'N').ZG22Q  INVALID REG NAME        00274800
.ZG22P           ANOP  ,                                                00274900
                 AIF   (T'&ZCGPR NE 'N').ZG22R  NON NUMERIC             00275000
                 AIF   ('&ZCGPR' LT '2').ZG22Q                          00275100
                 AIF   ('&ZCGPR' LE '12').ZG22R                         00275200
.ZG22Q           ANOP  ,                                                00275300
&ZMS             SETC  '"DCB='     *KGPRA* MNOTE                        00275400
&ZMS             SETC  '&ZMS.&DCB"'                                     00275500
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00275600
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00275700
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00275800
.ZG22R           ANOP  ,                                                00275900
.*-------------------------------------------------------------------   00276000
.***AG.KMEKY13 NAME, OPT RQD INPUT, ME KEYS -PROCESS DEPENDENCIES       00276100
.ZG23            AIF   ('&XDUMMY1' NE 'DCBPTR').ZG24                    00276200
.*-------------------------------------------------------------------   00276300
.***AG.KCK02 NAME, OPT RQD INPUT, ME KEYS -GPR OUT OF RANGE             00276400
                 AIF   (K'&ZXDCBPTR LE 0).ZG23R  NOT I/O                00276500
                 AIF   ('&XDCBPTR'(1,1) NE '(').ZG23R                   00276600
&ZCGPR           SETC  '&XDCBPTR'(2,K'&XDCBPTR-2)                       00276700
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG23P                     00276800
                 AIF   (K'&ZCGPR GT 2).ZG23Q                            00276900
                 AIF   ('&ZCGPR' EQ '0').ZG23Q                          00277000
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00277100
                 AIF   (T'&ZCGPR NE 'N').ZG23Q  INVALID REG NAME        00277200
.ZG23P           ANOP  ,                                                00277300
                 AIF   (T'&ZCGPR NE 'N').ZG23R  NON NUMERIC             00277400
                 AIF   ('&ZCGPR' LT '2').ZG23Q                          00277500
                 AIF   ('&ZCGPR' LE '12').ZG23R                         00277600
.ZG23Q           ANOP  ,                                                00277700
&ZMS             SETC  '"DCBPTR='  *KGPRA* MNOTE                        00277800
&ZMS             SETC  '&ZMS.&DCBPTR"'                                  00277900
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00278000
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00278100
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00278200
.ZG23R           ANOP  ,                                                00278300
.*-------------------------------------------------------------------   00278400
.***AG.KMEKY15 NAME, OPT RQD INPUT, ME KEYS -END                        00278500
.ZG24            ANOP  ,           END MUTUALLY EXCLUSIVE KEYS          00278600
.*-------------------------------------------------------------------   00278700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00278800
.ZG25            ANOP  ,                                                00278900
&ZTLC            SETC 'YES'                                             00279000
                 AIF   ('&BYADDR(1)' NE '&ZTLC').ZG26                   00279100
&XBYADDR         SETC  'YES'       SET KEYWORD                          00279200
                 AIF   (N'&BYADDR LE 1).ZG25A   CK NUM                  00279300
&ZMS             SETC  '"BYADDR='  *KPOSA* MNOTE                        00279400
&ZMS             SETC  '&ZMS.&BYADDR"'                                  00279500
&ZMS             SETC  '&ZMS "BYADDR"'                                  00279600
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00279700
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00279800
.ZG25A           ANOP  ,                                                00279900
.*------------------------------------------------------------------    00280000
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00280100
&ZCVAL           SETC ''           CLEAR ERROR KEY ACCUMULATOR          00280200
.ZG25A0          AIF   (K'&DSNAME LE 0).ZG25A1  OK                      00280300
&ZCVAL           SETC '&ZCVAL DSNAME'           INCORRECT KEY USED      00280400
.ZG25A1          AIF   (K'&DDNAME LE 0).ZG25A2  OK                      00280500
&ZCVAL           SETC '&ZCVAL DDNAME'           INCORRECT KEY USED      00280600
.ZG25A2          AIF   (K'&DCB LE 0).ZG25A3     OK                      00280700
&ZCVAL           SETC '&ZCVAL DCB'              INCORRECT KEY USED      00280800
.ZG25A3          AIF   (K'&DCBPTR LE 0).ZG25A4  OK                      00280900
&ZCVAL           SETC '&ZCVAL DCBPTR'           INCORRECT KEY USED      00281000
.ZG25A4          AIF   (K'&ZCVAL LE 0).ZG25A5   OK                      00281100
&ZCVAL           SETC '&ZCVAL'(2,K'&ZCVAL-1)                            00281200
&ZMS             SETC  '"BYADDR'   *KMEIA* MNOTE                        00281300
&ZMS             SETC  '&ZMS.=&BYADDR"'                                 00281400
&ZMS             SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'             00281500
                 MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'             00281600
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00281700
.ZG25A5          ANOP  ,                                                00281800
.*------------------------------------------------------------------    00281900
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00282000
.ZG26            ANOP  ,                                                00282100
&ZXBYADDR        SETC  'INPUT'     SET IN/OUTPUT                        00282200
                 AIF   (K'&XBYADDR GT 0).ZG26E  VALID ARG               00282300
                 AIF   (T'&BYADDR EQ 'O').ZG26D  OMITTED                00282400
&ZASYSLNDX       SETA  0                                                00282500
.ZG26A           ANOP  ,           POSITIONAL MACRO KEY                 00282600
&ZASYSLNDX       SETA  &ZASYSLNDX+1                                     00282700
                 AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG26C                 00282800
&ZTLC            SETC 'BYADDR'                                          00282900
                 AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG26A        00283000
.ZG26B           ANOP  ,                                                00283100
&ZXBYADDR        SETC  ''          RESET IN/OUTPUT                      00283200
&ZMS             SETC  'THE "BYADDR" KEY'       *KOPTA* MNOTE           00283300
&ZMS             SETC  '&ZMS MUST CONTAIN ONE'                          00283400
                 MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                 00283500
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00283600
                 AGO   .ZG26E                                           00283700
.ZG26C           ANOP  ,                                                00283800
&ZXBYADDR        SETC  ''          RESET IN/OUTPUT                      00283900
&ZMS             SETC  '"BYADDR='  *KUKWA* MNOTE                        00284000
&ZMS             SETC  '&ZMS.&BYADDR"'                                  00284100
&ZMS             SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '        00284200
&ZMS             SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'              00284300
&ZMS             SETC  '&ZMS "NO"'                                      00284400
&ZMS             SETC  '&ZMS OR "YES".'                                 00284500
                 MNOTE 8,' &ZMS '                                       00284600
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00284700
                 AGO   .ZG26E                                           00284800
.ZG26D           ANOP  ,                                                00284900
&XBYADDR         SETC  'NO'        SET DEFAULT KEYWORD                  00285000
.ZG26E           ANOP  ,                                                00285100
.*-------------------------------------------------------------------   00285200
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00285300
.ZG27            ANOP  ,                                                00285400
&ZTLC            SETC 'MEMBERMASK'                                      00285500
                 AIF   ('&MODINFOTYPE(1)' NE '&ZTLC').ZG49              00285600
&XMODINFOTYPE    SETC  'MEMBERMASK'             SET KEYWORD             00285700
                 AIF   (N'&MODINFOTYPE LE 1).ZG27A  CK NUM              00285800
&ZMS             SETC  '"MODINFOTYPE='          *KPOSA* MNOTE           00285900
&ZMS             SETC  '&ZMS.&MODINFOTYPE"'                             00286000
&ZMS             SETC  '&ZMS "MODINFOTYPE"'                             00286100
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00286200
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00286300
.ZG27A           ANOP  ,                                                00286400
.*------------------------------------------------------------------    00286500
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00286600
&ZCVAL           SETC ''           CLEAR ERROR KEY ACCUMULATOR          00286700
.ZG27A0          AIF   (K'&MODINFOX LE 0).ZG27A1  OK                    00286800
&ZCVAL           SETC '&ZCVAL MODINFOX'         INCORRECT KEY USED      00286900
.ZG27A1          AIF   (K'&NUMMOD LE 0).ZG27A2  OK                      00287000
&ZCVAL           SETC '&ZCVAL NUMMOD'           INCORRECT KEY USED      00287100
.ZG27A2          AIF   (K'&BYADDR LE 0).ZG27A3  OK                      00287200
&ZCVAL           SETC '&ZCVAL BYADDR'           INCORRECT KEY USED      00287300
.ZG27A3          AIF   (K'&DSNAME LE 0).ZG27A4  OK                      00287400
&ZCVAL           SETC '&ZCVAL DSNAME'           INCORRECT KEY USED      00287500
.ZG27A4          AIF   (K'&DDNAME LE 0).ZG27A5  OK                      00287600
&ZCVAL           SETC '&ZCVAL DDNAME'           INCORRECT KEY USED      00287700
.ZG27A5          AIF   (K'&DCB LE 0).ZG27A6     OK                      00287800
&ZCVAL           SETC '&ZCVAL DCB'              INCORRECT KEY USED      00287900
.ZG27A6          AIF   (K'&DCBPTR LE 0).ZG27A7  OK                      00288000
&ZCVAL           SETC '&ZCVAL DCBPTR'           INCORRECT KEY USED      00288100
.ZG27A7          AIF   (K'&ZCVAL LE 0).ZG27A8   OK                      00288200
&ZCVAL           SETC '&ZCVAL'(2,K'&ZCVAL-1)                            00288300
&ZMS             SETC  '"MODINFOTYPE'           *KMEIA* MNOTE           00288400
&ZMS             SETC  '&ZMS.=&MODINFOTYPE"'                            00288500
&ZMS             SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'             00288600
                 MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'             00288700
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00288800
.ZG27A8          ANOP  ,                                                00288900
.*----------------------------------------------------------------***   00289000
.***AG.KXVAR05 NAME, RQD INOUT, KEYS -XVARIABLE KEY                     00289100
                 AIF   (N'&MODINFO LE 1).ZG29A  CK NUM                  00289200
&ZMS             SETC  '"MODINFO='              *KPOSA* MNOTE           00289300
&ZMS             SETC  '&ZMS.&MODINFO"'                                 00289400
&ZMS             SETC  '&ZMS "MODINFO"'                                 00289500
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00289600
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00289700
.ZG29A           ANOP  ,                                                00289800
.*-------------------------------------------------------------------   00289900
.***AG.KXVAR06 NAME, RQD INOUT, KEYS -XVARIABLE                         00290000
&ZXMODINFO       SETC  'INOUT'     SET IN/OUTPUT                        00290100
&XMODINFO        SETC  '&MODINFO(1)'            SET XVARIABLE           00290200
                 AIF   (N'&MODINFO GT 1).ZG29B  MULTI PARMS             00290300
&XMODINFO        SETC  '&MODINFO'  SET XVARIABLE                        00290400
.ZG29B           AIF   (K'&MODINFO(1) GT 0).ZG29C                       00290500
&ZXMODINFO       SETC  ''          RESET IN/OUTPUT                      00290600
&ZMS             SETC  ' '         *KRQDA*                              00290700
&ZMS             SETC  '&ZMS "MODINFO" KEY AND ITS'                     00290800
                 MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                 00290900
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00291000
.ZG29C           ANOP  ,                                                00291100
.*-------------------------------------------------------------------   00291200
.***AG.KCK02 NAME, RQD INOUT, KEYS -GPR OUT OF RANGE                    00291300
                 AIF   (K'&ZXMODINFO LE 0).ZG29R  NOT I/O               00291400
                 AIF   ('&XMODINFO'(1,1) NE '(').ZG29R                  00291500
&ZCGPR           SETC  '&XMODINFO'(2,K'&XMODINFO-2)                     00291600
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG29P                     00291700
                 AIF   (K'&ZCGPR GT 2).ZG29Q                            00291800
                 AIF   ('&ZCGPR' EQ '0').ZG29Q                          00291900
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00292000
                 AIF   (T'&ZCGPR NE 'N').ZG29Q  INVALID REG NAME        00292100
.ZG29P           ANOP  ,                                                00292200
                 AIF   (T'&ZCGPR NE 'N').ZG29R  NON NUMERIC             00292300
                 AIF   ('&ZCGPR' LT '2').ZG29Q                          00292400
                 AIF   ('&ZCGPR' LE '12').ZG29R                         00292500
.ZG29Q           ANOP  ,                                                00292600
&ZMS             SETC  '"MODINFO='              *KGPRA* MNOTE           00292700
&ZMS             SETC  '&ZMS.&MODINFO"'                                 00292800
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00292900
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00293000
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00293100
.ZG29R           ANOP  ,                                                00293200
.*----------------------------------------------------------------***   00293300
.***AG.KMEKY01 NAME, RQD INPUT, ME KEYS -XVARIABLE                      00293400
&XDUMMY1         SETC  ''          INITIALIZE XVARIABLE                 00293500
                 AIF   (K'&MASKDSNAME LE 0).ZG32C                       00293600
&ZXDUMMY1        SETC  'INPUT'     SET IN/OUTPUT                        00293700
&XDUMMY1         SETC  'MASKDSNAME'             SET XVARIABLE           00293800
&ZXMASKDSNAME    SETC  'INPUT'     SET IN/OUTPUT                        00293900
&XMASKDSNAME     SETC  '&MASKDSNAME(1)'         SET XVARIABLE PARM      00294000
                 AIF   (N'&MASKDSNAME GT 1).ZG32A                       00294100
&XMASKDSNAME     SETC  '&MASKDSNAME'            SET XVARIABLE PARM      00294200
.ZG32A           AIF   (N'&MASKDSNAME LE 1).ZG32B  CK NUM               00294300
&ZMS             SETC  '"MASKDSNAME='           *KPOSA* MNOTE           00294400
&ZMS             SETC  '&ZMS.&MASKDSNAME"'                              00294500
&ZMS             SETC  '&ZMS "MASKDSNAME"'                              00294600
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00294700
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00294800
.ZG32B           AIF   (K'&XMASKDSNAME GT 0).ZG32C  ONE PARM            00294900
&ZXDUMMY1        SETC  ''          RESET IN/OUTPUT                      00295000
&ZXMASKDSNAME    SETC  ''          RESET IN/OUTPUT                      00295100
&ZMS             SETC  ' '         *KRQDA*                              00295200
&ZMS             SETC  '&ZMS "MASKDSNAME" KEY AND ITS'                  00295300
                 MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                 00295400
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00295500
.ZG32C           ANOP  ,                                                00295600
.*----------------------------------------------------------------***   00295700
.***AG.KMEKY02 NAME, RQD INPUT, ME KEYS -XVARIABLE                      00295800
                 AIF   (K'&MASKDDNAME LE 0).ZG33D  NO ME KEY            00295900
                 AIF   (N'&MASKDDNAME LE 1).ZG33A  CK NUM               00296000
&ZMS             SETC  '"MASKDDNAME='           *KPOSA* MNOTE           00296100
&ZMS             SETC  '&ZMS.&MASKDDNAME"'                              00296200
&ZMS             SETC  '&ZMS "MASKDDNAME"'                              00296300
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00296400
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00296500
.ZG33A           AIF   (K'&XDUMMY1 LE 0).ZG33B                          00296600
&ZMS             SETC  '"MASKDDNAME'            *KMEKA* MNOTE           00296700
&ZMS             SETC  '&ZMS.=&MASKDDNAME"'                             00296800
&ZMS             SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'            00296900
&ZMS             SETC  '&ZMS "&XDUMMY1"'                                00297000
                 MNOTE 8,' &ZMS KEY.'                                   00297100
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00297200
                 AGO   .ZG33D                                           00297300
.*                                                                      00297400
.ZG33B           ANOP  ,                                                00297500
&ZXDUMMY1        SETC  'INPUT'     SET IN/OUTPUT                        00297600
&XDUMMY1         SETC  'MASKDDNAME'             SET XVARIABLE           00297700
&ZXMASKDDNAME    SETC  'INPUT'     SET IN/OUTPUT                        00297800
&XMASKDDNAME     SETC  '&MASKDDNAME(1)'         SET XVARIABLE PARM      00297900
                 AIF   (N'&MASKDDNAME GT 1).ZG33C                       00298000
&XMASKDDNAME     SETC  '&MASKDDNAME'            SET XVARIABLE PARM      00298100
.ZG33C           AIF   (K'&XMASKDDNAME GT 0).ZG33D  ONE PARM            00298200
&ZXDUMMY1        SETC  ''          RESET IN/OUTPUT                      00298300
&ZXMASKDDNAME    SETC  ''          RESET IN/OUTPUT                      00298400
&ZMS             SETC  ' '         *KRQDA*                              00298500
&ZMS             SETC  '&ZMS "MASKDDNAME" KEY AND ITS'                  00298600
                 MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                 00298700
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00298800
.ZG33D           ANOP  ,                                                00298900
.*----------------------------------------------------------------***   00299000
.***AG.KMEKY02 NAME, RQD INPUT, ME KEYS -XVARIABLE                      00299100
                 AIF   (K'&MASKDCB LE 0).ZG34D  NO ME KEY               00299200
                 AIF   (N'&MASKDCB LE 1).ZG34A  CK NUM                  00299300
&ZMS             SETC  '"MASKDCB='              *KPOSA* MNOTE           00299400
&ZMS             SETC  '&ZMS.&MASKDCB"'                                 00299500
&ZMS             SETC  '&ZMS "MASKDCB"'                                 00299600
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00299700
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00299800
.ZG34A           AIF   (K'&XDUMMY1 LE 0).ZG34B                          00299900
&ZMS             SETC  '"MASKDCB'  *KMEKA* MNOTE                        00300000
&ZMS             SETC  '&ZMS.=&MASKDCB"'                                00300100
&ZMS             SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'            00300200
&ZMS             SETC  '&ZMS "&XDUMMY1"'                                00300300
                 MNOTE 8,' &ZMS KEY.'                                   00300400
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00300500
                 AGO   .ZG34D                                           00300600
.*                                                                      00300700
.ZG34B           ANOP  ,                                                00300800
&ZXDUMMY1        SETC  'INPUT'     SET IN/OUTPUT                        00300900
&XDUMMY1         SETC  'MASKDCB'   SET XVARIABLE                        00301000
&ZXMASKDCB       SETC  'INPUT'     SET IN/OUTPUT                        00301100
&XMASKDCB        SETC  '&MASKDCB(1)'            SET XVARIABLE PARM      00301200
                 AIF   (N'&MASKDCB GT 1).ZG34C                          00301300
&XMASKDCB        SETC  '&MASKDCB'  SET XVARIABLE PARM                   00301400
.ZG34C           AIF   (K'&XMASKDCB GT 0).ZG34D  ONE PARM               00301500
&ZXDUMMY1        SETC  ''          RESET IN/OUTPUT                      00301600
&ZXMASKDCB       SETC  ''          RESET IN/OUTPUT                      00301700
&ZMS             SETC  ' '         *KRQDA*                              00301800
&ZMS             SETC  '&ZMS "MASKDCB" KEY AND ITS'                     00301900
                 MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                 00302000
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00302100
.ZG34D           ANOP  ,                                                00302200
.*----------------------------------------------------------------***   00302300
.***AG.KMEKY02 NAME, RQD INPUT, ME KEYS -XVARIABLE                      00302400
                 AIF   (K'&MASKDCBPTR LE 0).ZG35D  NO ME KEY            00302500
                 AIF   (N'&MASKDCBPTR LE 1).ZG35A  CK NUM               00302600
&ZMS             SETC  '"MASKDCBPTR='           *KPOSA* MNOTE           00302700
&ZMS             SETC  '&ZMS.&MASKDCBPTR"'                              00302800
&ZMS             SETC  '&ZMS "MASKDCBPTR"'                              00302900
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00303000
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00303100
.ZG35A           AIF   (K'&XDUMMY1 LE 0).ZG35B                          00303200
&ZMS             SETC  '"MASKDCBPTR'            *KMEKA* MNOTE           00303300
&ZMS             SETC  '&ZMS.=&MASKDCBPTR"'                             00303400
&ZMS             SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'            00303500
&ZMS             SETC  '&ZMS "&XDUMMY1"'                                00303600
                 MNOTE 8,' &ZMS KEY.'                                   00303700
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00303800
                 AGO   .ZG35D                                           00303900
.*                                                                      00304000
.ZG35B           ANOP  ,                                                00304100
&ZXDUMMY1        SETC  'INPUT'     SET IN/OUTPUT                        00304200
&XDUMMY1         SETC  'MASKDCBPTR'             SET XVARIABLE           00304300
&ZXMASKDCBPTR    SETC  'INPUT'     SET IN/OUTPUT                        00304400
&XMASKDCBPTR     SETC  '&MASKDCBPTR(1)'         SET XVARIABLE PARM      00304500
                 AIF   (N'&MASKDCBPTR GT 1).ZG35C                       00304600
&XMASKDCBPTR     SETC  '&MASKDCBPTR'            SET XVARIABLE PARM      00304700
.ZG35C           AIF   (K'&XMASKDCBPTR GT 0).ZG35D  ONE PARM            00304800
&ZXDUMMY1        SETC  ''          RESET IN/OUTPUT                      00304900
&ZXMASKDCBPTR    SETC  ''          RESET IN/OUTPUT                      00305000
&ZMS             SETC  ' '         *KRQDA*                              00305100
&ZMS             SETC  '&ZMS "MASKDCBPTR" KEY AND ITS'                  00305200
                 MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                 00305300
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00305400
.ZG35D           ANOP  ,                                                00305500
.*------------------------------------------------------------------    00305600
.***AG.KME4Y09 NAME, RQD INPUT, ME KEYS -CHECK IF KEY ENTERED           00305700
                 AIF   (K'&XDUMMY1 GT 0).ZG36B                          00305800
&ZXDUMMY1        SETC  ''          RESET IN/OUTPUT                      00305900
&ZXMASKDSNAME    SETC  ''          RESET IN/OUTPUT                      00306000
&XDUMMY1         SETC  ''          ENSURE NULL                          00306100
&XMASKDSNAME     SETC  ''          ENSURE NULL                          00306200
&ZMS             SETC  'ONE OF THE FOLLOWING'   *KMERA* MNOTE           00306300
&ZMS             SETC  '&ZMS MUTUALLY EXCLUSIVE KEY(S) IS'              00306400
&ZMS             SETC  '&ZMS REQUIRED:'                                 00306500
&ZMS             SETC  '&ZMS "MASKDSNAME",'     VALID ME KEY            00306600
&ZMS             SETC  '&ZMS "MASKDDNAME",'     VALID ME KEY            00306700
&ZMS             SETC  '&ZMS "MASKDCB",'        VALID ME KEY            00306800
&ZMS             SETC  '&ZMS OR "MASKDCBPTR".'  VALID ME KEY            00306900
                 MNOTE 8,' &ZMS '                                       00307000
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00307100
.ZG36B           ANOP  ,                                                00307200
.*-------------------------------------------------------------------   00307300
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           00307400
.ZG32            AIF   ('&XDUMMY1' NE 'MASKDSNAME').ZG33                00307500
.*-------------------------------------------------------------------   00307600
.***AG.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 00307700
                 AIF   (K'&ZXMASKDSNAME LE 0).ZG32R  NOT I/O            00307800
                 AIF   ('&XMASKDSNAME'(1,1) NE '(').ZG32R               00307900
&ZCGPR           SETC  '&XMASKDSNAME'(2,K'&XMASKDSNAME-2)               00308000
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG32P                     00308100
                 AIF   (K'&ZCGPR GT 2).ZG32Q                            00308200
                 AIF   ('&ZCGPR' EQ '0').ZG32Q                          00308300
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00308400
                 AIF   (T'&ZCGPR NE 'N').ZG32Q  INVALID REG NAME        00308500
.ZG32P           ANOP  ,                                                00308600
                 AIF   (T'&ZCGPR NE 'N').ZG32R  NON NUMERIC             00308700
                 AIF   ('&ZCGPR' LT '2').ZG32Q                          00308800
                 AIF   ('&ZCGPR' LE '12').ZG32R                         00308900
.ZG32Q           ANOP  ,                                                00309000
&ZMS             SETC  '"MASKDSNAME='           *KGPRA* MNOTE           00309100
&ZMS             SETC  '&ZMS.&MASKDSNAME"'                              00309200
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00309300
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00309400
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00309500
.ZG32R           ANOP  ,                                                00309600
.*-------------------------------------------------------------------   00309700
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           00309800
.ZG33            AIF   ('&XDUMMY1' NE 'MASKDDNAME').ZG34                00309900
.*-------------------------------------------------------------------   00310000
.***AG.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 00310100
                 AIF   (K'&ZXMASKDDNAME LE 0).ZG33R  NOT I/O            00310200
                 AIF   ('&XMASKDDNAME'(1,1) NE '(').ZG33R               00310300
&ZCGPR           SETC  '&XMASKDDNAME'(2,K'&XMASKDDNAME-2)               00310400
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG33P                     00310500
                 AIF   (K'&ZCGPR GT 2).ZG33Q                            00310600
                 AIF   ('&ZCGPR' EQ '0').ZG33Q                          00310700
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00310800
                 AIF   (T'&ZCGPR NE 'N').ZG33Q  INVALID REG NAME        00310900
.ZG33P           ANOP  ,                                                00311000
                 AIF   (T'&ZCGPR NE 'N').ZG33R  NON NUMERIC             00311100
                 AIF   ('&ZCGPR' LT '2').ZG33Q                          00311200
                 AIF   ('&ZCGPR' LE '12').ZG33R                         00311300
.ZG33Q           ANOP  ,                                                00311400
&ZMS             SETC  '"MASKDDNAME='           *KGPRA* MNOTE           00311500
&ZMS             SETC  '&ZMS.&MASKDDNAME"'                              00311600
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00311700
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00311800
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00311900
.ZG33R           ANOP  ,                                                00312000
.*-------------------------------------------------------------------   00312100
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           00312200
.ZG34            AIF   ('&XDUMMY1' NE 'MASKDCB').ZG35                   00312300
.*-------------------------------------------------------------------   00312400
.***AG.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 00312500
                 AIF   (K'&ZXMASKDCB LE 0).ZG34R  NOT I/O               00312600
                 AIF   ('&XMASKDCB'(1,1) NE '(').ZG34R                  00312700
&ZCGPR           SETC  '&XMASKDCB'(2,K'&XMASKDCB-2)                     00312800
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG34P                     00312900
                 AIF   (K'&ZCGPR GT 2).ZG34Q                            00313000
                 AIF   ('&ZCGPR' EQ '0').ZG34Q                          00313100
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00313200
                 AIF   (T'&ZCGPR NE 'N').ZG34Q  INVALID REG NAME        00313300
.ZG34P           ANOP  ,                                                00313400
                 AIF   (T'&ZCGPR NE 'N').ZG34R  NON NUMERIC             00313500
                 AIF   ('&ZCGPR' LT '2').ZG34Q                          00313600
                 AIF   ('&ZCGPR' LE '12').ZG34R                         00313700
.ZG34Q           ANOP  ,                                                00313800
&ZMS             SETC  '"MASKDCB='              *KGPRA* MNOTE           00313900
&ZMS             SETC  '&ZMS.&MASKDCB"'                                 00314000
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00314100
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00314200
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00314300
.ZG34R           ANOP  ,                                                00314400
.*-------------------------------------------------------------------   00314500
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           00314600
.ZG35            AIF   ('&XDUMMY1' NE 'MASKDCBPTR').ZG36                00314700
.*-------------------------------------------------------------------   00314800
.***AG.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 00314900
                 AIF   (K'&ZXMASKDCBPTR LE 0).ZG35R  NOT I/O            00315000
                 AIF   ('&XMASKDCBPTR'(1,1) NE '(').ZG35R               00315100
&ZCGPR           SETC  '&XMASKDCBPTR'(2,K'&XMASKDCBPTR-2)               00315200
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG35P                     00315300
                 AIF   (K'&ZCGPR GT 2).ZG35Q                            00315400
                 AIF   ('&ZCGPR' EQ '0').ZG35Q                          00315500
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00315600
                 AIF   (T'&ZCGPR NE 'N').ZG35Q  INVALID REG NAME        00315700
.ZG35P           ANOP  ,                                                00315800
                 AIF   (T'&ZCGPR NE 'N').ZG35R  NON NUMERIC             00315900
                 AIF   ('&ZCGPR' LT '2').ZG35Q                          00316000
                 AIF   ('&ZCGPR' LE '12').ZG35R                         00316100
.ZG35Q           ANOP  ,                                                00316200
&ZMS             SETC  '"MASKDCBPTR='           *KGPRA* MNOTE           00316300
&ZMS             SETC  '&ZMS.&MASKDCBPTR"'                              00316400
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00316500
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00316600
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00316700
.ZG35R           ANOP  ,                                                00316800
.*-------------------------------------------------------------------   00316900
.***AG.KMEKY15 NAME, RQD INPUT, ME KEYS -END                            00317000
.ZG36            ANOP  ,           END MUTUALLY EXCLUSIVE KEYS          00317100
.*-------------------------------------------------------------------   00317200
.***AG.KMOUT01 BYPASS CHECK ON OUTPUT KEY PROCESSING -START             00317300
                 AIF   ('&XMF' EQ 'M').ZG39     BYPASS IF MF=M          00317400
.*----------------------------------------------------------------***   00317500
.***AG.KXVAR05 NAME, RQD OUTPUT, KEYS -XVARIABLE KEY                    00317600
                 AIF   (N'&OUTAREAPTR LE 1).ZG38A  CK NUM               00317700
&ZMS             SETC  '"OUTAREAPTR='           *KPOSA* MNOTE           00317800
&ZMS             SETC  '&ZMS.&OUTAREAPTR"'                              00317900
&ZMS             SETC  '&ZMS "OUTAREAPTR"'                              00318000
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00318100
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00318200
.ZG38A           ANOP  ,                                                00318300
.*-------------------------------------------------------------------   00318400
.***AG.KXVAR06 NAME, RQD OUTPUT, KEYS -XVARIABLE                        00318500
&ZXOUTAREAPTR    SETC  'OUTPUT'    SET IN/OUTPUT                        00318600
&XOUTAREAPTR     SETC  '&OUTAREAPTR(1)'         SET XVARIABLE           00318700
                 AIF   (N'&OUTAREAPTR GT 1).ZG38B  MULTI PARMS          00318800
&XOUTAREAPTR     SETC  '&OUTAREAPTR'            SET XVARIABLE           00318900
.ZG38B           AIF   (K'&OUTAREAPTR(1) GT 0).ZG38C                    00319000
&ZXOUTAREAPTR    SETC  ''          RESET IN/OUTPUT                      00319100
&ZMS             SETC  ' '         *KRQDA*                              00319200
&ZMS             SETC  '&ZMS "OUTAREAPTR" KEY AND ITS'                  00319300
                 MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                 00319400
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00319500
.ZG38C           ANOP  ,                                                00319600
.*-------------------------------------------------------------------   00319700
.***AG.KCK02 NAME, RQD OUTPUT, KEYS -GPR OUT OF RANGE                   00319800
                 AIF   (K'&ZXOUTAREAPTR LE 0).ZG38R  NOT I/O            00319900
                 AIF   ('&XOUTAREAPTR'(1,1) NE '(').ZG38R               00320000
&ZCGPR           SETC  '&XOUTAREAPTR'(2,K'&XOUTAREAPTR-2)               00320100
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG38P                     00320200
                 AIF   (K'&ZCGPR GT 2).ZG38Q                            00320300
                 AIF   ('&ZCGPR' EQ '0').ZG38Q                          00320400
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00320500
                 AIF   (T'&ZCGPR NE 'N').ZG38Q  INVALID REG NAME        00320600
.ZG38P           ANOP  ,                                                00320700
                 AIF   (T'&ZCGPR NE 'N').ZG38R  NON NUMERIC             00320800
                 AIF   ('&ZCGPR' LT '2').ZG38Q                          00320900
                 AIF   ('&ZCGPR' LE '12').ZG38R                         00321000
.ZG38Q           ANOP  ,                                                00321100
&ZMS             SETC  '"OUTAREAPTR='           *KGPRA* MNOTE           00321200
&ZMS             SETC  '&ZMS.&OUTAREAPTR"'                              00321300
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00321400
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00321500
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00321600
.ZG38R           ANOP  ,                                                00321700
.*-------------------------------------------------------------------   00321800
.***AG.KMOUT02 BYPASS CHECK ON OUTPUT KEY PROCESSING -END               00321900
.ZG39            ANOP  ,           END OF BYPASS CHECK                  00322000
.*-------------------------------------------------------------------   00322100
.***AG.KMOUT01 BYPASS CHECK ON OUTPUT KEY PROCESSING -START             00322200
                 AIF   ('&XMF' EQ 'M').ZG42     BYPASS IF MF=M          00322300
.*----------------------------------------------------------------***   00322400
.***AG.KXVAR05 NAME, RQD OUTPUT, KEYS -XVARIABLE KEY                    00322500
                 AIF   (N'&OUTAREALEN LE 1).ZG41A  CK NUM               00322600
&ZMS             SETC  '"OUTAREALEN='           *KPOSA* MNOTE           00322700
&ZMS             SETC  '&ZMS.&OUTAREALEN"'                              00322800
&ZMS             SETC  '&ZMS "OUTAREALEN"'                              00322900
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00323000
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00323100
.ZG41A           ANOP  ,                                                00323200
.*-------------------------------------------------------------------   00323300
.***AG.KXVAR06 NAME, RQD OUTPUT, KEYS -XVARIABLE                        00323400
&ZXOUTAREALEN    SETC  'OUTPUT'    SET IN/OUTPUT                        00323500
&XOUTAREALEN     SETC  '&OUTAREALEN(1)'         SET XVARIABLE           00323600
                 AIF   (N'&OUTAREALEN GT 1).ZG41B  MULTI PARMS          00323700
&XOUTAREALEN     SETC  '&OUTAREALEN'            SET XVARIABLE           00323800
.ZG41B           AIF   (K'&OUTAREALEN(1) GT 0).ZG41C                    00323900
&ZXOUTAREALEN    SETC  ''          RESET IN/OUTPUT                      00324000
&ZMS             SETC  ' '         *KRQDA*                              00324100
&ZMS             SETC  '&ZMS "OUTAREALEN" KEY AND ITS'                  00324200
                 MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                 00324300
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00324400
.ZG41C           ANOP  ,                                                00324500
.*-------------------------------------------------------------------   00324600
.***AG.KCK02 NAME, RQD OUTPUT, KEYS -GPR OUT OF RANGE                   00324700
                 AIF   (K'&ZXOUTAREALEN LE 0).ZG41R  NOT I/O            00324800
                 AIF   ('&XOUTAREALEN'(1,1) NE '(').ZG41R               00324900
&ZCGPR           SETC  '&XOUTAREALEN'(2,K'&XOUTAREALEN-2)               00325000
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG41P                     00325100
                 AIF   (K'&ZCGPR GT 2).ZG41Q                            00325200
                 AIF   ('&ZCGPR' EQ '0').ZG41Q                          00325300
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00325400
                 AIF   (T'&ZCGPR NE 'N').ZG41Q  INVALID REG NAME        00325500
.ZG41P           ANOP  ,                                                00325600
                 AIF   (T'&ZCGPR NE 'N').ZG41R  NON NUMERIC             00325700
                 AIF   ('&ZCGPR' LT '2').ZG41Q                          00325800
                 AIF   ('&ZCGPR' LE '12').ZG41R                         00325900
.ZG41Q           ANOP  ,                                                00326000
&ZMS             SETC  '"OUTAREALEN='           *KGPRA* MNOTE           00326100
&ZMS             SETC  '&ZMS.&OUTAREALEN"'                              00326200
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00326300
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00326400
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00326500
.ZG41R           ANOP  ,                                                00326600
.*-------------------------------------------------------------------   00326700
.***AG.KMOUT02 BYPASS CHECK ON OUTPUT KEY PROCESSING -END               00326800
.ZG42            ANOP  ,           END OF BYPASS CHECK                  00326900
.*-------------------------------------------------------------------   00327000
.***AG.KMOUT01 BYPASS CHECK ON OUTPUT KEY PROCESSING -START             00327100
                 AIF   ('&XMF' EQ 'M').ZG45     BYPASS IF MF=M          00327200
.*----------------------------------------------------------------***   00327300
.***AG.KXVAR05 NAME, RQD OUTPUT, KEYS -XVARIABLE KEY                    00327400
                 AIF   (N'&OUTAREANUM LE 1).ZG44A  CK NUM               00327500
&ZMS             SETC  '"OUTAREANUM='           *KPOSA* MNOTE           00327600
&ZMS             SETC  '&ZMS.&OUTAREANUM"'                              00327700
&ZMS             SETC  '&ZMS "OUTAREANUM"'                              00327800
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00327900
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00328000
.ZG44A           ANOP  ,                                                00328100
.*-------------------------------------------------------------------   00328200
.***AG.KXVAR06 NAME, RQD OUTPUT, KEYS -XVARIABLE                        00328300
&ZXOUTAREANUM    SETC  'OUTPUT'    SET IN/OUTPUT                        00328400
&XOUTAREANUM     SETC  '&OUTAREANUM(1)'         SET XVARIABLE           00328500
                 AIF   (N'&OUTAREANUM GT 1).ZG44B  MULTI PARMS          00328600
&XOUTAREANUM     SETC  '&OUTAREANUM'            SET XVARIABLE           00328700
.ZG44B           AIF   (K'&OUTAREANUM(1) GT 0).ZG44C                    00328800
&ZXOUTAREANUM    SETC  ''          RESET IN/OUTPUT                      00328900
&ZMS             SETC  ' '         *KRQDA*                              00329000
&ZMS             SETC  '&ZMS "OUTAREANUM" KEY AND ITS'                  00329100
                 MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                 00329200
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00329300
.ZG44C           ANOP  ,                                                00329400
.*-------------------------------------------------------------------   00329500
.***AG.KCK02 NAME, RQD OUTPUT, KEYS -GPR OUT OF RANGE                   00329600
                 AIF   (K'&ZXOUTAREANUM LE 0).ZG44R  NOT I/O            00329700
                 AIF   ('&XOUTAREANUM'(1,1) NE '(').ZG44R               00329800
&ZCGPR           SETC  '&XOUTAREANUM'(2,K'&XOUTAREANUM-2)               00329900
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG44P                     00330000
                 AIF   (K'&ZCGPR GT 2).ZG44Q                            00330100
                 AIF   ('&ZCGPR' EQ '0').ZG44Q                          00330200
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00330300
                 AIF   (T'&ZCGPR NE 'N').ZG44Q  INVALID REG NAME        00330400
.ZG44P           ANOP  ,                                                00330500
                 AIF   (T'&ZCGPR NE 'N').ZG44R  NON NUMERIC             00330600
                 AIF   ('&ZCGPR' LT '2').ZG44Q                          00330700
                 AIF   ('&ZCGPR' LE '12').ZG44R                         00330800
.ZG44Q           ANOP  ,                                                00330900
&ZMS             SETC  '"OUTAREANUM='           *KGPRA* MNOTE           00331000
&ZMS             SETC  '&ZMS.&OUTAREANUM"'                              00331100
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00331200
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00331300
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00331400
.ZG44R           ANOP  ,                                                00331500
.*-------------------------------------------------------------------   00331600
.***AG.KMOUT02 BYPASS CHECK ON OUTPUT KEY PROCESSING -END               00331700
.ZG45            ANOP  ,           END OF BYPASS CHECK                  00331800
.*----------------------------------------------------------------***   00331900
.***AG.KXVAR05 NAME, RQD INOUT, KEYS -XVARIABLE KEY                     00332000
                 AIF   (N'&OUTAREASP LE 1).ZG47A  CK NUM                00332100
&ZMS             SETC  '"OUTAREASP='            *KPOSA* MNOTE           00332200
&ZMS             SETC  '&ZMS.&OUTAREASP"'                               00332300
&ZMS             SETC  '&ZMS "OUTAREASP"'                               00332400
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00332500
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00332600
.ZG47A           ANOP  ,                                                00332700
.*-------------------------------------------------------------------   00332800
.***AG.KXVAR06 NAME, RQD INOUT, KEYS -XVARIABLE                         00332900
&ZXOUTAREASP     SETC  'INOUT'     SET IN/OUTPUT                        00333000
&XOUTAREASP      SETC  '&OUTAREASP(1)'          SET XVARIABLE           00333100
                 AIF   (N'&OUTAREASP GT 1).ZG47B  MULTI PARMS           00333200
&XOUTAREASP      SETC  '&OUTAREASP'             SET XVARIABLE           00333300
.ZG47B           AIF   (K'&OUTAREASP(1) GT 0).ZG47C                     00333400
&ZXOUTAREASP     SETC  ''          RESET IN/OUTPUT                      00333500
&ZMS             SETC  ' '         *KRQDA*                              00333600
&ZMS             SETC  '&ZMS "OUTAREASP" KEY AND ITS'                   00333700
                 MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                 00333800
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00333900
.ZG47C           ANOP  ,                                                00334000
.*-------------------------------------------------------------------   00334100
.***AG.KCK02 NAME, RQD INOUT, KEYS -GPR OUT OF RANGE                    00334200
                 AIF   (K'&ZXOUTAREASP LE 0).ZG47R  NOT I/O             00334300
                 AIF   ('&XOUTAREASP'(1,1) NE '(').ZG47R                00334400
&ZCGPR           SETC  '&XOUTAREASP'(2,K'&XOUTAREASP-2)                 00334500
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG47P                     00334600
                 AIF   (K'&ZCGPR GT 2).ZG47Q                            00334700
                 AIF   ('&ZCGPR' EQ '0').ZG47Q                          00334800
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00334900
                 AIF   (T'&ZCGPR NE 'N').ZG47Q  INVALID REG NAME        00335000
.ZG47P           ANOP  ,                                                00335100
                 AIF   (T'&ZCGPR NE 'N').ZG47R  NON NUMERIC             00335200
                 AIF   ('&ZCGPR' LT '2').ZG47Q                          00335300
                 AIF   ('&ZCGPR' LE '12').ZG47R                         00335400
.ZG47Q           ANOP  ,                                                00335500
&ZMS             SETC  '"OUTAREASP='            *KGPRA* MNOTE           00335600
&ZMS             SETC  '&ZMS.&OUTAREASP"'                               00335700
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00335800
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00335900
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00336000
.ZG47R           ANOP  ,                                                00336100
.*------------------------------------------------------------------    00336200
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00336300
.ZG49            ANOP  ,                                                00336400
&ZXMODINFOTYPE   SETC  'INPUT'     SET IN/OUTPUT                        00336500
                 AIF   (K'&XMODINFOTYPE GT 0).ZG49E  VALID ARG          00336600
                 AIF   (T'&MODINFOTYPE EQ 'O').ZG49D  OMITTED           00336700
&ZASYSLNDX       SETA  0                                                00336800
.ZG49A           ANOP  ,           POSITIONAL MACRO KEY                 00336900
&ZASYSLNDX       SETA  &ZASYSLNDX+1                                     00337000
                 AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG49C                 00337100
&ZTLC            SETC 'MODINFOTYPE'                                     00337200
                 AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG49A        00337300
.ZG49B           ANOP  ,                                                00337400
&ZXMODINFOTYPE   SETC  ''          RESET IN/OUTPUT                      00337500
&ZMS             SETC  'THE "MODINFOTYPE" KEY'  *KOPTA* MNOTE           00337600
&ZMS             SETC  '&ZMS MUST CONTAIN ONE'                          00337700
                 MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                 00337800
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00337900
                 AGO   .ZG49E                                           00338000
.ZG49C           ANOP  ,                                                00338100
&ZXMODINFOTYPE   SETC  ''          RESET IN/OUTPUT                      00338200
&ZMS             SETC  '"MODINFOTYPE='          *KUKWA* MNOTE           00338300
&ZMS             SETC  '&ZMS.&MODINFOTYPE"'                             00338400
&ZMS             SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '        00338500
&ZMS             SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'              00338600
&ZMS             SETC  '&ZMS "MEMBERLIST"'                              00338700
&ZMS             SETC  '&ZMS OR "MEMBERMASK".'                          00338800
                 MNOTE 8,' &ZMS '                                       00338900
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00339000
                 AGO   .ZG49E                                           00339100
.ZG49D           ANOP  ,                                                00339200
&XMODINFOTYPE    SETC  'MEMBERLIST'             SET DEFAULT KEYWORD     00339300
.ZG49E           ANOP  ,                                                00339400
.*------------------------------------------------------------------    00339500
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00339600
                 AIF   (K'&MODINFOTYPE(1) GT 0).ZG49F  PARM             00339700
&XMODINFOTYPE    SETC  ''          ENSURE NULL KEYWORD                  00339800
&ZXMODINFOTYPE   SETC  ''          RESET IN/OUTPUT                      00339900
&ZMS             SETC  'THE'                                            00340000
&ZMS             SETC  '&ZMS "MODINFOTYPE" KEY AND ITS'                 00340100
&ZMS             SETC  '&ZMS ARGUMENT ARE REQUIRED.'                    00340200
&ZMS             SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'              00340300
&ZMS             SETC  '&ZMS "MEMBERLIST"'                              00340400
&ZMS             SETC  '&ZMS OR "MEMBERMASK".'                          00340500
                 MNOTE 8,' &ZMS '                                       00340600
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00340700
.ZG49F           ANOP  ,                                                00340800
.*------------------------------------------------------------------    00340900
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00341000
&XAPFREQUIRED    SETC  ''          INITIALIZE XVARIABLE                 00341100
.*-------------------------------------------------------------------   00341200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00341300
.ZG52            ANOP  ,                                                00341400
                 AIF   (K'&APFREQUIRED(1) LE 0).ZG52A                   00341500
&ZTLC            SETC 'YES'                                             00341600
                 AIF   ('&APFREQUIRED(1)' NE '&ZTLC').ZG53              00341700
&XAPFREQUIRED    SETC  'YES'       SET KEYWORD                          00341800
                 AIF   (N'&APFREQUIRED LE 1).ZG52A  CK NUM              00341900
&ZMS             SETC  '"APFREQUIRED='          *KPOSA* MNOTE           00342000
&ZMS             SETC  '&ZMS.&APFREQUIRED"'                             00342100
&ZMS             SETC  '&ZMS "APFREQUIRED"'                             00342200
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00342300
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00342400
.ZG52A           ANOP  ,                                                00342500
.*-------------------------------------------------------------------   00342600
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00342700
.ZG53            ANOP  ,                                                00342800
&ZTLC            SETC 'NO'                                              00342900
                 AIF   ('&APFREQUIRED(1)' NE '&ZTLC').ZG54              00343000
&XAPFREQUIRED    SETC  'NO'        SET KEYWORD                          00343100
                 AIF   (N'&APFREQUIRED LE 1).ZG53A  CK NUM              00343200
&ZMS             SETC  '"APFREQUIRED='          *KPOSA* MNOTE           00343300
&ZMS             SETC  '&ZMS.&APFREQUIRED"'                             00343400
&ZMS             SETC  '&ZMS "APFREQUIRED"'                             00343500
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00343600
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00343700
.ZG53A           ANOP  ,                                                00343800
.*------------------------------------------------------------------    00343900
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00344000
.ZG54            ANOP  ,                                                00344100
&ZXAPFREQUIRED   SETC  'INPUT'     SET IN/OUTPUT                        00344200
                 AIF   (K'&XAPFREQUIRED GT 0).ZG54E  VALID ARG          00344300
                 AIF   (T'&APFREQUIRED EQ 'O').ZG54D  OMITTED           00344400
&ZASYSLNDX       SETA  0                                                00344500
.ZG54A           ANOP  ,           POSITIONAL MACRO KEY                 00344600
&ZASYSLNDX       SETA  &ZASYSLNDX+1                                     00344700
                 AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG54C                 00344800
&ZTLC            SETC 'APFREQUIRED'                                     00344900
                 AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG54A        00345000
.ZG54B           ANOP  ,                                                00345100
&ZXAPFREQUIRED   SETC  ''          RESET IN/OUTPUT                      00345200
&ZMS             SETC  'THE "APFREQUIRED" KEY'  *KOPTA* MNOTE           00345300
&ZMS             SETC  '&ZMS MUST CONTAIN ONE'                          00345400
                 MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                 00345500
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00345600
                 AGO   .ZG54E                                           00345700
.ZG54C           ANOP  ,                                                00345800
&ZXAPFREQUIRED   SETC  ''          RESET IN/OUTPUT                      00345900
&ZMS             SETC  '"APFREQUIRED='          *KUKWA* MNOTE           00346000
&ZMS             SETC  '&ZMS.&APFREQUIRED"'                             00346100
&ZMS             SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '        00346200
&ZMS             SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'              00346300
&ZMS             SETC  '&ZMS "YES"'                                     00346400
&ZMS             SETC  '&ZMS OR "NO".'                                  00346500
                 MNOTE 8,' &ZMS '                                       00346600
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00346700
                 AGO   .ZG54E                                           00346800
.ZG54D           ANOP  ,                                                00346900
&XAPFREQUIRED    SETC  'YES'       SET DEFAULT KEYWORD                  00347000
.ZG54E           ANOP  ,                                                00347100
.*------------------------------------------------------------------    00347200
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00347300
&XSECMODCHECK    SETC  ''          INITIALIZE XVARIABLE                 00347400
.*-------------------------------------------------------------------   00347500
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00347600
.ZG57            ANOP  ,                                                00347700
                 AIF   (K'&SECMODCHECK(1) LE 0).ZG57A                   00347800
&ZTLC            SETC 'YES'                                             00347900
                 AIF   ('&SECMODCHECK(1)' NE '&ZTLC').ZG58              00348000
&XSECMODCHECK    SETC  'YES'       SET KEYWORD                          00348100
                 AIF   (N'&SECMODCHECK LE 1).ZG57A  CK NUM              00348200
&ZMS             SETC  '"SECMODCHECK='          *KPOSA* MNOTE           00348300
&ZMS             SETC  '&ZMS.&SECMODCHECK"'                             00348400
&ZMS             SETC  '&ZMS "SECMODCHECK"'                             00348500
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00348600
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00348700
.ZG57A           ANOP  ,                                                00348800
.*-------------------------------------------------------------------   00348900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00349000
.ZG58            ANOP  ,                                                00349100
&ZTLC            SETC 'NO'                                              00349200
                 AIF   ('&SECMODCHECK(1)' NE '&ZTLC').ZG59              00349300
&XSECMODCHECK    SETC  'NO'        SET KEYWORD                          00349400
                 AIF   (N'&SECMODCHECK LE 1).ZG58A  CK NUM              00349500
&ZMS             SETC  '"SECMODCHECK='          *KPOSA* MNOTE           00349600
&ZMS             SETC  '&ZMS.&SECMODCHECK"'                             00349700
&ZMS             SETC  '&ZMS "SECMODCHECK"'                             00349800
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00349900
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00350000
.ZG58A           ANOP  ,                                                00350100
.*------------------------------------------------------------------    00350200
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00350300
.ZG59            ANOP  ,                                                00350400
&ZXSECMODCHECK   SETC  'INPUT'     SET IN/OUTPUT                        00350500
                 AIF   (K'&XSECMODCHECK GT 0).ZG59E  VALID ARG          00350600
                 AIF   (T'&SECMODCHECK EQ 'O').ZG59D  OMITTED           00350700
&ZASYSLNDX       SETA  0                                                00350800
.ZG59A           ANOP  ,           POSITIONAL MACRO KEY                 00350900
&ZASYSLNDX       SETA  &ZASYSLNDX+1                                     00351000
                 AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG59C                 00351100
&ZTLC            SETC 'SECMODCHECK'                                     00351200
                 AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG59A        00351300
.ZG59B           ANOP  ,                                                00351400
&ZXSECMODCHECK   SETC  ''          RESET IN/OUTPUT                      00351500
&ZMS             SETC  'THE "SECMODCHECK" KEY'  *KOPTA* MNOTE           00351600
&ZMS             SETC  '&ZMS MUST CONTAIN ONE'                          00351700
                 MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                 00351800
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00351900
                 AGO   .ZG59E                                           00352000
.ZG59C           ANOP  ,                                                00352100
&ZXSECMODCHECK   SETC  ''          RESET IN/OUTPUT                      00352200
&ZMS             SETC  '"SECMODCHECK='          *KUKWA* MNOTE           00352300
&ZMS             SETC  '&ZMS.&SECMODCHECK"'                             00352400
&ZMS             SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '        00352500
&ZMS             SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'              00352600
&ZMS             SETC  '&ZMS "YES"'                                     00352700
&ZMS             SETC  '&ZMS OR "NO".'                                  00352800
                 MNOTE 8,' &ZMS '                                       00352900
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00353000
                 AGO   .ZG59E                                           00353100
.ZG59D           ANOP  ,                                                00353200
&XSECMODCHECK    SETC  'YES'       SET DEFAULT KEYWORD                  00353300
.ZG59E           ANOP  ,                                                00353400
.*----------------------------------------------------------------***   00353500
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00353600
                 AIF   (N'&REQUESTOR LE 1).ZG61A  CK NUM                00353700
&ZMS             SETC  '"REQUESTOR='            *KPOSA* MNOTE           00353800
&ZMS             SETC  '&ZMS.&REQUESTOR"'                               00353900
&ZMS             SETC  '&ZMS "REQUESTOR"'                               00354000
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00354100
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00354200
.ZG61A           ANOP  ,                                                00354300
.*-------------------------------------------------------------------   00354400
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00354500
&ZXREQUESTOR     SETC  'INPUT'     SET IN/OUTPUT                        00354600
&XREQUESTOR      SETC  '&REQUESTOR(1)'          SET XVARIABLE           00354700
                 AIF   (N'&REQUESTOR GT 1).ZG61B  MULTI PARMS           00354800
&XREQUESTOR      SETC  '&REQUESTOR'             SET XVARIABLE           00354900
.ZG61B           AIF   (K'&REQUESTOR(1) GT 0).ZG61C                     00355000
&ZXREQUESTOR     SETC  ''          RESET IN/OUTPUT                      00355100
&ZMS             SETC  ' '         *KRQDA*                              00355200
&ZMS             SETC  '&ZMS "REQUESTOR" KEY AND ITS'                   00355300
                 MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                 00355400
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00355500
.ZG61C           ANOP  ,                                                00355600
.*-------------------------------------------------------------------   00355700
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00355800
                 AIF   (K'&ZXREQUESTOR LE 0).ZG61R  NOT I/O             00355900
                 AIF   ('&XREQUESTOR'(1,1) NE '(').ZG61R                00356000
&ZCGPR           SETC  '&XREQUESTOR'(2,K'&XREQUESTOR-2)                 00356100
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG61P                     00356200
                 AIF   (K'&ZCGPR GT 2).ZG61Q                            00356300
                 AIF   ('&ZCGPR' EQ '0').ZG61Q                          00356400
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00356500
                 AIF   (T'&ZCGPR NE 'N').ZG61Q  INVALID REG NAME        00356600
.ZG61P           ANOP  ,                                                00356700
                 AIF   (T'&ZCGPR NE 'N').ZG61R  NON NUMERIC             00356800
                 AIF   ('&ZCGPR' LT '2').ZG61Q                          00356900
                 AIF   ('&ZCGPR' LE '12').ZG61R                         00357000
.ZG61Q           ANOP  ,                                                00357100
&ZMS             SETC  '"REQUESTOR='            *KGPRA* MNOTE           00357200
&ZMS             SETC  '&ZMS.&REQUESTOR"'                               00357300
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00357400
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00357500
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00357600
.ZG61R           ANOP  ,                                                00357700
.*------------------------------------------------------------------    00357800
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00357900
&XMODPROB        SETC  ''          INITIALIZE XVARIABLE                 00358000
.*-------------------------------------------------------------------   00358100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00358200
.ZG65            ANOP  ,                                                00358300
                 AIF   (K'&MODPROB(1) LE 0).ZG65A                       00358400
&ZTLC            SETC 'CONTINUE'                                        00358500
                 AIF   ('&MODPROB(1)' NE '&ZTLC').ZG66                  00358600
&XMODPROB        SETC  'CONTINUE'  SET KEYWORD                          00358700
                 AIF   (N'&MODPROB LE 1).ZG65A  CK NUM                  00358800
&ZMS             SETC  '"MODPROB='              *KPOSA* MNOTE           00358900
&ZMS             SETC  '&ZMS.&MODPROB"'                                 00359000
&ZMS             SETC  '&ZMS "MODPROB"'                                 00359100
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00359200
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00359300
.ZG65A           ANOP  ,                                                00359400
.*-------------------------------------------------------------------   00359500
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00359600
.ZG66            ANOP  ,                                                00359700
&ZTLC            SETC 'STOP'                                            00359800
                 AIF   ('&MODPROB(1)' NE '&ZTLC').ZG67                  00359900
&XMODPROB        SETC  'STOP'      SET KEYWORD                          00360000
                 AIF   (N'&MODPROB LE 1).ZG66A  CK NUM                  00360100
&ZMS             SETC  '"MODPROB='              *KPOSA* MNOTE           00360200
&ZMS             SETC  '&ZMS.&MODPROB"'                                 00360300
&ZMS             SETC  '&ZMS "MODPROB"'                                 00360400
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00360500
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00360600
.ZG66A           ANOP  ,                                                00360700
.*------------------------------------------------------------------    00360800
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00360900
.ZG67            ANOP  ,                                                00361000
&ZXMODPROB       SETC  'INPUT'     SET IN/OUTPUT                        00361100
                 AIF   (K'&XMODPROB GT 0).ZG67E  VALID ARG              00361200
                 AIF   (T'&MODPROB EQ 'O').ZG67D  OMITTED               00361300
&ZASYSLNDX       SETA  0                                                00361400
.ZG67A           ANOP  ,           POSITIONAL MACRO KEY                 00361500
&ZASYSLNDX       SETA  &ZASYSLNDX+1                                     00361600
                 AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG67C                 00361700
&ZTLC            SETC 'MODPROB'                                         00361800
                 AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG67A        00361900
.ZG67B           ANOP  ,                                                00362000
&ZXMODPROB       SETC  ''          RESET IN/OUTPUT                      00362100
&ZMS             SETC  'THE "MODPROB" KEY'      *KOPTA* MNOTE           00362200
&ZMS             SETC  '&ZMS MUST CONTAIN ONE'                          00362300
                 MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                 00362400
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00362500
                 AGO   .ZG67E                                           00362600
.ZG67C           ANOP  ,                                                00362700
&ZXMODPROB       SETC  ''          RESET IN/OUTPUT                      00362800
&ZMS             SETC  '"MODPROB='              *KUKWA* MNOTE           00362900
&ZMS             SETC  '&ZMS.&MODPROB"'                                 00363000
&ZMS             SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '        00363100
&ZMS             SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'              00363200
&ZMS             SETC  '&ZMS "CONTINUE"'                                00363300
&ZMS             SETC  '&ZMS OR "STOP".'                                00363400
                 MNOTE 8,' &ZMS '                                       00363500
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00363600
                 AGO   .ZG67E                                           00363700
.ZG67D           ANOP  ,                                                00363800
&XMODPROB        SETC  'CONTINUE'  SET DEFAULT KEYWORD                  00363900
.ZG67E           ANOP  ,                                                00364000
.*-------------------------------------------------------------------   00364100
.***AG.KMOUT01 BYPASS CHECK ON OUTPUT KEY PROCESSING -START             00364200
                 AIF   ('&XMF' EQ 'M').ZG70     BYPASS IF MF=M          00364300
.*----------------------------------------------------------------***   00364400
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00364500
                 AIF   (N'&ERRORDATA LE 1).ZG69A  CK NUM                00364600
&ZMS             SETC  '"ERRORDATA='            *KPOSA* MNOTE           00364700
&ZMS             SETC  '&ZMS.&ERRORDATA"'                               00364800
&ZMS             SETC  '&ZMS "ERRORDATA"'                               00364900
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00365000
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00365100
.ZG69A           ANOP  ,                                                00365200
.*-------------------------------------------------------------------   00365300
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00365400
                 AIF   (K'&ERRORDATA(1) LE 0).ZG69C  NO PARM            00365500
&ZXERRORDATA     SETC  'OUTPUT'    SET OUTPUT                           00365600
&XERRORDATA      SETC  '&ERRORDATA(1)'          SET XVARIABLE           00365700
                 AIF   (N'&ERRORDATA GT 1).ZG69C                        00365800
&XERRORDATA      SETC  '&ERRORDATA'             SET XVARIABLE           00365900
.ZG69C           ANOP  ,                                                00366000
.*-------------------------------------------------------------------   00366100
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00366200
                 AIF   (K'&ZXERRORDATA LE 0).ZG69R  NOT I/O             00366300
                 AIF   ('&XERRORDATA'(1,1) NE '(').ZG69R                00366400
&ZCGPR           SETC  '&XERRORDATA'(2,K'&XERRORDATA-2)                 00366500
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG69P                     00366600
                 AIF   (K'&ZCGPR GT 2).ZG69Q                            00366700
                 AIF   ('&ZCGPR' EQ '0').ZG69Q                          00366800
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00366900
                 AIF   (T'&ZCGPR NE 'N').ZG69Q  INVALID REG NAME        00367000
.ZG69P           ANOP  ,                                                00367100
                 AIF   (T'&ZCGPR NE 'N').ZG69R  NON NUMERIC             00367200
                 AIF   ('&ZCGPR' LT '2').ZG69Q                          00367300
                 AIF   ('&ZCGPR' LE '12').ZG69R                         00367400
.ZG69Q           ANOP  ,                                                00367500
&ZMS             SETC  '"ERRORDATA='            *KGPRA* MNOTE           00367600
&ZMS             SETC  '&ZMS.&ERRORDATA"'                               00367700
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00367800
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00367900
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00368000
.ZG69R           ANOP  ,                                                00368100
.*-------------------------------------------------------------------   00368200
.***AG.KMOUT02 BYPASS CHECK ON OUTPUT KEY PROCESSING -END               00368300
.ZG70            ANOP  ,           END OF BYPASS CHECK                  00368400
.*-------------------------------------------------------------------   00368500
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00368600
.ZG71            ANOP  ,                                                00368700
&ZTLC            SETC 'DELETE'                                          00368800
                 AIF   ('&REQUEST(1)' NE '&ZTLC').ZG89                  00368900
&XREQUEST        SETC  'DELETE'    SET KEYWORD                          00369000
                 AIF   (N'&REQUEST LE 1).ZG71A  CK NUM                  00369100
&ZMS             SETC  '"REQUEST='              *KPOSA* MNOTE           00369200
&ZMS             SETC  '&ZMS.&REQUEST"'                                 00369300
&ZMS             SETC  '&ZMS "REQUEST"'                                 00369400
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00369500
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00369600
.ZG71A           ANOP  ,                                                00369700
.*------------------------------------------------------------------    00369800
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00369900
&ZCVAL           SETC ''           CLEAR ERROR KEY ACCUMULATOR          00370000
.ZG71A0          AIF   (K'&MODINFOTYPE LE 0).ZG71A1  OK                 00370100
&ZCVAL           SETC '&ZCVAL MODINFOTYPE'      INCORRECT KEY USED      00370200
.ZG71A1          AIF   (K'&MODINFOX LE 0).ZG71A2  OK                    00370300
&ZCVAL           SETC '&ZCVAL MODINFOX'         INCORRECT KEY USED      00370400
.ZG71A2          AIF   (K'&BYADDR LE 0).ZG71A3  OK                      00370500
&ZCVAL           SETC '&ZCVAL BYADDR'           INCORRECT KEY USED      00370600
.ZG71A3          AIF   (K'&DSNAME LE 0).ZG71A4  OK                      00370700
&ZCVAL           SETC '&ZCVAL DSNAME'           INCORRECT KEY USED      00370800
.ZG71A4          AIF   (K'&DDNAME LE 0).ZG71A5  OK                      00370900
&ZCVAL           SETC '&ZCVAL DDNAME'           INCORRECT KEY USED      00371000
.ZG71A5          AIF   (K'&DCB LE 0).ZG71A6     OK                      00371100
&ZCVAL           SETC '&ZCVAL DCB'              INCORRECT KEY USED      00371200
.ZG71A6          AIF   (K'&DCBPTR LE 0).ZG71A7  OK                      00371300
&ZCVAL           SETC '&ZCVAL DCBPTR'           INCORRECT KEY USED      00371400
.ZG71A7          AIF   (K'&MASKDSNAME LE 0).ZG71A8  OK                  00371500
&ZCVAL           SETC '&ZCVAL MASKDSNAME'       INCORRECT KEY USED      00371600
.ZG71A8          AIF   (K'&MASKDDNAME LE 0).ZG71A9  OK                  00371700
&ZCVAL           SETC '&ZCVAL MASKDDNAME'       INCORRECT KEY USED      00371800
.ZG71A9          AIF   (K'&MASKDCB LE 0).ZG71A10  OK                    00371900
&ZCVAL           SETC '&ZCVAL MASKDCB'          INCORRECT KEY USED      00372000
.ZG71A10         AIF   (K'&MASKDCBPTR LE 0).ZG71A11  OK                 00372100
&ZCVAL           SETC '&ZCVAL MASKDCBPTR'       INCORRECT KEY USED      00372200
.ZG71A11         AIF   (K'&OUTAREAPTR LE 0).ZG71A12  OK                 00372300
&ZCVAL           SETC '&ZCVAL OUTAREAPTR'       INCORRECT KEY USED      00372400
.ZG71A12         AIF   (K'&OUTAREALEN LE 0).ZG71A13  OK                 00372500
&ZCVAL           SETC '&ZCVAL OUTAREALEN'       INCORRECT KEY USED      00372600
.ZG71A13         AIF   (K'&OUTAREANUM LE 0).ZG71A14  OK                 00372700
&ZCVAL           SETC '&ZCVAL OUTAREANUM'       INCORRECT KEY USED      00372800
.ZG71A14         AIF   (K'&OUTAREASP LE 0).ZG71A15  OK                  00372900
&ZCVAL           SETC '&ZCVAL OUTAREASP'        INCORRECT KEY USED      00373000
.ZG71A15         AIF   (K'&APFREQUIRED LE 0).ZG71A16  OK                00373100
&ZCVAL           SETC '&ZCVAL APFREQUIRED'      INCORRECT KEY USED      00373200
.ZG71A16         AIF   (K'&REQUESTOR LE 0).ZG71A17  OK                  00373300
&ZCVAL           SETC '&ZCVAL REQUESTOR'        INCORRECT KEY USED      00373400
.ZG71A17         AIF   (K'&MODPROB LE 0).ZG71A18  OK                    00373500
&ZCVAL           SETC '&ZCVAL MODPROB'          INCORRECT KEY USED      00373600
.ZG71A18         AIF   (K'&ERRORDATA LE 0).ZG71A19  OK                  00373700
&ZCVAL           SETC '&ZCVAL ERRORDATA'        INCORRECT KEY USED      00373800
.ZG71A19         AIF   (K'&DYNFUNC LE 0).ZG71A20  OK                    00373900
&ZCVAL           SETC '&ZCVAL DYNFUNC'          INCORRECT KEY USED      00374000
.ZG71A20         AIF   (K'&ZCVAL LE 0).ZG71A21  OK                      00374100
&ZCVAL           SETC '&ZCVAL'(2,K'&ZCVAL-1)                            00374200
                 AIF  (K'&ZCVAL LE 160).ZG71A21A                        00374300
&ZCVAL           SETC '&ZCVAL'(1,160)                                   00374400
&ZCVAL           SETC '&ZCVAL....'                                      00374500
.ZG71A21A        ANOP                                                   00374600
&ZMS             SETC  '"REQUEST'  *KMEIA* MNOTE                        00374700
&ZMS             SETC  '&ZMS.=&REQUEST"'                                00374800
&ZMS             SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'             00374900
                 MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'             00375000
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00375100
.ZG71A21         ANOP  ,                                                00375200
.*----------------------------------------------------------------***   00375300
.***AG.KXVAR05 NAME, RQD INOUT, KEYS -XVARIABLE KEY                     00375400
                 AIF   (N'&MODINFO LE 1).ZG73A  CK NUM                  00375500
&ZMS             SETC  '"MODINFO='              *KPOSA* MNOTE           00375600
&ZMS             SETC  '&ZMS.&MODINFO"'                                 00375700
&ZMS             SETC  '&ZMS "MODINFO"'                                 00375800
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00375900
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00376000
.ZG73A           ANOP  ,                                                00376100
.*-------------------------------------------------------------------   00376200
.***AG.KXVAR06 NAME, RQD INOUT, KEYS -XVARIABLE                         00376300
&ZXMODINFO       SETC  'INOUT'     SET IN/OUTPUT                        00376400
&XMODINFO        SETC  '&MODINFO(1)'            SET XVARIABLE           00376500
                 AIF   (N'&MODINFO GT 1).ZG73B  MULTI PARMS             00376600
&XMODINFO        SETC  '&MODINFO'  SET XVARIABLE                        00376700
.ZG73B           AIF   (K'&MODINFO(1) GT 0).ZG73C                       00376800
&ZXMODINFO       SETC  ''          RESET IN/OUTPUT                      00376900
&ZMS             SETC  ' '         *KRQDA*                              00377000
&ZMS             SETC  '&ZMS "MODINFO" KEY AND ITS'                     00377100
                 MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                 00377200
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00377300
.ZG73C           ANOP  ,                                                00377400
.*-------------------------------------------------------------------   00377500
.***AG.KCK02 NAME, RQD INOUT, KEYS -GPR OUT OF RANGE                    00377600
                 AIF   (K'&ZXMODINFO LE 0).ZG73R  NOT I/O               00377700
                 AIF   ('&XMODINFO'(1,1) NE '(').ZG73R                  00377800
&ZCGPR           SETC  '&XMODINFO'(2,K'&XMODINFO-2)                     00377900
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG73P                     00378000
                 AIF   (K'&ZCGPR GT 2).ZG73Q                            00378100
                 AIF   ('&ZCGPR' EQ '0').ZG73Q                          00378200
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00378300
                 AIF   (T'&ZCGPR NE 'N').ZG73Q  INVALID REG NAME        00378400
.ZG73P           ANOP  ,                                                00378500
                 AIF   (T'&ZCGPR NE 'N').ZG73R  NON NUMERIC             00378600
                 AIF   ('&ZCGPR' LT '2').ZG73Q                          00378700
                 AIF   ('&ZCGPR' LE '12').ZG73R                         00378800
.ZG73Q           ANOP  ,                                                00378900
&ZMS             SETC  '"MODINFO='              *KGPRA* MNOTE           00379000
&ZMS             SETC  '&ZMS.&MODINFO"'                                 00379100
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00379200
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00379300
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00379400
.ZG73R           ANOP  ,                                                00379500
.*----------------------------------------------------------------***   00379600
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00379700
                 AIF   (N'&NUMMOD LE 1).ZG76A   CK NUM                  00379800
&ZMS             SETC  '"NUMMOD='  *KPOSA* MNOTE                        00379900
&ZMS             SETC  '&ZMS.&NUMMOD"'                                  00380000
&ZMS             SETC  '&ZMS "NUMMOD"'                                  00380100
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00380200
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00380300
.ZG76A           ANOP  ,                                                00380400
.*-------------------------------------------------------------------   00380500
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00380600
&ZXNUMMOD        SETC  'INPUT'     SET IN/OUTPUT                        00380700
&XNUMMOD         SETC  '&NUMMOD(1)'             SET XVARIABLE           00380800
                 AIF   (N'&NUMMOD GT 1).ZG76B   MULTI PARMS             00380900
&XNUMMOD         SETC  '&NUMMOD'   SET XVARIABLE                        00381000
.ZG76B           AIF   (K'&NUMMOD(1) GT 0).ZG76C                        00381100
&ZXNUMMOD        SETC  ''          RESET IN/OUTPUT                      00381200
&ZMS             SETC  ' '         *KRQDA*                              00381300
&ZMS             SETC  '&ZMS "NUMMOD" KEY AND ITS'                      00381400
                 MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                 00381500
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00381600
.ZG76C           ANOP  ,                                                00381700
.*-------------------------------------------------------------------   00381800
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00381900
                 AIF   (K'&ZXNUMMOD LE 0).ZG76R  NOT I/O                00382000
                 AIF   ('&XNUMMOD'(1,1) NE '(').ZG76R                   00382100
&ZCGPR           SETC  '&XNUMMOD'(2,K'&XNUMMOD-2)                       00382200
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG76P                     00382300
                 AIF   (K'&ZCGPR GT 2).ZG76Q                            00382400
                 AIF   ('&ZCGPR' EQ '0').ZG76Q                          00382500
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00382600
                 AIF   (T'&ZCGPR NE 'N').ZG76Q  INVALID REG NAME        00382700
.ZG76P           ANOP  ,                                                00382800
                 AIF   (T'&ZCGPR NE 'N').ZG76R  NON NUMERIC             00382900
                 AIF   ('&ZCGPR' LT '2').ZG76Q                          00383000
                 AIF   ('&ZCGPR' LE '12').ZG76R                         00383100
.ZG76Q           ANOP  ,                                                00383200
&ZMS             SETC  '"NUMMOD='  *KGPRA* MNOTE                        00383300
&ZMS             SETC  '&ZMS.&NUMMOD"'                                  00383400
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00383500
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00383600
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00383700
.ZG76R           ANOP  ,                                                00383800
.*------------------------------------------------------------------    00383900
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00384000
&XTYPE           SETC  ''          INITIALIZE XVARIABLE                 00384100
.*-------------------------------------------------------------------   00384200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00384300
.ZG80            ANOP  ,                                                00384400
                 AIF   (K'&TYPE(1) LE 0).ZG80A                          00384500
&ZTLC            SETC 'BYTOKEN'                                         00384600
                 AIF   ('&TYPE(1)' NE '&ZTLC').ZG81                     00384700
&XTYPE           SETC  'BYTOKEN'   SET KEYWORD                          00384800
                 AIF   (N'&TYPE LE 1).ZG80A     CK NUM                  00384900
&ZMS             SETC  '"TYPE='    *KPOSA* MNOTE                        00385000
&ZMS             SETC  '&ZMS.&TYPE"'                                    00385100
&ZMS             SETC  '&ZMS "TYPE"'                                    00385200
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00385300
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00385400
.ZG80A           ANOP  ,                                                00385500
.*-------------------------------------------------------------------   00385600
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00385700
.ZG81            ANOP  ,                                                00385800
&ZTLC            SETC 'CURRENT'                                         00385900
                 AIF   ('&TYPE(1)' NE '&ZTLC').ZG82                     00386000
&XTYPE           SETC  'CURRENT'   SET KEYWORD                          00386100
                 AIF   (N'&TYPE LE 1).ZG81A     CK NUM                  00386200
&ZMS             SETC  '"TYPE='    *KPOSA* MNOTE                        00386300
&ZMS             SETC  '&ZMS.&TYPE"'                                    00386400
&ZMS             SETC  '&ZMS "TYPE"'                                    00386500
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00386600
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00386700
.ZG81A           ANOP  ,                                                00386800
.*-------------------------------------------------------------------   00386900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00387000
.ZG82            ANOP  ,                                                00387100
&ZTLC            SETC 'OLDEST'                                          00387200
                 AIF   ('&TYPE(1)' NE '&ZTLC').ZG83                     00387300
&XTYPE           SETC  'OLDEST'    SET KEYWORD                          00387400
                 AIF   (N'&TYPE LE 1).ZG82A     CK NUM                  00387500
&ZMS             SETC  '"TYPE='    *KPOSA* MNOTE                        00387600
&ZMS             SETC  '&ZMS.&TYPE"'                                    00387700
&ZMS             SETC  '&ZMS "TYPE"'                                    00387800
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00387900
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00388000
.ZG82A           ANOP  ,                                                00388100
.*------------------------------------------------------------------    00388200
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00388300
.ZG83            ANOP  ,                                                00388400
&ZXTYPE          SETC  'INPUT'     SET IN/OUTPUT                        00388500
                 AIF   (K'&XTYPE GT 0).ZG83E    VALID ARG               00388600
                 AIF   (T'&TYPE EQ 'O').ZG83D   OMITTED                 00388700
&ZASYSLNDX       SETA  0                                                00388800
.ZG83A           ANOP  ,           POSITIONAL MACRO KEY                 00388900
&ZASYSLNDX       SETA  &ZASYSLNDX+1                                     00389000
                 AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG83C                 00389100
&ZTLC            SETC 'TYPE'                                            00389200
                 AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG83A        00389300
.ZG83B           ANOP  ,                                                00389400
&ZXTYPE          SETC  ''          RESET IN/OUTPUT                      00389500
&ZMS             SETC  'THE "TYPE" KEY'         *KOPTA* MNOTE           00389600
&ZMS             SETC  '&ZMS MUST CONTAIN ONE'                          00389700
                 MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                 00389800
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00389900
                 AGO   .ZG83E                                           00390000
.ZG83C           ANOP  ,                                                00390100
&ZXTYPE          SETC  ''          RESET IN/OUTPUT                      00390200
&ZMS             SETC  '"TYPE='    *KUKWA* MNOTE                        00390300
&ZMS             SETC  '&ZMS.&TYPE"'                                    00390400
&ZMS             SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '        00390500
&ZMS             SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'              00390600
&ZMS             SETC  '&ZMS "BYTOKEN",'                                00390700
&ZMS             SETC  '&ZMS "CURRENT",'                                00390800
&ZMS             SETC  '&ZMS OR "OLDEST".'                              00390900
                 MNOTE 8,' &ZMS '                                       00391000
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00391100
                 AGO   .ZG83E                                           00391200
.ZG83D           ANOP  ,                                                00391300
&XTYPE           SETC  'BYTOKEN'   SET DEFAULT KEYWORD                  00391400
.ZG83E           ANOP  ,                                                00391500
.*------------------------------------------------------------------    00391600
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00391700
&XSECMODCHECK    SETC  ''          INITIALIZE XVARIABLE                 00391800
.*-------------------------------------------------------------------   00391900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00392000
.ZG86            ANOP  ,                                                00392100
                 AIF   (K'&SECMODCHECK(1) LE 0).ZG86A                   00392200
&ZTLC            SETC 'YES'                                             00392300
                 AIF   ('&SECMODCHECK(1)' NE '&ZTLC').ZG87              00392400
&XSECMODCHECK    SETC  'YES'       SET KEYWORD                          00392500
                 AIF   (N'&SECMODCHECK LE 1).ZG86A  CK NUM              00392600
&ZMS             SETC  '"SECMODCHECK='          *KPOSA* MNOTE           00392700
&ZMS             SETC  '&ZMS.&SECMODCHECK"'                             00392800
&ZMS             SETC  '&ZMS "SECMODCHECK"'                             00392900
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00393000
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00393100
.ZG86A           ANOP  ,                                                00393200
.*-------------------------------------------------------------------   00393300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00393400
.ZG87            ANOP  ,                                                00393500
&ZTLC            SETC 'NO'                                              00393600
                 AIF   ('&SECMODCHECK(1)' NE '&ZTLC').ZG88              00393700
&XSECMODCHECK    SETC  'NO'        SET KEYWORD                          00393800
                 AIF   (N'&SECMODCHECK LE 1).ZG87A  CK NUM              00393900
&ZMS             SETC  '"SECMODCHECK='          *KPOSA* MNOTE           00394000
&ZMS             SETC  '&ZMS.&SECMODCHECK"'                             00394100
&ZMS             SETC  '&ZMS "SECMODCHECK"'                             00394200
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00394300
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00394400
.ZG87A           ANOP  ,                                                00394500
.*------------------------------------------------------------------    00394600
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00394700
.ZG88            ANOP  ,                                                00394800
&ZXSECMODCHECK   SETC  'INPUT'     SET IN/OUTPUT                        00394900
                 AIF   (K'&XSECMODCHECK GT 0).ZG88E  VALID ARG          00395000
                 AIF   (T'&SECMODCHECK EQ 'O').ZG88D  OMITTED           00395100
&ZASYSLNDX       SETA  0                                                00395200
.ZG88A           ANOP  ,           POSITIONAL MACRO KEY                 00395300
&ZASYSLNDX       SETA  &ZASYSLNDX+1                                     00395400
                 AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG88C                 00395500
&ZTLC            SETC 'SECMODCHECK'                                     00395600
                 AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG88A        00395700
.ZG88B           ANOP  ,                                                00395800
&ZXSECMODCHECK   SETC  ''          RESET IN/OUTPUT                      00395900
&ZMS             SETC  'THE "SECMODCHECK" KEY'  *KOPTA* MNOTE           00396000
&ZMS             SETC  '&ZMS MUST CONTAIN ONE'                          00396100
                 MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                 00396200
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00396300
                 AGO   .ZG88E                                           00396400
.ZG88C           ANOP  ,                                                00396500
&ZXSECMODCHECK   SETC  ''          RESET IN/OUTPUT                      00396600
&ZMS             SETC  '"SECMODCHECK='          *KUKWA* MNOTE           00396700
&ZMS             SETC  '&ZMS.&SECMODCHECK"'                             00396800
&ZMS             SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '        00396900
&ZMS             SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'              00397000
&ZMS             SETC  '&ZMS "YES"'                                     00397100
&ZMS             SETC  '&ZMS OR "NO".'                                  00397200
                 MNOTE 8,' &ZMS '                                       00397300
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00397400
                 AGO   .ZG88E                                           00397500
.ZG88D           ANOP  ,                                                00397600
&XSECMODCHECK    SETC  'YES'       SET DEFAULT KEYWORD                  00397700
.ZG88E           ANOP  ,                                                00397800
.*-------------------------------------------------------------------   00397900
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00398000
.ZG89            ANOP  ,                                                00398100
&ZTLC            SETC 'QUERYDYN'                                        00398200
                 AIF   ('&REQUEST(1)' NE '&ZTLC').ZG93                  00398300
&XREQUEST        SETC  'QUERYDYN'  SET KEYWORD                          00398400
                 AIF   (N'&REQUEST LE 1).ZG89A  CK NUM                  00398500
&ZMS             SETC  '"REQUEST='              *KPOSA* MNOTE           00398600
&ZMS             SETC  '&ZMS.&REQUEST"'                                 00398700
&ZMS             SETC  '&ZMS "REQUEST"'                                 00398800
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00398900
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00399000
.ZG89A           ANOP  ,                                                00399100
.*------------------------------------------------------------------    00399200
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00399300
&ZCVAL           SETC ''           CLEAR ERROR KEY ACCUMULATOR          00399400
.ZG89A0          AIF   (K'&MODINFOTYPE LE 0).ZG89A1  OK                 00399500
&ZCVAL           SETC '&ZCVAL MODINFOTYPE'      INCORRECT KEY USED      00399600
.ZG89A1          AIF   (K'&MODINFO LE 0).ZG89A2  OK                     00399700
&ZCVAL           SETC '&ZCVAL MODINFO'          INCORRECT KEY USED      00399800
.ZG89A2          AIF   (K'&MODINFOX LE 0).ZG89A3  OK                    00399900
&ZCVAL           SETC '&ZCVAL MODINFOX'         INCORRECT KEY USED      00400000
.ZG89A3          AIF   (K'&NUMMOD LE 0).ZG89A4  OK                      00400100
&ZCVAL           SETC '&ZCVAL NUMMOD'           INCORRECT KEY USED      00400200
.ZG89A4          AIF   (K'&BYADDR LE 0).ZG89A5  OK                      00400300
&ZCVAL           SETC '&ZCVAL BYADDR'           INCORRECT KEY USED      00400400
.ZG89A5          AIF   (K'&DSNAME LE 0).ZG89A6  OK                      00400500
&ZCVAL           SETC '&ZCVAL DSNAME'           INCORRECT KEY USED      00400600
.ZG89A6          AIF   (K'&DDNAME LE 0).ZG89A7  OK                      00400700
&ZCVAL           SETC '&ZCVAL DDNAME'           INCORRECT KEY USED      00400800
.ZG89A7          AIF   (K'&DCB LE 0).ZG89A8     OK                      00400900
&ZCVAL           SETC '&ZCVAL DCB'              INCORRECT KEY USED      00401000
.ZG89A8          AIF   (K'&DCBPTR LE 0).ZG89A9  OK                      00401100
&ZCVAL           SETC '&ZCVAL DCBPTR'           INCORRECT KEY USED      00401200
.ZG89A9          AIF   (K'&MASKDSNAME LE 0).ZG89A10  OK                 00401300
&ZCVAL           SETC '&ZCVAL MASKDSNAME'       INCORRECT KEY USED      00401400
.ZG89A10         AIF   (K'&MASKDDNAME LE 0).ZG89A11  OK                 00401500
&ZCVAL           SETC '&ZCVAL MASKDDNAME'       INCORRECT KEY USED      00401600
.ZG89A11         AIF   (K'&MASKDCB LE 0).ZG89A12  OK                    00401700
&ZCVAL           SETC '&ZCVAL MASKDCB'          INCORRECT KEY USED      00401800
.ZG89A12         AIF   (K'&MASKDCBPTR LE 0).ZG89A13  OK                 00401900
&ZCVAL           SETC '&ZCVAL MASKDCBPTR'       INCORRECT KEY USED      00402000
.ZG89A13         AIF   (K'&OUTAREAPTR LE 0).ZG89A14  OK                 00402100
&ZCVAL           SETC '&ZCVAL OUTAREAPTR'       INCORRECT KEY USED      00402200
.ZG89A14         AIF   (K'&OUTAREALEN LE 0).ZG89A15  OK                 00402300
&ZCVAL           SETC '&ZCVAL OUTAREALEN'       INCORRECT KEY USED      00402400
.ZG89A15         AIF   (K'&OUTAREANUM LE 0).ZG89A16  OK                 00402500
&ZCVAL           SETC '&ZCVAL OUTAREANUM'       INCORRECT KEY USED      00402600
.ZG89A16         AIF   (K'&OUTAREASP LE 0).ZG89A17  OK                  00402700
&ZCVAL           SETC '&ZCVAL OUTAREASP'        INCORRECT KEY USED      00402800
.ZG89A17         AIF   (K'&APFREQUIRED LE 0).ZG89A18  OK                00402900
&ZCVAL           SETC '&ZCVAL APFREQUIRED'      INCORRECT KEY USED      00403000
.ZG89A18         AIF   (K'&SECMODCHECK LE 0).ZG89A19  OK                00403100
&ZCVAL           SETC '&ZCVAL SECMODCHECK'      INCORRECT KEY USED      00403200
.ZG89A19         AIF   (K'&REQUESTOR LE 0).ZG89A20  OK                  00403300
&ZCVAL           SETC '&ZCVAL REQUESTOR'        INCORRECT KEY USED      00403400
.ZG89A20         AIF   (K'&MODPROB LE 0).ZG89A21  OK                    00403500
&ZCVAL           SETC '&ZCVAL MODPROB'          INCORRECT KEY USED      00403600
.ZG89A21         AIF   (K'&ERRORDATA LE 0).ZG89A22  OK                  00403700
&ZCVAL           SETC '&ZCVAL ERRORDATA'        INCORRECT KEY USED      00403800
.ZG89A22         AIF   (K'&TYPE LE 0).ZG89A23   OK                      00403900
&ZCVAL           SETC '&ZCVAL TYPE'             INCORRECT KEY USED      00404000
.ZG89A23         AIF   (K'&ZCVAL LE 0).ZG89A24  OK                      00404100
&ZCVAL           SETC '&ZCVAL'(2,K'&ZCVAL-1)                            00404200
                 AIF  (K'&ZCVAL LE 160).ZG89A24A                        00404300
&ZCVAL           SETC '&ZCVAL'(1,160)                                   00404400
&ZCVAL           SETC '&ZCVAL....'                                      00404500
.ZG89A24A        ANOP                                                   00404600
&ZMS             SETC  '"REQUEST'  *KMEIA* MNOTE                        00404700
&ZMS             SETC  '&ZMS.=&REQUEST"'                                00404800
&ZMS             SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'             00404900
                 MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'             00405000
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00405100
.ZG89A24         ANOP  ,                                                00405200
.*-------------------------------------------------------------------   00405300
.***AG.KMOUT01 BYPASS CHECK ON OUTPUT KEY PROCESSING -START             00405400
                 AIF   ('&XMF' EQ 'M').ZG92     BYPASS IF MF=M          00405500
.*----------------------------------------------------------------***   00405600
.***AG.KXVAR05 NAME, RQD OUTPUT, KEYS -XVARIABLE KEY                    00405700
                 AIF   (N'&DYNFUNC LE 1).ZG91A  CK NUM                  00405800
&ZMS             SETC  '"DYNFUNC='              *KPOSA* MNOTE           00405900
&ZMS             SETC  '&ZMS.&DYNFUNC"'                                 00406000
&ZMS             SETC  '&ZMS "DYNFUNC"'                                 00406100
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00406200
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00406300
.ZG91A           ANOP  ,                                                00406400
.*-------------------------------------------------------------------   00406500
.***AG.KXVAR06 NAME, RQD OUTPUT, KEYS -XVARIABLE                        00406600
&ZXDYNFUNC       SETC  'OUTPUT'    SET IN/OUTPUT                        00406700
&XDYNFUNC        SETC  '&DYNFUNC(1)'            SET XVARIABLE           00406800
                 AIF   (N'&DYNFUNC GT 1).ZG91B  MULTI PARMS             00406900
&XDYNFUNC        SETC  '&DYNFUNC'  SET XVARIABLE                        00407000
.ZG91B           AIF   (K'&DYNFUNC(1) GT 0).ZG91C                       00407100
&ZXDYNFUNC       SETC  ''          RESET IN/OUTPUT                      00407200
&ZMS             SETC  ' '         *KRQDA*                              00407300
&ZMS             SETC  '&ZMS "DYNFUNC" KEY AND ITS'                     00407400
                 MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                 00407500
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00407600
.ZG91C           ANOP  ,                                                00407700
.*-------------------------------------------------------------------   00407800
.***AG.KCK02 NAME, RQD OUTPUT, KEYS -GPR OUT OF RANGE                   00407900
                 AIF   (K'&ZXDYNFUNC LE 0).ZG91R  NOT I/O               00408000
                 AIF   ('&XDYNFUNC'(1,1) NE '(').ZG91R                  00408100
&ZCGPR           SETC  '&XDYNFUNC'(2,K'&XDYNFUNC-2)                     00408200
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG91P                     00408300
                 AIF   (K'&ZCGPR GT 2).ZG91Q                            00408400
                 AIF   ('&ZCGPR' EQ '0').ZG91Q                          00408500
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00408600
                 AIF   (T'&ZCGPR NE 'N').ZG91Q  INVALID REG NAME        00408700
.ZG91P           ANOP  ,                                                00408800
                 AIF   (T'&ZCGPR NE 'N').ZG91R  NON NUMERIC             00408900
                 AIF   ('&ZCGPR' LT '2').ZG91Q                          00409000
                 AIF   ('&ZCGPR' LE '12').ZG91R                         00409100
.ZG91Q           ANOP  ,                                                00409200
&ZMS             SETC  '"DYNFUNC='              *KGPRA* MNOTE           00409300
&ZMS             SETC  '&ZMS.&DYNFUNC"'                                 00409400
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00409500
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00409600
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00409700
.ZG91R           ANOP  ,                                                00409800
.*-------------------------------------------------------------------   00409900
.***AG.KMOUT02 BYPASS CHECK ON OUTPUT KEY PROCESSING -END               00410000
.ZG92            ANOP  ,           END OF BYPASS CHECK                  00410100
.*------------------------------------------------------------------    00410200
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00410300
.ZG93            ANOP  ,                                                00410400
&ZXREQUEST       SETC  'INPUT'     SET IN/OUTPUT                        00410500
                 AIF   (K'&XREQUEST GT 0).ZG93E  VALID ARG              00410600
                 AIF   (T'&REQUEST EQ 'O').ZG93D  OMITTED               00410700
&ZASYSLNDX       SETA  0                                                00410800
.ZG93A           ANOP  ,           POSITIONAL MACRO KEY                 00410900
&ZASYSLNDX       SETA  &ZASYSLNDX+1                                     00411000
                 AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG93C                 00411100
&ZTLC            SETC 'REQUEST'                                         00411200
                 AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG93A        00411300
.ZG93B           ANOP  ,                                                00411400
&ZXREQUEST       SETC  ''          RESET IN/OUTPUT                      00411500
&ZMS             SETC  'THE "REQUEST" KEY'      *KOPTA* MNOTE           00411600
&ZMS             SETC  '&ZMS MUST CONTAIN ONE'                          00411700
                 MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                 00411800
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00411900
                 AGO   .ZG93E                                           00412000
.ZG93C           ANOP  ,                                                00412100
&ZXREQUEST       SETC  ''          RESET IN/OUTPUT                      00412200
&ZMS             SETC  '"REQUEST='              *KUKWA* MNOTE           00412300
&ZMS             SETC  '&ZMS.&REQUEST"'                                 00412400
&ZMS             SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '        00412500
&ZMS             SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'              00412600
&ZMS             SETC  '&ZMS "ADD",'                                    00412700
&ZMS             SETC  '&ZMS "DELETE",'                                 00412800
&ZMS             SETC  '&ZMS OR "QUERYDYN".'                            00412900
                 MNOTE 8,' &ZMS '                                       00413000
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00413100
                 AGO   .ZG93E                                           00413200
.ZG93D           ANOP  ,                                                00413300
&XREQUEST        SETC  'ADD'       SET DEFAULT KEYWORD                  00413400
.ZG93E           ANOP  ,                                                00413500
.*------------------------------------------------------------------    00413600
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00413700
                 AIF   (K'&REQUEST(1) GT 0).ZG93F  PARM                 00413800
&XREQUEST        SETC  ''          ENSURE NULL KEYWORD                  00413900
&ZXREQUEST       SETC  ''          RESET IN/OUTPUT                      00414000
&ZMS             SETC  'THE'                                            00414100
&ZMS             SETC  '&ZMS "REQUEST" KEY AND ITS'                     00414200
&ZMS             SETC  '&ZMS ARGUMENT ARE REQUIRED.'                    00414300
&ZMS             SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'              00414400
&ZMS             SETC  '&ZMS "ADD",'                                    00414500
&ZMS             SETC  '&ZMS "DELETE",'                                 00414600
&ZMS             SETC  '&ZMS OR "QUERYDYN".'                            00414700
                 MNOTE 8,' &ZMS '                                       00414800
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00414900
.ZG93F           ANOP  ,                                                00415000
.*------------------------------------------------------------------    00415100
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00415200
&XLINKAGE        SETC  ''          INITIALIZE XVARIABLE                 00415300
.*-------------------------------------------------------------------   00415400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00415500
.ZG96            ANOP  ,                                                00415600
                 AIF   (K'&LINKAGE(1) LE 0).ZG96A                       00415700
&ZTLC            SETC 'SYSTEM'                                          00415800
                 AIF   ('&LINKAGE(1)' NE '&ZTLC').ZG97                  00415900
&XLINKAGE        SETC  'SYSTEM'    SET KEYWORD                          00416000
                 AIF   (N'&LINKAGE LE 1).ZG96A  CK NUM                  00416100
&ZMS             SETC  '"LINKAGE='              *KPOSA* MNOTE           00416200
&ZMS             SETC  '&ZMS.&LINKAGE"'                                 00416300
&ZMS             SETC  '&ZMS "LINKAGE"'                                 00416400
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00416500
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00416600
.ZG96A           ANOP  ,                                                00416700
.*------------------------------------------------------------------    00416800
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00416900
&ZCVAL           SETC ''           CLEAR ERROR KEY ACCUMULATOR          00417000
.ZG96A0          AIF   (K'&CMDINFO LE 0).ZG96A1  OK                     00417100
&ZCVAL           SETC '&ZCVAL CMDINFO'          INCORRECT KEY USED      00417200
.ZG96A1          AIF   (K'&ZCVAL LE 0).ZG96A2   OK                      00417300
&ZCVAL           SETC '&ZCVAL'(2,K'&ZCVAL-1)                            00417400
&ZMS             SETC  '"LINKAGE'  *KMEIA* MNOTE                        00417500
&ZMS             SETC  '&ZMS.=&LINKAGE"'                                00417600
&ZMS             SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'             00417700
                 MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'             00417800
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00417900
.ZG96A2          ANOP  ,                                                00418000
.*-------------------------------------------------------------------   00418100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00418200
.ZG97            ANOP  ,                                                00418300
&ZTLC            SETC 'INTERNAL'                                        00418400
                 AIF   ('&LINKAGE(1)' NE '&ZTLC').ZG101                 00418500
&XLINKAGE        SETC  'INTERNAL'  SET KEYWORD                          00418600
                 AIF   (N'&LINKAGE LE 1).ZG97A  CK NUM                  00418700
&ZMS             SETC  '"LINKAGE='              *KPOSA* MNOTE           00418800
&ZMS             SETC  '&ZMS.&LINKAGE"'                                 00418900
&ZMS             SETC  '&ZMS "LINKAGE"'                                 00419000
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00419100
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00419200
.ZG97A           ANOP  ,                                                00419300
.*----------------------------------------------------------------***   00419400
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00419500
                 AIF   (N'&CMDINFO LE 1).ZG99A  CK NUM                  00419600
&ZMS             SETC  '"CMDINFO='              *KPOSA* MNOTE           00419700
&ZMS             SETC  '&ZMS.&CMDINFO"'                                 00419800
&ZMS             SETC  '&ZMS "CMDINFO"'                                 00419900
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00420000
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00420100
.ZG99A           ANOP  ,                                                00420200
.*-------------------------------------------------------------------   00420300
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00420400
&ZXCMDINFO       SETC  'INPUT'     SET IN/OUTPUT                        00420500
&XCMDINFO        SETC  '&CMDINFO(1)'            SET XVARIABLE           00420600
                 AIF   (N'&CMDINFO GT 1).ZG99B  MULTI PARMS             00420700
&XCMDINFO        SETC  '&CMDINFO'  SET XVARIABLE                        00420800
.ZG99B           AIF   (K'&CMDINFO(1) GT 0).ZG99C                       00420900
&ZXCMDINFO       SETC  ''          RESET IN/OUTPUT                      00421000
&ZMS             SETC  ' '         *KRQDA*                              00421100
&ZMS             SETC  '&ZMS "CMDINFO" KEY AND ITS'                     00421200
                 MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                 00421300
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00421400
.ZG99C           ANOP  ,                                                00421500
.*-------------------------------------------------------------------   00421600
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                00421700
                 AIF   (K'&ZXCMDINFO LE 0).ZG99R  NOT I/O               00421800
                 AIF   ('&XCMDINFO'(1,1) NE '(').ZG99R                  00421900
&ZCGPR           SETC  '&XCMDINFO'(2,K'&XCMDINFO-2)                     00422000
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG99P                     00422100
                 AIF   (K'&ZCGPR GT 2).ZG99Q                            00422200
                 AIF   ('&ZCGPR' EQ '0').ZG99Q                          00422300
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00422400
                 AIF   (T'&ZCGPR NE 'N').ZG99Q  INVALID REG NAME        00422500
.ZG99P           ANOP  ,                                                00422600
                 AIF   (T'&ZCGPR NE 'N').ZG99R  NON NUMERIC             00422700
                 AIF   ('&ZCGPR' LT '2').ZG99Q                          00422800
                 AIF   ('&ZCGPR' LE '12').ZG99R                         00422900
.ZG99Q           ANOP  ,                                                00423000
&ZMS             SETC  '"CMDINFO='              *KGPRA* MNOTE           00423100
&ZMS             SETC  '&ZMS.&CMDINFO"'                                 00423200
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00423300
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00423400
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00423500
.ZG99R           ANOP  ,                                                00423600
.*------------------------------------------------------------------    00423700
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00423800
.ZG101           ANOP  ,                                                00423900
&ZXLINKAGE       SETC  'INPUT'     SET IN/OUTPUT                        00424000
                 AIF   (K'&XLINKAGE GT 0).ZG101E  VALID ARG             00424100
                 AIF   (T'&LINKAGE EQ 'O').ZG101D  OMITTED              00424200
&ZASYSLNDX       SETA  0                                                00424300
.ZG101A          ANOP  ,           POSITIONAL MACRO KEY                 00424400
&ZASYSLNDX       SETA  &ZASYSLNDX+1                                     00424500
                 AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG101C                00424600
&ZTLC            SETC 'LINKAGE'                                         00424700
                 AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG101A       00424800
.ZG101B          ANOP  ,                                                00424900
&ZXLINKAGE       SETC  ''          RESET IN/OUTPUT                      00425000
&ZMS             SETC  'THE "LINKAGE" KEY'      *KOPTA* MNOTE           00425100
&ZMS             SETC  '&ZMS MUST CONTAIN ONE'                          00425200
                 MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                 00425300
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00425400
                 AGO   .ZG101E                                          00425500
.ZG101C          ANOP  ,                                                00425600
&ZXLINKAGE       SETC  ''          RESET IN/OUTPUT                      00425700
&ZMS             SETC  '"LINKAGE='              *KUKWA* MNOTE           00425800
&ZMS             SETC  '&ZMS.&LINKAGE"'                                 00425900
&ZMS             SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '        00426000
&ZMS             SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'              00426100
&ZMS             SETC  '&ZMS "SYSTEM"'                                  00426200
&ZMS             SETC  '&ZMS OR "INTERNAL".'                            00426300
                 MNOTE 8,' &ZMS '                                       00426400
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00426500
                 AGO   .ZG101E                                          00426600
.ZG101D          ANOP  ,                                                00426700
&XLINKAGE        SETC  'SYSTEM'    SET DEFAULT KEYWORD                  00426800
.ZG101E          ANOP  ,                                                00426900
.*----------------------------------------------------------------***   00427000
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00427100
                 AIF   (N'&RETCODE LE 1).ZG103A  CK NUM                 00427200
&ZMS             SETC  '"RETCODE='              *KPOSA* MNOTE           00427300
&ZMS             SETC  '&ZMS.&RETCODE"'                                 00427400
&ZMS             SETC  '&ZMS "RETCODE"'                                 00427500
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00427600
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00427700
.ZG103A          ANOP  ,                                                00427800
.*-------------------------------------------------------------------   00427900
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00428000
                 AIF   (K'&RETCODE(1) LE 0).ZG103C  NO PARM             00428100
&ZXRETCODE       SETC  'OUTPUT'    SET OUTPUT                           00428200
&XRETCODE        SETC  '&RETCODE(1)'            SET XVARIABLE           00428300
                 AIF   (N'&RETCODE GT 1).ZG103C                         00428400
&XRETCODE        SETC  '&RETCODE'  SET XVARIABLE                        00428500
.ZG103C          ANOP  ,                                                00428600
.*-------------------------------------------------------------------   00428700
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00428800
                 AIF   (K'&ZXRETCODE LE 0).ZG103R  NOT I/O              00428900
                 AIF   ('&XRETCODE'(1,1) NE '(').ZG103R                 00429000
&ZCGPR           SETC  '&XRETCODE'(2,K'&XRETCODE-2)                     00429100
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG103P                    00429200
                 AIF   (K'&ZCGPR GT 2).ZG103Q                           00429300
                 AIF   ('&ZCGPR' EQ '0').ZG103Q                         00429400
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00429500
                 AIF   (T'&ZCGPR NE 'N').ZG103Q  INVALID REG NAME       00429600
.ZG103P          ANOP  ,                                                00429700
                 AIF   (T'&ZCGPR NE 'N').ZG103R  NON NUMERIC            00429800
                 AIF   ('&ZCGPR' LT '2').ZG103Q                         00429900
                 AIF   ('&ZCGPR' LE '12').ZG103R                        00430000
.ZG103Q          ANOP  ,                                                00430100
&ZMS             SETC  '"RETCODE='              *KGPRA* MNOTE           00430200
&ZMS             SETC  '&ZMS.&RETCODE"'                                 00430300
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00430400
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00430500
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00430600
.ZG103R          ANOP  ,                                                00430700
.*----------------------------------------------------------------***   00430800
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00430900
                 AIF   (N'&RSNCODE LE 1).ZG106A  CK NUM                 00431000
&ZMS             SETC  '"RSNCODE='              *KPOSA* MNOTE           00431100
&ZMS             SETC  '&ZMS.&RSNCODE"'                                 00431200
&ZMS             SETC  '&ZMS "RSNCODE"'                                 00431300
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00431400
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00431500
.ZG106A          ANOP  ,                                                00431600
.*-------------------------------------------------------------------   00431700
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00431800
                 AIF   (K'&RSNCODE(1) LE 0).ZG106C  NO PARM             00431900
&ZXRSNCODE       SETC  'OUTPUT'    SET OUTPUT                           00432000
&XRSNCODE        SETC  '&RSNCODE(1)'            SET XVARIABLE           00432100
                 AIF   (N'&RSNCODE GT 1).ZG106C                         00432200
&XRSNCODE        SETC  '&RSNCODE'  SET XVARIABLE                        00432300
.ZG106C          ANOP  ,                                                00432400
.*-------------------------------------------------------------------   00432500
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00432600
                 AIF   (K'&ZXRSNCODE LE 0).ZG106R  NOT I/O              00432700
                 AIF   ('&XRSNCODE'(1,1) NE '(').ZG106R                 00432800
&ZCGPR           SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                     00432900
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG106P                    00433000
                 AIF   (K'&ZCGPR GT 2).ZG106Q                           00433100
                 AIF   ('&ZCGPR' EQ '0').ZG106Q                         00433200
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00433300
                 AIF   (T'&ZCGPR NE 'N').ZG106Q  INVALID REG NAME       00433400
.ZG106P          ANOP  ,                                                00433500
                 AIF   (T'&ZCGPR NE 'N').ZG106R  NON NUMERIC            00433600
                 AIF   ('&ZCGPR' LT '2').ZG106Q                         00433700
                 AIF   ('&ZCGPR' LE '12').ZG106R                        00433800
.ZG106Q          ANOP  ,                                                00433900
&ZMS             SETC  '"RSNCODE='              *KGPRA* MNOTE           00434000
&ZMS             SETC  '&ZMS.&RSNCODE"'                                 00434100
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00434200
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00434300
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00434400
.ZG106R          ANOP  ,                                                00434500
.******************************************************************     00434600
.***AH.P00 CHECK STANDALONE POSITIONAL VARIABLES                        00434700
.******************************************************************     00434800
                 ACTR  10000                                            00434900
.*----------------------------------------------------------------***   00435000
.***AH.P02 EXTRA POSITIONALS                                            00435100
                 AIF   (N'&SYSLIST LE 0).ZGLISTX  NO EXTRAS             00435200
                 AIF   (N'&SYSLIST NE 2).ZGLISTX1  NOT NULL             00435300
                 AIF   ('&SYSLIST(1)' NE '').ZGLISTX1  NOT NULL         00435400
                 AIF   ('&SYSLIST(2)' EQ '').ZGLISTX  NOT NULL          00435500
.ZGLISTX1        ANOP  ,                                                00435600
&ZCVAL           SETC  ''          ERROR FIELD                          00435700
&ZAWRK           SETA  0           POSITIONAL NUMBER                    00435800
.ZGLIST2         ANOP  ,                                                00435900
&ZAWRK           SETA  &ZAWRK+1    NEXT POSITIONAL                      00436000
                 AIF   (&ZAWRK GT N'&SYSLIST).ZGLIST3  DONE             00436100
&ZCVAL           SETC '&ZCVAL,&SYSLIST(&ZAWRK)'  EXTRA                  00436200
                 AGO   .ZGLIST2                                         00436300
.*                                                                      00436400
.ZGLIST3         ANOP  ,                                                00436500
&ZCVAL           SETC '&ZCVAL'(2,K'&ZCVAL-1)    STRIP COMMA             00436600
&ZMS             SETC  'POSITIONAL ARGUMENT(S),'  *PPOSA* MNOTE         00436700
&ZMS             SETC  '&ZMS "&ZCVAL"'                                  00436800
&ZMS             SETC  '&ZMS CANNOT BE USED.'                           00436900
&ZMS             SETC  '&ZMS NO POSITIONAL ARGUMENTS'                   00437000
                 MNOTE 8,' &ZMS ARE ALLOWED.'                           00437100
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00437200
.ZGLISTX         ANOP  ,                                                00437300
&ZASYSLNDX       SETA  0                                                00437400
.*-------------------------------------------------------------------   00437500
.***AG.MF04 MF=(SLME)                                                   00437600
.ZGMFX           ANOP  ,           END OF FULL SYNTAX CHECK             00437700
.********************************************************************   00437800
.***AE.MF01   PARTIAL MACRO SYNTAX CHECKING                             00437900
.********************************************************************   00438000
                 ACTR  10000                                            00438100
.*-------------------------------------------------------------------   00438200
.***AE.MF01 MF=(SLME)                                                   00438300
                 AIF   ('&XMF' EQ 'L').ZEMFX                            00438400
                 AIF   ('&XMFSCK' NE 'NOCHECK').ZEMFX                   00438500
.********************************************************************   00438600
.***AE.KC00 INITIALIZE KEYWORD CONTROL VARIABLES                        00438700
.********************************************************************   00438800
&XREQUEST        SETC  ''          INITIALIZE XVARIABLE                 00438900
&XMODINFOTYPE    SETC  ''          INITIALIZE XVARIABLE                 00439000
&XBYADDR         SETC  ''          INITIALIZE XVARIABLE                 00439100
&XAPFREQUIRED    SETC  ''          INITIALIZE XVARIABLE                 00439200
&XSECMODCHECK    SETC  ''          INITIALIZE XVARIABLE                 00439300
&XMODPROB        SETC  ''          INITIALIZE XVARIABLE                 00439400
&XTYPE           SETC  ''          INITIALIZE XVARIABLE                 00439500
&XLINKAGE        SETC  ''          INITIALIZE XVARIABLE                 00439600
.*-------------------------------------------------------------------   00439700
.***AE.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00439800
&ZTLC            SETC 'ADD'                                             00439900
                 AIF   ('&REQUEST(1)' NE '&ZTLC').ZE3A                  00440000
&XREQUEST        SETC  'ADD'       SET KEYWORD                          00440100
                 AIF   (N'&REQUEST LE 1).ZE3A   CK NUM                  00440200
&ZMS             SETC  '"REQUEST='              *KPOSA* MNOTE           00440300
&ZMS             SETC  '&ZMS.&REQUEST"'                                 00440400
&ZMS             SETC  '&ZMS "REQUEST"'                                 00440500
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00440600
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00440700
.ZE3A            ANOP  ,                                                00440800
.*-------------------------------------------------------------------   00440900
.***AE.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00441000
&ZTLC            SETC 'MEMBERLIST'                                      00441100
                 AIF   ('&MODINFOTYPE(1)' NE '&ZTLC').ZE6A              00441200
&XMODINFOTYPE    SETC  'MEMBERLIST'             SET KEYWORD             00441300
                 AIF   (N'&MODINFOTYPE LE 1).ZE6A  CK NUM               00441400
&ZMS             SETC  '"MODINFOTYPE='          *KPOSA* MNOTE           00441500
&ZMS             SETC  '&ZMS.&MODINFOTYPE"'                             00441600
&ZMS             SETC  '&ZMS "MODINFOTYPE"'                             00441700
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00441800
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00441900
.ZE6A            ANOP  ,                                                00442000
.*----------------------------------------------------------------***   00442100
.***AE.KXVAR03 NAME, RQD INOUT, KEYS -XVAR KEY                          00442200
                 AIF   (N'&MODINFO LE 1).ZE8A   CK NUM                  00442300
&ZMS             SETC  '"MODINFO='              *KPOSA* MNOTE           00442400
&ZMS             SETC  '&ZMS.&MODINFO"'                                 00442500
&ZMS             SETC  '&ZMS "MODINFO"'                                 00442600
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00442700
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00442800
.ZE8A            ANOP  ,                                                00442900
.*-------------------------------------------------------------------   00443000
.***AE.KXVAR04 NAME, RQD INOUT, KEYS -XVAR ARGUMENT                     00443100
                 AIF   (K'&MODINFO(1) LE 0).ZE8B NO PRM                 00443200
&ZXMODINFO       SETC  'INOUT'     SET IN/OUTPUT                        00443300
&XMODINFO        SETC  '&MODINFO(1)'            SET XVARIABLE           00443400
                 AIF   (N'&MODINFO GT 1).ZE8B                           00443500
.*               ANOP              MULTIPLE PARMS                       00443600
&XMODINFO        SETC  '&MODINFO'  SET XVARIABLE                        00443700
.ZE8B            ANOP  ,                                                00443800
.*-------------------------------------------------------------------   00443900
.***AE.KCK02 NAME, RQD INOUT, KEYS -GPR OUT OF RANGE                    00444000
                 AIF   (K'&ZXMODINFO LE 0).ZE8R  NOT I/O                00444100
                 AIF   ('&XMODINFO'(1,1) NE '(').ZE8R                   00444200
&ZCGPR           SETC  '&XMODINFO'(2,K'&XMODINFO-2)                     00444300
                 AIF   ('&ZCGPR'(1,1) NE '0').ZE8P                      00444400
                 AIF   (K'&ZCGPR GT 2).ZE8Q                             00444500
                 AIF   ('&ZCGPR' EQ '0').ZE8Q                           00444600
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00444700
                 AIF   (T'&ZCGPR NE 'N').ZE8Q   INVALID REG NAME        00444800
.ZE8P            ANOP  ,                                                00444900
                 AIF   (T'&ZCGPR NE 'N').ZE8R   NON NUMERIC             00445000
                 AIF   ('&ZCGPR' LT '2').ZE8Q                           00445100
                 AIF   ('&ZCGPR' LE '12').ZE8R                          00445200
.ZE8Q            ANOP  ,                                                00445300
&ZMS             SETC  '"MODINFO='              *KGPRA* MNOTE           00445400
&ZMS             SETC  '&ZMS.&MODINFO"'                                 00445500
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00445600
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00445700
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00445800
.ZE8R            ANOP  ,                                                00445900
.*----------------------------------------------------------------***   00446000
.***AE.KXVAR03 NAME, OPT INPUT, KEYS -XVAR KEY                          00446100
                 AIF   (N'&MODINFOX LE 1).ZE11A  CK NUM                 00446200
&ZMS             SETC  '"MODINFOX='             *KPOSA* MNOTE           00446300
&ZMS             SETC  '&ZMS.&MODINFOX"'                                00446400
&ZMS             SETC  '&ZMS "MODINFOX"'                                00446500
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00446600
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00446700
.ZE11A           ANOP  ,                                                00446800
.*-------------------------------------------------------------------   00446900
.***AE.KXVAR04 NAME, OPT INPUT, KEYS -XVAR ARGUMENT                     00447000
                 AIF   (K'&MODINFOX(1) LE 0).ZE11B NO PRM               00447100
&ZXMODINFOX      SETC  'INPUT'     SET IN/OUTPUT                        00447200
&XMODINFOX       SETC  '&MODINFOX(1)'           SET XVARIABLE           00447300
                 AIF   (N'&MODINFOX GT 1).ZE11B                         00447400
.*               ANOP              MULTIPLE PARMS                       00447500
&XMODINFOX       SETC  '&MODINFOX'              SET XVARIABLE           00447600
.ZE11B           ANOP  ,                                                00447700
.*-------------------------------------------------------------------   00447800
.***AE.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00447900
                 AIF   (K'&ZXMODINFOX LE 0).ZE11R  NOT I/O              00448000
                 AIF   ('&XMODINFOX'(1,1) NE '(').ZE11R                 00448100
&ZCGPR           SETC  '&XMODINFOX'(2,K'&XMODINFOX-2)                   00448200
                 AIF   ('&ZCGPR'(1,1) NE '0').ZE11P                     00448300
                 AIF   (K'&ZCGPR GT 2).ZE11Q                            00448400
                 AIF   ('&ZCGPR' EQ '0').ZE11Q                          00448500
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00448600
                 AIF   (T'&ZCGPR NE 'N').ZE11Q  INVALID REG NAME        00448700
.ZE11P           ANOP  ,                                                00448800
                 AIF   (T'&ZCGPR NE 'N').ZE11R  NON NUMERIC             00448900
                 AIF   ('&ZCGPR' LT '2').ZE11Q                          00449000
                 AIF   ('&ZCGPR' LE '12').ZE11R                         00449100
.ZE11Q           ANOP  ,                                                00449200
&ZMS             SETC  '"MODINFOX='             *KGPRA* MNOTE           00449300
&ZMS             SETC  '&ZMS.&MODINFOX"'                                00449400
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00449500
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00449600
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00449700
.ZE11R           ANOP  ,                                                00449800
.*----------------------------------------------------------------***   00449900
.***AE.KXVAR03 NAME, RQD INPUT, KEYS -XVAR KEY                          00450000
                 AIF   (N'&NUMMOD LE 1).ZE14A   CK NUM                  00450100
&ZMS             SETC  '"NUMMOD='  *KPOSA* MNOTE                        00450200
&ZMS             SETC  '&ZMS.&NUMMOD"'                                  00450300
&ZMS             SETC  '&ZMS "NUMMOD"'                                  00450400
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00450500
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00450600
.ZE14A           ANOP  ,                                                00450700
.*-------------------------------------------------------------------   00450800
.***AE.KXVAR04 NAME, RQD INPUT, KEYS -XVAR ARGUMENT                     00450900
                 AIF   (K'&NUMMOD(1) LE 0).ZE14B NO PRM                 00451000
&ZXNUMMOD        SETC  'INPUT'     SET IN/OUTPUT                        00451100
&XNUMMOD         SETC  '&NUMMOD(1)'             SET XVARIABLE           00451200
                 AIF   (N'&NUMMOD GT 1).ZE14B                           00451300
.*               ANOP              MULTIPLE PARMS                       00451400
&XNUMMOD         SETC  '&NUMMOD'   SET XVARIABLE                        00451500
.ZE14B           ANOP  ,                                                00451600
.*-------------------------------------------------------------------   00451700
.***AE.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00451800
                 AIF   (K'&ZXNUMMOD LE 0).ZE14R  NOT I/O                00451900
                 AIF   ('&XNUMMOD'(1,1) NE '(').ZE14R                   00452000
&ZCGPR           SETC  '&XNUMMOD'(2,K'&XNUMMOD-2)                       00452100
                 AIF   ('&ZCGPR'(1,1) NE '0').ZE14P                     00452200
                 AIF   (K'&ZCGPR GT 2).ZE14Q                            00452300
                 AIF   ('&ZCGPR' EQ '0').ZE14Q                          00452400
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00452500
                 AIF   (T'&ZCGPR NE 'N').ZE14Q  INVALID REG NAME        00452600
.ZE14P           ANOP  ,                                                00452700
                 AIF   (T'&ZCGPR NE 'N').ZE14R  NON NUMERIC             00452800
                 AIF   ('&ZCGPR' LT '2').ZE14Q                          00452900
                 AIF   ('&ZCGPR' LE '12').ZE14R                         00453000
.ZE14Q           ANOP  ,                                                00453100
&ZMS             SETC  '"NUMMOD='  *KGPRA* MNOTE                        00453200
&ZMS             SETC  '&ZMS.&NUMMOD"'                                  00453300
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00453400
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00453500
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00453600
.ZE14R           ANOP  ,                                                00453700
.*-------------------------------------------------------------------   00453800
.***AE.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00453900
&ZTLC            SETC 'NO'                                              00454000
                 AIF   ('&BYADDR(1)' NE '&ZTLC').ZE18A                  00454100
&XBYADDR         SETC  'NO'        SET KEYWORD                          00454200
                 AIF   (N'&BYADDR LE 1).ZE18A   CK NUM                  00454300
&ZMS             SETC  '"BYADDR='  *KPOSA* MNOTE                        00454400
&ZMS             SETC  '&ZMS.&BYADDR"'                                  00454500
&ZMS             SETC  '&ZMS "BYADDR"'                                  00454600
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00454700
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00454800
.ZE18A           ANOP  ,                                                00454900
.*----------------------------------------------------------------***   00455000
.***AE.KMEKY01 NAME, RQD INPUT, ME KEYS -XVARIABLE                      00455100
&XDUMMY1         SETC  ''          INITIALIZE XVARIABLE                 00455200
                 AIF   (K'&DSNAME LE 0).ZE20C                           00455300
&ZXDUMMY1        SETC  'INPUT'     SET IN/OUTPUT                        00455400
&XDUMMY1         SETC  'DSNAME'    SET XVARIABLE                        00455500
&ZXDSNAME        SETC  'INPUT'     SET IN/OUTPUT                        00455600
&XDSNAME         SETC  '&DSNAME(1)'             SET XVARIABLE PARM      00455700
                 AIF   (N'&DSNAME GT 1).ZE20A   MULTIPLE PARMS          00455800
&XDSNAME         SETC  '&DSNAME'   SET XVARIABLE PARM                   00455900
.ZE20A           AIF   (N'&DSNAME LE 1).ZE20B   CK NUM                  00456000
&ZMS             SETC  '"DSNAME='  *KPOSA* MNOTE                        00456100
&ZMS             SETC  '&ZMS.&DSNAME"'                                  00456200
&ZMS             SETC  '&ZMS "DSNAME"'                                  00456300
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00456400
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00456500
.ZE20B           AIF   (K'&XDSNAME GT 0).ZE20C  ONE PARM                00456600
&ZXDUMMY1        SETC  ''          RESET IN/OUTPUT                      00456700
&ZXDSNAME        SETC  ''          RESET IN/OUTPUT                      00456800
.ZE20C           ANOP  ,                                                00456900
.*----------------------------------------------------------------***   00457000
.***AE.KMEKY02 NAME, RQD INPUT, ME KEYS -NON-XVAR KEY                   00457100
                 AIF   (K'&DDNAME LE 0).ZE21D   NO ME KEY               00457200
                 AIF   (N'&DDNAME LE 1).ZE21A   CK NUM                  00457300
&ZMS             SETC  '"DDNAME='  *KPOSA* MNOTE                        00457400
&ZMS             SETC  '&ZMS.&DDNAME"'                                  00457500
&ZMS             SETC  '&ZMS "DDNAME"'                                  00457600
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00457700
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00457800
.ZE21A           AIF   (K'&XDUMMY1 LE 0).ZE21B                          00457900
&ZMS             SETC  '"DDNAME'   *KMEKA* MNOTE                        00458000
&ZMS             SETC  '&ZMS.=&DDNAME"'                                 00458100
&ZMS             SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'            00458200
&ZMS             SETC  '&ZMS "&XDUMMY1"'                                00458300
                 MNOTE 8,' &ZMS KEY.'                                   00458400
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00458500
                 AGO   .ZE21D                                           00458600
.*                                                                      00458700
.ZE21B           ANOP  ,                                                00458800
&ZXDUMMY1        SETC  'INPUT'     SET IN/OUTPUT                        00458900
&XDUMMY1         SETC  'DDNAME'    SET XVARIABLE                        00459000
&ZXDDNAME        SETC  'INPUT'     SET IN/OUTPUT                        00459100
&XDDNAME         SETC  '&DDNAME(1)'             SET PARM                00459200
                 AIF   (N'&DDNAME GT 1).ZE21C   MULTIPLE PARMS          00459300
&XDDNAME         SETC  '&DDNAME'   SET PARM                             00459400
.ZE21C           AIF   (K'&XDDNAME GT 0).ZE21D  ONE PARM                00459500
&ZXDUMMY1        SETC  ''          RESET IN/OUTPUT                      00459600
&ZXDDNAME        SETC  ''          RESET IN/OUTPUT                      00459700
.ZE21D           ANOP  ,                                                00459800
.*----------------------------------------------------------------***   00459900
.***AE.KMEKY02 NAME, RQD INPUT, ME KEYS -NON-XVAR KEY                   00460000
                 AIF   (K'&DCB LE 0).ZE22D      NO ME KEY               00460100
                 AIF   (N'&DCB LE 1).ZE22A      CK NUM                  00460200
&ZMS             SETC  '"DCB='     *KPOSA* MNOTE                        00460300
&ZMS             SETC  '&ZMS.&DCB"'                                     00460400
&ZMS             SETC  '&ZMS "DCB"'                                     00460500
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00460600
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00460700
.ZE22A           AIF   (K'&XDUMMY1 LE 0).ZE22B                          00460800
&ZMS             SETC  '"DCB'      *KMEKA* MNOTE                        00460900
&ZMS             SETC  '&ZMS.=&DCB"'                                    00461000
&ZMS             SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'            00461100
&ZMS             SETC  '&ZMS "&XDUMMY1"'                                00461200
                 MNOTE 8,' &ZMS KEY.'                                   00461300
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00461400
                 AGO   .ZE22D                                           00461500
.*                                                                      00461600
.ZE22B           ANOP  ,                                                00461700
&ZXDUMMY1        SETC  'INPUT'     SET IN/OUTPUT                        00461800
&XDUMMY1         SETC  'DCB'       SET XVARIABLE                        00461900
&ZXDCB           SETC  'INPUT'     SET IN/OUTPUT                        00462000
&XDCB            SETC  '&DCB(1)'   SET PARM                             00462100
                 AIF   (N'&DCB GT 1).ZE22C      MULTIPLE PARMS          00462200
&XDCB            SETC  '&DCB'      SET PARM                             00462300
.ZE22C           AIF   (K'&XDCB GT 0).ZE22D     ONE PARM                00462400
&ZXDUMMY1        SETC  ''          RESET IN/OUTPUT                      00462500
&ZXDCB           SETC  ''          RESET IN/OUTPUT                      00462600
.ZE22D           ANOP  ,                                                00462700
.*----------------------------------------------------------------***   00462800
.***AE.KMEKY02 NAME, RQD INPUT, ME KEYS -NON-XVAR KEY                   00462900
                 AIF   (K'&DCBPTR LE 0).ZE23D   NO ME KEY               00463000
                 AIF   (N'&DCBPTR LE 1).ZE23A   CK NUM                  00463100
&ZMS             SETC  '"DCBPTR='  *KPOSA* MNOTE                        00463200
&ZMS             SETC  '&ZMS.&DCBPTR"'                                  00463300
&ZMS             SETC  '&ZMS "DCBPTR"'                                  00463400
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00463500
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00463600
.ZE23A           AIF   (K'&XDUMMY1 LE 0).ZE23B                          00463700
&ZMS             SETC  '"DCBPTR'   *KMEKA* MNOTE                        00463800
&ZMS             SETC  '&ZMS.=&DCBPTR"'                                 00463900
&ZMS             SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'            00464000
&ZMS             SETC  '&ZMS "&XDUMMY1"'                                00464100
                 MNOTE 8,' &ZMS KEY.'                                   00464200
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00464300
                 AGO   .ZE23D                                           00464400
.*                                                                      00464500
.ZE23B           ANOP  ,                                                00464600
&ZXDUMMY1        SETC  'INPUT'     SET IN/OUTPUT                        00464700
&XDUMMY1         SETC  'DCBPTR'    SET XVARIABLE                        00464800
&ZXDCBPTR        SETC  'INPUT'     SET IN/OUTPUT                        00464900
&XDCBPTR         SETC  '&DCBPTR(1)'             SET PARM                00465000
                 AIF   (N'&DCBPTR GT 1).ZE23C   MULTIPLE PARMS          00465100
&XDCBPTR         SETC  '&DCBPTR'   SET PARM                             00465200
.ZE23C           AIF   (K'&XDCBPTR GT 0).ZE23D  ONE PARM                00465300
&ZXDUMMY1        SETC  ''          RESET IN/OUTPUT                      00465400
&ZXDCBPTR        SETC  ''          RESET IN/OUTPUT                      00465500
.ZE23D           ANOP  ,                                                00465600
.*------------------------------------------------------------------    00465700
.***AE.KMEKY07 NAME, RQD INPUT, ME KEYS -CHECK IF ENTERED               00465800
                 AIF   (K'&XDUMMY1 GT 0).ZE24B                          00465900
&ZXDUMMY1        SETC  ''          RESET IN/OUTPUT                      00466000
&XDUMMY1         SETC  ''          SET NULL                             00466100
&ZXDSNAME        SETC  ''          RESET OUTPUT                         00466200
&XDSNAME         SETC  ''          SET NULL PARM                        00466300
.ZE24B           ANOP  ,                                                00466400
.*-------------------------------------------------------------------   00466500
.***AE.KMEKY08 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           00466600
.ZE20     AIF   ('&XDUMMY1' NE 'DSNAME').ZE21                           00466700
.*-------------------------------------------------------------------   00466800
.***AE.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 00466900
                 AIF   (K'&ZXDSNAME LE 0).ZE20R  NOT I/O                00467000
                 AIF   ('&XDSNAME'(1,1) NE '(').ZE20R                   00467100
&ZCGPR           SETC  '&XDSNAME'(2,K'&XDSNAME-2)                       00467200
                 AIF   ('&ZCGPR'(1,1) NE '0').ZE20P                     00467300
                 AIF   (K'&ZCGPR GT 2).ZE20Q                            00467400
                 AIF   ('&ZCGPR' EQ '0').ZE20Q                          00467500
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00467600
                 AIF   (T'&ZCGPR NE 'N').ZE20Q  INVALID REG NAME        00467700
.ZE20P           ANOP  ,                                                00467800
                 AIF   (T'&ZCGPR NE 'N').ZE20R  NON NUMERIC             00467900
                 AIF   ('&ZCGPR' LT '2').ZE20Q                          00468000
                 AIF   ('&ZCGPR' LE '12').ZE20R                         00468100
.ZE20Q           ANOP  ,                                                00468200
&ZMS             SETC  '"DSNAME='  *KGPRA* MNOTE                        00468300
&ZMS             SETC  '&ZMS.&DSNAME"'                                  00468400
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00468500
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00468600
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00468700
.ZE20R           ANOP  ,                                                00468800
.*-------------------------------------------------------------------   00468900
.***AE.KMEKY08 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           00469000
.ZE21     AIF   ('&XDUMMY1' NE 'DDNAME').ZE22                           00469100
.*-------------------------------------------------------------------   00469200
.***AE.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 00469300
                 AIF   (K'&ZXDDNAME LE 0).ZE21R  NOT I/O                00469400
                 AIF   ('&XDDNAME'(1,1) NE '(').ZE21R                   00469500
&ZCGPR           SETC  '&XDDNAME'(2,K'&XDDNAME-2)                       00469600
                 AIF   ('&ZCGPR'(1,1) NE '0').ZE21P                     00469700
                 AIF   (K'&ZCGPR GT 2).ZE21Q                            00469800
                 AIF   ('&ZCGPR' EQ '0').ZE21Q                          00469900
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00470000
                 AIF   (T'&ZCGPR NE 'N').ZE21Q  INVALID REG NAME        00470100
.ZE21P           ANOP  ,                                                00470200
                 AIF   (T'&ZCGPR NE 'N').ZE21R  NON NUMERIC             00470300
                 AIF   ('&ZCGPR' LT '2').ZE21Q                          00470400
                 AIF   ('&ZCGPR' LE '12').ZE21R                         00470500
.ZE21Q           ANOP  ,                                                00470600
&ZMS             SETC  '"DDNAME='  *KGPRA* MNOTE                        00470700
&ZMS             SETC  '&ZMS.&DDNAME"'                                  00470800
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00470900
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00471000
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00471100
.ZE21R           ANOP  ,                                                00471200
.*-------------------------------------------------------------------   00471300
.***AE.KMEKY08 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           00471400
.ZE22     AIF   ('&XDUMMY1' NE 'DCB').ZE23                              00471500
.*-------------------------------------------------------------------   00471600
.***AE.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 00471700
                 AIF   (K'&ZXDCB LE 0).ZE22R    NOT I/O                 00471800
                 AIF   ('&XDCB'(1,1) NE '(').ZE22R                      00471900
&ZCGPR           SETC  '&XDCB'(2,K'&XDCB-2)                             00472000
                 AIF   ('&ZCGPR'(1,1) NE '0').ZE22P                     00472100
                 AIF   (K'&ZCGPR GT 2).ZE22Q                            00472200
                 AIF   ('&ZCGPR' EQ '0').ZE22Q                          00472300
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00472400
                 AIF   (T'&ZCGPR NE 'N').ZE22Q  INVALID REG NAME        00472500
.ZE22P           ANOP  ,                                                00472600
                 AIF   (T'&ZCGPR NE 'N').ZE22R  NON NUMERIC             00472700
                 AIF   ('&ZCGPR' LT '2').ZE22Q                          00472800
                 AIF   ('&ZCGPR' LE '12').ZE22R                         00472900
.ZE22Q           ANOP  ,                                                00473000
&ZMS             SETC  '"DCB='     *KGPRA* MNOTE                        00473100
&ZMS             SETC  '&ZMS.&DCB"'                                     00473200
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00473300
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00473400
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00473500
.ZE22R           ANOP  ,                                                00473600
.*-------------------------------------------------------------------   00473700
.***AE.KMEKY08 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           00473800
.ZE23     AIF   ('&XDUMMY1' NE 'DCBPTR').ZE24                           00473900
.*-------------------------------------------------------------------   00474000
.***AE.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 00474100
                 AIF   (K'&ZXDCBPTR LE 0).ZE23R  NOT I/O                00474200
                 AIF   ('&XDCBPTR'(1,1) NE '(').ZE23R                   00474300
&ZCGPR           SETC  '&XDCBPTR'(2,K'&XDCBPTR-2)                       00474400
                 AIF   ('&ZCGPR'(1,1) NE '0').ZE23P                     00474500
                 AIF   (K'&ZCGPR GT 2).ZE23Q                            00474600
                 AIF   ('&ZCGPR' EQ '0').ZE23Q                          00474700
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00474800
                 AIF   (T'&ZCGPR NE 'N').ZE23Q  INVALID REG NAME        00474900
.ZE23P           ANOP  ,                                                00475000
                 AIF   (T'&ZCGPR NE 'N').ZE23R  NON NUMERIC             00475100
                 AIF   ('&ZCGPR' LT '2').ZE23Q                          00475200
                 AIF   ('&ZCGPR' LE '12').ZE23R                         00475300
.ZE23Q           ANOP  ,                                                00475400
&ZMS             SETC  '"DCBPTR='  *KGPRA* MNOTE                        00475500
&ZMS             SETC  '&ZMS.&DCBPTR"'                                  00475600
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00475700
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00475800
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00475900
.ZE23R           ANOP  ,                                                00476000
.*-------------------------------------------------------------------   00476100
.***AE.KMEKY09 NAME, RQD INPUT, ME KEYS -END                            00476200
.ZE24            ANOP  ,           END MUTUALLY EXCLUSIVE KEYS          00476300
.*-------------------------------------------------------------------   00476400
.***AE.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00476500
&ZTLC            SETC 'YES'                                             00476600
                 AIF   ('&BYADDR(1)' NE '&ZTLC').ZE25A                  00476700
&XBYADDR         SETC  'YES'       SET KEYWORD                          00476800
                 AIF   (N'&BYADDR LE 1).ZE25A   CK NUM                  00476900
&ZMS             SETC  '"BYADDR='  *KPOSA* MNOTE                        00477000
&ZMS             SETC  '&ZMS.&BYADDR"'                                  00477100
&ZMS             SETC  '&ZMS "BYADDR"'                                  00477200
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00477300
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00477400
.ZE25A           ANOP  ,                                                00477500
.*------------------------------------------------------------------    00477600
.***AE.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00477700
.ZE26            AIF   (K'&XBYADDR GT 0).ZE26A  VALID                   00477800
                 AIF   (K'&BYADDR(1) LE 0).ZE26B                        00477900
&ZMS             SETC  '"BYADDR='  *KUKWA* MNOTE                        00478000
&ZMS             SETC  '&ZMS.&BYADDR"'                                  00478100
&ZMS             SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '        00478200
&ZMS             SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'              00478300
&ZMS             SETC  '&ZMS "NO"'                                      00478400
&ZMS             SETC  '&ZMS OR "YES".'                                 00478500
                 MNOTE 8,' &ZMS '                                       00478600
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00478700
                 AGO   .ZE26B                                           00478800
.*                                                                      00478900
.ZE26A           ANOP  ,                                                00479000
&ZXBYADDR        SETC  'INPUT'     SET IN/OUTPUT                        00479100
.ZE26B           ANOP  ,                                                00479200
.*-------------------------------------------------------------------   00479300
.***AE.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00479400
&ZTLC            SETC 'MEMBERMASK'                                      00479500
                 AIF   ('&MODINFOTYPE(1)' NE '&ZTLC').ZE27A             00479600
&XMODINFOTYPE    SETC  'MEMBERMASK'             SET KEYWORD             00479700
                 AIF   (N'&MODINFOTYPE LE 1).ZE27A  CK NUM              00479800
&ZMS             SETC  '"MODINFOTYPE='          *KPOSA* MNOTE           00479900
&ZMS             SETC  '&ZMS.&MODINFOTYPE"'                             00480000
&ZMS             SETC  '&ZMS "MODINFOTYPE"'                             00480100
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00480200
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00480300
.ZE27A           ANOP  ,                                                00480400
.*----------------------------------------------------------------***   00480500
.***AE.KXVAR03 NAME, RQD INOUT, KEYS -XVAR KEY                          00480600
                 AIF   (N'&MODINFO LE 1).ZE29A  CK NUM                  00480700
&ZMS             SETC  '"MODINFO='              *KPOSA* MNOTE           00480800
&ZMS             SETC  '&ZMS.&MODINFO"'                                 00480900
&ZMS             SETC  '&ZMS "MODINFO"'                                 00481000
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00481100
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00481200
.ZE29A           ANOP  ,                                                00481300
.*-------------------------------------------------------------------   00481400
.***AE.KXVAR04 NAME, RQD INOUT, KEYS -XVAR ARGUMENT                     00481500
                 AIF   (K'&MODINFO(1) LE 0).ZE29B NO PRM                00481600
&ZXMODINFO       SETC  'INOUT'     SET IN/OUTPUT                        00481700
&XMODINFO        SETC  '&MODINFO(1)'            SET XVARIABLE           00481800
                 AIF   (N'&MODINFO GT 1).ZE29B                          00481900
.*               ANOP              MULTIPLE PARMS                       00482000
&XMODINFO        SETC  '&MODINFO'  SET XVARIABLE                        00482100
.ZE29B           ANOP  ,                                                00482200
.*-------------------------------------------------------------------   00482300
.***AE.KCK02 NAME, RQD INOUT, KEYS -GPR OUT OF RANGE                    00482400
                 AIF   (K'&ZXMODINFO LE 0).ZE29R  NOT I/O               00482500
                 AIF   ('&XMODINFO'(1,1) NE '(').ZE29R                  00482600
&ZCGPR           SETC  '&XMODINFO'(2,K'&XMODINFO-2)                     00482700
                 AIF   ('&ZCGPR'(1,1) NE '0').ZE29P                     00482800
                 AIF   (K'&ZCGPR GT 2).ZE29Q                            00482900
                 AIF   ('&ZCGPR' EQ '0').ZE29Q                          00483000
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00483100
                 AIF   (T'&ZCGPR NE 'N').ZE29Q  INVALID REG NAME        00483200
.ZE29P           ANOP  ,                                                00483300
                 AIF   (T'&ZCGPR NE 'N').ZE29R  NON NUMERIC             00483400
                 AIF   ('&ZCGPR' LT '2').ZE29Q                          00483500
                 AIF   ('&ZCGPR' LE '12').ZE29R                         00483600
.ZE29Q           ANOP  ,                                                00483700
&ZMS             SETC  '"MODINFO='              *KGPRA* MNOTE           00483800
&ZMS             SETC  '&ZMS.&MODINFO"'                                 00483900
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00484000
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00484100
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00484200
.ZE29R           ANOP  ,                                                00484300
.*----------------------------------------------------------------***   00484400
.***AE.KMEKY01 NAME, RQD INPUT, ME KEYS -XVARIABLE                      00484500
&XDUMMY1         SETC  ''          INITIALIZE XVARIABLE                 00484600
                 AIF   (K'&MASKDSNAME LE 0).ZE32C                       00484700
&ZXDUMMY1        SETC  'INPUT'     SET IN/OUTPUT                        00484800
&XDUMMY1         SETC  'MASKDSNAME'             SET XVARIABLE           00484900
&ZXMASKDSNAME    SETC  'INPUT'     SET IN/OUTPUT                        00485000
&XMASKDSNAME     SETC  '&MASKDSNAME(1)'         SET XVARIABLE PARM      00485100
                 AIF   (N'&MASKDSNAME GT 1).ZE32A  MULTIPLE PARMS       00485200
&XMASKDSNAME     SETC  '&MASKDSNAME'            SET XVARIABLE PARM      00485300
.ZE32A           AIF   (N'&MASKDSNAME LE 1).ZE32B  CK NUM               00485400
&ZMS             SETC  '"MASKDSNAME='           *KPOSA* MNOTE           00485500
&ZMS             SETC  '&ZMS.&MASKDSNAME"'                              00485600
&ZMS             SETC  '&ZMS "MASKDSNAME"'                              00485700
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00485800
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00485900
.ZE32B           AIF   (K'&XMASKDSNAME GT 0).ZE32C  ONE PARM            00486000
&ZXDUMMY1        SETC  ''          RESET IN/OUTPUT                      00486100
&ZXMASKDSNAME    SETC  ''          RESET IN/OUTPUT                      00486200
.ZE32C           ANOP  ,                                                00486300
.*----------------------------------------------------------------***   00486400
.***AE.KMEKY02 NAME, RQD INPUT, ME KEYS -NON-XVAR KEY                   00486500
                 AIF   (K'&MASKDDNAME LE 0).ZE33D  NO ME KEY            00486600
                 AIF   (N'&MASKDDNAME LE 1).ZE33A  CK NUM               00486700
&ZMS             SETC  '"MASKDDNAME='           *KPOSA* MNOTE           00486800
&ZMS             SETC  '&ZMS.&MASKDDNAME"'                              00486900
&ZMS             SETC  '&ZMS "MASKDDNAME"'                              00487000
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00487100
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00487200
.ZE33A           AIF   (K'&XDUMMY1 LE 0).ZE33B                          00487300
&ZMS             SETC  '"MASKDDNAME'            *KMEKA* MNOTE           00487400
&ZMS             SETC  '&ZMS.=&MASKDDNAME"'                             00487500
&ZMS             SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'            00487600
&ZMS             SETC  '&ZMS "&XDUMMY1"'                                00487700
                 MNOTE 8,' &ZMS KEY.'                                   00487800
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00487900
                 AGO   .ZE33D                                           00488000
.*                                                                      00488100
.ZE33B           ANOP  ,                                                00488200
&ZXDUMMY1        SETC  'INPUT'     SET IN/OUTPUT                        00488300
&XDUMMY1         SETC  'MASKDDNAME'             SET XVARIABLE           00488400
&ZXMASKDDNAME    SETC  'INPUT'     SET IN/OUTPUT                        00488500
&XMASKDDNAME     SETC  '&MASKDDNAME(1)'         SET PARM                00488600
                 AIF   (N'&MASKDDNAME GT 1).ZE33C  MULTIPLE PARMS       00488700
&XMASKDDNAME     SETC  '&MASKDDNAME'            SET PARM                00488800
.ZE33C           AIF   (K'&XMASKDDNAME GT 0).ZE33D  ONE PARM            00488900
&ZXDUMMY1        SETC  ''          RESET IN/OUTPUT                      00489000
&ZXMASKDDNAME    SETC  ''          RESET IN/OUTPUT                      00489100
.ZE33D           ANOP  ,                                                00489200
.*----------------------------------------------------------------***   00489300
.***AE.KMEKY02 NAME, RQD INPUT, ME KEYS -NON-XVAR KEY                   00489400
                 AIF   (K'&MASKDCB LE 0).ZE34D  NO ME KEY               00489500
                 AIF   (N'&MASKDCB LE 1).ZE34A  CK NUM                  00489600
&ZMS             SETC  '"MASKDCB='              *KPOSA* MNOTE           00489700
&ZMS             SETC  '&ZMS.&MASKDCB"'                                 00489800
&ZMS             SETC  '&ZMS "MASKDCB"'                                 00489900
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00490000
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00490100
.ZE34A           AIF   (K'&XDUMMY1 LE 0).ZE34B                          00490200
&ZMS             SETC  '"MASKDCB'  *KMEKA* MNOTE                        00490300
&ZMS             SETC  '&ZMS.=&MASKDCB"'                                00490400
&ZMS             SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'            00490500
&ZMS             SETC  '&ZMS "&XDUMMY1"'                                00490600
                 MNOTE 8,' &ZMS KEY.'                                   00490700
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00490800
                 AGO   .ZE34D                                           00490900
.*                                                                      00491000
.ZE34B           ANOP  ,                                                00491100
&ZXDUMMY1        SETC  'INPUT'     SET IN/OUTPUT                        00491200
&XDUMMY1         SETC  'MASKDCB'   SET XVARIABLE                        00491300
&ZXMASKDCB       SETC  'INPUT'     SET IN/OUTPUT                        00491400
&XMASKDCB        SETC  '&MASKDCB(1)'            SET PARM                00491500
                 AIF   (N'&MASKDCB GT 1).ZE34C  MULTIPLE PARMS          00491600
&XMASKDCB        SETC  '&MASKDCB'  SET PARM                             00491700
.ZE34C           AIF   (K'&XMASKDCB GT 0).ZE34D  ONE PARM               00491800
&ZXDUMMY1        SETC  ''          RESET IN/OUTPUT                      00491900
&ZXMASKDCB       SETC  ''          RESET IN/OUTPUT                      00492000
.ZE34D           ANOP  ,                                                00492100
.*----------------------------------------------------------------***   00492200
.***AE.KMEKY02 NAME, RQD INPUT, ME KEYS -NON-XVAR KEY                   00492300
                 AIF   (K'&MASKDCBPTR LE 0).ZE35D  NO ME KEY            00492400
                 AIF   (N'&MASKDCBPTR LE 1).ZE35A  CK NUM               00492500
&ZMS             SETC  '"MASKDCBPTR='           *KPOSA* MNOTE           00492600
&ZMS             SETC  '&ZMS.&MASKDCBPTR"'                              00492700
&ZMS             SETC  '&ZMS "MASKDCBPTR"'                              00492800
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00492900
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00493000
.ZE35A           AIF   (K'&XDUMMY1 LE 0).ZE35B                          00493100
&ZMS             SETC  '"MASKDCBPTR'            *KMEKA* MNOTE           00493200
&ZMS             SETC  '&ZMS.=&MASKDCBPTR"'                             00493300
&ZMS             SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'            00493400
&ZMS             SETC  '&ZMS "&XDUMMY1"'                                00493500
                 MNOTE 8,' &ZMS KEY.'                                   00493600
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00493700
                 AGO   .ZE35D                                           00493800
.*                                                                      00493900
.ZE35B           ANOP  ,                                                00494000
&ZXDUMMY1        SETC  'INPUT'     SET IN/OUTPUT                        00494100
&XDUMMY1         SETC  'MASKDCBPTR'             SET XVARIABLE           00494200
&ZXMASKDCBPTR    SETC  'INPUT'     SET IN/OUTPUT                        00494300
&XMASKDCBPTR     SETC  '&MASKDCBPTR(1)'         SET PARM                00494400
                 AIF   (N'&MASKDCBPTR GT 1).ZE35C  MULTIPLE PARMS       00494500
&XMASKDCBPTR     SETC  '&MASKDCBPTR'            SET PARM                00494600
.ZE35C           AIF   (K'&XMASKDCBPTR GT 0).ZE35D  ONE PARM            00494700
&ZXDUMMY1        SETC  ''          RESET IN/OUTPUT                      00494800
&ZXMASKDCBPTR    SETC  ''          RESET IN/OUTPUT                      00494900
.ZE35D           ANOP  ,                                                00495000
.*------------------------------------------------------------------    00495100
.***AE.KMEKY07 NAME, RQD INPUT, ME KEYS -CHECK IF ENTERED               00495200
                 AIF   (K'&XDUMMY1 GT 0).ZE36B                          00495300
&ZXDUMMY1        SETC  ''          RESET IN/OUTPUT                      00495400
&XDUMMY1         SETC  ''          SET NULL                             00495500
&ZXMASKDSNAME    SETC  ''          RESET OUTPUT                         00495600
&XMASKDSNAME     SETC  ''          SET NULL PARM                        00495700
.ZE36B           ANOP  ,                                                00495800
.*-------------------------------------------------------------------   00495900
.***AE.KMEKY08 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           00496000
.ZE32     AIF   ('&XDUMMY1' NE 'MASKDSNAME').ZE33                       00496100
.*-------------------------------------------------------------------   00496200
.***AE.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 00496300
                 AIF   (K'&ZXMASKDSNAME LE 0).ZE32R  NOT I/O            00496400
                 AIF   ('&XMASKDSNAME'(1,1) NE '(').ZE32R               00496500
&ZCGPR           SETC  '&XMASKDSNAME'(2,K'&XMASKDSNAME-2)               00496600
                 AIF   ('&ZCGPR'(1,1) NE '0').ZE32P                     00496700
                 AIF   (K'&ZCGPR GT 2).ZE32Q                            00496800
                 AIF   ('&ZCGPR' EQ '0').ZE32Q                          00496900
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00497000
                 AIF   (T'&ZCGPR NE 'N').ZE32Q  INVALID REG NAME        00497100
.ZE32P           ANOP  ,                                                00497200
                 AIF   (T'&ZCGPR NE 'N').ZE32R  NON NUMERIC             00497300
                 AIF   ('&ZCGPR' LT '2').ZE32Q                          00497400
                 AIF   ('&ZCGPR' LE '12').ZE32R                         00497500
.ZE32Q           ANOP  ,                                                00497600
&ZMS             SETC  '"MASKDSNAME='           *KGPRA* MNOTE           00497700
&ZMS             SETC  '&ZMS.&MASKDSNAME"'                              00497800
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00497900
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00498000
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00498100
.ZE32R           ANOP  ,                                                00498200
.*-------------------------------------------------------------------   00498300
.***AE.KMEKY08 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           00498400
.ZE33     AIF   ('&XDUMMY1' NE 'MASKDDNAME').ZE34                       00498500
.*-------------------------------------------------------------------   00498600
.***AE.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 00498700
                 AIF   (K'&ZXMASKDDNAME LE 0).ZE33R  NOT I/O            00498800
                 AIF   ('&XMASKDDNAME'(1,1) NE '(').ZE33R               00498900
&ZCGPR           SETC  '&XMASKDDNAME'(2,K'&XMASKDDNAME-2)               00499000
                 AIF   ('&ZCGPR'(1,1) NE '0').ZE33P                     00499100
                 AIF   (K'&ZCGPR GT 2).ZE33Q                            00499200
                 AIF   ('&ZCGPR' EQ '0').ZE33Q                          00499300
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00499400
                 AIF   (T'&ZCGPR NE 'N').ZE33Q  INVALID REG NAME        00499500
.ZE33P           ANOP  ,                                                00499600
                 AIF   (T'&ZCGPR NE 'N').ZE33R  NON NUMERIC             00499700
                 AIF   ('&ZCGPR' LT '2').ZE33Q                          00499800
                 AIF   ('&ZCGPR' LE '12').ZE33R                         00499900
.ZE33Q           ANOP  ,                                                00500000
&ZMS             SETC  '"MASKDDNAME='           *KGPRA* MNOTE           00500100
&ZMS             SETC  '&ZMS.&MASKDDNAME"'                              00500200
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00500300
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00500400
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00500500
.ZE33R           ANOP  ,                                                00500600
.*-------------------------------------------------------------------   00500700
.***AE.KMEKY08 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           00500800
.ZE34     AIF   ('&XDUMMY1' NE 'MASKDCB').ZE35                          00500900
.*-------------------------------------------------------------------   00501000
.***AE.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 00501100
                 AIF   (K'&ZXMASKDCB LE 0).ZE34R  NOT I/O               00501200
                 AIF   ('&XMASKDCB'(1,1) NE '(').ZE34R                  00501300
&ZCGPR           SETC  '&XMASKDCB'(2,K'&XMASKDCB-2)                     00501400
                 AIF   ('&ZCGPR'(1,1) NE '0').ZE34P                     00501500
                 AIF   (K'&ZCGPR GT 2).ZE34Q                            00501600
                 AIF   ('&ZCGPR' EQ '0').ZE34Q                          00501700
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00501800
                 AIF   (T'&ZCGPR NE 'N').ZE34Q  INVALID REG NAME        00501900
.ZE34P           ANOP  ,                                                00502000
                 AIF   (T'&ZCGPR NE 'N').ZE34R  NON NUMERIC             00502100
                 AIF   ('&ZCGPR' LT '2').ZE34Q                          00502200
                 AIF   ('&ZCGPR' LE '12').ZE34R                         00502300
.ZE34Q           ANOP  ,                                                00502400
&ZMS             SETC  '"MASKDCB='              *KGPRA* MNOTE           00502500
&ZMS             SETC  '&ZMS.&MASKDCB"'                                 00502600
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00502700
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00502800
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00502900
.ZE34R           ANOP  ,                                                00503000
.*-------------------------------------------------------------------   00503100
.***AE.KMEKY08 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           00503200
.ZE35     AIF   ('&XDUMMY1' NE 'MASKDCBPTR').ZE36                       00503300
.*-------------------------------------------------------------------   00503400
.***AE.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 00503500
                 AIF   (K'&ZXMASKDCBPTR LE 0).ZE35R  NOT I/O            00503600
                 AIF   ('&XMASKDCBPTR'(1,1) NE '(').ZE35R               00503700
&ZCGPR           SETC  '&XMASKDCBPTR'(2,K'&XMASKDCBPTR-2)               00503800
                 AIF   ('&ZCGPR'(1,1) NE '0').ZE35P                     00503900
                 AIF   (K'&ZCGPR GT 2).ZE35Q                            00504000
                 AIF   ('&ZCGPR' EQ '0').ZE35Q                          00504100
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00504200
                 AIF   (T'&ZCGPR NE 'N').ZE35Q  INVALID REG NAME        00504300
.ZE35P           ANOP  ,                                                00504400
                 AIF   (T'&ZCGPR NE 'N').ZE35R  NON NUMERIC             00504500
                 AIF   ('&ZCGPR' LT '2').ZE35Q                          00504600
                 AIF   ('&ZCGPR' LE '12').ZE35R                         00504700
.ZE35Q           ANOP  ,                                                00504800
&ZMS             SETC  '"MASKDCBPTR='           *KGPRA* MNOTE           00504900
&ZMS             SETC  '&ZMS.&MASKDCBPTR"'                              00505000
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00505100
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00505200
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00505300
.ZE35R           ANOP  ,                                                00505400
.*-------------------------------------------------------------------   00505500
.***AE.KMEKY09 NAME, RQD INPUT, ME KEYS -END                            00505600
.ZE36            ANOP  ,           END MUTUALLY EXCLUSIVE KEYS          00505700
.*----------------------------------------------------------------***   00505800
.***AE.KXVAR03 NAME, RQD OUTPUT, KEYS -XVAR KEY                         00505900
                 AIF   (N'&OUTAREAPTR LE 1).ZE38A  CK NUM               00506000
&ZMS             SETC  '"OUTAREAPTR='           *KPOSA* MNOTE           00506100
&ZMS             SETC  '&ZMS.&OUTAREAPTR"'                              00506200
&ZMS             SETC  '&ZMS "OUTAREAPTR"'                              00506300
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00506400
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00506500
.ZE38A           ANOP  ,                                                00506600
.*-------------------------------------------------------------------   00506700
.***AE.KXVAR04 NAME, RQD OUTPUT, KEYS -XVAR ARGUMENT                    00506800
                 AIF   (K'&OUTAREAPTR(1) LE 0).ZE38B NO PRM             00506900
&ZXOUTAREAPTR    SETC  'OUTPUT'    SET IN/OUTPUT                        00507000
&XOUTAREAPTR     SETC  '&OUTAREAPTR(1)'         SET XVARIABLE           00507100
                 AIF   (N'&OUTAREAPTR GT 1).ZE38B                       00507200
.*               ANOP              MULTIPLE PARMS                       00507300
&XOUTAREAPTR     SETC  '&OUTAREAPTR'            SET XVARIABLE           00507400
.ZE38B           ANOP  ,                                                00507500
.*-------------------------------------------------------------------   00507600
.***AE.KCK02 NAME, RQD OUTPUT, KEYS -GPR OUT OF RANGE                   00507700
                 AIF   (K'&ZXOUTAREAPTR LE 0).ZE38R  NOT I/O            00507800
                 AIF   ('&XOUTAREAPTR'(1,1) NE '(').ZE38R               00507900
&ZCGPR           SETC  '&XOUTAREAPTR'(2,K'&XOUTAREAPTR-2)               00508000
                 AIF   ('&ZCGPR'(1,1) NE '0').ZE38P                     00508100
                 AIF   (K'&ZCGPR GT 2).ZE38Q                            00508200
                 AIF   ('&ZCGPR' EQ '0').ZE38Q                          00508300
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00508400
                 AIF   (T'&ZCGPR NE 'N').ZE38Q  INVALID REG NAME        00508500
.ZE38P           ANOP  ,                                                00508600
                 AIF   (T'&ZCGPR NE 'N').ZE38R  NON NUMERIC             00508700
                 AIF   ('&ZCGPR' LT '2').ZE38Q                          00508800
                 AIF   ('&ZCGPR' LE '12').ZE38R                         00508900
.ZE38Q           ANOP  ,                                                00509000
&ZMS             SETC  '"OUTAREAPTR='           *KGPRA* MNOTE           00509100
&ZMS             SETC  '&ZMS.&OUTAREAPTR"'                              00509200
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00509300
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00509400
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00509500
.ZE38R           ANOP  ,                                                00509600
.*----------------------------------------------------------------***   00509700
.***AE.KXVAR03 NAME, RQD OUTPUT, KEYS -XVAR KEY                         00509800
                 AIF   (N'&OUTAREALEN LE 1).ZE41A  CK NUM               00509900
&ZMS             SETC  '"OUTAREALEN='           *KPOSA* MNOTE           00510000
&ZMS             SETC  '&ZMS.&OUTAREALEN"'                              00510100
&ZMS             SETC  '&ZMS "OUTAREALEN"'                              00510200
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00510300
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00510400
.ZE41A           ANOP  ,                                                00510500
.*-------------------------------------------------------------------   00510600
.***AE.KXVAR04 NAME, RQD OUTPUT, KEYS -XVAR ARGUMENT                    00510700
                 AIF   (K'&OUTAREALEN(1) LE 0).ZE41B NO PRM             00510800
&ZXOUTAREALEN    SETC  'OUTPUT'    SET IN/OUTPUT                        00510900
&XOUTAREALEN     SETC  '&OUTAREALEN(1)'         SET XVARIABLE           00511000
                 AIF   (N'&OUTAREALEN GT 1).ZE41B                       00511100
.*               ANOP              MULTIPLE PARMS                       00511200
&XOUTAREALEN     SETC  '&OUTAREALEN'            SET XVARIABLE           00511300
.ZE41B           ANOP  ,                                                00511400
.*-------------------------------------------------------------------   00511500
.***AE.KCK02 NAME, RQD OUTPUT, KEYS -GPR OUT OF RANGE                   00511600
                 AIF   (K'&ZXOUTAREALEN LE 0).ZE41R  NOT I/O            00511700
                 AIF   ('&XOUTAREALEN'(1,1) NE '(').ZE41R               00511800
&ZCGPR           SETC  '&XOUTAREALEN'(2,K'&XOUTAREALEN-2)               00511900
                 AIF   ('&ZCGPR'(1,1) NE '0').ZE41P                     00512000
                 AIF   (K'&ZCGPR GT 2).ZE41Q                            00512100
                 AIF   ('&ZCGPR' EQ '0').ZE41Q                          00512200
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00512300
                 AIF   (T'&ZCGPR NE 'N').ZE41Q  INVALID REG NAME        00512400
.ZE41P           ANOP  ,                                                00512500
                 AIF   (T'&ZCGPR NE 'N').ZE41R  NON NUMERIC             00512600
                 AIF   ('&ZCGPR' LT '2').ZE41Q                          00512700
                 AIF   ('&ZCGPR' LE '12').ZE41R                         00512800
.ZE41Q           ANOP  ,                                                00512900
&ZMS             SETC  '"OUTAREALEN='           *KGPRA* MNOTE           00513000
&ZMS             SETC  '&ZMS.&OUTAREALEN"'                              00513100
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00513200
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00513300
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00513400
.ZE41R           ANOP  ,                                                00513500
.*----------------------------------------------------------------***   00513600
.***AE.KXVAR03 NAME, RQD OUTPUT, KEYS -XVAR KEY                         00513700
                 AIF   (N'&OUTAREANUM LE 1).ZE44A  CK NUM               00513800
&ZMS             SETC  '"OUTAREANUM='           *KPOSA* MNOTE           00513900
&ZMS             SETC  '&ZMS.&OUTAREANUM"'                              00514000
&ZMS             SETC  '&ZMS "OUTAREANUM"'                              00514100
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00514200
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00514300
.ZE44A           ANOP  ,                                                00514400
.*-------------------------------------------------------------------   00514500
.***AE.KXVAR04 NAME, RQD OUTPUT, KEYS -XVAR ARGUMENT                    00514600
                 AIF   (K'&OUTAREANUM(1) LE 0).ZE44B NO PRM             00514700
&ZXOUTAREANUM    SETC  'OUTPUT'    SET IN/OUTPUT                        00514800
&XOUTAREANUM     SETC  '&OUTAREANUM(1)'         SET XVARIABLE           00514900
                 AIF   (N'&OUTAREANUM GT 1).ZE44B                       00515000
.*               ANOP              MULTIPLE PARMS                       00515100
&XOUTAREANUM     SETC  '&OUTAREANUM'            SET XVARIABLE           00515200
.ZE44B           ANOP  ,                                                00515300
.*-------------------------------------------------------------------   00515400
.***AE.KCK02 NAME, RQD OUTPUT, KEYS -GPR OUT OF RANGE                   00515500
                 AIF   (K'&ZXOUTAREANUM LE 0).ZE44R  NOT I/O            00515600
                 AIF   ('&XOUTAREANUM'(1,1) NE '(').ZE44R               00515700
&ZCGPR           SETC  '&XOUTAREANUM'(2,K'&XOUTAREANUM-2)               00515800
                 AIF   ('&ZCGPR'(1,1) NE '0').ZE44P                     00515900
                 AIF   (K'&ZCGPR GT 2).ZE44Q                            00516000
                 AIF   ('&ZCGPR' EQ '0').ZE44Q                          00516100
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00516200
                 AIF   (T'&ZCGPR NE 'N').ZE44Q  INVALID REG NAME        00516300
.ZE44P           ANOP  ,                                                00516400
                 AIF   (T'&ZCGPR NE 'N').ZE44R  NON NUMERIC             00516500
                 AIF   ('&ZCGPR' LT '2').ZE44Q                          00516600
                 AIF   ('&ZCGPR' LE '12').ZE44R                         00516700
.ZE44Q           ANOP  ,                                                00516800
&ZMS             SETC  '"OUTAREANUM='           *KGPRA* MNOTE           00516900
&ZMS             SETC  '&ZMS.&OUTAREANUM"'                              00517000
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00517100
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00517200
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00517300
.ZE44R           ANOP  ,                                                00517400
.*----------------------------------------------------------------***   00517500
.***AE.KXVAR03 NAME, RQD INOUT, KEYS -XVAR KEY                          00517600
                 AIF   (N'&OUTAREASP LE 1).ZE47A  CK NUM                00517700
&ZMS             SETC  '"OUTAREASP='            *KPOSA* MNOTE           00517800
&ZMS             SETC  '&ZMS.&OUTAREASP"'                               00517900
&ZMS             SETC  '&ZMS "OUTAREASP"'                               00518000
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00518100
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00518200
.ZE47A           ANOP  ,                                                00518300
.*-------------------------------------------------------------------   00518400
.***AE.KXVAR04 NAME, RQD INOUT, KEYS -XVAR ARGUMENT                     00518500
                 AIF   (K'&OUTAREASP(1) LE 0).ZE47B NO PRM              00518600
&ZXOUTAREASP     SETC  'INOUT'     SET IN/OUTPUT                        00518700
&XOUTAREASP      SETC  '&OUTAREASP(1)'          SET XVARIABLE           00518800
                 AIF   (N'&OUTAREASP GT 1).ZE47B                        00518900
.*               ANOP              MULTIPLE PARMS                       00519000
&XOUTAREASP      SETC  '&OUTAREASP'             SET XVARIABLE           00519100
.ZE47B           ANOP  ,                                                00519200
.*-------------------------------------------------------------------   00519300
.***AE.KCK02 NAME, RQD INOUT, KEYS -GPR OUT OF RANGE                    00519400
                 AIF   (K'&ZXOUTAREASP LE 0).ZE47R  NOT I/O             00519500
                 AIF   ('&XOUTAREASP'(1,1) NE '(').ZE47R                00519600
&ZCGPR           SETC  '&XOUTAREASP'(2,K'&XOUTAREASP-2)                 00519700
                 AIF   ('&ZCGPR'(1,1) NE '0').ZE47P                     00519800
                 AIF   (K'&ZCGPR GT 2).ZE47Q                            00519900
                 AIF   ('&ZCGPR' EQ '0').ZE47Q                          00520000
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00520100
                 AIF   (T'&ZCGPR NE 'N').ZE47Q  INVALID REG NAME        00520200
.ZE47P           ANOP  ,                                                00520300
                 AIF   (T'&ZCGPR NE 'N').ZE47R  NON NUMERIC             00520400
                 AIF   ('&ZCGPR' LT '2').ZE47Q                          00520500
                 AIF   ('&ZCGPR' LE '12').ZE47R                         00520600
.ZE47Q           ANOP  ,                                                00520700
&ZMS             SETC  '"OUTAREASP='            *KGPRA* MNOTE           00520800
&ZMS             SETC  '&ZMS.&OUTAREASP"'                               00520900
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00521000
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00521100
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00521200
.ZE47R           ANOP  ,                                                00521300
.*------------------------------------------------------------------    00521400
.***AE.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00521500
.ZE49            AIF   (K'&XMODINFOTYPE GT 0).ZE49A  VALID              00521600
                 AIF   (K'&MODINFOTYPE(1) LE 0).ZE49B                   00521700
&ZMS             SETC  '"MODINFOTYPE='          *KUKWA* MNOTE           00521800
&ZMS             SETC  '&ZMS.&MODINFOTYPE"'                             00521900
&ZMS             SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '        00522000
&ZMS             SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'              00522100
&ZMS             SETC  '&ZMS "MEMBERLIST"'                              00522200
&ZMS             SETC  '&ZMS OR "MEMBERMASK".'                          00522300
                 MNOTE 8,' &ZMS '                                       00522400
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00522500
                 AGO   .ZE49B                                           00522600
.*                                                                      00522700
.ZE49A           ANOP  ,                                                00522800
&ZXMODINFOTYPE   SETC  'INPUT'     SET IN/OUTPUT                        00522900
.ZE49B           ANOP  ,                                                00523000
.*-------------------------------------------------------------------   00523100
.***AE.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00523200
&ZTLC            SETC 'YES'                                             00523300
                 AIF   ('&APFREQUIRED(1)' NE '&ZTLC').ZE52A             00523400
&XAPFREQUIRED    SETC  'YES'       SET KEYWORD                          00523500
                 AIF   (N'&APFREQUIRED LE 1).ZE52A  CK NUM              00523600
&ZMS             SETC  '"APFREQUIRED='          *KPOSA* MNOTE           00523700
&ZMS             SETC  '&ZMS.&APFREQUIRED"'                             00523800
&ZMS             SETC  '&ZMS "APFREQUIRED"'                             00523900
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00524000
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00524100
.ZE52A           ANOP  ,                                                00524200
.*-------------------------------------------------------------------   00524300
.***AE.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00524400
&ZTLC            SETC 'NO'                                              00524500
                 AIF   ('&APFREQUIRED(1)' NE '&ZTLC').ZE53A             00524600
&XAPFREQUIRED    SETC  'NO'        SET KEYWORD                          00524700
                 AIF   (N'&APFREQUIRED LE 1).ZE53A  CK NUM              00524800
&ZMS             SETC  '"APFREQUIRED='          *KPOSA* MNOTE           00524900
&ZMS             SETC  '&ZMS.&APFREQUIRED"'                             00525000
&ZMS             SETC  '&ZMS "APFREQUIRED"'                             00525100
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00525200
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00525300
.ZE53A           ANOP  ,                                                00525400
.*------------------------------------------------------------------    00525500
.***AE.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00525600
.ZE54            AIF   (K'&XAPFREQUIRED GT 0).ZE54A  VALID              00525700
                 AIF   (K'&APFREQUIRED(1) LE 0).ZE54B                   00525800
&ZMS             SETC  '"APFREQUIRED='          *KUKWA* MNOTE           00525900
&ZMS             SETC  '&ZMS.&APFREQUIRED"'                             00526000
&ZMS             SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '        00526100
&ZMS             SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'              00526200
&ZMS             SETC  '&ZMS "YES"'                                     00526300
&ZMS             SETC  '&ZMS OR "NO".'                                  00526400
                 MNOTE 8,' &ZMS '                                       00526500
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00526600
                 AGO   .ZE54B                                           00526700
.*                                                                      00526800
.ZE54A           ANOP  ,                                                00526900
&ZXAPFREQUIRED   SETC  'INPUT'     SET IN/OUTPUT                        00527000
.ZE54B           ANOP  ,                                                00527100
.*-------------------------------------------------------------------   00527200
.***AE.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00527300
&ZTLC            SETC 'YES'                                             00527400
                 AIF   ('&SECMODCHECK(1)' NE '&ZTLC').ZE57A             00527500
&XSECMODCHECK    SETC  'YES'       SET KEYWORD                          00527600
                 AIF   (N'&SECMODCHECK LE 1).ZE57A  CK NUM              00527700
&ZMS             SETC  '"SECMODCHECK='          *KPOSA* MNOTE           00527800
&ZMS             SETC  '&ZMS.&SECMODCHECK"'                             00527900
&ZMS             SETC  '&ZMS "SECMODCHECK"'                             00528000
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00528100
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00528200
.ZE57A           ANOP  ,                                                00528300
.*-------------------------------------------------------------------   00528400
.***AE.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00528500
&ZTLC            SETC 'NO'                                              00528600
                 AIF   ('&SECMODCHECK(1)' NE '&ZTLC').ZE58A             00528700
&XSECMODCHECK    SETC  'NO'        SET KEYWORD                          00528800
                 AIF   (N'&SECMODCHECK LE 1).ZE58A  CK NUM              00528900
&ZMS             SETC  '"SECMODCHECK='          *KPOSA* MNOTE           00529000
&ZMS             SETC  '&ZMS.&SECMODCHECK"'                             00529100
&ZMS             SETC  '&ZMS "SECMODCHECK"'                             00529200
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00529300
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00529400
.ZE58A           ANOP  ,                                                00529500
.*------------------------------------------------------------------    00529600
.***AE.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00529700
.ZE59            AIF   (K'&XSECMODCHECK GT 0).ZE59A  VALID              00529800
                 AIF   (K'&SECMODCHECK(1) LE 0).ZE59B                   00529900
&ZMS             SETC  '"SECMODCHECK='          *KUKWA* MNOTE           00530000
&ZMS             SETC  '&ZMS.&SECMODCHECK"'                             00530100
&ZMS             SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '        00530200
&ZMS             SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'              00530300
&ZMS             SETC  '&ZMS "YES"'                                     00530400
&ZMS             SETC  '&ZMS OR "NO".'                                  00530500
                 MNOTE 8,' &ZMS '                                       00530600
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00530700
                 AGO   .ZE59B                                           00530800
.*                                                                      00530900
.ZE59A           ANOP  ,                                                00531000
&ZXSECMODCHECK   SETC  'INPUT'     SET IN/OUTPUT                        00531100
.ZE59B           ANOP  ,                                                00531200
.*----------------------------------------------------------------***   00531300
.***AE.KXVAR03 NAME, RQD INPUT, KEYS -XVAR KEY                          00531400
                 AIF   (N'&REQUESTOR LE 1).ZE61A  CK NUM                00531500
&ZMS             SETC  '"REQUESTOR='            *KPOSA* MNOTE           00531600
&ZMS             SETC  '&ZMS.&REQUESTOR"'                               00531700
&ZMS             SETC  '&ZMS "REQUESTOR"'                               00531800
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00531900
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00532000
.ZE61A           ANOP  ,                                                00532100
.*-------------------------------------------------------------------   00532200
.***AE.KXVAR04 NAME, RQD INPUT, KEYS -XVAR ARGUMENT                     00532300
                 AIF   (K'&REQUESTOR(1) LE 0).ZE61B NO PRM              00532400
&ZXREQUESTOR     SETC  'INPUT'     SET IN/OUTPUT                        00532500
&XREQUESTOR      SETC  '&REQUESTOR(1)'          SET XVARIABLE           00532600
                 AIF   (N'&REQUESTOR GT 1).ZE61B                        00532700
.*               ANOP              MULTIPLE PARMS                       00532800
&XREQUESTOR      SETC  '&REQUESTOR'             SET XVARIABLE           00532900
.ZE61B           ANOP  ,                                                00533000
.*-------------------------------------------------------------------   00533100
.***AE.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00533200
                 AIF   (K'&ZXREQUESTOR LE 0).ZE61R  NOT I/O             00533300
                 AIF   ('&XREQUESTOR'(1,1) NE '(').ZE61R                00533400
&ZCGPR           SETC  '&XREQUESTOR'(2,K'&XREQUESTOR-2)                 00533500
                 AIF   ('&ZCGPR'(1,1) NE '0').ZE61P                     00533600
                 AIF   (K'&ZCGPR GT 2).ZE61Q                            00533700
                 AIF   ('&ZCGPR' EQ '0').ZE61Q                          00533800
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00533900
                 AIF   (T'&ZCGPR NE 'N').ZE61Q  INVALID REG NAME        00534000
.ZE61P           ANOP  ,                                                00534100
                 AIF   (T'&ZCGPR NE 'N').ZE61R  NON NUMERIC             00534200
                 AIF   ('&ZCGPR' LT '2').ZE61Q                          00534300
                 AIF   ('&ZCGPR' LE '12').ZE61R                         00534400
.ZE61Q           ANOP  ,                                                00534500
&ZMS             SETC  '"REQUESTOR='            *KGPRA* MNOTE           00534600
&ZMS             SETC  '&ZMS.&REQUESTOR"'                               00534700
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00534800
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00534900
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00535000
.ZE61R           ANOP  ,                                                00535100
.*-------------------------------------------------------------------   00535200
.***AE.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00535300
&ZTLC            SETC 'CONTINUE'                                        00535400
                 AIF   ('&MODPROB(1)' NE '&ZTLC').ZE65A                 00535500
&XMODPROB        SETC  'CONTINUE'  SET KEYWORD                          00535600
                 AIF   (N'&MODPROB LE 1).ZE65A  CK NUM                  00535700
&ZMS             SETC  '"MODPROB='              *KPOSA* MNOTE           00535800
&ZMS             SETC  '&ZMS.&MODPROB"'                                 00535900
&ZMS             SETC  '&ZMS "MODPROB"'                                 00536000
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00536100
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00536200
.ZE65A           ANOP  ,                                                00536300
.*-------------------------------------------------------------------   00536400
.***AE.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00536500
&ZTLC            SETC 'STOP'                                            00536600
                 AIF   ('&MODPROB(1)' NE '&ZTLC').ZE66A                 00536700
&XMODPROB        SETC  'STOP'      SET KEYWORD                          00536800
                 AIF   (N'&MODPROB LE 1).ZE66A  CK NUM                  00536900
&ZMS             SETC  '"MODPROB='              *KPOSA* MNOTE           00537000
&ZMS             SETC  '&ZMS.&MODPROB"'                                 00537100
&ZMS             SETC  '&ZMS "MODPROB"'                                 00537200
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00537300
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00537400
.ZE66A           ANOP  ,                                                00537500
.*------------------------------------------------------------------    00537600
.***AE.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00537700
.ZE67            AIF   (K'&XMODPROB GT 0).ZE67A  VALID                  00537800
                 AIF   (K'&MODPROB(1) LE 0).ZE67B                       00537900
&ZMS             SETC  '"MODPROB='              *KUKWA* MNOTE           00538000
&ZMS             SETC  '&ZMS.&MODPROB"'                                 00538100
&ZMS             SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '        00538200
&ZMS             SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'              00538300
&ZMS             SETC  '&ZMS "CONTINUE"'                                00538400
&ZMS             SETC  '&ZMS OR "STOP".'                                00538500
                 MNOTE 8,' &ZMS '                                       00538600
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00538700
                 AGO   .ZE67B                                           00538800
.*                                                                      00538900
.ZE67A           ANOP  ,                                                00539000
&ZXMODPROB       SETC  'INPUT'     SET IN/OUTPUT                        00539100
.ZE67B           ANOP  ,                                                00539200
.*----------------------------------------------------------------***   00539300
.***AE.KXVAR03 NAME, OPT OUTPUT, KEYS -XVAR KEY                         00539400
                 AIF   (N'&ERRORDATA LE 1).ZE69A  CK NUM                00539500
&ZMS             SETC  '"ERRORDATA='            *KPOSA* MNOTE           00539600
&ZMS             SETC  '&ZMS.&ERRORDATA"'                               00539700
&ZMS             SETC  '&ZMS "ERRORDATA"'                               00539800
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00539900
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00540000
.ZE69A           ANOP  ,                                                00540100
.*-------------------------------------------------------------------   00540200
.***AE.KXVAR04 NAME, OPT OUTPUT, KEYS -XVAR ARGUMENT                    00540300
                 AIF   (K'&ERRORDATA(1) LE 0).ZE69B NO PRM              00540400
&ZXERRORDATA     SETC  'OUTPUT'    SET IN/OUTPUT                        00540500
&XERRORDATA      SETC  '&ERRORDATA(1)'          SET XVARIABLE           00540600
                 AIF   (N'&ERRORDATA GT 1).ZE69B                        00540700
.*               ANOP              MULTIPLE PARMS                       00540800
&XERRORDATA      SETC  '&ERRORDATA'             SET XVARIABLE           00540900
.ZE69B           ANOP  ,                                                00541000
.*-------------------------------------------------------------------   00541100
.***AE.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00541200
                 AIF   (K'&ZXERRORDATA LE 0).ZE69R  NOT I/O             00541300
                 AIF   ('&XERRORDATA'(1,1) NE '(').ZE69R                00541400
&ZCGPR           SETC  '&XERRORDATA'(2,K'&XERRORDATA-2)                 00541500
                 AIF   ('&ZCGPR'(1,1) NE '0').ZE69P                     00541600
                 AIF   (K'&ZCGPR GT 2).ZE69Q                            00541700
                 AIF   ('&ZCGPR' EQ '0').ZE69Q                          00541800
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00541900
                 AIF   (T'&ZCGPR NE 'N').ZE69Q  INVALID REG NAME        00542000
.ZE69P           ANOP  ,                                                00542100
                 AIF   (T'&ZCGPR NE 'N').ZE69R  NON NUMERIC             00542200
                 AIF   ('&ZCGPR' LT '2').ZE69Q                          00542300
                 AIF   ('&ZCGPR' LE '12').ZE69R                         00542400
.ZE69Q           ANOP  ,                                                00542500
&ZMS             SETC  '"ERRORDATA='            *KGPRA* MNOTE           00542600
&ZMS             SETC  '&ZMS.&ERRORDATA"'                               00542700
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00542800
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00542900
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00543000
.ZE69R           ANOP  ,                                                00543100
.*-------------------------------------------------------------------   00543200
.***AE.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00543300
&ZTLC            SETC 'DELETE'                                          00543400
                 AIF   ('&REQUEST(1)' NE '&ZTLC').ZE71A                 00543500
&XREQUEST        SETC  'DELETE'    SET KEYWORD                          00543600
                 AIF   (N'&REQUEST LE 1).ZE71A  CK NUM                  00543700
&ZMS             SETC  '"REQUEST='              *KPOSA* MNOTE           00543800
&ZMS             SETC  '&ZMS.&REQUEST"'                                 00543900
&ZMS             SETC  '&ZMS "REQUEST"'                                 00544000
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00544100
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00544200
.ZE71A           ANOP  ,                                                00544300
.*----------------------------------------------------------------***   00544400
.***AE.KXVAR03 NAME, RQD INOUT, KEYS -XVAR KEY                          00544500
                 AIF   (N'&MODINFO LE 1).ZE73A  CK NUM                  00544600
&ZMS             SETC  '"MODINFO='              *KPOSA* MNOTE           00544700
&ZMS             SETC  '&ZMS.&MODINFO"'                                 00544800
&ZMS             SETC  '&ZMS "MODINFO"'                                 00544900
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00545000
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00545100
.ZE73A           ANOP  ,                                                00545200
.*-------------------------------------------------------------------   00545300
.***AE.KXVAR04 NAME, RQD INOUT, KEYS -XVAR ARGUMENT                     00545400
                 AIF   (K'&MODINFO(1) LE 0).ZE73B NO PRM                00545500
&ZXMODINFO       SETC  'INOUT'     SET IN/OUTPUT                        00545600
&XMODINFO        SETC  '&MODINFO(1)'            SET XVARIABLE           00545700
                 AIF   (N'&MODINFO GT 1).ZE73B                          00545800
.*               ANOP              MULTIPLE PARMS                       00545900
&XMODINFO        SETC  '&MODINFO'  SET XVARIABLE                        00546000
.ZE73B           ANOP  ,                                                00546100
.*-------------------------------------------------------------------   00546200
.***AE.KCK02 NAME, RQD INOUT, KEYS -GPR OUT OF RANGE                    00546300
                 AIF   (K'&ZXMODINFO LE 0).ZE73R  NOT I/O               00546400
                 AIF   ('&XMODINFO'(1,1) NE '(').ZE73R                  00546500
&ZCGPR           SETC  '&XMODINFO'(2,K'&XMODINFO-2)                     00546600
                 AIF   ('&ZCGPR'(1,1) NE '0').ZE73P                     00546700
                 AIF   (K'&ZCGPR GT 2).ZE73Q                            00546800
                 AIF   ('&ZCGPR' EQ '0').ZE73Q                          00546900
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00547000
                 AIF   (T'&ZCGPR NE 'N').ZE73Q  INVALID REG NAME        00547100
.ZE73P           ANOP  ,                                                00547200
                 AIF   (T'&ZCGPR NE 'N').ZE73R  NON NUMERIC             00547300
                 AIF   ('&ZCGPR' LT '2').ZE73Q                          00547400
                 AIF   ('&ZCGPR' LE '12').ZE73R                         00547500
.ZE73Q           ANOP  ,                                                00547600
&ZMS             SETC  '"MODINFO='              *KGPRA* MNOTE           00547700
&ZMS             SETC  '&ZMS.&MODINFO"'                                 00547800
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00547900
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00548000
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00548100
.ZE73R           ANOP  ,                                                00548200
.*----------------------------------------------------------------***   00548300
.***AE.KXVAR03 NAME, RQD INPUT, KEYS -XVAR KEY                          00548400
                 AIF   (N'&NUMMOD LE 1).ZE76A   CK NUM                  00548500
&ZMS             SETC  '"NUMMOD='  *KPOSA* MNOTE                        00548600
&ZMS             SETC  '&ZMS.&NUMMOD"'                                  00548700
&ZMS             SETC  '&ZMS "NUMMOD"'                                  00548800
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00548900
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00549000
.ZE76A           ANOP  ,                                                00549100
.*-------------------------------------------------------------------   00549200
.***AE.KXVAR04 NAME, RQD INPUT, KEYS -XVAR ARGUMENT                     00549300
                 AIF   (K'&NUMMOD(1) LE 0).ZE76B NO PRM                 00549400
&ZXNUMMOD        SETC  'INPUT'     SET IN/OUTPUT                        00549500
&XNUMMOD         SETC  '&NUMMOD(1)'             SET XVARIABLE           00549600
                 AIF   (N'&NUMMOD GT 1).ZE76B                           00549700
.*               ANOP              MULTIPLE PARMS                       00549800
&XNUMMOD         SETC  '&NUMMOD'   SET XVARIABLE                        00549900
.ZE76B           ANOP  ,                                                00550000
.*-------------------------------------------------------------------   00550100
.***AE.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00550200
                 AIF   (K'&ZXNUMMOD LE 0).ZE76R  NOT I/O                00550300
                 AIF   ('&XNUMMOD'(1,1) NE '(').ZE76R                   00550400
&ZCGPR           SETC  '&XNUMMOD'(2,K'&XNUMMOD-2)                       00550500
                 AIF   ('&ZCGPR'(1,1) NE '0').ZE76P                     00550600
                 AIF   (K'&ZCGPR GT 2).ZE76Q                            00550700
                 AIF   ('&ZCGPR' EQ '0').ZE76Q                          00550800
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00550900
                 AIF   (T'&ZCGPR NE 'N').ZE76Q  INVALID REG NAME        00551000
.ZE76P           ANOP  ,                                                00551100
                 AIF   (T'&ZCGPR NE 'N').ZE76R  NON NUMERIC             00551200
                 AIF   ('&ZCGPR' LT '2').ZE76Q                          00551300
                 AIF   ('&ZCGPR' LE '12').ZE76R                         00551400
.ZE76Q           ANOP  ,                                                00551500
&ZMS             SETC  '"NUMMOD='  *KGPRA* MNOTE                        00551600
&ZMS             SETC  '&ZMS.&NUMMOD"'                                  00551700
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00551800
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00551900
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00552000
.ZE76R           ANOP  ,                                                00552100
.*-------------------------------------------------------------------   00552200
.***AE.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00552300
&ZTLC            SETC 'BYTOKEN'                                         00552400
                 AIF   ('&TYPE(1)' NE '&ZTLC').ZE80A                    00552500
&XTYPE           SETC  'BYTOKEN'   SET KEYWORD                          00552600
                 AIF   (N'&TYPE LE 1).ZE80A     CK NUM                  00552700
&ZMS             SETC  '"TYPE='    *KPOSA* MNOTE                        00552800
&ZMS             SETC  '&ZMS.&TYPE"'                                    00552900
&ZMS             SETC  '&ZMS "TYPE"'                                    00553000
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00553100
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00553200
.ZE80A           ANOP  ,                                                00553300
.*-------------------------------------------------------------------   00553400
.***AE.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00553500
&ZTLC            SETC 'CURRENT'                                         00553600
                 AIF   ('&TYPE(1)' NE '&ZTLC').ZE81A                    00553700
&XTYPE           SETC  'CURRENT'   SET KEYWORD                          00553800
                 AIF   (N'&TYPE LE 1).ZE81A     CK NUM                  00553900
&ZMS             SETC  '"TYPE='    *KPOSA* MNOTE                        00554000
&ZMS             SETC  '&ZMS.&TYPE"'                                    00554100
&ZMS             SETC  '&ZMS "TYPE"'                                    00554200
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00554300
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00554400
.ZE81A           ANOP  ,                                                00554500
.*-------------------------------------------------------------------   00554600
.***AE.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00554700
&ZTLC            SETC 'OLDEST'                                          00554800
                 AIF   ('&TYPE(1)' NE '&ZTLC').ZE82A                    00554900
&XTYPE           SETC  'OLDEST'    SET KEYWORD                          00555000
                 AIF   (N'&TYPE LE 1).ZE82A     CK NUM                  00555100
&ZMS             SETC  '"TYPE='    *KPOSA* MNOTE                        00555200
&ZMS             SETC  '&ZMS.&TYPE"'                                    00555300
&ZMS             SETC  '&ZMS "TYPE"'                                    00555400
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00555500
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00555600
.ZE82A           ANOP  ,                                                00555700
.*------------------------------------------------------------------    00555800
.***AE.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00555900
.ZE83            AIF   (K'&XTYPE GT 0).ZE83A    VALID                   00556000
                 AIF   (K'&TYPE(1) LE 0).ZE83B                          00556100
&ZMS             SETC  '"TYPE='    *KUKWA* MNOTE                        00556200
&ZMS             SETC  '&ZMS.&TYPE"'                                    00556300
&ZMS             SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '        00556400
&ZMS             SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'              00556500
&ZMS             SETC  '&ZMS "BYTOKEN",'                                00556600
&ZMS             SETC  '&ZMS "CURRENT",'                                00556700
&ZMS             SETC  '&ZMS OR "OLDEST".'                              00556800
                 MNOTE 8,' &ZMS '                                       00556900
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00557000
                 AGO   .ZE83B                                           00557100
.*                                                                      00557200
.ZE83A           ANOP  ,                                                00557300
&ZXTYPE          SETC  'INPUT'     SET IN/OUTPUT                        00557400
.ZE83B           ANOP  ,                                                00557500
.*-------------------------------------------------------------------   00557600
.***AE.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00557700
&ZTLC            SETC 'YES'                                             00557800
                 AIF   ('&SECMODCHECK(1)' NE '&ZTLC').ZE86A             00557900
&XSECMODCHECK    SETC  'YES'       SET KEYWORD                          00558000
                 AIF   (N'&SECMODCHECK LE 1).ZE86A  CK NUM              00558100
&ZMS             SETC  '"SECMODCHECK='          *KPOSA* MNOTE           00558200
&ZMS             SETC  '&ZMS.&SECMODCHECK"'                             00558300
&ZMS             SETC  '&ZMS "SECMODCHECK"'                             00558400
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00558500
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00558600
.ZE86A           ANOP  ,                                                00558700
.*-------------------------------------------------------------------   00558800
.***AE.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00558900
&ZTLC            SETC 'NO'                                              00559000
                 AIF   ('&SECMODCHECK(1)' NE '&ZTLC').ZE87A             00559100
&XSECMODCHECK    SETC  'NO'        SET KEYWORD                          00559200
                 AIF   (N'&SECMODCHECK LE 1).ZE87A  CK NUM              00559300
&ZMS             SETC  '"SECMODCHECK='          *KPOSA* MNOTE           00559400
&ZMS             SETC  '&ZMS.&SECMODCHECK"'                             00559500
&ZMS             SETC  '&ZMS "SECMODCHECK"'                             00559600
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00559700
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00559800
.ZE87A           ANOP  ,                                                00559900
.*------------------------------------------------------------------    00560000
.***AE.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00560100
.ZE88            AIF   (K'&XSECMODCHECK GT 0).ZE88A  VALID              00560200
                 AIF   (K'&SECMODCHECK(1) LE 0).ZE88B                   00560300
&ZMS             SETC  '"SECMODCHECK='          *KUKWA* MNOTE           00560400
&ZMS             SETC  '&ZMS.&SECMODCHECK"'                             00560500
&ZMS             SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '        00560600
&ZMS             SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'              00560700
&ZMS             SETC  '&ZMS "YES"'                                     00560800
&ZMS             SETC  '&ZMS OR "NO".'                                  00560900
                 MNOTE 8,' &ZMS '                                       00561000
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00561100
                 AGO   .ZE88B                                           00561200
.*                                                                      00561300
.ZE88A           ANOP  ,                                                00561400
&ZXSECMODCHECK   SETC  'INPUT'     SET IN/OUTPUT                        00561500
.ZE88B           ANOP  ,                                                00561600
.*-------------------------------------------------------------------   00561700
.***AE.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00561800
&ZTLC            SETC 'QUERYDYN'                                        00561900
                 AIF   ('&REQUEST(1)' NE '&ZTLC').ZE89A                 00562000
&XREQUEST        SETC  'QUERYDYN'  SET KEYWORD                          00562100
                 AIF   (N'&REQUEST LE 1).ZE89A  CK NUM                  00562200
&ZMS             SETC  '"REQUEST='              *KPOSA* MNOTE           00562300
&ZMS             SETC  '&ZMS.&REQUEST"'                                 00562400
&ZMS             SETC  '&ZMS "REQUEST"'                                 00562500
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00562600
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00562700
.ZE89A           ANOP  ,                                                00562800
.*----------------------------------------------------------------***   00562900
.***AE.KXVAR03 NAME, RQD OUTPUT, KEYS -XVAR KEY                         00563000
                 AIF   (N'&DYNFUNC LE 1).ZE91A  CK NUM                  00563100
&ZMS             SETC  '"DYNFUNC='              *KPOSA* MNOTE           00563200
&ZMS             SETC  '&ZMS.&DYNFUNC"'                                 00563300
&ZMS             SETC  '&ZMS "DYNFUNC"'                                 00563400
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00563500
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00563600
.ZE91A           ANOP  ,                                                00563700
.*-------------------------------------------------------------------   00563800
.***AE.KXVAR04 NAME, RQD OUTPUT, KEYS -XVAR ARGUMENT                    00563900
                 AIF   (K'&DYNFUNC(1) LE 0).ZE91B NO PRM                00564000
&ZXDYNFUNC       SETC  'OUTPUT'    SET IN/OUTPUT                        00564100
&XDYNFUNC        SETC  '&DYNFUNC(1)'            SET XVARIABLE           00564200
                 AIF   (N'&DYNFUNC GT 1).ZE91B                          00564300
.*               ANOP              MULTIPLE PARMS                       00564400
&XDYNFUNC        SETC  '&DYNFUNC'  SET XVARIABLE                        00564500
.ZE91B           ANOP  ,                                                00564600
.*-------------------------------------------------------------------   00564700
.***AE.KCK02 NAME, RQD OUTPUT, KEYS -GPR OUT OF RANGE                   00564800
                 AIF   (K'&ZXDYNFUNC LE 0).ZE91R  NOT I/O               00564900
                 AIF   ('&XDYNFUNC'(1,1) NE '(').ZE91R                  00565000
&ZCGPR           SETC  '&XDYNFUNC'(2,K'&XDYNFUNC-2)                     00565100
                 AIF   ('&ZCGPR'(1,1) NE '0').ZE91P                     00565200
                 AIF   (K'&ZCGPR GT 2).ZE91Q                            00565300
                 AIF   ('&ZCGPR' EQ '0').ZE91Q                          00565400
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00565500
                 AIF   (T'&ZCGPR NE 'N').ZE91Q  INVALID REG NAME        00565600
.ZE91P           ANOP  ,                                                00565700
                 AIF   (T'&ZCGPR NE 'N').ZE91R  NON NUMERIC             00565800
                 AIF   ('&ZCGPR' LT '2').ZE91Q                          00565900
                 AIF   ('&ZCGPR' LE '12').ZE91R                         00566000
.ZE91Q           ANOP  ,                                                00566100
&ZMS             SETC  '"DYNFUNC='              *KGPRA* MNOTE           00566200
&ZMS             SETC  '&ZMS.&DYNFUNC"'                                 00566300
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00566400
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00566500
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00566600
.ZE91R           ANOP  ,                                                00566700
.*------------------------------------------------------------------    00566800
.***AE.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00566900
.ZE93            AIF   (K'&XREQUEST GT 0).ZE93A  VALID                  00567000
                 AIF   (K'&REQUEST(1) LE 0).ZE93B                       00567100
&ZMS             SETC  '"REQUEST='              *KUKWA* MNOTE           00567200
&ZMS             SETC  '&ZMS.&REQUEST"'                                 00567300
&ZMS             SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '        00567400
&ZMS             SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'              00567500
&ZMS             SETC  '&ZMS "ADD",'                                    00567600
&ZMS             SETC  '&ZMS "DELETE",'                                 00567700
&ZMS             SETC  '&ZMS OR "QUERYDYN".'                            00567800
                 MNOTE 8,' &ZMS '                                       00567900
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00568000
                 AGO   .ZE93B                                           00568100
.*                                                                      00568200
.ZE93A           ANOP  ,                                                00568300
&ZXREQUEST       SETC  'INPUT'     SET IN/OUTPUT                        00568400
.ZE93B           ANOP  ,                                                00568500
.*-------------------------------------------------------------------   00568600
.***AE.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00568700
&ZTLC            SETC 'SYSTEM'                                          00568800
                 AIF   ('&LINKAGE(1)' NE '&ZTLC').ZE96A                 00568900
&XLINKAGE        SETC  'SYSTEM'    SET KEYWORD                          00569000
                 AIF   (N'&LINKAGE LE 1).ZE96A  CK NUM                  00569100
&ZMS             SETC  '"LINKAGE='              *KPOSA* MNOTE           00569200
&ZMS             SETC  '&ZMS.&LINKAGE"'                                 00569300
&ZMS             SETC  '&ZMS "LINKAGE"'                                 00569400
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00569500
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00569600
.ZE96A           ANOP  ,                                                00569700
.*-------------------------------------------------------------------   00569800
.***AE.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00569900
&ZTLC            SETC 'INTERNAL'                                        00570000
                 AIF   ('&LINKAGE(1)' NE '&ZTLC').ZE97A                 00570100
&XLINKAGE        SETC  'INTERNAL'  SET KEYWORD                          00570200
                 AIF   (N'&LINKAGE LE 1).ZE97A  CK NUM                  00570300
&ZMS             SETC  '"LINKAGE='              *KPOSA* MNOTE           00570400
&ZMS             SETC  '&ZMS.&LINKAGE"'                                 00570500
&ZMS             SETC  '&ZMS "LINKAGE"'                                 00570600
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00570700
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00570800
.ZE97A           ANOP  ,                                                00570900
.*----------------------------------------------------------------***   00571000
.***AE.KXVAR03 NAME, RQD INPUT, KEYS -XVAR KEY                          00571100
                 AIF   (N'&CMDINFO LE 1).ZE99A  CK NUM                  00571200
&ZMS             SETC  '"CMDINFO='              *KPOSA* MNOTE           00571300
&ZMS             SETC  '&ZMS.&CMDINFO"'                                 00571400
&ZMS             SETC  '&ZMS "CMDINFO"'                                 00571500
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00571600
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00571700
.ZE99A           ANOP  ,                                                00571800
.*-------------------------------------------------------------------   00571900
.***AE.KXVAR04 NAME, RQD INPUT, KEYS -XVAR ARGUMENT                     00572000
                 AIF   (K'&CMDINFO(1) LE 0).ZE99B NO PRM                00572100
&ZXCMDINFO       SETC  'INPUT'     SET IN/OUTPUT                        00572200
&XCMDINFO        SETC  '&CMDINFO(1)'            SET XVARIABLE           00572300
                 AIF   (N'&CMDINFO GT 1).ZE99B                          00572400
.*               ANOP              MULTIPLE PARMS                       00572500
&XCMDINFO        SETC  '&CMDINFO'  SET XVARIABLE                        00572600
.ZE99B           ANOP  ,                                                00572700
.*-------------------------------------------------------------------   00572800
.***AE.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00572900
                 AIF   (K'&ZXCMDINFO LE 0).ZE99R  NOT I/O               00573000
                 AIF   ('&XCMDINFO'(1,1) NE '(').ZE99R                  00573100
&ZCGPR           SETC  '&XCMDINFO'(2,K'&XCMDINFO-2)                     00573200
                 AIF   ('&ZCGPR'(1,1) NE '0').ZE99P                     00573300
                 AIF   (K'&ZCGPR GT 2).ZE99Q                            00573400
                 AIF   ('&ZCGPR' EQ '0').ZE99Q                          00573500
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00573600
                 AIF   (T'&ZCGPR NE 'N').ZE99Q  INVALID REG NAME        00573700
.ZE99P           ANOP  ,                                                00573800
                 AIF   (T'&ZCGPR NE 'N').ZE99R  NON NUMERIC             00573900
                 AIF   ('&ZCGPR' LT '2').ZE99Q                          00574000
                 AIF   ('&ZCGPR' LE '12').ZE99R                         00574100
.ZE99Q           ANOP  ,                                                00574200
&ZMS             SETC  '"CMDINFO='              *KGPRA* MNOTE           00574300
&ZMS             SETC  '&ZMS.&CMDINFO"'                                 00574400
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00574500
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00574600
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00574700
.ZE99R           ANOP  ,                                                00574800
.*------------------------------------------------------------------    00574900
.***AE.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00575000
.ZE101           AIF   (K'&XLINKAGE GT 0).ZE101A  VALID                 00575100
                 AIF   (K'&LINKAGE(1) LE 0).ZE101B                      00575200
&ZMS             SETC  '"LINKAGE='              *KUKWA* MNOTE           00575300
&ZMS             SETC  '&ZMS.&LINKAGE"'                                 00575400
&ZMS             SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '        00575500
&ZMS             SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'              00575600
&ZMS             SETC  '&ZMS "SYSTEM"'                                  00575700
&ZMS             SETC  '&ZMS OR "INTERNAL".'                            00575800
                 MNOTE 8,' &ZMS '                                       00575900
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00576000
                 AGO   .ZE101B                                          00576100
.*                                                                      00576200
.ZE101A          ANOP  ,                                                00576300
&ZXLINKAGE       SETC  'INPUT'     SET IN/OUTPUT                        00576400
.ZE101B          ANOP  ,                                                00576500
.*----------------------------------------------------------------***   00576600
.***AE.KXVAR03 NAME, OPT OUTPUT, KEYS -XVAR KEY                         00576700
                 AIF   (N'&RETCODE LE 1).ZE103A  CK NUM                 00576800
&ZMS             SETC  '"RETCODE='              *KPOSA* MNOTE           00576900
&ZMS             SETC  '&ZMS.&RETCODE"'                                 00577000
&ZMS             SETC  '&ZMS "RETCODE"'                                 00577100
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00577200
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00577300
.ZE103A          ANOP  ,                                                00577400
.*-------------------------------------------------------------------   00577500
.***AE.KXVAR04 NAME, OPT OUTPUT, KEYS -XVAR ARGUMENT                    00577600
                 AIF   (K'&RETCODE(1) LE 0).ZE103B NO PRM               00577700
&ZXRETCODE       SETC  'OUTPUT'    SET IN/OUTPUT                        00577800
&XRETCODE        SETC  '&RETCODE(1)'            SET XVARIABLE           00577900
                 AIF   (N'&RETCODE GT 1).ZE103B                         00578000
.*               ANOP              MULTIPLE PARMS                       00578100
&XRETCODE        SETC  '&RETCODE'  SET XVARIABLE                        00578200
.ZE103B          ANOP  ,                                                00578300
.*-------------------------------------------------------------------   00578400
.***AE.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00578500
                 AIF   (K'&ZXRETCODE LE 0).ZE103R  NOT I/O              00578600
                 AIF   ('&XRETCODE'(1,1) NE '(').ZE103R                 00578700
&ZCGPR           SETC  '&XRETCODE'(2,K'&XRETCODE-2)                     00578800
                 AIF   ('&ZCGPR'(1,1) NE '0').ZE103P                    00578900
                 AIF   (K'&ZCGPR GT 2).ZE103Q                           00579000
                 AIF   ('&ZCGPR' EQ '0').ZE103Q                         00579100
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00579200
                 AIF   (T'&ZCGPR NE 'N').ZE103Q  INVALID REG NAME       00579300
.ZE103P          ANOP  ,                                                00579400
                 AIF   (T'&ZCGPR NE 'N').ZE103R  NON NUMERIC            00579500
                 AIF   ('&ZCGPR' LT '2').ZE103Q                         00579600
                 AIF   ('&ZCGPR' LE '12').ZE103R                        00579700
.ZE103Q          ANOP  ,                                                00579800
&ZMS             SETC  '"RETCODE='              *KGPRA* MNOTE           00579900
&ZMS             SETC  '&ZMS.&RETCODE"'                                 00580000
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00580100
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00580200
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00580300
.ZE103R          ANOP  ,                                                00580400
.*----------------------------------------------------------------***   00580500
.***AE.KXVAR03 NAME, OPT OUTPUT, KEYS -XVAR KEY                         00580600
                 AIF   (N'&RSNCODE LE 1).ZE106A  CK NUM                 00580700
&ZMS             SETC  '"RSNCODE='              *KPOSA* MNOTE           00580800
&ZMS             SETC  '&ZMS.&RSNCODE"'                                 00580900
&ZMS             SETC  '&ZMS "RSNCODE"'                                 00581000
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00581100
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00581200
.ZE106A          ANOP  ,                                                00581300
.*-------------------------------------------------------------------   00581400
.***AE.KXVAR04 NAME, OPT OUTPUT, KEYS -XVAR ARGUMENT                    00581500
                 AIF   (K'&RSNCODE(1) LE 0).ZE106B NO PRM               00581600
&ZXRSNCODE       SETC  'OUTPUT'    SET IN/OUTPUT                        00581700
&XRSNCODE        SETC  '&RSNCODE(1)'            SET XVARIABLE           00581800
                 AIF   (N'&RSNCODE GT 1).ZE106B                         00581900
.*               ANOP              MULTIPLE PARMS                       00582000
&XRSNCODE        SETC  '&RSNCODE'  SET XVARIABLE                        00582100
.ZE106B          ANOP  ,                                                00582200
.*-------------------------------------------------------------------   00582300
.***AE.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00582400
                 AIF   (K'&ZXRSNCODE LE 0).ZE106R  NOT I/O              00582500
                 AIF   ('&XRSNCODE'(1,1) NE '(').ZE106R                 00582600
&ZCGPR           SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                     00582700
                 AIF   ('&ZCGPR'(1,1) NE '0').ZE106P                    00582800
                 AIF   (K'&ZCGPR GT 2).ZE106Q                           00582900
                 AIF   ('&ZCGPR' EQ '0').ZE106Q                         00583000
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00583100
                 AIF   (T'&ZCGPR NE 'N').ZE106Q  INVALID REG NAME       00583200
.ZE106P          ANOP  ,                                                00583300
                 AIF   (T'&ZCGPR NE 'N').ZE106R  NON NUMERIC            00583400
                 AIF   ('&ZCGPR' LT '2').ZE106Q                         00583500
                 AIF   ('&ZCGPR' LE '12').ZE106R                        00583600
.ZE106Q          ANOP  ,                                                00583700
&ZMS             SETC  '"RSNCODE='              *KGPRA* MNOTE           00583800
&ZMS             SETC  '&ZMS.&RSNCODE"'                                 00583900
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00584000
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00584100
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00584200
.ZE106R          ANOP  ,                                                00584300
.******************************************************************     00584400
.***AF.P00 CHECK STANDALONE POSITIONAL VARIABLES                        00584500
.******************************************************************     00584600
                 ACTR  10000                                            00584700
.*----------------------------------------------------------------***   00584800
.***AF.P02 EXTRA POSITIONALS                                            00584900
                 AIF   (N'&SYSLIST LE 0).ZELISTX  NO EXTRAS             00585000
&ZCVAL           SETC  ''          ERROR FIELD                          00585100
&ZAWRK           SETA  0           POSITIONAL NUMBER                    00585200
.ZELIST2         ANOP  ,                                                00585300
&ZAWRK           SETA  &ZAWRK+1    NEXT POSITIONAL                      00585400
                 AIF   (&ZAWRK GT N'&SYSLIST).ZELIST3  DONE             00585500
&ZCVAL           SETC '&ZCVAL,&SYSLIST(&ZAWRK)'  EXTRA                  00585600
                 AGO   .ZELIST2                                         00585700
.*                                                                      00585800
.ZELIST3         ANOP  ,                                                00585900
&ZCVAL           SETC '&ZCVAL'(2,K'&ZCVAL-1)    STRIP COMMA             00586000
&ZMS             SETC  'POSITIONAL ARGUMENT(S),'  *PPOSA* MNOTE         00586100
&ZMS             SETC  '&ZMS "&ZCVAL"'                                  00586200
&ZMS             SETC  '&ZMS CANNOT BE USED.'                           00586300
&ZMS             SETC  '&ZMS NO POSITIONAL ARGUMENTS'                   00586400
                 MNOTE 8,' &ZMS ARE ALLOWED.'                           00586500
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00586600
.ZELISTX         ANOP  ,                                                00586700
&ZASYSLNDX       SETA  0                                                00586800
.*-------------------------------------------------------------------   00586900
.***AE.MF02 MF=(SLME)                                                   00587000
.ZEMFX           ANOP  ,           END OF PARTIAL SYNTAX CHECK          00587100
.*******************************************************************    00587200
.***AE.ZMR01 NO CODE GENERATED IF ERRORS DETECTED                       00587300
.*******************************************************************    00587400
                 AIF   (&ZMACRET NE 0).ZLX2     ERROR DETECTED          00587500
.*******************************************************************    00587600
.***AE.01  START OF CSVDYLPA MACRO CODE                                 00587700
.*******************************************************************    00587800
                 LCLC  &M0M0001                 NAME                    00587900
&M0M0001         SETC  '&XLABEL'                SET NAME                00588000
                 AIF   (K'&XLABEL NE 0).XLAB2                           00588100
&M0M0001         SETC  'M00M&SYSNDX'            DEFAULT NAME            00588200
.*                                                                      00588300
.XLAB2           ANOP  ,                                                00588400
                 AIF   ('&XMF' EQ 'L').XLAB3                            00588500
&M0M0001 DS    0H                             CSVDYLPA-0                00588600
.XLAB3           ANOP  ,                                                00588700
.*******************************************************************    00588800
.***AE.PR01 PRINT CONTROLS, DEFAULT IS YES                              00588900
.*******************************************************************    00589000
              PUSH  PRINT                                               00589100
                 AIF   ('&ZPRINT' NE 'NO').ZPRINTX  TURN PRINT ON       00589200
                 PRINT OFF         ++ PR01                              00589300
                 AGO   .ZPRNTXX                                         00589400
.ZPRINTX         PRINT ON                                               00589500
.ZPRNTXX         ANOP  ,                                                00589600
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00589700
         LCLC  &T2                                                 @L1A 00589800
         AIF   ('&REQUEST' NE 'QUERYDYN').NOQD                     @L1A 00589900
 AIF ('&MF' EQ '' AND '&RETCODE' EQ '' AND '&RSNCODE' EQ '').OKRET @L1A 00590000
&T2      SETC  'MF, RETCODE AND RSNCODE ARE NOT VALID WITH '       @L1A 00590100
&T2      SETC  '&T2.REQUEST=QUERYDYN'                              @L1A 00590200
         MNOTE 8,'&T2'                                             @L1A 00590300
         POP   PRINT                                               @L1A 00590400
         MEXIT                                                     @L1A 00590500
.OKRET   ANOP                                                      @L1A 00590600
         AIF   ('&DYNFUNC'(1,1) NE '(').LREG Not a reg, branch     @L1A 00590700
&T2      SETC  '0&DYNFUNC'             Target expression           @L1A 00590800
         AGO   .MREG                                               @L1A 00590900
.LREG    ANOP                          Not a reg                   @L1A 00591000
&T2      SETC  '&DYNFUNC(1)'           Target expression           @L1A 00591100
.MREG    ANOP                          Produce resulting statement @L1A 00591200
         L     15,16(0,0)              GET CVT                          00591300
         AIF   ('&SYSASCE' EQ 'P').NOAR                            @L1A 00591400
         LAE   15,0(15,0)              CLEAR AR15                       00591500
.NOAR    ANOP                                                      @L1A 00591600
         TM    X'4F2'(15),X'80'        Is MVS release correct      @L1A 00591700
         BNZ   A&SYSNDX                Yes, dynamic LPA available  @L1A 00591800
         MVI   &T2,0                   Function not available      @L1A 00591900
         B     B&SYSNDX                Skip other path             @L1A 00592000
A&SYSNDX DS    0H                      Function possibly available @L1A 00592100
         MVI   &T2,1                   Indicate available          @L1A 00592200
B&SYSNDX DS    0H                      End of QUERYDYN             @L1A 00592300
         POP   PRINT                                               @L1A 00592400
         MEXIT                                                     @L1A 00592500
.NOQD    ANOP                                                      @L1A 00592600
         AIF   ('&LINKAGE' EQ '').NOLINKAGE                        @L1A 00592700
&ZMS     SETC  'LINKAGE MUST NOT BE SPECIFIED'                     @L1A 00592800
         MNOTE 8,'&ZMS'                                            @L1A 00592900
         POP   PRINT                                               @L1A 00593000
         MEXIT                                                     @L1A 00593100
.NOLINKAGE ANOP                                                    @L1A 00593200
         AIF   ('&REQUEST' NE '').ISREQUEST                        @L1A 00593300
         AIF   ('&XMF' NE 'E').ISREQUEST                           @L1A 00593400
&ZMS     SETC  'REQUEST IS REQUIRED WITH MF=E'                     @L1A 00593500
         MNOTE 8,'&ZMS'                                            @L1A 00593600
         POP   PRINT                                               @L1A 00593700
         MEXIT                                                     @L1A 00593800
.ISREQUEST ANOP                                                    @L1A 00593900
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00594000
.********************************************************************   00594100
.***AL.L01 INTERNAL ARRAY TO PRODUCE FORMATTED CODE                     00594200
.********************************************************************   00594300
                      LCLA  &ZOPN          LIST INSTRUCTION INDEX       00594400
                      LCLA  &ZOPN1         INVOCATION INDEX             00594500
                      LCLC  &ZOPL(4095)    LABEL                        00594600
                      LCLC  &ZOPO(4095)    OPERATION                    00594700
                      LCLC  &ZOPV(4095)    VALUE                        00594800
                      LCLC  &ZOPD(4095)    DESCRIPTION                  00594900
.*                                                                      00595000
&ZOPN                 SETA  0              INITIAL INST INDEX VALUE     00595100
.******************************************************************     00595200
.***AL.L10 CSVDYLPA FMT=LIST MF=S|L PARAMETERS                          00595300
.******************************************************************     00595400
                      AIF   ('&XMF' EQ 'L').ZLMFSL2                     00595500
                      AIF   ('&XMF' NE 'S').ZLMFSLX                     00595600
&XMFCTRL              SETC  '#Z'.'&SYSNDX'(1,4).'A'                     00595700
&XMFATTR              SETC  '0D'                                        00595800
.*                                                                      00595900
&ZOPN                 SETA  &ZOPN+1                                     00596000
&ZOPL(&ZOPN)          SETC  ' '                                         00596100
                      AIF   (&SYSALVL NE 0).ZALVL6A                     00596200
&ZOPO(&ZOPN)          SETC  'B'                                         00596300
&ZOPV(&ZOPN)          SETC  '&XMFCTRL.S'                                00596400
                      AGO   .ZALVL6B                                    00596500
.ZALVL6A              ANOP                                              00596600
&ZOPO(&ZOPN)          SETC  'BRAS'                                      00596700
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL.S'                              00596800
.ZALVL6B              ANOP                                              00596900
&ZOPD(&ZOPN)          SETC  '++ CSVDYLPA ARG PARMS'                     00597000
.*                                                                      00597100
&ZOPN                 SETA  &ZOPN+1                                     00597200
&ZOPL(&ZOPN)          SETC  ' '                                         00597300
&ZOPO(&ZOPN)          SETC  'SPACE'                                     00597400
&ZOPV(&ZOPN)          SETC  '1'                                         00597500
&ZOPD(&ZOPN)          SETC  ' '                                         00597600
.*                                                                      00597700
.ZLMFSL2              ANOP  ,                                           00597800
.*-------------------------------------------------------------------   00597900
.***AM.L00  CSVDYLPA FMT=LIST name                                      00598000
                      AIF   ('&XMF' NE 'L').ZLMFSL2M                    00598100
&ZOPN                 SETA &ZOPN+1                                      00598200
&ZOPL(&ZOPN)          SETC '&M0M0001'                                   00598300
&ZOPO(&ZOPN)          SETC 'EQU'                                        00598400
&ZOPV(&ZOPN)          SETC '&XMFCTRL'                                   00598500
&ZOPD(&ZOPN)          SETC '++ CSVDYLPA NAME'                           00598600
.ZLMFSL2M             ANOP  ,                                           00598700
.*-------------------------------------------------------------------   00598800
.***AM.L01  CSVDYLPA FMT=LIST PARAMETERS                                00598900
&ZOPN                 SETA &ZOPN+1                                      00599000
&ZOPL(&ZOPN)          SETC '&XMFCTRL'                                   00599100
&ZOPO(&ZOPN)          SETC 'DS'                                         00599200
&ZOPV(&ZOPN)          SETC '&XMFATTR'                                   00599300
&ZOPD(&ZOPN)          SETC '++ CSVDYLPA PARM LIST'                      00599400
.*-------------------------------------------------------------------   00599500
.***AM.L02 XVERSION XL1                                                 00599600
&ZOPN                 SETA &ZOPN+1                                      00599700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XVERSION'                         00599800
&ZOPO(&ZOPN)          SETC 'DS'                                         00599900
&ZOPV(&ZOPN)          SETC 'XL1'                                        00600000
&ZOPD(&ZOPN)          SETC '++ INPUT XVERSION'                          00600100
.*-------------------------------------------------------------------   00600200
.***AM.L05 XREQUEST XL1                                                 00600300
&ZOPN                 SETA &ZOPN+1                                      00600400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XREQUEST'                         00600500
&ZOPO(&ZOPN)          SETC 'DS'                                         00600600
&ZOPV(&ZOPN)          SETC 'XL1'                                        00600700
&ZOPD(&ZOPN)          SETC '++ &ZXREQUEST XREQUEST'                     00600800
.*                                                                      00600900
&ZOPN                 SETA  &ZOPN+1                                     00601000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XREQUEST_ADD'                    00601100
&ZOPO(&ZOPN)          SETC  'EQU'                                       00601200
&ZOPV(&ZOPN)          SETC  '0'                                         00601300
&ZOPD(&ZOPN)          SETC  '++ XREQUEST.'                              00601400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).ADD'                          00601500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00601600
.*                                                                      00601700
&ZOPN                 SETA  &ZOPN+1                                     00601800
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XREQUEST_DELETE'                 00601900
&ZOPO(&ZOPN)          SETC  'EQU'                                       00602000
&ZOPV(&ZOPN)          SETC  '1'                                         00602100
&ZOPD(&ZOPN)          SETC  '++ XREQUEST.'                              00602200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).DELETE'                       00602300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00602400
.*-------------------------------------------------------------------   00602500
.***AM.L03 XFLAGS0 BL.8                                                 00602600
&ZOPN                 SETA &ZOPN+1                                      00602700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XFLAGS0'                          00602800
&ZOPO(&ZOPN)          SETC 'DS'                                         00602900
&ZOPV(&ZOPN)          SETC 'BL.8'                                       00603000
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             00603100
.*                                                                      00603200
&ZOPN                 SETA  &ZOPN+1                                     00603300
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_DSNAME'                  00603400
&ZOPO(&ZOPN)          SETC  'EQU'                                       00603500
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             00603600
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               00603700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).DSNAME'                       00603800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00603900
.*                                                                      00604000
&ZOPN                 SETA  &ZOPN+1                                     00604100
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_DDNAME'                  00604200
&ZOPO(&ZOPN)          SETC  'EQU'                                       00604300
&ZOPV(&ZOPN)          SETC  'B''01000000'''                             00604400
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               00604500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).DDNAME'                       00604600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00604700
.*                                                                      00604800
&ZOPN                 SETA  &ZOPN+1                                     00604900
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_DCBPTR'                  00605000
&ZOPO(&ZOPN)          SETC  'EQU'                                       00605100
&ZOPV(&ZOPN)          SETC  'B''00100000'''                             00605200
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               00605300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).DCBPTR'                       00605400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00605500
.*                                                                      00605600
&ZOPN                 SETA  &ZOPN+1                                     00605700
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_DCB'                     00605800
&ZOPO(&ZOPN)          SETC  'EQU'                                       00605900
&ZOPV(&ZOPN)          SETC  'B''00010000'''                             00606000
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               00606100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).DCB'                          00606200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00606300
.*-------------------------------------------------------------------   00606400
.***AM.L09  XFLAGS1 BL.8                                                00606500
&ZOPN                 SETA &ZOPN+1                                      00606600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XFLAGS1'                          00606700
&ZOPO(&ZOPN)          SETC 'DS'                                         00606800
&ZOPV(&ZOPN)          SETC 'BL.8'                                       00606900
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XFLAGS1'                    00607000
.*-------------------------------------------------------------------   00607100
.***AM.L03 XFLAGS2 BL.8                                                 00607200
&ZOPN                 SETA &ZOPN+1                                      00607300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XFLAGS2'                          00607400
&ZOPO(&ZOPN)          SETC 'DS'                                         00607500
&ZOPV(&ZOPN)          SETC 'BL.8'                                       00607600
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             00607700
.*                                                                      00607800
&ZOPN                 SETA  &ZOPN+1                                     00607900
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XBYADDR_YES'                     00608000
&ZOPO(&ZOPN)          SETC  'EQU'                                       00608100
&ZOPV(&ZOPN)          SETC  'B''00100000'''                             00608200
&ZOPD(&ZOPN)          SETC  '++ XBYADDR.'                               00608300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).YES'                          00608400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00608500
.*                                                                      00608600
&ZOPN                 SETA  &ZOPN+1                                     00608700
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XSECMODCHECK_NO'                 00608800
&ZOPO(&ZOPN)          SETC  'EQU'                                       00608900
&ZOPV(&ZOPN)          SETC  'B''00010000'''                             00609000
&ZOPD(&ZOPN)          SETC  '++ XSECMODCHECK.'                          00609100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).NO'                           00609200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00609300
.*                                                                      00609400
&ZOPN                 SETA  &ZOPN+1                                     00609500
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XAPFREQUIRED_NO'                 00609600
&ZOPO(&ZOPN)          SETC  'EQU'                                       00609700
&ZOPV(&ZOPN)          SETC  'B''00001000'''                             00609800
&ZOPD(&ZOPN)          SETC  '++ XAPFREQUIRED.'                          00609900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).NO'                           00610000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00610100
.*                                                                      00610200
&ZOPN                 SETA  &ZOPN+1                                     00610300
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XMODINFOTYPE_MEMBERMASK'         00610400
&ZOPO(&ZOPN)          SETC  'EQU'                                       00610500
&ZOPV(&ZOPN)          SETC  'B''00000100'''                             00610600
&ZOPD(&ZOPN)          SETC  '++ XMODINFOTYPE.'                          00610700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).MEMBERMASK'                   00610800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00610900
.*                                                                      00611000
&ZOPN                 SETA  &ZOPN+1                                     00611100
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XMODPROB_CONTINUE'               00611200
&ZOPO(&ZOPN)          SETC  'EQU'                                       00611300
&ZOPV(&ZOPN)          SETC  'B''00000010'''                             00611400
&ZOPD(&ZOPN)          SETC  '++ XMODPROB.'                              00611500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).CONTINUE'                     00611600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00611700
.*                                                                      00611800
&ZOPN                 SETA  &ZOPN+1                                     00611900
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XMODPROB_STOP'                   00612000
&ZOPO(&ZOPN)          SETC  'EQU'                                       00612100
&ZOPV(&ZOPN)          SETC  'B''00000001'''                             00612200
&ZOPD(&ZOPN)          SETC  '++ XMODPROB.'                              00612300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).STOP'                         00612400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00612500
.*-------------------------------------------------------------------   00612600
.***AM.L05 XTYPE XL1                                                    00612700
&ZOPN                 SETA &ZOPN+1                                      00612800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XTYPE'                            00612900
&ZOPO(&ZOPN)          SETC 'DS'                                         00613000
&ZOPV(&ZOPN)          SETC 'XL1'                                        00613100
&ZOPD(&ZOPN)          SETC '++ &ZXTYPE XTYPE'                           00613200
.*                                                                      00613300
&ZOPN                 SETA  &ZOPN+1                                     00613400
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XTYPE_BYTOKEN'                   00613500
&ZOPO(&ZOPN)          SETC  'EQU'                                       00613600
&ZOPV(&ZOPN)          SETC  '0'                                         00613700
&ZOPD(&ZOPN)          SETC  '++ XTYPE.'                                 00613800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).BYTOKEN'                      00613900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00614000
.*                                                                      00614100
&ZOPN                 SETA  &ZOPN+1                                     00614200
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XTYPE_CURRENT'                   00614300
&ZOPO(&ZOPN)          SETC  'EQU'                                       00614400
&ZOPV(&ZOPN)          SETC  '1'                                         00614500
&ZOPD(&ZOPN)          SETC  '++ XTYPE.'                                 00614600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).CURRENT'                      00614700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00614800
.*                                                                      00614900
&ZOPN                 SETA  &ZOPN+1                                     00615000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XTYPE_OLDEST'                    00615100
&ZOPO(&ZOPN)          SETC  'EQU'                                       00615200
&ZOPV(&ZOPN)          SETC  '2'                                         00615300
&ZOPD(&ZOPN)          SETC  '++ XTYPE.'                                 00615400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).OLDEST'                       00615500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00615600
.*-------------------------------------------------------------------   00615700
.***AM.L09  XRSV0000 CL2                                                00615800
&ZOPN                 SETA &ZOPN+1                                      00615900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0000'                         00616000
&ZOPO(&ZOPN)          SETC 'DS'                                         00616100
&ZOPV(&ZOPN)          SETC 'CL2'                                        00616200
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV0000'                      00616300
.*-------------------------------------------------------------------   00616400
.***AM.L09  XMODSTUFF CL12                                              00616500
&ZOPN                 SETA &ZOPN+1                                      00616600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMODSTUFF'                        00616700
&ZOPO(&ZOPN)          SETC 'DS'                                         00616800
&ZOPV(&ZOPN)          SETC 'CL12'                                       00616900
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XMODSTUFF'                  00617000
.*-------------------------------------------------------------------   00617100
.***AM.L09  XDSNSTUFF CL16                                              00617200
&ZOPN                 SETA &ZOPN+1                                      00617300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XDSNSTUFF'                        00617400
&ZOPO(&ZOPN)          SETC 'DS'                                         00617500
&ZOPV(&ZOPN)          SETC 'CL16'                                       00617600
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XDSNSTUFF'                  00617700
.*-------------------------------------------------------------------   00617800
.***AM.L09 ADDR XCMDINFO A                                              00617900
&ZOPN                 SETA &ZOPN+1                                      00618000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCMDINFO_ADDR'                    00618100
&ZOPO(&ZOPN)          SETC 'DS'                                         00618200
&ZOPV(&ZOPN)          SETC 'A'                                          00618300
&ZOPD(&ZOPN)          SETC '++ &ZXCMDINFO ADDR XCMDINFO'                00618400
.*-------------------------------------------------------------------   00618500
.***AM.L09  XERRORDATA CL8                                              00618600
&ZOPN                 SETA &ZOPN+1                                      00618700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XERRORDATA'                       00618800
&ZOPO(&ZOPN)          SETC 'DS'                                         00618900
&ZOPV(&ZOPN)          SETC 'CL8'                                        00619000
&ZOPD(&ZOPN)          SETC '++ &ZXERRORDATA  XERRORDATA'                00619100
.*-------------------------------------------------------------------   00619200
.***AM.L09  XRSV0001 CL4                                                00619300
&ZOPN                 SETA &ZOPN+1                                      00619400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0001'                         00619500
&ZOPO(&ZOPN)          SETC 'DS'                                         00619600
&ZOPV(&ZOPN)          SETC 'CL4'                                        00619700
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV0001'                      00619800
.*-------------------------------------------------------------------   00619900
.***AM.L09  XUNIQUE CL48                                                00620000
&ZOPN                 SETA &ZOPN+1                                      00620100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XUNIQUE'                          00620200
&ZOPO(&ZOPN)          SETC 'DS'                                         00620300
&ZOPV(&ZOPN)          SETC 'CL48'                                       00620400
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XUNIQUE'                    00620500
.*-------------------------------------------------------------------   00620600
.***AM.MLM1 SAVED LOCATION COUNTER                                      00620700
                      AIF  ('&ZENDBASEPL' NE '').ZL28LB                 00620800
&ZENDBASEPL           SETC 'YES'                                        00620900
&ZOPN                 SETA &ZOPN+1                                      00621000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._PL_END'                           00621100
&ZOPO(&ZOPN)          SETC 'EQU'                                        00621200
&ZOPV(&ZOPN)          SETC '*'                                          00621300
&ZOPD(&ZOPN)          SETC '++ END OF BASE PLIST'                       00621400
.ZL28LB               ANOP  ,                                           00621500
.*-------------------------------------------------------------------   00621600
.***AM.PJR1 DEFINED ON XDSNSTUFF                                        00621700
&ZOPN                 SETA &ZOPN+1                                      00621800
&ZOPL(&ZOPN)          SETC ' '                                          00621900
&ZOPO(&ZOPN)          SETC 'ORG'                                        00622000
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+20'                               00622100
&ZOPD(&ZOPN)          SETC ' '                                          00622200
.*-------------------------------------------------------------------   00622300
.***AM.L09 ADDR XDSNAME A                                               00622400
&ZOPN                 SETA &ZOPN+1                                      00622500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XDSNAME_ADDR'                     00622600
&ZOPO(&ZOPN)          SETC 'DS'                                         00622700
&ZOPV(&ZOPN)          SETC 'A'                                          00622800
&ZOPD(&ZOPN)          SETC '++ &ZXDSNAME ADDR XDSNAME'                  00622900
.*-------------------------------------------------------------------   00623000
.***AM.L09 ALET XDSNAME F                                               00623100
&ZOPN                 SETA &ZOPN+1                                      00623200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XDSNAME_ALET'                     00623300
&ZOPO(&ZOPN)          SETC 'DS'                                         00623400
&ZOPV(&ZOPN)          SETC 'F'                                          00623500
&ZOPD(&ZOPN)          SETC '++ &ZXDSNAME ALET XDSNAME'                  00623600
.*-------------------------------------------------------------------   00623700
.***AM.PJR1 DEFINED ON XDSNSTUFF                                        00623800
&ZOPN                 SETA &ZOPN+1                                      00623900
&ZOPL(&ZOPN)          SETC ' '                                          00624000
&ZOPO(&ZOPN)          SETC 'ORG'                                        00624100
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+20'                               00624200
&ZOPD(&ZOPN)          SETC ' '                                          00624300
.*-------------------------------------------------------------------   00624400
.***AM.L09  XDDNAME CL8                                                 00624500
&ZOPN                 SETA &ZOPN+1                                      00624600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XDDNAME'                          00624700
&ZOPO(&ZOPN)          SETC 'DS'                                         00624800
&ZOPV(&ZOPN)          SETC 'CL8'                                        00624900
&ZOPD(&ZOPN)          SETC '++ &ZXDDNAME  XDDNAME'                      00625000
.*-------------------------------------------------------------------   00625100
.***AM.PJR1 DEFINED ON XDSNSTUFF                                        00625200
&ZOPN                 SETA &ZOPN+1                                      00625300
&ZOPL(&ZOPN)          SETC ' '                                          00625400
&ZOPO(&ZOPN)          SETC 'ORG'                                        00625500
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+20'                               00625600
&ZOPD(&ZOPN)          SETC ' '                                          00625700
.*-------------------------------------------------------------------   00625800
.***AM.L09 ADDR XDCB A                                                  00625900
&ZOPN                 SETA &ZOPN+1                                      00626000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XDCB_ADDR'                        00626100
&ZOPO(&ZOPN)          SETC 'DS'                                         00626200
&ZOPV(&ZOPN)          SETC 'A'                                          00626300
&ZOPD(&ZOPN)          SETC '++ &ZXDCB ADDR XDCB'                        00626400
.*-------------------------------------------------------------------   00626500
.***AM.PJR1 DEFINED ON XDSNSTUFF                                        00626600
&ZOPN                 SETA &ZOPN+1                                      00626700
&ZOPL(&ZOPN)          SETC ' '                                          00626800
&ZOPO(&ZOPN)          SETC 'ORG'                                        00626900
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+20'                               00627000
&ZOPD(&ZOPN)          SETC ' '                                          00627100
.*-------------------------------------------------------------------   00627200
.***AM.L09  XDCBPTR A                                                   00627300
&ZOPN                 SETA &ZOPN+1                                      00627400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XDCBPTR'                          00627500
&ZOPO(&ZOPN)          SETC 'DS'                                         00627600
&ZOPV(&ZOPN)          SETC 'A'                                          00627700
&ZOPD(&ZOPN)          SETC '++ &ZXDCBPTR  XDCBPTR'                      00627800
.*-------------------------------------------------------------------   00627900
.***AM.PJR1 DEFINED ON XDSNSTUFF                                        00628000
&ZOPN                 SETA &ZOPN+1                                      00628100
&ZOPL(&ZOPN)          SETC ' '                                          00628200
&ZOPO(&ZOPN)          SETC 'ORG'                                        00628300
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+20'                               00628400
&ZOPD(&ZOPN)          SETC ' '                                          00628500
.*-------------------------------------------------------------------   00628600
.***AM.L09 ADDR XMASKDSNAME A                                           00628700
&ZOPN                 SETA &ZOPN+1                                      00628800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMASKDSNAME_ADDR'                 00628900
&ZOPO(&ZOPN)          SETC 'DS'                                         00629000
&ZOPV(&ZOPN)          SETC 'A'                                          00629100
&ZOPD(&ZOPN)          SETC '++ &ZXMASKDSNAME ADDR XMASKDSNAME'          00629200
.*-------------------------------------------------------------------   00629300
.***AM.L09 ALET XMASKDSNAME F                                           00629400
&ZOPN                 SETA &ZOPN+1                                      00629500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMASKDSNAME_ALET'                 00629600
&ZOPO(&ZOPN)          SETC 'DS'                                         00629700
&ZOPV(&ZOPN)          SETC 'F'                                          00629800
&ZOPD(&ZOPN)          SETC '++ &ZXMASKDSNAME ALET XMASKDSNAME'          00629900
.*-------------------------------------------------------------------   00630000
.***AM.PJR1 DEFINED ON XDSNSTUFF                                        00630100
&ZOPN                 SETA &ZOPN+1                                      00630200
&ZOPL(&ZOPN)          SETC ' '                                          00630300
&ZOPO(&ZOPN)          SETC 'ORG'                                        00630400
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+20'                               00630500
&ZOPD(&ZOPN)          SETC ' '                                          00630600
.*-------------------------------------------------------------------   00630700
.***AM.L09  XMASKDDNAME CL8                                             00630800
&ZOPN                 SETA &ZOPN+1                                      00630900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMASKDDNAME'                      00631000
&ZOPO(&ZOPN)          SETC 'DS'                                         00631100
&ZOPV(&ZOPN)          SETC 'CL8'                                        00631200
&ZOPD(&ZOPN)          SETC '++ &ZXMASKDDNAME  XMASKDDNAME'              00631300
.*-------------------------------------------------------------------   00631400
.***AM.PJR1 DEFINED ON XDSNSTUFF                                        00631500
&ZOPN                 SETA &ZOPN+1                                      00631600
&ZOPL(&ZOPN)          SETC ' '                                          00631700
&ZOPO(&ZOPN)          SETC 'ORG'                                        00631800
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+20'                               00631900
&ZOPD(&ZOPN)          SETC ' '                                          00632000
.*-------------------------------------------------------------------   00632100
.***AM.L09 ADDR XMASKDCB A                                              00632200
&ZOPN                 SETA &ZOPN+1                                      00632300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMASKDCB_ADDR'                    00632400
&ZOPO(&ZOPN)          SETC 'DS'                                         00632500
&ZOPV(&ZOPN)          SETC 'A'                                          00632600
&ZOPD(&ZOPN)          SETC '++ &ZXMASKDCB ADDR XMASKDCB'                00632700
.*-------------------------------------------------------------------   00632800
.***AM.PJR1 DEFINED ON XDSNSTUFF                                        00632900
&ZOPN                 SETA &ZOPN+1                                      00633000
&ZOPL(&ZOPN)          SETC ' '                                          00633100
&ZOPO(&ZOPN)          SETC 'ORG'                                        00633200
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+20'                               00633300
&ZOPD(&ZOPN)          SETC ' '                                          00633400
.*-------------------------------------------------------------------   00633500
.***AM.L09  XMASKDCBPTR A                                               00633600
&ZOPN                 SETA &ZOPN+1                                      00633700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMASKDCBPTR'                      00633800
&ZOPO(&ZOPN)          SETC 'DS'                                         00633900
&ZOPV(&ZOPN)          SETC 'A'                                          00634000
&ZOPD(&ZOPN)          SETC '++ &ZXMASKDCBPTR  XMASKDCBPTR'              00634100
.*-------------------------------------------------------------------   00634200
.***AM.PJR1 DEFINED ON XFLAGS0                                          00634300
&ZOPN                 SETA &ZOPN+1                                      00634400
&ZOPL(&ZOPN)          SETC ' '                                          00634500
&ZOPO(&ZOPN)          SETC 'ORG'                                        00634600
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+2'                                00634700
&ZOPD(&ZOPN)          SETC ' '                                          00634800
.*-------------------------------------------------------------------   00634900
.***AM.L03 XFLAGS0DEF BL.8                                              00635000
&ZOPN                 SETA &ZOPN+1                                      00635100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XFLAGS0DEF'                       00635200
&ZOPO(&ZOPN)          SETC 'DS'                                         00635300
&ZOPV(&ZOPN)          SETC 'BL.8'                                       00635400
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             00635500
.*                                                                      00635600
&ZOPN                 SETA  &ZOPN+1                                     00635700
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_MASKDSNAME'              00635800
&ZOPO(&ZOPN)          SETC  'EQU'                                       00635900
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             00636000
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               00636100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).MASKDSNAME'                   00636200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00636300
.*                                                                      00636400
&ZOPN                 SETA  &ZOPN+1                                     00636500
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_MASKDDNAME'              00636600
&ZOPO(&ZOPN)          SETC  'EQU'                                       00636700
&ZOPV(&ZOPN)          SETC  'B''01000000'''                             00636800
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               00636900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).MASKDDNAME'                   00637000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00637100
.*                                                                      00637200
&ZOPN                 SETA  &ZOPN+1                                     00637300
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_MASKDCBPTR'              00637400
&ZOPO(&ZOPN)          SETC  'EQU'                                       00637500
&ZOPV(&ZOPN)          SETC  'B''00100000'''                             00637600
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               00637700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).MASKDCBPTR'                   00637800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00637900
.*                                                                      00638000
&ZOPN                 SETA  &ZOPN+1                                     00638100
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_MASKDCB'                 00638200
&ZOPO(&ZOPN)          SETC  'EQU'                                       00638300
&ZOPV(&ZOPN)          SETC  'B''00010000'''                             00638400
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               00638500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).MASKDCB'                      00638600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00638700
.*-------------------------------------------------------------------   00638800
.***AM.PJR1 DEFINED ON XUNIQUE                                          00638900
&ZOPN                 SETA &ZOPN+1                                      00639000
&ZOPL(&ZOPN)          SETC ' '                                          00639100
&ZOPO(&ZOPN)          SETC 'ORG'                                        00639200
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+52'                               00639300
&ZOPD(&ZOPN)          SETC ' '                                          00639400
.*-------------------------------------------------------------------   00639500
.***AM.L09  XREQUESTOR CL16                                             00639600
&ZOPN                 SETA &ZOPN+1                                      00639700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XREQUESTOR'                       00639800
&ZOPO(&ZOPN)          SETC 'DS'                                         00639900
&ZOPV(&ZOPN)          SETC 'CL16'                                       00640000
&ZOPD(&ZOPN)          SETC '++ &ZXREQUESTOR  XREQUESTOR'                00640100
.*-------------------------------------------------------------------   00640200
.***AM.L09  XOUTAREAPTR A                                               00640300
&ZOPN                 SETA &ZOPN+1                                      00640400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XOUTAREAPTR'                      00640500
&ZOPO(&ZOPN)          SETC 'DS'                                         00640600
&ZOPV(&ZOPN)          SETC 'A'                                          00640700
&ZOPD(&ZOPN)          SETC '++ &ZXOUTAREAPTR  XOUTAREAPTR'              00640800
.*-------------------------------------------------------------------   00640900
.***AM.L09  XOUTAREALEN F                                               00641000
&ZOPN                 SETA &ZOPN+1                                      00641100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XOUTAREALEN'                      00641200
&ZOPO(&ZOPN)          SETC 'DS'                                         00641300
&ZOPV(&ZOPN)          SETC 'F'                                          00641400
&ZOPD(&ZOPN)          SETC '++ &ZXOUTAREALEN  XOUTAREALEN'              00641500
.*-------------------------------------------------------------------   00641600
.***AM.L09  XOUTAREASP XL1                                              00641700
&ZOPN                 SETA &ZOPN+1                                      00641800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XOUTAREASP'                       00641900
&ZOPO(&ZOPN)          SETC 'DS'                                         00642000
&ZOPV(&ZOPN)          SETC 'XL1'                                        00642100
&ZOPD(&ZOPN)          SETC '++ &ZXOUTAREASP  XOUTAREASP'                00642200
.*-------------------------------------------------------------------   00642300
.***AM.L09  XRSV0002 CL3                                                00642400
&ZOPN                 SETA &ZOPN+1                                      00642500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0002'                         00642600
&ZOPO(&ZOPN)          SETC 'DS'                                         00642700
&ZOPV(&ZOPN)          SETC 'CL3'                                        00642800
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV0002'                      00642900
.*-------------------------------------------------------------------   00643000
.***AM.L09  XOUTAREANUM F                                               00643100
&ZOPN                 SETA &ZOPN+1                                      00643200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XOUTAREANUM'                      00643300
&ZOPO(&ZOPN)          SETC 'DS'                                         00643400
&ZOPV(&ZOPN)          SETC 'F'                                          00643500
&ZOPD(&ZOPN)          SETC '++ &ZXOUTAREANUM  XOUTAREANUM'              00643600
.*-------------------------------------------------------------------   00643700
.***AM.L09 ADDR XMODINFOX A                                             00643800
&ZOPN                 SETA &ZOPN+1                                      00643900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMODINFOX_ADDR'                   00644000
&ZOPO(&ZOPN)          SETC 'DS'                                         00644100
&ZOPV(&ZOPN)          SETC 'A'                                          00644200
&ZOPD(&ZOPN)          SETC '++ &ZXMODINFOX ADDR XMODINFOX'              00644300
.*-------------------------------------------------------------------   00644400
.***AM.L09 ALET XMODINFOX F                                             00644500
&ZOPN                 SETA &ZOPN+1                                      00644600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMODINFOX_ALET'                   00644700
&ZOPO(&ZOPN)          SETC 'DS'                                         00644800
&ZOPV(&ZOPN)          SETC 'F'                                          00644900
&ZOPD(&ZOPN)          SETC '++ &ZXMODINFOX ALET XMODINFOX'              00645000
.*-------------------------------------------------------------------   00645100
.***AM.L09  XRSV0003 CL8                                                00645200
&ZOPN                 SETA &ZOPN+1                                      00645300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0003'                         00645400
&ZOPO(&ZOPN)          SETC 'DS'                                         00645500
&ZOPV(&ZOPN)          SETC 'CL8'                                        00645600
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV0003'                      00645700
.*-------------------------------------------------------------------   00645800
.***AM.PJR1 DEFINED ON XMODSTUFF                                        00645900
&ZOPN                 SETA &ZOPN+1                                      00646000
&ZOPL(&ZOPN)          SETC ' '                                          00646100
&ZOPO(&ZOPN)          SETC 'ORG'                                        00646200
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+8'                                00646300
&ZOPD(&ZOPN)          SETC ' '                                          00646400
.*-------------------------------------------------------------------   00646500
.***AM.L09 ADDR XMODINFO A                                              00646600
&ZOPN                 SETA &ZOPN+1                                      00646700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMODINFO_ADDR'                    00646800
&ZOPO(&ZOPN)          SETC 'DS'                                         00646900
&ZOPV(&ZOPN)          SETC 'A'                                          00647000
&ZOPD(&ZOPN)          SETC '++ &ZXMODINFO ADDR XMODINFO'                00647100
.*-------------------------------------------------------------------   00647200
.***AM.L09 ALET XMODINFO F                                              00647300
&ZOPN                 SETA &ZOPN+1                                      00647400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMODINFO_ALET'                    00647500
&ZOPO(&ZOPN)          SETC 'DS'                                         00647600
&ZOPV(&ZOPN)          SETC 'F'                                          00647700
&ZOPD(&ZOPN)          SETC '++ &ZXMODINFO ALET XMODINFO'                00647800
.*-------------------------------------------------------------------   00647900
.***AM.L09  XNUMMOD F                                                   00648000
&ZOPN                 SETA &ZOPN+1                                      00648100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XNUMMOD'                          00648200
&ZOPO(&ZOPN)          SETC 'DS'                                         00648300
&ZOPV(&ZOPN)          SETC 'F'                                          00648400
&ZOPD(&ZOPN)          SETC '++ &ZXNUMMOD  XNUMMOD'                      00648500
&ZOPN                 SETA &ZOPN+1                                      00648600
&ZOPL(&ZOPN)          SETC ' '                                          00648700
&ZOPO(&ZOPN)          SETC 'ORG'                                        00648800
&ZOPV(&ZOPN)          SETC '&XMFCTRL._PL_END'                           00648900
&ZOPD(&ZOPN)          SETC 'RESET LOCATION COUNTER'                     00649000
.*-------------------------------------------------------------------   00649100
.***AM.L10 END OF CSVDYLPA LIST PARAMETERS                              00649200
&ZOPN                 SETA &ZOPN+1                                      00649300
&ZOPL(&ZOPN)          SETC '&XMFCTRL.L'                                 00649400
&ZOPO(&ZOPN)          SETC 'EQU'                                        00649500
&ZOPV(&ZOPN)          SETC '*-&XMFCTRL'                                 00649600
&ZOPD(&ZOPN)          SETC '++ LENGTH OF PLIST'                         00649700
.*                                                                      00649800
&ZOPN                 SETA &ZOPN+1                                      00649900
&ZOPL(&ZOPN)          SETC ' '                                          00650000
&ZOPO(&ZOPN)          SETC 'SPACE'                                      00650100
&ZOPV(&ZOPN)          SETC '1'                                          00650200
&ZOPD(&ZOPN)          SETC ' '                                          00650300
.*-------------------------------------------------------------------   00650400
.***AL.L12 CSVDYLPA FMT=LIST MF=S|L PARAMETERS                          00650500
                      AIF   ('&XMF' EQ 'L').ZMFLX  DONE IF MF=L         00650600
.*                                                                      00650700
&ZOPN                 SETA  &ZOPN+1                                     00650800
&ZOPL(&ZOPN)          SETC  '&XMFCTRL.S'                                00650900
&ZOPO(&ZOPN)          SETC  'DC'                                        00651000
&ZOPV(&ZOPN)          SETC  '0H''0'''                                   00651100
&ZOPD(&ZOPN)          SETC  '++ CSVDYLPA ARG PARMS'                     00651200
.*                                                                      00651300
.ZLMFSLX              ANOP  ,                                           00651400
.*-------------------------------------------------------------------   00651500
.***AL.L13 SET ZPLLEN TO ITS APPROPRIATE VALUE                          00651600
&ZPLLEN               SETA 100                                          00651700
.*                                                                      00651800
.******************************************************************     00651900
.***AI.L01 CSVDYLPA FMT=LIST FILL IN PARAMETER AREA                     00652000
.******************************************************************     00652100
                      ACTR  10000                                       00652200
&ZCVAL                SETC  'LA'           ASSUME XA MODE               00652300
                      AIF   ('&SYSASCE' EQ 'P').ZIMFXA  SYSSTATE PRI    00652400
&ZCVAL                SETC  'LAE'          XAX MODE                     00652500
.ZIMFXA               ANOP ,                                            00652600
.*                                                                      00652700
                      AIF   ('&XMFCTRL'(1,1) NE '(').ZIMFN2  NOT GPR    00652800
&ZCGPR                SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)  GET GPR         00652900
                      AIF   ('&ZCGPR' EQ 'GPR1').ZIMFNX                 00653000
                      AIF   ('&ZCGPR' EQ 'GPR01').ZIMFNX                00653100
                      AIF   ('&ZCGPR' EQ 'REG1').ZIMFNX                 00653200
                      AIF   ('&ZCGPR' EQ 'REG01').ZIMFNX                00653300
                      AIF   ('&ZCGPR' EQ 'R1').ZIMFNX                   00653400
                      AIF   ('&ZCGPR' EQ '1').ZIMFNX                    00653500
                      AIF   ('&ZCGPR' EQ '01').ZIMFNX                   00653600
&ZOPN                 SETA  &ZOPN+1                                     00653700
&ZOPL(&ZOPN)          SETC  ' '                                         00653800
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00653900
&ZOPV(&ZOPN)          SETC  '1,0(,&ZCGPR)'                              00654000
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00654100
                      AGO   .ZIMFNX                                     00654200
.*                                                                      00654300
.ZIMFN2               ANOP ,                                            00654400
                      AIF   (&SYSALVL EQ 0).ZIMFNX1                     00654500
                      AIF   ('&XMF' NE 'S').ZIMFNX1                     00654600
                      AIF   ('&ZCVAL' NE 'LAE').ZIMFNX                  00654700
&ZOPN                 SETA  &ZOPN+1                                     00654800
&ZOPL(&ZOPN)          SETC  ' '                                         00654900
&ZOPO(&ZOPN)          SETC  'LAE'                                       00655000
&ZOPV(&ZOPN)          SETC  '1,0(1,0)'                                  00655100
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00655200
                      AGO   .ZIMFNX                                     00655300
.ZIMFNX1              ANOP ,                                            00655400
&ZOPN                 SETA  &ZOPN+1                                     00655500
&ZOPL(&ZOPN)          SETC  ' '                                         00655600
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00655700
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL'                                00655800
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00655900
.ZIMFNX               ANOP ,                                            00656000
.********************************************************************   00656100
.***AI.L02 CSVDYLPA FMT=LIST INITIALIZE PARAMETER AREA                  00656200
.********************************************************************   00656300
.***AI.L03 MF=(SLME)                                                    00656400
                      AIF   ('&XMF' EQ 'L').ZIMFLX                      00656500
                      AIF   ('&XMFSCK' NE 'COMPLETE').ZIMFLX            00656600
.*                                                                      00656700
&ZOPN                 SETA  &ZOPN+1                                     00656800
&ZOPL(&ZOPN)          SETC  ' '                                         00656900
&ZOPO(&ZOPN)          SETC  'XC'                                        00657000
&ZOPV(&ZOPN)          SETC  '0(&ZPLLEN,1),0(1)'                         00657100
&ZOPD(&ZOPN)          SETC  '++ INITIALIZE'                             00657200
.ZIMFLX               ANOP  ,                                           00657300
.*-------------------------------------------------------------------   00657400
.***AI.L07 XREQUEST AL1                                                 00657500
&ZW                   SETC  ''                                          00657600
.*-------------------------------------------------------------------   00657700
.***AI.L15 XREQUEST "ADD" AL1                                           00657800
         AIF   ('&XREQUEST' NE 'ADD').ZI3A                              00657900
&ZW                   SETC  '0'                                         00658000
.ZI3A                 ANOP  ,                                           00658100
.*-------------------------------------------------------------------   00658200
.***AI.L15 XREQUEST "DELETE" AL1                                        00658300
         AIF   ('&XREQUEST' NE 'DELETE').ZI4A                           00658400
&ZW                   SETC  '1'                                         00658500
.ZI4A                 ANOP  ,                                           00658600
.*-------------------------------------------------------------------   00658700
.***AI.L17 XREQUEST AL1                                                 00658800
                      AIF   ('&ZW' NE '0').ZI4C                         00658900
                      AIF   ('&XMFSCK' EQ 'COMPLETE').ZI4B              00659000
.ZI4C                 ANOP  ,                                           00659100
                      AIF   ('&ZW' EQ '').ZI4B                          00659200
.*                                                                      00659300
&ZOPN                 SETA  &ZOPN+1                                     00659400
&ZOPL(&ZOPN)          SETC  ' '                                         00659500
&ZOPO(&ZOPN)          SETC  'MVI'                                       00659600
&ZOPV(&ZOPN)          SETC  '1(1),&ZW'                                  00659700
&ZOPD(&ZOPN)          SETC  '++ &ZXREQUEST XREQUEST'                    00659800
.ZI4B                 ANOP  ,                                           00659900
.*-------------------------------------------------------------------   00660000
.***AI.L05 XFLAGS0 BL1                                                  00660100
&ZW                   SETC  ''                                          00660200
&ZCLNG                SETC  ''             RESET BIT ON FLAG            00660300
&ZMS                  SETC  ''                                          00660400
&ZC                   SETC  ''                                          00660500
.*-------------------------------------------------------------------   00660600
.***AI.L08 XFLAGS0 "DSNAME"                                             00660700
.***      BL1'1XXXXXXX'                                                 00660800
         AIF   ('&DSNAME' EQ '').ZI6A                                   00660900
         AIF   ('&DSNAME' EQ '').ZI6A                                   00661000
&ZW                   SETC  '&ZW.1'                                     00661100
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00661200
&ZMS                  SETC  '&ZMS.0'                                    00661300
                      AGO   .ZI6C                                       00661400
.*                                                                      00661500
.ZI6A                 ANOP  ,                                           00661600
&ZW                   SETC  '&ZW.0'                                     00661700
&ZMS                  SETC  '&ZMS.1'                                    00661800
.ZI6C                 ANOP  ,                                           00661900
.*-------------------------------------------------------------------   00662000
.***AI.L08 XFLAGS0 "DDNAME"                                             00662100
.***      BL1'X1XXXXXX'                                                 00662200
         AIF   ('&DDNAME' EQ '').ZI7A                                   00662300
         AIF   ('&DDNAME' EQ '').ZI7A                                   00662400
&ZW                   SETC  '&ZW.1'                                     00662500
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00662600
&ZMS                  SETC  '&ZMS.0'                                    00662700
                      AGO   .ZI7C                                       00662800
.*                                                                      00662900
.ZI7A                 ANOP  ,                                           00663000
&ZW                   SETC  '&ZW.0'                                     00663100
&ZMS                  SETC  '&ZMS.1'                                    00663200
.ZI7C                 ANOP  ,                                           00663300
.*-------------------------------------------------------------------   00663400
.***AI.L08 XFLAGS0 "DCBPTR"                                             00663500
.***      BL1'XX1XXXXX'                                                 00663600
         AIF   ('&DCBPTR' EQ '').ZI8A                                   00663700
         AIF   ('&DCBPTR' EQ '').ZI8A                                   00663800
&ZW                   SETC  '&ZW.1'                                     00663900
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00664000
&ZMS                  SETC  '&ZMS.0'                                    00664100
                      AGO   .ZI8C                                       00664200
.*                                                                      00664300
.ZI8A                 ANOP  ,                                           00664400
&ZW                   SETC  '&ZW.0'                                     00664500
&ZMS                  SETC  '&ZMS.1'                                    00664600
.ZI8C                 ANOP  ,                                           00664700
.*-------------------------------------------------------------------   00664800
.***AI.L08 XFLAGS0 "DCB"                                                00664900
.***      BL1'XXX1XXXX'                                                 00665000
         AIF   ('&DCB' EQ '').ZI9A                                      00665100
         AIF   ('&DCB' EQ '').ZI9A                                      00665200
&ZW                   SETC  '&ZW.10000'                                 00665300
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00665400
&ZMS                  SETC  '&ZMS.01111'                                00665500
                      AGO   .ZI9C                                       00665600
.*                                                                      00665700
.ZI9A                 ANOP  ,                                           00665800
&ZW                   SETC  '&ZW.00000'                                 00665900
&ZMS                  SETC  '&ZMS.11111'                                00666000
.ZI9C                 ANOP  ,                                           00666100
.*-------------------------------------------------------------------   00666200
.***AI.L11 XFLAGS0 BL1                                                  00666300
                      AIF   ('&XMFSCK' NE 'NOCHECK').ZI9D               00666400
                      AIF   ('&ZC' NE 'YES').ZI9D                       00666500
&ZOPN                 SETA  &ZOPN+1                                     00666600
&ZOPL(&ZOPN)          SETC  ' '                                         00666700
&ZOPO(&ZOPN)          SETC  'NI'                                        00666800
&ZOPV(&ZOPN)          SETC  '2(1),B''&ZMS'''                            00666900
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              00667000
.ZI9D                 ANOP  ,                                           00667100
                      AIF   ('&ZCLNG' NE 'YES').ZI9E  ALL ZERO BITS     00667200
&ZOPN                 SETA  &ZOPN+1                                     00667300
&ZOPL(&ZOPN)          SETC  ' '                                         00667400
&ZOPO(&ZOPN)          SETC  'OI'                                        00667500
&ZOPV(&ZOPN)          SETC  '2(1),B''&ZW'''                             00667600
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              00667700
.ZI9E                 ANOP  ,                                           00667800
.*-------------------------------------------------------------------   00667900
.***AI.L05 XFLAGS2 BL1                                                  00668000
&ZW                   SETC  ''                                          00668100
&ZCLNG                SETC  ''             RESET BIT ON FLAG            00668200
&ZMS                  SETC  ''                                          00668300
&ZC                   SETC  ''                                          00668400
.*-------------------------------------------------------------------   00668500
.***AI.L08 XFLAGS2 "YES"                                                00668600
.***      BL1'XX1XXXXX'                                                 00668700
         AIF   ('&XBYADDR' NE 'YES').ZI12A                              00668800
&ZW                   SETC  '&ZW.001'                                   00668900
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00669000
&ZMS                  SETC  '&ZMS.111'                                  00669100
                      AGO   .ZI12C                                      00669200
.*                                                                      00669300
.ZI12A                ANOP  ,                                           00669400
&ZW                   SETC  '&ZW.000'                                   00669500
         AIF   ('&ZXBYADDR' EQ '').ZI12B                                00669600
&ZMS                  SETC  '&ZMS.110'                                  00669700
&ZC                   SETC  'YES'          SET BIT OFF FLAG             00669800
                      AGO   .ZI12C                                      00669900
.*                                                                      00670000
.ZI12B                ANOP  ,                                           00670100
&ZMS                  SETC  '&ZMS.111'                                  00670200
.ZI12C                ANOP  ,                                           00670300
.*-------------------------------------------------------------------   00670400
.***AI.L08 XFLAGS2 "NO"                                                 00670500
.***      BL1'XXX1XXXX'                                                 00670600
         AIF   ('&XSECMODCHECK' NE 'NO').ZI13A                          00670700
&ZW                   SETC  '&ZW.1'                                     00670800
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00670900
&ZMS                  SETC  '&ZMS.1'                                    00671000
                      AGO   .ZI13C                                      00671100
.*                                                                      00671200
.ZI13A                ANOP  ,                                           00671300
&ZW                   SETC  '&ZW.0'                                     00671400
         AIF   ('&ZXSECMODCHECK' EQ '').ZI13B                           00671500
&ZMS                  SETC  '&ZMS.0'                                    00671600
&ZC                   SETC  'YES'          SET BIT OFF FLAG             00671700
                      AGO   .ZI13C                                      00671800
.*                                                                      00671900
.ZI13B                ANOP  ,                                           00672000
&ZMS                  SETC  '&ZMS.1'                                    00672100
.ZI13C                ANOP  ,                                           00672200
.*-------------------------------------------------------------------   00672300
.***AI.L08 XFLAGS2 "NO"                                                 00672400
.***      BL1'XXXX1XXX'                                                 00672500
         AIF   ('&XAPFREQUIRED' NE 'NO').ZI14A                          00672600
&ZW                   SETC  '&ZW.1'                                     00672700
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00672800
&ZMS                  SETC  '&ZMS.1'                                    00672900
                      AGO   .ZI14C                                      00673000
.*                                                                      00673100
.ZI14A                ANOP  ,                                           00673200
&ZW                   SETC  '&ZW.0'                                     00673300
         AIF   ('&ZXAPFREQUIRED' EQ '').ZI14B                           00673400
&ZMS                  SETC  '&ZMS.0'                                    00673500
&ZC                   SETC  'YES'          SET BIT OFF FLAG             00673600
                      AGO   .ZI14C                                      00673700
.*                                                                      00673800
.ZI14B                ANOP  ,                                           00673900
&ZMS                  SETC  '&ZMS.1'                                    00674000
.ZI14C                ANOP  ,                                           00674100
.*-------------------------------------------------------------------   00674200
.***AI.L08 XFLAGS2 "MEMBERMASK"                                         00674300
.***      BL1'XXXXX1XX'                                                 00674400
         AIF   ('&XMODINFOTYPE' NE 'MEMBERMASK').ZI15A                  00674500
&ZW                   SETC  '&ZW.1'                                     00674600
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00674700
&ZMS                  SETC  '&ZMS.1'                                    00674800
                      AGO   .ZI15C                                      00674900
.*                                                                      00675000
.ZI15A                ANOP  ,                                           00675100
&ZW                   SETC  '&ZW.0'                                     00675200
         AIF   ('&ZXMODINFOTYPE' EQ '').ZI15B                           00675300
&ZMS                  SETC  '&ZMS.0'                                    00675400
&ZC                   SETC  'YES'          SET BIT OFF FLAG             00675500
                      AGO   .ZI15C                                      00675600
.*                                                                      00675700
.ZI15B                ANOP  ,                                           00675800
&ZMS                  SETC  '&ZMS.1'                                    00675900
.ZI15C                ANOP  ,                                           00676000
.*-------------------------------------------------------------------   00676100
.***AI.L08 XFLAGS2 "CONTINUE"                                           00676200
.***      BL1'XXXXXX1X'                                                 00676300
         AIF   ('&XMODPROB' NE 'CONTINUE').ZI16A                        00676400
&ZW                   SETC  '&ZW.1'                                     00676500
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00676600
&ZMS                  SETC  '&ZMS.1'                                    00676700
                      AGO   .ZI16C                                      00676800
.*                                                                      00676900
.ZI16A                ANOP  ,                                           00677000
&ZW                   SETC  '&ZW.0'                                     00677100
         AIF   ('&ZXMODPROB' EQ '').ZI16B                               00677200
&ZMS                  SETC  '&ZMS.0'                                    00677300
&ZC                   SETC  'YES'          SET BIT OFF FLAG             00677400
                      AGO   .ZI16C                                      00677500
.*                                                                      00677600
.ZI16B                ANOP  ,                                           00677700
&ZMS                  SETC  '&ZMS.1'                                    00677800
.ZI16C                ANOP  ,                                           00677900
.*-------------------------------------------------------------------   00678000
.***AI.L08 XFLAGS2 "STOP"                                               00678100
.***      BL1'XXXXXXX1'                                                 00678200
         AIF   ('&XMODPROB' NE 'STOP').ZI17A                            00678300
&ZW                   SETC  '&ZW.1'                                     00678400
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00678500
&ZMS                  SETC  '&ZMS.1'                                    00678600
                      AGO   .ZI17C                                      00678700
.*                                                                      00678800
.ZI17A                ANOP  ,                                           00678900
&ZW                   SETC  '&ZW.0'                                     00679000
         AIF   ('&ZXMODPROB' EQ '').ZI17B                               00679100
&ZMS                  SETC  '&ZMS.0'                                    00679200
&ZC                   SETC  'YES'          SET BIT OFF FLAG             00679300
                      AGO   .ZI17C                                      00679400
.*                                                                      00679500
.ZI17B                ANOP  ,                                           00679600
&ZMS                  SETC  '&ZMS.1'                                    00679700
.ZI17C                ANOP  ,                                           00679800
.*-------------------------------------------------------------------   00679900
.***AI.L11 XFLAGS2 BL1                                                  00680000
                      AIF   ('&XMFSCK' NE 'NOCHECK').ZI17D              00680100
                      AIF   ('&ZC' NE 'YES').ZI17D                      00680200
&ZOPN                 SETA  &ZOPN+1                                     00680300
&ZOPL(&ZOPN)          SETC  ' '                                         00680400
&ZOPO(&ZOPN)          SETC  'NI'                                        00680500
&ZOPV(&ZOPN)          SETC  '4(1),B''&ZMS'''                            00680600
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              00680700
.ZI17D                ANOP  ,                                           00680800
                      AIF   ('&ZCLNG' NE 'YES').ZI17E  ALL ZERO BITS    00680900
&ZOPN                 SETA  &ZOPN+1                                     00681000
&ZOPL(&ZOPN)          SETC  ' '                                         00681100
&ZOPO(&ZOPN)          SETC  'OI'                                        00681200
&ZOPV(&ZOPN)          SETC  '4(1),B''&ZW'''                             00681300
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              00681400
.ZI17E                ANOP  ,                                           00681500
.*-------------------------------------------------------------------   00681600
.***AI.L07 XTYPE AL1                                                    00681700
&ZW                   SETC  ''                                          00681800
.*-------------------------------------------------------------------   00681900
.***AI.L15 XTYPE "BYTOKEN" AL1                                          00682000
         AIF   ('&XTYPE' NE 'BYTOKEN').ZI19A                            00682100
&ZW                   SETC  '0'                                         00682200
.ZI19A                ANOP  ,                                           00682300
.*-------------------------------------------------------------------   00682400
.***AI.L15 XTYPE "CURRENT" AL1                                          00682500
         AIF   ('&XTYPE' NE 'CURRENT').ZI20A                            00682600
&ZW                   SETC  '1'                                         00682700
.ZI20A                ANOP  ,                                           00682800
.*-------------------------------------------------------------------   00682900
.***AI.L15 XTYPE "OLDEST" AL1                                           00683000
         AIF   ('&XTYPE' NE 'OLDEST').ZI21A                             00683100
&ZW                   SETC  '2'                                         00683200
.ZI21A                ANOP  ,                                           00683300
.*-------------------------------------------------------------------   00683400
.***AI.L17 XTYPE AL1                                                    00683500
                      AIF   ('&ZW' NE '0').ZI21C                        00683600
                      AIF   ('&XMFSCK' EQ 'COMPLETE').ZI21B             00683700
.ZI21C                ANOP  ,                                           00683800
                      AIF   ('&ZW' EQ '').ZI21B                         00683900
.*                                                                      00684000
&ZOPN                 SETA  &ZOPN+1                                     00684100
&ZOPL(&ZOPN)          SETC  ' '                                         00684200
&ZOPO(&ZOPN)          SETC  'MVI'                                       00684300
&ZOPV(&ZOPN)          SETC  '5(1),&ZW'                                  00684400
&ZOPD(&ZOPN)          SETC  '++ &ZXTYPE XTYPE'                          00684500
.ZI21B                ANOP  ,                                           00684600
.*-------------------------------------------------------------------   00684700
.***AI.L19 ADDR XCMDINFO A                                              00684800
                      AIF   ('&ZXCMDINFO' EQ '').ZI25H                  00684900
&ZCLNG                SETC  '&XCMDINFO'                                 00685000
&ZCGPR                SETC  '14'                                        00685100
         AIF   ('&XCMDINFO'(1,1) EQ '(').ZI25F  IN GPR                  00685200
.*                                                                      00685300
&ZOPN                 SETA  &ZOPN+1                                     00685400
&ZOPL(&ZOPN)          SETC  ' '                                         00685500
&ZOPO(&ZOPN)          SETC  'LA'                                        00685600
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00685700
&ZOPD(&ZOPN)          SETC  '++ &ZXCMDINFO XCMDINFO'                    00685800
.*                                                                      00685900
                      AGO   .ZI25G                                      00686000
.*                                                                      00686100
.ZI25F                ANOP  ,                                           00686200
&ZCGPR   SETC  '&XCMDINFO'(2,K'&XCMDINFO-2)                             00686300
.*                                                                      00686400
.ZI25G                ANOP  ,                                           00686500
.*                                                                      00686600
&ZOPN                 SETA  &ZOPN+1                                     00686700
&ZOPL(&ZOPN)          SETC  ' '                                         00686800
&ZOPO(&ZOPN)          SETC  'ST'                                        00686900
&ZOPV(&ZOPN)          SETC  '&ZCGPR,36(,1)'                             00687000
&ZOPD(&ZOPN)          SETC  '++ &ZXCMDINFO XCMDINFO'                    00687100
.*                                                                      00687200
.ZI25H                ANOP  ,                                           00687300
.*-------------------------------------------------------------------   00687400
.***AI.L19 ADDR XDSNAME A                                               00687500
                      AIF   ('&ZXDSNAME' EQ '').ZI30H                   00687600
&ZCLNG                SETC  '&XDSNAME'                                  00687700
&ZCGPR                SETC  '14'                                        00687800
         AIF   ('&XDSNAME'(1,1) EQ '(').ZI30F  IN GPR                   00687900
.*                                                                      00688000
&ZOPN                 SETA  &ZOPN+1                                     00688100
&ZOPL(&ZOPN)          SETC  ' '                                         00688200
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00688300
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00688400
&ZOPD(&ZOPN)          SETC  '++ &ZXDSNAME XDSNAME'                      00688500
.*                                                                      00688600
                      AGO   .ZI30G                                      00688700
.*                                                                      00688800
.ZI30F                ANOP  ,                                           00688900
&ZCGPR   SETC  '&XDSNAME'(2,K'&XDSNAME-2)                               00689000
.*                                                                      00689100
.ZI30G                ANOP  ,                                           00689200
.*                                                                      00689300
&ZOPN                 SETA  &ZOPN+1                                     00689400
&ZOPL(&ZOPN)          SETC  ' '                                         00689500
&ZOPO(&ZOPN)          SETC  'ST'                                        00689600
&ZOPV(&ZOPN)          SETC  '&ZCGPR,20(,1)'                             00689700
&ZOPD(&ZOPN)          SETC  '++ &ZXDSNAME XDSNAME'                      00689800
.*                                                                      00689900
.ZI30H                ANOP  ,                                           00690000
.*-------------------------------------------------------------------   00690100
.***AI.L23 ALET XDSNAME F                                               00690200
         AIF   ('&ZXDSNAME' EQ '').ZI31G                                00690300
         AIF   ('&SYSASCE' EQ 'P').ZI31G   SYSSTATE PRIMARY             00690400
&ZCLNG                SETC  '&XDSNAME'                                  00690500
         AIF   ('&XDSNAME'(1,1) EQ '(').ZI31E  IN AR                    00690600
.*                                                                      00690700
&ZCGPR                SETC  '14'                                        00690800
                      AGO   .ZI31F                                      00690900
.*                                                                      00691000
.ZI31E                ANOP  ,                                           00691100
&ZCGPR   SETC  '&XDSNAME'(2,K'&XDSNAME-2)                               00691200
.*                                                                      00691300
.ZI31F                ANOP  ,                                           00691400
.*                                                                      00691500
&ZOPN                 SETA  &ZOPN+1                                     00691600
&ZOPL(&ZOPN)          SETC  ' '                                         00691700
&ZOPO(&ZOPN)          SETC  'STAM'                                      00691800
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCGPR,24(1)'                       00691900
&ZOPD(&ZOPN)          SETC  '++ &ZXDSNAME XDSNAME'                      00692000
.*                                                                      00692100
.ZI31G                ANOP  ,                                           00692200
.*-------------------------------------------------------------------   00692300
.***AI.L25  XDDNAME CL8                                                 00692400
                      AIF   ('&ZXDDNAME' EQ '').ZI33E                   00692500
                      AIF   ('&ZXDDNAME' EQ 'OUTPUT').ZI33E             00692600
&ZCGPR                SETC  '&XDDNAME'                                  00692700
.*                                                                      00692800
                      AIF   ('&XDDNAME'(1,1) NE '(').ZI33B              00692900
&ZCGPR   SETC  '0('.'&XDDNAME'(2,K'&XDDNAME-2).')'                      00693000
.ZI33B                ANOP  ,                                           00693100
.*                                                                      00693200
&ZOPN                 SETA  &ZOPN+1                                     00693300
&ZOPL(&ZOPN)          SETC  ' '                                         00693400
&ZOPO(&ZOPN)          SETC  'MVC'                                       00693500
&ZOPV(&ZOPN)          SETC  '20(8,1),&ZCGPR'                            00693600
&ZOPD(&ZOPN)          SETC  '++ &ZXDDNAME XDDNAME'                      00693700
.*                                                                      00693800
.ZI33E                ANOP  ,                                           00693900
.*-------------------------------------------------------------------   00694000
.***AI.L19 ADDR XDCB A                                                  00694100
                      AIF   ('&ZXDCB' EQ '').ZI35H                      00694200
&ZCLNG                SETC  '&XDCB'                                     00694300
&ZCGPR                SETC  '14'                                        00694400
         AIF   ('&XDCB'(1,1) EQ '(').ZI35F  IN GPR                      00694500
.*                                                                      00694600
&ZOPN                 SETA  &ZOPN+1                                     00694700
&ZOPL(&ZOPN)          SETC  ' '                                         00694800
&ZOPO(&ZOPN)          SETC  'LA'                                        00694900
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00695000
&ZOPD(&ZOPN)          SETC  '++ &ZXDCB XDCB'                            00695100
.*                                                                      00695200
                      AGO   .ZI35G                                      00695300
.*                                                                      00695400
.ZI35F                ANOP  ,                                           00695500
&ZCGPR   SETC  '&XDCB'(2,K'&XDCB-2)                                     00695600
.*                                                                      00695700
.ZI35G                ANOP  ,                                           00695800
.*                                                                      00695900
&ZOPN                 SETA  &ZOPN+1                                     00696000
&ZOPL(&ZOPN)          SETC  ' '                                         00696100
&ZOPO(&ZOPN)          SETC  'ST'                                        00696200
&ZOPV(&ZOPN)          SETC  '&ZCGPR,20(,1)'                             00696300
&ZOPD(&ZOPN)          SETC  '++ &ZXDCB XDCB'                            00696400
.*                                                                      00696500
.ZI35H                ANOP  ,                                           00696600
.*-------------------------------------------------------------------   00696700
.***AI.L25  XDCBPTR AL4                                                 00696800
                      AIF   ('&ZXDCBPTR' EQ '').ZI37E                   00696900
                      AIF   ('&ZXDCBPTR' EQ 'OUTPUT').ZI37E             00697000
&ZCGPR                SETC  '&XDCBPTR'                                  00697100
.*                                                                      00697200
                      AIF   ('&XDCBPTR'(1,1) NE '(').ZI37B              00697300
&ZCGPR   SETC  '0('.'&XDCBPTR'(2,K'&XDCBPTR-2).')'                      00697400
.ZI37B                ANOP  ,                                           00697500
.*                                                                      00697600
&ZC                   SETC  '&XDCBPTR'(1,1)                             00697700
                      AIF   (T'&ZC NE 'N').ZI37D                        00697800
&ZC                   SETC  '&XDCBPTR'                                  00697900
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI37D               00698000
&ZCGPR                SETC  '=AL4(&XDCBPTR)'                            00698100
.*                                                                      00698200
.ZI37D                ANOP  ,                                           00698300
.*                                                                      00698400
&ZOPN                 SETA  &ZOPN+1                                     00698500
&ZOPL(&ZOPN)          SETC  ' '                                         00698600
&ZOPO(&ZOPN)          SETC  'MVC'                                       00698700
&ZOPV(&ZOPN)          SETC  '20(4,1),&ZCGPR'                            00698800
&ZOPD(&ZOPN)          SETC  '++ &ZXDCBPTR XDCBPTR'                      00698900
.*                                                                      00699000
.ZI37E                ANOP  ,                                           00699100
.*-------------------------------------------------------------------   00699200
.***AI.L19 ADDR XMASKDSNAME A                                           00699300
                      AIF   ('&ZXMASKDSNAME' EQ '').ZI39H               00699400
&ZCLNG                SETC  '&XMASKDSNAME'                              00699500
&ZCGPR                SETC  '14'                                        00699600
         AIF   ('&XMASKDSNAME'(1,1) EQ '(').ZI39F  IN GPR               00699700
.*                                                                      00699800
&ZOPN                 SETA  &ZOPN+1                                     00699900
&ZOPL(&ZOPN)          SETC  ' '                                         00700000
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00700100
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00700200
&ZOPD(&ZOPN)          SETC  '++ &ZXMASKDSNAME XMASKDSNAME'              00700300
.*                                                                      00700400
                      AGO   .ZI39G                                      00700500
.*                                                                      00700600
.ZI39F                ANOP  ,                                           00700700
&ZCGPR   SETC  '&XMASKDSNAME'(2,K'&XMASKDSNAME-2)                       00700800
.*                                                                      00700900
.ZI39G                ANOP  ,                                           00701000
.*                                                                      00701100
&ZOPN                 SETA  &ZOPN+1                                     00701200
&ZOPL(&ZOPN)          SETC  ' '                                         00701300
&ZOPO(&ZOPN)          SETC  'ST'                                        00701400
&ZOPV(&ZOPN)          SETC  '&ZCGPR,20(,1)'                             00701500
&ZOPD(&ZOPN)          SETC  '++ &ZXMASKDSNAME XMASKDSNAME'              00701600
.*                                                                      00701700
.ZI39H                ANOP  ,                                           00701800
.*-------------------------------------------------------------------   00701900
.***AI.L23 ALET XMASKDSNAME F                                           00702000
         AIF   ('&ZXMASKDSNAME' EQ '').ZI40G                            00702100
         AIF   ('&SYSASCE' EQ 'P').ZI40G   SYSSTATE PRIMARY             00702200
&ZCLNG                SETC  '&XMASKDSNAME'                              00702300
         AIF   ('&XMASKDSNAME'(1,1) EQ '(').ZI40E  IN AR                00702400
.*                                                                      00702500
&ZCGPR                SETC  '14'                                        00702600
                      AGO   .ZI40F                                      00702700
.*                                                                      00702800
.ZI40E                ANOP  ,                                           00702900
&ZCGPR   SETC  '&XMASKDSNAME'(2,K'&XMASKDSNAME-2)                       00703000
.*                                                                      00703100
.ZI40F                ANOP  ,                                           00703200
.*                                                                      00703300
&ZOPN                 SETA  &ZOPN+1                                     00703400
&ZOPL(&ZOPN)          SETC  ' '                                         00703500
&ZOPO(&ZOPN)          SETC  'STAM'                                      00703600
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCGPR,24(1)'                       00703700
&ZOPD(&ZOPN)          SETC  '++ &ZXMASKDSNAME XMASKDSNAME'              00703800
.*                                                                      00703900
.ZI40G                ANOP  ,                                           00704000
.*-------------------------------------------------------------------   00704100
.***AI.L25  XMASKDDNAME CL8                                             00704200
                      AIF   ('&ZXMASKDDNAME' EQ '').ZI42E               00704300
                      AIF   ('&ZXMASKDDNAME' EQ 'OUTPUT').ZI42E         00704400
&ZCGPR                SETC  '&XMASKDDNAME'                              00704500
.*                                                                      00704600
                      AIF   ('&XMASKDDNAME'(1,1) NE '(').ZI42B          00704700
&ZCGPR   SETC  '0('.'&XMASKDDNAME'(2,K'&XMASKDDNAME-2).')'              00704800
.ZI42B                ANOP  ,                                           00704900
.*                                                                      00705000
&ZOPN                 SETA  &ZOPN+1                                     00705100
&ZOPL(&ZOPN)          SETC  ' '                                         00705200
&ZOPO(&ZOPN)          SETC  'MVC'                                       00705300
&ZOPV(&ZOPN)          SETC  '20(8,1),&ZCGPR'                            00705400
&ZOPD(&ZOPN)          SETC  '++ &ZXMASKDDNAME XMASKDDNAME'              00705500
.*                                                                      00705600
.ZI42E                ANOP  ,                                           00705700
.*-------------------------------------------------------------------   00705800
.***AI.L19 ADDR XMASKDCB A                                              00705900
                      AIF   ('&ZXMASKDCB' EQ '').ZI44H                  00706000
&ZCLNG                SETC  '&XMASKDCB'                                 00706100
&ZCGPR                SETC  '14'                                        00706200
         AIF   ('&XMASKDCB'(1,1) EQ '(').ZI44F  IN GPR                  00706300
.*                                                                      00706400
&ZOPN                 SETA  &ZOPN+1                                     00706500
&ZOPL(&ZOPN)          SETC  ' '                                         00706600
&ZOPO(&ZOPN)          SETC  'LA'                                        00706700
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00706800
&ZOPD(&ZOPN)          SETC  '++ &ZXMASKDCB XMASKDCB'                    00706900
.*                                                                      00707000
                      AGO   .ZI44G                                      00707100
.*                                                                      00707200
.ZI44F                ANOP  ,                                           00707300
&ZCGPR   SETC  '&XMASKDCB'(2,K'&XMASKDCB-2)                             00707400
.*                                                                      00707500
.ZI44G                ANOP  ,                                           00707600
.*                                                                      00707700
&ZOPN                 SETA  &ZOPN+1                                     00707800
&ZOPL(&ZOPN)          SETC  ' '                                         00707900
&ZOPO(&ZOPN)          SETC  'ST'                                        00708000
&ZOPV(&ZOPN)          SETC  '&ZCGPR,20(,1)'                             00708100
&ZOPD(&ZOPN)          SETC  '++ &ZXMASKDCB XMASKDCB'                    00708200
.*                                                                      00708300
.ZI44H                ANOP  ,                                           00708400
.*-------------------------------------------------------------------   00708500
.***AI.L25  XMASKDCBPTR AL4                                             00708600
                      AIF   ('&ZXMASKDCBPTR' EQ '').ZI46E               00708700
                      AIF   ('&ZXMASKDCBPTR' EQ 'OUTPUT').ZI46E         00708800
&ZCGPR                SETC  '&XMASKDCBPTR'                              00708900
.*                                                                      00709000
                      AIF   ('&XMASKDCBPTR'(1,1) NE '(').ZI46B          00709100
&ZCGPR   SETC  '0('.'&XMASKDCBPTR'(2,K'&XMASKDCBPTR-2).')'              00709200
                      AGO   .ZI46D                                      00709300
.ZI46B                ANOP  ,                                           00709400
.*                                                                      00709500
&ZC                   SETC  '&XMASKDCBPTR'(1,1)                         00709600
                      AIF   (T'&ZC NE 'N').ZI46D                        00709700
&ZC                   SETC  '&XMASKDCBPTR'                              00709800
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI46D               00709900
&ZCGPR                SETC  '=AL4(&XMASKDCBPTR)'                        00710000
.*                                                                      00710100
.ZI46D                ANOP  ,                                           00710200
.*                                                                      00710300
&ZOPN                 SETA  &ZOPN+1                                     00710400
&ZOPL(&ZOPN)          SETC  ' '                                         00710500
&ZOPO(&ZOPN)          SETC  'MVC'                                       00710600
&ZOPV(&ZOPN)          SETC  '20(4,1),&ZCGPR'                            00710700
&ZOPD(&ZOPN)          SETC  '++ &ZXMASKDCBPTR XMASKDCBPTR'              00710800
.*                                                                      00710900
.ZI46E                ANOP  ,                                           00711000
.*-------------------------------------------------------------------   00711100
.***AI.L05 XFLAGS0DEF BL1                                               00711200
&ZW                   SETC  ''                                          00711300
&ZCLNG                SETC  ''             RESET BIT ON FLAG            00711400
&ZMS                  SETC  ''                                          00711500
&ZC                   SETC  ''                                          00711600
.*-------------------------------------------------------------------   00711700
.***AI.L08 XFLAGS0DEF "MASKDSNAME"                                      00711800
.***      BL1'1XXXXXXX'                                                 00711900
         AIF   ('&MASKDSNAME' EQ '').ZI49A                              00712000
         AIF   ('&MASKDSNAME' EQ '').ZI49A                              00712100
&ZW                   SETC  '&ZW.1'                                     00712200
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00712300
&ZMS                  SETC  '&ZMS.0'                                    00712400
                      AGO   .ZI49C                                      00712500
.*                                                                      00712600
.ZI49A                ANOP  ,                                           00712700
&ZW                   SETC  '&ZW.0'                                     00712800
&ZMS                  SETC  '&ZMS.1'                                    00712900
.ZI49C                ANOP  ,                                           00713000
.*-------------------------------------------------------------------   00713100
.***AI.L08 XFLAGS0DEF "MASKDDNAME"                                      00713200
.***      BL1'X1XXXXXX'                                                 00713300
         AIF   ('&MASKDDNAME' EQ '').ZI50A                              00713400
         AIF   ('&MASKDDNAME' EQ '').ZI50A                              00713500
&ZW                   SETC  '&ZW.1'                                     00713600
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00713700
&ZMS                  SETC  '&ZMS.0'                                    00713800
                      AGO   .ZI50C                                      00713900
.*                                                                      00714000
.ZI50A                ANOP  ,                                           00714100
&ZW                   SETC  '&ZW.0'                                     00714200
&ZMS                  SETC  '&ZMS.1'                                    00714300
.ZI50C                ANOP  ,                                           00714400
.*-------------------------------------------------------------------   00714500
.***AI.L08 XFLAGS0DEF "MASKDCBPTR"                                      00714600
.***      BL1'XX1XXXXX'                                                 00714700
         AIF   ('&MASKDCBPTR' EQ '').ZI51A                              00714800
         AIF   ('&MASKDCBPTR' EQ '').ZI51A                              00714900
&ZW                   SETC  '&ZW.1'                                     00715000
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00715100
&ZMS                  SETC  '&ZMS.0'                                    00715200
                      AGO   .ZI51C                                      00715300
.*                                                                      00715400
.ZI51A                ANOP  ,                                           00715500
&ZW                   SETC  '&ZW.0'                                     00715600
&ZMS                  SETC  '&ZMS.1'                                    00715700
.ZI51C                ANOP  ,                                           00715800
.*-------------------------------------------------------------------   00715900
.***AI.L08 XFLAGS0DEF "MASKDCB"                                         00716000
.***      BL1'XXX1XXXX'                                                 00716100
         AIF   ('&MASKDCB' EQ '').ZI52A                                 00716200
         AIF   ('&MASKDCB' EQ '').ZI52A                                 00716300
&ZW                   SETC  '&ZW.10000'                                 00716400
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00716500
&ZMS                  SETC  '&ZMS.01111'                                00716600
                      AGO   .ZI52C                                      00716700
.*                                                                      00716800
.ZI52A                ANOP  ,                                           00716900
&ZW                   SETC  '&ZW.00000'                                 00717000
&ZMS                  SETC  '&ZMS.11111'                                00717100
.ZI52C                ANOP  ,                                           00717200
.*-------------------------------------------------------------------   00717300
.***AI.L11 XFLAGS0DEF BL1                                               00717400
                      AIF   ('&XMFSCK' NE 'NOCHECK').ZI52D              00717500
                      AIF   ('&ZC' NE 'YES').ZI52D                      00717600
&ZOPN                 SETA  &ZOPN+1                                     00717700
&ZOPL(&ZOPN)          SETC  ' '                                         00717800
&ZOPO(&ZOPN)          SETC  'NI'                                        00717900
&ZOPV(&ZOPN)          SETC  '2(1),B''&ZMS'''                            00718000
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              00718100
.ZI52D                ANOP  ,                                           00718200
                      AIF   ('&ZCLNG' NE 'YES').ZI52E  ALL ZERO BITS    00718300
&ZOPN                 SETA  &ZOPN+1                                     00718400
&ZOPL(&ZOPN)          SETC  ' '                                         00718500
&ZOPO(&ZOPN)          SETC  'OI'                                        00718600
&ZOPV(&ZOPN)          SETC  '2(1),B''&ZW'''                             00718700
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              00718800
.ZI52E                ANOP  ,                                           00718900
.*-------------------------------------------------------------------   00719000
.***AI.L25  XREQUESTOR CL16                                             00719100
                      AIF   ('&ZXREQUESTOR' EQ '').ZI54E                00719200
                      AIF   ('&ZXREQUESTOR' EQ 'OUTPUT').ZI54E          00719300
&ZCGPR                SETC  '&XREQUESTOR'                               00719400
.*                                                                      00719500
                      AIF   ('&XREQUESTOR'(1,1) NE '(').ZI54B           00719600
&ZCGPR   SETC  '0('.'&XREQUESTOR'(2,K'&XREQUESTOR-2).')'                00719700
.ZI54B                ANOP  ,                                           00719800
.*                                                                      00719900
&ZOPN                 SETA  &ZOPN+1                                     00720000
&ZOPL(&ZOPN)          SETC  ' '                                         00720100
&ZOPO(&ZOPN)          SETC  'MVC'                                       00720200
&ZOPV(&ZOPN)          SETC  '52(16,1),&ZCGPR'                           00720300
&ZOPD(&ZOPN)          SETC  '++ &ZXREQUESTOR XREQUESTOR'                00720400
.*                                                                      00720500
.ZI54E                ANOP  ,                                           00720600
.*-------------------------------------------------------------------   00720700
.***AI.L25  XOUTAREASP XL1                                              00720800
                      AIF   ('&ZXOUTAREASP' EQ '').ZI57E                00720900
                      AIF   ('&ZXOUTAREASP' EQ 'OUTPUT').ZI57E          00721000
&ZCGPR                SETC  '&XOUTAREASP'                               00721100
.*                                                                      00721200
                      AIF   ('&XOUTAREASP'(1,1) NE '(').ZI57B           00721300
&ZCGPR   SETC  '0('.'&XOUTAREASP'(2,K'&XOUTAREASP-2).')'                00721400
                      AGO   .ZI57D                                      00721500
.ZI57B                ANOP  ,                                           00721600
.*                                                                      00721700
&ZC                   SETC  '&XOUTAREASP'(1,1)                          00721800
                      AIF   (T'&ZC NE 'N').ZI57D                        00721900
&ZC                   SETC  '&XOUTAREASP'                               00722000
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI57D               00722100
&ZCGPR                SETC  '=AL1(&XOUTAREASP)'                         00722200
.*                                                                      00722300
.ZI57D                ANOP  ,                                           00722400
.*                                                                      00722500
&ZOPN                 SETA  &ZOPN+1                                     00722600
&ZOPL(&ZOPN)          SETC  ' '                                         00722700
&ZOPO(&ZOPN)          SETC  'MVC'                                       00722800
&ZOPV(&ZOPN)          SETC  '76(1,1),&ZCGPR'                            00722900
&ZOPD(&ZOPN)          SETC  '++ &ZXOUTAREASP XOUTAREASP'                00723000
.*                                                                      00723100
.ZI57E                ANOP  ,                                           00723200
.*-------------------------------------------------------------------   00723300
.***AI.L18 ADDR XMODINFOX A                                             00723400
         AIF   ('&XMODINFOX' NE 'NO_MODINFOX').ZI60                     00723500
                      AIF   ('&XMFSCK' NE 'COMPLETE').ZI60  CK *        00723600
&ZXMODINFOX           SETC  ''             RESET INPUT/OUTPUT           00723700
.ZI60                 ANOP  ,                                           00723800
.*-------------------------------------------------------------------   00723900
.***AI.L19 ADDR XMODINFOX A                                             00724000
                      AIF   ('&ZXMODINFOX' EQ '').ZI60H                 00724100
&ZCLNG                SETC  '&XMODINFOX'                                00724200
&ZCGPR                SETC  '14'                                        00724300
         AIF   ('&XMODINFOX'(1,1) EQ '(').ZI60F  IN GPR                 00724400
        AIF   ('&XMODINFOX' NE 'NO_MODINFOX').ZI60A                     00724500
                      AIF   ('&XMFSCK' EQ 'COMPLETE').ZI60H             00724600
.*                                                                      00724700
&ZCLNG                SETC  '=XL4''00'''                                00724800
.ZI60A                ANOP  ,                                           00724900
.*                                                                      00725000
&ZOPN                 SETA  &ZOPN+1                                     00725100
&ZOPL(&ZOPN)          SETC  ' '                                         00725200
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00725300
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00725400
&ZOPD(&ZOPN)          SETC  '++ &ZXMODINFOX XMODINFOX'                  00725500
.*                                                                      00725600
                      AGO   .ZI60G                                      00725700
.*                                                                      00725800
.ZI60F                ANOP  ,                                           00725900
&ZCGPR   SETC  '&XMODINFOX'(2,K'&XMODINFOX-2)                           00726000
.*                                                                      00726100
.ZI60G                ANOP  ,                                           00726200
.*                                                                      00726300
&ZOPN                 SETA  &ZOPN+1                                     00726400
&ZOPL(&ZOPN)          SETC  ' '                                         00726500
&ZOPO(&ZOPN)          SETC  'ST'                                        00726600
&ZOPV(&ZOPN)          SETC  '&ZCGPR,84(,1)'                             00726700
&ZOPD(&ZOPN)          SETC  '++ &ZXMODINFOX XMODINFOX'                  00726800
.*                                                                      00726900
.ZI60H                ANOP  ,                                           00727000
.*-------------------------------------------------------------------   00727100
.***AI.L18 ALET XMODINFOX F                                             00727200
         AIF   ('&XMODINFOX' NE 'NO_MODINFOX').ZI61                     00727300
                      AIF   ('&XMFSCK' NE 'COMPLETE').ZI61  CK *        00727400
&ZXMODINFOX           SETC  ''             RESET INPUT/OUTPUT           00727500
.ZI61                 ANOP  ,                                           00727600
.*-------------------------------------------------------------------   00727700
.***AI.L23 ALET XMODINFOX F                                             00727800
         AIF   ('&ZXMODINFOX' EQ '').ZI61G                              00727900
         AIF   ('&SYSASCE' EQ 'P').ZI61G   SYSSTATE PRIMARY             00728000
&ZCLNG                SETC  '&XMODINFOX'                                00728100
         AIF   ('&XMODINFOX'(1,1) EQ '(').ZI61E  IN AR                  00728200
.*                                                                      00728300
        AIF   ('&XMODINFOX' NE 'NO_MODINFOX').ZI61A                     00728400
                      AIF   ('&XMFSCK' EQ 'COMPLETE').ZI61G             00728500
.*                                                                      00728600
&ZCLNG                SETC  '=XL4''00'''                                00728700
.ZI61A                ANOP  ,                                           00728800
.*                                                                      00728900
&ZCGPR                SETC  '14'                                        00729000
                      AGO   .ZI61F                                      00729100
.*                                                                      00729200
.ZI61E                ANOP  ,                                           00729300
&ZCGPR   SETC  '&XMODINFOX'(2,K'&XMODINFOX-2)                           00729400
.*                                                                      00729500
.ZI61F                ANOP  ,                                           00729600
.*                                                                      00729700
&ZOPN                 SETA  &ZOPN+1                                     00729800
&ZOPL(&ZOPN)          SETC  ' '                                         00729900
&ZOPO(&ZOPN)          SETC  'STAM'                                      00730000
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCGPR,88(1)'                       00730100
&ZOPD(&ZOPN)          SETC  '++ &ZXMODINFOX XMODINFOX'                  00730200
.*                                                                      00730300
.ZI61G                ANOP  ,                                           00730400
.*-------------------------------------------------------------------   00730500
.***AI.L19 ADDR XMODINFO A                                              00730600
                      AIF   ('&ZXMODINFO' EQ '').ZI64H                  00730700
&ZCLNG                SETC  '&XMODINFO'                                 00730800
&ZCGPR                SETC  '14'                                        00730900
         AIF   ('&XMODINFO'(1,1) EQ '(').ZI64F  IN GPR                  00731000
.*                                                                      00731100
&ZOPN                 SETA  &ZOPN+1                                     00731200
&ZOPL(&ZOPN)          SETC  ' '                                         00731300
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00731400
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00731500
&ZOPD(&ZOPN)          SETC  '++ &ZXMODINFO XMODINFO'                    00731600
.*                                                                      00731700
                      AGO   .ZI64G                                      00731800
.*                                                                      00731900
.ZI64F                ANOP  ,                                           00732000
&ZCGPR   SETC  '&XMODINFO'(2,K'&XMODINFO-2)                             00732100
.*                                                                      00732200
.ZI64G                ANOP  ,                                           00732300
.*                                                                      00732400
&ZOPN                 SETA  &ZOPN+1                                     00732500
&ZOPL(&ZOPN)          SETC  ' '                                         00732600
&ZOPO(&ZOPN)          SETC  'ST'                                        00732700
&ZOPV(&ZOPN)          SETC  '&ZCGPR,8(,1)'                              00732800
&ZOPD(&ZOPN)          SETC  '++ &ZXMODINFO XMODINFO'                    00732900
.*                                                                      00733000
.ZI64H                ANOP  ,                                           00733100
.*-------------------------------------------------------------------   00733200
.***AI.L23 ALET XMODINFO F                                              00733300
         AIF   ('&ZXMODINFO' EQ '').ZI65G                               00733400
         AIF   ('&SYSASCE' EQ 'P').ZI65G   SYSSTATE PRIMARY             00733500
&ZCLNG                SETC  '&XMODINFO'                                 00733600
         AIF   ('&XMODINFO'(1,1) EQ '(').ZI65E  IN AR                   00733700
.*                                                                      00733800
&ZCGPR                SETC  '14'                                        00733900
                      AGO   .ZI65F                                      00734000
.*                                                                      00734100
.ZI65E                ANOP  ,                                           00734200
&ZCGPR   SETC  '&XMODINFO'(2,K'&XMODINFO-2)                             00734300
.*                                                                      00734400
.ZI65F                ANOP  ,                                           00734500
.*                                                                      00734600
&ZOPN                 SETA  &ZOPN+1                                     00734700
&ZOPL(&ZOPN)          SETC  ' '                                         00734800
&ZOPO(&ZOPN)          SETC  'STAM'                                      00734900
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCGPR,12(1)'                       00735000
&ZOPD(&ZOPN)          SETC  '++ &ZXMODINFO XMODINFO'                    00735100
.*                                                                      00735200
.ZI65G                ANOP  ,                                           00735300
.*-------------------------------------------------------------------   00735400
.***AI.L25  XNUMMOD F                                                   00735500
                      AIF   ('&ZXNUMMOD' EQ '').ZI66E                   00735600
                      AIF   ('&ZXNUMMOD' EQ 'OUTPUT').ZI66E             00735700
&ZCGPR                SETC  '&XNUMMOD'                                  00735800
.*                                                                      00735900
                      AIF   ('&XNUMMOD'(1,1) NE '(').ZI66B              00736000
&ZCGPR   SETC  '0('.'&XNUMMOD'(2,K'&XNUMMOD-2).')'                      00736100
                      AGO   .ZI66D                                      00736200
.ZI66B                ANOP  ,                                           00736300
.*                                                                      00736400
&ZC                   SETC  '&XNUMMOD'(1,1)                             00736500
                      AIF   (T'&ZC NE 'N').ZI66D                        00736600
&ZC                   SETC  '&XNUMMOD'                                  00736700
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI66D               00736800
&ZCGPR                SETC  '=FL4''&XNUMMOD'''                          00736900
.*                                                                      00737000
.ZI66D                ANOP  ,                                           00737100
.*                                                                      00737200
&ZOPN                 SETA  &ZOPN+1                                     00737300
&ZOPL(&ZOPN)          SETC  ' '                                         00737400
&ZOPO(&ZOPN)          SETC  'MVC'                                       00737500
&ZOPV(&ZOPN)          SETC  '16(4,1),&ZCGPR'                            00737600
&ZOPD(&ZOPN)          SETC  '++ &ZXNUMMOD XNUMMOD'                      00737700
.*                                                                      00737800
.ZI66E                ANOP  ,                                           00737900
.*-------------------------------------------------------------------   00738000
&ZOPN1                SETA &ZOPN                                        00738100
.*-------------------------------------------------------------------   00738200
.***AI.C00 MF=M CHECK TO BYPASS INVOCATION                              00738300
                      AIF   ('&XMF' EQ 'M').ZMFLX  DONE IF MF=M         00738400
.*******************************************************************    00738500
.***  PROCESS CSVDYLPA OUTPUT PARAMETERS                                00738600
.*******************************************************************    00738700
                      ACTR  10000                                       00738800
.*------------------------------------------------------------------    00738900
.***AO.L02 XERRORDATA CL8                                               00739000
         AIF   ('&ZXERRORDATA' EQ 'OUTPUT').ZO26A  OUTPUT               00739100
         AIF   ('&ZXERRORDATA' NE 'INOUT').ZO26C  INOUT                 00739200
.ZO26A    AIF   ('&XERRORDATA'(1,1) NE '(').ZO26B  ADDR IN GPR          00739300
&ZCGPR   SETC  '&XERRORDATA'(2,K'&XERRORDATA-2)                         00739400
&ZOPN                 SETA  &ZOPN+1                                     00739500
&ZOPL(&ZOPN)          SETC  ' '                                         00739600
&ZOPO(&ZOPN)          SETC  'MVC'                                       00739700
&ZOPV(&ZOPN)          SETC  '0(8,&ZCGPR),40(1)'                         00739800
&ZOPD(&ZOPN)          SETC  '++ XERRORDATA CL8'                         00739900
                      AGO   .ZO26C                                      00740000
.*                                                                      00740100
.ZO26B                ANOP  ,                                           00740200
&ZAWRK   SETA  K'&XERRORDATA                                            00740300
         AIF   ('&XERRORDATA'(&ZAWRK,1) NE ')').ZO26G                   00740400
&ZN      SETA  2                                                        00740500
.ZO26H    ANOP                                                          00740600
         AIF   (&ZN GE &ZAWRK).ZO26G                                    00740700
         AIF   ('&XERRORDATA'(&ZN,1) NE '(').ZO26I                      00740800
&ZC      SETC  '&XERRORDATA'(1,&ZN).'8'.','                             00740900
&ZC      SETC  '&ZC'.'&XERRORDATA'(&ZN+1,&ZAWRK-&ZN).',40(1)'           00741000
         AGO   .ZO26J                                                   00741100
.ZO26I    ANOP                                                          00741200
&ZN      SETA  &ZN+1                                                    00741300
         AGO   .ZO26H                                                   00741400
.ZO26G    ANOP                                                          00741500
&ZC      SETC  '&XERRORDATA.(8),40(1)'                                  00741600
.ZO26J    ANOP                                                          00741700
&ZOPN                 SETA  &ZOPN+1                                     00741800
&ZOPL(&ZOPN)          SETC  ' '                                         00741900
&ZOPO(&ZOPN)          SETC  'MVC'                                       00742000
&ZOPV(&ZOPN)          SETC  '&ZC'                                       00742100
&ZOPD(&ZOPN)          SETC  '++ XERRORDATA CL8'                         00742200
.ZO26C                ANOP  ,                                           00742300
.*------------------------------------------------------------------    00742400
.***AO.L02 XOUTAREAPTR A                                                00742500
         AIF   ('&ZXOUTAREAPTR' EQ 'OUTPUT').ZO55A  OUTPUT              00742600
         AIF   ('&ZXOUTAREAPTR' NE 'INOUT').ZO55C  INOUT                00742700
.ZO55A    AIF   ('&XOUTAREAPTR'(1,1) NE '(').ZO55B  ADDR IN GPR         00742800
&ZCGPR   SETC  '&XOUTAREAPTR'(2,K'&XOUTAREAPTR-2)                       00742900
&ZOPN                 SETA  &ZOPN+1                                     00743000
&ZOPL(&ZOPN)          SETC  ' '                                         00743100
&ZOPO(&ZOPN)          SETC  'MVC'                                       00743200
&ZOPV(&ZOPN)          SETC  '0(4,&ZCGPR),68(1)'                         00743300
&ZOPD(&ZOPN)          SETC  '++ XOUTAREAPTR A'                          00743400
                      AGO   .ZO55C                                      00743500
.*                                                                      00743600
.ZO55B                ANOP  ,                                           00743700
&ZAWRK   SETA  K'&XOUTAREAPTR                                           00743800
         AIF   ('&XOUTAREAPTR'(&ZAWRK,1) NE ')').ZO55G                  00743900
&ZN      SETA  2                                                        00744000
.ZO55H    ANOP                                                          00744100
         AIF   (&ZN GE &ZAWRK).ZO55G                                    00744200
         AIF   ('&XOUTAREAPTR'(&ZN,1) NE '(').ZO55I                     00744300
&ZC      SETC  '&XOUTAREAPTR'(1,&ZN).'4'.','                            00744400
&ZC      SETC  '&ZC'.'&XOUTAREAPTR'(&ZN+1,&ZAWRK-&ZN).',68(1)'          00744500
         AGO   .ZO55J                                                   00744600
.ZO55I    ANOP                                                          00744700
&ZN      SETA  &ZN+1                                                    00744800
         AGO   .ZO55H                                                   00744900
.ZO55G    ANOP                                                          00745000
&ZC      SETC  '&XOUTAREAPTR.(4),68(1)'                                 00745100
.ZO55J    ANOP                                                          00745200
&ZOPN                 SETA  &ZOPN+1                                     00745300
&ZOPL(&ZOPN)          SETC  ' '                                         00745400
&ZOPO(&ZOPN)          SETC  'MVC'                                       00745500
&ZOPV(&ZOPN)          SETC  '&ZC'                                       00745600
&ZOPD(&ZOPN)          SETC  '++ XOUTAREAPTR A'                          00745700
.ZO55C                ANOP  ,                                           00745800
.*------------------------------------------------------------------    00745900
.***AO.L02 XOUTAREALEN F                                                00746000
         AIF   ('&ZXOUTAREALEN' EQ 'OUTPUT').ZO56A  OUTPUT              00746100
         AIF   ('&ZXOUTAREALEN' NE 'INOUT').ZO56C  INOUT                00746200
.ZO56A    AIF   ('&XOUTAREALEN'(1,1) NE '(').ZO56B  ADDR IN GPR         00746300
&ZCGPR   SETC  '&XOUTAREALEN'(2,K'&XOUTAREALEN-2)                       00746400
&ZOPN                 SETA  &ZOPN+1                                     00746500
&ZOPL(&ZOPN)          SETC  ' '                                         00746600
&ZOPO(&ZOPN)          SETC  'MVC'                                       00746700
&ZOPV(&ZOPN)          SETC  '0(4,&ZCGPR),72(1)'                         00746800
&ZOPD(&ZOPN)          SETC  '++ XOUTAREALEN F'                          00746900
                      AGO   .ZO56C                                      00747000
.*                                                                      00747100
.ZO56B                ANOP  ,                                           00747200
&ZAWRK   SETA  K'&XOUTAREALEN                                           00747300
         AIF   ('&XOUTAREALEN'(&ZAWRK,1) NE ')').ZO56G                  00747400
&ZN      SETA  2                                                        00747500
.ZO56H    ANOP                                                          00747600
         AIF   (&ZN GE &ZAWRK).ZO56G                                    00747700
         AIF   ('&XOUTAREALEN'(&ZN,1) NE '(').ZO56I                     00747800
&ZC      SETC  '&XOUTAREALEN'(1,&ZN).'4'.','                            00747900
&ZC      SETC  '&ZC'.'&XOUTAREALEN'(&ZN+1,&ZAWRK-&ZN).',72(1)'          00748000
         AGO   .ZO56J                                                   00748100
.ZO56I    ANOP                                                          00748200
&ZN      SETA  &ZN+1                                                    00748300
         AGO   .ZO56H                                                   00748400
.ZO56G    ANOP                                                          00748500
&ZC      SETC  '&XOUTAREALEN.(4),72(1)'                                 00748600
.ZO56J    ANOP                                                          00748700
&ZOPN                 SETA  &ZOPN+1                                     00748800
&ZOPL(&ZOPN)          SETC  ' '                                         00748900
&ZOPO(&ZOPN)          SETC  'MVC'                                       00749000
&ZOPV(&ZOPN)          SETC  '&ZC'                                       00749100
&ZOPD(&ZOPN)          SETC  '++ XOUTAREALEN F'                          00749200
.ZO56C                ANOP  ,                                           00749300
.*------------------------------------------------------------------    00749400
.***AO.L02 XOUTAREASP FL1                                               00749500
         AIF   ('&ZXOUTAREASP' EQ 'OUTPUT').ZO57A  OUTPUT               00749600
         AIF   ('&ZXOUTAREASP' NE 'INOUT').ZO57C  INOUT                 00749700
.ZO57A    AIF   ('&XOUTAREASP'(1,1) NE '(').ZO57B  ADDR IN GPR          00749800
&ZCGPR   SETC  '&XOUTAREASP'(2,K'&XOUTAREASP-2)                         00749900
&ZOPN                 SETA  &ZOPN+1                                     00750000
&ZOPL(&ZOPN)          SETC  ' '                                         00750100
&ZOPO(&ZOPN)          SETC  'MVC'                                       00750200
&ZOPV(&ZOPN)          SETC  '0(1,&ZCGPR),76(1)'                         00750300
&ZOPD(&ZOPN)          SETC  '++ XOUTAREASP FL1'                         00750400
                      AGO   .ZO57C                                      00750500
.*                                                                      00750600
.ZO57B                ANOP  ,                                           00750700
&ZAWRK   SETA  K'&XOUTAREASP                                            00750800
         AIF   ('&XOUTAREASP'(&ZAWRK,1) NE ')').ZO57G                   00750900
&ZN      SETA  2                                                        00751000
.ZO57H    ANOP                                                          00751100
         AIF   (&ZN GE &ZAWRK).ZO57G                                    00751200
         AIF   ('&XOUTAREASP'(&ZN,1) NE '(').ZO57I                      00751300
&ZC      SETC  '&XOUTAREASP'(1,&ZN).'1'.','                             00751400
&ZC      SETC  '&ZC'.'&XOUTAREASP'(&ZN+1,&ZAWRK-&ZN).',76(1)'           00751500
         AGO   .ZO57J                                                   00751600
.ZO57I    ANOP                                                          00751700
&ZN      SETA  &ZN+1                                                    00751800
         AGO   .ZO57H                                                   00751900
.ZO57G    ANOP                                                          00752000
&ZC      SETC  '&XOUTAREASP.(1),76(1)'                                  00752100
.ZO57J    ANOP                                                          00752200
&ZOPN                 SETA  &ZOPN+1                                     00752300
&ZOPL(&ZOPN)          SETC  ' '                                         00752400
&ZOPO(&ZOPN)          SETC  'MVC'                                       00752500
&ZOPV(&ZOPN)          SETC  '&ZC'                                       00752600
&ZOPD(&ZOPN)          SETC  '++ XOUTAREASP FL1'                         00752700
.ZO57C                ANOP  ,                                           00752800
.*------------------------------------------------------------------    00752900
.***AO.L02 XOUTAREANUM F                                                00753000
         AIF   ('&ZXOUTAREANUM' EQ 'OUTPUT').ZO59A  OUTPUT              00753100
         AIF   ('&ZXOUTAREANUM' NE 'INOUT').ZO59C  INOUT                00753200
.ZO59A    AIF   ('&XOUTAREANUM'(1,1) NE '(').ZO59B  ADDR IN GPR         00753300
&ZCGPR   SETC  '&XOUTAREANUM'(2,K'&XOUTAREANUM-2)                       00753400
&ZOPN                 SETA  &ZOPN+1                                     00753500
&ZOPL(&ZOPN)          SETC  ' '                                         00753600
&ZOPO(&ZOPN)          SETC  'MVC'                                       00753700
&ZOPV(&ZOPN)          SETC  '0(4,&ZCGPR),80(1)'                         00753800
&ZOPD(&ZOPN)          SETC  '++ XOUTAREANUM F'                          00753900
                      AGO   .ZO59C                                      00754000
.*                                                                      00754100
.ZO59B                ANOP  ,                                           00754200
&ZAWRK   SETA  K'&XOUTAREANUM                                           00754300
         AIF   ('&XOUTAREANUM'(&ZAWRK,1) NE ')').ZO59G                  00754400
&ZN      SETA  2                                                        00754500
.ZO59H    ANOP                                                          00754600
         AIF   (&ZN GE &ZAWRK).ZO59G                                    00754700
         AIF   ('&XOUTAREANUM'(&ZN,1) NE '(').ZO59I                     00754800
&ZC      SETC  '&XOUTAREANUM'(1,&ZN).'4'.','                            00754900
&ZC      SETC  '&ZC'.'&XOUTAREANUM'(&ZN+1,&ZAWRK-&ZN).',80(1)'          00755000
         AGO   .ZO59J                                                   00755100
.ZO59I    ANOP                                                          00755200
&ZN      SETA  &ZN+1                                                    00755300
         AGO   .ZO59H                                                   00755400
.ZO59G    ANOP                                                          00755500
&ZC      SETC  '&XOUTAREANUM.(4),80(1)'                                 00755600
.ZO59J    ANOP                                                          00755700
&ZOPN                 SETA  &ZOPN+1                                     00755800
&ZOPL(&ZOPN)          SETC  ' '                                         00755900
&ZOPO(&ZOPN)          SETC  'MVC'                                       00756000
&ZOPV(&ZOPN)          SETC  '&ZC'                                       00756100
&ZOPD(&ZOPN)          SETC  '++ XOUTAREANUM F'                          00756200
.ZO59C                ANOP  ,                                           00756300
.*******************************************************************    00756400
.***AO.X02  RETURN CODE PROCESSING                                      00756500
.*******************************************************************    00756600
                      AIF   (N'&RETCODE LE 0).ZMRETX                    00756700
                      AIF   ('&XRETCODE'(1,1) EQ '(').ZMRET2            00756800
                      AIF   ('&XRETCODE' EQ 'GPR15').ZMRETX             00756900
                      AIF   ('&XRETCODE' EQ 'REG15').ZMRETX             00757000
                      AIF   ('&XRETCODE' EQ 'R15').ZMRETX               00757100
                      AIF   ('&XRETCODE' EQ '15').ZMRETX                00757200
&ZOPN                 SETA  &ZOPN+1                                     00757300
&ZOPL(&ZOPN)          SETC  ' '                                         00757400
&ZOPO(&ZOPN)          SETC  'ST'                                        00757500
&ZOPV(&ZOPN)          SETC  '15,&XRETCODE'                              00757600
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00757700
                      AGO   .ZMRETX                                     00757800
.*                                                                      00757900
.ZMRET2               ANOP  ,                                           00758000
&ZCGPR                SETC  '&XRETCODE'(2,K'&XRETCODE-2)                00758100
                      AIF   ('&ZCGPR' EQ 'GPR15').ZMRETX                00758200
                      AIF   ('&ZCGPR' EQ 'REG15').ZMRETX                00758300
                      AIF   ('&ZCGPR' EQ 'R15').ZMRETX                  00758400
                      AIF   ('&ZCGPR' EQ '15').ZMRETX                   00758500
&ZOPN                 SETA  &ZOPN+1                                     00758600
&ZOPL(&ZOPN)          SETC  ' '                                         00758700
&ZOPO(&ZOPN)          SETC  'LR'                                        00758800
&ZOPV(&ZOPN)          SETC  '&ZCGPR,15'                                 00758900
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00759000
.ZMRETX               ANOP  ,                                           00759100
.*******************************************************************    00759200
.***AO.X03  REASON CODE PROCESSING                                      00759300
.*******************************************************************    00759400
                      AIF   (N'&RSNCODE LE 0).ZMRSNX                    00759500
                      AIF   ('&XRSNCODE'(1,1) EQ '(').ZMRSN2            00759600
                      AIF   ('&XRSNCODE' EQ 'GPR0').ZMRSNX              00759700
                      AIF   ('&XRSNCODE' EQ 'GPR00').ZMRSNX             00759800
                      AIF   ('&XRSNCODE' EQ 'REG0').ZMRSNX              00759900
                      AIF   ('&XRSNCODE' EQ 'REG00').ZMRSNX             00760000
                      AIF   ('&XRSNCODE' EQ 'R0').ZMRSNX                00760100
                      AIF   ('&XRSNCODE' EQ '0').ZMRSNX                 00760200
                      AIF   ('&XRSNCODE' EQ '00').ZMRSNX                00760300
&ZOPN                 SETA  &ZOPN+1                                     00760400
&ZOPL(&ZOPN)          SETC  ' '                                         00760500
&ZOPO(&ZOPN)          SETC  'ST'                                        00760600
&ZOPV(&ZOPN)          SETC  '0,&XRSNCODE'                               00760700
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00760800
                      AGO   .ZMRSNX                                     00760900
.*                                                                      00761000
.ZMRSN2               ANOP  ,                                           00761100
&ZCGPR                SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                00761200
                      AIF   ('&ZCGPR' EQ 'GPR0').ZMRSNX                 00761300
                      AIF   ('&ZCGPR' EQ 'GPR00').ZMRSNX                00761400
                      AIF   ('&ZCGPR' EQ 'REG0').ZMRSNX                 00761500
                      AIF   ('&ZCGPR' EQ 'REG00').ZMRSNX                00761600
                      AIF   ('&ZCGPR' EQ 'R0').ZMRSNX                   00761700
                      AIF   ('&ZCGPR' EQ '0').ZMRSNX                    00761800
                      AIF   ('&ZCGPR' EQ '00').ZMRSNX                   00761900
&ZOPN                 SETA  &ZOPN+1                                     00762000
&ZOPL(&ZOPN)          SETC  ' '                                         00762100
&ZOPO(&ZOPN)          SETC  'LR'                                        00762200
&ZOPV(&ZOPN)          SETC  '&ZCGPR,0'                                  00762300
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00762400
.ZMRSNX               ANOP  ,                                           00762500
.*******************************************************************    00762600
.***AO.X04  LABEL FOR MF=L PROCESSING                                   00762700
.*******************************************************************    00762800
.ZMFLX                ANOP  ,              MF=L PROCESSING              00762900
.*******************************************************************    00763000
.***AO.X05  FORMAT GENERATED INSTRUCTIONS                               00763100
.*******************************************************************    00763200
                      ACTR  10000                                       00763300
.*                                                                      00763400
                      LCLA  &ZLC           COLUMN POSITION              00763500
                      LCLA  &ZOPX          LIST TABLE INDEX             00763600
                      LCLC  &ZLL           LABEL                        00763700
                      LCLC  &ZLOP          OPERATION                    00763800
                      LCLC  &ZLV           VALUE                        00763900
                      LCLC  &ZLD           DESCRIPTION                  00764000
.*                                                                      00764100
&ZOPX                 SETA  1                                           00764200
.ZL2                  AIF   (&ZOPX GT &ZOPN1).ZLX  B IF DONE            00764300
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00764400
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00764500
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00764600
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00764700
                      AIF   (K'&ZLD LE 0).ZL5                           00764800
&ZLC                  SETA  35             COMMENT COLUMN               00764900
                      AIF   ('&ZLD'(1,1) NE '*').ZL3                    00765000
&ZLC                  SETA  33             COMMMENT COLUMN              00765100
.ZL3                  AIF   (K'&ZLV GE &ZLC-16-1).ZL4                   00765200
&ZLV                  SETC  '&ZLV'.' '                                  00765300
                      AGO   .ZL3                                        00765400
.*                                                                      00765500
.ZL4                  ANOP  ,                                           00765600
&ZLV                  SETC  '&ZLV'.' '                                  00765700
.ZL5                  ANOP  ,                                           00765800
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00765900
.*                                                                      00766000
&ZLL     &ZLOP &ZLV                                                     00766100
.*                                                                      00766200
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00766300
                      AGO   .ZL2           CONTINUE LOOPING             00766400
.*                                                                      00766500
.ZLX                  ANOP  ,                                           00766600
                      AIF   ('&XMF' EQ 'L').ZLINKX  MF=L                00766700
                      AIF   ('&XMF' EQ 'M').ZLINKX  MF=M                00766800
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00766900
         L     14,16(0,0)              GET CVT ADDRESS             @L1A 00767000
         L     14,772(14,0)            GET SFT ADDRESS             @L1A 00767100
         L     14,468(14,0)            GET LX/EX FOR SERVICE RTN   @L1A 00767200
         PC    0(14)                                               @L1A 00767300
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00767400
.ZLINKX               ANOP  ,                                           00767500
.*******************************************************************    00767600
.***AP.X01  FORMAT GENERATED CODE                                       00767700
.ZL21                 AIF   (&ZOPX GT &ZOPN).ZLX1  B IF DONE            00767800
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00767900
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00768000
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00768100
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00768200
                      AIF   (K'&ZLD LE 0).ZL51                          00768300
&ZLC                  SETA  35             COMMENT COLUMN               00768400
                      AIF   ('&ZLD'(1,1) NE '*').ZL31                   00768500
&ZLC                  SETA  33             COMMENT COLUMN               00768600
.ZL31                 AIF   (K'&ZLV GE &ZLC-16-1).ZL41                  00768700
&ZLV                  SETC  '&ZLV'.' '                                  00768800
                      AGO   .ZL31                                       00768900
.*                                                                      00769000
.ZL41                 ANOP  ,                                           00769100
&ZLV                  SETC  '&ZLV'.' '                                  00769200
.ZL51                 ANOP  ,                                           00769300
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00769400
.*                                                                      00769500
&ZLL     &ZLOP &ZLV                                                     00769600
.*                                                                      00769700
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00769800
                      AGO   .ZL21          CONTINUE LOOPING             00769900
.*                                                                      00770000
.ZLX1                 ANOP  ,                                           00770100
.*******************************************************************    00770200
.***AP.X02  END OF CSVDYLPA MACRO                                       00770300
&ZCSVDYLPA            SETC  'YES'          SET CSVDYLPA USED            00770400
         POP   PRINT                                                    00770500
*                                            CSVDYLPA-0                 00770600
         SPACE 1                                                        00770700
.ZLX2                 ANOP  ,                                           00770800
         MEND                                                           00770900
**********************************************************************/ 00771000
*/*PB.OC01 INVOKE MACRO---------------------------------------------*/  00771100
*%CSVDYLPA: MACRO KEYS(REQUEST,MODINFOTYPE,MODINFO,MODINFOX,NUMMOD,     00771200
*                 BYADDR,DSNAME,DDNAME,DCB,DCBPTR,MASKDSNAME,           00771300
*                 MASKDDNAME,MASKDCB,MASKDCBPTR,OUTAREAPTR,OUTAREALEN,  00771400
*                 OUTAREANUM,OUTAREASP,APFREQUIRED,SECMODCHECK,         00771500
*                 REQUESTOR,MODPROB,ERRORDATA,TYPE,DYNFUNC,LINKAGE,     00771600
*                 CMDINFO,RETCODE,RSNCODE,PLISTVER,MF);                 00771700
*  ANS('?'||MACLABEL||' '||'CSVDYLPP '||MACLIST||                       00771800
*         ' '||MACKEYS||';') COL(MACLMAR);                              00771900
*%END CSVDYLPA;                                                         00772000
