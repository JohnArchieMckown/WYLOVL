*/****************** START SPECIFICATIONS ***************************** 00000110
*                                                                     * 00000200
*01* MACRO NAME - CMDAUTH                                             * 00000300
*                                                                     * 00000400
*01* DESCRIPTIVE NAME - COMMAND AUTHORIZATION MACRO                   * 00000500
*                                                                     * 00000600
*    PROPRIETARY STATEMENT =                                            00000930
*     LICENSED MATERIALS - PROPERTY OF IBM                              00000940
*     THIS MODULE IS "RESTRICTED MATERIALS OF IBM"                      00000950
*     5695-047 (C) COPYRIGHT IBM CORP. 1989, 1990                       00000960
*     SEE COPYRIGHT INSTRUCTIONS.                                       00000970
*                                                                       00000980
*    STATUS = HBB4410                                                   00000990
*                                                                     * 00001400
*                                                                     * 00001410
*   EXTERNAL CLASSIFICATION:  GUPI                                    * 00001420
*   END OF EXTERNAL CLASSIFICATION                                    * 00001430
*                                                                     * 00001440
*  FUNCTION   - VALIDATES A CMDAUTH REQUEST AND BUILDS A PARAMETER    * 00001500
*               LIST TO BE USED BY THE CMDAUTH SERVICE ROUTINE,       * 00001600
*               IEECB920.  THE MACRO THEN DOES A NON-SPACE SWITCH     * 00001700
*               PC TO IEECB920 TO PROCESS THE REQUEST.                * 00001800
*                                                                     * 00001900
*                                                                     * 00002000
*01* MODULE TYPE = ASSEM MACRO                                        * 00002100
*                                                                     * 00002200
*02*   PROCESSOR = ASSEM                                              * 00002300
*                                                                     * 00002400
*01* COMPONENT = SC1CK                                                * 00002500
*                                                                     * 00002600
*01* DISTRIBUTION LIBRARY = AMACLIB                                   * 00002700
*                                                                     * 00002800
*01* CHANGE ACTIVITY =                                                * 00002900
*      $L0=SP3132CR, JBB3313, 880430 PDCR: MVS B1 SECURITY SUPPORT    * 00003000
*      $L1=SP3134CR, JBB3313, 880729 PDCR: MVS B1 SECURITY SUPPORT    * 00003100
*      $L2=SP3135CR, JBB3313, 880901 PDCR: MVS B1 SECURITY SUPPORT    * 00003110
*      $P1=PGP0058 , JBB3313, 881007 PDCS: MVS B1 SECURITY SUPPORT    * 00003120
*      $P2=PGP0193 , JBB3313, 890127 PDCR: Return correct values      * 00003130
*                                          when opercmds class is     * 00003200
*                                          inactive                   * 00003210
*      $D1=DCRR0040, JBB3313, 890616 PDHK: LOGSTR, CBLKTYPE and       * 00003211
*                                    CNTLBLK are not mut. excl.       * 00003220
*      $P3=PGP0471 , JBB3313, 890619 PDHK: Line flag assemb error.    * 00003230
*      $D2=DCR238,   HBB4410, 890814 PDED: Add support for CMDX       * 00003240
*                                           control block as CBLKTYPE * 00003250
*      $P4=PGP0594 , JBB3313, 890921 PDHK: Copyright text errors.     * 00003260
*         YA30466 -- Allow SSCM as CMDAUTH control block input        * 00003270
*      $01=YA36775,  HBB4410, 901017 PDAD: PEO4824-Either UTOKEN or   * 00003280
*                                          CNTLBLK/CBLKTYPE must  @01A* 00003290
*                                          be specified.          @01A* 00003291
*      $P5=PKB1698,  HBB4430, 920608 PDCM: Return code documentation  * 00003292
*      $02=OW39755,  HBB6606, 990723 PDKP: Change MSGSP default       * 00003296
*01* INVOCATION =                                                     * 00003300
*                                                                     * 00003400
*      Execution Mode: Task mode                                      * 00003500
*                                                                     * 00003600
*      Authorization:                                                 * 00003700
*      Supervisor state, or APF authorized, or PKM allowing keys 0-7  * 00003800
*                                                                     * 00003900
*      Addressing mode: 24 or 31 bit addressing mode                  * 00004000
*                                                                     * 00004100
*      ASC mode: Primary                                              * 00004200
*                                                                     * 00004300
*      Serialization:                                                 * 00004400
*      Enabled for I/O and external interrupts                        * 00004500
*      No locks held                                                  * 00004600
*                                                                     * 00004700
*                                                                     * 00004800
*      Input registers:                                               * 00004900
*                                                                     * 00005000
*                   GR0-GR1    reserved                               * 00005100
*                   GR2-GR13   undefined                              * 00005200
*                   GR14-GR15  reserved                               * 00005300
*                                                                     * 00005400
*                                                                     * 00005500
*      Output registers:                                              * 00005600
*                                                                     * 00005700
*                                                                     * 00005800
*                   GR0        reason code                            * 00005900
*                   GR1        zero or address of messages            * 00006000
*                              generated by security interface        * 00006100
*                   GR2-GR13   unchanged                              * 00006200
*                   GR14       undefined                              * 00006300
*                   GR15       return code                            * 00006400
*                                                                     * 00006500
*   Macro Syntax:                                                     * 00006600
*                                                                     * 00006700
*   (One or more blanks must precede CMDAUTH)                         * 00006800
*                                                                     * 00006900
*   CMDAUTH                                                           * 00007000
*      ENTITY = entity name       RX-type addr or regs (2) - (12)     * 00007100
*     ,ATTR = READ | UPDATE | CONTROL | RX-type addr or regs (2)-(12) * 00007200
*     <,REQSTOR = requester id >  RX-type address, or regs            * 00007300
*                                 (2) - (12)                          * 00007480
*     <,SUBSYS = subsystem id >   RX-type address, or regs            * 00007500
*                                 (2) - (12)                          * 00007600
*     <,MSGSUPP = YES | NO >                                          * 00007700
*     <,MSGRTN = YES | NO >                                           * 00007800
*     <,MSGSP = subpool number >                                      * 00007900
*     <,CHECK = OBTAIN | AUTH >                                       * 00008000
*                                                                     * 00008100
*   Group A Keywords                                                  * 00008200
*     ,LOGSTR = log string        RX-type address or regs (2) - (12)  * 00008300
*     ,UTOKEN = utoken            RX-type address or regs (2) - (12)  * 00008400
*                                                                     * 00008500
*   Group B Keywords                                                  * 00008600
*     ,CNTLBLK = control block    RX-type address or regs (2) - (12)  * 00008700
*     ,CBLKTYPE = XSA | CIB | CSCB | SSCM | CMDX              @YA30466* 00008810
*     <,LOGSTR = log string>       RX-type address or regs (2) -(12)  * 00008820
*                                                                 @01A* 00008900
*     ,MF=(L | E, listname <,NODSECT>)                                * 00009000
*                                                                     * 00009100
*                                                                     * 00009200
*   ENTITY -                                                          * 00009300
*       Specifies the address (RX type or address in register (2) -   * 00009400
*       (12)) of a 39 byte area containing the command entity name    * 00009500
*       to be used in the RACROUTE call for the command being         * 00009600
*       authority checked.  If the entity name is less than 39        * 00009700
*       bytes, it should be left justified and padded on the right    * 00009800
*       with blanks.  This is a required keyword.                     * 00009900
*                                                             @YA30466* 00009910
*   LOGSTR -                                                  @YA30466* 00009920
*       Specifies the address (RX-type or regs (2) - (12))    @YA30466* 00009930
*       of a variable length area containing the text of the  @YA30466* 00009940
*       command being authority checked. The first byte of    @YA30466* 00009950
*       the input area must contain the length of the command @YA30466* 00009960
*       text.                                                     @01C* 00009970
*       This is a required keyword when UTOKEN is specified.      @01C* 00009980
*       Otherwise it is an optional keyword when CNTLBLK/CBLKTYPE @01C* 00009990
*       is specified.                                             @01A* 00009991
*                                                                     * 00010000
*   ATTR -                                                            * 00010100
*       Specifies the security access level to be used in the         * 00010200
*       RACROUTE call for command authorization.  READ, UPDATE, or    * 00010300
*       CONTROL may be specified.  This is a required keyword.        * 00010400
*                                                                     * 00010500
*   REQSTOR -                                                         * 00010600
*       Specifies the address (RX-type or regs (2) - (12)) of an      * 00010770
*       8 byte area containing the identifier for use on the REQSTOR  * 00010800
*       keyword of the RACROUTE macro.  If the identifier is less     * 00010900
*       than 8 bytes, then it should be left justified and padded on  * 00011000
*       the right with blanks.  The REQSTOR keyword may also be       * 00011100
*       specified as a 'literal' of length 8 or less.  This is an     * 00011200
*       optional keyword.                                             * 00011300
*                                                                     * 00011400
*   SUBSYS -                                                          * 00011500
*       Specifies the address (RX-type or regs (2) - (12)) of an      * 00011600
*       8 byte area containing the identifier for use on the SUBSYS   * 00011700
*       keyword of the RACROUTE macro.  If the identifier is less     * 00011800
*       than 8 bytes, then it should be left justified and padded on  * 00011900
*       the right with blanks.  The SUBSYS keyword may also be        * 00012000
*       specified as a 'literal' of length 8 or less.  This is an     * 00012100
*       optional keyword.                                             * 00012200
*                                                                     * 00012300
*   MSGSUPP -                                                         * 00012400
*       Specifies whether or not messages generated by the security   * 00012500
*       interface should be suppressed.  An input of either YES or    * 00012600
*       NO will be accepted, with NO being the default.  This         * 00012700
*       CMDAUTH keyword corresponds to the RACROUTE keyword, MSGSUPP. * 00012800
*       This is an optional keyword.                                  * 00012900
*                                                                     * 00013000
*   MSGRTN -                                                          * 00013100
*       Specifies whether or not messages generated by the security   * 00013200
*       interface should be returned to the caller.  An input of      * 00013300
*       either YES or NO will be accepted, with NO being the          * 00013400
*       default.  If YES is specified, then the address of the        * 00013500
*       generated messages will be returned in register one.  This    * 00013600
*       CMDAUTH keyword corresponds to the RACROUTE keyword, MSGRTN.  * 00013700
*       This is an optional keyword.                                  * 00013800
*                                                                     * 00013900
*   MSGSP -                                                           * 00014000
*       Specifies the subpool to be used by the security interface    * 00014100
*       for the returned messages.  The default is subpool 0.  This   * 00014240
*       CMDAUTH keyword corresponds to the RACROUTE keyword, MSGSP.   * 00014300
*       This is an optional keyword.                              @02C* 00014440
*                                                                     * 00014500
*   CHECK -                                                           * 00014600
*       Specifies whether the CMDAUTH service is being called to      * 00014700
*       obtain a UTOKEN for a command, or for command authorization   * 00014800
*       via the RACROUTE interface.  Either OBTAIN or AUTH may be     * 00014900
*       specified, with AUTH being the default.  This is an optional  * 00015000
*       keyword.                                                      * 00015100
*                                                                     * 00015200
*  ** THE CHECK KEYWORD IS INTENDED FOR CONTROL PROGRAM USE ONLY **   * 00015300
*                                                                     * 00015400
*   UTOKEN -                                                          * 00016300
*       Specifies the address (RX-type or regs (2) - (12)) of a       * 00016400
*       UTOKEN to be used by RACROUTE for command authority           * 00016500
*       checking. This is a required Group A keyword.         @YA30466* 00016720
*        The UTOKEN keyword and the CBLKTYPE keyword          @YA30466* 00016730
*       are mutually exclusive.                               @YA30466* 00016740
*                                                                     * 00016850
*   CBLKTYPE -                                                        * 00016900
*       Specifies the type of control block being passed via the      * 00017000
*       CNTLBLK keyword.  XSA, CIB, CSCB, SSCM or CMDX may be @YA30466* 00017100
*       specifed to indicate, respectively, an XSA, CIB,      @YA30466* 00017200
*       CSCB, SSCM or CMDX control block.                     @YA30466* 00017210
*        The CNTLBLK keyword must be coded when CBLKTYPE      @YA30466* 00017220
*       is specified.                                         @YA30466* 00017230
*        This is a required Group B keyword.                          * 00017240
*        The CBLKTYPE keyword and the UTOKEN keyword          @YA30466* 00017250
*       are mutually exclusive.                               @YA30466* 00017260
*                                                                     * 00017500
*   CNTLBLK -                                                         * 00017600
*       Specifies the address (RX-type or regs (2) - (12)) of a       * 00017700
*       control block being passed as input to the CMDAUTH service    * 00017800
*       routine.  The CBLKTYPE keyword must be coded when CNTLBLK     * 00017900
*       is specified.  This is a required Group B keyword.            * 00018000
*                                                                     * 00018100
*  ****   EITHER THE (LOGSTR AND UTOKEN) OR (CBLKTYPE     *** @YA30466* 00018310
*  ****   AND CNTLBLK) KEYWORDS MUST BE SPECIFIED.        *** @YA30466* 00018320
*                                                                     * 00018400
*   MF -                                                              * 00018550
*       The value of this keyword specifies the form of the macro     * 00018600
*       invocation. Either "L", for list form, or "E", for execute    * 00018700
*       form may be specified. "list name" specifies the address      * 00018800
*       (RX-type or regs (2) - (12)) of a storage area for the        * 00018900
*       CMDAUTH parameter list.  A dsect will be created for the      * 00019000
*       parameter list unless the NODSECT keyword is specified.       * 00019100
*       MF is a required keyword.                                     * 00019200
*                                                                     * 00019300
*---------------------------------------------------------------------* 00019400
*------------------   RETURN AND REASON CODES  -----------------------* 00019500
*---------------------------------------------------------------------* 00019600
*                                                                     * 00019700
*01*   CONDITIONS =                                                   * 00019800
*        Command issuer is authorized to issue the command.           * 00019900
*                                                                     * 00020000
*02*   RETURN-CODE = 0    REASON-CODE = provided by RACROUTE          * 00020100
*                                                                     * 00020200
*                                                                     * 00020300
*                                                                     * 00020400
*01*   CONDITIONS =                                                   * 00020500
*        No authorization decision was made by the security           * 00020600
*        interface.                                                   * 00020700
*                                                                     * 00020800
*02*   RETURN-CODE = 4    REASON-CODE = provided by RACROUTE          * 00020900
*                                                                     * 00021000
*                                                                     * 00021100
*                                                                     * 00021200
*01*   CONDITIONS =                                                   * 00021300
*        Command issuer is not authorized to issue the command.       * 00021400
*                                                                     * 00021500
*02*   RETURN-CODE = 8    REASON-CODE = provided by RACROUTE          * 00021600
*                                                                     * 00021700
*                                                                     * 00021800
*                                                                     * 00021900
*01*   CONDITIONS =                                                   * 00022000
*        The command could not be accepted for execution.         @P5C* 00022100
*                                                                     * 00022200
*02*   RETURN-CODE = 12                                               * 00022300
*                                                                     * 00022400
*                                                                     * 00022500
*                                                                     * 00023000
*---------------------------------------------------------------------* 00023100
*---------------------------------------------------------------------* 00023200
*01* MESSAGES =                                                       * 00023300
*                                                                     * 00023400
*       The CMDAUTH macro will issue the following messages during    * 00023500
*       compilation/ assembly:                                        * 00023600
*                                                                     * 00023700
*02* WARNING = (SEVERITY 4)                                           * 00023800
*                                                                     * 00023900
*       ENTITY KEYWORD IGNORED.  NO KEYWORDS PERMITTED ON THE         * 00024000
*       LIST FORM OF CMDAUTH.                                         * 00024100
*                                                                     * 00024200
*       ENTITY(X,Y) HAS TOO MANY VALUES. VALUES IGNORED AFTER X.      * 00024300
*                                                                     * 00024400
*       ENTITY KEYWORD IGNORED.  KEYWORD IS NOT PERMITTED WHEN        * 00024500
*       CHECK(OBTAIN) IS SPECIFIED.                                   * 00024600
*                                                                     * 00024700
*       ATTR KEYWORD IGNORED.  NO KEYWORDS PERMITTED ON THE           * 00024800
*       LIST FORM OF CMDAUTH.                                         * 00024900
*                                                                     * 00025000
*       ATTR(X,Y) HAS TOO MANY VALUES. VALUES IGNORED AFTER X.        * 00025100
*                                                                     * 00025200
*       ATTR KEYWORD IGNORED.  KEYWORD IS NOT PERMITTED WHEN          * 00025300
*       CHECK(OBTAIN) IS SPECIFIED.                                   * 00025400
*                                                                     * 00025500
*       REQSTOR KEYWORD IGNORED.  NO KEYWORDS PERMITTED ON THE        * 00025600
*       LIST FORM OF CMDAUTH.                                         * 00025700
*                                                                     * 00025800
*       REQSTOR(X,Y) HAS TOO MANY VALUES. VALUES IGNORED AFTER X.     * 00025900
*                                                                     * 00026000
*       REQSTOR KEYWORD IGNORED.  KEYWORD IS NOT PERMITTED WHEN       * 00026100
*       CHECK(OBTAIN) IS SPECIFIED.                                   * 00026200
*                                                                     * 00026300
*       SUBSYS KEYWORD IGNORED.  NO KEYWORDS PERMITTED ON THE         * 00026400
*       LIST FORM OF CMDAUTH.                                         * 00026500
*                                                                     * 00026600
*       NO VALUE SPECIFIED ON THE SUBSYS KEYWORD.  THE KEYWORD IS     * 00026700
*       IGNORED.                                                      * 00026800
*                                                                     * 00026900
*       SUBSYS(X,Y) HAS TOO MANY VALUES. VALUES IGNORED AFTER X.      * 00027000
*                                                                     * 00027100
*       SUBSYS KEYWORD IGNORED.  KEYWORD IS NOT PERMITTED WHEN        * 00027200
*       CHECK(OBTAIN) IS SPECIFIED.                                   * 00027300
*                                                                     * 00027400
*       NO VALUE SPECIFIED ON THE MSGSUPP KEYWORD.  THE KEYWORD IS    * 00027500
*       IGNORED.                                                      * 00027600
*                                                                     * 00027700
*       MSGSUPP KEYWORD IGNORED.  NO KEYWORDS PERMITTED ON THE        * 00027800
*       LIST FORM OF CMDAUTH.                                         * 00027900
*                                                                     * 00028000
*       MSGSUPP(X,Y) HAS TOO MANY VALUES. VALUES IGNORED AFTER X.     * 00028100
*                                                                     * 00028200
*       UNKNOWN VALUE vvvvvvvv SPECIFIED ON MSGSUPP KEYWORD.  THE     * 00028300
*       VALUE IS IGNORED.                                             * 00028400
*           Where vvvvvvvv is the value specified on the keyword.     * 00028500
*                                                                     * 00028600
*       MSGSUPP KEYWORD IGNORED.  KEYWORD IS NOT PERMITTED WHEN       * 00028700
*       CHECK(OBTAIN) IS SPECIFIED.                                   * 00028800
*                                                                     * 00028900
*       NO VALUE SPECIFIED ON THE MSGRTN KEYWORD.  THE KEYWORD IS     * 00029000
*       IGNORED.                                                      * 00029100
*                                                                     * 00029200
*       MSGRTN KEYWORD IGNORED.  NO KEYWORDS PERMITTED ON THE         * 00029300
*       LIST FORM OF CMDAUTH.                                         * 00029400
*                                                                     * 00029500
*       MSGRTN(X,Y) HAS TOO MANY VALUES. VALUES IGNORED AFTER X.      * 00029600
*                                                                     * 00029700
*       UNKNOWN VALUE vvvvvvvv SPECIFIED ON MSGRTN KEYWORD.  THE      * 00029800
*       VALUE IS IGNORED.                                             * 00029900
*           Where vvvvvvvv is the value specified on the keyword.     * 00030000
*                                                                     * 00030100
*       MSGRTN KEYWORD IGNORED.  KEYWORD IS NOT PERMITTED WHEN        * 00030200
*       CHECK(OBTAIN) IS SPECIFIED.                                   * 00030300
*                                                                     * 00030400
*       NO VALUE SPECIFIED ON THE MSGSP KEYWORD.  THE KEYWORD IS      * 00030500
*       IGNORED.                                                      * 00030600
*                                                                     * 00030700
*       MSGSP KEYWORD IGNORED.  NO KEYWORDS PERMITTED ON THE          * 00030800
*       LIST FORM OF CMDAUTH.                                         * 00030900
*                                                                     * 00031000
*       MSGSP(X,Y) HAS TOO MANY VALUES. VALUES IGNORED AFTER X.       * 00031100
*                                                                     * 00031200
*       MSGSP KEYWORD IGNORED.  KEYWORD IS NOT PERMITTED WHEN         * 00031300
*       CHECK(OBTAIN) IS SPECIFIED.                                   * 00031400
*                                                                     * 00031500
*       NO VALUE SPECIFIED ON THE CHECK KEYWORD.  THE KEYWORD IS      * 00031600
*       IGNORED.                                                      * 00031700
*                                                                     * 00031800
*       CHECK KEYWORD IGNORED.  NO KEYWORDS PERMITTED ON THE          * 00031900
*       LIST FORM OF CMDAUTH.                                         * 00032000
*                                                                     * 00032100
*       CHECK(X,Y) HAS TOO MANY VALUES. VALUES IGNORED AFTER X.       * 00032200
*                                                                     * 00032300
*       UNKNOWN VALUE vvvvvvvv SPECIFIED ON CHECK KEYWORD.  THE       * 00032400
*       VALUE IS IGNORED.                                             * 00032500
*           Where vvvvvvvv is the value specified on the keyword.     * 00032600
*                                                                     * 00032700
*       LOGSTR KEYWORD IGNORED.  NO KEYWORDS PERMITTED ON THE         * 00032800
*       LIST FORM OF CMDAUTH.                                         * 00032900
*                                                                     * 00033000
*       LOGSTR(X,Y) HAS TOO MANY VALUES. VALUES IGNORED AFTER X.      * 00033100
*                                                                     * 00033200
*       LOGSTR KEYWORD IGNORED.  KEYWORD IS NOT PERMITTED WHEN        * 00033300
*       CHECK(OBTAIN) IS SPECIFIED.                                   * 00033400
*                                                                     * 00033500
*       UTOKEN KEYWORD IGNORED.  NO KEYWORDS PERMITTED ON THE         * 00033600
*       LIST FORM OF CMDAUTH.                                         * 00033700
*                                                                     * 00033800
*       UTOKEN(X,Y) HAS TOO MANY VALUES. VALUES IGNORED AFTER X.      * 00033900
*                                                                     * 00034000
*       UTOKEN KEYWORD IGNORED.  KEYWORD IS NOT PERMITTED WHEN        * 00034100
*       CHECK(OBTAIN) IS SPECIFIED.                                   * 00034200
*                                                                     * 00034300
*       CBLKTYPE KEYWORD IGNORED.  NO KEYWORDS PERMITTED ON THE       * 00034400
*       LIST FORM OF CMDAUTH.                                         * 00034500
*                                                                     * 00034600
*       CBLKTYPE(X,Y) HAS TOO MANY VALUES. VALUES IGNORED AFTER X.    * 00034700
*                                                                     * 00034800
*       CNTLBLK KEYWORD IGNORED.  NO KEYWORDS PERMITTED ON THE        * 00034900
*       LIST FORM OF CMDAUTH.                                         * 00035000
*                                                                     * 00035100
*       CNTLBLK(X,Y) HAS TOO MANY VALUES. VALUES IGNORED AFTER X.     * 00035200
*                                                                     * 00035300
*       MF= X,Y,Z HAS TOO MANY VALUES. VALUES IGNORED AFTER Z.        * 00035400
*                                                                     * 00035500
*                                                                     * 00035600
*02* ERROR = (SEVERITY 12)                                            * 00035700
*                                                                     * 00035800
*       NO TEXT GENERATED. CBLKTYPE VALUE NOT SPECIFIED.              * 00035900
*           (when CHECK is specified)                                 * 00036000
*                                                                     * 00036100
*       NO TEXT GENERATED. ENTITY VALUE NOT SPECIFIED.                * 00036200
*                                                                     * 00036300
*       NO TEXT GENERATED. ATTR VALUE NOT SPECIFIED.                  * 00036400
*                                                                     * 00036410
*       NO TEXT GENERATED. LOGSTR KEYWORD NOT SPECIFIED           @01C* 00036500
*           WHEN UTOKEN KEYWORD IS SPECIFIED.                     @01C* 00036600
*                                                                     * 00036700
*       NO TEXT GENERATED. UTOKEN KEYWORD NOT SPECIFIED           @01C* 00036800
*           WHEN LOGSTR KEYWORD IS SPECIFIED.                     @01C* 00036900
*                                                                     * 00037000
*       NO TEXT GENERATED. CBLKTYPE VALUE NOT SPECIFIED.              * 00037200
*           (when CNTLBLK is specified)                               * 00037300
*                                                                     * 00037400
*       NO TEXT GENERATED. CBLKTYPE AND UTOKEN ARE MUTUALLY           * 00037500
*       EXCLUSIVE.                                                    * 00037600
*                                                                     * 00037700
*       NO TEXT GENERATED. CBLKTYPE AND LOGSTR ARE MUTUALLY           * 00037800
*       EXCLUSIVE.                                                    * 00037900
*                                                                     * 00038000
*       NO TEXT GENERATED. CBLKTYPE VALUE NOT VALID.                  * 00038100
*                                                                     * 00038200
*       NO TEXT GENERATED. CNTLBLK VALUE NOT SPECIFIED.               * 00038300
*           (when CBLKTYPE is specified)                              * 00038400
*                                                                     * 00038500
*       NO TEXT GENERATED. CNTLBLK AND UTOKEN ARE MUTUALLY            * 00038600
*       EXCLUSIVE.                                                    * 00038700
*                                                                     * 00038800
*       NO TEXT GENERATED. CNTLBLK AND LOGSTR ARE MUTUALLY            * 00038900
*       EXCLUSIVE.                                                    * 00039000
*                                                                     * 00039100
*       NO TEXT GENERATED. REQUIRED KEYWORDS LOGSTR AND UTOKEN OR @01C* 00039200
*       CBLKTYP AND CNTLBLK NOT SPECIFIED.                        @01C* 00039300
*                                                                     * 00039400
*       NO TEXT GENERATED. MF VALUE NOT VALID.                        * 00039500
*                                                                     * 00039600
*       NO TEXT GENERATED. MF LIST NAME NOT SPECIFIED.                * 00039700
*                                                                     * 00039800
********************** END OF SPECIFICATIONS ************************** 00039900
*  A  Add check for OPERCMDS class to increase performance         @L1A 00040000
*  C  Change executable version to use register notation           @L2A 00040100
*  C  Check for OPERCMDS class in the UCM base and not in the      @P1A 00040110
*     fixed extention                                              @P1A 00040120
*  C  When opercmds class is inactive, return 0 in reg 1, and 4    @P2A 00040130
*     in regs 1 and 15.                                            @P2A 00040140
*  A  Add the control block CMDX (IEEZB828) to the list of valid   @D2A 00040150
*     contol blocks on the CBLKTYPE parameter                      @D2A 00040160
*  C  Fix line flag assembly error.                                @P3A 00040170
*  C  FIX COPYRIGHT TEXT ERRORS IN PROLOG.                         @P4A 00040180
*  A  Allow SSCM as CMDAUTH control block input                @YA30466 00040190
*  A  Either UTOKEN or CNTLBLK/CBLKTYPE must be specified.         @01A 00040191
*  C  Clean up return code documentation in prolog                 @P5A 00040192
*  C  No code change.  Comment change for the MSGSP default to be  @02A 00040193
*     subpool 0.  It was not SP229 anyways, but rather SP0, but    @02A 00040194
*     that was causing problems when SAF got storage in key3 SP0,  @02A 00040195
*     and then IEECB920, which may free the storage, was running   @02A 00040196
*     in key0 (key0 and SP0 makes SP252 and then abend378-14).     @02A 00040197
*     Made IEECB920 to getmain/freemain in the same PSW key for    @02A 00040198
*     subpool 0 requests.                                          @02A 00040199
*********************************************************************** 00040200
         MACRO                                                          00040300
&LABEL   CMDAUTH &ENTITY=^,&ATTR=^,&REQSTOR=^,&SUBSYS=^,&MSGSUPP=NO,   *00040400
               &MSGRTN=NO,&MSGSP=^,&CHECK=AUTH,                        *00040500
               &LOGSTR=^,&UTOKEN=^,&CBLKTYPE=^,&CNTLBLK=^,&MF=^         00040600
.********************************************************************** 00040700
         LCLC  &LNAM,&OP                  -Setup internal variables    *00040800
                                                                   @L2C 00040900
.********************************************************************** 00041000
.*                                                                    * 00041100
.*  If a label was specified on the macro invocation then             * 00041200
.*  generate a DS for the label.                                      * 00041300
.*                                                                    * 00041400
.********************************************************************** 00041500
         AIF   ('&LABEL' EQ '' OR '&MF(1)' EQ 'E').SKIPLBL   -User     *00041600
                                              specified name?  @YA30466 00041610
&LABEL   DS    0F                         -User specified variable name 00041700
.SKIPLBL ANOP                             -No user specified name       00041800
.********************************************************************** 00041920
.*                                                                    * 00042000
.*   Verify macro parameters, generate code                           * 00042100
.*                                                                    * 00042200
.********************************************************************** 00042300
.*                                                                      00042400
&SEVLEV  SETA  0                                                        00042500
         AIF   (N'&MF LT 4).SKIP10        -Check for too many operands  00042600
         MNOTE 4,'MF= &MF HAS TOO MANY VALUES. VALUES IGNORED AFTER &MF*00042700
               (3).'                                                    00042800
.SKIP10  AIF   ('&MF(1)' NE '' AND '&MF(1)' NE '^').SKIP20 -Check for  *00042900
               no operands specified                                    00043000
         MNOTE 12,'NO TEXT GENERATED. MF VALUE NOT SPECIFIED.'          00043100
&SEVLEV  SETA  12                         -Set error code               00043200
         AGO   .EXIT                      -Leave macro                  00043300
.SKIP20  AIF   ('&MF(1)' EQ 'L' OR '&MF(1)' EQ 'E').SKIP25 -Check for  *00043400
               a valid register                                         00043500
         MNOTE 12,'NO TEXT GENERATED. MF VALUE NOT VALID.'              00043600
&SEVLEV  SETA  12                         -Set error code               00043700
         AGO   .EXIT                      -Leave macro                  00043800
.SKIP25  AIF   ('&MF(2)'(1,1) NE '(').SKIP39  -Check for value         *00043900
                                           specified in a register @L2A 00044000
&LNAM    SETC  'LNAM'                     -Set default list name        00044100
&OPOBJ   SETC  '&MF(2,1)'                 -Set source              @L2A 00044200
&OP      SETC  'LR'                       -LR instruc. req.        @L2A 00044300
         AGO   .SKIP45                                             @L2A 00044400
.SKIP39  AIF   ('&MF(2)' NE '').SKIP40    -Check for no listname   @L2C 00044500
         MNOTE 12,'NO TEXT GENERATED. MF LIST NAME NOT SPECIFIED.'      00044600
&SEVLEV  SETA  12                         -Set error code               00044700
         AGO   .EXIT                      -Leave macro                  00044800
.SKIP40  ANOP                                                      @L2A 00044900
&LNAM    SETC  '&MF(2)'                   -Set list name     @L2A       00045000
&OPOBJ   SETC  '&MF(2)'                   -Set source              @L2A 00045100
&OP      SETC  'LA'                       -LA instruc. req.        @L2A 00045200
.SKIP45  AIF   ('&MF(1)' EQ 'E').EXECUTE  -Check for execute form       00045300
         AIF   ('&ENTITY' EQ '^').SKIP50  -Go process execute form      00045400
         MNOTE 4,'ENTITY KEYWORD IGNORED. NO KEYWORDS PERMITTED ON THE *00045500
               LIST FORM OF CMDAUTH.'                                   00045600
.SKIP50  AIF   ('&ATTR' EQ '^').SKIP60    -Check for ATTR keyword       00045700
         MNOTE 4,'ATTR KEYWORD IGNORED. NO KEYWORDS PERMITTED ON THE LI*00045800
               ST FORM OF CMDAUTH.'                                     00045900
.SKIP60  AIF   ('&REQSTOR' EQ '^').SKIP70 -Check for REQSTOR keyword    00046000
         MNOTE 4,'REQSTOR KEYWORD IGNORED. NO KEYWORDS PERMITTED ON THE*00046100
               LIST FORM OF CMDAUTH.'                                   00046200
.SKIP70  AIF   ('&SUBSYS' EQ '^').SKIP80  -Check for SUBSYS keyword     00046300
         MNOTE 4,'SUBSYS KEYWORD IGNORED. NO KEYWORDS PERMITTED ON THE *00046400
               LIST FORM OF CMDAUTH.'                                   00046500
.SKIP80  AIF   ('&MSGSUPP' EQ '^'OR '&MSGSUPP' EQ 'NO').SKIP90 -Check  *00046600
                                           for MSGSUPP keyword other   *00046700
                                           than default of NO           00046800
         MNOTE 4,'MSGSUPP KEYWORD IGNORED. NO KEYWORDS PERMITTED ON THE*00046900
                LIST FORM OF CMDAUTH.'                                  00047000
.SKIP90  AIF   ('&MSGRTN' EQ '^' OR '&MSGRTN' EQ 'NO').SKIP100 -Check  *00047100
                                           for MSGRTN keyword other    *00047200
                                           than default of NO           00047300
         MNOTE 4,'MSGRTN KEYWORD IGNORED. NO KEYWORDS PERMITTED ON THE *00047400
               LIST FORM OF CMDAUTH.'                                   00047500
.SKIP100 AIF   ('&MSGSP' EQ '^').SKIP110  -Check for MSGSP keyword      00047600
         MNOTE 4,'MSGSP KEYWORD IGNORED. NO KEYWORDS PERMITTED ON THE L*00047700
               IST FORM OF CMDAUTH.'                                    00047800
.SKIP110 AIF   ('&CHECK' EQ '^' OR '&CHECK' EQ 'AUTH').SKIP114 -Check  *00047900
                                           for CHECK keyword other     *00048000
                                           than default of AUTH         00048100
         MNOTE 4,'CHECK KEYWORD IGNORED. NO KEYWORDS PERMITTED ON THE L*00048200
               IST FORM OF CMDAUTH.'                                    00048300
.SKIP114 AIF   ('&LOGSTR' EQ '^').SKIP116 -Check for LOGSTR keyword     00048400
         MNOTE 4,'LOGSTR KEYWORD IGNORED. NO KEYWORDS PERMITTED ON THE *00048500
               LIST FORM OF CMDAUTH.'                                   00048600
.SKIP116 AIF   ('&UTOKEN' EQ '^').SKIP118 -Check for UTOKEN keyword     00048700
         MNOTE 4,'UTOKEN KEYWORD IGNORED. NO KEYWORDS PERMITTED ON THE *00048800
               LIST FORM OF CMDAUTH.'                                   00048900
.SKIP118 AIF   ('&CNTLBLK' EQ '^').SKIP119 -Check for CNTLBLK keyword   00049000
         MNOTE 4,'CNTLBLK KEYWORD IGNORED. NO KEYWORDS PERMITTED ON THE*00049100
                LIST FORM OF CMDAUTH.'                                  00049200
.SKIP119 AIF   ('&CBLKTYPE' EQ '^').SKIP120 Check for CBLKTYPE keyword  00049300
         MNOTE 4,'CBLKTYPE KEYWORD IGNORED. NO KEYWORDS PERMITTED ON TH*00049400
               E LIST FORM OF CMDAUTH.'                                 00049500
.SKIP120 ANOP                                                           00049600
.********************************************************************** 00049700
.*                                                                    * 00049800
.*  BUILD CMDAUTH PARAMETER LIST                                      * 00049900
.*                                                                    * 00050000
.********************************************************************** 00050100
         AIF   ('&MF(3)' EQ 'NODSECT').SKIP122  -Should a dsect be     *00050200
                                              created?                  00050300
&LNAM    DSECT                     -Dsect                               00050400
         AGO   .SKIP123            -Go build parameter list             00050500
.SKIP122 ANOP                      -No dsect                            00050600
&LNAM    DS    0F                  -Parameter list                      00050700
.SKIP123 ANOP                      -Build parameter list                00050800
&LNAM.01 DS    CL4                 -'CAPL ' acronym                     00050900
&LNAM.02 DS    BL1                 -Version level                       00051000
&LNAM.03 DS    BL1                 -Security access level               00051100
&LNAM.04 DS    BL1                 -Miscellaneous flags                 00051200
&LNAM.05 DS    BL1                 -Control block type                  00051300
&LNAM.06 DS    F                   -Subpool number for security        *00051400
                                    interface                           00051500
&LNAM.07 DS    A                   -Address of requestor identifier     00051600
&LNAM.08 DS    A                   -Address of subsystem identifier     00051700
&LNAM.09 DS    A                   -Address of user specified control  *00051800
                                    block                               00051900
&LNAM.10 DS    A                   -Address of logstring                00052000
&LNAM.11 DS    A                   -Address of entity name              00052100
&LNAM.12 DS    CL12                -Reserved                            00052200
&LNAM.LN EQU   *-&LNAM             -Length of parameter list            00052300
         AGO   .EXIT               -Leave macro                         00052400
.********************************************************************** 00052500
.*                                                                    * 00052600
.*    EXECUTE SECTION                                                 * 00052700
.*                                                                    * 00052800
.********************************************************************** 00052900
.*                                                                      00053000
.*                                                                      00053100
.********************************************************************** 00053200
.*                                                                    * 00053300
.*       CHECK KEYWORD PROCESSING                                     * 00053400
.*                                                                    * 00053500
.********************************************************************** 00053600
.EXECUTE AIF   ('&CHECK(1)' NE '').SKIP124 -Check for the CHECK keyword 00053700
         MNOTE 4,'NO VALUE SPECIFIED ON THE CHECK KEYWORD. THE KEYWORD *00053800
               IS IGNORED.'                                             00053900
         AGO   .SKIP128                 -Continue with ENTITY keyword   00054000
.SKIP124 AIF   (N'&CHECK EQ 1).SKIP125  -Check for more than 1 value    00054100
         MNOTE 4,'CHECK= &CHECK HAS TOO MANY VALUES. VALUES IGNORED AFT*00054200
               ER &CHECK(1).'                                           00054300
.SKIP125 AIF   ('&CHECK(1)' NE 'OBTAIN').SKIP126 -Check for OBTAIN     *00054400
                                         operand                        00054500
         AIF   ('&CBLKTYPE' NE '^').SKIP128 -Check for CBLKTYPE keyword 00054600
         MNOTE 12,'NO TEXT GENERATED. CBLKTYPE KEYWORD NOT SPECIFIED WH*00054700
               EN CHECK KEYWORD SPECIFIED.'                             00054800
&SEVLEV  SETA  12                       -Set error code                 00054900
         AGO   .EXIT                    -Leave macro                    00055000
.SKIP126 AIF   ('&CHECK(1)' EQ 'AUTH').SKIP128 -Check for AUTH operand  00055100
         MNOTE 4,'UNKNOWN VALUE &CHECK SPECIFIED ON CHECK KEYWORD. THE *00055200
               VALUE IS IGNORED.'                                       00055300
.********************************************************************** 00055400
.*                                                                    * 00055500
.*    ENTITY KEYWORD PROCESSING                                       * 00055600
.*                                                                    * 00055700
.********************************************************************** 00055800
.SKIP128 AIF   ('&ENTITY(1)' NE '' AND '&ENTITY(1)' NE '^').SKIP130    *00055900
                                        -Check if the ENTITY keyword   *00056000
                                         was specified                  00056100
         AIF   ('&CHECK' EQ 'OBTAIN').SKIP140 -CHECK(OBTAIN) specified *00056200
                                               so ignore entity         00056300
         MNOTE 12,'NO TEXT GENERATED. ENTITY VALUE NOT SPECIFIED.'      00056400
&SEVLEV  SETA  12                       -Set error code                 00056500
         AGO   .EXIT                    -Leave macro                    00056600
.SKIP130 AIF   ('&CHECK' NE 'OBTAIN').SKIP135 -Check for CHECK(OBTAIN)  00056700
         MNOTE 4,'ENTITY KEYWORD IGNORED. KEYWORD IS NOT PERMITTED WHEN*00056800
               CHECK(OBTAIN) IS SPECIFIED.'                             00056900
.SKIP135 AIF   (N'&ENTITY EQ 1).SKIP140 -Check for more than 1 value    00057000
         MNOTE 4,'ENTITY = &ENTITY HAS TOO MANY VALUES. VALUES IGNORED *00057100
               AFTER &ENTITY(1).'                                       00057200
.********************************************************************** 00057300
.*                                                                    * 00057400
.*       ATTR KEYWORD PROCESSING                                      * 00057500
.*                                                                    * 00057600
.********************************************************************** 00057700
.SKIP140 AIF   ('&ATTR(1)' NE '' AND '&ATTR(1)' NE '^').SKIP150        *00057800
                                        -Check if the ATTR keyword     *00057900
                                         was specified                  00058000
         AIF   ('&CHECK' EQ 'OBTAIN').SKIP170 -CHECK(OBTAIN) specified *00058100
                                               so ignore attr           00058200
         MNOTE 12,'NO TEXT GENERATED. ATTR VALUE NOT SPECIFIED.'        00058300
&SEVLEV  SETA  12                       -Set error code                 00058400
         AGO   .EXIT                    -Leave macro                    00058500
.SKIP150 AIF   ('&CHECK' NE 'OBTAIN').SKIP160 -Check for CHECK(OBTAIN)  00058600
         MNOTE 4,'ATTR KEYWORD IGNORED. KEYWORD IS NOT PERMITTED WHEN C*00058700
               HECK(OBTAIN) IS SPECIFIED.'                              00058800
.SKIP160 AIF   (N'&ATTR EQ 1).SKIP170   -Check for more than 1 value    00058900
         MNOTE 4,'ATTR= &ATTR HAS TOO MANY VALUES. VALUES IGNORED AFTER*00059000
                &ATTR(1).'                                              00059100
.*****ENDING*********************************************************** 00059200
.*                                                                    * 00059300
.*       REQSTOR KEYWORD PROCESSING                                   * 00059400
.*                                                                    * 00059500
.********************************************************************** 00059600
.SKIP170 AIF   ('&REQSTOR' EQ '^').SKIP190 - Check for default value    00059700
         AIF   ('&REQSTOR' NE '').SKIP175 -Check for reqstor keyword    00059800
         MNOTE 4,'NO VALUE SPECIFIED ON THE REQSTOR KEYWORD. THE KEYWOR*00059900
               D IS IGNORED.'                                           00060000
         AGO   .SKIP190                 -Continue with SUBSYS keyword   00060100
.SKIP175 AIF   ('&CHECK' NE 'OBTAIN').SKIP180 -Check for CHECK(OBTAIN)  00060200
         MNOTE 4,'REQSTOR KEYWORD IGNORED. KEYWORD IS NOT PERMITTED WHE*00060300
               N CHECK(OBTAIN) IS SPECIFIED.'                           00060400
.SKIP180 AIF   (N'&REQSTOR EQ 1).SKIP190 -Check for more than 1 value   00060500
         MNOTE 4,'REQSTOR= &REQSTOR HAS TOO MANY VALUES. VALUES IGNORED*00060600
                AFTER &REQSTOR(1).'                                     00060700
.********************************************************************** 00060800
.*                                                                    * 00060900
.*       SUBSYS KEYWORD PROCESSING                                    * 00061000
.*                                                                    * 00061100
.********************************************************************** 00061200
.SKIP190 AIF   ('&SUBSYS(1)' EQ '^').SKIP210 -Check for default value   00061300
         AIF   ('&SUBSYS(1)' NE '').SKIP195 -Check for the SUBSYS      *00061400
                                         keyword                        00061500
         MNOTE 4,'NO VALUE SPECIFIED ON THE SUBSYS KEYWORD. THE KEYWORD*00061600
                IS IGNORED.'                                            00061700
         AGO   .SKIP210                 -Continue with MSGSUPP keyword  00061800
.SKIP195 AIF   ('&CHECK' NE 'OBTAIN').SKIP200 -Check for CHECK(OBTAIN)  00061900
         MNOTE 4,'SUBSYS KEYWORD IGNORED. KEYWORD IS NOT PERMITTED WHEN*00062000
                CHECK(OBTAIN) IS SPECIFIED.'                            00062100
.SKIP200 AIF   (N'&SUBSYS EQ 1).SKIP210 -Check for than 1 value         00062200
         MNOTE 4,'SUBSYS= &SUBSYS HAS TOO MANY VALUES. VALUES IGNORED A*00062300
               FTER &SUBSYS(1).'                                        00062400
.********************************************************************** 00062500
.*                                                                    * 00062600
.*       MSGSUPP KEYWORD PROCESSING                                   * 00062700
.*                                                                    * 00062800
.********************************************************************** 00062900
.SKIP210 AIF   ('&MSGSUPP(1)' EQ 'NO').SKIP240 -Check for default value 00063000
         AIF   ('&MSGSUPP(1)' NE '').SKIP215 -Check for the MSGSUPP    *00063100
                                              keyword                   00063200
         MNOTE 4,'NO VALUE SPECIFIED ON THE MSGSUPP KEYWORD. THE KEYWOR*00063300
               D IS IGNORED.'                                           00063400
         AGO   .SKIP240                 -Continue with MSGRTN keyword   00063500
.SKIP215 AIF   ('&CHECK' NE 'OBTAIN').SKIP220 -Check for CHECK(OBTAIN)  00063600
         MNOTE 4,'MSGSUPP KEYWORD IGNORED. KEYWORD IS NOT PERMITTED WHE*00063700
               N CHECK(OBTAIN) IS SPECIFIED.'                           00063800
.SKIP220 AIF   (N'&MSGSUPP EQ 1).SKIP230 -Continue processing MSGSUPP   00063900
         MNOTE 4,'MSGSUPP= &MSGSUPP HAS TOO MANY VALUES. VALUES IGNORED*00064000
                AFTER &MSGSUPP(1).'                                     00064100
.SKIP230 AIF   ('&MSGSUPP(1)' EQ 'YES' OR '&MSGSUPP(1)' EQ 'NO').SKIP24*00064200
               0                        -Check for a valid operand      00064300
         MNOTE 4,'UNKNOWN VALUE &MSGSUPP SPECIFIED ON MSGSUPP KEYWORD. *00064400
               THE VALUE IS IGNORED.'                                   00064500
.********************************************************************** 00064600
.*                                                                    * 00064700
.*       MSGRTN KEYWORD PROCESSING                                    * 00064800
.*                                                                    * 00064900
.********************************************************************** 00065000
.SKIP240 AIF   ('&MSGRTN(1)' EQ 'NO').SKIP270 -Check for default value  00065100
         AIF   ('&MSGRTN(1)' NE '').SKIP245 -Check for the MSGRTN      *00065200
                                         keyword                        00065300
         MNOTE 4,'NO VALUE SPECIFIED ON THE MSGRTN KEYWORD. THE KEYWORD*00065400
                IS IGNORED.'                                            00065500
         AGO   .SKIP270                 -Continue with MSGSP keyword    00065600
.SKIP245 AIF   ('&CHECK' NE 'OBTAIN').SKIP250 -Check for CHECK(OBTAIN)  00065700
         MNOTE 4,'MSGRTN KEYWORD IGNORED. KEYWORD IS NOT PERMITTED WHEN*00065800
                CHECK(OBTAIN) IS SPECIFIED.'                            00065900
.SKIP250 AIF   (N'&MSGRTN EQ 1).SKIP260 -Check for more than 1 value    00066000
         MNOTE 4,'MSGRTN= &MSGRTN HAS TOO MANY VALUES. VALUES IGNORED A*00066100
               FTER &MSGRTN(1).'                                        00066200
.SKIP260 AIF   ('&MSGRTN(1)' EQ 'YES' OR '&MSGRTN(1)' EQ 'NO').SKIP270 *00066300
                                        -Check for valid operand        00066400
         MNOTE 4,'UNKNOWN VALUE &MSGRTN SPECIFIED ON MSGRTN KEYWORD. TH*00066500
               E VALUE IS IGNORED.'                                     00066600
.********************************************************************** 00066700
.*                                                                    * 00066800
.*       MSGSP KEYWORD PROCESSING                                     * 00066900
.*                                                                    * 00067000
.********************************************************************** 00067100
.SKIP270 AIF   ('&MSGSP(1)' EQ '^').SKIP350 -Check for default value    00067200
         AIF   ('&MSGSP(1)' NE '').SKIP275 -Check for the MSGSP keyword 00067300
         MNOTE 4,'NO VALUE SPECIFIED ON THE MSGSP KEYWORD. THE KEYWORD *00067400
                IS IGNORED.'                                            00067500
         AGO   .SKIP350                 -Continue with LOGSTR keyword   00067600
.SKIP275 AIF   ('&CHECK' NE 'OBTAIN').SKIP280 -Check for CHECK(OBTAIN)  00067700
         MNOTE 4,'MSGSP KEYWORD IGNORED. KEYWORD IS NOT PERMITTED WHEN *00067800
               CHECK(OBTAIN) IS SPECIFIED.'                             00067900
.SKIP280 AIF   (N'&MSGSP EQ 1).SKIP350  -Check for more than 1 value    00068000
         MNOTE 4,'MSGSP= &MSGSP HAS TOO MANY VALUES. VALUES IGNORED AFT*00068100
               ER &MSGSP(1).'                                           00068200
.********************************************************************** 00068300
.*                                                                    * 00068400
.*       LOGSTR KEYWORD PROCESSING                                    * 00068500
.*                                                                    * 00068600
.********************************************************************** 00068700
.SKIP350 AIF   ('&LOGSTR(1)' EQ '^').SKIP400 -Check for the LOGSTR     *00068800
                                         keyword                        00068900
         AIF   ('&CHECK' NE 'OBTAIN').SKIP360 -Check for CHECK(OBTAIN)  00069000
         MNOTE 4,'LOGSTR KEYWORD IGNORED. KEYWORD IS NOT PERMITTED WHEN*00069100
                CHECK(OBTAIN) IS SPECIFIED.'                            00069200
.SKIP360 AIF   ('&CBLKTYPE(1)' NE '^' OR '&CNTLBLK(1)' NE '^').SKIP400 *00069300
                                        -Check for UTOKEN          @01A 00069301
         AIF   ('&UTOKEN(1)' NE '^').SKIP370 -Check for UTOKEN     @01A 00069310
         MNOTE 12,'NO TEXT GENERATED. UTOKEN KEYWORD NOT SPECIFIED WHEN*00069400
                LOGSTR KEYWORD SPECIFIED.'                         @01A 00069500
&SEVLEV  SETA  12                       -Set error code            @01A 00069510
         AGO   .EXIT                    -Leave macro               @01A 00069520
.SKIP370 AIF   (N'&LOGSTR EQ 1).SKIP400 -Check for more than 1 value   *00069600
                                                                   @01C 00069700
         MNOTE 4,'LOGSTR= &LOGSTR HAS TOO MANY VALUES. VALUES IGNORED A*00069800
               FTER &LOGSTR(1).'                                        00069900
.********************************************************************** 00071500
.*                                                                    * 00071600
.*       UTOKEN KEYWORD PROCESSING                                    * 00071700
.*                                                                    * 00071800
.********************************************************************** 00071900
.SKIP400 AIF   ('&UTOKEN(1)' EQ '^').SKIP450 -Check for UTOKEN keyword  00072000
         AIF   ('&CHECK' NE 'OBTAIN').SKIP410 -Check for CHECK(OBTAIN)  00072100
         MNOTE 4,'UTOKEN KEYWORD IGNORED. KEYWORD IS NOT PERMITTED WHEN*00072200
                CHECK(OBTAIN) IS SPECIFIED.'                            00072300
.SKIP410 AIF   (N'&UTOKEN EQ 1).SKIP420 -Check for more than 1 value    00072400
         MNOTE 4,'UTOKEN= &UTOKEN HAS TOO MANY VALUES. VALUES IGNORED A*00072500
               FTER &UTOKEN(1).'                                        00072600
.SKIP420 AIF   ('&CBLKTYPE(1)' EQ '^').SKIP430 -Check for conflicting  *00072700
                                         keyword specifications         00072800
         MNOTE 12,'NO TEXT GENERATED. UTOKEN AND CBLKTYPE ARE MUTUALLY *00072900
               EXCLUSIVE.'                                              00073000
&SEVLEV  SETA  12                       -Set error code                 00073100
         AGO   .EXIT                    -Leave macro                    00073200
.SKIP430 AIF   ('&CNTLBLK(1)' EQ '^').SKIP440 -Check for conflicting   *00073300
                                         keyword specifications         00073400
         MNOTE 12,'NO TEXT GENERATED. UTOKEN AND CNTLBLK ARE MUTUALLY E*00073500
               XCLUSIVE.'                                               00073600
&SEVLEV  SETA  12                       -Set error code                 00073700
         AGO   .EXIT                    -Leave macro                    00073800
.SKIP440 AIF   ('&LOGSTR(1)' NE '^').SKIP450 -Check for required       *00073900
                                         keyword LOGSTR when           *00074000
                                         UTOKEN is specified            00074100
         MNOTE 12,'NO TEXT GENERATED. LOGSTR KEYWORD NOT SPECIFIED WHEN*00074200
                UTOKEN KEYWORD SPECIFIED.'                              00074300
&SEVLEV  SETA  12                       -Set error code                 00074400
         AGO   .EXIT                    -Leave macro                    00074500
.********************************************************************** 00074600
.*                                                                    * 00074700
.*       CBLKTYPE KEYWORD PROCESSING                                  * 00074800
.*                                                                    * 00074900
.********************************************************************** 00075000
.SKIP450 AIF   ('&CBLKTYPE(1)' EQ '^').SKIP500 -Check for CBLKTYPE     *00075100
                                         keyword                        00075200
         AIF   (N'&CBLKTYPE EQ 1).SKIP460 -Check for more than 1 value  00075300
         MNOTE 4,'CBLKTYPE= &CBLKTYPE HAS TOO MANY VALUES. VALUES IGNOR*00075400
               ED AFTER &CBLKTYPE(1).'                                  00075500
.SKIP460 AIF   ('&CBLKTYPE(1)' EQ 'XSA' OR '&CBLKTYPE(1)' EQ 'CIB' OR  *00075600
               '&CBLKTYPE(1)' EQ 'CSCB' OR                             *00075700
               '&CBLKTYPE(1)' EQ 'SSCM' OR                             *00075710
               '&CBLKTYPE(1)' EQ 'CMDX').SKIP490 -Check for a valid    *00075800
                                         operand               @YA30466 00075810
         MNOTE 12,'NO TEXT GENERATED. CBLKTYPE VALUE NOT VALID.'        00075900
&SEVLEV  SETA  12                       -Set error code                 00076000
         AGO   .EXIT                    -Leave macro                    00076120
.SKIP490 AIF   ('&CNTLBLK(1)' NE '^').SKIP500 -Check for required      *00076200
                                         keyword CNTLBLK when          *00076300
                                         CBLKTYPE is specified          00076400
         MNOTE 12,'NO TEXT GENERATED. CNTLBLK KEYWORD NOT SPECIFIED WHE*00076500
               N CBLKTYPE KEYWORD SPECIFIED.'                           00076600
&SEVLEV  SETA  12                       -Set error code                 00076700
         AGO   .EXIT                    -Leave macro                    00076800
.********************************************************************** 00076900
.*                                                                    * 00077000
.*       CNTLBLK KEYWORD PROCESSING                                   * 00077100
.*                                                                    * 00077200
.********************************************************************** 00077300
.SKIP500 AIF   ('&CNTLBLK(1)' EQ '^').SKIP530 -Check for CNTLBLK       *00077400
                                         keyword                        00077500
         AIF   (N'&CNTLBLK EQ 1).SKIP520 -Check for more than 1 value   00077600
         MNOTE 4,'CNTLBLK= &CNTLBLK HAS TOO MANY VALUES. VALUES IGNORE *00077700
               D AFTER &CNTLBLK(1).'                                    00077800
.SKIP520 AIF   ('&CBLKTYPE(1)' NE '^').SKIP530 -Check for required     *00077900
                                         keyword CBLKTYPE when         *00078000
                                         CNTLBLK is specified           00078100
         MNOTE 12,'NO TEXT GENERATED. CBLKTYPE KEYWORD NOT SPECIFIED WH*00078200
               EN CNTLBLK KEYWORD SPECIFIED.'                           00078300
&SEVLEV  SETA  12                       -Set error code                 00078400
         AGO   .EXIT                    -Leave macro                    00078500
.********************************************************************** 00078600
.*                                                                    * 00078700
.*       GROUP A & B KEYWORD PROCESSING                               * 00078800
.*                                                                    * 00078900
.********************************************************************** 00079000
.SKIP530 AIF   ('&LOGSTR' NE '^' OR '&UTOKEN' NE '^' OR '&CBLKTYPE' NE *00079100
               '^' OR '&CNTLBLK' NE '^').SKIP540                        00079200
         MNOTE 12,'NO TEXT GENERATED. REQUIRED KEYWORDS LOGSTR AND UTOK*00079300
               EN OR CBLKTYPE AND CNTLBLK NOT SPECIFIED.'               00079400
&SEVLEV  SETA  12                       -Set error code                 00079500
         AGO   .EXIT                    -Leave macro                    00079600
.********************************************************************** 00079700
.*                                                                    * 00079800
.*       FILL IN PARAMETER LIST AND PC TO CMDAUTH ROUTINE             * 00079900
.*                                                                    * 00080000
.********************************************************************** 00080100
.SKIP540 AIF   (&SEVLEV EQ 12).EXIT     -Check for severe error         00080200
&NAME    SETC  '&LABEL'                                            @L2A 00080300
         AIF   ('&OP' EQ 'LA').SKIP541                             @L2A 00080400
         AIF   ('&OPOBJ' EQ '1').SKIP542 Skip if reg 1 set         @L2A 00080500
.SKIP541 ANOP                                                      @L2A 00080600
&LABEL   &OP   1,&OPOBJ                 -Parm list address         @L2A 00080700
&NAME    SETC  ''                       -Nullify label             @L2A 00080800
.SKIP542 ANOP                                                      @L2A 00080900
&NAME    XC    0(44,1),0(1)             -Zero parameter list       @L2C 00081000
         MVC   0(4,1),=C'CAPL'          -Move in acronym           @L2C 00081100
         OI    4(1),X'01'               -Indicate current version  @L2C 00081200
.SKIP545 AIF   ('&CHECK(1)' NE 'OBTAIN').SKIP546 -Check for OBTAIN     *00081300
                                         attribute on CHECK keyword     00081400
         OI    6(1),X'10'               -Indicate OBTAIN access    @L2C 00081500
.SKIP546 AIF   ('&ATTR(1)' EQ '' OR '&ATTR(1)' EQ '^').SKIP570 -        00081600
         AIF   ('&ATTR(1)' NE 'CONTROL').SKIP550 -Check for CONTROL    *00081700
                                         attribute on ATTR keyword      00081800
         OI    5(1),X'08'               -Indicate CONTROL access   @L2C 00081900
         AGO   .SKIP570                 -Continue with MSGSUPP keyword  00082000
.SKIP550 AIF   ('&ATTR(1)' NE 'UPDATE').SKIP560  -Check for UPDATE     *00082100
                                         attribute on ATTR keyword      00082200
         OI    5(1),X'04'               -Indicate UPDATE access    @L2C 00082300
         AGO   .SKIP570                 -Continue with MSGSUPP keyword  00082400
.SKIP560 AIF   ('&ATTR(1)' NE 'READ').SKIP562    -Check for READ       *00082500
                                         attribute on ATTR keyword      00082600
         OI    5(1),X'02'               -Indicate READ access      @L2C 00082700
         AGO   .SKIP570                 -Continue with MSGSUPP keyword  00082800
.SKIP562 AIF   ('&ATTR(1)' NE 'ALTER').SKIP564   -Check for ALTER      *00082900
                                         attribute on ATTR keyword      00083000
         OI    5(1),X'80'               -Indicate ALTER access     @L2C 00083100
         AGO   .SKIP570                 -Continue with MSGSUPP keyword  00083200
.SKIP564 AIF   ('&ATTR'(1,1) EQ '(').SKIP566 -Check for address        *00083300
                                         specified in register          00083400
         MVC   5(1,1),&ATTR(1)          -Store value in parameter list *00083500
                                                                   @L2C 00083600
         AGO   .SKIP570                 -Continue with MSGSUPP keyword  00083700
.SKIP566 STC   &ATTR(1),5(1)            -Store value in parameter list *00083800
                                                                   @L2C 00083900
.SKIP570 AIF   ('&MSGSUPP(1)' NE 'YES').SKIP580 -Check for YES         *00084000
                                         attribute on MSGSUPP keyword   00084100
         OI    6(1),X'80'               -Suppress messages indicated   *00084200
                                                                   @L2C 00084300
.SKIP580 AIF   ('&MSGRTN(1)' NE 'YES').SKIP610 -Check for YES          *00084400
                                         attribute on MSGRTN keyword    00084500
         OI    6(1),X'40'               -Return messages indicated @L2C 00084600
.SKIP610 AIF   ('&CBLKTYPE(1)' NE 'XSA').SKIP620 -Check for XSA        *00084700
                                         attribute on CBLKTYPE keyword  00084800
         OI    7(1),X'80'               -Indicate XSA control block    *00084900
                                                                   @L2C 00085000
         AIF   ('&CNTLBLK'(1,1) EQ '(').SKIP615 -Check for CNTLBLK     *00085100
                                         specified as an address        00085200
         LA    15,&CNTLBLK(1)           -Get address of CNTLBLK    @L2C 00085300
         ST    15,20(1)                 -Store value in parameter list *00085400
                                                                   @L2C 00085500
         AGO   .SKIP650                 -Continue with LOGSTR keyword  *00085600
                                                                   @01C 00085610
.SKIP615 ST    &CNTLBLK(1),20(1)        -Store value in parameter list *00085700
                                                                   @L2C 00085800
         AGO   .SKIP650                 -Continue with LOGSTR keyword  *00085900
                                                                   @01C 00085910
.SKIP620 AIF   ('&CBLKTYPE(1)' NE 'CIB').SKIP630 -Check for CIB        *00086000
                                         attribute on CBLKTYPE keyword  00086100
         OI    7(1),X'40'               -Indicate CIB control block    *00086200
                                                                   @L2C 00086300
         AIF   ('&CNTLBLK'(1,1) EQ '(').SKIP625 -Check for CNTLBLK     *00086400
                                         specified as an address        00086500
         LA    15,&CNTLBLK(1)           -Get address of CNTLBLK    @L2C 00086600
         ST    15,20(1)                 -Store value in parameter list *00086700
                                                                   @L2C 00086800
         AGO   .SKIP650                 -Continue with LOGSTR keyword  *00086900
                                                                   @01C 00086910
.SKIP625 ST    &CNTLBLK(1),20(1)        -Store value in parameter list *00087000
                                                                   @L2C 00087100
         AGO   .SKIP650                 -Continue with LOGSTR keyword  *00087200
                                                                   @01C 00087210
.SKIP630 AIF   ('&CBLKTYPE(1)' NE 'CSCB').SKIP632 -Check for CSCB      *00087300
                                         attribute on CBLKTYPE keyword *00087400
                                                               @YA30466 00087410
         OI    7(1),X'20'               -Indicate CSCB control block   *00087500
                                                                   @L2C 00087600
         AIF   ('&CNTLBLK'(1,1) EQ '(').SKIP631 -Check for CNTLBLK     *00087700
                                         specified as an address       *00087800
                                                               @YA30466 00087810
         LA    15,&CNTLBLK(1)           -Get address of CNTLBLK    @L2C 00087900
         ST    15,20(1)                 -Store value in parameter list *00088000
                                                                   @L2C 00088100
         AGO   .SKIP650                 -Continue with LOGSTR keyword  *00088200
                                                                   @01C 00088210
.SKIP631 ST    &CNTLBLK(1),20(1)        -Store value in parameter list *00088300
                                                               @YA30466 00088400
         AGO   .SKIP650                 -Continue with LOGSTR keyword  *00088500
                                                                   @01C 00088501
.SKIP632 AIF   ('&CBLKTYPE(1)' NE 'SSCM').SKIP636 -Check for SSCM      *00088502
                                         attribute on CBLKTYPE keyword *00088503
                                                               @YA30466 00088504
         OI    7(1),X'04'               -Indicate SSCM control block   *00088505
                                                               @YA30466 00088506
         AIF   ('&CNTLBLK'(1,1) EQ '(').SKIP634 -Check for CNTLBLK     *00088507
                                         specified as an address       *00088508
                                                               @YA30466 00088509
         LA    15,&CNTLBLK(1)           -Get address of CNTLBLK        *00088510
                                                               @YA30466 00088511
         ST    15,20(1)                 -Store value in parameter list *00088512
                                                               @YA30466 00088513
         AGO   .SKIP650                 -Continue with LOGSTR keyword  *00088514
                                                                   @01C 00088515
.SKIP634 ST    &CNTLBLK(1),20(1)        -Store value in parameter list *00088517
                                                               @YA30466 00088518
         AGO   .SKIP650                 -Continue with LOGSTR keyword  *00088519
                                                                   @01C 00088520
.SKIP636 AIF   ('&CBLKTYPE(1)' NE 'CMDX').SKIP640 -Check for CMDX      *00088522
                                         attribute on CBLKTYPE keyword *00088523
                                                                   @D2A 00088524
         OI    7(1),X'08'               -Indicate CMDX control block   *00088530
                                                                   @D2A 00088540
         AIF   ('&CNTLBLK'(1,1) EQ '(').SKIP638 -Check for CNTLBLK     *00088550
                                         specified as an address   @D2A 00088560
         LA    15,&CNTLBLK(1)           -Get address of CNTLBLK    @D2A 00088570
         ST    15,20(1)                 -Store value in parameter list *00088580
                                                                   @D2A 00088590
         AGO   .SKIP650                 -Continue with LOGSTR keyword  *00088591
                                                                   @01C 00088592
.SKIP638 ST    &CNTLBLK(1),20(1)        -Store value in parameter list *00088594
                                                                   @D2A 00088595
         AGO   .SKIP650                 -Continue with LOGSTR keyword  *00088596
                                                                   @01C 00088597
.SKIP640 AIF   ('&UTOKEN(1)' EQ '' OR '&UTOKEN(1)' EQ '^').SKIP650      00088600
         OI    7(1),X'10'               -Indicate UTOKEN control block *00088710
                                                                   @L2C 00088800
         AIF   ('&UTOKEN'(1,1) EQ '(').SKIP645 -Check for UTOKEN       *00088900
                                         specified as an address        00089000
         LA    15,&UTOKEN(1)            -Get address of UTOKEN     @L2C 00089100
         ST    15,20(1)                 -Store value in parameter list *00089200
                                                                   @L2C 00089300
         AGO   .SKIP650                 -Continue with LOGSTR keyword   00089400
.SKIP645 ST    &UTOKEN(1),20(1)         -Store value in parameter list *00089500
                                                                   @L2C 00089600
.SKIP650 AIF   ('&LOGSTR(1)' EQ '' OR '&LOGSTR(1)' EQ '^').SKIP660      00089700
         OI    6(1),X'04'               -Indicate LOGSTR present   @L2C 00089800
         AIF   ('&LOGSTR'(1,1) EQ '(').SKIP655 -Check for LOGSTR       *00089900
                                         specified as an address        00090000
         LA    15,&LOGSTR(1)            -Get address of LOGSTR     @L2C 00090100
         ST    15,24(1)                 -Store value in parameter list *00090200
                                                                   @L2C 00090300
         AGO   .SKIP660                 -Continue with MSGSP keyword    00090400
.SKIP655 ST    &LOGSTR(1),24(1)         -Store value in parameter list *00090500
                                                                   @L2C 00090600
.SKIP660 AIF   ('&MSGSP(1)' EQ '^').SKIP670 -Check for MSGSP keyword    00090700
         LA    15,&MSGSP(1)             -Put MSGSP value in register   *00090800
                                         15                        @L2C 00090900
         ST    15,8(1)                  -Store value in parameter list *00091000
                                                                   @L2C 00091100
.SKIP670 AIF   ('&REQSTOR(1)' EQ '' OR '&REQSTOR(1)' EQ '^').SKIP680    00091200
         AIF   ('&REQSTOR'(1,1) EQ '(').SKIP675 -Check for REQSTOR     *00091300
                                         specified as an address        00091400
         LA    15,&REQSTOR(1)           -Get address of REQSTOR    @L2C 00091500
         ST    15,12(1)                 -Put value in parameter list   *00091600
                                                                   @L2C 00091700
         AGO   .SKIP680                 -Continue with SUBSYS keyword   00091800
.SKIP675 ST    &REQSTOR(1),12(1)        -Put value in parameter list   *00091900
                                                                   @L2C 00092000
.SKIP680 AIF   ('&SUBSYS(1)' EQ '' OR '&SUBSYS(1)' EQ '^').SKIP690      00092100
         AIF   ('&SUBSYS'(1,1) EQ '(').SKIP685 -Check for SUBSYS       *00092200
                                         specified as an address        00092300
         LA    15,&SUBSYS(1)            -Get address of SUBSYS     @L2C 00092400
         ST    15,16(1)                 -Put value in parameter list   *00092500
                                                                   @L2C 00092600
         AGO   .SKIP690                 -Continue with ENTITY keyword   00092700
.SKIP685 ST    &SUBSYS(1),16(1)         -Put value in parameter list   *00092800
                                                                   @L2C 00092900
.SKIP690 AIF   ('&ENTITY' EQ '' OR '&ENTITY' EQ '^').SKIP700            00093000
         AIF   ('&ENTITY'(1,1) EQ '(').SKIP695 -Check for ENTITY       *00093100
                                         specified as an address        00093200
         LA    15,&ENTITY(1)            -Get address of ENTITY     @L2C 00093300
         ST    15,28(1)                 -Put value in parameter list   *00093400
                                                                   @L2C 00093500
         AGO   .SKIP700                 -Go PC to service routine       00093600
.SKIP695 ST    &ENTITY(1),28(1)         -Put value in parameter list   *00093700
                                                                   @L2C 00093800
.SKIP700 AIF   (&SEVLEV EQ 12).EXIT     -Check for severe error         00093900
.********************************************************************** 00094000
.*                                                                    * 00094100
.*       PC TO CMDAUTH ROUTINE                                        * 00094200
.*                                                                    * 00094300
.********************************************************************** 00094400
.PCCB920 ANOP                                                           00094500
         AIF   ('&CHECK(1)' NE 'OBTAIN').SKIP710  -Check for OBTAIN    *00094510
                                         attribute on CHECK keyword     00094520
         L     15,16                    -Get CVT address           @L1A 00094530
         L     15,100(,15)              -Get UCM address           @L1A 00094540
         L     15,240(,15)              -Get UCM Fixed Extension       *00094550
                                         address                   @L1A 00094560
         TM    26(15),X'80'             -Is console's PC table setup?  *00094570
                                                                   @L1A 00094571
         BNO   *+28                     -No, don't go to IEECB920  @L1A 00094572
         AGO   .SKIP720                 -Go process PC             @L1A 00094573
.SKIP710 ANOP                                                           00094580
         L     15,16                    -Get CVT address           @L1A 00094600
         L     15,100(,15)              -Get UCM address           @L1A 00094700
         TM    68(15),X'02'             -Is OPERCMDS class active? @P1C 00095000
         BNO   *+28                     -Go indicate class not active  *00095100
                                                                   @L1A 00095200
.SKIP720 ANOP                                                           00095210
         L     15,16                    -Get CVT address                00095300
         L     15,772(,15)              -Get SFT address                00095400
         L     15,100(,15)              -Get console EX number          00095500
         LA    15,9(15)                 -Get IEECB920 PC number         00095600
         PC    0(15)                    -PC to IEECB920                 00095700
         B     *+16                     -Successful CMDAUTH        @L1A 00095800
         LA    15,4                     -No decision from CMDAUTH  @L1A 00095900
         LA    0,4                      -Resource is not protected @P2C 00095910
         LA    1,0                      -No Message Blocks         @P2C 00095920
.EXIT    ANOP                           -Leave macro                    00096000
         MEND                                                           00096100
*********************************************************************** 00096200
**                   PLAS/PLS SECTION                                 * 00096300
**                                                                    * 00096400
**         INVOKE PLAS VERSION OF CMDAUTH MACRO                       * 00096500
*********************************************************************** 00096600
**/                                                                     00096700
*%CMDAUTH: MACRO KEYS(ENTITY,                                           00096800
*                 ATTR,                                                 00096900
*                 REQSTOR,                                              00097000
*                 SUBSYS,                                               00097100
*                 MSGSUPP,                                              00097200
*                 MSGRTN,                                               00097300
*                 MSGSP,                                                00097400
*                 CHECK,                                                00097500
*                 LOGSTR,                                               00097600
*                 UTOKEN,                                               00097700
*                 CNTLBLK,                                              00097800
*                 CBLKTYPE,                                             00097900
*                 MF);                                                  00098000
*        ANS('?'||'CMDAUTHP '||MACKEYS||';');    /* INVOKE MACRO     */ 00098100
*                                                                       00098200
*      %END;                                                            00098300
