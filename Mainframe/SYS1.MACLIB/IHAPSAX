*                                                                       00050000
* %DCL IHAPSAX_INCLUDED CHAR EXT;                                       00100000
* %DEACTIVATE IHAPSAX_INCLUDED;                                         00150000
* %IF IHAPSAX_INCLUDED = '' %THEN                                       00200000
* %DO;                                                                  00250000
*/* Macro made bi-lingual on 99293. CBGEN compile date 98009         */ 00300000
*% /*                                                                   00350000
         MACRO                                                          00400000
         IHAPSAX &DSECT=YES,&LIST=YES,&TITLE=YES,&PSAX=YES              00450000
         GBLC  &IHAPSAX_INCLUDED                                        00500000
         GBLC  &ZCBPRINT                                                00550000
&IHAPSAX_INCLUDED SETC 'YES'                                            00600000
         AIF   ('&LIST' EQ 'NONE').P0                                   00650000
         AIF   ('&TITLE' EQ 'NO').P5                                    00700000
 TITLE   'IHAPSAX  - PSA Extension (ESAME)                          '   00750000
.P5      ANOP                                                           00800000
**/ IHAPSAX_1:;                                                         00850000
*/* START OF SPECIFICATIONS ******************************************* 00900000
*                                                                       00950000
*  **PROPRIETARY_STATEMENT********************************************  01000000
***01* PROPRIETARY STATEMENT=                                        *  01050000
*                                                                    *  01100000
*                                                                    *  01150000
*   LICENSED MATERIALS - PROPERTY OF IBM                             *  01200000
*   THIS MACRO IS "RESTRICTED MATERIALS OF IBM"                      *  01250000
*   5647-A01 (C) COPYRIGHT IBM CORP. 2000                            *  01300000
*                                                                    *  01350000
*   STATUS= HBB7703                                                  *  01400000
*                                                                    *  01450000
*  **END_OF_PROPRIETARY_STATEMENT*************************************  01500000
*                                                                       01550000
*01* DESCRIPTIVE NAME:  PSA Extension (ESAME)                           01600000
*02*  ACRONYM:  PSAX                                                    01650000
*                                                                       01700000
*01* MACRO NAME:  IHAPSAX                                               01750000
*                                                                       01800000
*01* EXTERNAL CLASSIFICATION: DMTI                                      01850000
*01* END OF EXTERNAL CLASSIFICATION:                                    01900000
*                                                                       01950000
*01* DSECT NAME:                                                        02000000
*     PSAX                                                              02050000
*                                                                       02100000
*01* COMPONENT:  SUPERVISOR CONTROL (SC1C5)                             02150000
*                                                                       02200000
*01* EYE-CATCHER:  NONE                                                 02250000
*                                                                       02300000
*01* STORAGE ATTRIBUTES:                                                02350000
*02*  SUBPOOL:  N/A                                                     02400000
*02*  KEY:      N/A                                                     02450000
*02*  RESIDENCY:  N/A                                                   02500000
*                                                                       02550000
*01* SIZE:                                                              02600000
*                PSAX -- X'1000' bytes                                  02650000
*                                                                       02700000
*01* CONTROL BLOCK CHANGES:                                             02750000
*02*  IHAPSAX                                                           02800000
*02*   6.8                                                              02850000
*03*    New                                                             02900000
*03*    Migration Considerations: NONE                                  02950000
*01* END CONTROL BLOCK CHANGES                                          03000000
*                                                                       03050000
*01* CREATED BY:                                                        03100000
*     USER                                                              03150000
*                                                                       03200000
*01* POINTED TO BY:                                                     03250000
*     N/A                                                               03300000
*                                                                       03350000
*01* SERIALIZATION:                                                     03400000
*     N/A                                                               03450000
*                                                                       03500000
*01* FUNCTION:                                                          03550000
*02* Maps the architected 2nd page of the PSA.                          03600000
*02* This macro is automatically included when IHAPSA is included.      03650000
*                                                                       03700000
*                                                                       03750000
*01* METHOD OF ACCESS:                                                  03800000
*02*  ASM:                                                              03850000
*      IHAPSAX                                                          03900000
*           DSECT=YES|NO  -- Request DSECT definition                   03950000
*           PSAX=YES|NO|COND -- Request PSAX mapping                    04000000
*                            USING on PSAX                              04050000
*     Default: DSECT=YES,PSAX=YES                                       04100000
*     Notes: name=YES  => expand                                        04150000
*            name=NO   => do not expand                                 04200000
*            name=COND => expand only if DSECT=YES                      04250000
*                                                                       04300000
*02*  PL/X:                                                             04350000
*      %INCLUDE SYSLIB(IHAPSAX)                                         04400000
*                                                                       04450000
*01* DELETED BY:  N/A                                                   04500000
*                                                                       04550000
*01* FREQUENCY:  N/A                                                    04600000
*                                                                       04650000
*01* DEPENDENCIES:  None                                                04700000
*                                                                       04750000
*01* NOTES: FlcxMcsa can also be used to map the second 512 bytes       04800000
*           of the area saved by Store Status at Address.               04850000
*                                                                       04900000
*01* DISTRIBUTION LIBRARY:  AMACLIB                                     04950000
*                                                                       05000000
*01* CHANGE ACTIVITY:                                                   05050000
*   $L0=64BITCBG HBB7703  971101  PD00XB:  AR 8537                      05100000
*   $L1=64BITSUP HBB7703  971101  PD00XB:  AR 8537                      05150000
*                                                                       05200000
* END OF SPECIFICATIONS *********************************************/  05250000
*% /*                                                                   05300000
.P0      ANOP                                                           05350000
         AIF   ('&ZCBPRINT' EQ 'NO').P1                                 05400000
         AIF   ('&LIST' EQ 'YES').P2                                    05450000
.P1      ANOP                                                           05500000
         PUSH  PRINT                                                    05550000
         PRINT OFF                                                      05600000
.P2      ANOP                                                           05650000
         AIF   ('&PSAX' EQ 'NO').L0002                                  05700000
         AIF   ('&DSECT' EQ 'YES').L0003                                05750000
         AIF   ('&PSAX' NE 'YES').L0002                                 05800000
PSAX     DS    0D                                                       05850000
         AGO   .L0004                                                   05900000
.L0003   ANOP                                                           05950000
PSAX     DSECT                                                          06000000
.L0004   ANOP                                                           06050000
PSAXFLCX DS    1CL1024                                                  06100000
         ORG   PSAXFLCX                                                 06150000
FLCXR000 DS    1CL0448   FLCX 0x: reserved                              06200000
FLCXR1C0 DS    1CL0064   FLCX 1C0x: reserved for programming            06250000
FLCXMCSA DS    1CL0512   FLCX 200x: machine check or Store Status save *06283300
                         area                                           06316600
         ORG   FLCXMCSA                                                 06350000
FLCXMCSAFPRS DS 1CL0128  FLCX 200x: FPRs                                06400000
         ORG   FLCXMCSAFPRS                                             06450000
FLCXMCSAFPR DS 1CL0008   FLCX 200x: FPRs 0-15                           06500000
         ORG   FLCXMCSAFPRS+X'00000080'                                 06550000
FLCXMCSAGPRS DS 1CL0128  FLCX 280x: GPRs                                06600000
         ORG   FLCXMCSAGPRS                                             06650000
FLCXMCSAGPR DS 1CL0008   FLCX 280x: GPRs 0-15                           06700000
         ORG   FLCXMCSAGPRS+X'00000080'                                 06750000
FLCXMCSAFLA DS 1CL0016   FLCX 300x: Fixed logout                        06800000
         ORG   FLCXMCSAFLA                                              06850000
FLCXMCSAPSW DS 1CL0016   FLCX 300x: Store Status PSW                    06900000
FLCXR310 DS    1CL0008   FLCX 310x: unused                              06950000
FLCXMCSAPREFIX DS 1AL4   FLCX 318x: Store Status prefix                 07000000
FLCXMCSAFPC DS 1CL0004   FLCX 31Cx: floating point control reg          07250000
FLCXR320 DS    1CL0004   FLCX 320x: unused                              07275000
FLCXMCSATODPR DS 1CL0004 FLCX 324x: TOD programmable reg                07300000
FLCXMCSACPUTIMER DS 1CL0008 FLCX 328x: CPU timer                        07325000
FLCXR330 DS    1CL0001   FLCX 330x: unused                              07350000
FLCXMCSACLOCKCOMPARATOR DS 1CL0007 FLCX 331X: Clock comparator bits    *07375000
                         0-55                                           07400000
FLCXR338 DS    1CL0008   FLCX 338x: reserved                            07425000
FLCXMCSAARS DS 1CL0064   FLCX 340x: ARs                                 07450000
         ORG   FLCXMCSAARS                                              07500000
FLCXMCSAAR DS  1CL0004   FLCX 340x: ARs 0-15                            07550000
         ORG   FLCXMCSAARS+X'00000040'                                  07600000
FLCXMCSACRS DS 1CL0128   FLCX 380x: CRs                                 07650000
         ORG   FLCXMCSACRS                                              07700000
FLCXMCSACR DS  1CL0008   FLCX 380x: CRs 0-15                            07750000
         ORG   PSAXFLCX+X'00000400'                                     07800000
PSAX0400 DS    1CL2048   PSAX 400X:                                     07830300
PSAX0C00 DS    1CL0512   PSAX C00X:                                     07860600
PSAX0E00 DS    1CL0128   PSAX E00X:                                     07890900
         ORG   PSAX0E00                                                 07921200
PSAXDATLK DS   1CL0064   PSAX E00X: Area for 64-bit dat-off assist     *07951500
                         linkage code                                   07981800
PSAXDATOF DS   1AL4      PSAX E40x: Real storage address of the 64-bit *08012100
                         dat-off linkage table which is initialized by *08042400
                         NIP for 64-bit dat-on/dat-off linkage          08072700
PSAXDATLN DS   1FL4      PSAX E44x: Length of the 64-bit dat-off       *08103000
                         linkage table                                  08133300
PSAXRE48 DS    1CL0056   PSAX E48x: reserved                            08163600
PSAXSLSA DS    1CL0128   PSAX E80x: analog of PSASLSA. Single level    *08193900
                         save area used by disabled routines with no   *08225000
                         dependency that the save area will remain     *08237500
                         intact across a call. This area is not        *08250000
                         maintained by restart processing that results *08262500
                         in an abend of the interrupted routine.        08275000
PSAXRF00 DS    1CL0256   PSAX F00x: reserved                            08287500
PSAXPTR  EQU   4096                                                     08300000
PSAX_LEN EQU   *-PSAX                                                   08350000
.L0002   ANOP                                                           08400000
         AIF   ('&ZCBPRINT' EQ 'NO').P3                                 08450000
         AIF   ('&LIST' EQ 'YES').P4                                    08500000
.P3      ANOP                                                           08550000
         POP   PRINT                                                    08600000
.P4      ANOP                                                           08650000
.P_EXIT  ANOP                                                           08700000
         MEND                                                           08750000
**/ IHAPSAX_2:;                                                         08800000
* %IHAPSAX_INCLUDED = 'YES';                                            08850000
* %DCL ZCBPRINT CHAR EXT;                                               08900000
* %DEACTIVATE ZCBPRINT;                                                 08950000
* %DCL IHAPSAX_LIST CHAR EXT;                                           09000000
* %DEACTIVATE IHAPSAX_LIST;                                             09050000
* %IF IHAPSAX_LIST ^= 'NO' &                                            09100000
*    ZCBPRINT ^= 'NO' %THEN                                             09150000
*   %GOTO IHAPSAX_3;                                                    09200000
*   @LIST PUSH NOECHO;                                                  09250000
*   @LIST NOASSEMBLE NOECHO;                                            09300000
*   @LIST OFF C NOECHO;                                                 09350000
* %IHAPSAX_3:;                                                          09400000
* %IF IHAPSAX_TYPE = '' %THEN %IHAPSAX_TYPE = 'TYPE';                   09425000
*/* Start of PL/X Source                                             */ 09450000
*DCL 1 PSAX CHAR(1000x) BDY(Dword) IHAPSAX_TYPE                         09500000
*     ,2 PSAXFLCX Bdy(Dword)              /*                     @L1A*/ 09550000
*       ,3 FlcxR000 CHAR(1C0x)            /* FLCX   0x: reserved @L1A*/ 09600000
*       ,3 FlcxR1C0 CHAR(40x)             /* FLCX 1C0x: reserved        09650000
*                                     for programming            @L1A*/ 09700000
*       ,3 FlcxMcsa                       /* FLCX 200x: machine check   09750000
*                                             or Store Status           09775000
*                                             save area          @L1A*/ 09800000
*         ,5 FlcxMcsaFPRs CHAR(128)       /* FLCX 200x: FPRs            09850000
*                                                                @L1A*/ 09900000
*           ,7 FlcxMcsaFPR(0:15) CHAR(8)  /* FLCX 200x: FPRs 0-15       09950000
*                                                                @L1A*/ 10000000
*         ,5 FlcxMcsaGPRs CHAR(128)       /* FLCX 280x: GPRs            10050000
*                                                                @L1A*/ 10100000
*           ,7 FlcxMcsaGPR(0:15) CHAR(8)  /* FLCX 280x: GPRs 0-15       10150000
*                                                                @L1A*/ 10200000
*         ,5 FlcxMcsaFLA CHAR(16)         /* FLCX 300x: Fixed logout    10250000
*                                                                @L1A*/ 10300000
*           ,7 FlcxMcsaPSW CHAR(16)       /* FLCX 300x: Store           10350000
*                                            Status PSW          @L1A*/ 10400000
*         ,5 FlcxR310    CHAR(8)          /* FLCX 310x: unused          10450000
*                                                                @L1C*/ 10500000
*         ,5 FlcxMcsaPrefix PTR(31)       /* FLCX 318x: Store           10550000
*                                            Status prefix       @L1A*/ 10600000
*         ,5 FlcxMcsaFPC CHAR(4)          /* FLCX 31Cx: floating point  10850000
*                                            control reg         @L1A*/ 10900000
*         ,5 FlcxR320    CHAR(4)          /* FLCX 320x: unused          10950000
*                                                                @L1C*/ 11100000
*         ,5 FlcxMcsaTodPR CHAR(4)        /* FLCX 324x: TOD             11106200
*                                            programmable reg    @L1A*/ 11112400
*         ,5 FlcxMcsaCpuTimer CHAR(8)     /* FLCX 328x: CPU timer       11118600
*                                                                @L1A*/ 11124800
*         ,5 FlcxR330    CHAR(1)          /* FLCX 330x: unused          11131000
*                                                                @L1C*/ 11137200
*         ,5 FlcxMcsaClockComparator CHAR(7)  /* FLCX 331X: Clock       11143600
*                                     comparator bits 0-55       @L1C*/ 11150000
*         ,5 FlcxR338 CHAR(8)             /* FLCX 338x: reserved @L1C*/ 11175000
*         ,5 FlcxMcsaARs CHAR(64)         /* FLCX 340x: ARs             11200000
*                                                                @L1A*/ 11250000
*           ,7 FlcxMcsaAR(0:15) CHAR(4)   /* FLCX 340x: ARs 0-15        11300000
*                                                                @L1A*/ 11350000
*         ,5 FlcxMcsaCRs CHAR(128)        /* FLCX 380x: CRs             11400000
*                                                                @L1A*/ 11450000
*           ,7 FlcxMcsaCR(0:15) CHAR(8)   /* FLCX 380x: CRs 0-15        11500000
*                                                                @L1A*/ 11550000
*     ,2 Psax0400 CHAR(0800x) Bdy(DWord)  /* PSAX 400X:          @L1A*/ 11575000
*     ,2 Psax0C00 CHAR(0200x) Bdy(DWord)  /* PSAX C00X:          @L1A*/ 11600000
*     ,2 Psax0E00 CHAR(0080x) Bdy(DWord)  /* PSAX E00X:          @L1A*/ 11625000
*       ,3 PsaxDATLK CHAR(64)             /* PSAX E00X:                 11650000
*                                     Area for 64-bit dat-off           11675000
*                                     assist linkage code        @L1A*/ 11700000
*       ,3 PsaxDATOF PTR(31)              /* PSAX E40x:                 11733300
*                                     Real storage address of           11766600
*                                     the 64-bit dat-off linkage table  11800000
*                                     which is initialized by NIP for   11850000
*                                     64-bit dat-on/dat-off linkage     11900000
*                                                                @L1A*/ 11950000
*       ,3 PsaxDATLN FIXED(31)            /* PSAX E44x:                 11983300
*                                     Length of the 64-bit              12016600
*                                     dat-off linkage table      @L1A*/ 12050000
*       ,3 PsaxRE48 CHAR(56)              /* PSAX E48x: reserved @L1A*/ 12072600
*     ,2 PsaxSLSA CHAR(128)               /* PSAX E80x: analog of       12095200
*                                     PSASLSA. Single level save area   12118000
*                                     used by disabled routines with    12127000
*                                     no dependency that the save area  12136000
*                                     will remain intact across a call. 12145000
*                                     This area is not maintained by    12154000
*                                     restart processing that results   12163000
*                                     in an abend of the interrupted    12172000
*                                     routine.                   @L1A*/ 12181000
*     ,2 PsaxRF00 CHAR(256)               /* PSAX F00x: reserved @L1A*/ 12190500
*     ;                                   /*                         */ 12200000
*DCL PSAXPTR PTR CONSTANT(1000x);         /*                     @L1A*/ 12250000
*%IF Translate(IHAPSAX_Type) = 'TYPE' %THEN /*                   @L1A*/ 12266600
*%DO;                                     /*                     @L1A*/ 12283200
*DCL thePSAX Isa(PSAX) based(PSAXPTR);    /*                     @L1A*/ 12300000
*%END;                                    /*                     @L1A*/ 12325000
*DCL PsaxDummylen1a fixed(32) constant(length(psax)-1000x); /*   @L1A*/ 12350000
*DCL PsaxDummylen1b fixed(32) constant(1000x-length(psax)); /*   @L1A*/ 12400000
*@LOGIC;                                                                12450000
*#PRAGMA TOOL=CBGEN.                                                    12500000
*#USEORG.                                                               12550000
*#DELETE.THEPSAX                                                        12600000
*#DELETE.THEPSAESAME                                                    12650000
*#DELETE.PSAXDUMMYLEN1A                                                 12700000
*#DELETE.PSAXDUMMYLEN1B                                                 12750000
*#EPRAGMA.                                                              12800000
*@ENDLOGIC;                                                             12850000
*/* End of PL/X Source                                               */ 12900000
* %IF IHAPSAX_LIST ^= 'NO' &                                            12950000
*    ZCBPRINT ^= 'NO' %THEN                                             13000000
*   %GOTO IHAPSAX_4;                                                    13050000
*   @LIST POP NOECHO;                                                   13100000
* %IHAPSAX_4:;                                                          13150000
* %END;                                                                 13200000
