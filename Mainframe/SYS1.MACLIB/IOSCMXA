*/**** START OF SPECIFICATIONS **************************************** 00000100
*                                                                     * 00000200
*                                                                     * 00000300
*01* MACRO NAME:  IOSCMXA                               -10/03/95-<1> * 00000400
*                                                                     * 00000500
*                                                                     * 00000600
*01* DESCRIPTIVE NAME:  Obtain UCB common extension address           * 00000700
*                                                                     * 00000800
*01* PROPRIETARY STATEMENT:                                           * 00000900
*                                                                     * 00001000
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 00001100
*     THIS MACRO IS "RESTRICTED MATERIALS OF IBM"                     * 00001200
*     5655-068 (C) COPYRIGHT IBM CORP. 1993                           * 00001300
*                                                                     * 00001400
* STATUS= HBB5510                                                     * 00001500
*                                                                     * 00001600
*                                                                     * 00001700
*                                                                     * 00001800
*01* FUNCTION:                                                        * 00001900
*                                                                     * 00002000
*                                                                     * 00002100
*      The IOSCMXA macro obtains the UCB common extension address.    * 00002200
*                                                                     * 00002300
*      Users may map the UCB common extension area using the mapping  * 00002400
*      macro IEFUCBOB.                                                * 00002500
*                                                                     * 00002600
*01* EXTERNAL CLASSIFICATION:  GUPI                                   * 00002700
*                                                                     * 00002800
*01* END OF EXTERNAL CLASSIFICATION:                                  * 00002900
*                                                                     * 00003000
*01* ENVIRONMENT:                                                     * 00003100
*                                                                     * 00003200
*                                                                     * 00003300
*      Dispatchable unit mode: Task or SRB mode.                      * 00003400
*                                                                     * 00003500
*      Minimum authorization: Problem or Supervisor state.  Any PSW   * 00003600
*                        key.                                         * 00003700
*                                                                     * 00003800
*      AMODE:            24- or 31-bit.                               * 00003900
*                                                                     * 00004000
*      ASC mode:         Primary.                                     * 00004100
*                                                                     * 00004200
*      Serialization:    Enabled or Disabled.                         * 00004300
*                                                                     * 00004400
*                                                                     * 00004500
*                                                                     * 00004600
*01* PROGRAMMING REQUIREMENTS:                                        * 00004700
*                                                                     * 00004800
*    Users of this macro must make sure that the UCB will not be      * 00004900
*    deleted.  The application must PIN the UCB, or make sure that    * 00005000
*    the environment it is executing in will not allow the UCB to be  * 00005100
*    deleted.                                                         * 00005200
*                                                                     * 00005300
*    This service will not have any recovery. The user must supply    * 00005400
*    recovery to handle any unexpected errors.  Users of this service * 00005500
*    should consider using the UCBLOOK, UCBINFO, or UCBSCAN service   * 00005600
*    to satisfy their needs as those services provide more checking,  * 00005700
*    recovery, and allow less restrictive environments.               * 00005800
*                                                                     * 00005900
*01* INPUT REGISTER INFORMATION:                                      * 00006000
*                                                                     * 00006100
*                                                                     * 00006200
*    REGISTER  CONTENTS                                               * 00006300
*                                                                     * 00006400
*    0         Used by the service                                    * 00006500
*                                                                     * 00006600
*    1         Address of the parameter list                          * 00006700
*                                                                     * 00006800
*    2 - 13    caller's registers                                     * 00006900
*                                                                     * 00007000
*    14        The return address                                     * 00007100
*                                                                     * 00007200
*    15        Entry point to the service.                            * 00007300
*                                                                     * 00007400
*                                                                     * 00007500
*                                                                     * 00007600
*    Before issuing IOSCMXA, the caller does not have to place any    * 00007700
*    information into any AR.                                         * 00007800
*                                                                     * 00007900
*01* OUTPUT REGISTER INFORMATION:                                     * 00008000
*                                                                     * 00008100
*                                                                     * 00008200
*    REGISTER  CONTENTS                                               * 00008300
*                                                                     * 00008400
*    0         Reason code                                            * 00008500
*                                                                     * 00008600
*    1         Unpredictable                                          * 00008700
*                                                                     * 00008800
*    2 - 13    caller's registers                                     * 00008900
*                                                                     * 00009000
*    14        The return address                                     * 00009100
*                                                                     * 00009200
*    15        Return code                                            * 00009300
*                                                                     * 00009400
*                                                                     * 00009500
*                                                                     * 00009600
*    When control returns to the caller, the ARs will contain what    * 00009700
*    they had at entry.                                               * 00009800
*                                                                     * 00009900
*01* SYNTAX:                                                          * 00010000
*                                                                     * 00010100
*[xlabel]  IOSCMXA     UCBPTR=xucbptr                                 * 00010200
*                     ,UCBCXPTR=xucbcxptr                             * 00010300
*                    [,RETCODE=xretcode]                              * 00010400
*                    [,RSNCODE=xrsncode]                              * 00010500
*                   [,MF=S]                                          * 00010600
*                   [,MF=(L,xmfctrl,xmfattr|0D)]                   * 00010700
*                   [,MF=(E,xmfctrl,COMPLETE)]                     * 00010800
*                                                                     * 00010900
*                                                                     * 00011000
*      Where:                                                         * 00011100
*                                                                     * 00011200
*                                                                     * 00011300
*      [xlabel]                                                       * 00011400
*          is an optional symbol, starting in column 1, that is the   * 00011500
*          name on the IOSCMXA macro invocation.  The name must       * 00011600
*          conform to the rules for an ordinary assembler language    * 00011700
*          symbol.                                                    * 00011800
*          DEFAULT: No name.                                          * 00011900
*                                                                     * 00012000
*                                                                     * 00012100
*                                                                     * 00012200
*                                                                     * 00012300
*      UCBPTR=xucbptr                                                 * 00012400
*          is the name (RS-type), or address in register (2)-(12), of * 00012500
*          a required 4 byte input that contains the address of the   * 00012600
*          UCB whose common extension address is to be obtained.      * 00012700
*          NOTE. The address passed to the service must not be        * 00012800
*          associated with a COPY UCB.                                * 00012900
*                                                                     * 00013000
*                                                                     * 00013100
*                                                                     * 00013200
*                                                                     * 00013300
*      UCBCXPTR=xucbcxptr                                             * 00013400
*          is the name (RS-type), or address in register (2)-(12), of * 00013500
*          a required 4 byte output that will contain the address of  * 00013600
*          the UCB common extension returned by this service.  The    * 00013700
*          UCB common extension is mapped by the mapping macro        * 00013800
*          IEFUCBOB.                                                  * 00013900
*                                                                     * 00014000
*                                                                     * 00014100
*                                                                     * 00014200
*                                                                     * 00014300
*      [RETCODE=xretcode]                                             * 00014400
*          is the name (RS-type) of an optional fullword output       * 00014500
*          variable, or register (2)-(12), into which the return code * 00014600
*          is to be copied from GPR 15.                               * 00014700
*                                                                     * 00014800
*                                                                     * 00014900
*                                                                     * 00015000
*                                                                     * 00015100
*      [RSNCODE=xrsncode]                                             * 00015200
*          is the name (RS-type) of an optional fullword output       * 00015300
*          variable, or register (2)-(12), into which the reason code * 00015400
*          is to be copied from GPR 0.                                * 00015500
*                                                                     * 00015600
*                                                                     * 00015700
*                                                                     * 00015800
*                                                                     * 00015900
*      [MF=S|L|E]                                                   * 00016000
*          is an optional keyword input which specifies the macro     * 00016100
*          form.                                                      * 00016200
*          DEFAULT: S                                                 * 00016300
*                                                                     * 00016400
*                                                                     * 00016500
*          [MF=S]                                                     * 00016600
*              specifies the standard form of the macro.  The "S"     * 00016700
*              form generates code to put the parameters into an      * 00016800
*              in-line parameter list and invoke the desired service. * 00016900
*              Full checking for required macro keys is done along    * 00017000
*              with supplying defaults for omitted optional           * 00017100
*              parameters.                                            * 00017200
*                                                                     * 00017300
*          [MF=(L,xmfctrl,xmfattr|0D)]                              * 00017400
*              specifies the list form of the macro.  The "L" form    * 00017500
*              defines an area to be used for the parameter list.     * 00017600
*              Any other macro parameters are flagged as errors.      * 00017700
*                                                                     * 00017800
*            ,xmfctrl                                                 * 00017900
*              is a required input.  It is the name of a storage area * 00018000
*              for the parameter list.                                * 00018100
*                                                                     * 00018200
*            ,xmfattr|0D                                            * 00018300
*              is an optional 60 character input string that varies   * 00018400
*              from 1 to 60 characters. It can contain any value that * 00018500
*              is valid on an assembler DS pseudo-op. You can use     * 00018600
*              this parameter to force boundary alignment of the      * 00018700
*              parameter list.                                        * 00018800
*              DEFAULT: 0D which forces the parameter list to a       * 00018900
*              doubleword boundary.                                   * 00019000
*                                                                     * 00019100
*          [MF=(E,xmfctrl,COMPLETE)]                                * 00019200
*              specifies the execute form of the macro.  The "E" form * 00019300
*              generates code to put the parameters into the          * 00019400
*              parameter list specified by xmfctrl and provides full  * 00019500
*              syntax checking with default setting.                  * 00019600
*                                                                     * 00019700
*            ,xmfctrl                                                 * 00019800
*              is a required input.  It is the name (RS-type), or     * 00019900
*              address in register (1)-(12), of a storage area for    * 00020000
*              the parameter list.                                    * 00020100
*                                                                     * 00020200
*            ,COMPLETE                                              * 00020300
*              is an optional keyword input which specifies the       * 00020400
*              degree of macro parameter syntax checking.             * 00020500
*              DEFAULT: COMPLETE                                      * 00020600
*                                                                     * 00020700
*                                                                     * 00020800
*              COMPLETE                                               * 00020900
*                  Checking for required macro keys is done and       * 00021000
*                  defaults are supplied for omitted optional         * 00021100
*                  parameters.                                        * 00021200
*                                                                     * 00021300
*                                                                     * 00021400
*                                                                     * 00021500
*                                                                     * 00021600
*                                                                     * 00021700
*                                                                     * 00021800
*                                                                     * 00021900
*01* RETURN CODES:                                                    * 00022000
*                                                                     * 00022100
*                                                                     * 00022200
*                                                                     * 00022300
*                 X'00'     Successful execution.  The address of the * 00022400
*                           UCB common extension has been returned in * 00022500
*                           UCBCXPTR.                                 * 00022600
*                                                                     * 00022700
*                 X'08'     Error in caller's parameters              * 00022800
*                                                                     * 00022900
*                           Reason codes                              * 00023000
*                                                                     * 00023100
*                                                                     * 00023200
*                           X'03'     The UCB address provided by the * 00023300
*                                     caller does not represent a     * 00023400
*                                     valid UCB.                      * 00023500
*                                                                     * 00023600
*                                                                     * 00023700
*                                                                     * 00023800
*                                                                     * 00023900
*                                                                     * 00024000
*                                                                     * 00024100
*                                                                     * 00024200
*01* REASON CODES:                                                    * 00024300
*                                                                     * 00024400
*       See return codes section.                                     * 00024500
*                                                                     * 00024600
*01* MODULE TYPE:  ASSEM MACRO                                        * 00024700
*                                                                     * 00024800
*02*   PROCESSOR:  ASSEM                                              * 00024900
*                                                                     * 00025000
*01* COMPONENT:  SC1C3                                                * 00025100
*                                                                     * 00025200
*01* DISTRIBUTION LIBRARY: AMACLIB                                    * 00025300
*                                                                     * 00025400
*01* MACRO USAGE NOTES:                                               * 00025500
*                                                                     * 00025600
*                                                                     * 00025700
*    1.  Printing of the macro expansion is controlled by the ZPRINT  * 00025800
*        global macro variable.  Any value other than 'NO' will       * 00025900
*        result in the macro expansion being printed.  The default is * 00026000
*        'YES'.  The following examples illustrate how the ZPRINT     * 00026100
*        variable should be set.                                      * 00026200
*                                                                     * 00026300
*                    GBLC &ZPRINT                                     * 00026400
*            &ZPRINT SETC 'YES'          &ZPRINT SETC 'NO'            * 00026500
*                                                                     * 00026600
*                                                                     * 00026700
*                                                                     * 00026800
*01* CHANGE ACTIVITY:                                                 * 00026900
*                                                                     * 00027000
*   Flag LineItem  FMID    Date   ID    Comment                       * 00027100
*                                                                     * 00027200
*    $L0=DCR112   HBB5510 930715 PDLL:  Four Digit Support            * 00027300
*    $D1=DCR095   HBB5520 940912 PDLU:  Change IOSCMXA to GUPI.       * 00027400
*    $P0=PIG2883  HBB5510 930907 PDKB:  Remove supervisor state       * 00027500
*                                         restriction.                * 00027600
*    $P1=PIG3426  HBB5510 931104 PDLL:  Add 24 bit mode support.      * 00027700
*    $01=OW12724  HBB5520 950602 PDMC:  Allow macro to be used in     * 00027800
*                                         relocatable code.           * 00027900
****** END OF SPECIFICATIONS *****************************************/ 00028000
*/********************************************************************* 00028100
         MACRO                                                          00028200
&XLABEL  IOSCMXA &UCBPTR=,&UCBCXPTR=,&RETCODE=,&RSNCODE=,&MF=           00028300
.*                                                                      00028400
*              MACDATE -10/03/95-<1>                                    00028500
.*                                                                      00028600
.*******************************************************************    00028700
.***AB.02  GLOBAL VARIABLES TO CONTROL PRINT AND CODE GENERATION        00028800
.*******************************************************************    00028900
              GBLC  &ZPRINT     YES=PRINT NO=NO PRINT                   00029000
              GBLC  &ZTEST      YES=TEST NO=NO TEST                     00029100
              GBLC  &ZSYSTEM    PCCODE10, MVS, SAK, VM, XAX             00029200
.*                                                                      00029300
              GBLC  &ZIOSCMXA   YES=MACRO USED AT LEAST ONCE            00029400
.*******************************************************************    00029500
.***AB.03  COMMONLY USED LOCAL MACRO VARIABLES                          00029600
.*******************************************************************    00029700
              LCLC  &ZMS        ERROR MESSAGE WORK AREA                 00029800
              LCLC  &ZCNDX      LAST THREE SYSNDX CHARACTERS            00029900
              LCLC  &ZCLNG      USED WHEN LENGTH IS NEEDED              00030000
              LCLC  &ZCGPR      USED WHEN VALUE IS IN A GPR             00030100
              LCLC  &ZCVAL      USED TO CONTAIN FIXED VALUE             00030200
              LCLA  &ZAWRK      USED AS A WORK AREA                     00030300
              LCLA  &ZASIZ      USED FOR SIZE OF VALUE                  00030400
              LCLA  &ZN         NUMERIC WORK VARIABLE                   00030500
              LCLC  &ZC         CHARACTER WORK VARIABLE                 00030600
              LCLC  &ZTLC       CHARACTER TOO LONG VARIABLE             00030700
              LCLA  &ZTLA       VALUE TOO LONG VARIABLE                 00030800
              LCLA  &ZMACRET    MACRO RETURN CODE                       00030900
&ZMACRET      SETA  0           ASSUME NO ERRORS                        00031000
.*                                                                      00031100
              LCLC  &ZCSYSLIST(255)             NONXKEY, POS ARRAY      00031200
              LCLA  &ZASYSLNDX  WORK INDEX FOR ZCSYSLIST()              00031300
              LCLA  &ZPLLEN     PARAMETER LIST LENGTH                   00031400
              LCLC  &ZENDBASEPL                 End of base PL          00031500
.********************************************************************   00031600
.***AB.05  INVOKE MVS MACROS TO CONTROL CODE GENERATION                 00031700
.********************************************************************   00031800
              GBLC  &SYSSPLV    SP LEVEL 1,2,3 -SPLEVEL                 00031900
              GBLC  &SYSASCE    SYSTEM STATE P ANY AR-SYSSTATE          00032000
.*                                                                      00032100
              AIF   (K'&SYSASCE GT 0).ZSYS4     SYS STATE DEFINED       00032200
              AIF   (K'&SYSSPLV GT 0).ZSYS2     SP LEVEL DEFINED        00032300
              SPLEVEL  TEST                                             00032400
.ZSYS2        ANOP  ,                                                   00032500
              AIF   ('&SYSSPLV' EQ '1').ZSYS3   PRE SP 3.1              00032600
              AIF   ('&SYSSPLV' EQ '2').ZSYS3   PRE SP 3.1              00032700
              SYSSTATE TEST                                             00032800
              AGO   .ZSYS4                                              00032900
.ZSYS3        ANOP  ,                                                   00033000
&SYSASCE      SETC  'P'         ASSUME SYSSTATE PRIMARY                 00033100
.ZSYS4        ANOP  ,                                                   00033200
.*******************************************************************    00033300
.***AB.07  DEFINE ALL MACRO VARIABLES                                   00033400
.*******************************************************************    00033500
              LCLC  &XUCBPTR    ++ NAME                                 00033600
              LCLC  &XUCBCXPTR  ++ NAME                                 00033700
              LCLC  &XRETCODE   ++ NAME                                 00033800
              LCLC  &XRSNCODE   ++ NAME                                 00033900
              LCLC  &XMF        ++ VALUE                                00034000
              LCLC  &XMFCTRL    ++ NAME                                 00034100
              LCLC  &XMFATTR    ++ VALUE                                00034200
              LCLC  &XMFSCK     ++ VALUE                                00034300
.*******************************************************************    00034400
.***AB.13  DEFINE MACRO VARIABLES FOR INPUT/OUTPUT PROCESSING           00034500
.*******************************************************************    00034600
              LCLC  &ZXUCBPTR   ++ INPUT NAME                           00034700
              LCLC  &ZXUCBCXPTR                 ++ OUTPUT NAME          00034800
              LCLC  &ZXRETCODE  ++ OUTPUT NAME                          00034900
              LCLC  &ZXRSNCODE  ++ OUTPUT NAME                          00035000
              LCLC  &ZXMF       ++ INPUT VALUE                          00035100
              LCLC  &ZXMFCTRL   ++ INPUT NAME                           00035200
              LCLC  &ZXMFATTR   ++ INPUT VALUE                          00035300
              LCLC  &ZXMFSCK    ++ INPUT VALUE                          00035400
.********************************************************************   00035500
.***AG.MF01 PROCESS MF MACRO FORMS                                      00035600
.********************************************************************   00035700
              ACTR  10000                                               00035800
.*------------------------------------------------------------------    00035900
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00036000
&XMF          SETC  ''          INITIALIZE XVARIABLE                    00036100
.*-------------------------------------------------------------------   00036200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00036300
.ZG15         ANOP  ,                                                   00036400
&ZTLC         SETC 'S'                                                  00036500
              AIF   ('&MF(1)' NE '&ZTLC').ZG16                          00036600
&XMF          SETC  'S'         SET KEYWORD                             00036700
              AIF   (N'&MF LE 1).ZG15A          CK NUM                  00036800
&ZMS          SETC  '"MF='      *KPOSA* MNOTE                           00036900
&ZMS          SETC  '&ZMS.&MF"'                                         00037000
&ZMS          SETC  '&ZMS "MF"'                                         00037100
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00037200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00037300
.ZG15A        ANOP  ,                                                   00037400
.*-------------------------------------------------------------------   00037500
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00037600
.ZG16         ANOP  ,                                                   00037700
&ZTLC         SETC 'L'                                                  00037800
              AIF   ('&MF(1)' NE '&ZTLC').ZG23                          00037900
&XMF          SETC  'L'         SET KEYWORD                             00038000
              AIF   (N'&MF LE 3).ZG16A          CK NUM                  00038100
&ZMS          SETC  '"MF='      *KPOSA* MNOTE                           00038200
&ZMS          SETC  '&ZMS.&MF"'                                         00038300
&ZMS          SETC  '&ZMS "MF"'                                         00038400
              MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'                00038500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00038600
.ZG16A        ANOP  ,                                                   00038700
.*-------------------------------------------------------------------   00038800
.***AG.KKCTL08 -MF(L) SPECIAL CHECK                                     00038900
              AIF   (N'&SYSLIST NE 0).ZG16B     POSITIONALS?            00039000
              AIF   ('&UCBPTR' NE '').ZG16B     KEYS?                   00039100
              AIF   ('&UCBCXPTR' NE '').ZG16B   KEYS?                   00039200
              AIF   ('&RETCODE' NE '').ZG16B    KEYS?                   00039300
              AIF   ('&RSNCODE' NE '').ZG16B    KEYS?                   00039400
              AGO    .ZG16C     INVOCATION OKAY                         00039500
.ZG16B        ANOP  ,                                                   00039600
&ZMS          SETC  'THE "L" FORM OF "MF" CANNOT'  *MFLA* MNOTE         00039700
&ZMS          SETC  '&ZMS HAVE ANY OTHER KEYWORDS OR'                   00039800
&ZMS          SETC  '&ZMS POSITIONAL PARAMETERS SPECIFIED'              00039900
              MNOTE 8,' &ZMS ON THE INVOCATION.'                        00040000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00040100
.ZG16C        ANOP  ,                                                   00040200
.*-------------------------------------------------------------------   00040300
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00040400
&ZXMFCTRL     SETC  'INPUT'     SET IN/OUTPUT                           00040500
&XMFCTRL      SETC  '&MF(2,1)'  SET XVARIABLE                           00040600
              AIF   (N'&MF(2) GT 1).ZG18B       MULTI PARMS             00040700
&XMFCTRL      SETC  '&MF(2)'    SET XVARIABLE                           00040800
.ZG18B        AIF   (K'&MF(2) GT 0).ZG18C                               00040900
&ZXMFCTRL     SETC  ''          RESET IN/OUTPUT                         00041000
&ZMS          SETC  'WHEN "L" IS SPECIFIED'     *KRQDA*                 00041100
&ZMS          SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'                 00041200
              MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                        00041300
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00041400
.ZG18C        ANOP  ,                                                   00041500
.*-------------------------------------------------------------------   00041600
.***AG.KCK01 NAME, OPT RQD INPUT, POS(2) -GPR NOT ALLOWED               00041700
              AIF   (K'&ZXMFCTRL LE 0).ZG18P    NOT I/O                 00041800
              AIF   ('&XMFCTRL'(1,1) NE '(').ZG18P                      00041900
&ZXMFCTRL     SETC  ''          RESET IN/OUTPUT                         00042000
&ZMS          SETC  '"MF='      *KGPRA* MNOTE                           00042100
&ZMS          SETC  '&ZMS.&MF"'                                         00042200
&ZMS          SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'           00042300
              MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 2.'                   00042400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00042500
.ZG18P        ANOP  ,                                                   00042600
.*-------------------------------------------------------------------   00042700
.***AG.KXVAR13 VALUE, OPT INPUT, POS(3) -XVARIABLE                      00042800
&ZXMFATTR     SETC  'INPUT'     SET IN/OUTPUT                           00042900
&XMFATTR      SETC  '0D'                                                00043000
              AIF   (K'&MF(3) LE 0).ZG21B       PARM                    00043100
&XMFATTR      SETC  '&MF(3,1)'  SET XVARIABLE                           00043200
              AIF   (N'&MF(3) GT 1).ZG21B       MULTI PARMS             00043300
&XMFATTR      SETC  '&MF(3)'    SET XVARIABLE                           00043400
.ZG21B        ANOP  ,                                                   00043500
.*-------------------------------------------------------------------   00043600
.***AG.KCK01 VALUE, OPT INPUT, POS(3) -GPR NOT ALLOWED                  00043700
              AIF   (K'&ZXMFATTR LE 0).ZG21P    NOT I/O                 00043800
              AIF   ('&XMFATTR'(1,1) NE '(').ZG21P                      00043900
&ZXMFATTR     SETC  ''          RESET IN/OUTPUT                         00044000
&ZMS          SETC  '"MF='      *KGPRA* MNOTE                           00044100
&ZMS          SETC  '&ZMS.&MF"'                                         00044200
&ZMS          SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'           00044300
              MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 3.'                   00044400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00044500
.ZG21P        ANOP  ,                                                   00044600
.*-------------------------------------------------------------------   00044700
.***AG.KCK03 VALUE, OPT INPUT, POS(3) -CHARACTER LENGTH                 00044800
              AIF   (K'&ZXMFATTR LE 0).ZG21S    NOT I/O                 00044900
              AIF   (K'&XMFATTR LE 60).ZG21S    LNG OK                  00045000
&ZXMFATTR     SETC  ''          RESET IN/OUTPUT                         00045100
&ZMS          SETC  '"MF='      *KLNGA* MNOTE                           00045200
&ZMS          SETC  '&ZMS.&MF"'                                         00045300
&ZMS          SETC  '&ZMS ARGUMENT 3 EXCEEDS THE MAXIMUM'               00045400
              MNOTE 8,' &ZMS LENGTH OF 60 CHARACTERS.'                  00045500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00045600
.ZG21S        ANOP  ,                                                   00045700
.*-------------------------------------------------------------------   00045800
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00045900
.ZG23         ANOP  ,                                                   00046000
&ZTLC         SETC 'E'                                                  00046100
              AIF   ('&MF(1)' NE '&ZTLC').ZG31                          00046200
&XMF          SETC  'E'         SET KEYWORD                             00046300
              AIF   (N'&MF LE 3).ZG23A          CK NUM                  00046400
&ZMS          SETC  '"MF='      *KPOSA* MNOTE                           00046500
&ZMS          SETC  '&ZMS.&MF"'                                         00046600
&ZMS          SETC  '&ZMS "MF"'                                         00046700
              MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'                00046800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00046900
.ZG23A        ANOP  ,                                                   00047000
.*-------------------------------------------------------------------   00047100
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00047200
&ZXMFCTRL     SETC  'INPUT'     SET IN/OUTPUT                           00047300
&XMFCTRL      SETC  '&MF(2,1)'  SET XVARIABLE                           00047400
              AIF   (N'&MF(2) GT 1).ZG25B       MULTI PARMS             00047500
&XMFCTRL      SETC  '&MF(2)'    SET XVARIABLE                           00047600
.ZG25B        AIF   (K'&MF(2) GT 0).ZG25C                               00047700
&ZXMFCTRL     SETC  ''          RESET IN/OUTPUT                         00047800
&ZMS          SETC  'WHEN "E" IS SPECIFIED'     *KRQDA*                 00047900
&ZMS          SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'                 00048000
              MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                        00048100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00048200
.ZG25C        ANOP  ,                                                   00048300
.*-------------------------------------------------------------------   00048400
.***AG.KCK02 NAME, OPT RQD INPUT, POS(2) -GPR OUT OF RANGE              00048500
              AIF   (K'&ZXMFCTRL LE 0).ZG25R    NOT I/O                 00048600
              AIF   ('&XMFCTRL'(1,1) NE '(').ZG25R                      00048700
&ZCGPR        SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)                          00048800
              AIF   ('&ZCGPR'(1,1) NE '0').ZG25P                        00048900
              AIF   (K'&ZCGPR GT 2).ZG25Q                               00049000
              AIF   ('&ZCGPR' EQ '0').ZG25Q                             00049100
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00049200
              AIF   (T'&ZCGPR NE 'N').ZG25Q     INVALID REG NAME        00049300
.ZG25P        ANOP  ,                                                   00049400
              AIF   (T'&ZCGPR NE 'N').ZG25R     NON NUMERIC             00049500
              AIF   ('&ZCGPR' LT '1').ZG25Q                             00049600
              AIF   ('&ZCGPR' LE '12').ZG25R                            00049700
.ZG25Q        ANOP  ,                                                   00049800
&ZMS          SETC  '"MF='      *KGPRA* MNOTE                           00049900
&ZMS          SETC  '&ZMS.&MF"'                                         00050000
&ZMS          SETC  '&ZMS ARGUMENT 2 MUST SPECIFY A REGISTER'           00050100
              MNOTE 8,' &ZMS IN THE RANGE (1)-(12).'                    00050200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00050300
.ZG25R        ANOP  ,                                                   00050400
.*-------------------------------------------------------------------   00050500
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00050600
&XMFSCK       SETC  ''          INITIALIZE XVARIABLE                    00050700
.ZG29A   AIF   ('&MF(3)' NE 'COMPLETE').ZG30A                           00050800
&XMFSCK       SETC  'COMPLETE'  SET KEYWORD                             00050900
.*-------------------------------------------------------------------   00051000
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00051100
.ZG30A        AIF   (K'&XMFSCK GT 0).ZG30C      KEYWORD                 00051200
              AIF   (K'&MF(3) LE 0).ZG30B                               00051300
&ZMS          SETC  '"MF='      *KUKWA* MNOTE                           00051400
&ZMS          SETC  '&ZMS.&MF"'                                         00051500
&ZMS          SETC  '&ZMS ARGUMENT 3 IS AN UNKNOWN KEYWORD. '           00051600
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                 00051700
&ZMS          SETC  '&ZMS "COMPLETE".'          VALID KEYWORD           00051800
              MNOTE 8,' &ZMS '                                          00051900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00052000
.ZG30B        ANOP  ,                                                   00052100
&XMFSCK       SETC  'COMPLETE'  SET DEFAULT KEYWORD                     00052200
.ZG30C        ANOP  ,                                                   00052300
&ZXMFSCK      SETC  'INPUT'     SET IN/OUTPUT                           00052400
.*------------------------------------------------------------------    00052500
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00052600
.ZG31         ANOP  ,                                                   00052700
&ZXMF         SETC  'INPUT'     SET IN/OUTPUT                           00052800
              AIF   (K'&XMF GT 0).ZG31E         VALID ARG               00052900
              AIF   (T'&MF EQ 'O').ZG31D        OMITTED                 00053000
&ZASYSLNDX    SETA  0                                                   00053100
.ZG31A        ANOP  ,           POSITIONAL MACRO KEY                    00053200
&ZASYSLNDX    SETA  &ZASYSLNDX+1                                        00053300
              AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG31C                    00053400
&ZTLC         SETC 'MF'                                                 00053500
              AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG31A           00053600
.ZG31B        ANOP  ,                                                   00053700
&ZXMF         SETC  ''          RESET IN/OUTPUT                         00053800
&ZMS          SETC  'THE "MF" KEY'              *KOPTA* MNOTE           00053900
&ZMS          SETC  '&ZMS MUST CONTAIN ONE'                             00054000
              MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                    00054100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00054200
              AGO   .ZG31E                                              00054300
.ZG31C        ANOP  ,                                                   00054400
&ZXMF         SETC  ''          RESET IN/OUTPUT                         00054500
&ZMS          SETC  '"MF='      *KUKWA* MNOTE                           00054600
&ZMS          SETC  '&ZMS.&MF"'                                         00054700
&ZMS          SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '           00054800
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                 00054900
&ZMS          SETC  '&ZMS "S",'                 VALID KEYWORD           00055000
&ZMS          SETC  '&ZMS "L",'                 VALID KEYWORD           00055100
&ZMS          SETC  '&ZMS OR "E".'              VALID KEYWORD           00055200
              MNOTE 8,' &ZMS '                                          00055300
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00055400
              AGO   .ZG31E                                              00055500
.ZG31D        ANOP  ,                                                   00055600
&XMF          SETC  'S'         SET DEFAULT KEYWORD                     00055700
&XMFSCK       SETC  'COMPLETE'  COMPLETE CHECKING                       00055800
.ZG31E        ANOP  ,                                                   00055900
.********************************************************************   00056000
.***AG.MF02  FULL MACRO SYNTAX CHECKING                                 00056100
.********************************************************************   00056200
              ACTR  10000                                               00056300
.*-------------------------------------------------------------------   00056400
.***AG.MF03 MF=(SLE)                                                    00056500
              AIF   ('&XMF' EQ 'L').ZGMFX                               00056600
.*----------------------------------------------------------------***   00056700
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00056800
              AIF   (N'&UCBPTR LE 1).ZG2A       CK NUM                  00056900
&ZMS          SETC  '"UCBPTR='  *KPOSA* MNOTE                           00057000
&ZMS          SETC  '&ZMS.&UCBPTR"'                                     00057100
&ZMS          SETC  '&ZMS "UCBPTR"'                                     00057200
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00057300
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00057400
.ZG2A         ANOP  ,                                                   00057500
.*-------------------------------------------------------------------   00057600
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00057700
&ZXUCBPTR     SETC  'INPUT'     SET IN/OUTPUT                           00057800
&XUCBPTR      SETC  '&UCBPTR(1)'                SET XVARIABLE           00057900
              AIF   (N'&UCBPTR GT 1).ZG2B       MULTI PARMS             00058000
&XUCBPTR      SETC  '&UCBPTR'   SET XVARIABLE                           00058100
.ZG2B         AIF   (K'&UCBPTR(1) GT 0).ZG2C                            00058200
&ZXUCBPTR     SETC  ''          RESET IN/OUTPUT                         00058300
&ZMS          SETC  ' '         *KRQDA*                                 00058400
&ZMS          SETC  '&ZMS "UCBPTR" KEY AND ITS ARGUMENT'                00058500
              MNOTE 8,' &ZMS ARE REQUIRED.'                             00058600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00058700
.ZG2C         ANOP  ,                                                   00058800
.*-------------------------------------------------------------------   00058900
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00059000
              AIF   (K'&ZXUCBPTR LE 0).ZG2R     NOT I/O                 00059100
              AIF   ('&XUCBPTR'(1,1) NE '(').ZG2R                       00059200
&ZCGPR        SETC  '&XUCBPTR'(2,K'&XUCBPTR-2)                          00059300
              AIF   ('&ZCGPR'(1,1) NE '0').ZG2P                         00059400
              AIF   (K'&ZCGPR GT 2).ZG2Q                                00059500
              AIF   ('&ZCGPR' EQ '0').ZG2Q                              00059600
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00059700
              AIF   (T'&ZCGPR NE 'N').ZG2Q      INVALID REG NAME        00059800
.ZG2P         ANOP  ,                                                   00059900
              AIF   (T'&ZCGPR NE 'N').ZG2R      NON NUMERIC             00060000
              AIF   ('&ZCGPR' LT '2').ZG2Q                              00060100
              AIF   ('&ZCGPR' LE '12').ZG2R                             00060200
.ZG2Q         ANOP  ,                                                   00060300
&ZMS          SETC  '"UCBPTR='  *KGPRA* MNOTE                           00060400
&ZMS          SETC  '&ZMS.&UCBPTR"'                                     00060500
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00060600
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00060700
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00060800
.ZG2R         ANOP  ,                                                   00060900
.*----------------------------------------------------------------***   00061000
.***AG.KXVAR05 NAME, RQD OUTPUT, KEYS -XVARIABLE KEY                    00061100
              AIF   (N'&UCBCXPTR LE 1).ZG5A     CK NUM                  00061200
&ZMS          SETC  '"UCBCXPTR='                *KPOSA* MNOTE           00061300
&ZMS          SETC  '&ZMS.&UCBCXPTR"'                                   00061400
&ZMS          SETC  '&ZMS "UCBCXPTR"'                                   00061500
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00061600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00061700
.ZG5A         ANOP  ,                                                   00061800
.*-------------------------------------------------------------------   00061900
.***AG.KXVAR06 NAME, RQD OUTPUT, KEYS -XVARIABLE                        00062000
&ZXUCBCXPTR   SETC  'OUTPUT'    SET IN/OUTPUT                           00062100
&XUCBCXPTR    SETC  '&UCBCXPTR(1)'              SET XVARIABLE           00062200
              AIF   (N'&UCBCXPTR GT 1).ZG5B     MULTI PARMS             00062300
&XUCBCXPTR    SETC  '&UCBCXPTR'                 SET XVARIABLE           00062400
.ZG5B         AIF   (K'&UCBCXPTR(1) GT 0).ZG5C                          00062500
&ZXUCBCXPTR   SETC  ''          RESET IN/OUTPUT                         00062600
&ZMS          SETC  ' '         *KRQDA*                                 00062700
&ZMS          SETC  '&ZMS "UCBCXPTR" KEY AND ITS ARGUMENT'              00062800
              MNOTE 8,' &ZMS ARE REQUIRED.'                             00062900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00063000
.ZG5C         ANOP  ,                                                   00063100
.*-------------------------------------------------------------------   00063200
.***AG.KCK02 NAME, RQD OUTPUT, KEYS -GPR OUT OF RANGE                   00063300
              AIF   (K'&ZXUCBCXPTR LE 0).ZG5R   NOT I/O                 00063400
              AIF   ('&XUCBCXPTR'(1,1) NE '(').ZG5R                     00063500
&ZCGPR        SETC  '&XUCBCXPTR'(2,K'&XUCBCXPTR-2)                      00063600
              AIF   ('&ZCGPR'(1,1) NE '0').ZG5P                         00063700
              AIF   (K'&ZCGPR GT 2).ZG5Q                                00063800
              AIF   ('&ZCGPR' EQ '0').ZG5Q                              00063900
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00064000
              AIF   (T'&ZCGPR NE 'N').ZG5Q      INVALID REG NAME        00064100
.ZG5P         ANOP  ,                                                   00064200
              AIF   (T'&ZCGPR NE 'N').ZG5R      NON NUMERIC             00064300
              AIF   ('&ZCGPR' LT '2').ZG5Q                              00064400
              AIF   ('&ZCGPR' LE '12').ZG5R                             00064500
.ZG5Q         ANOP  ,                                                   00064600
&ZMS          SETC  '"UCBCXPTR='                *KGPRA* MNOTE           00064700
&ZMS          SETC  '&ZMS.&UCBCXPTR"'                                   00064800
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00064900
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00065000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00065100
.ZG5R         ANOP  ,                                                   00065200
.*----------------------------------------------------------------***   00065300
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00065400
              AIF   (N'&RETCODE LE 1).ZG8A      CK NUM                  00065500
&ZMS          SETC  '"RETCODE='                 *KPOSA* MNOTE           00065600
&ZMS          SETC  '&ZMS.&RETCODE"'                                    00065700
&ZMS          SETC  '&ZMS "RETCODE"'                                    00065800
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00065900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00066000
.ZG8A         ANOP  ,                                                   00066100
.*-------------------------------------------------------------------   00066200
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00066300
              AIF   (K'&RETCODE(1) LE 0).ZG8C   NO PARM                 00066400
&ZXRETCODE    SETC  'OUTPUT'    SET OUTPUT                              00066500
&XRETCODE     SETC  '&RETCODE(1)'               SET XVARIABLE           00066600
              AIF   (N'&RETCODE GT 1).ZG8C                              00066700
&XRETCODE     SETC  '&RETCODE'  SET XVARIABLE                           00066800
.ZG8C         ANOP  ,                                                   00066900
.*-------------------------------------------------------------------   00067000
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00067100
              AIF   (K'&ZXRETCODE LE 0).ZG8R    NOT I/O                 00067200
              AIF   ('&XRETCODE'(1,1) NE '(').ZG8R                      00067300
&ZCGPR        SETC  '&XRETCODE'(2,K'&XRETCODE-2)                        00067400
              AIF   ('&ZCGPR'(1,1) NE '0').ZG8P                         00067500
              AIF   (K'&ZCGPR GT 2).ZG8Q                                00067600
              AIF   ('&ZCGPR' EQ '0').ZG8Q                              00067700
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00067800
              AIF   (T'&ZCGPR NE 'N').ZG8Q      INVALID REG NAME        00067900
.ZG8P         ANOP  ,                                                   00068000
              AIF   (T'&ZCGPR NE 'N').ZG8R      NON NUMERIC             00068100
              AIF   ('&ZCGPR' LT '2').ZG8Q                              00068200
              AIF   ('&ZCGPR' LE '12').ZG8R                             00068300
.ZG8Q         ANOP  ,                                                   00068400
&ZMS          SETC  '"RETCODE='                 *KGPRA* MNOTE           00068500
&ZMS          SETC  '&ZMS.&RETCODE"'                                    00068600
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00068700
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00068800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00068900
.ZG8R         ANOP  ,                                                   00069000
.*----------------------------------------------------------------***   00069100
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00069200
              AIF   (N'&RSNCODE LE 1).ZG11A     CK NUM                  00069300
&ZMS          SETC  '"RSNCODE='                 *KPOSA* MNOTE           00069400
&ZMS          SETC  '&ZMS.&RSNCODE"'                                    00069500
&ZMS          SETC  '&ZMS "RSNCODE"'                                    00069600
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00069700
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00069800
.ZG11A        ANOP  ,                                                   00069900
.*-------------------------------------------------------------------   00070000
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00070100
              AIF   (K'&RSNCODE(1) LE 0).ZG11C  NO PARM                 00070200
&ZXRSNCODE    SETC  'OUTPUT'    SET OUTPUT                              00070300
&XRSNCODE     SETC  '&RSNCODE(1)'               SET XVARIABLE           00070400
              AIF   (N'&RSNCODE GT 1).ZG11C                             00070500
&XRSNCODE     SETC  '&RSNCODE'  SET XVARIABLE                           00070600
.ZG11C        ANOP  ,                                                   00070700
.*-------------------------------------------------------------------   00070800
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00070900
              AIF   (K'&ZXRSNCODE LE 0).ZG11R   NOT I/O                 00071000
              AIF   ('&XRSNCODE'(1,1) NE '(').ZG11R                     00071100
&ZCGPR        SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                        00071200
              AIF   ('&ZCGPR'(1,1) NE '0').ZG11P                        00071300
              AIF   (K'&ZCGPR GT 2).ZG11Q                               00071400
              AIF   ('&ZCGPR' EQ '0').ZG11Q                             00071500
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00071600
              AIF   (T'&ZCGPR NE 'N').ZG11Q     INVALID REG NAME        00071700
.ZG11P        ANOP  ,                                                   00071800
              AIF   (T'&ZCGPR NE 'N').ZG11R     NON NUMERIC             00071900
              AIF   ('&ZCGPR' LT '2').ZG11Q                             00072000
              AIF   ('&ZCGPR' LE '12').ZG11R                            00072100
.ZG11Q        ANOP  ,                                                   00072200
&ZMS          SETC  '"RSNCODE='                 *KGPRA* MNOTE           00072300
&ZMS          SETC  '&ZMS.&RSNCODE"'                                    00072400
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00072500
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00072600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00072700
.ZG11R        ANOP  ,                                                   00072800
.******************************************************************     00072900
.***AH.P00 CHECK STANDALONE POSITIONAL VARIABLES                        00073000
.******************************************************************     00073100
              ACTR  10000                                               00073200
.*----------------------------------------------------------------***   00073300
.***AH.P02 EXTRA POSITIONALS                                            00073400
              AIF   (N'&SYSLIST LE 0).ZGLISTX   NO EXTRAS               00073500
              AIF   (N'&SYSLIST NE 2).ZGLISTX1  NOT NULL                00073600
              AIF   ('&SYSLIST(1)' NE '').ZGLISTX1  NOT NULL            00073700
              AIF   ('&SYSLIST(2)' EQ '').ZGLISTX  NOT NULL             00073800
.ZGLISTX1     ANOP  ,                                                   00073900
&ZCVAL        SETC  ''          ERROR FIELD                             00074000
&ZAWRK        SETA  0           POSITIONAL NUMBER                       00074100
.ZGLIST2      ANOP  ,                                                   00074200
&ZAWRK        SETA  &ZAWRK+1    NEXT POSITIONAL                         00074300
              AIF   (&ZAWRK GT N'&SYSLIST).ZGLIST3  DONE                00074400
&ZCVAL        SETC '&ZCVAL,&SYSLIST(&ZAWRK)'    EXTRA                   00074500
              AGO   .ZGLIST2                                            00074600
.*                                                                      00074700
.ZGLIST3      ANOP  ,                                                   00074800
&ZCVAL        SETC '&ZCVAL'(2,K'&ZCVAL-1)       STRIP COMMA             00074900
&ZMS          SETC  'POSITIONAL ARGUMENT(S),'   *PPOSA* MNOTE           00075000
&ZMS          SETC  '&ZMS "&ZCVAL"'                                     00075100
&ZMS          SETC  '&ZMS CANNOT BE USED.'                              00075200
&ZMS          SETC  '&ZMS NO POSITIONAL ARGUMENTS'                      00075300
              MNOTE 8,' &ZMS ARE ALLOWED.'                              00075400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00075500
.ZGLISTX      ANOP  ,                                                   00075600
&ZASYSLNDX    SETA  0                                                   00075700
.*-------------------------------------------------------------------   00075800
.***AG.MF04 MF=(SLE)                                                    00075900
.ZGMFX        ANOP  ,           END OF FULL SYNTAX CHECK                00076000
.*******************************************************************    00076100
.***AE.ZMR01 NO CODE GENERATED IF ERRORS DETECTED                       00076200
.*******************************************************************    00076300
              AIF   (&ZMACRET NE 0).ZLX2        ERROR DETECTED          00076400
.*******************************************************************    00076500
.***AE.01  START OF IOSCMXA MACRO CODE                                  00076600
.*******************************************************************    00076700
              LCLC  &M0M0001                 NAME                       00076800
&M0M0001      SETC  '&XLABEL'                SET NAME                   00076900
              AIF   (K'&XLABEL NE 0).XLAB2                              00077000
&M0M0001      SETC  'M00M&SYSNDX'            DEFAULT NAME               00077100
.*                                                                      00077200
.XLAB2        ANOP  ,                                                   00077300
&M0M0001 DS    0H                             IOSCMXA-1                 00077400
.*******************************************************************    00077500
.***AE.PR01 PRINT CONTROLS, DEFAULT IS YES                              00077600
.*******************************************************************    00077700
              PUSH  PRINT                                               00077800
              AIF   ('&ZPRINT' NE 'NO').ZPRINTX  TURN PRINT ON          00077900
              PRINT OFF         ++ PR01                                 00078000
              AGO   .ZPRNTXX                                            00078100
.ZPRINTX      PRINT ON                                                  00078200
.ZPRNTXX      ANOP  ,                                                   00078300
.********************************************************************   00078400
.***AL.L01 INTERNAL ARRAY TO PRODUCE FORMATTED CODE                     00078500
.********************************************************************   00078600
                      LCLA  &ZOPN          LIST INSTRUCTION INDEX       00078700
                      LCLA  &ZOPN1         INVOCATION INDEX             00078800
                      LCLC  &ZOPL(4095)    LABEL                        00078900
                      LCLC  &ZOPO(4095)    OPERATION                    00079000
                      LCLC  &ZOPV(4095)    VALUE                        00079100
                      LCLC  &ZOPD(4095)    DESCRIPTION                  00079200
.*                                                                      00079300
&ZOPN                 SETA  0              INITIAL INST INDEX VALUE     00079400
.******************************************************************     00079500
.***AL.L10 IOSCMXA FMT=LIST MF=S|L PARAMETERS                           00079600
.******************************************************************     00079700
                      AIF   ('&XMF' EQ 'L').ZLMFSL2                     00079800
                      AIF   ('&XMF' NE 'S').ZLMFSLX                     00079900
&XMFCTRL              SETC  '#Z'.'&SYSNDX'(1,4).'A'                     00080000
&XMFATTR              SETC  '0D'                                        00080100
.*                                                                      00080200
&ZOPN                 SETA  &ZOPN+1                                     00080300
&ZOPL(&ZOPN)          SETC  ' '                                         00080400
&ZOPO(&ZOPN)          SETC  'B'                                         00080500
&ZOPV(&ZOPN)          SETC  '&XMFCTRL.S'                                00080600
&ZOPD(&ZOPN)          SETC  '++ IOSCMXA ARG PARMS'                      00080700
.*                                                                      00080800
&ZOPN                 SETA  &ZOPN+1                                     00080900
&ZOPL(&ZOPN)          SETC  ' '                                         00081000
&ZOPO(&ZOPN)          SETC  'SPACE'                                     00081100
&ZOPV(&ZOPN)          SETC  '1'                                         00081200
&ZOPD(&ZOPN)          SETC  ' '                                         00081300
.*                                                                      00081400
.ZLMFSL2              ANOP  ,                                           00081500
.*-------------------------------------------------------------------   00081600
.***AM.L01  IOSCMXA FMT=LIST PARAMETERS                                 00081700
&ZOPN                 SETA &ZOPN+1                                      00081800
&ZOPL(&ZOPN)          SETC '&XMFCTRL'                                   00081900
&ZOPO(&ZOPN)          SETC 'DS'                                         00082000
&ZOPV(&ZOPN)          SETC '&XMFATTR'                                   00082100
&ZOPD(&ZOPN)          SETC '++ IOSCMXA PARM LIST'                       00082200
.*-------------------------------------------------------------------   00082300
.***AM.L02 XVERSION XL1                                                 00082400
&ZOPN                 SETA &ZOPN+1                                      00082500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XVERSION'                         00082600
&ZOPO(&ZOPN)          SETC 'DS'                                         00082700
&ZOPV(&ZOPN)          SETC 'XL1'                                        00082800
&ZOPD(&ZOPN)          SETC '++ INPUT XVERSION'                          00082900
.*-------------------------------------------------------------------   00083000
.***AM.L03 XFLAGS BL.8                                                  00083100
&ZOPN                 SETA &ZOPN+1                                      00083200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XFLAGS'                           00083300
&ZOPO(&ZOPN)          SETC 'DS'                                         00083400
&ZOPV(&ZOPN)          SETC 'BL.8'                                       00083500
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             00083600
.*                                                                      00083700
&ZOPN                 SETA  &ZOPN+1                                     00083800
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_UCBPTR'                  00083900
&ZOPO(&ZOPN)          SETC  'EQU'                                       00084000
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             00084100
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               00084200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).UCBPTR'                       00084300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00084400
.*                                                                      00084500
&ZOPN                 SETA  &ZOPN+1                                     00084600
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_UCBCXPTR'                00084700
&ZOPO(&ZOPN)          SETC  'EQU'                                       00084800
&ZOPV(&ZOPN)          SETC  'B''01000000'''                             00084900
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               00085000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).UCBCXPTR'                     00085100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00085200
.*-------------------------------------------------------------------   00085300
.***AM.L09  XRSV001 CL2                                                 00085400
&ZOPN                 SETA &ZOPN+1                                      00085500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV001'                          00085600
&ZOPO(&ZOPN)          SETC 'DS'                                         00085700
&ZOPV(&ZOPN)          SETC 'CL2'                                        00085800
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV001'                       00085900
.*-------------------------------------------------------------------   00086000
.***AM.L09  XUCBPTR A                                                   00086100
&ZOPN                 SETA &ZOPN+1                                      00086200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XUCBPTR'                          00086300
&ZOPO(&ZOPN)          SETC 'DS'                                         00086400
&ZOPV(&ZOPN)          SETC 'A'                                          00086500
&ZOPD(&ZOPN)          SETC '++ &ZXUCBPTR  XUCBPTR'                      00086600
.*-------------------------------------------------------------------   00086700
.***AM.L09  XUCBCXPTR A                                                 00086800
&ZOPN                 SETA &ZOPN+1                                      00086900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XUCBCXPTR'                        00087000
&ZOPO(&ZOPN)          SETC 'DS'                                         00087100
&ZOPV(&ZOPN)          SETC 'A'                                          00087200
&ZOPD(&ZOPN)          SETC '++ &ZXUCBCXPTR  XUCBCXPTR'                  00087300
.*-------------------------------------------------------------------   00087400
.***AM.L10 END OF IOSCMXA LIST PARAMETERS                               00087500
&ZOPN                 SETA &ZOPN+1                                      00087600
&ZOPL(&ZOPN)          SETC '&XMFCTRL.L'                                 00087700
&ZOPO(&ZOPN)          SETC 'EQU'                                        00087800
&ZOPV(&ZOPN)          SETC '*-&XMFCTRL'                                 00087900
&ZOPD(&ZOPN)          SETC '++ LENGTH OF PLIST'                         00088000
.*                                                                      00088100
&ZOPN                 SETA &ZOPN+1                                      00088200
&ZOPL(&ZOPN)          SETC ' '                                          00088300
&ZOPO(&ZOPN)          SETC 'SPACE'                                      00088400
&ZOPV(&ZOPN)          SETC '1'                                          00088500
&ZOPD(&ZOPN)          SETC ' '                                          00088600
.*-------------------------------------------------------------------   00088700
.***AL.L12 IOSCMXA FMT=LIST MF=S|L PARAMETERS                           00088800
                      AIF   ('&XMF' EQ 'L').ZMFLX  DONE IF MF=L         00088900
.*                                                                      00089000
&ZOPN                 SETA  &ZOPN+1                                     00089100
&ZOPL(&ZOPN)          SETC  '&XMFCTRL.S'                                00089200
&ZOPO(&ZOPN)          SETC  'DC'                                        00089300
&ZOPV(&ZOPN)          SETC  '0H''0'''                                   00089400
&ZOPD(&ZOPN)          SETC  '++ IOSCMXA ARG PARMS'                      00089500
.*                                                                      00089600
.ZLMFSLX              ANOP  ,                                           00089700
.*-------------------------------------------------------------------   00089800
.***AL.L13 SET ZPLLEN TO ITS APPROPRIATE VALUE                          00089900
&ZPLLEN               SETA 12                                           00090000
.*                                                                      00090100
.******************************************************************     00090200
.***AI.L01 IOSCMXA FMT=LIST FILL IN PARAMETER AREA                      00090300
.******************************************************************     00090400
                      ACTR  10000                                       00090500
&ZCVAL                SETC  'LA'           ASSUME XA MODE               00090600
                      AIF   ('&SYSASCE' EQ 'P').ZIMFXA  SYSSTATE PRI    00090700
&ZCVAL                SETC  'LAE'          XAX MODE                     00090800
.ZIMFXA               ANOP ,                                            00090900
.*                                                                      00091000
                      AIF   ('&XMFCTRL'(1,1) NE '(').ZIMFN2  NOT GPR    00091100
&ZCGPR                SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)  GET GPR         00091200
                      AIF   ('&ZCGPR' EQ 'GPR1').ZIMFNX                 00091300
                      AIF   ('&ZCGPR' EQ 'GPR01').ZIMFNX                00091400
                      AIF   ('&ZCGPR' EQ 'REG1').ZIMFNX                 00091500
                      AIF   ('&ZCGPR' EQ 'REG01').ZIMFNX                00091600
                      AIF   ('&ZCGPR' EQ 'R1').ZIMFNX                   00091700
                      AIF   ('&ZCGPR' EQ '1').ZIMFNX                    00091800
                      AIF   ('&ZCGPR' EQ '01').ZIMFNX                   00091900
&ZOPN                 SETA  &ZOPN+1                                     00092000
&ZOPL(&ZOPN)          SETC  ' '                                         00092100
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00092200
&ZOPV(&ZOPN)          SETC  '1,0(,&ZCGPR)'                              00092300
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00092400
                      AGO   .ZIMFNX                                     00092500
.*                                                                      00092600
.ZIMFN2               ANOP ,                                            00092700
&ZOPN                 SETA  &ZOPN+1                                     00092800
&ZOPL(&ZOPN)          SETC  ' '                                         00092900
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00093000
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL'                                00093100
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00093200
.ZIMFNX               ANOP ,                                            00093300
.********************************************************************   00093400
.***AI.L02 IOSCMXA FMT=LIST INITIALIZE PARAMETER AREA                   00093500
.********************************************************************   00093600
.***AI.L03 MF=(SLE)                                                     00093700
                      AIF   ('&XMF' EQ 'L').ZIMFLX                      00093800
.*                                                                      00093900
&ZOPN                 SETA  &ZOPN+1                                     00094000
&ZOPL(&ZOPN)          SETC  ' '                                         00094100
&ZOPO(&ZOPN)          SETC  'XC'                                        00094200
&ZOPV(&ZOPN)          SETC  '0(&ZPLLEN,1),0(1)'                         00094300
&ZOPD(&ZOPN)          SETC  '++ INITIALIZE'                             00094400
.ZIMFLX               ANOP  ,                                           00094500
.*-------------------------------------------------------------------   00094600
.***AI.L04A XVERSION XL1                                                00094700
&ZOPN                 SETA  &ZOPN+1                                     00094800
&ZOPL(&ZOPN)          SETC  ' '                                         00094900
&ZOPO(&ZOPN)          SETC  'MVI'                                       00095000
&ZOPV(&ZOPN)          SETC  '0(1),1'                                    00095100
&ZOPD(&ZOPN)          SETC  '++ INPUT XVERSION XL1'                     00095200
.*-------------------------------------------------------------------   00095300
.***AI.L05 XFLAGS BL1                                                   00095400
&ZW                   SETC  ''                                          00095500
&ZCLNG                SETC  ''             RESET BIT ON FLAG            00095600
.*-------------------------------------------------------------------   00095700
.***AI.L08 XFLAGS "UCBPTR"                                              00095800
.***      BL1'1XXXXXXX'                                                 00095900
         AIF   ('&UCBPTR' EQ '').ZI3A                                   00096000
&ZW                   SETC  '&ZW.1'                                     00096100
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00096200
                      AGO   .ZI3C                                       00096300
.*                                                                      00096400
.ZI3A                 ANOP  ,                                           00096500
&ZW                   SETC  '&ZW.0'                                     00096600
.ZI3C                 ANOP  ,                                           00096700
.*-------------------------------------------------------------------   00096800
.***AI.L08 XFLAGS "UCBCXPTR"                                            00096900
.***      BL1'X1XXXXXX'                                                 00097000
         AIF   ('&UCBCXPTR' EQ '').ZI4A                                 00097100
&ZW                   SETC  '&ZW.1000000'                               00097200
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00097300
                      AGO   .ZI4C                                       00097400
.*                                                                      00097500
.ZI4A                 ANOP  ,                                           00097600
&ZW                   SETC  '&ZW.0000000'                               00097700
.ZI4C                 ANOP  ,                                           00097800
.*-------------------------------------------------------------------   00097900
.***AI.L11 XFLAGS BL1                                                   00098000
                      AIF   ('&ZCLNG' NE 'YES').ZI4E  ALL ZERO BITS     00098100
&ZOPN                 SETA  &ZOPN+1                                     00098200
&ZOPL(&ZOPN)          SETC  ' '                                         00098300
&ZOPO(&ZOPN)          SETC  'OI'                                        00098400
&ZOPV(&ZOPN)          SETC  '1(1),B''&ZW'''                             00098500
&ZOPD(&ZOPN)          SETC  '++ OUTPUT BL1'                             00098600
.ZI4E                 ANOP  ,                                           00098700
.*-------------------------------------------------------------------   00098800
.***AI.L25  XUCBPTR AL4                                                 00098900
                      AIF   ('&ZXUCBPTR' EQ '').ZI6E  NOT USED          00099000
                      AIF   ('&ZXUCBPTR' EQ 'OUTPUT').ZI6E              00099100
&ZCGPR                SETC  '&XUCBPTR'                                  00099200
.*                                                                      00099300
                      AIF   ('&XUCBPTR'(1,1) NE '(').ZI6B               00099400
&ZCGPR   SETC  '0('.'&XUCBPTR'(2,K'&XUCBPTR-2).')'                      00099500
                      AGO   .ZI6D                                       00099600
.ZI6B                 ANOP  ,                                           00099700
.*                                                                      00099800
&ZC                   SETC  '&XUCBPTR'(1,1)                             00099900
                      AIF   (T'&ZC NE 'N').ZI6D                         00100000
&ZC                   SETC  '&XUCBPTR'                                  00100100
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI6D                00100200
&ZCGPR                SETC  '=AL4(&XUCBPTR)'                            00100300
.*                                                                      00100400
.ZI6D                 ANOP  ,                                           00100500
.*                                                                      00100600
&ZOPN                 SETA  &ZOPN+1                                     00100700
&ZOPL(&ZOPN)          SETC  ' '                                         00100800
&ZOPO(&ZOPN)          SETC  'MVC'                                       00100900
&ZOPV(&ZOPN)          SETC  '4(4,1),&ZCGPR'                             00101000
&ZOPD(&ZOPN)          SETC  '++ &ZXUCBPTR XUCBPTR AL4'                  00101100
.*                                                                      00101200
.ZI6E                 ANOP  ,                                           00101300
.*-------------------------------------------------------------------   00101400
&ZOPN1                SETA &ZOPN                                        00101500
.*******************************************************************    00101600
.***  PROCESS IOSCMXA OUTPUT PARAMETERS                                 00101700
.*******************************************************************    00101800
                      ACTR  10000                                       00101900
.*------------------------------------------------------------------    00102000
.***AO.L02 XUCBCXPTR A                                                  00102100
         AIF   ('&ZXUCBCXPTR' EQ 'OUTPUT').ZO7A  OUTPUT                 00102200
         AIF   ('&ZXUCBCXPTR' NE 'INOUT').ZO7C  INOUT                   00102300
.ZO7A    AIF   ('&XUCBCXPTR'(1,1) NE '(').ZO7B  ADDR IN GPR             00102400
&ZCGPR   SETC  '&XUCBCXPTR'(2,K'&XUCBCXPTR-2)                           00102500
&ZOPN                 SETA  &ZOPN+1                                     00102600
&ZOPL(&ZOPN)          SETC  ' '                                         00102700
&ZOPO(&ZOPN)          SETC  'MVC'                                       00102800
&ZOPV(&ZOPN)          SETC  '0(4,&ZCGPR),8(1)'                          00102900
&ZOPD(&ZOPN)          SETC  '++ XUCBCXPTR A'                            00103000
                      AGO   .ZO7C                                       00103100
.*                                                                      00103200
.ZO7B                 ANOP  ,                                           00103300
&ZAWRK   SETA  K'&XUCBCXPTR                                             00103400
         AIF   ('&XUCBCXPTR'(&ZAWRK,1) NE ')').ZO7G                     00103500
&ZN      SETA  2                                                        00103600
.ZO7H    ANOP                                                           00103700
         AIF   (&ZN GE &ZAWRK).ZO7G                                     00103800
         AIF   ('&XUCBCXPTR'(&ZN,1) NE '(').ZO7I                        00103900
&ZC      SETC  '&XUCBCXPTR'(1,&ZN).'4'.','                              00104000
&ZC      SETC  '&ZC'.'&XUCBCXPTR'(&ZN+1,&ZAWRK-&ZN).',8(1)'             00104100
         AGO   .ZO7J                                                    00104200
.ZO7I    ANOP                                                           00104300
&ZN      SETA  &ZN+1                                                    00104400
         AGO   .ZO7H                                                    00104500
.ZO7G    ANOP                                                           00104600
&ZC      SETC  '&XUCBCXPTR.(4),8(1)'                                    00104700
.ZO7J    ANOP                                                           00104800
&ZOPN                 SETA  &ZOPN+1                                     00104900
&ZOPL(&ZOPN)          SETC  ' '                                         00105000
&ZOPO(&ZOPN)          SETC  'MVC'                                       00105100
&ZOPV(&ZOPN)          SETC  '&ZC'                                       00105200
&ZOPD(&ZOPN)          SETC  '++ XUCBCXPTR A'                            00105300
.ZO7C                 ANOP  ,                                           00105400
.*******************************************************************    00105500
.***AO.X02  RETURN CODE PROCESSING                                      00105600
.*******************************************************************    00105700
                      AIF   (N'&RETCODE LE 0).ZMRETX                    00105800
                      AIF   ('&XRETCODE'(1,1) EQ '(').ZMRET2            00105900
                      AIF   ('&XRETCODE' EQ 'GPR15').ZMRETX             00106000
                      AIF   ('&XRETCODE' EQ 'REG15').ZMRETX             00106100
                      AIF   ('&XRETCODE' EQ 'R15').ZMRETX               00106200
                      AIF   ('&XRETCODE' EQ '15').ZMRETX                00106300
&ZOPN                 SETA  &ZOPN+1                                     00106400
&ZOPL(&ZOPN)          SETC  ' '                                         00106500
&ZOPO(&ZOPN)          SETC  'ST'                                        00106600
&ZOPV(&ZOPN)          SETC  '15,&XRETCODE'                              00106700
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00106800
                      AGO   .ZMRETX                                     00106900
.*                                                                      00107000
.ZMRET2               ANOP  ,                                           00107100
&ZCGPR                SETC  '&XRETCODE'(2,K'&XRETCODE-2)                00107200
                      AIF   ('&ZCGPR' EQ 'GPR15').ZMRETX                00107300
                      AIF   ('&ZCGPR' EQ 'REG15').ZMRETX                00107400
                      AIF   ('&ZCGPR' EQ 'R15').ZMRETX                  00107500
                      AIF   ('&ZCGPR' EQ '15').ZMRETX                   00107600
&ZOPN                 SETA  &ZOPN+1                                     00107700
&ZOPL(&ZOPN)          SETC  ' '                                         00107800
&ZOPO(&ZOPN)          SETC  'LR'                                        00107900
&ZOPV(&ZOPN)          SETC  '&ZCGPR,15'                                 00108000
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00108100
.ZMRETX               ANOP  ,                                           00108200
.*******************************************************************    00108300
.***AO.X03  REASON CODE PROCESSING                                      00108400
.*******************************************************************    00108500
                      AIF   (N'&RSNCODE LE 0).ZMRSNX                    00108600
                      AIF   ('&XRSNCODE'(1,1) EQ '(').ZMRSN2            00108700
                      AIF   ('&XRSNCODE' EQ 'GPR0').ZMRSNX              00108800
                      AIF   ('&XRSNCODE' EQ 'GPR00').ZMRSNX             00108900
                      AIF   ('&XRSNCODE' EQ 'REG0').ZMRSNX              00109000
                      AIF   ('&XRSNCODE' EQ 'REG00').ZMRSNX             00109100
                      AIF   ('&XRSNCODE' EQ 'R0').ZMRSNX                00109200
                      AIF   ('&XRSNCODE' EQ '0').ZMRSNX                 00109300
                      AIF   ('&XRSNCODE' EQ '00').ZMRSNX                00109400
&ZOPN                 SETA  &ZOPN+1                                     00109500
&ZOPL(&ZOPN)          SETC  ' '                                         00109600
&ZOPO(&ZOPN)          SETC  'ST'                                        00109700
&ZOPV(&ZOPN)          SETC  '0,&XRSNCODE'                               00109800
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00109900
                      AGO   .ZMRSNX                                     00110000
.*                                                                      00110100
.ZMRSN2               ANOP  ,                                           00110200
&ZCGPR                SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                00110300
                      AIF   ('&ZCGPR' EQ 'GPR0').ZMRSNX                 00110400
                      AIF   ('&ZCGPR' EQ 'GPR00').ZMRSNX                00110500
                      AIF   ('&ZCGPR' EQ 'REG0').ZMRSNX                 00110600
                      AIF   ('&ZCGPR' EQ 'REG00').ZMRSNX                00110700
                      AIF   ('&ZCGPR' EQ 'R0').ZMRSNX                   00110800
                      AIF   ('&ZCGPR' EQ '0').ZMRSNX                    00110900
                      AIF   ('&ZCGPR' EQ '00').ZMRSNX                   00111000
&ZOPN                 SETA  &ZOPN+1                                     00111100
&ZOPL(&ZOPN)          SETC  ' '                                         00111200
&ZOPO(&ZOPN)          SETC  'LR'                                        00111300
&ZOPV(&ZOPN)          SETC  '&ZCGPR,0'                                  00111400
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00111500
.ZMRSNX               ANOP  ,                                           00111600
.*******************************************************************    00111700
.***AO.X04  LABEL FOR MF=L PROCESSING                                   00111800
.*******************************************************************    00111900
.ZMFLX                ANOP  ,              MF=L PROCESSING              00112000
.*******************************************************************    00112100
.***AO.X05  FORMAT GENERATED INSTRUCTIONS                               00112200
.*******************************************************************    00112300
                      ACTR  10000                                       00112400
.*                                                                      00112500
                      LCLA  &ZLC           COLUMN POSITION              00112600
                      LCLA  &ZOPX          LIST TABLE INDEX             00112700
                      LCLC  &ZLL           LABEL                        00112800
                      LCLC  &ZLOP          OPERATION                    00112900
                      LCLC  &ZLV           VALUE                        00113000
                      LCLC  &ZLD           DESCRIPTION                  00113100
.*                                                                      00113200
&ZOPX                 SETA  1                                           00113300
.ZL2                  AIF   (&ZOPX GT &ZOPN1).ZLX  B IF DONE            00113400
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00113500
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00113600
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00113700
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00113800
                      AIF   (K'&ZLD LE 0).ZL5                           00113900
&ZLC                  SETA  35             COMMENT COLUMN               00114000
                      AIF   ('&ZLD'(1,1) NE '*').ZL3                    00114100
&ZLC                  SETA  33             COMMMENT COLUMN              00114200
.ZL3                  AIF   (K'&ZLV GE &ZLC-16-1).ZL4                   00114300
&ZLV                  SETC  '&ZLV'.' '                                  00114400
                      AGO   .ZL3                                        00114500
.*                                                                      00114600
.ZL4                  ANOP  ,                                           00114700
&ZLV                  SETC  '&ZLV'.' '                                  00114800
.ZL5                  ANOP  ,                                           00114900
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00115000
.*                                                                      00115100
&ZLL     &ZLOP &ZLV                                                     00115200
.*                                                                      00115300
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00115400
                      AGO   .ZL2           CONTINUE LOOPING             00115500
.*                                                                      00115600
.ZLX                  ANOP  ,                                           00115700
                      AIF   ('&XMF' EQ 'L').ZLINKX  MF=L                00115800
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00115900
.*-----------BAL invocation code-------------                           00116000
         LA    14,IOSCMXA_RETADDR_&SYSNDX     SAVE RETURN ADDRESS       00116100
         BSM   14,0                SAVE CALLER AMODE BIT INTO HIGH      00116200
*                                  ORDER BIT OF R14                     00116300
         LA    15,IOSCMXA_NXTADDR_&SYSNDX     GET THE NEXT ADDRESS      00116400
*                                                                 @01C  00116500
         O     15,IOSCMXA_X31_&SYSNDX         SET 31 BIT ADDRESSING     00116600
*                                                                 @01A  00116700
         BSM   0,15                SWITCH TO 31 BITE ADDRESSING MODE    00116800
IOSCMXA_X31_&SYSNDX  DC A(X'80000000')  FOR 31 BIT ADDRESSING     @01C  00116900
IOSCMXA_NXTADDR_&SYSNDX  DS    0H      FOR SWITCHING ADDR MODE.   @01C  00117000
.*********************************************************************  00117100
.*                                                                   *  00117200
.*  Get addressability to CVT                                        *  00117300
.*                                                                   *  00117400
.*********************************************************************  00117500
         L     15,16(0,0)                                               00117600
.*********************************************************************  00117700
.*                                                                   *  00117800
.*  Get addressability to IOCOM                                      *  00117900
.*                                                                   *  00118000
.*********************************************************************  00118100
         L     15,124(15,0)                                             00118200
.*********************************************************************  00118300
.*                                                                   *  00118400
.*  Get addressability to IOVT                                       *  00118500
.*                                                                   *  00118600
.*********************************************************************  00118700
         L     15,208(15,0)                                             00118800
.*********************************************************************  00118900
.*                                                                   *  00119000
.*  Get address to IOSVUXLC                                          *  00119100
.*                                                                   *  00119200
.*********************************************************************  00119300
         L     15,124(15,0)                                             00119400
         BR    15                 ++ BRANCH TO UCB SERVICES             00119500
IOSCMXA_RETADDR_&SYSNDX  DS    0H  FOR SWIT. ADDR MODE                  00119600
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00119700
.ZLINKX               ANOP  ,                                           00119800
.*******************************************************************    00119900
.***AP.X01  FORMAT GENERATED CODE                                       00120000
.ZL21                 AIF   (&ZOPX GT &ZOPN).ZLX1  B IF DONE            00120100
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00120200
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00120300
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00120400
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00120500
                      AIF   (K'&ZLD LE 0).ZL51                          00120600
&ZLC                  SETA  35             COMMENT COLUMN               00120700
                      AIF   ('&ZLD'(1,1) NE '*').ZL31                   00120800
&ZLC                  SETA  33             COMMENT COLUMN               00120900
.ZL31                 AIF   (K'&ZLV GE &ZLC-16-1).ZL41                  00121000
&ZLV                  SETC  '&ZLV'.' '                                  00121100
                      AGO   .ZL31                                       00121200
.*                                                                      00121300
.ZL41                 ANOP  ,                                           00121400
&ZLV                  SETC  '&ZLV'.' '                                  00121500
.ZL51                 ANOP  ,                                           00121600
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00121700
.*                                                                      00121800
&ZLL     &ZLOP &ZLV                                                     00121900
.*                                                                      00122000
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00122100
                      AGO   .ZL21          CONTINUE LOOPING             00122200
.*                                                                      00122300
.ZLX1                 ANOP  ,                                           00122400
.*******************************************************************    00122500
.***AP.X02  END OF IOSCMXA MACRO                                        00122600
&ZIOSCMXA             SETC  'YES'          SET IOSCMXA USED             00122700
         POP   PRINT                                                    00122800
*                                            IOSCMXA-1                  00122900
         SPACE 1                                                        00123000
.ZLX2                 ANOP  ,                                           00123100
         MEND                                                           00123200
**********************************************************************/ 00123300
*/*PB.OC01 INVOKE MACRO---------------------------------------------*/  00123400
*%IOSCMXA: MACRO KEYS(UCBPTR,UCBCXPTR,RETCODE,RSNCODE,MF);              00123500
*  ANS('?'||MACLABEL||' '||'IOSCMXAP '||MACLIST||                       00123600
*         ' '||MACKEYS||';') COL(MACLMAR);                              00123700
*%END IOSCMXA;                                                          00123800
