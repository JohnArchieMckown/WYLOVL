*/***START OF SPECIFICATIONS******************************************/ 00050000
*/* $MAC(QRYLANG) COMP(SCMMS) PROD(HBB4410): MMS Query language      */ 00100000
*/*                                           macro                  */ 00150000
*/*                                                                  */ 00200000
*/*01* MACRO NAME       =   QRYLANG                                  */ 00250000
*/*                                                                  */ 00300000
*/*01* DESCRIPTIVE NAME = MMS - (MVS Message Service) Query Language */ 00350000
*/*                       Macro                                      */ 00400000
*/*                                                                  */ 00450000
*/*    PROPRIETARY STATEMENT =                                       */ 00500000
*/*                                                                  */ 00550000
*/*    LICENSED MATERIALS - PROPERTY OF IBM                          */ 00700000
*/*    THIS MACRO IS "RESTRICTED MATERIALS OF IBM"                   */ 00712500
*/*    5695-047 (C) COPYRIGHT IBM CORP. 1990                         */ 00725000
*/*    SEE COPYRIGHT INSTRUCTIONS.                                   */ 00737500
*/*                                                                  */ 00750000
*/*    STATUS           =  HBB4410                                   */ 00800000
*/*                                                                  */ 00812500
*/*01*EXTERNAL CLASSIFICATION: GUPI                                  */ 00825000
*/*01*END OF EXTERNAL CLASSIFICATION:                                */ 00837500
*/*                                                                  */ 00850000
*/*01* FUNCTION      =  This macro generates executable in-line      */ 00900000
*/*                     assembler code to build a Language Query     */ 00950000
*/*                     Block and invoke the Message Query Language  */ 01000000
*/*                     function.                                    */ 01050000
*/*                                                                  */ 01100000
*/*01* OPERATION     =  This macro receives the address of the LQB   */ 01150000
*/*                     plus parameters defining the language(s) to  */ 01200000
*/*                     be queried.                                  */ 01250000
*/*                                                                  */ 01300000
*/*                     QRYLANG generates code to support        @D1C*/ 01333300
*/*                     bimodal addressing and check the MMS     @D1A*/ 01366600
*/*                     availability and call the message query      */ 01400000
*/*                     language function.                           */ 01450000
*/*                                                                  */ 01500000
*/*01* INVOCATION    =                                               */ 01850000
*/*                                                                  */ 01900000
*/*      MACRO SYNTAX                                                */ 01950000
*/*                                                                  */ 02000000
*/*      < > Optional Parameter                                      */ 02050000
*/*       |  Alternative Item                                        */ 02100000
*/*                                                                  */ 02150000
*/*      QRYLANG   LQB=lqb                                           */ 02200000
*/*                <,LQBLEN=lqb length>                              */ 02250000
*/*                <,LANGNAME=language name>                         */ 02300000
*/*                                                                  */ 02350000
*/*      LQB     : RX-type address or register (2) - (12).           */ 02400000
*/*                Specifies an area, or register pointing to an     */ 02450000
*/*                area, where this macro is to build the Language   */ 02500000
*/*                Query Block.                                      */ 02550000
*/*      LQBLEN  : RX-type address or register (2) - (12).           */ 02600000
*/*                Specifies a fullword, or register, containing the */ 02650000
*/*                length of the LQB area. If not specified, it will */ 02700000
*/*                default to the assembled length of the LQB        */ 02750000
*/*                parameter. Must be specified if register notation */ 02800000
*/*                is used for the LQB parameter.                    */ 02850000
*/*      LANGNAME: RX-type address or register (2) - (12).           */ 02900000
*/*                Specifies a 24-byte area, or register pointing to */ 02950000
*/*                such an area, containing the code or name of the  */ 03000000
*/*                language to be queried. If omitted, a list of all */ 03050000
*/*                currently active languages will be returned.      */ 03100000
*/*                                                                  */ 03150000
*/*                                                                  */ 03200000
*/*01* USAGE         =  MVS Message Service caller                   */ 03250000
*/*                                                                  */ 03300000
*/*01* AUTHORIZATION      = ANY                                      */ 03325000
*/*                                                                  */ 03350000
*/*01* DISPATCHABLE UNIT MODE = TASK, SRB                            */ 03356600
*/*                                                                  */ 03363200
*/*01* CROSS-MEMORY MODE  = PASN not equal HASN is supported         */ 03370000
*/*                                                                  */ 03390000
*/*01* AMODE              = ANY                                      */ 03410000
*/*                                                                  */ 03430000
*/*01* ASC MODE           = PRIMARY                                  */ 03436600
*/*                                                                  */ 03443200
*/*01* SERIALIZATION      = None                                     */ 03450000
*/*                                                                  */ 03470000
*/*01* CONTROL PARAMETERS = None                                     */ 03490000
*/*                                                                  */ 03510000
*/*01* DEPENDENCIES  =                                               */ 03530000
*/*                     The caller must provide a standard       @D1C*/ 03553300
*/*                     register save area pointing by R13.      @D1A*/ 03576600
*/*                     The invoking module must include the     @P2C*/ 03600000
*/*                     CNLMMCA and CNLMLQB mapping macros.      @P2C*/ 03650000
*/*                                                                  */ 03700000
*/*01* RETURN CODES  =  Normal                                       */ 03750000
*/*                       -     R15 =  0 and R0 = 0                  */ 03800000
*/*                     Severe                                       */ 03850000
*/*                       - LQB is too small                         */ 03900000
*/*                             R15 = 12 and R0 = 22                 */ 03950000
*/*                       - MMS is not available                     */ 04000000
*/*                             R15 = 12 and R0 = 23                 */ 04050000
*/*                                                                  */ 04100000
*/*01* MODULE TYPE   =  ASSEMBLER MACRO                              */ 04150000
*/*                                                                  */ 04200000
*/*01* COMPONENT     =  SCMMS                                        */ 04250000
*/*                                                                  */ 04300000
*/*01* DISTRIBUTION LIBRARY = AMACLIB                                */ 04350000
*/*                                                                  */ 04400000
*/*01* CHANGE ACTIVITY  =                                            */ 04450000
*/*                                                                  */ 04500000
*/* Code Reason   FMID    Date  Origin  Comments                     */ 04550000
*/* ---- ------  ------- ------ ------  ---------------------------- */ 04600000
*/* $L0= MMS     HBB4410 890401 STOW:   Original Code                */ 04650000
*/* $L1= MMS     HBB4410 890627 PDDH:   Retrofit to SP4.1.0          */ 04675000
*/* $D1= DCR263  HBB4410 890911 STOW:   Bimodal addressing       @D1A*/ 04683300
*/*                                     support                  @D1A*/ 04691600
*/* $P1= PEO3715 HBB4410 900226 PDDH:   Correct program call         */ 04695800
*/* $01= OY51360 HBB4410 920124 PDBT:   Fix incorrect instruction    */ 04697900
*/* $P2= PKB3106 HBB4430 920617 PDBT:   Remove requirement to        */ 04698600
*/*                                     map the CVT and SCVT         */ 04699300
*/* $02= OW06471 HBB4430 940801 PDCF:   Save addressing mode in      */ 04699500
*/*                                     register slot in save area   */ 04699700
*/*                                                                  */ 04700000
*/*                                                                  */ 04750000
*/*01* MESSAGES      =                                               */ 04800000
*/*                                                                  */ 04850000
*/*     The QRYLANG macro will issue the following MNOTEs            */ 04900000
*/*     upon detection of syntax errors:                             */ 04950000
*/*                                                                  */ 05000000
*/*      ERROR = (severity 4)                                        */ 05050000
*/*        POSITIONAL PARAMETER "xxxxxxxx" IS INVALID                */ 05100000
*/*                                                                  */ 05150000
*/*      ERROR = (severity 12)                                       */ 05200000
*/*        LQB OPERAND IS INVALID OR MISSING, NO TEXT IS             */ 05250000
*/*          GENERATED.                                              */ 05300000
*/*        LQBLEN OPERAND IS INVALID OR MISSING, NO TEXT IS          */ 05350000
*/*          GENERATED.                                              */ 05400000
*/*        LANGNAME OPERAND IS INVALID, NO TEXT IS GENERATED.        */ 05450000
*/*                                                                  */ 05500000
*/*                                                                  */ 05550000
*/***END OF SPECIFICATIONS********************************************/ 05600000
* %/*                                                                   05650000
         MACRO                                                          05700000
&LABEL   QRYLANG &LANGNAME=,                                           -05750000
               &LQB=,                                                  -05800000
               &LQBLEN=                                                 05850000
.********************************************************************** 05900000
.*                                                                    * 05950000
.*      DECLARE LOCAL VARIABLES                                       * 06000000
.*                                                                    * 06050000
.********************************************************************** 06100000
        LCLB  &ERROR        ERROR FLAG                                  06150000
        LCLC  &LQBACRONYM   LQB ACRONYM                            @L1C 06200000
        LCLC  &MCAACRONYM   MCA ACRONYM                            @L1C 06250000
        LCLC  &GNAME        LABEL                                       06300000
        LCLC  &NOTEXT       MNOTE PHRASE 'NO TEXT IS GENERATED.'        06350000
        LCLC  &EMSG1        MNOTE PHRASE                                06400000
        LCLC  &EMSG2        MNOTE PHRASE                                06450000
.********************************************************************** 06500000
.*                                                                    * 06550000
.*      INITIALIZE MACRO VARIABLES                                    * 06600000
.*                                                                    * 06650000
.********************************************************************** 06700000
&NOTEXT       SETC  'NO TEXT IS GENERATED.'                             06750000
&EMSG1        SETC  'OPERAND IS INVALID OR MISSING,'                    06800000
&EMSG2        SETC  'OPERAND IS INVALID,'                               06850000
&MCAACRONYM   SETC  'MCA '                                         @L1C 06900000
&LQBACRONYM   SETC  'LQB '                                         @L1C 06950000
&GNAME        SETC  'CNL'.'&SYSNDX'     SET LABEL NAME                  07000000
.*                                                                      07050000
.********************************************************************** 07100000
.*             CHECK VALIDITY OF MACRO OPERANDS                       * 07150000
.********************************************************************** 07200000
.*                                                                      07250000
         AIF   (N'&SYSLIST EQ 0).CKLQB  TOO MANY POSITIONAL PARMS       07300000
         MNOTE 4,'POSITIONAL PARAMETER "&SYSLIST(1)" IS INVALID'        07350000
.CKLQB   AIF   (N'&LQB EQ 1).CKLQBL     IS LQB SPECIFIED ?              07400000
         MNOTE 12,'LQB &EMSG1 &NOTEXT'                                  07450000
&ERROR   SETB  1                                                        07500000
.CKLQBL  AIF   (N'&LQBLEN EQ 1).CKLQBN  IS LQBLEN SPECIFIED ?           07550000
         AIF   (N'&LQBLEN EQ 0 AND '&LQB'(1,1) NE '(').CKLQBN           07600000
.*              << LQBLEN MAY BE OMITTED IF LQB NOT = REGISTER >>       07650000
         MNOTE 12,'LQBLEN &EMSG1 &NOTEXT'                               07700000
&ERROR   SETB  1                                                        07750000
.CKLQBN  AIF   (N'&LANGNAME LT 2).CHECKER IS LANGNAME SPECIFIED ?       07800000
         MNOTE 12,'LANGNAME &EMSG2 &NOTEXT'                             07850000
&ERROR   SETB  1                                                        07900000
.CHECKER ANOP                                                           07950000
         AIF   (&ERROR EQ 0).GENCODE      IF NO ERROR THEN GENERATE     08000000
         MEXIT                               CODE TO BUILD LQB          08050000
.********************************************************************** 08100000
.* GENERATE ASSEMBLER CODE IF NO SYNTAX ERROR                         * 08150000
.********************************************************************** 08200000
.GENCODE ANOP                                                           08250000
         SPACE 1                                                        08300000
*--------------------- QRYLANG START ---------------------------------  08350000
&LABEL   DS    0H                                                       08400000
.******************************************************************@D1A 08405500
.* SAVE CALLER'S ADDRESSING MODE AND SET TO 31 BIT ADDRESSING      @D1A 08411000
.******************************************************************@D1A 08416500
         LA    15,&GNAME.S               LOAD EXECUTION ADDRESS    @D1A 08422000
         O     15,=X'80000000'           SET TO 31 BIT ADDRESSING  @D1A 08427500
         BASSM 14,15                     ACTIVATE 31 BIT ADDRESSING@D1A 08433000
         B     &GNAME.M                  EXIT TO CALLER            @D1A 08438500
&GNAME.S ST    14,12(,13)                SAVE RETURN ADDRESS       @02C 08444200
.********************************************************************** 08450000
.* LOCATE MCA AND VERIFY MMS IS AVAILABLE                             * 08500000
.********************************************************************** 08550000
         L     14,16(0,0)                LOAD CVT ADDRESS               08600000
         L     14,200(,14)               LOAD SCVT ADDRESS         @P2C 08650000
         L     14,56(,14)                LOAD MCA ADDRESS          @P2C 08700000
         LTR   14,14                                                    08750000
         BZ    &GNAME.A                  DOES MCA EXIST ?               08800000
         TM    MCAFLAGS-MCA(14),MCAAVAIL BRANCH IF MMS                  08850000
         BNO   &GNAME.A                     IS NOT AVAILABLE            08900000
         CLC   MCAACRN-MCA(L'MCAACRN,14),=C'&MCAACRONYM'           @L1C 08950000
         BNE   &GNAME.A                  BRANCH IF ACRONYM IS INVALID   09000000
.********************************************************************** 09050000
.* VERIFY THE LQB IS LARGE ENOUGH FOR THE QLANG SERVICE              *  09100000
.********************************************************************** 09150000
         AIF   (N'&LQBLEN GT 0).LQBL2                                   09200000
         LA    15,L'&LQB                 LOAD DEFAULT LQB LENGTH        09250000
         AGO   .GETLEN                                                  09300000
.LQBL2   AIF   ('&LQBLEN'(1,1) EQ '(').LQBLR                            09350000
         L     15,&LQBLEN                LOAD LQBLEN                    09400000
         AGO   .GETLEN                                                  09450000
.LQBLR   ANOP                                                           09500000
         LR    15,&LQBLEN(1)             LOAD LQBLEN                    09550000
.GETLEN  ANOP                                                           09600000
         LA    0,LQBVDAT-LQB+LQBEBL                                     09650000
         CR    15,0                                                     09700000
         BL    &GNAME.B                  BRANCH IF LQB IS TOO SMALL     09750000
.********************************************************************** 09800000
.* LOAD LQB ADDRESS                                                   * 09850000
.********************************************************************** 09900000
.GLQB    AIF   ('&LQB'(1,1) EQ '(').GLQBR                               09950000
         LA    1,&LQB                    R1 -> LQB                      10000000
         AGO   .GINIT                                                   10050000
.GLQBR   LR    1,&LQB(1)                 R1 -> LQB                      10100000
.********************************************************************** 10150000
.* INITIALIZE LQB FIXED PORTION                                       * 10200000
.********************************************************************** 10250000
.GINIT   XC    0(LQBVDAT-LQB,1),0(1)     CLEAR LQB FIXED PORTION        10300000
         MVC   LQBACRN-LQB(L'LQBACRN,1),=C'&LQBACRONYM'            @L1C 10350000
         MVI   LQBVRSN-LQB(1),$LQB_VERSION                              10400000
         ST    15,LQBSIZE-LQB(,1)        SAVE LQBSIZE                   10450000
         LA    0,LQBVDAT-LQB                                            10500000
         ST    0,LQBOFFST-LQB(,1)        SAVE LQBOFFST                  10550000
.********************************************************************** 10600000
.* INITIALIZE LQBINLNG TO BLANK IF LANGNAME IS NOT SPECIFIED          * 10650000
.********************************************************************** 10700000
         AIF   ('&LANGNAME' NE '').GLNAME                               10750000
         MVI   LQBINLNG-LQB(1),C' '      SET LQBINLNG TO BLANK          10800000
         MVC   LQBINLNG-LQB+1(L'LQBINLNG-1,1),LQBINLNG-LQB(1)           10850000
         AGO   .GENPC                                                   10900000
.********************************************************************** 10950000
.* LQBINLNG = LANGNAME                                                * 11000000
.********************************************************************** 11050000
.GLNAME  AIF   ('&LANGNAME'(1,1) EQ '(').GLNAMER                        11100000
         MVC   LQBINLNG-LQB(L'LQBINLNG,1),&LANGNAME                     11150000
         AGO   .GENPC                                                   11200000
.GLNAMER MVC   LQBINLNG-LQB(L'LQBINLNG,1),0&LANGNAME                    11250000
.GENPC   B     &GNAME.D                                                 11300000
.********************************************************************** 11350000
.* SET ERROR CODE ROUTINE                                             * 11400000
.********************************************************************** 11450000
&GNAME.A LA    0,23                      MMS IS NOT AVAILABLE           11500000
         B     &GNAME.E                  EXIT QRYLANG                   11550000
&GNAME.B LA    0,22                      LQB IS TOO SMALL               11600000
&GNAME.E LA    15,12                     SET SEVERE RETURN CODE         11650000
         B     &GNAME.X                  - AND EXIT                     11700000
.********************************************************************** 11750000
.* INVOKE QRYLANG PC ROUTINE                                          * 11800000
.********************************************************************** 11850000
&GNAME.D DS    0H                                                       11900000
         L     14,16(0,0)                OBTAIN CVT ADDRESS             12000000
         L     14,200(,14)               ADDRESS OF SCVT          @P2C  12050000
         L     14,56(,14)                ADDRESS OF MCA           @P2C  12100000
         L     14,MCAQPCNO-MCA(,14)      OBTAIN PC NUMBER         @01C  12150000
         PC    0(14)                     PC TO QRYLANG ROUTINE    @P1C  12200000
&GNAME.X DS    0H                                                       12300000
         L     14,12(,13)                LOAD EXIT ADDRESS        @02C  12310000
         BSM   0,14                      RESTORE CALLER'S         @D1A  12320000
*                                          ADDRESSING MODE        @D1A  12330000
&GNAME.M DS    0H                                                 @D1A  12340000
*--------------------- QRYLANG END -----------------------------------  12350000
         SPACE 1                                                        12400000
         MEND                                                           12450000
* */ QRYLANG: MACRO                                                     12500000
* KEYS(LQB,LQBLEN,LANGNAME);                                            12550000
*          ANS('?'||MACLABEL||'QRYLANGP '||MACLIST||MACKEYS||';');      12600000
*%     END QRYLANG;                                                     12650000
