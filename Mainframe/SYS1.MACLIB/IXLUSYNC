*/**** START OF SPECIFICATIONS **************************************** 00000100
*                                                                     * 00000200
*                                                                     * 00000300
*01* MACRO NAME:  IXLUSYNC                              -06/20/97-<2> * 00000400
*                                                                     * 00000500
*                                                                     * 00000600
*01* DESCRIPTIVE NAME:  XES User Sync Point Service                   * 00000700
*                                                                     * 00000800
*01* PROPRIETARY STATEMENT:                                           * 00000900
*                                                                     * 00001000
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 00001100
*     THIS MACRO IS "RESTRICTED MATERIALS OF IBM"                     * 00001200
*     5645-001 (C) COPYRIGHT IBM CORP. 1993, 1996                     * 00001300
*                                                                     * 00001400
* STATUS= JBB6602                                                     * 00001500
*                                                                     * 00001600
*                                                                     * 00001700
*                                                                     * 00001800
*01* FUNCTION:                                                        * 00001900
*                                                                     * 00002000
*                                                                     * 00002100
*      The IXLUSYNC service routine is given control from the         * 00002200
*      IXLUSYNC macro. In order to use this service, the requestor    * 00002300
*      must be a connector to a structure and provide its contoken as * 00002400
*      input. The following functions are supported:                  * 00002500
*                                                                     * 00002600
*                                                                     * 00002700
*      o   set a user event,                                          * 00002800
*                                                                     * 00002900
*      o   confirm a user event, or                                   * 00003000
*                                                                     * 00003100
*      o   confirm a user event and set the next user event if no     * 00003200
*          more confirmations are expected.                           * 00003300
*                                                                     * 00003400
*                                                                     * 00003500
*                                                                     * 00003600
*      Setting a user event and the confirmation of a user event by   * 00003700
*      all connections (i.e., a sync point) will be communicated to   * 00003800
*      connectors through the event exit.  The User Sync Point event  * 00003900
*      will be presented to the event exits of each connector in two  * 00004000
*      cases:  when a new user sync point event is set, and when all  * 00004100
*      confirmations are received for a user sync point event, i.e.,  * 00004200
*      a sync point has been reached.                                 * 00004300
*                                                                     * 00004400
*01* EXTERNAL CLASSIFICATION:  GUPI                                   * 00004500
*                                                                     * 00004600
*01* END OF EXTERNAL CLASSIFICATION:                                  * 00004700
*                                                                     * 00004800
*01* ENVIRONMENT:                                                     * 00004900
*                                                                     * 00005000
*                                                                     * 00005100
*      Dispatchable unit mode: Task mode.                             * 00005200
*                                                                     * 00005300
*      Minimum authorization: Supervisor State or PKM allowing keys   * 00005400
*                        0-7.                                         * 00005500
*                                                                     * 00005600
*      AMODE:            31-bit.                                      * 00005700
*                                                                     * 00005800
*      ASC mode:         Primary or Access Register.                  * 00005900
*                                                                     * 00006000
*                                                                     * 00006100
*                        o   If in Access Register ASC mode, specify  * 00006200
*                            SYSSTATE ASCENV=AR before invoking this  * 00006300
*                            macro.                                   * 00006400
*                                                                     * 00006500
*                        o   Primary equal to the requestor's primary * 00006600
*                            at the time of connect.                  * 00006700
*                                                                     * 00006800
*                        o   Primary address space must be equal to   * 00006900
*                            the home address space; any secondary    * 00007000
*                            address space; any home address space.   * 00007100
*                                                                     * 00007200
*                                                                     * 00007300
*                                                                     * 00007400
*      Serialization:    Enabled.  Unlocked. No EUT FRR established.  * 00007500
*                                                                     * 00007600
*      Restrictions:                                                  * 00007700
*                                                                     * 00007800
*                        IXLUSYNC is not permitted when an EUT FRR is * 00007900
*                        established.                                 * 00008000
*                                                                     * 00008100
*                                                                     * 00008200
*                                                                     * 00008300
*01* INPUT REGISTERS:  GR0-GR1     Reserved                           * 00008400
*                      GR2-GR13    Undefined                          * 00008500
*                      GR14-GR15   Reserved                           * 00008600
*                      AR0-AR1     Reserved                           * 00008700
*                      AR2-AR13    Undefined                          * 00008800
*                      AR14-AR15   Reserved                           * 00008900
*                                                                     * 00009000
*01* OUTPUT REGISTERS: GR0         Reason code if GR15 return code is * 00009100
*                                  non-zero                           * 00009200
*                      GR1         Unpredictable                      * 00009300
*                      GR2-GR13    Unchanged                          * 00009400
*                      GR14        Unpredictable                      * 00009500
*                      GR15        Return code                        * 00009600
*                      AR0-AR1     Unpredictable                      * 00009700
*                      AR2-AR13    Unchanged                          * 00009800
*                      AR14-AR15   Unpredictable                      * 00009900
*                                                                     * 00010000
*01* SYNTAX:                                                          * 00010100
*                                                                     * 00010200
*[xlabel]  IXLUSYNC     CONTOKEN=xcontoken                            * 00010300
*                      ,USEREVENT=xuserevent                          * 00010400
*                     ,REQUEST=SET                                   * 00010500
*                    |    [,USERSTATE=xuserstate|ALL_ZEROES]        * 00010600
*                     ,REQUEST=CONFIRM                               * 00010700
*                    |    [,COMPCODE=xcompcode|0]                   * 00010800
*                    |   [,PROXYRESPONSE=NO]                         * 00010900
*                    |   [,PROXYRESPONSE=YES                         * 00011000
*                    |         ,SUBJCONTOKEN                          * 00011100
*                    |                       =xsubjcontoken]          * 00011200
*                     ,REQUEST=CONFIRMSET                            * 00011300
*                         [,COMPCODE=xcompcode|0]                   * 00011400
*                          ,NEXTUSEREVENT=xnextuserevent              * 00011500
*                         [,USERSTATE=xuserstate|ALL_ZEROES]        * 00011600
*                        [,PROXYRESPONSE=NO]                         * 00011700
*                        [,PROXYRESPONSE=YES                         * 00011800
*                              ,SUBJCONTOKEN                          * 00011900
*                                            =xsubjcontoken]          * 00012000
*                     [,RETCODE=xretcode]                             * 00012100
*                     [,RSNCODE=xrsncode]                             * 00012200
*                     [,PLISTVER=xplistver|IMPLIED_VERSION]         * 00012300
*                    [,MF=S]                                         * 00012400
*                    [,MF=(L,xmfctrl,xmfattr|0D)]                  * 00012500
*                    [,MF=(E,xmfctrl,COMPLETE)]                    * 00012600
*                                                                     * 00012700
*                                                                     * 00012800
*      Where:                                                         * 00012900
*                                                                     * 00013000
*                                                                     * 00013100
*      [xlabel]                                                       * 00013200
*          is an optional symbol, starting in column 1, that is the   * 00013300
*          name on the IXLUSYNC macro invocation.  The name must      * 00013400
*          conform to the rules for an ordinary assembler language    * 00013500
*          symbol.                                                    * 00013600
*          DEFAULT: No name.                                          * 00013700
*                                                                     * 00013800
*                                                                     * 00013900
*                                                                     * 00014000
*                                                                     * 00014100
*      CONTOKEN=xcontoken                                             * 00014200
*          is the name (RS-type), or address in register (2)-(12), of * 00014300
*          a required 16 character input field that specifies the     * 00014400
*          connect token of the responding connection.                * 00014500
*                                                                     * 00014600
*                                                                     * 00014700
*                                                                     * 00014800
*                                                                     * 00014900
*      USEREVENT=xuserevent                                           * 00015000
*          is the name (RS-type), or address in register (2)-(12), of * 00015100
*          a required fullword input that specifies the user event    * 00015200
*          associated with this request. The user event must be       * 00015300
*          non-zero.                                                  * 00015400
*                                                                     * 00015500
*                                                                     * 00015600
*                                                                     * 00015700
*                                                                     * 00015800
*      REQUEST=SET|CONFIRM|CONFIRMSET                               * 00015900
*          is a required keyword input which identifies the type of   * 00016000
*          user sync point request.                                   * 00016100
*                                                                     * 00016200
*                                                                     * 00016300
*          REQUEST=SET                                                * 00016400
*              Set the user event. Only one user sync point event can * 00016500
*              be set at a time. When setting an event, a previous    * 00016600
*              event, if there was one, must have been confirmed by   * 00016700
*              all connectors and all connectors must have been told  * 00016800
*              about the completion of the user sync point through    * 00016900
*              their event exit.  If the user event is successfully   * 00017000
*              set, the User Sync Point event will be presented to    * 00017100
*              the event exit of each connector notifying each        * 00017200
*              connector of the user event.  The following data will  * 00017300
*              be presented to each connector in the event exit       * 00017400
*              parameter list:                                        * 00017500
*                                                                     * 00017600
*                                                                     * 00017700
*              o   EeplCompletedUserEvent will be zero.               * 00017800
*                                                                     * 00017900
*              o   EeplNextUserEvent will be set to the value         * 00018000
*                  specified by the USEREVENT keyword.                * 00018100
*                                                                     * 00018200
*              o   EeplCompletedUserState will be set to zero.        * 00018300
*                                                                     * 00018400
*              o   EeplNextUserState will be set to the value         * 00018500
*                  specified by the USERSTATE keyword or zero if      * 00018600
*                  USERSTATE is not specified.                        * 00018700
*                                                                     * 00018800
*              o   EeplCompletedUserCompcode will be set to zero.     * 00018900
*                                                                     * 00019000
*                                                                     * 00019100
*                                                                     * 00019200
*                                                                     * 00019300
*              [USERSTATE=xuserstate|ALL_ZEROES]                    * 00019400
*                  is the name (RS-type), or address in register      * 00019500
*                  (2)-(12), of an optional 32 character input that   * 00019600
*                  specifies a user defined value to be presented to  * 00019700
*                  the event exit. If this value is not provided,     * 00019800
*                  zeros will be presented.  The user state presented * 00019900
*                  to the event exit is from the connector that       * 00020000
*                  successfully set the user event.                   * 00020100
*                  DEFAULT: ALL_ZEROES                                * 00020200
*                                                                     * 00020300
*                                                                     * 00020400
*                                                                     * 00020500
*          REQUEST=CONFIRM                                            * 00020600
*              Confirm the user event specified by the USEREVENT      * 00020700
*              keyword.  When all confirmations have been received,   * 00020800
*              the User Sync Point event will be presented to the     * 00020900
*              event exit of each connector notifying each connector  * 00021000
*              that a sync point has been reached.  The following     * 00021100
*              data will be presented to each connector in the event  * 00021200
*              exit parameter list:                                   * 00021300
*                                                                     * 00021400
*                                                                     * 00021500
*              o   EeplCompletedUserEvent will be set to the value    * 00021600
*                  specified by the USEREVENT keyword.                * 00021700
*                                                                     * 00021800
*              o   EeplNextUserEvent will be set to zero.             * 00021900
*                                                                     * 00022000
*              o   EeplCompletedUserState will be set to the value    * 00022100
*                  specified when the event was set.                  * 00022200
*                                                                     * 00022300
*              o   EeplNextUserState will be set to zero.             * 00022400
*                                                                     * 00022500
*              o   EeplCompletedUserCompcode will be set to the       * 00022600
*                  highest user completion code value that was        * 00022700
*                  specified by any confirming connector.  Note that  * 00022800
*                  if a connector fails or disconnects while XES is   * 00022900
*                  expecting a user sync point confirmation to be     * 00023000
*                  provided by that connector,  XES will implicitly   * 00023100
*                  confirm for the failing connector with a           * 00023200
*                  completion code of X'0000FFFF'.                    * 00023300
*                                                                     * 00023400
*                                                                     * 00023500
*                                                                     * 00023600
*                                                                     * 00023700
*              [COMPCODE=xcompcode|0]                               * 00023800
*                  is the name (RS-type), or address in register      * 00023900
*                  (2)-(12), of an optional fullword input that       * 00024000
*                  specifies a user defined completion code value.    * 00024100
*                  When the sync point is reached,  the highest       * 00024200
*                  completion code that was set by any confirming     * 00024300
*                  connector will be presented to the event exit.  If * 00024400
*                  this value is not provided,  a default value of    * 00024500
*                  zero will be used for this connector.  Note that   * 00024600
*                  when a connector disconnects or fails at a time    * 00024700
*                  when he owes a user sync point confirmation,  XES  * 00024800
*                  will implicitly confirm the user sync point for    * 00024900
*                  that user with a completion code of X'0000FFFF'.   * 00025000
*                  If a given user completion code is to take         * 00025100
*                  precedence over this completion code,  it must be  * 00025200
*                  higher than X'0000FFFF'.  On the other hand,  if   * 00025300
*                  the implicit completion code is to take precedence * 00025400
*                  over a given user completion code,  it must be     * 00025500
*                  less than X'0000FFFF'.                             * 00025600
*                  DEFAULT: 0                                         * 00025700
*                                                                     * 00025800
*                                                                     * 00025900
*                                                                     * 00026000
*                                                                     * 00026100
*              [PROXYRESPONSE=NO|YES]                               * 00026200
*                  is an optional keyword input that indicates        * 00026300
*                  whether this response is being provided on behalf  * 00026400
*                  of a failing connector.                            * 00026500
*                  DEFAULT: NO                                        * 00026600
*                                                                     * 00026700
*                                                                     * 00026800
*                  [PROXYRESPONSE=NO]                                 * 00026900
*                      indicates that this is not a proxy response.   * 00027000
*                      The response is on behalf of the connector     * 00027100
*                      described by the CONTOKEN keyword.             * 00027200
*                                                                     * 00027300
*                  [PROXYRESPONSE=YES                                 * 00027400
*                      indicates that this is a proxy response. The   * 00027500
*                      response is being provided on behalf of the    * 00027600
*                      connector described by the SUBJCONTOKEN        * 00027700
*                      keyword.                                       * 00027800
*                                                                     * 00027900
*                                                                     * 00028000
*                      SUBJCONTOKEN=xsubjcontoken]                    * 00028100
*                          is the name (RS-type), or address in       * 00028200
*                          register (2)-(12), of a required 16        * 00028300
*                          character input field that designates the  * 00028400
*                          connector for whom the response is being   * 00028500
*                          provided. The subject connector must be in * 00028600
*                          the failing state. This implies that a     * 00028700
*                          proxy response should not be provided on   * 00028800
*                          behalf of a connector until after the      * 00028900
*                          EEPLDISFAILCONNECTION event for the        * 00029000
*                          subject user has been presented to the     * 00029100
*                          Event exit of the issuing connector.  The  * 00029200
*                          issuing connector may subsequently use the * 00029300
*                          value of the EEPLSUBJCONTOKEN field from   * 00029400
*                          that invocation of the event exit as input * 00029500
*                          for this keyword.  Note, if the subject    * 00029600
*                          connector is not in the failing state, the * 00029700
*                          request will fail with return and reason   * 00029800
*                          codes indicating the error.                * 00029900
*                                                                     * 00030000
*                                                                     * 00030100
*                                                                     * 00030200
*                                                                     * 00030300
*                                                                     * 00030400
*                                                                     * 00030500
*                                                                     * 00030600
*          REQUEST=CONFIRMSET                                         * 00030700
*              Confirm the user event specified by the USEREVENT      * 00030800
*              keyword, and if this confirmation is the last, set the * 00030900
*              user event to the value specified by the NEXTUSEREVENT * 00031000
*              keyword.  When all confirmations have been received,   * 00031100
*              the User Sync Point event will be presented to the     * 00031200
*              event exit of each connector notifying each connector  * 00031300
*              that a sync point has been reached.  The next user     * 00031400
*              event will also be presented to the connectors.  The   * 00031500
*              following data will be presented to each connector in  * 00031600
*              the event exit parameter list:                         * 00031700
*                                                                     * 00031800
*                                                                     * 00031900
*              o   EeplCompletedUserEvent will be set to the value    * 00032000
*                  specified by the USEREVENT keyword.                * 00032100
*                                                                     * 00032200
*              o   EeplNextUserEvent will be set to the value         * 00032300
*                  specified by NEXTUSEREVENT.                        * 00032400
*                                                                     * 00032500
*              o   EeplCompletedUserState will be set to the user     * 00032600
*                  state specified by the connector that set the      * 00032700
*                  event.                                             * 00032800
*                                                                     * 00032900
*              o   EeplNextUserState will be set to the value         * 00033000
*                  specified by the USERSTATE keyword or zero if      * 00033100
*                  USERSTATE is not specified.                        * 00033200
*                                                                     * 00033300
*              o   EeplCompletedUserCompcode will be set to the       * 00033400
*                  highest user completion code value that was        * 00033500
*                  specified by any confirming connector.  Note that  * 00033600
*                  if a connector fails or disconnects while XES is   * 00033700
*                  expecting a user sync point confirmation to be     * 00033800
*                  provided by that connector,  XES will implicitly   * 00033900
*                  confirm for the failing connector with a           * 00034000
*                  completion code of X'0000FFFF'.                    * 00034100
*                                                                     * 00034200
*                                                                     * 00034300
*                                                                     * 00034400
*                                                                     * 00034500
*              [COMPCODE=xcompcode|0]                               * 00034600
*                  is the name (RS-type), or address in register      * 00034700
*                  (2)-(12), of an optional fullword input that       * 00034800
*                  specifies a user defined completion code value.    * 00034900
*                  When the sync point is reached,  the highest       * 00035000
*                  completion code that was set by any confirming     * 00035100
*                  connector will be presented to the event exit.  If * 00035200
*                  this value is not provided,  a default value of    * 00035300
*                  zero will be used for this connector.  Note that   * 00035400
*                  specification of a nonzero user completion code    * 00035500
*                  does not prevent the next user sync point event    * 00035600
*                  from being set by this request.  Note that when a  * 00035700
*                  connector disconnects or fails at a time when he   * 00035800
*                  owes a user sync point confirmation,  XES will     * 00035900
*                  implicitly confirm the user sync point for that    * 00036000
*                  user with a completion code of X'0000FFFF'.  If a  * 00036100
*                  given user completion code is to take precedence   * 00036200
*                  over this completion code,  it must be higher than * 00036300
*                  X'0000FFFF'.  On the other hand,  if the implicit  * 00036400
*                  completion code is to take precedence over a given * 00036500
*                  user completion code,  it must be less than        * 00036600
*                  X'0000FFFF'.                                       * 00036700
*                  DEFAULT: 0                                         * 00036800
*                                                                     * 00036900
*                                                                     * 00037000
*                                                                     * 00037100
*                                                                     * 00037200
*              NEXTUSEREVENT=xnextuserevent                           * 00037300
*                  is the name (RS-type), or address in register      * 00037400
*                  (2)-(12), of a required fullword input that        * 00037500
*                  specifies the next user event to be set.  The user * 00037600
*                  event must be non-zero.                            * 00037700
*                                                                     * 00037800
*                                                                     * 00037900
*                                                                     * 00038000
*                                                                     * 00038100
*              [USERSTATE=xuserstate|ALL_ZEROES]                    * 00038200
*                  is the name (RS-type), or address in register      * 00038300
*                  (2)-(12), of an optional 32 character input that   * 00038400
*                  specifies a user defined value to be presented to  * 00038500
*                  the event exit. If this value is not provided,     * 00038600
*                  zeros will be presented.  The user state presented * 00038700
*                  to the event exit is from the connector that       * 00038800
*                  successfully set the user event.                   * 00038900
*                  DEFAULT: ALL_ZEROES                                * 00039000
*                                                                     * 00039100
*                                                                     * 00039200
*                                                                     * 00039300
*                                                                     * 00039400
*              [PROXYRESPONSE=NO|YES]                               * 00039500
*                  is an optional keyword input that indicates        * 00039600
*                  whether this response is being provided on behalf  * 00039700
*                  of a failing connector.                            * 00039800
*                  DEFAULT: NO                                        * 00039900
*                                                                     * 00040000
*                                                                     * 00040100
*                  [PROXYRESPONSE=NO]                                 * 00040200
*                      indicates that this is not a proxy response.   * 00040300
*                      The response is on behalf of the connector     * 00040400
*                      described by the CONTOKEN keyword.             * 00040500
*                                                                     * 00040600
*                  [PROXYRESPONSE=YES                                 * 00040700
*                      indicates that this is a proxy response. The   * 00040800
*                      response is being provided on behalf of the    * 00040900
*                      connector described by the SUBJCONTOKEN        * 00041000
*                      keyword.                                       * 00041100
*                                                                     * 00041200
*                                                                     * 00041300
*                      SUBJCONTOKEN=xsubjcontoken]                    * 00041400
*                          is the name (RS-type), or address in       * 00041500
*                          register (2)-(12), of a required 16        * 00041600
*                          character input field that designates the  * 00041700
*                          connector for whom the response is being   * 00041800
*                          provided. The subject connector must be in * 00041900
*                          the failing state. This implies that a     * 00042000
*                          proxy response should not be provided on   * 00042100
*                          behalf of a connector until after the      * 00042200
*                          EEPLDISFAILCONNECTION event for the        * 00042300
*                          subject user has been presented to the     * 00042400
*                          Event exit of the issuing connector.  The  * 00042500
*                          issuing connector may subsequently use the * 00042600
*                          value of the EEPLSUBJCONTOKEN field from   * 00042700
*                          that invocation of the event exit as input * 00042800
*                          for this keyword.  Note, if the subject    * 00042900
*                          connector is not in the failing state, the * 00043000
*                          request will fail with return and reason   * 00043100
*                          codes indicating the error.                * 00043200
*                                                                     * 00043300
*                                                                     * 00043400
*                                                                     * 00043500
*                                                                     * 00043600
*                                                                     * 00043700
*                                                                     * 00043800
*                                                                     * 00043900
*                                                                     * 00044000
*                                                                     * 00044100
*                                                                     * 00044200
*                                                                     * 00044300
*                                                                     * 00044400
*      [RETCODE=xretcode]                                             * 00044500
*          is the name (RS-type) of an optional fullword output       * 00044600
*          variable, or register (2)-(12), into which the return code * 00044700
*          is to be copied from GPR 15.                               * 00044800
*                                                                     * 00044900
*                                                                     * 00045000
*                                                                     * 00045100
*                                                                     * 00045200
*      [RSNCODE=xrsncode]                                             * 00045300
*          is the name (RS-type) of an optional fullword output       * 00045400
*          variable, or register (2)-(12), into which the reason code * 00045500
*          is to be copied from GPR 0.                                * 00045600
*                                                                     * 00045700
*                                                                     * 00045800
*                                                                     * 00045900
*                                                                     * 00046000
*      [PLISTVER=xplistver|IMPLIED_VERSION]                         * 00046100
*          is an optional byte input decimal value in the "0-2" range * 00046200
*          that specifies the macro version.  PLISTVER is the only    * 00046300
*          key allowed on the list form of MF and determines which    * 00046400
*          parameter list is generated.  The macro keys associated    * 00046500
*          with each supported version of the macro are listed in     * 00046600
*          MACRO USAGE NOTE 2.  Note that MAX may be specified        * 00046700
*          instead of a number, and the parameter list will be of the * 00046800
*          largest size currently supported. This size may grow from  * 00046900
*          release to release (thus possibly affecting the amount of  * 00047000
*          storage needed by your program).  If your program can      * 00047100
*          tolerate this, IBM recommends that you always specify MAX  * 00047200
*          when creating the list form parameter list as that will    * 00047300
*          ensure that the list form parameter list is always long    * 00047400
*          enough to hold whatever parameters might be specified on   * 00047500
*          the execute form.                                          * 00047600
*          DEFAULT: IMPLIED_VERSION.  When PLISTVER is omitted, the   * 00047700
*          default is the lowest version which allows all of the      * 00047800
*          parameters specified on the invocation to be processed.    * 00047900
*                                                                     * 00048000
*                                                                     * 00048100
*                                                                     * 00048200
*                                                                     * 00048300
*      [MF=S|L|E]                                                   * 00048400
*          is an optional keyword input which specifies the macro     * 00048500
*          form.                                                      * 00048600
*          DEFAULT: S                                                 * 00048700
*                                                                     * 00048800
*                                                                     * 00048900
*          [MF=S]                                                     * 00049000
*              specifies the standard form of the macro.  The "S"     * 00049100
*              form generates code to put the parameters into an      * 00049200
*              in-line parameter list and invoke the desired service. * 00049300
*              Full checking for required macro keys is done along    * 00049400
*              with supplying defaults for omitted optional           * 00049500
*              parameters.                                            * 00049600
*                                                                     * 00049700
*          [MF=(L,xmfctrl,xmfattr|0D)]                              * 00049800
*              specifies the list form of the macro.  The "L" form    * 00049900
*              defines an area to be used for the parameter list.     * 00050000
*              Only the PLISTVER key may be specified on the          * 00050100
*              invocation.  All other macro parameters are flagged as * 00050200
*              errors.  If PLISTVER is not specified, the original    * 00050300
*              parameter list definition is used.                     * 00050400
*                                                                     * 00050500
*            ,xmfctrl                                                 * 00050600
*              is a required input.  It is the name of a storage area * 00050700
*              for the parameter list.                                * 00050800
*                                                                     * 00050900
*            ,xmfattr|0D                                            * 00051000
*              is an optional 60 character input string that varies   * 00051100
*              from 1 to 60 characters. Use it to force boundary      * 00051200
*              alignment of the parameter list. Use only 0F or 0D.    * 00051300
*              DEFAULT: 0D which forces the parameter list to a       * 00051400
*              doubleword boundary.                                   * 00051500
*                                                                     * 00051600
*          [MF=(E,xmfctrl,COMPLETE)]                                * 00051700
*              specifies the execute form of the macro.  The "E" form * 00051800
*              generates code to put the parameters into the          * 00051900
*              parameter list specified by xmfctrl and provides full  * 00052000
*              syntax checking with default setting.                  * 00052100
*                                                                     * 00052200
*            ,xmfctrl                                                 * 00052300
*              is a required input.  It is the name (RS-type), or     * 00052400
*              address in register (1)-(12), of a storage area for    * 00052500
*              the parameter list.                                    * 00052600
*                                                                     * 00052700
*            ,COMPLETE                                              * 00052800
*              is an optional keyword input which specifies the       * 00052900
*              degree of macro parameter syntax checking.             * 00053000
*              DEFAULT: COMPLETE                                      * 00053100
*                                                                     * 00053200
*                                                                     * 00053300
*              COMPLETE                                               * 00053400
*                  Checking for required macro keys is done and       * 00053500
*                  defaults are supplied for omitted optional         * 00053600
*                  parameters.                                        * 00053700
*                                                                     * 00053800
*                                                                     * 00053900
*                                                                     * 00054000
*                                                                     * 00054100
*                                                                     * 00054200
*                                                                     * 00054300
*                                                                     * 00054400
*01* RETURN CODES:                                                    * 00054500
*                                                                     * 00054600
*                                                                     * 00054700
*       0         IXLUSYNC request successful.                        * 00054800
*                                                                     * 00054900
*       4         IXLUSYNC request processed, but additional          * 00055000
*                 information indicated by the reason code.           * 00055100
*                                                                     * 00055200
*                 HEX REASON   MEANING                                * 00055300
*                 CODE                                                * 00055400
*                                                                     * 00055500
*                                                                     * 00055600
*                 xxxx0417    IxlRsnCodeNotLastConfirmation:  For     * 00055700
*                             REQUEST=CONFIRMSET, the confirmation    * 00055800
*                             was processed, however, the next user   * 00055900
*                             event was not set because not all       * 00056000
*                             confirmations had been received.        * 00056100
*                                                                     * 00056200
*                 xxxx0420    IxlRsnCodeUsyncEventSet:  The user      * 00056300
*                             event specified has already been set by * 00056400
*                             a peer connection.                      * 00056500
*                                                                     * 00056600
*                                                                     * 00056700
*                                                                     * 00056800
*                                                                     * 00056900
*       8         IXLUSYNC parameter error                            * 00057000
*                                                                     * 00057100
*                 HEX REASON   MEANING                                * 00057200
*                 CODE                                                * 00057300
*                                                                     * 00057400
*                                                                     * 00057500
*                 xxxx0801    IxlRsnCodeBadParmlist:  Unable to       * 00057600
*                             access parameter list                   * 00057700
*                                                                     * 00057800
*                 xxxx0802    IxlRsnCodeBadParmlistAlet:  Parameter   * 00057900
*                             list ALET invalid                       * 00058000
*                                                                     * 00058100
*                 xxxx0804    IxlRsnCodeBadVersion#:  Invalid version * 00058200
*                             number in parameter list                * 00058300
*                                                                     * 00058400
*                 xxxx0806    IxlRsnCodeSrbMode:  The requestor is in * 00058500
*                             SRB mode.                               * 00058600
*                                                                     * 00058700
*                 xxxx0807    IxlRsnCodeNotEnabled:  Not enabled      * 00058800
*                                                                     * 00058900
*                 xxxx0809    IxlRsnCodePrimaryNotHome:  Primary ^=   * 00059000
*                             Home                                    * 00059100
*                                                                     * 00059200
*                 xxxx080A    IxlRsnCodeBadContoken:  Invalid         * 00059300
*                             contoken specified.  The contoken is    * 00059400
*                             invalid for one of the following        * 00059500
*                             reasons:  disconnect has occurred, EOT  * 00059600
*                             of the connector's task, input contoken * 00059700
*                             is not the contoken returned from       * 00059800
*                             IXLCONN, or the request was issued      * 00059900
*                             outside the connector's address space.  * 00060000
*                                                                     * 00060100
*                 xxxx0858    IxlRsnCodeBadUserEvent:  The value      * 00060200
*                             provided for the USEREVENT and          * 00060300
*                             NEXTUSEREVENT keywords must be nonzero. * 00060400
*                                                                     * 00060500
*                 xxxx0863    IxlRsnCodeTaskTerm:  Request rejected   * 00060600
*                             because the requesting task is going    * 00060700
*                             through termination. IXLUSYNC cannot be * 00060800
*                             issued from a resource manager.         * 00060900
*                                                                     * 00061000
*                                                                     * 00061100
*                                                                     * 00061200
*                                                                     * 00061300
*       C         IXLUSYNC request issued in an invalid environment.  * 00061400
*                                                                     * 00061500
*                 HEX REASON   MEANING                                * 00061600
*                 CODE                                                * 00061700
*                                                                     * 00061800
*                                                                     * 00061900
*                 xxxx0C37    IxlRsnCodeUserEventMismatch: For        * 00062000
*                             REQUEST=CONFIRM or REQUEST=CONFIRMSET,  * 00062100
*                             the user event specified did not match  * 00062200
*                             the currently defined user event.       * 00062300
*                                                                     * 00062400
*                 xxxx0C38    IxlRsnCodeUserMismatch:  A confirmation * 00062500
*                             was not expected from the responding    * 00062600
*                             connector.                              * 00062700
*                                                                     * 00062800
*                 xxxx0C3F    IxlRsnCodeConnNotDefined:  Requesting   * 00062900
*                             connection not defined.                 * 00063000
*                                                                     * 00063100
*                 xxxx0C40    IxlRsnCodeConnNotActive:  Requesting    * 00063200
*                             connection not active.                  * 00063300
*                                                                     * 00063400
*                 xxxx0C48    IxlRsnCodeSubjConnNotDefined:  Subject  * 00063500
*                             connector is not defined.               * 00063600
*                                                                     * 00063700
*                 xxxx0C4B    IxlRsnCodeUsyncEventNotSet:  For        * 00063800
*                             REQUEST=SET, the new user event was     * 00063900
*                             rejected because another event is still * 00064000
*                             set.  Either all confirmations have not * 00064100
*                             yet been received for the current event * 00064200
*                             or all connectors have not been         * 00064300
*                             notified of the previously completed    * 00064400
*                             event via the event exit.               * 00064500
*                                                                     * 00064600
*                 xxxx0C4F    IxlRsnCodeUsyncNoEventSet:  A request   * 00064700
*                             for CONFIRM or CONFIRMSET was rejected  * 00064800
*                             because no user event is currently set. * 00064900
*                                                                     * 00065000
*                 xxxx0C6D    IxlRsnCodeSubjConnNotFailing:  An       * 00065100
*                             attempt to respond by proxy on behalf   * 00065200
*                             of the connector identified by the      * 00065300
*                             value provided for the SUBJCONTOKEN     * 00065400
*                             keyword failed because the user is not  * 00065500
*                             in the failing state.                   * 00065600
*                                                                     * 00065700
*                 FFFFFFFF    IxlRsnCodeNotAvailable:  XES functions  * 00065800
*                             are not available.  This can be because * 00065900
*                             the hardware necessary to provide XES   * 00066000
*                             functions is not present.               * 00066100
*                                                                     * 00066200
*                                                                     * 00066300
*                                                                     * 00066400
*                                                                     * 00066500
*       10        Failure in XES processing.                          * 00066600
*                                                                     * 00066700
*                                                                     * 00066800
*                                                                     * 00066900
*01* REASON CODES:                                                    * 00067000
*                                                                     * 00067100
*       Reason codes, as appropriate, are defined under their         * 00067200
*       corresponding return code.  Reason code and return code       * 00067300
*       constants are defined within IXLYCON.                         * 00067400
*                                                                     * 00067500
*01* MODULE TYPE:  ASSEM MACRO                                        * 00067600
*                                                                     * 00067700
*02*   PROCESSOR:  ASSEM                                              * 00067800
*                                                                     * 00067900
*01* COMPONENT:  SCIXL                                                * 00068000
*                                                                     * 00068100
*01* DISTRIBUTION LIBRARY: AMACLIB                                    * 00068200
*                                                                     * 00068300
*01* MACRO USAGE NOTES:                                               * 00068400
*                                                                     * 00068500
*                                                                     * 00068600
*    1.  Printing of the macro expansion is controlled by the ZPRINT  * 00068700
*        global macro variable.  Any value other than 'NO' will       * 00068800
*        result in the macro expansion being printed.  The default is * 00068900
*        'YES'.  The following examples illustrate how the ZPRINT     * 00069000
*        variable should be set.                                      * 00069100
*                                                                     * 00069200
*                    GBLC &ZPRINT                                     * 00069300
*            &ZPRINT SETC 'YES'          &ZPRINT SETC 'NO'            * 00069400
*                                                                     * 00069500
*                                                                     * 00069600
*    2.  The IXLUSYNC macro supports multiple versions. The macro key * 00069700
*        list  below  contains the version level in which the key was * 00069800
*        first  introduced.  Positionals  are  identified by the word * 00069900
*        'Positional'  followed by the numeric value of its position. * 00070000
*        Nested  positionals  are  preceded  by their outer key.  The * 00070100
*        lowest value represents the original version and the highest * 00070200
*        value  represents  the  most  recent version of the IXLUSYNC * 00070300
*        macro.    When  specifying  PLISTVER,  be sure that it is as * 00070400
*        least  as high as the highest version number of all the keys * 00070500
*        being used.                                                  * 00070600
*                                                                     * 00070700
*        VERSION   KEY                                                * 00070800
*                                                                     * 00070900
*              0      CONTOKEN                                        * 00071000
*                     NEXTUSEREVENT                                   * 00071100
*                     REQUEST                                         * 00071200
*                     USEREVENT                                       * 00071300
*                     USERSTATE                                       * 00071400
*              1      PROXYRESPONSE                                   * 00071500
*                     SUBJCONTOKEN                                    * 00071600
*              2      COMPCODE                                        * 00071700
*                                                                     * 00071800
*                                                                     * 00071900
*                                                                     * 00072000
*01* CHANGE ACTIVITY:                                                 * 00072100
*                                                                     * 00072200
*   Flag LineItem  FMID    Date   ID    Comment                       * 00072300
*                                                                     * 00072400
*    $L0=SYSLKSMG HBB5510 910925 PD00BG:  XES support                 * 00072500
*    $P1=PIG0867  HBB5510 930114 PD00BG:  Document EUT FRR            * 00072600
*                                         restriction                 * 00072700
*    $D1=DIG0074  HBB5510 930325 PD00BG:  Additional return codes     * 00072800
*    $P2=PIG5004  HBB5510 940112 PD00CJ:  Added reason code xxxx0804  * 00072900
*    $01=OW21596  HBB5520 960827 PD00HV:  ProxyResponse support       * 00073000
*    $02=OW20824  HBB5520 960606 PD00FR:  Usync/lossconn enhancements * 00073100
****** END OF SPECIFICATIONS *****************************************/ 00073200
*/* TLINE 1 *********************************************************** 00073300
         MACRO                                                          00073400
&XLABEL  IXLUSYNC &CONTOKEN=,&USEREVENT=,&REQUEST=,&USERSTATE=,        *00073500
               &COMPCODE=,&PROXYRESPONSE=,&SUBJCONTOKEN=,              *00073600
               &NEXTUSEREVENT=,&RETCODE=,&RSNCODE=,&PLISTVER=,&MF=      00073700
.*                                                                      00073800
*                   MACDATE -06/20/97-<2>                               00073900
.*                                                                      00074000
.*******************************************************************    00074100
.***AB.02  GLOBAL VARIABLES TO CONTROL PRINT AND CODE GENERATION        00074200
.*******************************************************************    00074300
                   GBLC  &ZPRINT     YES=PRINT NO=NO PRINT              00074400
                   GBLC  &ZTEST      YES=TEST NO=NO TEST                00074500
                   GBLC  &ZSYSTEM    PCCODE10, MVS, SAK, VM, XAX        00074600
.*                                                                      00074700
                   GBLC  &ZIXLUSYNC  YES=MACRO USED AT LEAST ONCE       00074800
.*******************************************************************    00074900
.***AB.03  COMMONLY USED LOCAL MACRO VARIABLES                          00075000
.*******************************************************************    00075100
                   LCLC  &ZMS        ERROR MESSAGE WORK AREA            00075200
                   LCLC  &ZCNDX      LAST THREE SYSNDX CHARACTERS       00075300
                   LCLC  &ZCLNG      USED WHEN LENGTH IS NEEDED         00075400
                   LCLC  &ZCGPR      USED WHEN VALUE IS IN A GPR        00075500
                   LCLC  &ZCVAL      USED TO CONTAIN FIXED VALUE        00075600
                   LCLA  &ZAWRK      USED AS A WORK AREA                00075700
                   LCLA  &ZASIZ      USED FOR SIZE OF VALUE             00075800
                   LCLA  &ZN         NUMERIC WORK VARIABLE              00075900
                   LCLC  &ZC         CHARACTER WORK VARIABLE            00076000
                   LCLC  &ZTLC       CHARACTER TOO LONG VARIABLE        00076100
                   LCLA  &ZTLA       VALUE TOO LONG VARIABLE            00076200
                   LCLA  &ZMACRET    MACRO RETURN CODE                  00076300
&ZMACRET           SETA  0           ASSUME NO ERRORS                   00076400
.*                                                                      00076500
                   LCLC  &ZCSYSLIST(255)        NONXKEY, POS ARRAY      00076600
                   LCLA  &ZASYSLNDX  WORK INDEX FOR ZCSYSLIST()         00076700
                   LCLA  &ZPLLEN     PARAMETER LIST LENGTH              00076800
                   LCLC  &ZENDBASEPL            End of base PL          00076900
                   LCLA  &ZPLWORKA   PARAMETER LIST LENGTH              00077000
.*******************************************************************    00077100
.***AB.04  MACRO VARIABLES FOR RANGES AND SETS OF ARGUMENTS             00077200
.*******************************************************************    00077300
                   LCLA  &ZI         INDEX FOR ARRAY                    00077400
                   LCLA  &ZJ         INDEX FOR PARMS                    00077500
                   LCLA  &ZK         INDEX FOR PARSE                    00077600
                   LCLA  &ZLO        LOW RANGE VALUE                    00077700
                   LCLA  &ZHI        HIGH RANGE VALUE                   00077800
                   LCLC  &ZW         WORK AREA FOR PARM                 00077900
.********************************************************************   00078000
.***AB.05  INVOKE MVS MACROS TO CONTROL CODE GENERATION                 00078100
.********************************************************************   00078200
                   GBLC  &SYSSPLV    SP LEVEL 1,2,3 -SPLEVEL            00078300
                   GBLC  &SYSASCE    SYSTEM STATE P ANY AR-SYSSTATE     00078400
.*                                                                      00078500
                   AIF   (K'&SYSASCE GT 0).ZSYS4  SYS STATE DEFINED     00078600
                   AIF   (K'&SYSSPLV GT 0).ZSYS2  SP LEVEL DEFINED      00078700
                   SPLEVEL  TEST                                        00078800
.ZSYS2             ANOP  ,                                              00078900
                   AIF   ('&SYSSPLV' EQ '1').ZSYS3  PRE SP 3.1          00079000
                   AIF   ('&SYSSPLV' EQ '2').ZSYS3  PRE SP 3.1          00079100
                   SYSSTATE TEST                                        00079200
                   AGO   .ZSYS4                                         00079300
.ZSYS3             ANOP  ,                                              00079400
&SYSASCE           SETC  'P'         ASSUME SYSSTATE PRIMARY            00079500
.ZSYS4             ANOP  ,                                              00079600
.*******************************************************************    00079700
.***AB.07  DEFINE ALL MACRO VARIABLES                                   00079800
.*******************************************************************    00079900
                   LCLC  &XCONTOKEN  ++ NAME                            00080000
                   LCLC  &XUSEREVENT            ++ NAME                 00080100
                   LCLC  &XREQUEST   ++ VALUE                           00080200
                   LCLC  &XUSERSTATE            ++ NAME                 00080300
                   LCLC  &XCOMPCODE  ++ NAME                            00080400
                   LCLC  &XPROXYRESPONSE        ++ VALUE                00080500
                   LCLC  &XSUBJCONTOKEN         ++ NAME                 00080600
                   LCLC  &XNEXTUSEREVENT        ++ NAME                 00080700
                   LCLC  &XRETCODE   ++ NAME                            00080800
                   LCLC  &XRSNCODE   ++ NAME                            00080900
                   LCLA  &XPLISTVER  ++ VALUE                           00081000
                   LCLC  &XMF        ++ VALUE                           00081100
                   LCLC  &XMFCTRL    ++ NAME                            00081200
                   LCLC  &XMFATTR    ++ VALUE                           00081300
                   LCLC  &XMFSCK     ++ VALUE                           00081400
.*******************************************************************    00081500
.***AB.13  DEFINE MACRO VARIABLES FOR INPUT/OUTPUT PROCESSING           00081600
.*******************************************************************    00081700
                   LCLC  &ZXCONTOKEN            ++ INPUT NAME           00081800
                   LCLC  &ZXUSEREVENT           ++ INPUT NAME           00081900
                   LCLC  &ZXREQUEST  ++ INPUT VALUE                     00082000
                   LCLC  &ZXUSERSTATE           ++ INPUT NAME           00082100
                   LCLC  &ZXCOMPCODE            ++ INPUT NAME           00082200
                   LCLC  &ZXPROXYRESPONSE       ++ INPUT VALUE          00082300
                   LCLC  &ZXSUBJCONTOKEN        ++ INPUT NAME           00082400
                   LCLC  &ZXNEXTUSEREVENT       ++ INPUT NAME           00082500
                   LCLC  &ZXRETCODE  ++ OUTPUT NAME                     00082600
                   LCLC  &ZXRSNCODE  ++ OUTPUT NAME                     00082700
                   LCLC  &ZXPLISTVER            ++ INPUT VALUE          00082800
                   LCLC  &ZXMF       ++ INPUT VALUE                     00082900
                   LCLC  &ZXMFCTRL   ++ INPUT NAME                      00083000
                   LCLC  &ZXMFATTR   ++ INPUT VALUE                     00083100
                   LCLC  &ZXMFSCK    ++ INPUT VALUE                     00083200
.********************************************************************   00083300
.***AC.PLV01  PROCESS PLISTVER                                      *   00083400
.********************************************************************   00083500
&XPLISTVER      SETA  0                                                 00083600
                AIF   (K'&PLISTVER(1) LE 0).ZPLV0                       00083700
                AIF   ('&PLISTVER(1)' NE 'MAX').ZPLV0                   00083800
&XPLISTVER      SETA  2                                                 00083900
.ZPLV0          ANOP  ,                                                 00084000
.*                                                                      00084100
                AIF   ('&COMPCODE' EQ '').ZPLV1E                        00084200
                AIF   (&XPLISTVER GE 2).ZPLV1E                          00084300
&XPLISTVER      SETA  2                                                 00084400
.ZPLV1E         ANOP  ,                                                 00084500
.*                                                                      00084600
                AIF   ('&PROXYRESPONSE' EQ '').ZPLV2E                   00084700
                AIF   (&XPLISTVER GE 1).ZPLV2E                          00084800
&XPLISTVER      SETA  1                                                 00084900
.ZPLV2E         ANOP  ,                                                 00085000
.*                                                                      00085100
                AIF   ('&SUBJCONTOKEN' EQ '').ZPLV3E                    00085200
                AIF   (&XPLISTVER GE 1).ZPLV3E                          00085300
&XPLISTVER      SETA  1                                                 00085400
.ZPLV3E         ANOP  ,                                                 00085500
.*                                                                      00085600
                AIF   ('&COMPCODE' EQ '').ZPLV4E                        00085700
                AIF   (&XPLISTVER GE 2).ZPLV4E                          00085800
&XPLISTVER      SETA  2                                                 00085900
.ZPLV4E         ANOP  ,                                                 00086000
.*                                                                      00086100
                AIF   ('&PROXYRESPONSE' EQ '').ZPLV5E                   00086200
                AIF   (&XPLISTVER GE 1).ZPLV5E                          00086300
&XPLISTVER      SETA  1                                                 00086400
.ZPLV5E         ANOP  ,                                                 00086500
.*                                                                      00086600
                AIF   ('&SUBJCONTOKEN' EQ '').ZPLV6E                    00086700
                AIF   (&XPLISTVER GE 1).ZPLV6E                          00086800
&XPLISTVER      SETA  1                                                 00086900
.ZPLV6E         ANOP  ,                                                 00087000
.*                                                                      00087100
                AIF   (K'&PLISTVER(1) LE 0).ZPVCKE                      00087200
                AIF   ('&PLISTVER(1)' EQ 'IMPLIED_VERSION').ZPVCKE      00087300
                AIF   ('&PLISTVER(1)' EQ 'MAX').ZPVCKE                  00087400
.*-------------------------------------------------------------------   00087500
                AIF   (N'&PLISTVER LE 1).ZPVCK3  CK NUM                 00087600
&ZMS            SETC  '"PLISTVER='         *KPOSA* MNOTE                00087700
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00087800
&ZMS            SETC  '&ZMS "PLISTVER"'                                 00087900
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00088000
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00088100
                AGO   .ZPVCK2                                           00088200
.ZPVCK3         ANOP  ,                                                 00088300
.*-------------------------------------------------------------------   00088400
                AIF   ('&PLISTVER'(1,1) NE '(').ZPVCK2                  00088500
&ZMS            SETC  '"PLISTVER='         *KGPRA* MNOTE                00088600
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00088700
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         00088800
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'                 00088900
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00089000
                AGO   .ZPVCKE                                           00089100
.ZPVCK2         ANOP  ,                                                 00089200
.*-------------------------------------------------------------------   00089300
&ZCVAL          SETC  '&PLISTVER(1)'                                    00089400
                AIF   ('&ZCVAL'(1,1) EQ '(').ZPVCKE  IN GPR             00089500
                AIF   (T'&ZCVAL NE 'N').ZPVCK6  NUMERIC ERR             00089600
&ZN             SETA   &PLISTVER(1)        CONVERT TO ARITHMETIC        00089700
                AIF   (&ZN LT 0).ZPVCK6    TOO LOW                      00089800
                AIF   (&ZN LE 2).ZPVCK4A   NOT HIGH                     00089900
.ZPVCK6         ANOP  ,                                                 00090000
&ZMS            SETC  '"PLISTVER='         *KRNGA* MNOTE                00090100
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00090200
&ZMS            SETC  '&ZMS THE RANGE IS "0-2"'                         00090300
                MNOTE 8,' &ZMS FOR ARGUMENT 1.'                         00090400
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00090500
&XPLISTVER      SETA  2                                                 00090600
                AGO   .ZPVCKE                                           00090700
.*-------------------------------------------------------------------   00090800
.ZPVCK4A        ANOP  ,                                                 00090900
                AIF   (&ZN GE &XPLISTVER).ZPVCK4                        00091000
&ZMS            SETC  'PLISTVER='          *KVALA* MNOTE                00091100
&ZMS            SETC  '&ZMS.&PLISTVER(1)'                               00091200
&ZMS            SETC  '&ZMS., BUT PLISTVER OF'                          00091300
&ZMS            SETC  '&ZMS &XPLISTVER'                                 00091400
                MNOTE 8,' &ZMS IS REQUIRED.'                            00091500
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00091600
                AGO   .ZPVCK5                                           00091700
.ZPVCK4         ANOP  ,                                                 00091800
&XPLISTVER      SETA  &PLISTVER(1)                                      00091900
.ZPVCK5         ANOP  ,                                                 00092000
.ZPVCKE         ANOP  ,                                                 00092100
.********************************************************************   00092200
.***AG.MF01 PROCESS MF MACRO FORMS                                      00092300
.********************************************************************   00092400
                   ACTR  10000                                          00092500
.*------------------------------------------------------------------    00092600
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00092700
&XMF               SETC  ''          INITIALIZE XVARIABLE               00092800
.*-------------------------------------------------------------------   00092900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00093000
.ZG55              ANOP  ,                                              00093100
&ZTLC              SETC 'S'                                             00093200
                   AIF   ('&MF(1)' NE '&ZTLC').ZG56                     00093300
&XMF               SETC  'S'         SET KEYWORD                        00093400
                   AIF   (N'&MF LE 1).ZG55A     CK NUM                  00093500
&ZMS               SETC  '"MF='      *KPOSA* MNOTE                      00093600
&ZMS               SETC  '&ZMS.&MF"'                                    00093700
&ZMS               SETC  '&ZMS "MF"'                                    00093800
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00093900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00094000
.ZG55A             ANOP  ,                                              00094100
.*-------------------------------------------------------------------   00094200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00094300
.ZG56              ANOP  ,                                              00094400
&ZTLC              SETC 'L'                                             00094500
                   AIF   ('&MF(1)' NE '&ZTLC').ZG63                     00094600
&XMF               SETC  'L'         SET KEYWORD                        00094700
                   AIF   (N'&MF LE 3).ZG56A     CK NUM                  00094800
&ZMS               SETC  '"MF='      *KPOSA* MNOTE                      00094900
&ZMS               SETC  '&ZMS.&MF"'                                    00095000
&ZMS               SETC  '&ZMS "MF"'                                    00095100
                   MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'           00095200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00095300
.ZG56A             ANOP  ,                                              00095400
.*-------------------------------------------------------------------   00095500
.***AG.KKCTL08 -MF(L) SPECIAL CHECK                                     00095600
                   AIF   (N'&SYSLIST NE 0).ZG56B  POSITIONALS?          00095700
                   AIF   ('&CONTOKEN' NE '').ZG56B  KEYS?               00095800
                   AIF   ('&USEREVENT' NE '').ZG56B  KEYS?              00095900
                   AIF   ('&REQUEST' NE '').ZG56B  KEYS?                00096000
                   AIF   ('&USERSTATE' NE '').ZG56B  KEYS?              00096100
                   AIF   ('&COMPCODE' NE '').ZG56B  KEYS?               00096200
                   AIF   ('&PROXYRESPONSE' NE '').ZG56B  KEYS?          00096300
                   AIF   ('&SUBJCONTOKEN' NE '').ZG56B  KEYS?           00096400
                   AIF   ('&NEXTUSEREVENT' NE '').ZG56B  KEYS?          00096500
                   AIF   ('&RETCODE' NE '').ZG56B  KEYS?                00096600
                   AIF   ('&RSNCODE' NE '').ZG56B  KEYS?                00096700
                   AGO    .ZG56C     INVOCATION OKAY                    00096800
.ZG56B             ANOP  ,                                              00096900
&ZMS               SETC  'THE "L" FORM OF "MF"'  *MFLA* MNOTE           00097000
&ZMS               SETC  '&ZMS CAN ONLY HAVE'                           00097100
&ZMS               SETC  '&ZMS THE "PLISTVER" KEY'                      00097200
                   MNOTE 8,' &ZMS SPECIFIED ON THE INVOCATION.'         00097300
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00097400
.ZG56C             ANOP  ,                                              00097500
.*-------------------------------------------------------------------   00097600
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00097700
&ZXMFCTRL          SETC  'INPUT'     SET IN/OUTPUT                      00097800
&XMFCTRL           SETC  '&MF(2,1)'  SET XVARIABLE                      00097900
                   AIF   (N'&MF(2) GT 1).ZG58B  MULTI PARMS             00098000
&XMFCTRL           SETC  '&MF(2)'    SET XVARIABLE                      00098100
.ZG58B             AIF   (K'&MF(2) GT 0).ZG58C                          00098200
&ZXMFCTRL          SETC  ''          RESET IN/OUTPUT                    00098300
&ZMS               SETC  'WHEN "L" IS SPECIFIED'  *KRQDA*               00098400
&ZMS               SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'            00098500
                   MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                   00098600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00098700
.ZG58C             ANOP  ,                                              00098800
.*-------------------------------------------------------------------   00098900
.***AG.KCK01 NAME, OPT RQD INPUT, POS(2) -GPR NOT ALLOWED               00099000
                   AIF   (K'&ZXMFCTRL LE 0).ZG58P  NOT I/O              00099100
                   AIF   ('&XMFCTRL'(1,1) NE '(').ZG58P                 00099200
&ZXMFCTRL          SETC  ''          RESET IN/OUTPUT                    00099300
&ZMS               SETC  '"MF='      *KGPRA* MNOTE                      00099400
&ZMS               SETC  '&ZMS.&MF"'                                    00099500
&ZMS               SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'      00099600
                   MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 2.'              00099700
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00099800
.ZG58P             ANOP  ,                                              00099900
.*-------------------------------------------------------------------   00100000
.***AG.KXVAR13 VALUE, OPT INPUT, POS(3) -XVARIABLE                      00100100
&ZXMFATTR          SETC  'INPUT'     SET IN/OUTPUT                      00100200
&XMFATTR           SETC  '0D'                                           00100300
                   AIF   (K'&MF(3) LE 0).ZG61B  PARM                    00100400
&XMFATTR           SETC  '&MF(3,1)'  SET XVARIABLE                      00100500
                   AIF   (N'&MF(3) GT 1).ZG61B  MULTI PARMS             00100600
&XMFATTR           SETC  '&MF(3)'    SET XVARIABLE                      00100700
.ZG61B             ANOP  ,                                              00100800
.*-------------------------------------------------------------------   00100900
.***AG.KCK01 VALUE, OPT INPUT, POS(3) -GPR NOT ALLOWED                  00101000
                   AIF   (K'&ZXMFATTR LE 0).ZG61P  NOT I/O              00101100
                   AIF   ('&XMFATTR'(1,1) NE '(').ZG61P                 00101200
&ZXMFATTR          SETC  ''          RESET IN/OUTPUT                    00101300
&ZMS               SETC  '"MF='      *KGPRA* MNOTE                      00101400
&ZMS               SETC  '&ZMS.&MF"'                                    00101500
&ZMS               SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'      00101600
                   MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 3.'              00101700
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00101800
.ZG61P             ANOP  ,                                              00101900
.*-------------------------------------------------------------------   00102000
.***AG.KCK03 VALUE, OPT INPUT, POS(3) -CHARACTER LENGTH                 00102100
                   AIF   (K'&ZXMFATTR LE 0).ZG61S  NOT I/O              00102200
                   AIF   (K'&XMFATTR LE 60).ZG61S  LNG OK               00102300
&ZXMFATTR          SETC  ''          RESET IN/OUTPUT                    00102400
&ZMS               SETC  '"MF='      *KLNGA* MNOTE                      00102500
&ZMS               SETC  '&ZMS.&MF"'                                    00102600
&ZMS               SETC  '&ZMS ARGUMENT 3 EXCEEDS THE MAXIMUM'          00102700
                   MNOTE 8,' &ZMS LENGTH OF 60 CHARACTERS.'             00102800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00102900
.ZG61S             ANOP  ,                                              00103000
.*-------------------------------------------------------------------   00103100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00103200
.ZG63              ANOP  ,                                              00103300
&ZTLC              SETC 'E'                                             00103400
                   AIF   ('&MF(1)' NE '&ZTLC').ZG71                     00103500
&XMF               SETC  'E'         SET KEYWORD                        00103600
                   AIF   (N'&MF LE 3).ZG63A     CK NUM                  00103700
&ZMS               SETC  '"MF='      *KPOSA* MNOTE                      00103800
&ZMS               SETC  '&ZMS.&MF"'                                    00103900
&ZMS               SETC  '&ZMS "MF"'                                    00104000
                   MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'           00104100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00104200
.ZG63A             ANOP  ,                                              00104300
.*-------------------------------------------------------------------   00104400
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00104500
&ZXMFCTRL          SETC  'INPUT'     SET IN/OUTPUT                      00104600
&XMFCTRL           SETC  '&MF(2,1)'  SET XVARIABLE                      00104700
                   AIF   (N'&MF(2) GT 1).ZG65B  MULTI PARMS             00104800
&XMFCTRL           SETC  '&MF(2)'    SET XVARIABLE                      00104900
.ZG65B             AIF   (K'&MF(2) GT 0).ZG65C                          00105000
&ZXMFCTRL          SETC  ''          RESET IN/OUTPUT                    00105100
&ZMS               SETC  'WHEN "E" IS SPECIFIED'  *KRQDA*               00105200
&ZMS               SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'            00105300
                   MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                   00105400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00105500
.ZG65C             ANOP  ,                                              00105600
.*-------------------------------------------------------------------   00105700
.***AG.KCK02 NAME, OPT RQD INPUT, POS(2) -GPR OUT OF RANGE              00105800
                   AIF   (K'&ZXMFCTRL LE 0).ZG65R  NOT I/O              00105900
                   AIF   ('&XMFCTRL'(1,1) NE '(').ZG65R                 00106000
&ZCGPR             SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)                     00106100
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG65P                   00106200
                   AIF   (K'&ZCGPR GT 2).ZG65Q                          00106300
                   AIF   ('&ZCGPR' EQ '0').ZG65Q                        00106400
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00106500
                   AIF   (T'&ZCGPR NE 'N').ZG65Q  INVALID REG NAME      00106600
.ZG65P             ANOP  ,                                              00106700
                   AIF   (T'&ZCGPR NE 'N').ZG65R  NON NUMERIC           00106800
                   AIF   ('&ZCGPR' LT '1').ZG65Q                        00106900
                   AIF   ('&ZCGPR' LE '12').ZG65R                       00107000
.ZG65Q             ANOP  ,                                              00107100
&ZMS               SETC  '"MF='      *KGPRA* MNOTE                      00107200
&ZMS               SETC  '&ZMS.&MF"'                                    00107300
&ZMS               SETC  '&ZMS ARGUMENT 2 MUST SPECIFY A REGISTER'      00107400
                   MNOTE 8,' &ZMS IN THE RANGE (1)-(12).'               00107500
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00107600
.ZG65R             ANOP  ,                                              00107700
.*-------------------------------------------------------------------   00107800
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00107900
&XMFSCK            SETC  ''          INITIALIZE XVARIABLE               00108000
.ZG69A   AIF   ('&MF(3)' NE 'COMPLETE').ZG70A                           00108100
&XMFSCK            SETC  'COMPLETE'  SET KEYWORD                        00108200
.*-------------------------------------------------------------------   00108300
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00108400
.ZG70A             AIF   (K'&XMFSCK GT 0).ZG70C  KEYWORD                00108500
                   AIF   (K'&MF(3) LE 0).ZG70B                          00108600
&ZMS               SETC  '"MF='      *KUKWA* MNOTE                      00108700
&ZMS               SETC  '&ZMS.&MF"'                                    00108800
&ZMS               SETC  '&ZMS ARGUMENT 3 IS AN UNKNOWN KEYWORD. '      00108900
&ZMS               SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'            00109000
&ZMS               SETC  '&ZMS "COMPLETE".'     VALID KEYWORD           00109100
                   MNOTE 8,' &ZMS '                                     00109200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00109300
.ZG70B             ANOP  ,                                              00109400
&XMFSCK            SETC  'COMPLETE'  SET DEFAULT KEYWORD                00109500
.ZG70C             ANOP  ,                                              00109600
&ZXMFSCK           SETC  'INPUT'     SET IN/OUTPUT                      00109700
.*------------------------------------------------------------------    00109800
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00109900
.ZG71              ANOP  ,                                              00110000
&ZXMF              SETC  'INPUT'     SET IN/OUTPUT                      00110100
                   AIF   (K'&XMF GT 0).ZG71E    VALID ARG               00110200
                   AIF   (T'&MF EQ 'O').ZG71D   OMITTED                 00110300
&ZASYSLNDX         SETA  0                                              00110400
.ZG71A             ANOP  ,           POSITIONAL MACRO KEY               00110500
&ZASYSLNDX         SETA  &ZASYSLNDX+1                                   00110600
                   AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG71C               00110700
&ZTLC              SETC 'MF'                                            00110800
                   AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG71A      00110900
.ZG71B             ANOP  ,                                              00111000
&ZXMF              SETC  ''          RESET IN/OUTPUT                    00111100
&ZMS               SETC  'THE "MF" KEY'         *KOPTA* MNOTE           00111200
&ZMS               SETC  '&ZMS MUST CONTAIN ONE'                        00111300
                   MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'               00111400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00111500
                   AGO   .ZG71E                                         00111600
.ZG71C             ANOP  ,                                              00111700
&ZXMF              SETC  ''          RESET IN/OUTPUT                    00111800
&ZMS               SETC  '"MF='      *KUKWA* MNOTE                      00111900
&ZMS               SETC  '&ZMS.&MF"'                                    00112000
&ZMS               SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '      00112100
&ZMS               SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'            00112200
&ZMS               SETC  '&ZMS "S",'            VALID KEYWORD           00112300
&ZMS               SETC  '&ZMS "L",'            VALID KEYWORD           00112400
&ZMS               SETC  '&ZMS OR "E".'         VALID KEYWORD           00112500
                   MNOTE 8,' &ZMS '                                     00112600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00112700
                   AGO   .ZG71E                                         00112800
.ZG71D             ANOP  ,                                              00112900
&XMF               SETC  'S'         SET DEFAULT KEYWORD                00113000
&XMFSCK            SETC  'COMPLETE'  COMPLETE CHECKING                  00113100
.ZG71E             ANOP  ,                                              00113200
.********************************************************************   00113300
.***AG.MF02  FULL MACRO SYNTAX CHECKING                                 00113400
.********************************************************************   00113500
                   ACTR  10000                                          00113600
.*-------------------------------------------------------------------   00113700
.***AG.MF03 MF=(SLE)                                                    00113800
                   AIF   ('&XMF' EQ 'L').ZGMFX                          00113900
.*----------------------------------------------------------------***   00114000
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00114100
                   AIF   (N'&CONTOKEN LE 1).ZG2A  CK NUM                00114200
&ZMS               SETC  '"CONTOKEN='           *KPOSA* MNOTE           00114300
&ZMS               SETC  '&ZMS.&CONTOKEN"'                              00114400
&ZMS               SETC  '&ZMS "CONTOKEN"'                              00114500
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00114600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00114700
.ZG2A              ANOP  ,                                              00114800
.*-------------------------------------------------------------------   00114900
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00115000
&ZXCONTOKEN        SETC  'INPUT'     SET IN/OUTPUT                      00115100
&XCONTOKEN         SETC  '&CONTOKEN(1)'         SET XVARIABLE           00115200
                   AIF   (N'&CONTOKEN GT 1).ZG2B  MULTI PARMS           00115300
&XCONTOKEN         SETC  '&CONTOKEN'            SET XVARIABLE           00115400
.ZG2B              AIF   (K'&CONTOKEN(1) GT 0).ZG2C                     00115500
&ZXCONTOKEN        SETC  ''          RESET IN/OUTPUT                    00115600
&ZMS               SETC  ' '         *KRQDA*                            00115700
&ZMS               SETC  '&ZMS "CONTOKEN" KEY AND ITS ARGUMENT'         00115800
                   MNOTE 8,' &ZMS ARE REQUIRED.'                        00115900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00116000
.ZG2C              ANOP  ,                                              00116100
.*-------------------------------------------------------------------   00116200
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00116300
                   AIF   (K'&ZXCONTOKEN LE 0).ZG2R  NOT I/O             00116400
                   AIF   ('&XCONTOKEN'(1,1) NE '(').ZG2R                00116500
&ZCGPR             SETC  '&XCONTOKEN'(2,K'&XCONTOKEN-2)                 00116600
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG2P                    00116700
                   AIF   (K'&ZCGPR GT 2).ZG2Q                           00116800
                   AIF   ('&ZCGPR' EQ '0').ZG2Q                         00116900
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00117000
                   AIF   (T'&ZCGPR NE 'N').ZG2Q  INVALID REG NAME       00117100
.ZG2P              ANOP  ,                                              00117200
                   AIF   (T'&ZCGPR NE 'N').ZG2R  NON NUMERIC            00117300
                   AIF   ('&ZCGPR' LT '2').ZG2Q                         00117400
                   AIF   ('&ZCGPR' LE '12').ZG2R                        00117500
.ZG2Q              ANOP  ,                                              00117600
&ZMS               SETC  '"CONTOKEN='           *KGPRA* MNOTE           00117700
&ZMS               SETC  '&ZMS.&CONTOKEN"'                              00117800
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00117900
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00118000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00118100
.ZG2R              ANOP  ,                                              00118200
.*----------------------------------------------------------------***   00118300
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00118400
                   AIF   (N'&USEREVENT LE 1).ZG5A  CK NUM               00118500
&ZMS               SETC  '"USEREVENT='          *KPOSA* MNOTE           00118600
&ZMS               SETC  '&ZMS.&USEREVENT"'                             00118700
&ZMS               SETC  '&ZMS "USEREVENT"'                             00118800
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00118900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00119000
.ZG5A              ANOP  ,                                              00119100
.*-------------------------------------------------------------------   00119200
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00119300
&ZXUSEREVENT       SETC  'INPUT'     SET IN/OUTPUT                      00119400
&XUSEREVENT        SETC  '&USEREVENT(1)'        SET XVARIABLE           00119500
                   AIF   (N'&USEREVENT GT 1).ZG5B  MULTI PARMS          00119600
&XUSEREVENT        SETC  '&USEREVENT'           SET XVARIABLE           00119700
.ZG5B              AIF   (K'&USEREVENT(1) GT 0).ZG5C                    00119800
&ZXUSEREVENT       SETC  ''          RESET IN/OUTPUT                    00119900
&ZMS               SETC  ' '         *KRQDA*                            00120000
&ZMS               SETC  '&ZMS "USEREVENT" KEY AND ITS ARGUMENT'        00120100
                   MNOTE 8,' &ZMS ARE REQUIRED.'                        00120200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00120300
.ZG5C              ANOP  ,                                              00120400
.*-------------------------------------------------------------------   00120500
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00120600
                   AIF   (K'&ZXUSEREVENT LE 0).ZG5R  NOT I/O            00120700
                   AIF   ('&XUSEREVENT'(1,1) NE '(').ZG5R               00120800
&ZCGPR             SETC  '&XUSEREVENT'(2,K'&XUSEREVENT-2)               00120900
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG5P                    00121000
                   AIF   (K'&ZCGPR GT 2).ZG5Q                           00121100
                   AIF   ('&ZCGPR' EQ '0').ZG5Q                         00121200
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00121300
                   AIF   (T'&ZCGPR NE 'N').ZG5Q  INVALID REG NAME       00121400
.ZG5P              ANOP  ,                                              00121500
                   AIF   (T'&ZCGPR NE 'N').ZG5R  NON NUMERIC            00121600
                   AIF   ('&ZCGPR' LT '2').ZG5Q                         00121700
                   AIF   ('&ZCGPR' LE '12').ZG5R                        00121800
.ZG5Q              ANOP  ,                                              00121900
&ZMS               SETC  '"USEREVENT='          *KGPRA* MNOTE           00122000
&ZMS               SETC  '&ZMS.&USEREVENT"'                             00122100
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00122200
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00122300
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00122400
.ZG5R              ANOP  ,                                              00122500
.*------------------------------------------------------------------    00122600
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00122700
&XREQUEST          SETC  ''          INITIALIZE XVARIABLE               00122800
.*-------------------------------------------------------------------   00122900
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00123000
.ZG9               ANOP  ,                                              00123100
                   AIF   (K'&REQUEST(1) LE 0).ZG9A                      00123200
&ZTLC              SETC 'SET'                                           00123300
                   AIF   ('&REQUEST(1)' NE '&ZTLC').ZG13                00123400
&XREQUEST          SETC  'SET'       SET KEYWORD                        00123500
                   AIF   (N'&REQUEST LE 1).ZG9A  CK NUM                 00123600
&ZMS               SETC  '"REQUEST='            *KPOSA* MNOTE           00123700
&ZMS               SETC  '&ZMS.&REQUEST"'                               00123800
&ZMS               SETC  '&ZMS "REQUEST"'                               00123900
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00124000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00124100
.ZG9A              ANOP  ,                                              00124200
.*------------------------------------------------------------------    00124300
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00124400
&ZCVAL             SETC ''           CLEAR ERROR KEY ACCUMULATOR        00124500
.ZG9A0             AIF   (K'&COMPCODE LE 0).ZG9A1  OK                   00124600
&ZCVAL             SETC '&ZCVAL COMPCODE'       INCORRECT KEY USED      00124700
.ZG9A1             AIF   (K'&PROXYRESPONSE LE 0).ZG9A2  OK              00124800
&ZCVAL             SETC '&ZCVAL PROXYRESPONSE'  INCORRECT KEY USED      00124900
.ZG9A2             AIF   (K'&SUBJCONTOKEN LE 0).ZG9A3  OK               00125000
&ZCVAL             SETC '&ZCVAL SUBJCONTOKEN'   INCORRECT KEY USED      00125100
.ZG9A3             AIF   (K'&NEXTUSEREVENT LE 0).ZG9A4  OK              00125200
&ZCVAL             SETC '&ZCVAL NEXTUSEREVENT'  INCORRECT KEY USED      00125300
.ZG9A4             AIF   (K'&ZCVAL LE 0).ZG9A5  OK                      00125400
&ZCVAL             SETC '&ZCVAL'(2,K'&ZCVAL-1)                          00125500
&ZMS               SETC  '"REQUEST'  *KMEIA* MNOTE                      00125600
&ZMS               SETC  '&ZMS.=&REQUEST"'                              00125700
&ZMS               SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'           00125800
                   MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'           00125900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00126000
.ZG9A5             ANOP  ,                                              00126100
.*----------------------------------------------------------------***   00126200
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00126300
                   AIF   (N'&USERSTATE LE 1).ZG11A  CK NUM              00126400
&ZMS               SETC  '"USERSTATE='          *KPOSA* MNOTE           00126500
&ZMS               SETC  '&ZMS.&USERSTATE"'                             00126600
&ZMS               SETC  '&ZMS "USERSTATE"'                             00126700
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00126800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00126900
.ZG11A             ANOP  ,                                              00127000
.*-------------------------------------------------------------------   00127100
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00127200
&ZXUSERSTATE       SETC  'INPUT'     SET IN/OUTPUT                      00127300
&XUSERSTATE        SETC  'ALL_ZEROES'                                   00127400
                   AIF   (K'&USERSTATE(1) LE 0).ZG11B  PARM             00127500
&XUSERSTATE        SETC  '&USERSTATE(1)'        SET XVARIABLE           00127600
                   AIF   (N'&USERSTATE GT 1).ZG11B  MULTI PARMS         00127700
&XUSERSTATE        SETC  '&USERSTATE'           SET XVARIABLE           00127800
.ZG11B             ANOP  ,                                              00127900
.*-------------------------------------------------------------------   00128000
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00128100
                   AIF   (K'&ZXUSERSTATE LE 0).ZG11R  NOT I/O           00128200
                   AIF   ('&XUSERSTATE' EQ 'ALL_ZEROES').ZG11R          00128300
                   AIF   ('&XUSERSTATE'(1,1) NE '(').ZG11R              00128400
&ZCGPR             SETC  '&XUSERSTATE'(2,K'&XUSERSTATE-2)               00128500
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG11P                   00128600
                   AIF   (K'&ZCGPR GT 2).ZG11Q                          00128700
                   AIF   ('&ZCGPR' EQ '0').ZG11Q                        00128800
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00128900
                   AIF   (T'&ZCGPR NE 'N').ZG11Q  INVALID REG NAME      00129000
.ZG11P             ANOP  ,                                              00129100
                   AIF   (T'&ZCGPR NE 'N').ZG11R  NON NUMERIC           00129200
                   AIF   ('&ZCGPR' LT '2').ZG11Q                        00129300
                   AIF   ('&ZCGPR' LE '12').ZG11R                       00129400
.ZG11Q             ANOP  ,                                              00129500
&ZMS               SETC  '"USERSTATE='          *KGPRA* MNOTE           00129600
&ZMS               SETC  '&ZMS.&USERSTATE"'                             00129700
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00129800
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00129900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00130000
.ZG11R             ANOP  ,                                              00130100
.*-------------------------------------------------------------------   00130200
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00130300
.ZG13              ANOP  ,                                              00130400
&ZTLC              SETC 'CONFIRM'                                       00130500
                   AIF   ('&REQUEST(1)' NE '&ZTLC').ZG25                00130600
&XREQUEST          SETC  'CONFIRM'   SET KEYWORD                        00130700
                   AIF   (N'&REQUEST LE 1).ZG13A  CK NUM                00130800
&ZMS               SETC  '"REQUEST='            *KPOSA* MNOTE           00130900
&ZMS               SETC  '&ZMS.&REQUEST"'                               00131000
&ZMS               SETC  '&ZMS "REQUEST"'                               00131100
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00131200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00131300
.ZG13A             ANOP  ,                                              00131400
.*------------------------------------------------------------------    00131500
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00131600
&ZCVAL             SETC ''           CLEAR ERROR KEY ACCUMULATOR        00131700
.ZG13A0            AIF   (K'&USERSTATE LE 0).ZG13A1  OK                 00131800
&ZCVAL             SETC '&ZCVAL USERSTATE'      INCORRECT KEY USED      00131900
.ZG13A1            AIF   (K'&NEXTUSEREVENT LE 0).ZG13A2  OK             00132000
&ZCVAL             SETC '&ZCVAL NEXTUSEREVENT'  INCORRECT KEY USED      00132100
.ZG13A2            AIF   (K'&ZCVAL LE 0).ZG13A3  OK                     00132200
&ZCVAL             SETC '&ZCVAL'(2,K'&ZCVAL-1)                          00132300
&ZMS               SETC  '"REQUEST'  *KMEIA* MNOTE                      00132400
&ZMS               SETC  '&ZMS.=&REQUEST"'                              00132500
&ZMS               SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'           00132600
                   MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'           00132700
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00132800
.ZG13A3            ANOP  ,                                              00132900
.*----------------------------------------------------------------***   00133000
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00133100
                   AIF   (N'&COMPCODE LE 1).ZG15A  CK NUM               00133200
&ZMS               SETC  '"COMPCODE='           *KPOSA* MNOTE           00133300
&ZMS               SETC  '&ZMS.&COMPCODE"'                              00133400
&ZMS               SETC  '&ZMS "COMPCODE"'                              00133500
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00133600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00133700
.ZG15A             ANOP  ,                                              00133800
.*-------------------------------------------------------------------   00133900
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00134000
&ZXCOMPCODE        SETC  'INPUT'     SET IN/OUTPUT                      00134100
&XCOMPCODE         SETC  '0'                                            00134200
                   AIF   (K'&COMPCODE(1) LE 0).ZG15B  PARM              00134300
&XCOMPCODE         SETC  '&COMPCODE(1)'         SET XVARIABLE           00134400
                   AIF   (N'&COMPCODE GT 1).ZG15B  MULTI PARMS          00134500
&XCOMPCODE         SETC  '&COMPCODE'            SET XVARIABLE           00134600
.ZG15B             ANOP  ,                                              00134700
.*-------------------------------------------------------------------   00134800
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00134900
                   AIF   (K'&ZXCOMPCODE LE 0).ZG15R  NOT I/O            00135000
                   AIF   ('&XCOMPCODE' EQ '0').ZG15R                    00135100
                   AIF   ('&XCOMPCODE'(1,1) NE '(').ZG15R               00135200
&ZCGPR             SETC  '&XCOMPCODE'(2,K'&XCOMPCODE-2)                 00135300
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG15P                   00135400
                   AIF   (K'&ZCGPR GT 2).ZG15Q                          00135500
                   AIF   ('&ZCGPR' EQ '0').ZG15Q                        00135600
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00135700
                   AIF   (T'&ZCGPR NE 'N').ZG15Q  INVALID REG NAME      00135800
.ZG15P             ANOP  ,                                              00135900
                   AIF   (T'&ZCGPR NE 'N').ZG15R  NON NUMERIC           00136000
                   AIF   ('&ZCGPR' LT '2').ZG15Q                        00136100
                   AIF   ('&ZCGPR' LE '12').ZG15R                       00136200
.ZG15Q             ANOP  ,                                              00136300
&ZMS               SETC  '"COMPCODE='           *KGPRA* MNOTE           00136400
&ZMS               SETC  '&ZMS.&COMPCODE"'                              00136500
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00136600
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00136700
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00136800
.ZG15R             ANOP  ,                                              00136900
.*------------------------------------------------------------------    00137000
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00137100
&XPROXYRESPONSE    SETC  ''          INITIALIZE XVARIABLE               00137200
.*-------------------------------------------------------------------   00137300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00137400
.ZG19              ANOP  ,                                              00137500
                   AIF   (K'&PROXYRESPONSE(1) LE 0).ZG19A               00137600
&ZTLC              SETC 'NO'                                            00137700
                   AIF   ('&PROXYRESPONSE(1)' NE '&ZTLC').ZG20          00137800
&XPROXYRESPONSE    SETC  'NO'        SET KEYWORD                        00137900
                   AIF   (N'&PROXYRESPONSE LE 1).ZG19A  CK NUM          00138000
&ZMS               SETC  '"PROXYRESPONSE='      *KPOSA* MNOTE           00138100
&ZMS               SETC  '&ZMS.&PROXYRESPONSE"'                         00138200
&ZMS               SETC  '&ZMS "PROXYRESPONSE"'                         00138300
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00138400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00138500
.ZG19A             ANOP  ,                                              00138600
.*------------------------------------------------------------------    00138700
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00138800
&ZCVAL             SETC ''           CLEAR ERROR KEY ACCUMULATOR        00138900
.ZG19A0            AIF   (K'&SUBJCONTOKEN LE 0).ZG19A1  OK              00139000
&ZCVAL             SETC '&ZCVAL SUBJCONTOKEN'   INCORRECT KEY USED      00139100
.ZG19A1            AIF   (K'&ZCVAL LE 0).ZG19A2  OK                     00139200
&ZCVAL             SETC '&ZCVAL'(2,K'&ZCVAL-1)                          00139300
&ZMS               SETC  '"PROXYRESPONSE'       *KMEIA* MNOTE           00139400
&ZMS               SETC  '&ZMS.=&PROXYRESPONSE"'                        00139500
&ZMS               SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'           00139600
                   MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'           00139700
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00139800
.ZG19A2            ANOP  ,                                              00139900
.*-------------------------------------------------------------------   00140000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00140100
.ZG20              ANOP  ,                                              00140200
&ZTLC              SETC 'YES'                                           00140300
                   AIF   ('&PROXYRESPONSE(1)' NE '&ZTLC').ZG24          00140400
&XPROXYRESPONSE    SETC  'YES'       SET KEYWORD                        00140500
                   AIF   (N'&PROXYRESPONSE LE 1).ZG20A  CK NUM          00140600
&ZMS               SETC  '"PROXYRESPONSE='      *KPOSA* MNOTE           00140700
&ZMS               SETC  '&ZMS.&PROXYRESPONSE"'                         00140800
&ZMS               SETC  '&ZMS "PROXYRESPONSE"'                         00140900
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00141000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00141100
.ZG20A             ANOP  ,                                              00141200
.*----------------------------------------------------------------***   00141300
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00141400
                   AIF   (N'&SUBJCONTOKEN LE 1).ZG22A  CK NUM           00141500
&ZMS               SETC  '"SUBJCONTOKEN='       *KPOSA* MNOTE           00141600
&ZMS               SETC  '&ZMS.&SUBJCONTOKEN"'                          00141700
&ZMS               SETC  '&ZMS "SUBJCONTOKEN"'                          00141800
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00141900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00142000
.ZG22A             ANOP  ,                                              00142100
.*-------------------------------------------------------------------   00142200
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00142300
&ZXSUBJCONTOKEN    SETC  'INPUT'     SET IN/OUTPUT                      00142400
&XSUBJCONTOKEN     SETC  '&SUBJCONTOKEN(1)'     SET XVARIABLE           00142500
                   AIF   (N'&SUBJCONTOKEN GT 1).ZG22B  MULTI PARMS      00142600
&XSUBJCONTOKEN     SETC  '&SUBJCONTOKEN'        SET XVARIABLE           00142700
.ZG22B             AIF   (K'&SUBJCONTOKEN(1) GT 0).ZG22C                00142800
&ZXSUBJCONTOKEN    SETC  ''          RESET IN/OUTPUT                    00142900
&ZMS               SETC  'WHEN "YES" IS SPECIFIED'  *KRQDA*             00143000
&ZMS               SETC  '&ZMS , "SUBJCONTOKEN" KEY AND ITS ARGUMENT'   00143100
                   MNOTE 8,' &ZMS ARE REQUIRED.'                        00143200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00143300
.ZG22C             ANOP  ,                                              00143400
.*-------------------------------------------------------------------   00143500
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                00143600
                   AIF   (K'&ZXSUBJCONTOKEN LE 0).ZG22R  NOT I/O        00143700
                   AIF   ('&XSUBJCONTOKEN'(1,1) NE '(').ZG22R           00143800
&ZCGPR             SETC  '&XSUBJCONTOKEN'(2,K'&XSUBJCONTOKEN-2)         00143900
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG22P                   00144000
                   AIF   (K'&ZCGPR GT 2).ZG22Q                          00144100
                   AIF   ('&ZCGPR' EQ '0').ZG22Q                        00144200
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00144300
                   AIF   (T'&ZCGPR NE 'N').ZG22Q  INVALID REG NAME      00144400
.ZG22P             ANOP  ,                                              00144500
                   AIF   (T'&ZCGPR NE 'N').ZG22R  NON NUMERIC           00144600
                   AIF   ('&ZCGPR' LT '2').ZG22Q                        00144700
                   AIF   ('&ZCGPR' LE '12').ZG22R                       00144800
.ZG22Q             ANOP  ,                                              00144900
&ZMS               SETC  '"SUBJCONTOKEN='       *KGPRA* MNOTE           00145000
&ZMS               SETC  '&ZMS.&SUBJCONTOKEN"'                          00145100
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00145200
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00145300
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00145400
.ZG22R             ANOP  ,                                              00145500
.*------------------------------------------------------------------    00145600
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00145700
.ZG24              ANOP  ,                                              00145800
&ZXPROXYRESPONSE   SETC  'INPUT'     SET IN/OUTPUT                      00145900
                   AIF   (K'&XPROXYRESPONSE GT 0).ZG24E  VALID ARG      00146000
                   AIF   (T'&PROXYRESPONSE EQ 'O').ZG24D  OMITTED       00146100
&ZASYSLNDX         SETA  0                                              00146200
.ZG24A             ANOP  ,           POSITIONAL MACRO KEY               00146300
&ZASYSLNDX         SETA  &ZASYSLNDX+1                                   00146400
                   AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG24C               00146500
&ZTLC              SETC 'PROXYRESPONSE'                                 00146600
                   AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG24A      00146700
.ZG24B             ANOP  ,                                              00146800
&ZXPROXYRESPONSE   SETC  ''          RESET IN/OUTPUT                    00146900
&ZMS               SETC  'THE "PROXYRESPONSE" KEY'  *KOPTA* MNOTE       00147000
&ZMS               SETC  '&ZMS MUST CONTAIN ONE'                        00147100
                   MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'               00147200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00147300
                   AGO   .ZG24E                                         00147400
.ZG24C             ANOP  ,                                              00147500
&ZXPROXYRESPONSE   SETC  ''          RESET IN/OUTPUT                    00147600
&ZMS               SETC  '"PROXYRESPONSE='      *KUKWA* MNOTE           00147700
&ZMS               SETC  '&ZMS.&PROXYRESPONSE"'                         00147800
&ZMS               SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '      00147900
&ZMS               SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'            00148000
&ZMS               SETC  '&ZMS "NO"'            VALID KEYWORD           00148100
&ZMS               SETC  '&ZMS OR "YES".'       VALID KEYWORD           00148200
                   MNOTE 8,' &ZMS '                                     00148300
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00148400
                   AGO   .ZG24E                                         00148500
.ZG24D             ANOP  ,                                              00148600
&XPROXYRESPONSE    SETC  'NO'        SET DEFAULT KEYWORD                00148700
.ZG24E             ANOP  ,                                              00148800
.*-------------------------------------------------------------------   00148900
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00149000
.ZG25              ANOP  ,                                              00149100
&ZTLC              SETC 'CONFIRMSET'                                    00149200
                   AIF   ('&REQUEST(1)' NE '&ZTLC').ZG43                00149300
&XREQUEST          SETC  'CONFIRMSET'           SET KEYWORD             00149400
                   AIF   (N'&REQUEST LE 1).ZG25A  CK NUM                00149500
&ZMS               SETC  '"REQUEST='            *KPOSA* MNOTE           00149600
&ZMS               SETC  '&ZMS.&REQUEST"'                               00149700
&ZMS               SETC  '&ZMS "REQUEST"'                               00149800
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00149900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00150000
.ZG25A             ANOP  ,                                              00150100
.*----------------------------------------------------------------***   00150200
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00150300
                   AIF   (N'&COMPCODE LE 1).ZG27A  CK NUM               00150400
&ZMS               SETC  '"COMPCODE='           *KPOSA* MNOTE           00150500
&ZMS               SETC  '&ZMS.&COMPCODE"'                              00150600
&ZMS               SETC  '&ZMS "COMPCODE"'                              00150700
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00150800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00150900
.ZG27A             ANOP  ,                                              00151000
.*-------------------------------------------------------------------   00151100
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00151200
&ZXCOMPCODE        SETC  'INPUT'     SET IN/OUTPUT                      00151300
&XCOMPCODE         SETC  '0'                                            00151400
                   AIF   (K'&COMPCODE(1) LE 0).ZG27B  PARM              00151500
&XCOMPCODE         SETC  '&COMPCODE(1)'         SET XVARIABLE           00151600
                   AIF   (N'&COMPCODE GT 1).ZG27B  MULTI PARMS          00151700
&XCOMPCODE         SETC  '&COMPCODE'            SET XVARIABLE           00151800
.ZG27B             ANOP  ,                                              00151900
.*-------------------------------------------------------------------   00152000
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00152100
                   AIF   (K'&ZXCOMPCODE LE 0).ZG27R  NOT I/O            00152200
                   AIF   ('&XCOMPCODE' EQ '0').ZG27R                    00152300
                   AIF   ('&XCOMPCODE'(1,1) NE '(').ZG27R               00152400
&ZCGPR             SETC  '&XCOMPCODE'(2,K'&XCOMPCODE-2)                 00152500
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG27P                   00152600
                   AIF   (K'&ZCGPR GT 2).ZG27Q                          00152700
                   AIF   ('&ZCGPR' EQ '0').ZG27Q                        00152800
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00152900
                   AIF   (T'&ZCGPR NE 'N').ZG27Q  INVALID REG NAME      00153000
.ZG27P             ANOP  ,                                              00153100
                   AIF   (T'&ZCGPR NE 'N').ZG27R  NON NUMERIC           00153200
                   AIF   ('&ZCGPR' LT '2').ZG27Q                        00153300
                   AIF   ('&ZCGPR' LE '12').ZG27R                       00153400
.ZG27Q             ANOP  ,                                              00153500
&ZMS               SETC  '"COMPCODE='           *KGPRA* MNOTE           00153600
&ZMS               SETC  '&ZMS.&COMPCODE"'                              00153700
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00153800
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00153900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00154000
.ZG27R             ANOP  ,                                              00154100
.*----------------------------------------------------------------***   00154200
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00154300
                   AIF   (N'&NEXTUSEREVENT LE 1).ZG30A  CK NUM          00154400
&ZMS               SETC  '"NEXTUSEREVENT='      *KPOSA* MNOTE           00154500
&ZMS               SETC  '&ZMS.&NEXTUSEREVENT"'                         00154600
&ZMS               SETC  '&ZMS "NEXTUSEREVENT"'                         00154700
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00154800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00154900
.ZG30A             ANOP  ,                                              00155000
.*-------------------------------------------------------------------   00155100
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00155200
&ZXNEXTUSEREVENT   SETC  'INPUT'     SET IN/OUTPUT                      00155300
&XNEXTUSEREVENT    SETC  '&NEXTUSEREVENT(1)'    SET XVARIABLE           00155400
                   AIF   (N'&NEXTUSEREVENT GT 1).ZG30B  MULTI PARMS     00155500
&XNEXTUSEREVENT    SETC  '&NEXTUSEREVENT'       SET XVARIABLE           00155600
.ZG30B             AIF   (K'&NEXTUSEREVENT(1) GT 0).ZG30C               00155700
&ZXNEXTUSEREVENT   SETC  ''          RESET IN/OUTPUT                    00155800
&ZMS               SETC  ' '         *KRQDA*                            00155900
&ZMS               SETC  '&ZMS "NEXTUSEREVENT" KEY AND ITS ARGUMENT'    00156000
                   MNOTE 8,' &ZMS ARE REQUIRED.'                        00156100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00156200
.ZG30C             ANOP  ,                                              00156300
.*-------------------------------------------------------------------   00156400
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00156500
                   AIF   (K'&ZXNEXTUSEREVENT LE 0).ZG30R  NOT I/O       00156600
                   AIF   ('&XNEXTUSEREVENT'(1,1) NE '(').ZG30R          00156700
&ZCGPR             SETC  '&XNEXTUSEREVENT'(2,K'&XNEXTUSEREVENT-2)       00156800
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG30P                   00156900
                   AIF   (K'&ZCGPR GT 2).ZG30Q                          00157000
                   AIF   ('&ZCGPR' EQ '0').ZG30Q                        00157100
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00157200
                   AIF   (T'&ZCGPR NE 'N').ZG30Q  INVALID REG NAME      00157300
.ZG30P             ANOP  ,                                              00157400
                   AIF   (T'&ZCGPR NE 'N').ZG30R  NON NUMERIC           00157500
                   AIF   ('&ZCGPR' LT '2').ZG30Q                        00157600
                   AIF   ('&ZCGPR' LE '12').ZG30R                       00157700
.ZG30Q             ANOP  ,                                              00157800
&ZMS               SETC  '"NEXTUSEREVENT='      *KGPRA* MNOTE           00157900
&ZMS               SETC  '&ZMS.&NEXTUSEREVENT"'                         00158000
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00158100
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00158200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00158300
.ZG30R             ANOP  ,                                              00158400
.*----------------------------------------------------------------***   00158500
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00158600
                   AIF   (N'&USERSTATE LE 1).ZG33A  CK NUM              00158700
&ZMS               SETC  '"USERSTATE='          *KPOSA* MNOTE           00158800
&ZMS               SETC  '&ZMS.&USERSTATE"'                             00158900
&ZMS               SETC  '&ZMS "USERSTATE"'                             00159000
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00159100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00159200
.ZG33A             ANOP  ,                                              00159300
.*-------------------------------------------------------------------   00159400
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00159500
&ZXUSERSTATE       SETC  'INPUT'     SET IN/OUTPUT                      00159600
&XUSERSTATE        SETC  'ALL_ZEROES'                                   00159700
                   AIF   (K'&USERSTATE(1) LE 0).ZG33B  PARM             00159800
&XUSERSTATE        SETC  '&USERSTATE(1)'        SET XVARIABLE           00159900
                   AIF   (N'&USERSTATE GT 1).ZG33B  MULTI PARMS         00160000
&XUSERSTATE        SETC  '&USERSTATE'           SET XVARIABLE           00160100
.ZG33B             ANOP  ,                                              00160200
.*-------------------------------------------------------------------   00160300
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00160400
                   AIF   (K'&ZXUSERSTATE LE 0).ZG33R  NOT I/O           00160500
                   AIF   ('&XUSERSTATE' EQ 'ALL_ZEROES').ZG33R          00160600
                   AIF   ('&XUSERSTATE'(1,1) NE '(').ZG33R              00160700
&ZCGPR             SETC  '&XUSERSTATE'(2,K'&XUSERSTATE-2)               00160800
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG33P                   00160900
                   AIF   (K'&ZCGPR GT 2).ZG33Q                          00161000
                   AIF   ('&ZCGPR' EQ '0').ZG33Q                        00161100
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00161200
                   AIF   (T'&ZCGPR NE 'N').ZG33Q  INVALID REG NAME      00161300
.ZG33P             ANOP  ,                                              00161400
                   AIF   (T'&ZCGPR NE 'N').ZG33R  NON NUMERIC           00161500
                   AIF   ('&ZCGPR' LT '2').ZG33Q                        00161600
                   AIF   ('&ZCGPR' LE '12').ZG33R                       00161700
.ZG33Q             ANOP  ,                                              00161800
&ZMS               SETC  '"USERSTATE='          *KGPRA* MNOTE           00161900
&ZMS               SETC  '&ZMS.&USERSTATE"'                             00162000
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00162100
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00162200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00162300
.ZG33R             ANOP  ,                                              00162400
.*------------------------------------------------------------------    00162500
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00162600
&XPROXYRESPONSE    SETC  ''          INITIALIZE XVARIABLE               00162700
.*-------------------------------------------------------------------   00162800
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00162900
.ZG37              ANOP  ,                                              00163000
                   AIF   (K'&PROXYRESPONSE(1) LE 0).ZG37A               00163100
&ZTLC              SETC 'NO'                                            00163200
                   AIF   ('&PROXYRESPONSE(1)' NE '&ZTLC').ZG38          00163300
&XPROXYRESPONSE    SETC  'NO'        SET KEYWORD                        00163400
                   AIF   (N'&PROXYRESPONSE LE 1).ZG37A  CK NUM          00163500
&ZMS               SETC  '"PROXYRESPONSE='      *KPOSA* MNOTE           00163600
&ZMS               SETC  '&ZMS.&PROXYRESPONSE"'                         00163700
&ZMS               SETC  '&ZMS "PROXYRESPONSE"'                         00163800
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00163900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00164000
.ZG37A             ANOP  ,                                              00164100
.*------------------------------------------------------------------    00164200
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00164300
&ZCVAL             SETC ''           CLEAR ERROR KEY ACCUMULATOR        00164400
.ZG37A0            AIF   (K'&SUBJCONTOKEN LE 0).ZG37A1  OK              00164500
&ZCVAL             SETC '&ZCVAL SUBJCONTOKEN'   INCORRECT KEY USED      00164600
.ZG37A1            AIF   (K'&ZCVAL LE 0).ZG37A2  OK                     00164700
&ZCVAL             SETC '&ZCVAL'(2,K'&ZCVAL-1)                          00164800
&ZMS               SETC  '"PROXYRESPONSE'       *KMEIA* MNOTE           00164900
&ZMS               SETC  '&ZMS.=&PROXYRESPONSE"'                        00165000
&ZMS               SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'           00165100
                   MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'           00165200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00165300
.ZG37A2            ANOP  ,                                              00165400
.*-------------------------------------------------------------------   00165500
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00165600
.ZG38              ANOP  ,                                              00165700
&ZTLC              SETC 'YES'                                           00165800
                   AIF   ('&PROXYRESPONSE(1)' NE '&ZTLC').ZG42          00165900
&XPROXYRESPONSE    SETC  'YES'       SET KEYWORD                        00166000
                   AIF   (N'&PROXYRESPONSE LE 1).ZG38A  CK NUM          00166100
&ZMS               SETC  '"PROXYRESPONSE='      *KPOSA* MNOTE           00166200
&ZMS               SETC  '&ZMS.&PROXYRESPONSE"'                         00166300
&ZMS               SETC  '&ZMS "PROXYRESPONSE"'                         00166400
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00166500
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00166600
.ZG38A             ANOP  ,                                              00166700
.*----------------------------------------------------------------***   00166800
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00166900
                   AIF   (N'&SUBJCONTOKEN LE 1).ZG40A  CK NUM           00167000
&ZMS               SETC  '"SUBJCONTOKEN='       *KPOSA* MNOTE           00167100
&ZMS               SETC  '&ZMS.&SUBJCONTOKEN"'                          00167200
&ZMS               SETC  '&ZMS "SUBJCONTOKEN"'                          00167300
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00167400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00167500
.ZG40A             ANOP  ,                                              00167600
.*-------------------------------------------------------------------   00167700
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00167800
&ZXSUBJCONTOKEN    SETC  'INPUT'     SET IN/OUTPUT                      00167900
&XSUBJCONTOKEN     SETC  '&SUBJCONTOKEN(1)'     SET XVARIABLE           00168000
                   AIF   (N'&SUBJCONTOKEN GT 1).ZG40B  MULTI PARMS      00168100
&XSUBJCONTOKEN     SETC  '&SUBJCONTOKEN'        SET XVARIABLE           00168200
.ZG40B             AIF   (K'&SUBJCONTOKEN(1) GT 0).ZG40C                00168300
&ZXSUBJCONTOKEN    SETC  ''          RESET IN/OUTPUT                    00168400
&ZMS               SETC  'WHEN "YES" IS SPECIFIED'  *KRQDA*             00168500
&ZMS               SETC  '&ZMS , "SUBJCONTOKEN" KEY AND ITS ARGUMENT'   00168600
                   MNOTE 8,' &ZMS ARE REQUIRED.'                        00168700
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00168800
.ZG40C             ANOP  ,                                              00168900
.*-------------------------------------------------------------------   00169000
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                00169100
                   AIF   (K'&ZXSUBJCONTOKEN LE 0).ZG40R  NOT I/O        00169200
                   AIF   ('&XSUBJCONTOKEN'(1,1) NE '(').ZG40R           00169300
&ZCGPR             SETC  '&XSUBJCONTOKEN'(2,K'&XSUBJCONTOKEN-2)         00169400
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG40P                   00169500
                   AIF   (K'&ZCGPR GT 2).ZG40Q                          00169600
                   AIF   ('&ZCGPR' EQ '0').ZG40Q                        00169700
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00169800
                   AIF   (T'&ZCGPR NE 'N').ZG40Q  INVALID REG NAME      00169900
.ZG40P             ANOP  ,                                              00170000
                   AIF   (T'&ZCGPR NE 'N').ZG40R  NON NUMERIC           00170100
                   AIF   ('&ZCGPR' LT '2').ZG40Q                        00170200
                   AIF   ('&ZCGPR' LE '12').ZG40R                       00170300
.ZG40Q             ANOP  ,                                              00170400
&ZMS               SETC  '"SUBJCONTOKEN='       *KGPRA* MNOTE           00170500
&ZMS               SETC  '&ZMS.&SUBJCONTOKEN"'                          00170600
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00170700
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00170800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00170900
.ZG40R             ANOP  ,                                              00171000
.*------------------------------------------------------------------    00171100
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00171200
.ZG42              ANOP  ,                                              00171300
&ZXPROXYRESPONSE   SETC  'INPUT'     SET IN/OUTPUT                      00171400
                   AIF   (K'&XPROXYRESPONSE GT 0).ZG42E  VALID ARG      00171500
                   AIF   (T'&PROXYRESPONSE EQ 'O').ZG42D  OMITTED       00171600
&ZASYSLNDX         SETA  0                                              00171700
.ZG42A             ANOP  ,           POSITIONAL MACRO KEY               00171800
&ZASYSLNDX         SETA  &ZASYSLNDX+1                                   00171900
                   AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG42C               00172000
&ZTLC              SETC 'PROXYRESPONSE'                                 00172100
                   AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG42A      00172200
.ZG42B             ANOP  ,                                              00172300
&ZXPROXYRESPONSE   SETC  ''          RESET IN/OUTPUT                    00172400
&ZMS               SETC  'THE "PROXYRESPONSE" KEY'  *KOPTA* MNOTE       00172500
&ZMS               SETC  '&ZMS MUST CONTAIN ONE'                        00172600
                   MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'               00172700
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00172800
                   AGO   .ZG42E                                         00172900
.ZG42C             ANOP  ,                                              00173000
&ZXPROXYRESPONSE   SETC  ''          RESET IN/OUTPUT                    00173100
&ZMS               SETC  '"PROXYRESPONSE='      *KUKWA* MNOTE           00173200
&ZMS               SETC  '&ZMS.&PROXYRESPONSE"'                         00173300
&ZMS               SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '      00173400
&ZMS               SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'            00173500
&ZMS               SETC  '&ZMS "NO"'            VALID KEYWORD           00173600
&ZMS               SETC  '&ZMS OR "YES".'       VALID KEYWORD           00173700
                   MNOTE 8,' &ZMS '                                     00173800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00173900
                   AGO   .ZG42E                                         00174000
.ZG42D             ANOP  ,                                              00174100
&XPROXYRESPONSE    SETC  'NO'        SET DEFAULT KEYWORD                00174200
.ZG42E             ANOP  ,                                              00174300
.*------------------------------------------------------------------    00174400
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00174500
.ZG43              ANOP  ,                                              00174600
&ZXREQUEST         SETC  'INPUT'     SET IN/OUTPUT                      00174700
                   AIF   (K'&XREQUEST GT 0).ZG43E  VALID ARG            00174800
                   AIF   (T'&REQUEST EQ 'O').ZG43D  OMITTED             00174900
&ZASYSLNDX         SETA  0                                              00175000
.ZG43A             ANOP  ,           POSITIONAL MACRO KEY               00175100
&ZASYSLNDX         SETA  &ZASYSLNDX+1                                   00175200
                   AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG43C               00175300
&ZTLC              SETC 'REQUEST'                                       00175400
                   AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG43A      00175500
.ZG43B             ANOP  ,                                              00175600
&ZXREQUEST         SETC  ''          RESET IN/OUTPUT                    00175700
&ZMS               SETC  'THE "REQUEST" KEY'    *KOPTA* MNOTE           00175800
&ZMS               SETC  '&ZMS MUST CONTAIN ONE'                        00175900
                   MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'               00176000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00176100
                   AGO   .ZG43E                                         00176200
.ZG43C             ANOP  ,                                              00176300
&ZXREQUEST         SETC  ''          RESET IN/OUTPUT                    00176400
&ZMS               SETC  '"REQUEST='            *KUKWA* MNOTE           00176500
&ZMS               SETC  '&ZMS.&REQUEST"'                               00176600
&ZMS               SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '      00176700
&ZMS               SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'            00176800
&ZMS               SETC  '&ZMS "SET",'          VALID KEYWORD           00176900
&ZMS               SETC  '&ZMS "CONFIRM",'      VALID KEYWORD           00177000
&ZMS               SETC  '&ZMS OR "CONFIRMSET".'  VALID KEYWORD         00177100
                   MNOTE 8,' &ZMS '                                     00177200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00177300
                   AGO   .ZG43E                                         00177400
.ZG43D             ANOP  ,                                              00177500
&XREQUEST          SETC  'SET'       SET DEFAULT KEYWORD                00177600
.ZG43E             ANOP  ,                                              00177700
.*------------------------------------------------------------------    00177800
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00177900
                   AIF   (K'&REQUEST(1) GT 0).ZG43F  PARM               00178000
&XREQUEST          SETC  ''          ENSURE NULL KEYWORD                00178100
&ZXREQUEST         SETC  ''          RESET IN/OUTPUT                    00178200
&ZMS               SETC  'THE'                                          00178300
&ZMS               SETC  '&ZMS "REQUEST" KEY AND ITS ARGUMENT'          00178400
&ZMS               SETC  '&ZMS ARE REQUIRED.'                           00178500
&ZMS               SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'            00178600
&ZMS               SETC  '&ZMS "SET",'          VALID KEYWORD           00178700
&ZMS               SETC  '&ZMS "CONFIRM",'      VALID KEYWORD           00178800
&ZMS               SETC  '&ZMS OR "CONFIRMSET".'  VALID KEYWORD         00178900
                   MNOTE 8,' &ZMS '                                     00179000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00179100
.ZG43F             ANOP  ,                                              00179200
.*----------------------------------------------------------------***   00179300
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00179400
                   AIF   (N'&RETCODE LE 1).ZG45A  CK NUM                00179500
&ZMS               SETC  '"RETCODE='            *KPOSA* MNOTE           00179600
&ZMS               SETC  '&ZMS.&RETCODE"'                               00179700
&ZMS               SETC  '&ZMS "RETCODE"'                               00179800
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00179900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00180000
.ZG45A             ANOP  ,                                              00180100
.*-------------------------------------------------------------------   00180200
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00180300
                   AIF   (K'&RETCODE(1) LE 0).ZG45C  NO PARM            00180400
&ZXRETCODE         SETC  'OUTPUT'    SET OUTPUT                         00180500
&XRETCODE          SETC  '&RETCODE(1)'          SET XVARIABLE           00180600
                   AIF   (N'&RETCODE GT 1).ZG45C                        00180700
&XRETCODE          SETC  '&RETCODE'  SET XVARIABLE                      00180800
.ZG45C             ANOP  ,                                              00180900
.*-------------------------------------------------------------------   00181000
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00181100
                   AIF   (K'&ZXRETCODE LE 0).ZG45R  NOT I/O             00181200
                   AIF   ('&XRETCODE'(1,1) NE '(').ZG45R                00181300
&ZCGPR             SETC  '&XRETCODE'(2,K'&XRETCODE-2)                   00181400
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG45P                   00181500
                   AIF   (K'&ZCGPR GT 2).ZG45Q                          00181600
                   AIF   ('&ZCGPR' EQ '0').ZG45Q                        00181700
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00181800
                   AIF   (T'&ZCGPR NE 'N').ZG45Q  INVALID REG NAME      00181900
.ZG45P             ANOP  ,                                              00182000
                   AIF   (T'&ZCGPR NE 'N').ZG45R  NON NUMERIC           00182100
                   AIF   ('&ZCGPR' LT '2').ZG45Q                        00182200
                   AIF   ('&ZCGPR' LE '12').ZG45R                       00182300
.ZG45Q             ANOP  ,                                              00182400
&ZMS               SETC  '"RETCODE='            *KGPRA* MNOTE           00182500
&ZMS               SETC  '&ZMS.&RETCODE"'                               00182600
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00182700
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00182800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00182900
.ZG45R             ANOP  ,                                              00183000
.*----------------------------------------------------------------***   00183100
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00183200
                   AIF   (N'&RSNCODE LE 1).ZG48A  CK NUM                00183300
&ZMS               SETC  '"RSNCODE='            *KPOSA* MNOTE           00183400
&ZMS               SETC  '&ZMS.&RSNCODE"'                               00183500
&ZMS               SETC  '&ZMS "RSNCODE"'                               00183600
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00183700
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00183800
.ZG48A             ANOP  ,                                              00183900
.*-------------------------------------------------------------------   00184000
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00184100
                   AIF   (K'&RSNCODE(1) LE 0).ZG48C  NO PARM            00184200
&ZXRSNCODE         SETC  'OUTPUT'    SET OUTPUT                         00184300
&XRSNCODE          SETC  '&RSNCODE(1)'          SET XVARIABLE           00184400
                   AIF   (N'&RSNCODE GT 1).ZG48C                        00184500
&XRSNCODE          SETC  '&RSNCODE'  SET XVARIABLE                      00184600
.ZG48C             ANOP  ,                                              00184700
.*-------------------------------------------------------------------   00184800
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00184900
                   AIF   (K'&ZXRSNCODE LE 0).ZG48R  NOT I/O             00185000
                   AIF   ('&XRSNCODE'(1,1) NE '(').ZG48R                00185100
&ZCGPR             SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                   00185200
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG48P                   00185300
                   AIF   (K'&ZCGPR GT 2).ZG48Q                          00185400
                   AIF   ('&ZCGPR' EQ '0').ZG48Q                        00185500
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00185600
                   AIF   (T'&ZCGPR NE 'N').ZG48Q  INVALID REG NAME      00185700
.ZG48P             ANOP  ,                                              00185800
                   AIF   (T'&ZCGPR NE 'N').ZG48R  NON NUMERIC           00185900
                   AIF   ('&ZCGPR' LT '2').ZG48Q                        00186000
                   AIF   ('&ZCGPR' LE '12').ZG48R                       00186100
.ZG48Q             ANOP  ,                                              00186200
&ZMS               SETC  '"RSNCODE='            *KGPRA* MNOTE           00186300
&ZMS               SETC  '&ZMS.&RSNCODE"'                               00186400
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00186500
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00186600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00186700
.ZG48R             ANOP  ,                                              00186800
.******************************************************************     00186900
.***AH.P00 CHECK STANDALONE POSITIONAL VARIABLES                        00187000
.******************************************************************     00187100
                   ACTR  10000                                          00187200
.*----------------------------------------------------------------***   00187300
.***AH.P02 EXTRA POSITIONALS                                            00187400
                   AIF   (N'&SYSLIST LE 0).ZGLISTX  NO EXTRAS           00187500
                   AIF   (N'&SYSLIST NE 2).ZGLISTX1  NOT NULL           00187600
                   AIF   ('&SYSLIST(1)' NE '').ZGLISTX1  NOT NULL       00187700
                   AIF   ('&SYSLIST(2)' EQ '').ZGLISTX  NOT NULL        00187800
.ZGLISTX1          ANOP  ,                                              00187900
&ZCVAL             SETC  ''          ERROR FIELD                        00188000
&ZAWRK             SETA  0           POSITIONAL NUMBER                  00188100
.ZGLIST2           ANOP  ,                                              00188200
&ZAWRK             SETA  &ZAWRK+1    NEXT POSITIONAL                    00188300
                   AIF   (&ZAWRK GT N'&SYSLIST).ZGLIST3  DONE           00188400
&ZCVAL             SETC '&ZCVAL,&SYSLIST(&ZAWRK)'  EXTRA                00188500
                   AGO   .ZGLIST2                                       00188600
.*                                                                      00188700
.ZGLIST3           ANOP  ,                                              00188800
&ZCVAL             SETC '&ZCVAL'(2,K'&ZCVAL-1)  STRIP COMMA             00188900
&ZMS               SETC  'POSITIONAL ARGUMENT(S),'  *PPOSA* MNOTE       00189000
&ZMS               SETC  '&ZMS "&ZCVAL"'                                00189100
&ZMS               SETC  '&ZMS CANNOT BE USED.'                         00189200
&ZMS               SETC  '&ZMS NO POSITIONAL ARGUMENTS'                 00189300
                   MNOTE 8,' &ZMS ARE ALLOWED.'                         00189400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00189500
.ZGLISTX           ANOP  ,                                              00189600
&ZASYSLNDX         SETA  0                                              00189700
.*-------------------------------------------------------------------   00189800
.***AG.MF04 MF=(SLE)                                                    00189900
.ZGMFX             ANOP  ,           END OF FULL SYNTAX CHECK           00190000
.*******************************************************************    00190100
.***AE.ZMR01 NO CODE GENERATED IF ERRORS DETECTED                       00190200
.*******************************************************************    00190300
                   AIF   (&ZMACRET NE 0).ZLX2   ERROR DETECTED          00190400
.*******************************************************************    00190500
.***AE.01  START OF IXLUSYNC MACRO CODE                                 00190600
.*******************************************************************    00190700
                   LCLC  &M0M0001                 NAME                  00190800
&M0M0001           SETC  '&XLABEL'                SET NAME              00190900
                   AIF   (K'&XLABEL NE 0).XLAB2                         00191000
&M0M0001           SETC  'M00M&SYSNDX'            DEFAULT NAME          00191100
.*                                                                      00191200
.XLAB2             ANOP  ,                                              00191300
                   AIF   ('&XMF' EQ 'L').XLAB3                          00191400
&M0M0001 DS    0H                             IXLUSYNC-2                00191500
.XLAB3             ANOP  ,                                              00191600
.*******************************************************************    00191700
.***AE.PR01 PRINT CONTROLS, DEFAULT IS YES                              00191800
.*******************************************************************    00191900
              PUSH  PRINT                                               00192000
                   AIF   ('&ZPRINT' NE 'NO').ZPRINTX  TURN PRINT ON     00192100
                   PRINT OFF         ++ PR01                            00192200
                   AGO   .ZPRNTXX                                       00192300
.ZPRINTX           PRINT ON                                             00192400
.ZPRNTXX           ANOP  ,                                              00192500
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00192600
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00192700
.********************************************************************   00192800
.***AL.L01 INTERNAL ARRAY TO PRODUCE FORMATTED CODE                     00192900
.********************************************************************   00193000
                      LCLA  &ZOPN          LIST INSTRUCTION INDEX       00193100
                      LCLA  &ZOPN1         INVOCATION INDEX             00193200
                      LCLC  &ZOPL(4095)    LABEL                        00193300
                      LCLC  &ZOPO(4095)    OPERATION                    00193400
                      LCLC  &ZOPV(4095)    VALUE                        00193500
                      LCLC  &ZOPD(4095)    DESCRIPTION                  00193600
.*                                                                      00193700
&ZOPN                 SETA  0              INITIAL INST INDEX VALUE     00193800
.******************************************************************     00193900
.***AL.L10 IXLUSYNC FMT=LIST MF=S|L PARAMETERS                          00194000
.******************************************************************     00194100
                      AIF   ('&XMF' EQ 'L').ZLMFSL2                     00194200
                      AIF   ('&XMF' NE 'S').ZLMFSLX                     00194300
&XMFCTRL              SETC  '#Z'.'&SYSNDX'(1,4).'A'                     00194400
&XMFATTR              SETC  '0D'                                        00194500
.*                                                                      00194600
&ZOPN                 SETA  &ZOPN+1                                     00194700
&ZOPL(&ZOPN)          SETC  ' '                                         00194800
&ZOPO(&ZOPN)          SETC  'B'                                         00194900
&ZOPV(&ZOPN)          SETC  '&XMFCTRL.S'                                00195000
&ZOPD(&ZOPN)          SETC  '++ IXLUSYNC ARG PARMS'                     00195100
.*                                                                      00195200
&ZOPN                 SETA  &ZOPN+1                                     00195300
&ZOPL(&ZOPN)          SETC  ' '                                         00195400
&ZOPO(&ZOPN)          SETC  'SPACE'                                     00195500
&ZOPV(&ZOPN)          SETC  '1'                                         00195600
&ZOPD(&ZOPN)          SETC  ' '                                         00195700
.*                                                                      00195800
.ZLMFSL2              ANOP  ,                                           00195900
.*-------------------------------------------------------------------   00196000
.***AM.L00  IXLUSYNC FMT=LIST name                                      00196100
                      AIF   ('&XMF' NE 'L').ZLMFSL2M                    00196200
&ZOPN                 SETA &ZOPN+1                                      00196300
&ZOPL(&ZOPN)          SETC '&M0M0001'                                   00196400
&ZOPO(&ZOPN)          SETC 'EQU'                                        00196500
&ZOPV(&ZOPN)          SETC '&XMFCTRL'                                   00196600
&ZOPD(&ZOPN)          SETC '++ IXLUSYNC NAME'                           00196700
.ZLMFSL2M             ANOP  ,                                           00196800
.*-------------------------------------------------------------------   00196900
.***AM.L01  IXLUSYNC FMT=LIST PARAMETERS                                00197000
&ZOPN                 SETA &ZOPN+1                                      00197100
&ZOPL(&ZOPN)          SETC '&XMFCTRL'                                   00197200
&ZOPO(&ZOPN)          SETC 'DS'                                         00197300
&ZOPV(&ZOPN)          SETC '&XMFATTR'                                   00197400
&ZOPD(&ZOPN)          SETC '++ IXLUSYNC PARM LIST'                      00197500
.*-------------------------------------------------------------------   00197600
.***AM.L02 XVERSION XL1                                                 00197700
&ZOPN                 SETA &ZOPN+1                                      00197800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XVERSION'                         00197900
&ZOPO(&ZOPN)          SETC 'DS'                                         00198000
&ZOPV(&ZOPN)          SETC 'XL1'                                        00198100
&ZOPD(&ZOPN)          SETC '++ INPUT XVERSION'                          00198200
.*-------------------------------------------------------------------   00198300
.***AM.L03 XFLAGS BL.8                                                  00198400
&ZOPN                 SETA &ZOPN+1                                      00198500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XFLAGS'                           00198600
&ZOPO(&ZOPN)          SETC 'DS'                                         00198700
&ZOPV(&ZOPN)          SETC 'BL.8'                                       00198800
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             00198900
.*                                                                      00199000
&ZOPN                 SETA  &ZOPN+1                                     00199100
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XPROXYRESPONSE_YES'              00199200
&ZOPO(&ZOPN)          SETC  'EQU'                                       00199300
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             00199400
&ZOPD(&ZOPN)          SETC  '++ XPROXYRESPONSE.'                        00199500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).YES'                          00199600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00199700
.*-------------------------------------------------------------------   00199800
.***AM.L09  XRSV0001 CL1                                                00199900
&ZOPN                 SETA &ZOPN+1                                      00200000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0001'                         00200100
&ZOPO(&ZOPN)          SETC 'DS'                                         00200200
&ZOPV(&ZOPN)          SETC 'CL1'                                        00200300
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV0001'                      00200400
.*-------------------------------------------------------------------   00200500
.***AM.L05 XREQUEST XL1                                                 00200600
&ZOPN                 SETA &ZOPN+1                                      00200700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XREQUEST'                         00200800
&ZOPO(&ZOPN)          SETC 'DS'                                         00200900
&ZOPV(&ZOPN)          SETC 'XL1'                                        00201000
&ZOPD(&ZOPN)          SETC '++ &ZXREQUEST XREQUEST'                     00201100
.*                                                                      00201200
&ZOPN                 SETA  &ZOPN+1                                     00201300
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XREQUEST_SET'                    00201400
&ZOPO(&ZOPN)          SETC  'EQU'                                       00201500
&ZOPV(&ZOPN)          SETC  '1'                                         00201600
&ZOPD(&ZOPN)          SETC  '++ XREQUEST.'                              00201700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).SET'                          00201800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00201900
.*                                                                      00202000
&ZOPN                 SETA  &ZOPN+1                                     00202100
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XREQUEST_CONFIRM'                00202200
&ZOPO(&ZOPN)          SETC  'EQU'                                       00202300
&ZOPV(&ZOPN)          SETC  '2'                                         00202400
&ZOPD(&ZOPN)          SETC  '++ XREQUEST.'                              00202500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).CONFIRM'                      00202600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00202700
.*                                                                      00202800
&ZOPN                 SETA  &ZOPN+1                                     00202900
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XREQUEST_CONFIRMSET'             00203000
&ZOPO(&ZOPN)          SETC  'EQU'                                       00203100
&ZOPV(&ZOPN)          SETC  '3'                                         00203200
&ZOPD(&ZOPN)          SETC  '++ XREQUEST.'                              00203300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).CONFIRMSET'                   00203400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00203500
.*-------------------------------------------------------------------   00203600
.***AM.L09  XUSEREVENT F                                                00203700
&ZOPN                 SETA &ZOPN+1                                      00203800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XUSEREVENT'                       00203900
&ZOPO(&ZOPN)          SETC 'DS'                                         00204000
&ZOPV(&ZOPN)          SETC 'F'                                          00204100
&ZOPD(&ZOPN)          SETC '++ &ZXUSEREVENT  XUSEREVENT'                00204200
.*-------------------------------------------------------------------   00204300
.***AM.L09  XNEXTUSEREVENT F                                            00204400
&ZOPN                 SETA &ZOPN+1                                      00204500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XNEXTUSEREVENT'                   00204600
&ZOPO(&ZOPN)          SETC 'DS'                                         00204700
&ZOPV(&ZOPN)          SETC 'F'                                          00204800
&ZOPD(&ZOPN)          SETC '++ &ZXNEXTUSEREVENT  XNEXTUSEREVENT'        00204900
.*-------------------------------------------------------------------   00205000
.***AM.L09  XUSERSTATE CL32                                             00205100
&ZOPN                 SETA &ZOPN+1                                      00205200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XUSERSTATE'                       00205300
&ZOPO(&ZOPN)          SETC 'DS'                                         00205400
&ZOPV(&ZOPN)          SETC 'CL32'                                       00205500
&ZOPD(&ZOPN)          SETC '++ &ZXUSERSTATE  XUSERSTATE'                00205600
.*-------------------------------------------------------------------   00205700
.***AM.L09  XCONTOKEN CL16                                              00205800
&ZOPN                 SETA &ZOPN+1                                      00205900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCONTOKEN'                        00206000
&ZOPO(&ZOPN)          SETC 'DS'                                         00206100
&ZOPV(&ZOPN)          SETC 'CL16'                                       00206200
&ZOPD(&ZOPN)          SETC '++ &ZXCONTOKEN  XCONTOKEN'                  00206300
.*-------------------------------------------------------------------   00206400
.***AM.L09  XSUBJCONTOKEN CL16                                          00206500
&ZOPN                 SETA &ZOPN+1                                      00206600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSUBJCONTOKEN'                    00206700
&ZOPO(&ZOPN)          SETC 'DS'                                         00206800
&ZOPV(&ZOPN)          SETC 'CL16'                                       00206900
&ZOPD(&ZOPN)          SETC '++ &ZXSUBJCONTOKEN  XSUBJCONTOKEN'          00207000
.*-------------------------------------------------------------------   00207100
.***AM.L09  XCOMPCODE F                                                 00207200
&ZOPN                 SETA &ZOPN+1                                      00207300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCOMPCODE'                        00207400
&ZOPO(&ZOPN)          SETC 'DS'                                         00207500
&ZOPV(&ZOPN)          SETC 'F'                                          00207600
&ZOPD(&ZOPN)          SETC '++ &ZXCOMPCODE  XCOMPCODE'                  00207700
.*-------------------------------------------------------------------   00207800
.***AM.L09  XRSV0002 CL12                                               00207900
&ZOPN                 SETA &ZOPN+1                                      00208000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0002'                         00208100
&ZOPO(&ZOPN)          SETC 'DS'                                         00208200
&ZOPV(&ZOPN)          SETC 'CL12'                                       00208300
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV0002'                      00208400
.*-------------------------------------------------------------------   00208500
.***AM.L10 END OF IXLUSYNC LIST PARAMETERS                              00208600
&ZOPN                 SETA &ZOPN+1                                      00208700
&ZOPL(&ZOPN)          SETC '&XMFCTRL.L'                                 00208800
&ZOPO(&ZOPN)          SETC 'EQU'                                        00208900
&ZOPV(&ZOPN)          SETC '*-&XMFCTRL'                                 00209000
&ZOPD(&ZOPN)          SETC '++ LENGTH OF PLIST'                         00209100
.*                                                                      00209200
&ZOPN                 SETA &ZOPN+1                                      00209300
&ZOPL(&ZOPN)          SETC ' '                                          00209400
&ZOPO(&ZOPN)          SETC 'SPACE'                                      00209500
&ZOPV(&ZOPN)          SETC '1'                                          00209600
&ZOPD(&ZOPN)          SETC ' '                                          00209700
.*-------------------------------------------------------------------   00209800
.***AL.L12 IXLUSYNC FMT=LIST MF=S|L PARAMETERS                          00209900
                      AIF   ('&XMF' EQ 'L').ZMFLX  DONE IF MF=L         00210000
.*                                                                      00210100
&ZOPN                 SETA  &ZOPN+1                                     00210200
&ZOPL(&ZOPN)          SETC  '&XMFCTRL.S'                                00210300
&ZOPO(&ZOPN)          SETC  'DC'                                        00210400
&ZOPV(&ZOPN)          SETC  '0H''0'''                                   00210500
&ZOPD(&ZOPN)          SETC  '++ IXLUSYNC ARG PARMS'                     00210600
.*                                                                      00210700
.ZLMFSLX              ANOP  ,                                           00210800
.*-------------------------------------------------------------------   00210900
.***AL.L13 SET ZPLLEN TO ITS APPROPRIATE VALUE                          00211000
&ZPLLEN               SETA 92                                           00211100
.*                                                                      00211200
.******************************************************************     00211300
.***AI.L01 IXLUSYNC FMT=LIST FILL IN PARAMETER AREA                     00211400
.******************************************************************     00211500
                      ACTR  10000                                       00211600
&ZCVAL                SETC  'LA'           ASSUME XA MODE               00211700
                      AIF   ('&SYSASCE' EQ 'P').ZIMFXA  SYSSTATE PRI    00211800
&ZCVAL                SETC  'LAE'          XAX MODE                     00211900
.ZIMFXA               ANOP ,                                            00212000
.*                                                                      00212100
                      AIF   ('&XMFCTRL'(1,1) NE '(').ZIMFN2  NOT GPR    00212200
&ZCGPR                SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)  GET GPR         00212300
                      AIF   ('&ZCGPR' EQ 'GPR1').ZIMFNX                 00212400
                      AIF   ('&ZCGPR' EQ 'GPR01').ZIMFNX                00212500
                      AIF   ('&ZCGPR' EQ 'REG1').ZIMFNX                 00212600
                      AIF   ('&ZCGPR' EQ 'REG01').ZIMFNX                00212700
                      AIF   ('&ZCGPR' EQ 'R1').ZIMFNX                   00212800
                      AIF   ('&ZCGPR' EQ '1').ZIMFNX                    00212900
                      AIF   ('&ZCGPR' EQ '01').ZIMFNX                   00213000
&ZOPN                 SETA  &ZOPN+1                                     00213100
&ZOPL(&ZOPN)          SETC  ' '                                         00213200
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00213300
&ZOPV(&ZOPN)          SETC  '1,0(,&ZCGPR)'                              00213400
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00213500
                      AGO   .ZIMFNX                                     00213600
.*                                                                      00213700
.ZIMFN2               ANOP ,                                            00213800
&ZOPN                 SETA  &ZOPN+1                                     00213900
&ZOPL(&ZOPN)          SETC  ' '                                         00214000
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00214100
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL'                                00214200
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00214300
.ZIMFNX               ANOP ,                                            00214400
.********************************************************************   00214500
.***AI.L02 IXLUSYNC FMT=LIST INITIALIZE PARAMETER AREA                  00214600
.********************************************************************   00214700
.***AI.L03 MF=(SLE)                                                     00214800
                      AIF   ('&XMF' EQ 'L').ZIMFLX                      00214900
.*                                                                      00215000
&ZOPN                 SETA  &ZOPN+1                                     00215100
&ZOPL(&ZOPN)          SETC  ' '                                         00215200
&ZOPO(&ZOPN)          SETC  'XC'                                        00215300
&ZOPV(&ZOPN)          SETC  '0(&ZPLLEN,1),0(1)'                         00215400
&ZOPD(&ZOPN)          SETC  '++ INITIALIZE'                             00215500
.ZIMFLX               ANOP  ,                                           00215600
.*-------------------------------------------------------------------   00215700
.***AI.L04A XVERSION XL1                                                00215800
                      AIF   (&XPLISTVER EQ 0).ZIMFVW                    00215900
&ZOPN                 SETA  &ZOPN+1                                     00216000
&ZOPL(&ZOPN)          SETC  ' '                                         00216100
&ZOPO(&ZOPN)          SETC  'MVI'                                       00216200
&ZOPV(&ZOPN)          SETC  '0(1),&XPLISTVER'                           00216300
&ZOPD(&ZOPN)          SETC  '++ INPUT XVERSION XL1'                     00216400
.ZIMFVW               ANOP  ,                                           00216500
.*-------------------------------------------------------------------   00216600
.***AI.L05 XFLAGS BL1                                                   00216700
&ZW                   SETC  ''                                          00216800
&ZCLNG                SETC  ''             RESET BIT ON FLAG            00216900
.*-------------------------------------------------------------------   00217000
.***AI.L08 XFLAGS "YES"                                                 00217100
.***      BL1'1XXXXXXX'                                                 00217200
         AIF   ('&XPROXYRESPONSE' NE 'YES').ZI3A                        00217300
&ZW                   SETC  '&ZW.10000000'                              00217400
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00217500
                      AGO   .ZI3C                                       00217600
.*                                                                      00217700
.ZI3A                 ANOP  ,                                           00217800
&ZW                   SETC  '&ZW.00000000'                              00217900
.ZI3C                 ANOP  ,                                           00218000
.*-------------------------------------------------------------------   00218100
.***AI.L11 XFLAGS BL1                                                   00218200
                      AIF   ('&ZCLNG' NE 'YES').ZI3E  ALL ZERO BITS     00218300
&ZOPN                 SETA  &ZOPN+1                                     00218400
&ZOPL(&ZOPN)          SETC  ' '                                         00218500
&ZOPO(&ZOPN)          SETC  'OI'                                        00218600
&ZOPV(&ZOPN)          SETC  '1(1),B''&ZW'''                             00218700
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              00218800
.ZI3E                 ANOP  ,                                           00218900
.*-------------------------------------------------------------------   00219000
.***AI.L07 XREQUEST AL1                                                 00219100
&ZW                   SETC  ''                                          00219200
.*-------------------------------------------------------------------   00219300
.***AI.L15 XREQUEST "SET" AL1                                           00219400
         AIF   ('&XREQUEST' NE 'SET').ZI6A                              00219500
&ZW                   SETC  '1'                                         00219600
.ZI6A                 ANOP  ,                                           00219700
.*-------------------------------------------------------------------   00219800
.***AI.L15 XREQUEST "CONFIRM" AL1                                       00219900
         AIF   ('&XREQUEST' NE 'CONFIRM').ZI7A                          00220000
&ZW                   SETC  '2'                                         00220100
.ZI7A                 ANOP  ,                                           00220200
.*-------------------------------------------------------------------   00220300
.***AI.L15 XREQUEST "CONFIRMSET" AL1                                    00220400
         AIF   ('&XREQUEST' NE 'CONFIRMSET').ZI8A                       00220500
&ZW                   SETC  '3'                                         00220600
.ZI8A                 ANOP  ,                                           00220700
.*-------------------------------------------------------------------   00220800
.***AI.L17 XREQUEST AL1                                                 00220900
                      AIF   ('&ZW' EQ '0').ZI8B                         00221000
                      AIF   ('&ZW' EQ '').ZI8B                          00221100
.*                                                                      00221200
&ZOPN                 SETA  &ZOPN+1                                     00221300
&ZOPL(&ZOPN)          SETC  ' '                                         00221400
&ZOPO(&ZOPN)          SETC  'MVI'                                       00221500
&ZOPV(&ZOPN)          SETC  '3(1),&ZW'                                  00221600
&ZOPD(&ZOPN)          SETC  '++ &ZXREQUEST XREQUEST'                    00221700
.ZI8B                 ANOP  ,                                           00221800
.*-------------------------------------------------------------------   00221900
.***AI.L25  XUSEREVENT F                                                00222000
                      AIF   ('&ZXUSEREVENT' EQ '').ZI9E                 00222100
                      AIF   ('&ZXUSEREVENT' EQ 'OUTPUT').ZI9E           00222200
&ZCGPR                SETC  '&XUSEREVENT'                               00222300
.*                                                                      00222400
                      AIF   ('&XUSEREVENT'(1,1) NE '(').ZI9B            00222500
&ZCGPR   SETC  '0('.'&XUSEREVENT'(2,K'&XUSEREVENT-2).')'                00222600
                      AGO   .ZI9D                                       00222700
.ZI9B                 ANOP  ,                                           00222800
.*                                                                      00222900
&ZC                   SETC  '&XUSEREVENT'(1,1)                          00223000
                      AIF   (T'&ZC NE 'N').ZI9D                         00223100
&ZC                   SETC  '&XUSEREVENT'                               00223200
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI9D                00223300
&ZCGPR                SETC  '=FL4''&XUSEREVENT'''                       00223400
.*                                                                      00223500
.ZI9D                 ANOP  ,                                           00223600
.*                                                                      00223700
&ZOPN                 SETA  &ZOPN+1                                     00223800
&ZOPL(&ZOPN)          SETC  ' '                                         00223900
&ZOPO(&ZOPN)          SETC  'MVC'                                       00224000
&ZOPV(&ZOPN)          SETC  '4(4,1),&ZCGPR'                             00224100
&ZOPD(&ZOPN)          SETC  '++ &ZXUSEREVENT XUSEREVENT'                00224200
.*                                                                      00224300
.ZI9E                 ANOP  ,                                           00224400
.*-------------------------------------------------------------------   00224500
.***AI.L25  XNEXTUSEREVENT F                                            00224600
                      AIF   ('&ZXNEXTUSEREVENT' EQ '').ZI10E            00224700
                      AIF   ('&ZXNEXTUSEREVENT' EQ 'OUTPUT').ZI10E      00224800
&ZCGPR                SETC  '&XNEXTUSEREVENT'                           00224900
.*                                                                      00225000
                      AIF   ('&XNEXTUSEREVENT'(1,1) NE '(').ZI10B       00225100
&ZCGPR   SETC  '0('.'&XNEXTUSEREVENT'(2,K'&XNEXTUSEREVENT-2).')'        00225200
                      AGO   .ZI10D                                      00225300
.ZI10B                ANOP  ,                                           00225400
.*                                                                      00225500
&ZC                   SETC  '&XNEXTUSEREVENT'(1,1)                      00225600
                      AIF   (T'&ZC NE 'N').ZI10D                        00225700
&ZC                   SETC  '&XNEXTUSEREVENT'                           00225800
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI10D               00225900
&ZCGPR                SETC  '=FL4''&XNEXTUSEREVENT'''                   00226000
.*                                                                      00226100
.ZI10D                ANOP  ,                                           00226200
.*                                                                      00226300
&ZOPN                 SETA  &ZOPN+1                                     00226400
&ZOPL(&ZOPN)          SETC  ' '                                         00226500
&ZOPO(&ZOPN)          SETC  'MVC'                                       00226600
&ZOPV(&ZOPN)          SETC  '8(4,1),&ZCGPR'                             00226700
&ZOPD(&ZOPN)          SETC  '++ &ZXNEXTUSEREVENT XNEXTUSEREVENT'        00226800
.*                                                                      00226900
.ZI10E                ANOP  ,                                           00227000
.*-------------------------------------------------------------------   00227100
.***AI.L18  XUSERSTATE CL32                                             00227200
         AIF   ('&XUSERSTATE' NE 'ALL_ZEROES').ZI11                     00227300
&ZXUSERSTATE          SETC  ''             RESET INPUT/OUTPUT           00227400
.ZI11                 ANOP  ,                                           00227500
.*-------------------------------------------------------------------   00227600
.***AI.L25  XUSERSTATE CL32                                             00227700
                      AIF   ('&ZXUSERSTATE' EQ '').ZI11E                00227800
                      AIF   ('&ZXUSERSTATE' EQ 'OUTPUT').ZI11E          00227900
&ZCGPR                SETC  '&XUSERSTATE'                               00228000
.*                                                                      00228100
                      AIF   ('&XUSERSTATE'(1,1) NE '(').ZI11B           00228200
&ZCGPR   SETC  '0('.'&XUSERSTATE'(2,K'&XUSERSTATE-2).')'                00228300
.ZI11B                ANOP  ,                                           00228400
.*                                                                      00228500
&ZOPN                 SETA  &ZOPN+1                                     00228600
&ZOPL(&ZOPN)          SETC  ' '                                         00228700
&ZOPO(&ZOPN)          SETC  'MVC'                                       00228800
&ZOPV(&ZOPN)          SETC  '12(32,1),&ZCGPR'                           00228900
&ZOPD(&ZOPN)          SETC  '++ &ZXUSERSTATE XUSERSTATE'                00229000
.*                                                                      00229100
.ZI11E                ANOP  ,                                           00229200
.*-------------------------------------------------------------------   00229300
.***AI.L25  XCONTOKEN CL16                                              00229400
                      AIF   ('&ZXCONTOKEN' EQ '').ZI12E                 00229500
                      AIF   ('&ZXCONTOKEN' EQ 'OUTPUT').ZI12E           00229600
&ZCGPR                SETC  '&XCONTOKEN'                                00229700
.*                                                                      00229800
                      AIF   ('&XCONTOKEN'(1,1) NE '(').ZI12B            00229900
&ZCGPR   SETC  '0('.'&XCONTOKEN'(2,K'&XCONTOKEN-2).')'                  00230000
.ZI12B                ANOP  ,                                           00230100
.*                                                                      00230200
&ZOPN                 SETA  &ZOPN+1                                     00230300
&ZOPL(&ZOPN)          SETC  ' '                                         00230400
&ZOPO(&ZOPN)          SETC  'MVC'                                       00230500
&ZOPV(&ZOPN)          SETC  '44(16,1),&ZCGPR'                           00230600
&ZOPD(&ZOPN)          SETC  '++ &ZXCONTOKEN XCONTOKEN'                  00230700
.*                                                                      00230800
.ZI12E                ANOP  ,                                           00230900
.*-------------------------------------------------------------------   00231000
.***AI.L25  XSUBJCONTOKEN CL16                                          00231100
                      AIF   ('&ZXSUBJCONTOKEN' EQ '').ZI13E             00231200
                      AIF   ('&ZXSUBJCONTOKEN' EQ 'OUTPUT').ZI13E       00231300
&ZCGPR                SETC  '&XSUBJCONTOKEN'                            00231400
.*                                                                      00231500
                      AIF   ('&XSUBJCONTOKEN'(1,1) NE '(').ZI13B        00231600
&ZCGPR   SETC  '0('.'&XSUBJCONTOKEN'(2,K'&XSUBJCONTOKEN-2).')'          00231700
.ZI13B                ANOP  ,                                           00231800
.*                                                                      00231900
&ZOPN                 SETA  &ZOPN+1                                     00232000
&ZOPL(&ZOPN)          SETC  ' '                                         00232100
&ZOPO(&ZOPN)          SETC  'MVC'                                       00232200
&ZOPV(&ZOPN)          SETC  '60(16,1),&ZCGPR'                           00232300
&ZOPD(&ZOPN)          SETC  '++ &ZXSUBJCONTOKEN XSUBJCONTOKEN'          00232400
.*                                                                      00232500
.ZI13E                ANOP  ,                                           00232600
.*-------------------------------------------------------------------   00232700
.***AI.L18  XCOMPCODE F                                                 00232800
         AIF   ('&XCOMPCODE' NE '0').ZI14                               00232900
&ZXCOMPCODE           SETC  ''             RESET INPUT/OUTPUT           00233000
.ZI14                 ANOP  ,                                           00233100
.*-------------------------------------------------------------------   00233200
.***AI.L25  XCOMPCODE F                                                 00233300
                      AIF   ('&ZXCOMPCODE' EQ '').ZI14E                 00233400
                      AIF   ('&ZXCOMPCODE' EQ 'OUTPUT').ZI14E           00233500
&ZCGPR                SETC  '&XCOMPCODE'                                00233600
.*                                                                      00233700
                      AIF   ('&XCOMPCODE'(1,1) NE '(').ZI14B            00233800
&ZCGPR   SETC  '0('.'&XCOMPCODE'(2,K'&XCOMPCODE-2).')'                  00233900
                      AGO   .ZI14D                                      00234000
.ZI14B                ANOP  ,                                           00234100
.*                                                                      00234200
&ZC                   SETC  '&XCOMPCODE'(1,1)                           00234300
                      AIF   (T'&ZC NE 'N').ZI14D                        00234400
&ZC                   SETC  '&XCOMPCODE'                                00234500
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI14D               00234600
&ZCGPR                SETC  '=FL4''&XCOMPCODE'''                        00234700
.*                                                                      00234800
.ZI14D                ANOP  ,                                           00234900
.*                                                                      00235000
&ZOPN                 SETA  &ZOPN+1                                     00235100
&ZOPL(&ZOPN)          SETC  ' '                                         00235200
&ZOPO(&ZOPN)          SETC  'MVC'                                       00235300
&ZOPV(&ZOPN)          SETC  '76(4,1),&ZCGPR'                            00235400
&ZOPD(&ZOPN)          SETC  '++ &ZXCOMPCODE XCOMPCODE'                  00235500
.*                                                                      00235600
.ZI14E                ANOP  ,                                           00235700
.*-------------------------------------------------------------------   00235800
&ZOPN1                SETA &ZOPN                                        00235900
.*******************************************************************    00236000
.***  PROCESS IXLUSYNC OUTPUT PARAMETERS                                00236100
.*******************************************************************    00236200
                      ACTR  10000                                       00236300
.*******************************************************************    00236400
.***AO.X02  RETURN CODE PROCESSING                                      00236500
.*******************************************************************    00236600
                      AIF   (N'&RETCODE LE 0).ZMRETX                    00236700
                      AIF   ('&XRETCODE'(1,1) EQ '(').ZMRET2            00236800
                      AIF   ('&XRETCODE' EQ 'GPR15').ZMRETX             00236900
                      AIF   ('&XRETCODE' EQ 'REG15').ZMRETX             00237000
                      AIF   ('&XRETCODE' EQ 'R15').ZMRETX               00237100
                      AIF   ('&XRETCODE' EQ '15').ZMRETX                00237200
&ZOPN                 SETA  &ZOPN+1                                     00237300
&ZOPL(&ZOPN)          SETC  ' '                                         00237400
&ZOPO(&ZOPN)          SETC  'ST'                                        00237500
&ZOPV(&ZOPN)          SETC  '15,&XRETCODE'                              00237600
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00237700
                      AGO   .ZMRETX                                     00237800
.*                                                                      00237900
.ZMRET2               ANOP  ,                                           00238000
&ZCGPR                SETC  '&XRETCODE'(2,K'&XRETCODE-2)                00238100
                      AIF   ('&ZCGPR' EQ 'GPR15').ZMRETX                00238200
                      AIF   ('&ZCGPR' EQ 'REG15').ZMRETX                00238300
                      AIF   ('&ZCGPR' EQ 'R15').ZMRETX                  00238400
                      AIF   ('&ZCGPR' EQ '15').ZMRETX                   00238500
&ZOPN                 SETA  &ZOPN+1                                     00238600
&ZOPL(&ZOPN)          SETC  ' '                                         00238700
&ZOPO(&ZOPN)          SETC  'LR'                                        00238800
&ZOPV(&ZOPN)          SETC  '&ZCGPR,15'                                 00238900
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00239000
.ZMRETX               ANOP  ,                                           00239100
.*******************************************************************    00239200
.***AO.X03  REASON CODE PROCESSING                                      00239300
.*******************************************************************    00239400
                      AIF   (N'&RSNCODE LE 0).ZMRSNX                    00239500
                      AIF   ('&XRSNCODE'(1,1) EQ '(').ZMRSN2            00239600
                      AIF   ('&XRSNCODE' EQ 'GPR0').ZMRSNX              00239700
                      AIF   ('&XRSNCODE' EQ 'GPR00').ZMRSNX             00239800
                      AIF   ('&XRSNCODE' EQ 'REG0').ZMRSNX              00239900
                      AIF   ('&XRSNCODE' EQ 'REG00').ZMRSNX             00240000
                      AIF   ('&XRSNCODE' EQ 'R0').ZMRSNX                00240100
                      AIF   ('&XRSNCODE' EQ '0').ZMRSNX                 00240200
                      AIF   ('&XRSNCODE' EQ '00').ZMRSNX                00240300
&ZOPN                 SETA  &ZOPN+1                                     00240400
&ZOPL(&ZOPN)          SETC  ' '                                         00240500
&ZOPO(&ZOPN)          SETC  'ST'                                        00240600
&ZOPV(&ZOPN)          SETC  '0,&XRSNCODE'                               00240700
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00240800
                      AGO   .ZMRSNX                                     00240900
.*                                                                      00241000
.ZMRSN2               ANOP  ,                                           00241100
&ZCGPR                SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                00241200
                      AIF   ('&ZCGPR' EQ 'GPR0').ZMRSNX                 00241300
                      AIF   ('&ZCGPR' EQ 'GPR00').ZMRSNX                00241400
                      AIF   ('&ZCGPR' EQ 'REG0').ZMRSNX                 00241500
                      AIF   ('&ZCGPR' EQ 'REG00').ZMRSNX                00241600
                      AIF   ('&ZCGPR' EQ 'R0').ZMRSNX                   00241700
                      AIF   ('&ZCGPR' EQ '0').ZMRSNX                    00241800
                      AIF   ('&ZCGPR' EQ '00').ZMRSNX                   00241900
&ZOPN                 SETA  &ZOPN+1                                     00242000
&ZOPL(&ZOPN)          SETC  ' '                                         00242100
&ZOPO(&ZOPN)          SETC  'LR'                                        00242200
&ZOPV(&ZOPN)          SETC  '&ZCGPR,0'                                  00242300
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00242400
.ZMRSNX               ANOP  ,                                           00242500
.*******************************************************************    00242600
.***AO.X04  LABEL FOR MF=L PROCESSING                                   00242700
.*******************************************************************    00242800
.ZMFLX                ANOP  ,              MF=L PROCESSING              00242900
.*******************************************************************    00243000
.***AO.X05  FORMAT GENERATED INSTRUCTIONS                               00243100
.*******************************************************************    00243200
                      ACTR  10000                                       00243300
.*                                                                      00243400
                      LCLA  &ZLC           COLUMN POSITION              00243500
                      LCLA  &ZOPX          LIST TABLE INDEX             00243600
                      LCLC  &ZLL           LABEL                        00243700
                      LCLC  &ZLOP          OPERATION                    00243800
                      LCLC  &ZLV           VALUE                        00243900
                      LCLC  &ZLD           DESCRIPTION                  00244000
.*                                                                      00244100
&ZOPX                 SETA  1                                           00244200
.ZL2                  AIF   (&ZOPX GT &ZOPN1).ZLX  B IF DONE            00244300
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00244400
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00244500
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00244600
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00244700
                      AIF   (K'&ZLD LE 0).ZL5                           00244800
&ZLC                  SETA  35             COMMENT COLUMN               00244900
                      AIF   ('&ZLD'(1,1) NE '*').ZL3                    00245000
&ZLC                  SETA  33             COMMMENT COLUMN              00245100
.ZL3                  AIF   (K'&ZLV GE &ZLC-16-1).ZL4                   00245200
&ZLV                  SETC  '&ZLV'.' '                                  00245300
                      AGO   .ZL3                                        00245400
.*                                                                      00245500
.ZL4                  ANOP  ,                                           00245600
&ZLV                  SETC  '&ZLV'.' '                                  00245700
.ZL5                  ANOP  ,                                           00245800
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00245900
.*                                                                      00246000
&ZLL     &ZLOP &ZLV                                                     00246100
.*                                                                      00246200
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00246300
                      AGO   .ZL2           CONTINUE LOOPING             00246400
.*                                                                      00246500
.ZLX                  ANOP  ,                                           00246600
                      AIF   ('&XMF' EQ 'L').ZLINKX  MF=L                00246700
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00246800
         L     14,16(0,0)              GET CVT ADDRESS                  00246900
         L     14,772(14,0)            GET SFT ADDRESS                  00247000
         L     14,220(14,0)            GET LX FOR SERVICE ROUTINE       00247100
         LA    15,49                   GET EX FOR SERVICE ROUTINE       00247200
         OR    14,15                   GET PC NUMBER                    00247300
         PC    0(14)                                                    00247400
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00247500
.ZLINKX               ANOP  ,                                           00247600
.*******************************************************************    00247700
.***AP.X01  FORMAT GENERATED CODE                                       00247800
.ZL21                 AIF   (&ZOPX GT &ZOPN).ZLX1  B IF DONE            00247900
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00248000
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00248100
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00248200
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00248300
                      AIF   (K'&ZLD LE 0).ZL51                          00248400
&ZLC                  SETA  35             COMMENT COLUMN               00248500
                      AIF   ('&ZLD'(1,1) NE '*').ZL31                   00248600
&ZLC                  SETA  33             COMMENT COLUMN               00248700
.ZL31                 AIF   (K'&ZLV GE &ZLC-16-1).ZL41                  00248800
&ZLV                  SETC  '&ZLV'.' '                                  00248900
                      AGO   .ZL31                                       00249000
.*                                                                      00249100
.ZL41                 ANOP  ,                                           00249200
&ZLV                  SETC  '&ZLV'.' '                                  00249300
.ZL51                 ANOP  ,                                           00249400
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00249500
.*                                                                      00249600
&ZLL     &ZLOP &ZLV                                                     00249700
.*                                                                      00249800
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00249900
                      AGO   .ZL21          CONTINUE LOOPING             00250000
.*                                                                      00250100
.ZLX1                 ANOP  ,                                           00250200
.*******************************************************************    00250300
.***AP.X02  END OF IXLUSYNC MACRO                                       00250400
&ZIXLUSYNC            SETC  'YES'          SET IXLUSYNC USED            00250500
         POP   PRINT                                                    00250600
*                                            IXLUSYNC-2                 00250700
         SPACE 1                                                        00250800
.ZLX2                 ANOP  ,                                           00250900
         MEND                                                           00251000
**********************************************************************/ 00251100
*/*PB.OC01 INVOKE MACRO---------------------------------------------*/  00251200
*%IXLUSYNC: MACRO KEYS(CONTOKEN,USEREVENT,REQUEST,USERSTATE,COMPCODE,   00251300
*                 PROXYRESPONSE,SUBJCONTOKEN,NEXTUSEREVENT,RETCODE,     00251400
*                 RSNCODE,PLISTVER,MF);                                 00251500
*  ANS('?'||MACLABEL||' '||'IXLUSYNP '||MACLIST||                       00251600
*         ' '||MACKEYS||';') COL(MACLMAR);                              00251700
*%END IXLUSYNC;                                                         00251800
