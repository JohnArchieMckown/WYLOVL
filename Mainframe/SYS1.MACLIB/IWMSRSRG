*%IWMSRSRG: MACRO KEYS(LOCATION,NETWORK_ID,LUNAME,STOKEN,USERDATA,      00000100
*                 HOST,RETCODE,RSNCODE,PLISTVER,MF);                    00000200
*/**** START OF SPECIFICATIONS **************************************** 00000300
*                                                                     * 00000400
*                                                                     * 00000500
*01* MACRO NAME:  IWMSRSRG                              -09/04/97-<2> * 00000600
*                                                                     * 00000700
*                                                                     * 00000800
*01* DESCRIPTIVE NAME:  Sysplex Routing Registration                  * 00000900
*                                                                     * 00001000
*01* PROPRIETARY STATEMENT:                                           * 00001100
*                                                                     * 00001200
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 00001300
*     THIS MACRO IS "RESTRICTED MATERIALS OF IBM"                     * 00001400
*     5647-A01 (C) COPYRIGHT IBM CORP. 1994, 1997                     * 00001500
*                                                                     * 00001600
* STATUS= JBB6604                                                     * 00001700
*                                                                     * 00001800
*                                                                     * 00001900
*                                                                     * 00002000
*01* FUNCTION:                                                        * 00002100
*                                                                     * 00002200
*      IWMSRSRG will register a server that wishes to participate in  * 00002300
*      sysplex workload balancing. The service allows the caller to   * 00002400
*      identify an address space to be associated with a triplet,     * 00002500
*      corresponding to location name, network id and LU name.  This  * 00002600
*      triplet is expected to be unique across all registered spaces  * 00002700
*      in the sysplex, and in fact should be unique across all        * 00002800
*      networks.  The caller can additionally associate the triplet   * 00002900
*      to a host name.  Host name is optional and if not coded will   * 00003000
*      be set to blanks by the system. A list of eligible servers is  * 00003100
*      made available to IWMSRSRS. These work requests include        * 00003200
*      enclaves owned by the space as well as the address space's     * 00003300
*      activity itself.                                               * 00003400
*                                                                     * 00003500
*      If this macro is issued to register a                          * 00003600
*      LOCATION.NETWORK_ID.LUNAME that already exists on the issuing  * 00003700
*      MVS image, the second registration will be ignored (IWMSRDRS   * 00003800
*      should first be used to deregister the triplet). This          * 00003900
*      condition will be identified through a unique return and       * 00004000
*      reason code.  Due to timing considerations, sysplex-wide       * 00004100
*      uniqueness is not enforced, and so is the responsibility of    * 00004200
*      the caller.                                                    * 00004300
*                                                                     * 00004400
*      After a server registers by issuing this macro, the Sysplex    * 00004500
*      Routing Service (IWMSRSRS) can be issued to return a weighted  * 00004600
*      list of registered servers in the sysplex to which work could  * 00004700
*      be directed.  Alternatively, the Sysplex Routing Service       * 00004800
*      (IWMSRSRS) can be used to obtain a complete list of servers    * 00004900
*      associated with a given location when invoked on a system at   * 00005000
*      OS/390 R3 or higher.  The Sysplex Routing Service (IWMSRSRS)   * 00005100
*      can be used to obtain the userdata associated with each server * 00005200
*      when invoked on a system at OS/390 R3 or higher, though        * 00005300
*      servers resident on an earlier release will be associated with * 00005400
*      userdata which is binary zeroes.  Since the propagation of the * 00005500
*      registration to other systems is asynchronous, a newly         * 00005600
*      registered triplet will not be immediately visible to other    * 00005700
*      systems.                                                       * 00005800
*                                                                     * 00005900
*      A server will be automatically deregistered during job         * 00006000
*      termination or memory termination.                             * 00006100
*                                                                     * 00006200
*01* EXTERNAL CLASSIFICATION:  GUPI                                   * 00006300
*                                                                     * 00006400
*01* END OF EXTERNAL CLASSIFICATION:                                  * 00006500
*                                                                     * 00006600
*01* ENVIRONMENT:                                                     * 00006700
*                                                                     * 00006800
*                                                                     * 00006900
*      Minimum authorization: Problem state with any PSW key.         * 00007000
*                                                                     * 00007100
*      Dispatchable unit mode: Task or SRB mode.                      * 00007200
*                                                                     * 00007300
*      Cross Memory Mode: Any PASN, any HASN, any SASN.               * 00007400
*                                                                     * 00007500
*      AMODE:            31-bit.                                      * 00007600
*                                                                     * 00007700
*      ASC mode:         Primary.                                     * 00007800
*                                                                     * 00007900
*      Interrupt status: Enabled for I/O and external interrupts.     * 00008000
*                                                                     * 00008100
*      Locks:            No locks held.  FRRs may be established.     * 00008200
*                                                                     * 00008300
*      Control parameters: Control parameters must be in the primary  * 00008400
*                        address space.                               * 00008500
*                                                                     * 00008600
*                                                                     * 00008700
*                                                                     * 00008800
*01* PROGRAMMING REQUIREMENTS:                                        * 00008900
*                                                                     * 00009000
*                                                                     * 00009100
*    1.  The macro CVT must be included to use this macro.            * 00009200
*                                                                     * 00009300
*    2.  The macro IWMYCON must be included to use this macro.        * 00009400
*                                                                     * 00009500
*    3.  The macro IWMPB must be in the library concatenation, since  * 00009600
*        it is included by IWMYCON.                                   * 00009700
*                                                                     * 00009800
*    4.  Note that the high order halfword of register 0, and the     * 00009900
*        reason code variable when specified, may be non-zero and     * 00010000
*        represents diagnostic data which is NOT part of the external * 00010100
*        interface.  The high order halfword should thus be excluded  * 00010200
*        from comparison with the reason code values described above. * 00010300
*        The constant, IWMRSNCODE_MASK_CONST defined in IWMYCON, may  * 00010400
*        be used for this purpose.                                    * 00010500
*                                                                     * 00010600
*    5.  All character data, unless otherwise specified, is assumed   * 00010700
*        to be left justified and padded with blanks on the right, as * 00010800
*        needed, to occupy the specified number of bytes.             * 00010900
*                                                                     * 00011000
*                                                                     * 00011100
*                                                                     * 00011200
*01* RESTRICTIONS:                                                    * 00011300
*                                                                     * 00011400
*                                                                     * 00011500
*    1.  This macro may not be used prior to the completion of WLM    * 00011600
*        address space initialization                                 * 00011700
*                                                                     * 00011800
*    2.  This macro may only be used on MVS/ESA SP5.2 or higher       * 00011900
*        levels.  Userdata may only be passed when running on OS/390  * 00012000
*        R3 or higher - when passed to lower level systems the data   * 00012100
*        will be ignored and no return code set to reflect this       * 00012200
*        condition.                                                   * 00012300
*                                                                     * 00012400
*                                                                     * 00012500
*                                                                     * 00012600
*01* INPUT REGISTER INFORMATION:                                      * 00012700
*                                                                     * 00012800
*    Before issuing the IWMSRSRG macro, the caller does not have to   * 00012900
*    place any information into any register unless using it in       * 00013000
*    register notation for a particular parameter, or using it as a   * 00013100
*    base register.                                                   * 00013200
*                                                                     * 00013300
*01* OUTPUT REGISTER INFORMATION:                                     * 00013400
*                                                                     * 00013500
*    When control returns to the caller, the GPRs contain:            * 00013600
*                                                                     * 00013700
*                                                                     * 00013800
*    REGISTER  CONTENTS                                               * 00013900
*                                                                     * 00014000
*    0         Reason code if GR15 return code is non-zero            * 00014100
*                                                                     * 00014200
*    1         Used as work register by the system                    * 00014300
*                                                                     * 00014400
*    2-13      Unchanged                                              * 00014500
*                                                                     * 00014600
*    14        Used as work register by the system                    * 00014700
*                                                                     * 00014800
*    15        Return code                                            * 00014900
*                                                                     * 00015000
*                                                                     * 00015100
*                                                                     * 00015200
*    When control returns to the caller, the ARs contain:             * 00015300
*                                                                     * 00015400
*                                                                     * 00015500
*    REGISTER  CONTENTS                                               * 00015600
*                                                                     * 00015700
*    0-1       Used as work registers by the system                   * 00015800
*                                                                     * 00015900
*    2-13      Unchanged                                              * 00016000
*                                                                     * 00016100
*    14-15     Used as work registers by the system                   * 00016200
*                                                                     * 00016300
*                                                                     * 00016400
*                                                                     * 00016500
*    Some callers depend on register contents remaining the same      * 00016600
*    before and after issuing a service.  If the system changes the   * 00016700
*    contents of registers on which the caller depends, the caller    * 00016800
*    must save them before issuing the service, and restore them      * 00016900
*    after the system returns control.                                * 00017000
*                                                                     * 00017100
*01* PERFORMANCE IMPLICATIONS:                                        * 00017200
*                                                                     * 00017300
*    None                                                             * 00017400
*                                                                     * 00017500
*01* SYNTAX:                                                          * 00017600
*                                                                     * 00017700
*[xlabel]  IWMSRSRG     LOCATION=xlocation                            * 00017800
*                      ,NETWORK_ID=xnetwork_id                        * 00017900
*                      ,LUNAME=xluname                                * 00018000
*                      ,STOKEN=xstoken                                * 00018100
*                     [,USERDATA=xuserdata|NO_USERDATA]             * 00018200
*                     [,HOST=xhost|NO_HOST]                         * 00018300
*                     [,RETCODE=xretcode]                             * 00018400
*                     [,RSNCODE=xrsncode]                             * 00018500
*                     [,PLISTVER=xplistver|IMPLIED_VERSION]         * 00018600
*                    [,MF=S]                                         * 00018700
*                    [,MF=(L,xmfctrl,xmfattr|0D)]                  * 00018800
*                    [,MF=(E,xmfctrl,COMPLETE)]                    * 00018900
*                                                                     * 00019000
*                                                                     * 00019100
*      Where:                                                         * 00019200
*                                                                     * 00019300
*                                                                     * 00019400
*      [xlabel]                                                       * 00019500
*          is an optional symbol, starting in column 1, that is the   * 00019600
*          name on the IWMSRSRG macro invocation.  The name must      * 00019700
*          conform to the rules for an ordinary assembler language    * 00019800
*          symbol.                                                    * 00019900
*          DEFAULT: No name.                                          * 00020000
*                                                                     * 00020100
*                                                                     * 00020200
*                                                                     * 00020300
*                                                                     * 00020400
*      LOCATION(xlocation)                                            * 00020500
*          is the name (RS-type) (or address in register (2)-(12) ASM * 00020600
*          only) of a required 18 character input which contains the  * 00020700
*          server LOCATION associated with the address space to be    * 00020800
*          registered. The value should be padded on the right with   * 00020900
*          blanks for any unused characters.                          * 00021000
*                                                                     * 00021100
*                                                                     * 00021200
*                                                                     * 00021300
*                                                                     * 00021400
*      NETWORK_ID(xnetwork_id)                                        * 00021500
*          is the name (RS-type) (or address in register (2)-(12) ASM * 00021600
*          only) of a required 8 character input which contains the   * 00021700
*          Network ID associated with the address space to be         * 00021800
*          registered.                                                * 00021900
*                                                                     * 00022000
*                                                                     * 00022100
*                                                                     * 00022200
*                                                                     * 00022300
*      LUNAME(xluname)                                                * 00022400
*          is the name (RS-type) (or address in register (2)-(12) ASM * 00022500
*          only) of a required 8 character input which contains the   * 00022600
*          server Logical Unit name associated with the address space * 00022700
*          to be registered.                                          * 00022800
*                                                                     * 00022900
*                                                                     * 00023000
*                                                                     * 00023100
*                                                                     * 00023200
*      STOKEN(xstoken)                                                * 00023300
*          is the name (RS-type) (or address in register (2)-(12) ASM * 00023400
*          only) of a required 64 bit input which contains the Space  * 00023500
*          Token of the server to be registered.                      * 00023600
*                                                                     * 00023700
*                                                                     * 00023800
*                                                                     * 00023900
*                                                                     * 00024000
*      [USERDATA(xuserdata|NO_USERDATA)]                            * 00024100
*          is the name (RS-type) (or address in register (2)-(12) ASM * 00024200
*          only) of an optional 64 character input which contains     * 00024300
*          data meaningful to the user of this service.  This user    * 00024400
*          data is available to caller of the IWMSRSRS service when   * 00024500
*          invoked on a system running OS/390 R3 or higher.           * 00024600
*                                                                     * 00024700
*          Userdata may only be passed via IWMSRSRG when running on   * 00024800
*          OS/390 R3 or higher - when passed to lower level systems   * 00024900
*          the data will be ignored and no return code set to reflect * 00025000
*          this condition.  The format is undefined to MVS.           * 00025100
*          DEFAULT: NO_USERDATA indicates that no user data was       * 00025200
*          passed.                                                    * 00025300
*                                                                     * 00025400
*                                                                     * 00025500
*                                                                     * 00025600
*                                                                     * 00025700
*      [HOST(xhost|NO_HOST)]                                        * 00025800
*          is the name (RS-type) (or address in register (2)-(12) ASM * 00025900
*          only) of an optional 64 character input which contains the * 00026000
*          host name associated with the address space to be          * 00026100
*          registered. The value should be padded on the right with   * 00026200
*          blanks for any unused characters.                          * 00026300
*          DEFAULT: NO_HOST indicates that a host name was not        * 00026400
*          passed.                                                    * 00026500
*                                                                     * 00026600
*                                                                     * 00026700
*                                                                     * 00026800
*                                                                     * 00026900
*      [RETCODE(xretcode)]                                            * 00027000
*          is the name (RS-type) of an optional fullword output       * 00027100
*          variable (or register (2)-(12) ASM only) into which the    * 00027200
*          return code is to be copied from GPR 15.                   * 00027300
*                                                                     * 00027400
*                                                                     * 00027500
*                                                                     * 00027600
*                                                                     * 00027700
*      [RSNCODE(xrsncode)]                                            * 00027800
*          is the name (RS-type) of an optional fullword output       * 00027900
*          variable (or register (2)-(12) ASM only) into which the    * 00028000
*          reason code is to be copied from GPR 0.                    * 00028100
*                                                                     * 00028200
*                                                                     * 00028300
*                                                                     * 00028400
*                                                                     * 00028500
*      [PLISTVER(xplistver|IMPLIED_VERSION)]                        * 00028600
*          is an optional byte input decimal value in the "0-2" range * 00028700
*          that specifies the macro version.  PLISTVER is the only    * 00028800
*          key allowed on the list form of MF and determines which    * 00028900
*          parameter list is generated.  The macro keys associated    * 00029000
*          with each supported version of the macro are listed in     * 00029100
*          MACRO USAGE NOTE 2.  Note that MAX may be specified        * 00029200
*          instead of a number, and the parameter list will be of the * 00029300
*          largest size currently supported. This size may grow from  * 00029400
*          release to release (thus possibly affecting the amount of  * 00029500
*          storage needed by your program).  If your program can      * 00029600
*          tolerate this, IBM recommends that you always specify MAX  * 00029700
*          when creating the list form parameter list as that will    * 00029800
*          ensure that the list form parameter list is always long    * 00029900
*          enough to hold whatever parameters might be specified on   * 00030000
*          the execute form.                                          * 00030100
*          DEFAULT: IMPLIED_VERSION.  When PLISTVER is omitted, the   * 00030200
*          default is the lowest version which allows all of the      * 00030300
*          parameters specified on the invocation to be processed.    * 00030400
*                                                                     * 00030500
*                                                                     * 00030600
*                                                                     * 00030700
*                                                                     * 00030800
*      [MF(S|L|E)]                                                  * 00030900
*          is an optional keyword input which specifies the macro     * 00031000
*          form.                                                      * 00031100
*          DEFAULT: S                                                 * 00031200
*                                                                     * 00031300
*                                                                     * 00031400
*          [MF(S)]                                                    * 00031500
*              specifies the standard form of the macro.  The "S"     * 00031600
*              form generates code to put the parameters into the     * 00031700
*              parameter list and invoke the desired service.  Full   * 00031800
*              checking for required macro keys is done along with    * 00031900
*              supplying defaults for omitted optional parameters.    * 00032000
*              The ?EPILOG macro must be invoked at the end of the    * 00032100
*              module.                                                * 00032200
*                                                                     * 00032300
*              For assembly language code modules, the "S" form       * 00032400
*              generates code to put the parameters into an in-line   * 00032500
*              parameter list and invoke the desired service.  Full   * 00032600
*              checking for required macro keys is done along with    * 00032700
*              supplying defaults for omitted optional parameters.    * 00032800
*                                                                     * 00032900
*          [MF(L,xmfctrl,xmfattr|BDY(DWORD))]                       * 00033000
*              specifies the list form of the macro.  The "L" form    * 00033100
*              defines an area to be used for the parameter list.     * 00033200
*              Only the PLISTVER key may be specified on the          * 00033300
*              invocation.  All other macro parameters are flagged as * 00033400
*              errors.  If PLISTVER is not specified, the original    * 00033500
*              parameter list definition is used.                     * 00033600
*                                                                     * 00033700
*            ,xmfctrl                                                 * 00033800
*              is a required input.  It is the name of a storage area * 00033900
*              for the parameter list.                                * 00034000
*                                                                     * 00034100
*            ,xmfattr|BDY(DWORD)                                    * 00034200
*              is an optional 60 character input string that varies   * 00034300
*              from 1 to 60 characters. Use it to force boundary      * 00034400
*              alignment of the parameter list. Use only 0F or 0D     * 00034500
*              (assembler-only).                                      * 00034600
*              DEFAULT: 0D for Assembler, BDY(DWORD) for PL/X, which  * 00034700
*              forces the parameter list to a doubleword boundary.    * 00034800
*                                                                     * 00034900
*          [MF(E,xmfctrl,COMPLETE)]                                 * 00035000
*              specifies the execute form of the macro.  The "E" form * 00035100
*              generates code to put the parameters into the          * 00035200
*              parameter list specified by xmfctrl and provides full  * 00035300
*              syntax checking with default setting.                  * 00035400
*                                                                     * 00035500
*            ,xmfctrl                                                 * 00035600
*              is a required input.  It is the name (RS-type) (or     * 00035700
*              address in register (1)-(12) ASM only) of a storage    * 00035800
*              area for the parameter list.                           * 00035900
*                                                                     * 00036000
*            ,COMPLETE                                              * 00036100
*              is an optional keyword input which specifies the       * 00036200
*              degree of macro parameter syntax checking.             * 00036300
*              DEFAULT: COMPLETE                                      * 00036400
*                                                                     * 00036500
*                                                                     * 00036600
*              COMPLETE                                               * 00036700
*                  Checking for required macro keys is done and       * 00036800
*                  defaults are supplied for omitted optional         * 00036900
*                  parameters.                                        * 00037000
*                                                                     * 00037100
*                                                                     * 00037200
*                                                                     * 00037300
*                                                                     * 00037400
*                                                                     * 00037500
*                                                                     * 00037600
*                                                                     * 00037700
*01* ABEND CODES:  None.                                              * 00037800
*                                                                     * 00037900
*01* RETURN CODES:                                                    * 00038000
*                                                                     * 00038100
*                                                                     * 00038200
*            0    Name: IwmRetCodeOk                                  * 00038300
*                                                                     * 00038400
*                 Meaning: Successful completion.                     * 00038500
*                                                                     * 00038600
*                 Action: None required.                              * 00038700
*                                                                     * 00038800
*            4    Name: IwmRetCodeWarning                             * 00038900
*                                                                     * 00039000
*                 Meaning: Successful completion, unusual conditions  * 00039100
*                 noted.                                              * 00039200
*                                                                     * 00039300
*                                                                     * 00039400
*                 HEX REASON  MEANING/ACTION                          * 00039500
*                 CODE                                                * 00039600
*                                                                     * 00039700
*                 xxxx0419    Name: IwmRsnCodeServerAlreadyReg        * 00039800
*                                                                     * 00039900
*                             Meaning:  Server already registered.    * 00040000
*                                                                     * 00040100
*                             Action: None required.                  * 00040200
*                                                                     * 00040300
*                                                                     * 00040400
*                                                                     * 00040500
*            8    Name: IwmRetCodeInvocError                          * 00040600
*                                                                     * 00040700
*                 Meaning: Invalid invocation environment or          * 00040800
*                 parameters.                                         * 00040900
*                                                                     * 00041000
*                                                                     * 00041100
*                 HEX REASON  MEANING/ACTION                          * 00041200
*                 CODE                                                * 00041300
*                                                                     * 00041400
*                 xxxx0803    Name: IwmRsnCodeDisabled                * 00041500
*                                                                     * 00041600
*                             Meaning: Caller is disabled.            * 00041700
*                                                                     * 00041800
*                             Action: Avoid requesting this function  * 00041900
*                             while disabled.                         * 00042000
*                                                                     * 00042100
*                 xxxx0804    Name: IwmRsnCodeLocked                  * 00042200
*                                                                     * 00042300
*                             Meaning: Caller is locked.              * 00042400
*                                                                     * 00042500
*                             Action: Avoid requesting this function  * 00042600
*                             while locked.                           * 00042700
*                                                                     * 00042800
*                 xxxx0807    Name: IwmRsnCodeBadSTOKEN               * 00042900
*                                                                     * 00043000
*                             Meaning:  Bad STOKEN passed.            * 00043100
*                                                                     * 00043200
*                             Action: Check for possible storage      * 00043300
*                             overlay.                                * 00043400
*                                                                     * 00043500
*                 xxxx080B    Name: IwmRsnCodeBadPl                   * 00043600
*                                                                     * 00043700
*                             Meaning:  Error accessing parameter     * 00043800
*                             list.                                   * 00043900
*                                                                     * 00044000
*                             Action: Check for possible storage      * 00044100
*                             overlay.                                * 00044200
*                                                                     * 00044300
*                 xxxx0823    Name: IwmRsnCodeDatoff                  * 00044400
*                                                                     * 00044500
*                             Meaning: Caller invoked service while   * 00044600
*                             DATOFF                                  * 00044700
*                                                                     * 00044800
*                             Action: Avoid requesting this function  * 00044900
*                             in this environment.                    * 00045000
*                                                                     * 00045100
*                 xxxx0824    Name: IwmRsnCodeAmode24                 * 00045200
*                                                                     * 00045300
*                             Meaning: Caller invoked service but was * 00045400
*                             in 24 bit addressing mode.              * 00045500
*                                                                     * 00045600
*                             Action: Request this function only when * 00045700
*                             you are in 31 bit addressing mode.      * 00045800
*                                                                     * 00045900
*                 xxxx0825    Name: IwmRsnCodeAscModeNotPrimary       * 00046000
*                                                                     * 00046100
*                             Meaning: Caller invoked service but was * 00046200
*                             not DAT on Primary ASC mode.            * 00046300
*                                                                     * 00046400
*                             Action: Avoid requesting this function  * 00046500
*                             in this environment.                    * 00046600
*                                                                     * 00046700
*                 xxxx0828    Name: IwmRsnCodeBadVersion              * 00046800
*                                                                     * 00046900
*                             Meaning: Version number in parameter    * 00047000
*                             list or version length field is not     * 00047100
*                             valid.  This reason code is only set    * 00047200
*                             when the MVS release is on MVS/ESA      * 00047300
*                             HBB6603 or higher levels.               * 00047400
*                                                                     * 00047500
*                             Action: Check for possible storage      * 00047600
*                             overlay of the parameter list.          * 00047700
*                                                                     * 00047800
*                                                                     * 00047900
*                                                                     * 00048000
*            C    Name: IwmRetCodeEnvError                            * 00048100
*                                                                     * 00048200
*                 Meaning: Environmental error.                       * 00048300
*                                                                     * 00048400
*                                                                     * 00048500
*                 HEX REASON  MEANING/ACTION                          * 00048600
*                 CODE                                                * 00048700
*                                                                     * 00048800
*                 xxxx0C01    Name: IwmRsnCodeNoStg                   * 00048900
*                                                                     * 00049000
*                             Meaning:  Storage is not available for  * 00049100
*                             the request.                            * 00049200
*                                                                     * 00049300
*                             Action: There is a storage shortage.    * 00049400
*                             The function may work successfully at a * 00049500
*                             later time.                             * 00049600
*                                                                     * 00049700
*                                                                     * 00049800
*                                                                     * 00049900
*           10    IwmRetCodeCompError:  Component error (no reason    * 00050000
*                 codes)                                              * 00050100
*                                                                     * 00050200
*                                                                     * 00050300
*                                                                     * 00050400
*                                                                     * 00050500
*                                                                     * 00050600
*01* REASON CODES:                                                    * 00050700
*                                                                     * 00050800
*       A unique reason code will be returned whenever the return     * 00050900
*       code is non-zero.  Reason codes, as appropriate, are defined  * 00051000
*       under their corresponding return code.  Reason code and       * 00051100
*       return code constants are defined within IWMYCON.  Note that  * 00051200
*       the high order halfword of register 0, and the reason code    * 00051300
*       variable when specified, may be non-zero and represents       * 00051400
*       diagnostic data which is NOT part of the external interface.  * 00051500
*       The high order halfword should thus be excluded from          * 00051600
*       comparison with the reason code values described above.  The  * 00051700
*       constant, IWMRSNCODE_MASK_CONST defined in IWMYCON, may be    * 00051800
*       used for this purpose.                                        * 00051900
*                                                                     * 00052000
*01* MODULE TYPE:  ASSEM-PL/AS MACRO                                  * 00052100
*                                                                     * 00052200
*02*   PROCESSOR:  ASSEM-PL/AS                                        * 00052300
*                                                                     * 00052400
*01* COMPONENT:  SCWLM                                                * 00052500
*                                                                     * 00052600
*01* DISTRIBUTION LIBRARY: AMACLIB                                    * 00052700
*                                                                     * 00052800
*01* EXAMPLES:                                                        * 00052900
*                                                                     * 00053000
*    To register an instance of a given location:                     * 00053100
*                                                                     * 00053200
*               IWMSRSRG LOCATION=LOC,NETWORK_ID=NET,LUNAME=LU,       * 00053300
*                        STOKEN=STKN,HOST=HST,                        * 00053400
*                        USERDATA=DATA,RETCODE=RC,RSNCODE=RSN         * 00053500
*      *                                                              * 00053600
*      * Storage areas                                                * 00053700
*      *                                                              * 00053800
*      LOC      DS    CL18            Contains the Location           * 00053900
*      *                              associated with the server      * 00054000
*      *                              instance                        * 00054100
*      NET      DS    CL8             Contains the Network id         * 00054200
*      *                              associated with the server      * 00054300
*      *                              instance                        * 00054400
*      LU       DS    CL8             Contains the LU name            * 00054500
*      *                              associated with the server      * 00054600
*      *                              instance                        * 00054700
*      STKN     DS    CL8             Contains the STOKEN             * 00054800
*      *                              associated with the server      * 00054900
*      *                              instance                        * 00055000
*      DATA     DS    CL64            Contains the user data          * 00055100
*      *                              associated with the server      * 00055200
*      *                              instance                        * 00055300
*      HST      DS    CL64            Contains the Host name          * 00055400
*      *                              associated with the server      * 00055500
*      *                              instance                        * 00055600
*      RC       DS    F               Return code                     * 00055700
*      RSN      DS    F               Reason code                     * 00055800
*                                                                     * 00055900
*                                                                     * 00056000
*01* MACRO USAGE NOTES:                                               * 00056100
*                                                                     * 00056200
*                                                                     * 00056300
*    1.  Printing of the macro expansion is controlled by the ZPRINT  * 00056400
*        global macro variable.  Any value other than 'NO' will       * 00056500
*        result in the macro expansion being printed.  The default is * 00056600
*        'YES'.  The following examples illustrate how the ZPRINT     * 00056700
*        variable should be set.                                      * 00056800
*                                                                     * 00056900
*                    GBLC &ZPRINT                                     * 00057000
*            &ZPRINT SETC 'YES'          &ZPRINT SETC 'NO'            * 00057100
*                                                                     * 00057200
*                                                                     * 00057300
*    2.  The IWMSRSRG macro supports multiple versions. The macro key * 00057400
*        list  below  contains the version level in which the key was * 00057500
*        first  introduced.  Positionals  are  identified by the word * 00057600
*        'Positional'  followed by the numeric value of its position. * 00057700
*        Nested  positionals  are  preceded  by their outer key.  The * 00057800
*        lowest value represents the original version and the highest * 00057900
*        value  represents  the  most  recent version of the IWMSRSRG * 00058000
*        macro.    When  specifying  PLISTVER,  be sure that it is as * 00058100
*        least  as high as the highest version number of all the keys * 00058200
*        being used.                                                  * 00058300
*                                                                     * 00058400
*        VERSION   KEY                                                * 00058500
*                                                                     * 00058600
*              0      LOCATION                                        * 00058700
*                     LUNAME                                          * 00058800
*                     NETWORK_ID                                      * 00058900
*                     STOKEN                                          * 00059000
*              1      USERDATA                                        * 00059100
*              2      HOST                                            * 00059200
*                                                                     * 00059300
*                                                                     * 00059400
*                                                                     * 00059500
*01* CHANGE ACTIVITY:                                                 * 00059600
*                                                                     * 00059700
*   Flag LineItem  FMID    Date   ID    Comment                       * 00059800
*                                                                     * 00059900
*    $L0=ENCLV    HBB5520 940222 PDDD:  Sysplex Router.               * 00060000
*    $L1=WLMP     HBB6603 960220 PD16:  DB2 TCP/IP Support.           * 00060100
*    $L2=WLMPDNS  JBB6604 961031 PDKP:  Host name Support.            * 00060200
****** END OF SPECIFICATIONS *****************************************/ 00060300
*/* TLINE 1 *********************************************************** 00060400
         MACRO                                                          00060500
&XLABEL  IWMSRSRG &LOCATION=,&NETWORK_ID=,&LUNAME=,&STOKEN=,&USERDATA=,*00060600
               &HOST=,&RETCODE=,&RSNCODE=,&PLISTVER=,&MF=               00060700
.*                                                                      00060800
*                MACDATE -09/04/97-<2>                                  00060900
.*                                                                      00061000
.*******************************************************************    00061100
.***AB.02  GLOBAL VARIABLES TO CONTROL PRINT AND CODE GENERATION        00061200
.*******************************************************************    00061300
                GBLC  &ZPRINT     YES=PRINT NO=NO PRINT                 00061400
                GBLC  &ZTEST      YES=TEST NO=NO TEST                   00061500
                GBLC  &ZSYSTEM    PCCODE10, MVS, SAK, VM, XAX           00061600
.*                                                                      00061700
                GBLC  &ZIWMSRSRG  YES=MACRO USED AT LEAST ONCE          00061800
.*******************************************************************    00061900
.***AB.03  COMMONLY USED LOCAL MACRO VARIABLES                          00062000
.*******************************************************************    00062100
                LCLC  &ZMS        ERROR MESSAGE WORK AREA               00062200
                LCLC  &ZCNDX      LAST THREE SYSNDX CHARACTERS          00062300
                LCLC  &ZCLNG      USED WHEN LENGTH IS NEEDED            00062400
                LCLC  &ZCGPR      USED WHEN VALUE IS IN A GPR           00062500
                LCLC  &ZCVAL      USED TO CONTAIN FIXED VALUE           00062600
                LCLA  &ZAWRK      USED AS A WORK AREA                   00062700
                LCLA  &ZASIZ      USED FOR SIZE OF VALUE                00062800
                LCLA  &ZN         NUMERIC WORK VARIABLE                 00062900
                LCLC  &ZC         CHARACTER WORK VARIABLE               00063000
                LCLC  &ZTLC       CHARACTER TOO LONG VARIABLE           00063100
                LCLA  &ZTLA       VALUE TOO LONG VARIABLE               00063200
                LCLA  &ZMACRET    MACRO RETURN CODE                     00063300
&ZMACRET        SETA  0           ASSUME NO ERRORS                      00063400
.*                                                                      00063500
                LCLC  &ZCSYSLIST(255)           NONXKEY, POS ARRAY      00063600
                LCLA  &ZASYSLNDX  WORK INDEX FOR ZCSYSLIST()            00063700
                LCLA  &ZPLLEN     PARAMETER LIST LENGTH                 00063800
                LCLC  &ZENDBASEPL               End of base PL          00063900
                LCLA  &ZPLWORKA   PARAMETER LIST LENGTH                 00064000
.*******************************************************************    00064100
.***AB.04  MACRO VARIABLES FOR RANGES AND SETS OF ARGUMENTS             00064200
.*******************************************************************    00064300
                LCLA  &ZI         INDEX FOR ARRAY                       00064400
                LCLA  &ZJ         INDEX FOR PARMS                       00064500
                LCLA  &ZK         INDEX FOR PARSE                       00064600
                LCLA  &ZLO        LOW RANGE VALUE                       00064700
                LCLA  &ZHI        HIGH RANGE VALUE                      00064800
                LCLC  &ZW         WORK AREA FOR PARM                    00064900
.********************************************************************   00065000
.***AB.05  INVOKE MVS MACROS TO CONTROL CODE GENERATION                 00065100
.********************************************************************   00065200
                GBLC  &SYSSPLV    SP LEVEL 1,2,3 -SPLEVEL               00065300
                GBLC  &SYSASCE    SYSTEM STATE P ANY AR-SYSSTATE        00065400
.*                                                                      00065500
                AIF   (K'&SYSASCE GT 0).ZSYS4   SYS STATE DEFINED       00065600
                AIF   (K'&SYSSPLV GT 0).ZSYS2   SP LEVEL DEFINED        00065700
                SPLEVEL  TEST                                           00065800
.ZSYS2          ANOP  ,                                                 00065900
                AIF   ('&SYSSPLV' EQ '1').ZSYS3  PRE SP 3.1             00066000
                AIF   ('&SYSSPLV' EQ '2').ZSYS3  PRE SP 3.1             00066100
                SYSSTATE TEST                                           00066200
                AGO   .ZSYS4                                            00066300
.ZSYS3          ANOP  ,                                                 00066400
&SYSASCE        SETC  'P'         ASSUME SYSSTATE PRIMARY               00066500
.ZSYS4          ANOP  ,                                                 00066600
.*******************************************************************    00066700
.***AB.07  DEFINE ALL MACRO VARIABLES                                   00066800
.*******************************************************************    00066900
                LCLC  &XLOCATION  ++ NAME                               00067000
                LCLC  &XNETWORK_ID              ++ NAME                 00067100
                LCLC  &XLUNAME    ++ NAME                               00067200
                LCLC  &XSTOKEN    ++ NAME                               00067300
                LCLC  &XUSERDATA  ++ NAME                               00067400
                LCLC  &XHOST      ++ NAME                               00067500
                LCLC  &XRETCODE   ++ NAME                               00067600
                LCLC  &XRSNCODE   ++ NAME                               00067700
                LCLA  &XPLISTVER  ++ VALUE                              00067800
                LCLC  &XMF        ++ VALUE                              00067900
                LCLC  &XMFCTRL    ++ NAME                               00068000
                LCLC  &XMFATTR    ++ VALUE                              00068100
                LCLC  &XMFSCK     ++ VALUE                              00068200
.*******************************************************************    00068300
.***AB.13  DEFINE MACRO VARIABLES FOR INPUT/OUTPUT PROCESSING           00068400
.*******************************************************************    00068500
                LCLC  &ZXLOCATION               ++ INPUT NAME           00068600
                LCLC  &ZXNETWORK_ID             ++ INPUT NAME           00068700
                LCLC  &ZXLUNAME   ++ INPUT NAME                         00068800
                LCLC  &ZXSTOKEN   ++ INPUT NAME                         00068900
                LCLC  &ZXUSERDATA               ++ INPUT NAME           00069000
                LCLC  &ZXHOST     ++ INPUT NAME                         00069100
                LCLC  &ZXRETCODE  ++ OUTPUT NAME                        00069200
                LCLC  &ZXRSNCODE  ++ OUTPUT NAME                        00069300
                LCLC  &ZXPLISTVER               ++ INPUT VALUE          00069400
                LCLC  &ZXMF       ++ INPUT VALUE                        00069500
                LCLC  &ZXMFCTRL   ++ INPUT NAME                         00069600
                LCLC  &ZXMFATTR   ++ INPUT VALUE                        00069700
                LCLC  &ZXMFSCK    ++ INPUT VALUE                        00069800
.********************************************************************   00069900
.***AC.PLV01  PROCESS PLISTVER                                      *   00070000
.********************************************************************   00070100
&XPLISTVER      SETA  0                                                 00070200
                AIF   (K'&PLISTVER(1) LE 0).ZPLV0                       00070300
                AIF   ('&PLISTVER(1)' NE 'MAX').ZPLV0                   00070400
&XPLISTVER      SETA  2                                                 00070500
.ZPLV0          ANOP  ,                                                 00070600
.*                                                                      00070700
                AIF   ('&USERDATA' EQ '').ZPLV1E                        00070800
                AIF   (&XPLISTVER GE 1).ZPLV1E                          00070900
&XPLISTVER      SETA  1                                                 00071000
.ZPLV1E         ANOP  ,                                                 00071100
.*                                                                      00071200
                AIF   ('&HOST' EQ '').ZPLV2E                            00071300
                AIF   (&XPLISTVER GE 2).ZPLV2E                          00071400
&XPLISTVER      SETA  2                                                 00071500
.ZPLV2E         ANOP  ,                                                 00071600
.*                                                                      00071700
                AIF   (K'&PLISTVER(1) LE 0).ZPVCKE                      00071800
                AIF   ('&PLISTVER(1)' EQ 'IMPLIED_VERSION').ZPVCKE      00071900
                AIF   ('&PLISTVER(1)' EQ 'MAX').ZPVCKE                  00072000
.*-------------------------------------------------------------------   00072100
                AIF   (N'&PLISTVER LE 1).ZPVCK3  CK NUM                 00072200
&ZMS            SETC  '"PLISTVER='         *KPOSA* MNOTE                00072300
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00072400
&ZMS            SETC  '&ZMS "PLISTVER"'                                 00072500
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00072600
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00072700
                AGO   .ZPVCK2                                           00072800
.ZPVCK3         ANOP  ,                                                 00072900
.*-------------------------------------------------------------------   00073000
                AIF   ('&PLISTVER'(1,1) NE '(').ZPVCK2                  00073100
&ZMS            SETC  '"PLISTVER='         *KGPRA* MNOTE                00073200
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00073300
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         00073400
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'                 00073500
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00073600
                AGO   .ZPVCKE                                           00073700
.ZPVCK2         ANOP  ,                                                 00073800
.*-------------------------------------------------------------------   00073900
&ZCVAL          SETC  '&PLISTVER(1)'                                    00074000
                AIF   ('&ZCVAL'(1,1) EQ '(').ZPVCKE  IN GPR             00074100
                AIF   (T'&ZCVAL NE 'N').ZPVCK6  NUMERIC ERR             00074200
&ZN             SETA   &PLISTVER(1)        CONVERT TO ARITHMETIC        00074300
                AIF   (&ZN LT 0).ZPVCK6    TOO LOW                      00074400
                AIF   (&ZN LE 2).ZPVCK4A   NOT HIGH                     00074500
.ZPVCK6         ANOP  ,                                                 00074600
&ZMS            SETC  '"PLISTVER='         *KRNGA* MNOTE                00074700
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00074800
&ZMS            SETC  '&ZMS THE RANGE IS "0-2"'                         00074900
                MNOTE 8,' &ZMS FOR ARGUMENT 1.'                         00075000
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00075100
&XPLISTVER      SETA  2                                                 00075200
                AGO   .ZPVCKE                                           00075300
.*-------------------------------------------------------------------   00075400
.ZPVCK4A        ANOP  ,                                                 00075500
                AIF   (&ZN GE &XPLISTVER).ZPVCK4                        00075600
&ZMS            SETC  'PLISTVER='          *KVALA* MNOTE                00075700
&ZMS            SETC  '&ZMS.&PLISTVER(1)'                               00075800
&ZMS            SETC  '&ZMS., BUT PLISTVER OF'                          00075900
&ZMS            SETC  '&ZMS &XPLISTVER'                                 00076000
                MNOTE 8,' &ZMS IS REQUIRED.'                            00076100
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00076200
                AGO   .ZPVCK5                                           00076300
.ZPVCK4         ANOP  ,                                                 00076400
&XPLISTVER      SETA  &PLISTVER(1)                                      00076500
.ZPVCK5         ANOP  ,                                                 00076600
.ZPVCKE         ANOP  ,                                                 00076700
.********************************************************************   00076800
.***AG.MF01 PROCESS MF MACRO FORMS                                      00076900
.********************************************************************   00077000
                ACTR  10000                                             00077100
.*------------------------------------------------------------------    00077200
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00077300
&XMF            SETC  ''          INITIALIZE XVARIABLE                  00077400
.*-------------------------------------------------------------------   00077500
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00077600
.ZG30           ANOP  ,                                                 00077700
&ZTLC           SETC 'S'                                                00077800
                AIF   ('&MF(1)' NE '&ZTLC').ZG31                        00077900
&XMF            SETC  'S'         SET KEYWORD                           00078000
                AIF   (N'&MF LE 1).ZG30A        CK NUM                  00078100
&ZMS            SETC  '"MF='      *KPOSA* MNOTE                         00078200
&ZMS            SETC  '&ZMS.&MF"'                                       00078300
&ZMS            SETC  '&ZMS "MF"'                                       00078400
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00078500
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00078600
.ZG30A          ANOP  ,                                                 00078700
.*-------------------------------------------------------------------   00078800
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00078900
.ZG31           ANOP  ,                                                 00079000
&ZTLC           SETC 'L'                                                00079100
                AIF   ('&MF(1)' NE '&ZTLC').ZG38                        00079200
&XMF            SETC  'L'         SET KEYWORD                           00079300
                AIF   (N'&MF LE 3).ZG31A        CK NUM                  00079400
&ZMS            SETC  '"MF='      *KPOSA* MNOTE                         00079500
&ZMS            SETC  '&ZMS.&MF"'                                       00079600
&ZMS            SETC  '&ZMS "MF"'                                       00079700
                MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'              00079800
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00079900
.ZG31A          ANOP  ,                                                 00080000
.*-------------------------------------------------------------------   00080100
.***AG.KKCTL08 -MF(L) SPECIAL CHECK                                     00080200
                AIF   (N'&SYSLIST NE 0).ZG31B   POSITIONALS?            00080300
                AIF   ('&LOCATION' NE '').ZG31B  KEYS?                  00080400
                AIF   ('&NETWORK_ID' NE '').ZG31B  KEYS?                00080500
                AIF   ('&LUNAME' NE '').ZG31B   KEYS?                   00080600
                AIF   ('&STOKEN' NE '').ZG31B   KEYS?                   00080700
                AIF   ('&USERDATA' NE '').ZG31B  KEYS?                  00080800
                AIF   ('&HOST' NE '').ZG31B     KEYS?                   00080900
                AIF   ('&RETCODE' NE '').ZG31B  KEYS?                   00081000
                AIF   ('&RSNCODE' NE '').ZG31B  KEYS?                   00081100
                AGO    .ZG31C     INVOCATION OKAY                       00081200
.ZG31B          ANOP  ,                                                 00081300
&ZMS            SETC  'THE "L" FORM OF "MF"'    *MFLA* MNOTE            00081400
&ZMS            SETC  '&ZMS CAN ONLY HAVE'                              00081500
&ZMS            SETC  '&ZMS THE "PLISTVER" KEY'                         00081600
                MNOTE 8,' &ZMS SPECIFIED ON THE INVOCATION.'            00081700
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00081800
.ZG31C          ANOP  ,                                                 00081900
.*-------------------------------------------------------------------   00082000
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00082100
&ZXMFCTRL       SETC  'INPUT'     SET IN/OUTPUT                         00082200
&XMFCTRL        SETC  '&MF(2,1)'  SET XVARIABLE                         00082300
                AIF   (N'&MF(2) GT 1).ZG33B     MULTI PARMS             00082400
&XMFCTRL        SETC  '&MF(2)'    SET XVARIABLE                         00082500
.ZG33B          AIF   (K'&MF(2) GT 0).ZG33C                             00082600
&ZXMFCTRL       SETC  ''          RESET IN/OUTPUT                       00082700
&ZMS            SETC  'WHEN "L" IS SPECIFIED'   *KRQDA*                 00082800
&ZMS            SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'               00082900
                MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                      00083000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00083100
.ZG33C          ANOP  ,                                                 00083200
.*-------------------------------------------------------------------   00083300
.***AG.KCK01 NAME, OPT RQD INPUT, POS(2) -GPR NOT ALLOWED               00083400
                AIF   (K'&ZXMFCTRL LE 0).ZG33P  NOT I/O                 00083500
                AIF   ('&XMFCTRL'(1,1) NE '(').ZG33P                    00083600
&ZXMFCTRL       SETC  ''          RESET IN/OUTPUT                       00083700
&ZMS            SETC  '"MF='      *KGPRA* MNOTE                         00083800
&ZMS            SETC  '&ZMS.&MF"'                                       00083900
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         00084000
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 2.'                 00084100
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00084200
.ZG33P          ANOP  ,                                                 00084300
.*-------------------------------------------------------------------   00084400
.***AG.KXVAR13 VALUE, OPT INPUT, POS(3) -XVARIABLE                      00084500
&ZXMFATTR       SETC  'INPUT'     SET IN/OUTPUT                         00084600
&XMFATTR        SETC  '0D'                                              00084700
                AIF   (K'&MF(3) LE 0).ZG36B     PARM                    00084800
&XMFATTR        SETC  '&MF(3,1)'  SET XVARIABLE                         00084900
                AIF   (N'&MF(3) GT 1).ZG36B     MULTI PARMS             00085000
&XMFATTR        SETC  '&MF(3)'    SET XVARIABLE                         00085100
.ZG36B          ANOP  ,                                                 00085200
.*-------------------------------------------------------------------   00085300
.***AG.KCK01 VALUE, OPT INPUT, POS(3) -GPR NOT ALLOWED                  00085400
                AIF   (K'&ZXMFATTR LE 0).ZG36P  NOT I/O                 00085500
                AIF   ('&XMFATTR'(1,1) NE '(').ZG36P                    00085600
&ZXMFATTR       SETC  ''          RESET IN/OUTPUT                       00085700
&ZMS            SETC  '"MF='      *KGPRA* MNOTE                         00085800
&ZMS            SETC  '&ZMS.&MF"'                                       00085900
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         00086000
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 3.'                 00086100
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00086200
.ZG36P          ANOP  ,                                                 00086300
.*-------------------------------------------------------------------   00086400
.***AG.KCK03 VALUE, OPT INPUT, POS(3) -CHARACTER LENGTH                 00086500
                AIF   (K'&ZXMFATTR LE 0).ZG36S  NOT I/O                 00086600
                AIF   (K'&XMFATTR LE 60).ZG36S  LNG OK                  00086700
&ZXMFATTR       SETC  ''          RESET IN/OUTPUT                       00086800
&ZMS            SETC  '"MF='      *KLNGA* MNOTE                         00086900
&ZMS            SETC  '&ZMS.&MF"'                                       00087000
&ZMS            SETC  '&ZMS ARGUMENT 3 EXCEEDS THE MAXIMUM'             00087100
                MNOTE 8,' &ZMS LENGTH OF 60 CHARACTERS.'                00087200
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00087300
.ZG36S          ANOP  ,                                                 00087400
.*-------------------------------------------------------------------   00087500
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00087600
.ZG38           ANOP  ,                                                 00087700
&ZTLC           SETC 'E'                                                00087800
                AIF   ('&MF(1)' NE '&ZTLC').ZG46                        00087900
&XMF            SETC  'E'         SET KEYWORD                           00088000
                AIF   (N'&MF LE 3).ZG38A        CK NUM                  00088100
&ZMS            SETC  '"MF='      *KPOSA* MNOTE                         00088200
&ZMS            SETC  '&ZMS.&MF"'                                       00088300
&ZMS            SETC  '&ZMS "MF"'                                       00088400
                MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'              00088500
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00088600
.ZG38A          ANOP  ,                                                 00088700
.*-------------------------------------------------------------------   00088800
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00088900
&ZXMFCTRL       SETC  'INPUT'     SET IN/OUTPUT                         00089000
&XMFCTRL        SETC  '&MF(2,1)'  SET XVARIABLE                         00089100
                AIF   (N'&MF(2) GT 1).ZG40B     MULTI PARMS             00089200
&XMFCTRL        SETC  '&MF(2)'    SET XVARIABLE                         00089300
.ZG40B          AIF   (K'&MF(2) GT 0).ZG40C                             00089400
&ZXMFCTRL       SETC  ''          RESET IN/OUTPUT                       00089500
&ZMS            SETC  'WHEN "E" IS SPECIFIED'   *KRQDA*                 00089600
&ZMS            SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'               00089700
                MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                      00089800
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00089900
.ZG40C          ANOP  ,                                                 00090000
.*-------------------------------------------------------------------   00090100
.***AG.KCK02 NAME, OPT RQD INPUT, POS(2) -GPR OUT OF RANGE              00090200
                AIF   (K'&ZXMFCTRL LE 0).ZG40R  NOT I/O                 00090300
                AIF   ('&XMFCTRL'(1,1) NE '(').ZG40R                    00090400
&ZCGPR          SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)                        00090500
                AIF   ('&ZCGPR'(1,1) NE '0').ZG40P                      00090600
                AIF   (K'&ZCGPR GT 2).ZG40Q                             00090700
                AIF   ('&ZCGPR' EQ '0').ZG40Q                           00090800
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00090900
                AIF   (T'&ZCGPR NE 'N').ZG40Q   INVALID REG NAME        00091000
.ZG40P          ANOP  ,                                                 00091100
                AIF   (T'&ZCGPR NE 'N').ZG40R   NON NUMERIC             00091200
                AIF   ('&ZCGPR' LT '1').ZG40Q                           00091300
                AIF   ('&ZCGPR' LE '12').ZG40R                          00091400
.ZG40Q          ANOP  ,                                                 00091500
&ZMS            SETC  '"MF='      *KGPRA* MNOTE                         00091600
&ZMS            SETC  '&ZMS.&MF"'                                       00091700
&ZMS            SETC  '&ZMS ARGUMENT 2 MUST SPECIFY A REGISTER'         00091800
                MNOTE 8,' &ZMS IN THE RANGE (1)-(12).'                  00091900
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00092000
.ZG40R          ANOP  ,                                                 00092100
.*-------------------------------------------------------------------   00092200
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00092300
&XMFSCK         SETC  ''          INITIALIZE XVARIABLE                  00092400
.ZG44A   AIF   ('&MF(3)' NE 'COMPLETE').ZG45A                           00092500
&XMFSCK         SETC  'COMPLETE'  SET KEYWORD                           00092600
.*-------------------------------------------------------------------   00092700
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00092800
.ZG45A          AIF   (K'&XMFSCK GT 0).ZG45C    KEYWORD                 00092900
                AIF   (K'&MF(3) LE 0).ZG45B                             00093000
&ZMS            SETC  '"MF='      *KUKWA* MNOTE                         00093100
&ZMS            SETC  '&ZMS.&MF"'                                       00093200
&ZMS            SETC  '&ZMS ARGUMENT 3 IS AN UNKNOWN KEYWORD. '         00093300
&ZMS            SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'               00093400
&ZMS            SETC  '&ZMS "COMPLETE".'        VALID KEYWORD           00093500
                MNOTE 8,' &ZMS '                                        00093600
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00093700
.ZG45B          ANOP  ,                                                 00093800
&XMFSCK         SETC  'COMPLETE'  SET DEFAULT KEYWORD                   00093900
.ZG45C          ANOP  ,                                                 00094000
&ZXMFSCK        SETC  'INPUT'     SET IN/OUTPUT                         00094100
.*------------------------------------------------------------------    00094200
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00094300
.ZG46           ANOP  ,                                                 00094400
&ZXMF           SETC  'INPUT'     SET IN/OUTPUT                         00094500
                AIF   (K'&XMF GT 0).ZG46E       VALID ARG               00094600
                AIF   (T'&MF EQ 'O').ZG46D      OMITTED                 00094700
&ZASYSLNDX      SETA  0                                                 00094800
.ZG46A          ANOP  ,           POSITIONAL MACRO KEY                  00094900
&ZASYSLNDX      SETA  &ZASYSLNDX+1                                      00095000
                AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG46C                  00095100
&ZTLC           SETC 'MF'                                               00095200
                AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG46A         00095300
.ZG46B          ANOP  ,                                                 00095400
&ZXMF           SETC  ''          RESET IN/OUTPUT                       00095500
&ZMS            SETC  'THE "MF" KEY'            *KOPTA* MNOTE           00095600
&ZMS            SETC  '&ZMS MUST CONTAIN ONE'                           00095700
                MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                  00095800
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00095900
                AGO   .ZG46E                                            00096000
.ZG46C          ANOP  ,                                                 00096100
&ZXMF           SETC  ''          RESET IN/OUTPUT                       00096200
&ZMS            SETC  '"MF='      *KUKWA* MNOTE                         00096300
&ZMS            SETC  '&ZMS.&MF"'                                       00096400
&ZMS            SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '         00096500
&ZMS            SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'               00096600
&ZMS            SETC  '&ZMS "S",'               VALID KEYWORD           00096700
&ZMS            SETC  '&ZMS "L",'               VALID KEYWORD           00096800
&ZMS            SETC  '&ZMS OR "E".'            VALID KEYWORD           00096900
                MNOTE 8,' &ZMS '                                        00097000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00097100
                AGO   .ZG46E                                            00097200
.ZG46D          ANOP  ,                                                 00097300
&XMF            SETC  'S'         SET DEFAULT KEYWORD                   00097400
&XMFSCK         SETC  'COMPLETE'  COMPLETE CHECKING                     00097500
.ZG46E          ANOP  ,                                                 00097600
.********************************************************************   00097700
.***AG.MF02  FULL MACRO SYNTAX CHECKING                                 00097800
.********************************************************************   00097900
                ACTR  10000                                             00098000
.*-------------------------------------------------------------------   00098100
.***AG.MF03 MF=(SLE)                                                    00098200
                AIF   ('&XMF' EQ 'L').ZGMFX                             00098300
.*----------------------------------------------------------------***   00098400
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00098500
                AIF   (N'&LOCATION LE 1).ZG2A   CK NUM                  00098600
&ZMS            SETC  '"LOCATION='              *KPOSA* MNOTE           00098700
&ZMS            SETC  '&ZMS.&LOCATION"'                                 00098800
&ZMS            SETC  '&ZMS "LOCATION"'                                 00098900
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00099000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00099100
.ZG2A           ANOP  ,                                                 00099200
.*-------------------------------------------------------------------   00099300
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00099400
&ZXLOCATION     SETC  'INPUT'     SET IN/OUTPUT                         00099500
&XLOCATION      SETC  '&LOCATION(1)'            SET XVARIABLE           00099600
                AIF   (N'&LOCATION GT 1).ZG2B   MULTI PARMS             00099700
&XLOCATION      SETC  '&LOCATION'               SET XVARIABLE           00099800
.ZG2B           AIF   (K'&LOCATION(1) GT 0).ZG2C                        00099900
&ZXLOCATION     SETC  ''          RESET IN/OUTPUT                       00100000
&ZMS            SETC  ' '         *KRQDA*                               00100100
&ZMS            SETC  '&ZMS "LOCATION" KEY AND ITS ARGUMENT'            00100200
                MNOTE 8,' &ZMS ARE REQUIRED.'                           00100300
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00100400
.ZG2C           ANOP  ,                                                 00100500
.*-------------------------------------------------------------------   00100600
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00100700
                AIF   (K'&ZXLOCATION LE 0).ZG2R  NOT I/O                00100800
                AIF   ('&XLOCATION'(1,1) NE '(').ZG2R                   00100900
&ZCGPR          SETC  '&XLOCATION'(2,K'&XLOCATION-2)                    00101000
                AIF   ('&ZCGPR'(1,1) NE '0').ZG2P                       00101100
                AIF   (K'&ZCGPR GT 2).ZG2Q                              00101200
                AIF   ('&ZCGPR' EQ '0').ZG2Q                            00101300
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00101400
                AIF   (T'&ZCGPR NE 'N').ZG2Q    INVALID REG NAME        00101500
.ZG2P           ANOP  ,                                                 00101600
                AIF   (T'&ZCGPR NE 'N').ZG2R    NON NUMERIC             00101700
                AIF   ('&ZCGPR' LT '2').ZG2Q                            00101800
                AIF   ('&ZCGPR' LE '12').ZG2R                           00101900
.ZG2Q           ANOP  ,                                                 00102000
&ZMS            SETC  '"LOCATION='              *KGPRA* MNOTE           00102100
&ZMS            SETC  '&ZMS.&LOCATION"'                                 00102200
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00102300
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  00102400
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00102500
.ZG2R           ANOP  ,                                                 00102600
.*----------------------------------------------------------------***   00102700
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00102800
                AIF   (N'&NETWORK_ID LE 1).ZG5A  CK NUM                 00102900
&ZMS            SETC  '"NETWORK_ID='            *KPOSA* MNOTE           00103000
&ZMS            SETC  '&ZMS.&NETWORK_ID"'                               00103100
&ZMS            SETC  '&ZMS "NETWORK_ID"'                               00103200
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00103300
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00103400
.ZG5A           ANOP  ,                                                 00103500
.*-------------------------------------------------------------------   00103600
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00103700
&ZXNETWORK_ID   SETC  'INPUT'     SET IN/OUTPUT                         00103800
&XNETWORK_ID    SETC  '&NETWORK_ID(1)'          SET XVARIABLE           00103900
                AIF   (N'&NETWORK_ID GT 1).ZG5B  MULTI PARMS            00104000
&XNETWORK_ID    SETC  '&NETWORK_ID'             SET XVARIABLE           00104100
.ZG5B           AIF   (K'&NETWORK_ID(1) GT 0).ZG5C                      00104200
&ZXNETWORK_ID   SETC  ''          RESET IN/OUTPUT                       00104300
&ZMS            SETC  ' '         *KRQDA*                               00104400
&ZMS            SETC  '&ZMS "NETWORK_ID" KEY AND ITS ARGUMENT'          00104500
                MNOTE 8,' &ZMS ARE REQUIRED.'                           00104600
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00104700
.ZG5C           ANOP  ,                                                 00104800
.*-------------------------------------------------------------------   00104900
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00105000
                AIF   (K'&ZXNETWORK_ID LE 0).ZG5R  NOT I/O              00105100
                AIF   ('&XNETWORK_ID'(1,1) NE '(').ZG5R                 00105200
&ZCGPR          SETC  '&XNETWORK_ID'(2,K'&XNETWORK_ID-2)                00105300
                AIF   ('&ZCGPR'(1,1) NE '0').ZG5P                       00105400
                AIF   (K'&ZCGPR GT 2).ZG5Q                              00105500
                AIF   ('&ZCGPR' EQ '0').ZG5Q                            00105600
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00105700
                AIF   (T'&ZCGPR NE 'N').ZG5Q    INVALID REG NAME        00105800
.ZG5P           ANOP  ,                                                 00105900
                AIF   (T'&ZCGPR NE 'N').ZG5R    NON NUMERIC             00106000
                AIF   ('&ZCGPR' LT '2').ZG5Q                            00106100
                AIF   ('&ZCGPR' LE '12').ZG5R                           00106200
.ZG5Q           ANOP  ,                                                 00106300
&ZMS            SETC  '"NETWORK_ID='            *KGPRA* MNOTE           00106400
&ZMS            SETC  '&ZMS.&NETWORK_ID"'                               00106500
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00106600
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  00106700
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00106800
.ZG5R           ANOP  ,                                                 00106900
.*----------------------------------------------------------------***   00107000
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00107100
                AIF   (N'&LUNAME LE 1).ZG8A     CK NUM                  00107200
&ZMS            SETC  '"LUNAME='  *KPOSA* MNOTE                         00107300
&ZMS            SETC  '&ZMS.&LUNAME"'                                   00107400
&ZMS            SETC  '&ZMS "LUNAME"'                                   00107500
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00107600
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00107700
.ZG8A           ANOP  ,                                                 00107800
.*-------------------------------------------------------------------   00107900
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00108000
&ZXLUNAME       SETC  'INPUT'     SET IN/OUTPUT                         00108100
&XLUNAME        SETC  '&LUNAME(1)'              SET XVARIABLE           00108200
                AIF   (N'&LUNAME GT 1).ZG8B     MULTI PARMS             00108300
&XLUNAME        SETC  '&LUNAME'   SET XVARIABLE                         00108400
.ZG8B           AIF   (K'&LUNAME(1) GT 0).ZG8C                          00108500
&ZXLUNAME       SETC  ''          RESET IN/OUTPUT                       00108600
&ZMS            SETC  ' '         *KRQDA*                               00108700
&ZMS            SETC  '&ZMS "LUNAME" KEY AND ITS ARGUMENT'              00108800
                MNOTE 8,' &ZMS ARE REQUIRED.'                           00108900
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00109000
.ZG8C           ANOP  ,                                                 00109100
.*-------------------------------------------------------------------   00109200
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00109300
                AIF   (K'&ZXLUNAME LE 0).ZG8R   NOT I/O                 00109400
                AIF   ('&XLUNAME'(1,1) NE '(').ZG8R                     00109500
&ZCGPR          SETC  '&XLUNAME'(2,K'&XLUNAME-2)                        00109600
                AIF   ('&ZCGPR'(1,1) NE '0').ZG8P                       00109700
                AIF   (K'&ZCGPR GT 2).ZG8Q                              00109800
                AIF   ('&ZCGPR' EQ '0').ZG8Q                            00109900
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00110000
                AIF   (T'&ZCGPR NE 'N').ZG8Q    INVALID REG NAME        00110100
.ZG8P           ANOP  ,                                                 00110200
                AIF   (T'&ZCGPR NE 'N').ZG8R    NON NUMERIC             00110300
                AIF   ('&ZCGPR' LT '2').ZG8Q                            00110400
                AIF   ('&ZCGPR' LE '12').ZG8R                           00110500
.ZG8Q           ANOP  ,                                                 00110600
&ZMS            SETC  '"LUNAME='  *KGPRA* MNOTE                         00110700
&ZMS            SETC  '&ZMS.&LUNAME"'                                   00110800
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00110900
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  00111000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00111100
.ZG8R           ANOP  ,                                                 00111200
.*----------------------------------------------------------------***   00111300
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00111400
                AIF   (N'&STOKEN LE 1).ZG11A    CK NUM                  00111500
&ZMS            SETC  '"STOKEN='  *KPOSA* MNOTE                         00111600
&ZMS            SETC  '&ZMS.&STOKEN"'                                   00111700
&ZMS            SETC  '&ZMS "STOKEN"'                                   00111800
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00111900
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00112000
.ZG11A          ANOP  ,                                                 00112100
.*-------------------------------------------------------------------   00112200
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00112300
&ZXSTOKEN       SETC  'INPUT'     SET IN/OUTPUT                         00112400
&XSTOKEN        SETC  '&STOKEN(1)'              SET XVARIABLE           00112500
                AIF   (N'&STOKEN GT 1).ZG11B    MULTI PARMS             00112600
&XSTOKEN        SETC  '&STOKEN'   SET XVARIABLE                         00112700
.ZG11B          AIF   (K'&STOKEN(1) GT 0).ZG11C                         00112800
&ZXSTOKEN       SETC  ''          RESET IN/OUTPUT                       00112900
&ZMS            SETC  ' '         *KRQDA*                               00113000
&ZMS            SETC  '&ZMS "STOKEN" KEY AND ITS ARGUMENT'              00113100
                MNOTE 8,' &ZMS ARE REQUIRED.'                           00113200
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00113300
.ZG11C          ANOP  ,                                                 00113400
.*-------------------------------------------------------------------   00113500
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00113600
                AIF   (K'&ZXSTOKEN LE 0).ZG11R  NOT I/O                 00113700
                AIF   ('&XSTOKEN'(1,1) NE '(').ZG11R                    00113800
&ZCGPR          SETC  '&XSTOKEN'(2,K'&XSTOKEN-2)                        00113900
                AIF   ('&ZCGPR'(1,1) NE '0').ZG11P                      00114000
                AIF   (K'&ZCGPR GT 2).ZG11Q                             00114100
                AIF   ('&ZCGPR' EQ '0').ZG11Q                           00114200
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00114300
                AIF   (T'&ZCGPR NE 'N').ZG11Q   INVALID REG NAME        00114400
.ZG11P          ANOP  ,                                                 00114500
                AIF   (T'&ZCGPR NE 'N').ZG11R   NON NUMERIC             00114600
                AIF   ('&ZCGPR' LT '2').ZG11Q                           00114700
                AIF   ('&ZCGPR' LE '12').ZG11R                          00114800
.ZG11Q          ANOP  ,                                                 00114900
&ZMS            SETC  '"STOKEN='  *KGPRA* MNOTE                         00115000
&ZMS            SETC  '&ZMS.&STOKEN"'                                   00115100
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00115200
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  00115300
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00115400
.ZG11R          ANOP  ,                                                 00115500
.*----------------------------------------------------------------***   00115600
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00115700
                AIF   (N'&USERDATA LE 1).ZG14A  CK NUM                  00115800
&ZMS            SETC  '"USERDATA='              *KPOSA* MNOTE           00115900
&ZMS            SETC  '&ZMS.&USERDATA"'                                 00116000
&ZMS            SETC  '&ZMS "USERDATA"'                                 00116100
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00116200
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00116300
.ZG14A          ANOP  ,                                                 00116400
.*-------------------------------------------------------------------   00116500
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00116600
&ZXUSERDATA     SETC  'INPUT'     SET IN/OUTPUT                         00116700
&XUSERDATA      SETC  'NO_USERDATA'                                     00116800
                AIF   (K'&USERDATA(1) LE 0).ZG14B  PARM                 00116900
&XUSERDATA      SETC  '&USERDATA(1)'            SET XVARIABLE           00117000
                AIF   (N'&USERDATA GT 1).ZG14B  MULTI PARMS             00117100
&XUSERDATA      SETC  '&USERDATA'               SET XVARIABLE           00117200
.ZG14B          ANOP  ,                                                 00117300
.*-------------------------------------------------------------------   00117400
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00117500
                AIF   (K'&ZXUSERDATA LE 0).ZG14R  NOT I/O               00117600
                AIF   ('&XUSERDATA' EQ 'NO_USERDATA').ZG14R             00117700
                AIF   ('&XUSERDATA'(1,1) NE '(').ZG14R                  00117800
&ZCGPR          SETC  '&XUSERDATA'(2,K'&XUSERDATA-2)                    00117900
                AIF   ('&ZCGPR'(1,1) NE '0').ZG14P                      00118000
                AIF   (K'&ZCGPR GT 2).ZG14Q                             00118100
                AIF   ('&ZCGPR' EQ '0').ZG14Q                           00118200
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00118300
                AIF   (T'&ZCGPR NE 'N').ZG14Q   INVALID REG NAME        00118400
.ZG14P          ANOP  ,                                                 00118500
                AIF   (T'&ZCGPR NE 'N').ZG14R   NON NUMERIC             00118600
                AIF   ('&ZCGPR' LT '2').ZG14Q                           00118700
                AIF   ('&ZCGPR' LE '12').ZG14R                          00118800
.ZG14Q          ANOP  ,                                                 00118900
&ZMS            SETC  '"USERDATA='              *KGPRA* MNOTE           00119000
&ZMS            SETC  '&ZMS.&USERDATA"'                                 00119100
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00119200
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  00119300
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00119400
.ZG14R          ANOP  ,                                                 00119500
.*----------------------------------------------------------------***   00119600
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00119700
                AIF   (N'&HOST LE 1).ZG17A      CK NUM                  00119800
&ZMS            SETC  '"HOST='    *KPOSA* MNOTE                         00119900
&ZMS            SETC  '&ZMS.&HOST"'                                     00120000
&ZMS            SETC  '&ZMS "HOST"'                                     00120100
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00120200
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00120300
.ZG17A          ANOP  ,                                                 00120400
.*-------------------------------------------------------------------   00120500
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00120600
&ZXHOST         SETC  'INPUT'     SET IN/OUTPUT                         00120700
&XHOST          SETC  'NO_HOST'                                         00120800
                AIF   (K'&HOST(1) LE 0).ZG17B   PARM                    00120900
&XHOST          SETC  '&HOST(1)'  SET XVARIABLE                         00121000
                AIF   (N'&HOST GT 1).ZG17B      MULTI PARMS             00121100
&XHOST          SETC  '&HOST'     SET XVARIABLE                         00121200
.ZG17B          ANOP  ,                                                 00121300
.*-------------------------------------------------------------------   00121400
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00121500
                AIF   (K'&ZXHOST LE 0).ZG17R    NOT I/O                 00121600
                AIF   ('&XHOST' EQ 'NO_HOST').ZG17R                     00121700
                AIF   ('&XHOST'(1,1) NE '(').ZG17R                      00121800
&ZCGPR          SETC  '&XHOST'(2,K'&XHOST-2)                            00121900
                AIF   ('&ZCGPR'(1,1) NE '0').ZG17P                      00122000
                AIF   (K'&ZCGPR GT 2).ZG17Q                             00122100
                AIF   ('&ZCGPR' EQ '0').ZG17Q                           00122200
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00122300
                AIF   (T'&ZCGPR NE 'N').ZG17Q   INVALID REG NAME        00122400
.ZG17P          ANOP  ,                                                 00122500
                AIF   (T'&ZCGPR NE 'N').ZG17R   NON NUMERIC             00122600
                AIF   ('&ZCGPR' LT '2').ZG17Q                           00122700
                AIF   ('&ZCGPR' LE '12').ZG17R                          00122800
.ZG17Q          ANOP  ,                                                 00122900
&ZMS            SETC  '"HOST='    *KGPRA* MNOTE                         00123000
&ZMS            SETC  '&ZMS.&HOST"'                                     00123100
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00123200
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  00123300
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00123400
.ZG17R          ANOP  ,                                                 00123500
.*----------------------------------------------------------------***   00123600
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00123700
                AIF   (N'&RETCODE LE 1).ZG20A   CK NUM                  00123800
&ZMS            SETC  '"RETCODE='               *KPOSA* MNOTE           00123900
&ZMS            SETC  '&ZMS.&RETCODE"'                                  00124000
&ZMS            SETC  '&ZMS "RETCODE"'                                  00124100
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00124200
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00124300
.ZG20A          ANOP  ,                                                 00124400
.*-------------------------------------------------------------------   00124500
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00124600
                AIF   (K'&RETCODE(1) LE 0).ZG20C  NO PARM               00124700
&ZXRETCODE      SETC  'OUTPUT'    SET OUTPUT                            00124800
&XRETCODE       SETC  '&RETCODE(1)'             SET XVARIABLE           00124900
                AIF   (N'&RETCODE GT 1).ZG20C                           00125000
&XRETCODE       SETC  '&RETCODE'  SET XVARIABLE                         00125100
.ZG20C          ANOP  ,                                                 00125200
.*-------------------------------------------------------------------   00125300
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00125400
                AIF   (K'&ZXRETCODE LE 0).ZG20R  NOT I/O                00125500
                AIF   ('&XRETCODE'(1,1) NE '(').ZG20R                   00125600
&ZCGPR          SETC  '&XRETCODE'(2,K'&XRETCODE-2)                      00125700
                AIF   ('&ZCGPR'(1,1) NE '0').ZG20P                      00125800
                AIF   (K'&ZCGPR GT 2).ZG20Q                             00125900
                AIF   ('&ZCGPR' EQ '0').ZG20Q                           00126000
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00126100
                AIF   (T'&ZCGPR NE 'N').ZG20Q   INVALID REG NAME        00126200
.ZG20P          ANOP  ,                                                 00126300
                AIF   (T'&ZCGPR NE 'N').ZG20R   NON NUMERIC             00126400
                AIF   ('&ZCGPR' LT '2').ZG20Q                           00126500
                AIF   ('&ZCGPR' LE '12').ZG20R                          00126600
.ZG20Q          ANOP  ,                                                 00126700
&ZMS            SETC  '"RETCODE='               *KGPRA* MNOTE           00126800
&ZMS            SETC  '&ZMS.&RETCODE"'                                  00126900
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00127000
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  00127100
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00127200
.ZG20R          ANOP  ,                                                 00127300
.*----------------------------------------------------------------***   00127400
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00127500
                AIF   (N'&RSNCODE LE 1).ZG23A   CK NUM                  00127600
&ZMS            SETC  '"RSNCODE='               *KPOSA* MNOTE           00127700
&ZMS            SETC  '&ZMS.&RSNCODE"'                                  00127800
&ZMS            SETC  '&ZMS "RSNCODE"'                                  00127900
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00128000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00128100
.ZG23A          ANOP  ,                                                 00128200
.*-------------------------------------------------------------------   00128300
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00128400
                AIF   (K'&RSNCODE(1) LE 0).ZG23C  NO PARM               00128500
&ZXRSNCODE      SETC  'OUTPUT'    SET OUTPUT                            00128600
&XRSNCODE       SETC  '&RSNCODE(1)'             SET XVARIABLE           00128700
                AIF   (N'&RSNCODE GT 1).ZG23C                           00128800
&XRSNCODE       SETC  '&RSNCODE'  SET XVARIABLE                         00128900
.ZG23C          ANOP  ,                                                 00129000
.*-------------------------------------------------------------------   00129100
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00129200
                AIF   (K'&ZXRSNCODE LE 0).ZG23R  NOT I/O                00129300
                AIF   ('&XRSNCODE'(1,1) NE '(').ZG23R                   00129400
&ZCGPR          SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                      00129500
                AIF   ('&ZCGPR'(1,1) NE '0').ZG23P                      00129600
                AIF   (K'&ZCGPR GT 2).ZG23Q                             00129700
                AIF   ('&ZCGPR' EQ '0').ZG23Q                           00129800
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00129900
                AIF   (T'&ZCGPR NE 'N').ZG23Q   INVALID REG NAME        00130000
.ZG23P          ANOP  ,                                                 00130100
                AIF   (T'&ZCGPR NE 'N').ZG23R   NON NUMERIC             00130200
                AIF   ('&ZCGPR' LT '2').ZG23Q                           00130300
                AIF   ('&ZCGPR' LE '12').ZG23R                          00130400
.ZG23Q          ANOP  ,                                                 00130500
&ZMS            SETC  '"RSNCODE='               *KGPRA* MNOTE           00130600
&ZMS            SETC  '&ZMS.&RSNCODE"'                                  00130700
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00130800
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  00130900
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00131000
.ZG23R          ANOP  ,                                                 00131100
.******************************************************************     00131200
.***AH.P00 CHECK STANDALONE POSITIONAL VARIABLES                        00131300
.******************************************************************     00131400
                ACTR  10000                                             00131500
.*----------------------------------------------------------------***   00131600
.***AH.P02 EXTRA POSITIONALS                                            00131700
                AIF   (N'&SYSLIST LE 0).ZGLISTX  NO EXTRAS              00131800
                AIF   (N'&SYSLIST NE 2).ZGLISTX1  NOT NULL              00131900
                AIF   ('&SYSLIST(1)' NE '').ZGLISTX1  NOT NULL          00132000
                AIF   ('&SYSLIST(2)' EQ '').ZGLISTX  NOT NULL           00132100
.ZGLISTX1       ANOP  ,                                                 00132200
&ZCVAL          SETC  ''          ERROR FIELD                           00132300
&ZAWRK          SETA  0           POSITIONAL NUMBER                     00132400
.ZGLIST2        ANOP  ,                                                 00132500
&ZAWRK          SETA  &ZAWRK+1    NEXT POSITIONAL                       00132600
                AIF   (&ZAWRK GT N'&SYSLIST).ZGLIST3  DONE              00132700
&ZCVAL          SETC '&ZCVAL,&SYSLIST(&ZAWRK)'  EXTRA                   00132800
                AGO   .ZGLIST2                                          00132900
.*                                                                      00133000
.ZGLIST3        ANOP  ,                                                 00133100
&ZCVAL          SETC '&ZCVAL'(2,K'&ZCVAL-1)     STRIP COMMA             00133200
&ZMS            SETC  'POSITIONAL ARGUMENT(S),'  *PPOSA* MNOTE          00133300
&ZMS            SETC  '&ZMS "&ZCVAL"'                                   00133400
&ZMS            SETC  '&ZMS CANNOT BE USED.'                            00133500
&ZMS            SETC  '&ZMS NO POSITIONAL ARGUMENTS'                    00133600
                MNOTE 8,' &ZMS ARE ALLOWED.'                            00133700
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00133800
.ZGLISTX        ANOP  ,                                                 00133900
&ZASYSLNDX      SETA  0                                                 00134000
.*-------------------------------------------------------------------   00134100
.***AG.MF04 MF=(SLE)                                                    00134200
.ZGMFX          ANOP  ,           END OF FULL SYNTAX CHECK              00134300
.*******************************************************************    00134400
.***AE.ZMR01 NO CODE GENERATED IF ERRORS DETECTED                       00134500
.*******************************************************************    00134600
                AIF   (&ZMACRET NE 0).ZLX2      ERROR DETECTED          00134700
.*******************************************************************    00134800
.***AE.01  START OF IWMSRSRG MACRO CODE                                 00134900
.*******************************************************************    00135000
                LCLC  &M0M0001                 NAME                     00135100
&M0M0001        SETC  '&XLABEL'                SET NAME                 00135200
                AIF   (K'&XLABEL NE 0).XLAB2                            00135300
&M0M0001        SETC  'M00M&SYSNDX'            DEFAULT NAME             00135400
.*                                                                      00135500
.XLAB2          ANOP  ,                                                 00135600
                AIF   ('&XMF' EQ 'L').XLAB3                             00135700
&M0M0001 DS    0H                             IWMSRSRG-2                00135800
.XLAB3          ANOP  ,                                                 00135900
.*******************************************************************    00136000
.***AE.PR01 PRINT CONTROLS, DEFAULT IS YES                              00136100
.*******************************************************************    00136200
              PUSH  PRINT                                               00136300
                AIF   ('&ZPRINT' NE 'NO').ZPRINTX  TURN PRINT ON        00136400
                PRINT OFF         ++ PR01                               00136500
                AGO   .ZPRNTXX                                          00136600
.ZPRINTX        PRINT ON                                                00136700
.ZPRNTXX        ANOP  ,                                                 00136800
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00136900
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00137000
.********************************************************************   00137100
.***AL.L01 INTERNAL ARRAY TO PRODUCE FORMATTED CODE                     00137200
.********************************************************************   00137300
                      LCLA  &ZOPN          LIST INSTRUCTION INDEX       00137400
                      LCLA  &ZOPN1         INVOCATION INDEX             00137500
                      LCLC  &ZOPL(4095)    LABEL                        00137600
                      LCLC  &ZOPO(4095)    OPERATION                    00137700
                      LCLC  &ZOPV(4095)    VALUE                        00137800
                      LCLC  &ZOPD(4095)    DESCRIPTION                  00137900
.*                                                                      00138000
&ZOPN                 SETA  0              INITIAL INST INDEX VALUE     00138100
.******************************************************************     00138200
.***AL.L10 IWMSRSRG FMT=LIST MF=S|L PARAMETERS                          00138300
.******************************************************************     00138400
                      AIF   ('&XMF' EQ 'L').ZLMFSL2                     00138500
                      AIF   ('&XMF' NE 'S').ZLMFSLX                     00138600
&XMFCTRL              SETC  '#Z'.'&SYSNDX'(1,4).'A'                     00138700
&XMFATTR              SETC  '0D'                                        00138800
.*                                                                      00138900
&ZOPN                 SETA  &ZOPN+1                                     00139000
&ZOPL(&ZOPN)          SETC  ' '                                         00139100
&ZOPO(&ZOPN)          SETC  'B'                                         00139200
&ZOPV(&ZOPN)          SETC  '&XMFCTRL.S'                                00139300
&ZOPD(&ZOPN)          SETC  '++ IWMSRSRG ARG PARMS'                     00139400
.*                                                                      00139500
&ZOPN                 SETA  &ZOPN+1                                     00139600
&ZOPL(&ZOPN)          SETC  ' '                                         00139700
&ZOPO(&ZOPN)          SETC  'SPACE'                                     00139800
&ZOPV(&ZOPN)          SETC  '1'                                         00139900
&ZOPD(&ZOPN)          SETC  ' '                                         00140000
.*                                                                      00140100
.ZLMFSL2              ANOP  ,                                           00140200
.*-------------------------------------------------------------------   00140300
.***AM.L00  IWMSRSRG FMT=LIST name                                      00140400
                      AIF   ('&XMF' NE 'L').ZLMFSL2M                    00140500
&ZOPN                 SETA &ZOPN+1                                      00140600
&ZOPL(&ZOPN)          SETC '&M0M0001'                                   00140700
&ZOPO(&ZOPN)          SETC 'EQU'                                        00140800
&ZOPV(&ZOPN)          SETC '&XMFCTRL'                                   00140900
&ZOPD(&ZOPN)          SETC '++ IWMSRSRG NAME'                           00141000
.ZLMFSL2M             ANOP  ,                                           00141100
.*-------------------------------------------------------------------   00141200
.***AM.L01  IWMSRSRG FMT=LIST PARAMETERS                                00141300
&ZOPN                 SETA &ZOPN+1                                      00141400
&ZOPL(&ZOPN)          SETC '&XMFCTRL'                                   00141500
&ZOPO(&ZOPN)          SETC 'DS'                                         00141600
&ZOPV(&ZOPN)          SETC '&XMFATTR'                                   00141700
&ZOPD(&ZOPN)          SETC '++ IWMSRSRG PARM LIST'                      00141800
.*-------------------------------------------------------------------   00141900
.***AM.L02 XVERSION XL1                                                 00142000
&ZOPN                 SETA &ZOPN+1                                      00142100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XVERSION'                         00142200
&ZOPO(&ZOPN)          SETC 'DS'                                         00142300
&ZOPV(&ZOPN)          SETC 'XL1'                                        00142400
&ZOPD(&ZOPN)          SETC '++ INPUT XVERSION'                          00142500
.*-------------------------------------------------------------------   00142600
.***AM.L09  XLUNAME CL8                                                 00142700
&ZOPN                 SETA &ZOPN+1                                      00142800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XLUNAME'                          00142900
&ZOPO(&ZOPN)          SETC 'DS'                                         00143000
&ZOPV(&ZOPN)          SETC 'CL8'                                        00143100
&ZOPD(&ZOPN)          SETC '++ &ZXLUNAME  XLUNAME'                      00143200
.*-------------------------------------------------------------------   00143300
.***AM.L09  XNETWORK_ID CL8                                             00143400
&ZOPN                 SETA &ZOPN+1                                      00143500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XNETWORK_ID'                      00143600
&ZOPO(&ZOPN)          SETC 'DS'                                         00143700
&ZOPV(&ZOPN)          SETC 'CL8'                                        00143800
&ZOPD(&ZOPN)          SETC '++ &ZXNETWORK_ID  XNETWORK_ID'              00143900
.*-------------------------------------------------------------------   00144000
.***AM.L09  XLOCATION CL18                                              00144100
&ZOPN                 SETA &ZOPN+1                                      00144200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XLOCATION'                        00144300
&ZOPO(&ZOPN)          SETC 'DS'                                         00144400
&ZOPV(&ZOPN)          SETC 'CL18'                                       00144500
&ZOPD(&ZOPN)          SETC '++ &ZXLOCATION  XLOCATION'                  00144600
.*-------------------------------------------------------------------   00144700
.***AM.L09  XSTOKEN BL.64                                               00144800
&ZOPN                 SETA &ZOPN+1                                      00144900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSTOKEN'                          00145000
&ZOPO(&ZOPN)          SETC 'DS'                                         00145100
&ZOPV(&ZOPN)          SETC 'BL.64'                                      00145200
&ZOPD(&ZOPN)          SETC '++ &ZXSTOKEN  XSTOKEN'                      00145300
.*-------------------------------------------------------------------   00145400
.***AM.L09  XRSV001A CL4                                                00145500
&ZOPN                 SETA &ZOPN+1                                      00145600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV001A'                         00145700
&ZOPO(&ZOPN)          SETC 'DS'                                         00145800
&ZOPV(&ZOPN)          SETC 'CL4'                                        00145900
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV001A'                      00146000
.*-------------------------------------------------------------------   00146100
.***AM.MLM2 SAVED LOCATION COUNTER                                      00146200
                      AIF  (&XPLISTVER GE 1).ZL6LA                      00146300
                      AIF  ('&ZENDBASEPL' NE '').ZL6LA                  00146400
&ZENDBASEPL           SETC 'YES'                                        00146500
&ZOPN                 SETA &ZOPN+1                                      00146600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._PL_END'                           00146700
&ZOPO(&ZOPN)          SETC 'EQU'                                        00146800
&ZOPV(&ZOPN)          SETC '*'                                          00146900
&ZOPD(&ZOPN)          SETC '++ END OF BASE PLIST'                       00147000
.ZL6LA                ANOP  ,                                           00147100
.*-------------------------------------------------------------------   00147200
.***AM.LVER1                                                            00147300
                      AIF  (&XPLISTVER LT 1).ZL6L                       00147400
.*-------------------------------------------------------------------   00147500
.*-------------------------------------------------------------------   00147600
.***AM.L09  XRSV002F CL1                                                00147700
&ZOPN                 SETA &ZOPN+1                                      00147800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV002F'                         00147900
&ZOPO(&ZOPN)          SETC 'DS'                                         00148000
&ZOPV(&ZOPN)          SETC 'CL1'                                        00148100
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV002F'                      00148200
.*-------------------------------------------------------------------   00148300
.***AM.LVER2                                                            00148400
.ZL6L                 ANOP  ,                                           00148500
.*-------------------------------------------------------------------   00148600
.*-------------------------------------------------------------------   00148700
.***AM.LVER1                                                            00148800
                      AIF  (&XPLISTVER LT 1).ZL7L                       00148900
.*-------------------------------------------------------------------   00149000
.*-------------------------------------------------------------------   00149100
.***AM.L09  XPLISTLEN XL2                                               00149200
&ZOPN                 SETA &ZOPN+1                                      00149300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XPLISTLEN'                        00149400
&ZOPO(&ZOPN)          SETC 'DS'                                         00149500
&ZOPV(&ZOPN)          SETC 'XL2'                                        00149600
&ZOPD(&ZOPN)          SETC '++ INPUT  XPLISTLEN'                        00149700
.*-------------------------------------------------------------------   00149800
.***AM.LVER2                                                            00149900
.ZL7L                 ANOP  ,                                           00150000
.*-------------------------------------------------------------------   00150100
.*-------------------------------------------------------------------   00150200
.***AM.LVER1                                                            00150300
                      AIF  (&XPLISTVER LT 1).ZL8L                       00150400
.*-------------------------------------------------------------------   00150500
.*-------------------------------------------------------------------   00150600
.***AM.L09  XRSV0032 CL2                                                00150700
&ZOPN                 SETA &ZOPN+1                                      00150800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0032'                         00150900
&ZOPO(&ZOPN)          SETC 'DS'                                         00151000
&ZOPV(&ZOPN)          SETC 'CL2'                                        00151100
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV0032'                      00151200
.*-------------------------------------------------------------------   00151300
.***AM.LVER2                                                            00151400
.ZL8L                 ANOP  ,                                           00151500
.*-------------------------------------------------------------------   00151600
.*-------------------------------------------------------------------   00151700
.***AM.LVER1                                                            00151800
                      AIF  (&XPLISTVER LT 1).ZL9L                       00151900
.*-------------------------------------------------------------------   00152000
.*-------------------------------------------------------------------   00152100
.***AM.L09 ADDR XUSERDATA A                                             00152200
&ZOPN                 SETA &ZOPN+1                                      00152300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XUSERDATA_ADDR'                   00152400
&ZOPO(&ZOPN)          SETC 'DS'                                         00152500
&ZOPV(&ZOPN)          SETC 'A'                                          00152600
&ZOPD(&ZOPN)          SETC '++ &ZXUSERDATA ADDR XUSERDATA'              00152700
.*-------------------------------------------------------------------   00152800
.***AM.LVER2                                                            00152900
.ZL9L                 ANOP  ,                                           00153000
.*-------------------------------------------------------------------   00153100
.*-------------------------------------------------------------------   00153200
.***AM.MLM2 SAVED LOCATION COUNTER                                      00153300
                      AIF  (&XPLISTVER GE 2).ZL10LA                     00153400
                      AIF  ('&ZENDBASEPL' NE '').ZL10LA                 00153500
&ZENDBASEPL           SETC 'YES'                                        00153600
&ZOPN                 SETA &ZOPN+1                                      00153700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._PL_END'                           00153800
&ZOPO(&ZOPN)          SETC 'EQU'                                        00153900
&ZOPV(&ZOPN)          SETC '*'                                          00154000
&ZOPD(&ZOPN)          SETC '++ END OF BASE PLIST'                       00154100
.ZL10LA               ANOP  ,                                           00154200
.*-------------------------------------------------------------------   00154300
.***AM.LVER1                                                            00154400
                      AIF  (&XPLISTVER LT 2).ZL10L                      00154500
.*-------------------------------------------------------------------   00154600
.*-------------------------------------------------------------------   00154700
.***AM.L09 ADDR XHOST A                                                 00154800
&ZOPN                 SETA &ZOPN+1                                      00154900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XHOST_ADDR'                       00155000
&ZOPO(&ZOPN)          SETC 'DS'                                         00155100
&ZOPV(&ZOPN)          SETC 'A'                                          00155200
&ZOPD(&ZOPN)          SETC '++ &ZXHOST ADDR XHOST'                      00155300
.*-------------------------------------------------------------------   00155400
.***AM.LVER2                                                            00155500
.ZL10L                ANOP  ,                                           00155600
.*-------------------------------------------------------------------   00155700
.*-------------------------------------------------------------------   00155800
.***AM.L10 END OF IWMSRSRG LIST PARAMETERS                              00155900
&ZOPN                 SETA &ZOPN+1                                      00156000
&ZOPL(&ZOPN)          SETC '&XMFCTRL.L'                                 00156100
&ZOPO(&ZOPN)          SETC 'EQU'                                        00156200
&ZOPV(&ZOPN)          SETC '*-&XMFCTRL'                                 00156300
&ZOPD(&ZOPN)          SETC '++ LENGTH OF PLIST'                         00156400
.*                                                                      00156500
&ZOPN                 SETA &ZOPN+1                                      00156600
&ZOPL(&ZOPN)          SETC ' '                                          00156700
&ZOPO(&ZOPN)          SETC 'SPACE'                                      00156800
&ZOPV(&ZOPN)          SETC '1'                                          00156900
&ZOPD(&ZOPN)          SETC ' '                                          00157000
.*-------------------------------------------------------------------   00157100
.***AL.L12 IWMSRSRG FMT=LIST MF=S|L PARAMETERS                          00157200
                      AIF   ('&XMF' EQ 'L').ZMFLX  DONE IF MF=L         00157300
.*                                                                      00157400
&ZOPN                 SETA  &ZOPN+1                                     00157500
&ZOPL(&ZOPN)          SETC  '&XMFCTRL.S'                                00157600
&ZOPO(&ZOPN)          SETC  'DC'                                        00157700
&ZOPV(&ZOPN)          SETC  '0H''0'''                                   00157800
&ZOPD(&ZOPN)          SETC  '++ IWMSRSRG ARG PARMS'                     00157900
.*                                                                      00158000
.ZLMFSLX              ANOP  ,                                           00158100
.*-------------------------------------------------------------------   00158200
.***AL.L13 SET ZPLLEN TO ITS APPROPRIATE VALUE                          00158300
&ZPLLEN               SETA 47                                           00158400
.*                                                                      00158500
                      AIF  (&XPLISTVER LT 1).ZLLEN2Z                    00158600
&ZPLLEN               SETA 56                                           00158700
.ZLLEN2Z              ANOP  ,                                           00158800
.*                                                                      00158900
                      AIF  (&XPLISTVER LT 2).ZLLEN3Z                    00159000
&ZPLLEN               SETA 60                                           00159100
.ZLLEN3Z              ANOP  ,                                           00159200
.*                                                                      00159300
.******************************************************************     00159400
.***AI.L01 IWMSRSRG FMT=LIST FILL IN PARAMETER AREA                     00159500
.******************************************************************     00159600
                      ACTR  10000                                       00159700
&ZCVAL                SETC  'LA'           ASSUME XA MODE               00159800
                      AIF   ('&SYSASCE' EQ 'P').ZIMFXA  SYSSTATE PRI    00159900
&ZCVAL                SETC  'LAE'          XAX MODE                     00160000
.ZIMFXA               ANOP ,                                            00160100
.*                                                                      00160200
                      AIF   ('&XMFCTRL'(1,1) NE '(').ZIMFN2  NOT GPR    00160300
&ZCGPR                SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)  GET GPR         00160400
                      AIF   ('&ZCGPR' EQ 'GPR1').ZIMFNX                 00160500
                      AIF   ('&ZCGPR' EQ 'GPR01').ZIMFNX                00160600
                      AIF   ('&ZCGPR' EQ 'REG1').ZIMFNX                 00160700
                      AIF   ('&ZCGPR' EQ 'REG01').ZIMFNX                00160800
                      AIF   ('&ZCGPR' EQ 'R1').ZIMFNX                   00160900
                      AIF   ('&ZCGPR' EQ '1').ZIMFNX                    00161000
                      AIF   ('&ZCGPR' EQ '01').ZIMFNX                   00161100
&ZOPN                 SETA  &ZOPN+1                                     00161200
&ZOPL(&ZOPN)          SETC  ' '                                         00161300
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00161400
&ZOPV(&ZOPN)          SETC  '1,0(,&ZCGPR)'                              00161500
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00161600
                      AGO   .ZIMFNX                                     00161700
.*                                                                      00161800
.ZIMFN2               ANOP ,                                            00161900
&ZOPN                 SETA  &ZOPN+1                                     00162000
&ZOPL(&ZOPN)          SETC  ' '                                         00162100
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00162200
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL'                                00162300
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00162400
.ZIMFNX               ANOP ,                                            00162500
.********************************************************************   00162600
.***AI.L02 IWMSRSRG FMT=LIST INITIALIZE PARAMETER AREA                  00162700
.********************************************************************   00162800
.***AI.L03 MF=(SLE)                                                     00162900
                      AIF   ('&XMF' EQ 'L').ZIMFLX                      00163000
.*                                                                      00163100
&ZOPN                 SETA  &ZOPN+1                                     00163200
&ZOPL(&ZOPN)          SETC  ' '                                         00163300
&ZOPO(&ZOPN)          SETC  'XC'                                        00163400
&ZOPV(&ZOPN)          SETC  '0(&ZPLLEN,1),0(1)'                         00163500
&ZOPD(&ZOPN)          SETC  '++ INITIALIZE'                             00163600
.ZIMFLX               ANOP  ,                                           00163700
.*-------------------------------------------------------------------   00163800
.***AI.L04A XVERSION XL1                                                00163900
                      AIF   (&XPLISTVER EQ 0).ZIMFVW                    00164000
&ZOPN                 SETA  &ZOPN+1                                     00164100
&ZOPL(&ZOPN)          SETC  ' '                                         00164200
&ZOPO(&ZOPN)          SETC  'MVI'                                       00164300
&ZOPV(&ZOPN)          SETC  '0(1),&XPLISTVER'                           00164400
&ZOPD(&ZOPN)          SETC  '++ INPUT XVERSION XL1'                     00164500
.ZIMFVW               ANOP  ,                                           00164600
.*-------------------------------------------------------------------   00164700
.***AI.L25  XLUNAME CL8                                                 00164800
                      AIF   ('&ZXLUNAME' EQ '').ZI2E                    00164900
                      AIF   ('&ZXLUNAME' EQ 'OUTPUT').ZI2E              00165000
&ZCGPR                SETC  '&XLUNAME'                                  00165100
.*                                                                      00165200
                      AIF   ('&XLUNAME'(1,1) NE '(').ZI2B               00165300
&ZCGPR   SETC  '0('.'&XLUNAME'(2,K'&XLUNAME-2).')'                      00165400
.ZI2B                 ANOP  ,                                           00165500
.*                                                                      00165600
&ZOPN                 SETA  &ZOPN+1                                     00165700
&ZOPL(&ZOPN)          SETC  ' '                                         00165800
&ZOPO(&ZOPN)          SETC  'MVC'                                       00165900
&ZOPV(&ZOPN)          SETC  '1(8,1),&ZCGPR'                             00166000
&ZOPD(&ZOPN)          SETC  '++ &ZXLUNAME XLUNAME'                      00166100
.*                                                                      00166200
.ZI2E                 ANOP  ,                                           00166300
.*-------------------------------------------------------------------   00166400
.***AI.L25  XNETWORK_ID CL8                                             00166500
                      AIF   ('&ZXNETWORK_ID' EQ '').ZI3E                00166600
                      AIF   ('&ZXNETWORK_ID' EQ 'OUTPUT').ZI3E          00166700
&ZCGPR                SETC  '&XNETWORK_ID'                              00166800
.*                                                                      00166900
                      AIF   ('&XNETWORK_ID'(1,1) NE '(').ZI3B           00167000
&ZCGPR   SETC  '0('.'&XNETWORK_ID'(2,K'&XNETWORK_ID-2).')'              00167100
.ZI3B                 ANOP  ,                                           00167200
.*                                                                      00167300
&ZOPN                 SETA  &ZOPN+1                                     00167400
&ZOPL(&ZOPN)          SETC  ' '                                         00167500
&ZOPO(&ZOPN)          SETC  'MVC'                                       00167600
&ZOPV(&ZOPN)          SETC  '9(8,1),&ZCGPR'                             00167700
&ZOPD(&ZOPN)          SETC  '++ &ZXNETWORK_ID XNETWORK_ID'              00167800
.*                                                                      00167900
.ZI3E                 ANOP  ,                                           00168000
.*-------------------------------------------------------------------   00168100
.***AI.L25  XLOCATION CL18                                              00168200
                      AIF   ('&ZXLOCATION' EQ '').ZI4E                  00168300
                      AIF   ('&ZXLOCATION' EQ 'OUTPUT').ZI4E            00168400
&ZCGPR                SETC  '&XLOCATION'                                00168500
.*                                                                      00168600
                      AIF   ('&XLOCATION'(1,1) NE '(').ZI4B             00168700
&ZCGPR   SETC  '0('.'&XLOCATION'(2,K'&XLOCATION-2).')'                  00168800
.ZI4B                 ANOP  ,                                           00168900
.*                                                                      00169000
&ZOPN                 SETA  &ZOPN+1                                     00169100
&ZOPL(&ZOPN)          SETC  ' '                                         00169200
&ZOPO(&ZOPN)          SETC  'MVC'                                       00169300
&ZOPV(&ZOPN)          SETC  '17(18,1),&ZCGPR'                           00169400
&ZOPD(&ZOPN)          SETC  '++ &ZXLOCATION XLOCATION'                  00169500
.*                                                                      00169600
.ZI4E                 ANOP  ,                                           00169700
.*-------------------------------------------------------------------   00169800
.***AI.L25  XSTOKEN XL8                                                 00169900
                      AIF   ('&ZXSTOKEN' EQ '').ZI5E                    00170000
                      AIF   ('&ZXSTOKEN' EQ 'OUTPUT').ZI5E              00170100
&ZCGPR                SETC  '&XSTOKEN'                                  00170200
.*                                                                      00170300
                      AIF   ('&XSTOKEN'(1,1) NE '(').ZI5B               00170400
&ZCGPR   SETC  '0('.'&XSTOKEN'(2,K'&XSTOKEN-2).')'                      00170500
                      AGO   .ZI5D                                       00170600
.ZI5B                 ANOP  ,                                           00170700
.*                                                                      00170800
&ZC                   SETC  '&XSTOKEN'(1,1)                             00170900
                      AIF   (T'&ZC NE 'N').ZI5D                         00171000
&ZC                   SETC  '&XSTOKEN'                                  00171100
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI5D                00171200
&ZCGPR                SETC  '=BL8''&XSTOKEN'''                          00171300
.*                                                                      00171400
.ZI5D                 ANOP  ,                                           00171500
.*                                                                      00171600
&ZOPN                 SETA  &ZOPN+1                                     00171700
&ZOPL(&ZOPN)          SETC  ' '                                         00171800
&ZOPO(&ZOPN)          SETC  'MVC'                                       00171900
&ZOPV(&ZOPN)          SETC  '35(8,1),&ZCGPR'                            00172000
&ZOPD(&ZOPN)          SETC  '++ &ZXSTOKEN XSTOKEN'                      00172100
.*                                                                      00172200
.ZI5E                 ANOP  ,                                           00172300
.*-------------------------------------------------------------------   00172400
.***AI.LVER01                                                           00172500
                      AIF  (&XPLISTVER LT 1).ZI7Z                       00172600
.*-------------------------------------------------------------------   00172700
.***AI.LVER02                                                           00172800
.ZI7Z                 ANOP  ,                                           00172900
.*-------------------------------------------------------------------   00173000
.***AI.LVER01                                                           00173100
                      AIF  (&XPLISTVER LT 1).ZI8Z                       00173200
.*-------------------------------------------------------------------   00173300
.***AI.L04 XPLISTLEN XL2                                                00173400
&ZOPN                 SETA  &ZOPN+1                                     00173500
&ZOPL(&ZOPN)          SETC  ' '                                         00173600
&ZOPO(&ZOPN)          SETC  'MVC'                                       00173700
&ZOPV(&ZOPN)          SETC  '48(2,1),=AL2(&ZPLLEN)'                     00173800
&ZOPD(&ZOPN)          SETC  '++ INPUT XPLISTLEN XL2'                    00173900
.*-------------------------------------------------------------------   00174000
.***AI.LVER02                                                           00174100
.ZI8Z                 ANOP  ,                                           00174200
.*-------------------------------------------------------------------   00174300
.***AI.LVER01                                                           00174400
                      AIF  (&XPLISTVER LT 1).ZI9Z                       00174500
.*-------------------------------------------------------------------   00174600
.***AI.LVER02                                                           00174700
.ZI9Z                 ANOP  ,                                           00174800
.*-------------------------------------------------------------------   00174900
.***AI.LVER01                                                           00175000
                      AIF  (&XPLISTVER LT 1).ZI10Z                      00175100
.*-------------------------------------------------------------------   00175200
.***AI.L18 ADDR XUSERDATA A                                             00175300
         AIF   ('&XUSERDATA' NE 'NO_USERDATA').ZI10                     00175400
&ZXUSERDATA           SETC  ''             RESET INPUT/OUTPUT           00175500
.ZI10                 ANOP  ,                                           00175600
.*-------------------------------------------------------------------   00175700
.***AI.L19 ADDR XUSERDATA A                                             00175800
                      AIF   ('&ZXUSERDATA' EQ '').ZI10H                 00175900
&ZCLNG                SETC  '&XUSERDATA'                                00176000
&ZCGPR                SETC  '14'                                        00176100
         AIF   ('&XUSERDATA'(1,1) EQ '(').ZI10F  IN GPR                 00176200
.*                                                                      00176300
&ZOPN                 SETA  &ZOPN+1                                     00176400
&ZOPL(&ZOPN)          SETC  ' '                                         00176500
&ZOPO(&ZOPN)          SETC  'LA'                                        00176600
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00176700
&ZOPD(&ZOPN)          SETC  '++ &ZXUSERDATA XUSERDATA'                  00176800
.*                                                                      00176900
                      AGO   .ZI10G                                      00177000
.*                                                                      00177100
.ZI10F                ANOP  ,                                           00177200
&ZCGPR   SETC  '&XUSERDATA'(2,K'&XUSERDATA-2)                           00177300
.*                                                                      00177400
.ZI10G                ANOP  ,                                           00177500
.*                                                                      00177600
&ZOPN                 SETA  &ZOPN+1                                     00177700
&ZOPL(&ZOPN)          SETC  ' '                                         00177800
&ZOPO(&ZOPN)          SETC  'ST'                                        00177900
&ZOPV(&ZOPN)          SETC  '&ZCGPR,52(,1)'                             00178000
&ZOPD(&ZOPN)          SETC  '++ &ZXUSERDATA XUSERDATA'                  00178100
.*                                                                      00178200
.ZI10H                ANOP  ,                                           00178300
.*-------------------------------------------------------------------   00178400
.***AI.LVER02                                                           00178500
.ZI10Z                ANOP  ,                                           00178600
.*-------------------------------------------------------------------   00178700
.***AI.LVER01                                                           00178800
                      AIF  (&XPLISTVER LT 2).ZI11Z                      00178900
.*-------------------------------------------------------------------   00179000
.***AI.L18 ADDR XHOST A                                                 00179100
         AIF   ('&XHOST' NE 'NO_HOST').ZI11                             00179200
&ZXHOST               SETC  ''             RESET INPUT/OUTPUT           00179300
.ZI11                 ANOP  ,                                           00179400
.*-------------------------------------------------------------------   00179500
.***AI.L19 ADDR XHOST A                                                 00179600
                      AIF   ('&ZXHOST' EQ '').ZI11H                     00179700
&ZCLNG                SETC  '&XHOST'                                    00179800
&ZCGPR                SETC  '14'                                        00179900
         AIF   ('&XHOST'(1,1) EQ '(').ZI11F  IN GPR                     00180000
.*                                                                      00180100
&ZOPN                 SETA  &ZOPN+1                                     00180200
&ZOPL(&ZOPN)          SETC  ' '                                         00180300
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00180400
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00180500
&ZOPD(&ZOPN)          SETC  '++ &ZXHOST XHOST'                          00180600
.*                                                                      00180700
                      AGO   .ZI11G                                      00180800
.*                                                                      00180900
.ZI11F                ANOP  ,                                           00181000
&ZCGPR   SETC  '&XHOST'(2,K'&XHOST-2)                                   00181100
.*                                                                      00181200
.ZI11G                ANOP  ,                                           00181300
.*                                                                      00181400
&ZOPN                 SETA  &ZOPN+1                                     00181500
&ZOPL(&ZOPN)          SETC  ' '                                         00181600
&ZOPO(&ZOPN)          SETC  'ST'                                        00181700
&ZOPV(&ZOPN)          SETC  '&ZCGPR,56(,1)'                             00181800
&ZOPD(&ZOPN)          SETC  '++ &ZXHOST XHOST'                          00181900
.*                                                                      00182000
.ZI11H                ANOP  ,                                           00182100
.*-------------------------------------------------------------------   00182200
.***AI.LVER02                                                           00182300
.ZI11Z                ANOP  ,                                           00182400
.*-------------------------------------------------------------------   00182500
&ZOPN1                SETA &ZOPN                                        00182600
.*******************************************************************    00182700
.***  PROCESS IWMSRSRG OUTPUT PARAMETERS                                00182800
.*******************************************************************    00182900
                      ACTR  10000                                       00183000
.*******************************************************************    00183100
.***AO.X02  RETURN CODE PROCESSING                                      00183200
.*******************************************************************    00183300
                      AIF   (N'&RETCODE LE 0).ZMRETX                    00183400
                      AIF   ('&XRETCODE'(1,1) EQ '(').ZMRET2            00183500
                      AIF   ('&XRETCODE' EQ 'GPR15').ZMRETX             00183600
                      AIF   ('&XRETCODE' EQ 'REG15').ZMRETX             00183700
                      AIF   ('&XRETCODE' EQ 'R15').ZMRETX               00183800
                      AIF   ('&XRETCODE' EQ '15').ZMRETX                00183900
&ZOPN                 SETA  &ZOPN+1                                     00184000
&ZOPL(&ZOPN)          SETC  ' '                                         00184100
&ZOPO(&ZOPN)          SETC  'ST'                                        00184200
&ZOPV(&ZOPN)          SETC  '15,&XRETCODE'                              00184300
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00184400
                      AGO   .ZMRETX                                     00184500
.*                                                                      00184600
.ZMRET2               ANOP  ,                                           00184700
&ZCGPR                SETC  '&XRETCODE'(2,K'&XRETCODE-2)                00184800
                      AIF   ('&ZCGPR' EQ 'GPR15').ZMRETX                00184900
                      AIF   ('&ZCGPR' EQ 'REG15').ZMRETX                00185000
                      AIF   ('&ZCGPR' EQ 'R15').ZMRETX                  00185100
                      AIF   ('&ZCGPR' EQ '15').ZMRETX                   00185200
&ZOPN                 SETA  &ZOPN+1                                     00185300
&ZOPL(&ZOPN)          SETC  ' '                                         00185400
&ZOPO(&ZOPN)          SETC  'LR'                                        00185500
&ZOPV(&ZOPN)          SETC  '&ZCGPR,15'                                 00185600
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00185700
.ZMRETX               ANOP  ,                                           00185800
.*******************************************************************    00185900
.***AO.X03  REASON CODE PROCESSING                                      00186000
.*******************************************************************    00186100
                      AIF   (N'&RSNCODE LE 0).ZMRSNX                    00186200
                      AIF   ('&XRSNCODE'(1,1) EQ '(').ZMRSN2            00186300
                      AIF   ('&XRSNCODE' EQ 'GPR0').ZMRSNX              00186400
                      AIF   ('&XRSNCODE' EQ 'GPR00').ZMRSNX             00186500
                      AIF   ('&XRSNCODE' EQ 'REG0').ZMRSNX              00186600
                      AIF   ('&XRSNCODE' EQ 'REG00').ZMRSNX             00186700
                      AIF   ('&XRSNCODE' EQ 'R0').ZMRSNX                00186800
                      AIF   ('&XRSNCODE' EQ '0').ZMRSNX                 00186900
                      AIF   ('&XRSNCODE' EQ '00').ZMRSNX                00187000
&ZOPN                 SETA  &ZOPN+1                                     00187100
&ZOPL(&ZOPN)          SETC  ' '                                         00187200
&ZOPO(&ZOPN)          SETC  'ST'                                        00187300
&ZOPV(&ZOPN)          SETC  '0,&XRSNCODE'                               00187400
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00187500
                      AGO   .ZMRSNX                                     00187600
.*                                                                      00187700
.ZMRSN2               ANOP  ,                                           00187800
&ZCGPR                SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                00187900
                      AIF   ('&ZCGPR' EQ 'GPR0').ZMRSNX                 00188000
                      AIF   ('&ZCGPR' EQ 'GPR00').ZMRSNX                00188100
                      AIF   ('&ZCGPR' EQ 'REG0').ZMRSNX                 00188200
                      AIF   ('&ZCGPR' EQ 'REG00').ZMRSNX                00188300
                      AIF   ('&ZCGPR' EQ 'R0').ZMRSNX                   00188400
                      AIF   ('&ZCGPR' EQ '0').ZMRSNX                    00188500
                      AIF   ('&ZCGPR' EQ '00').ZMRSNX                   00188600
&ZOPN                 SETA  &ZOPN+1                                     00188700
&ZOPL(&ZOPN)          SETC  ' '                                         00188800
&ZOPO(&ZOPN)          SETC  'LR'                                        00188900
&ZOPV(&ZOPN)          SETC  '&ZCGPR,0'                                  00189000
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00189100
.ZMRSNX               ANOP  ,                                           00189200
.*******************************************************************    00189300
.***AO.X04  LABEL FOR MF=L PROCESSING                                   00189400
.*******************************************************************    00189500
.ZMFLX                ANOP  ,              MF=L PROCESSING              00189600
.*******************************************************************    00189700
.***AO.X05  FORMAT GENERATED INSTRUCTIONS                               00189800
.*******************************************************************    00189900
                      ACTR  10000                                       00190000
.*                                                                      00190100
                      LCLA  &ZLC           COLUMN POSITION              00190200
                      LCLA  &ZOPX          LIST TABLE INDEX             00190300
                      LCLC  &ZLL           LABEL                        00190400
                      LCLC  &ZLOP          OPERATION                    00190500
                      LCLC  &ZLV           VALUE                        00190600
                      LCLC  &ZLD           DESCRIPTION                  00190700
.*                                                                      00190800
&ZOPX                 SETA  1                                           00190900
.ZL2                  AIF   (&ZOPX GT &ZOPN1).ZLX  B IF DONE            00191000
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00191100
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00191200
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00191300
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00191400
                      AIF   (K'&ZLD LE 0).ZL5                           00191500
&ZLC                  SETA  35             COMMENT COLUMN               00191600
                      AIF   ('&ZLD'(1,1) NE '*').ZL3                    00191700
&ZLC                  SETA  33             COMMMENT COLUMN              00191800
.ZL3                  AIF   (K'&ZLV GE &ZLC-16-1).ZL4                   00191900
&ZLV                  SETC  '&ZLV'.' '                                  00192000
                      AGO   .ZL3                                        00192100
.*                                                                      00192200
.ZL4                  ANOP  ,                                           00192300
&ZLV                  SETC  '&ZLV'.' '                                  00192400
.ZL5                  ANOP  ,                                           00192500
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00192600
.*                                                                      00192700
&ZLL     &ZLOP &ZLV                                                     00192800
.*                                                                      00192900
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00193000
                      AGO   .ZL2           CONTINUE LOOPING             00193100
.*                                                                      00193200
.ZLX                  ANOP  ,                                           00193300
                      AIF   ('&XMF' EQ 'L').ZLINKX  MF=L                00193400
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00193500
         L     14,16(0,0)              GET CVT ADDRESS                  00193600
         L     14,772(14,0)            GET SFT ADDRESS                  00193700
         L     14,380(14,0)            GET LX FOR SERVICE ROUTINE       00193800
         LA    15,28                   GET EX FOR SERVICE ROUTINE       00193900
         OR    14,15                   GET PC NUMBER                    00194000
         PC    0(14)                                                    00194100
END&SYSNDX DS    0H                    END LABEL                        00194200
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00194300
.ZLINKX               ANOP  ,                                           00194400
.*******************************************************************    00194500
.***AP.X01  FORMAT GENERATED CODE                                       00194600
.ZL21                 AIF   (&ZOPX GT &ZOPN).ZLX1  B IF DONE            00194700
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00194800
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00194900
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00195000
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00195100
                      AIF   (K'&ZLD LE 0).ZL51                          00195200
&ZLC                  SETA  35             COMMENT COLUMN               00195300
                      AIF   ('&ZLD'(1,1) NE '*').ZL31                   00195400
&ZLC                  SETA  33             COMMENT COLUMN               00195500
.ZL31                 AIF   (K'&ZLV GE &ZLC-16-1).ZL41                  00195600
&ZLV                  SETC  '&ZLV'.' '                                  00195700
                      AGO   .ZL31                                       00195800
.*                                                                      00195900
.ZL41                 ANOP  ,                                           00196000
&ZLV                  SETC  '&ZLV'.' '                                  00196100
.ZL51                 ANOP  ,                                           00196200
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00196300
.*                                                                      00196400
&ZLL     &ZLOP &ZLV                                                     00196500
.*                                                                      00196600
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00196700
                      AGO   .ZL21          CONTINUE LOOPING             00196800
.*                                                                      00196900
.ZLX1                 ANOP  ,                                           00197000
.*******************************************************************    00197100
.***AP.X02  END OF IWMSRSRG MACRO                                       00197200
&ZIWMSRSRG            SETC  'YES'          SET IWMSRSRG USED            00197300
         POP   PRINT                                                    00197400
*                                            IWMSRSRG-2                 00197500
         SPACE 1                                                        00197600
.ZLX2                 ANOP  ,                                           00197700
         MEND                                                           00197800
**********************************************************************/ 00197900
*/**** START OF SPECIFICATIONS **************************************** 00198000
*                                                                     * 00198100
*                                                                     * 00198200
*01* MACRO NAME:  IWMSRSRG                              -09/04/97-<2> * 00198300
*                                                                     * 00198400
*                                                                     * 00198500
*01* DESCRIPTIVE NAME:  Sysplex Routing Registration                  * 00198600
*                                                                     * 00198700
*01* PROPRIETARY STATEMENT:                                           * 00198800
*                                                                     * 00198900
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 00199000
*     THIS MACRO IS "RESTRICTED MATERIALS OF IBM"                     * 00199100
*     5647-A01 (C) COPYRIGHT IBM CORP. 1994, 1997                     * 00199200
*                                                                     * 00199300
* STATUS= JBB6604                                                     * 00199400
*                                                                     * 00199500
*                                                                     * 00199600
*                                                                     * 00199700
*01* FUNCTION:                                                        * 00199800
*       See the IWMSRSRG macro prologue for details.                  * 00199900
*                                                                     * 00200000
*01* INPUT:                                                           * 00200100
*                                                                     * 00200200
*            ?IWMSRSRG     LOCATION(xlocation)                        * 00200300
*                          NETWORK_ID(xnetwork_id)                    * 00200400
*                          LUNAME(xluname)                            * 00200500
*                          STOKEN(xstoken)                            * 00200600
*                         [USERDATA(xuserdata|NO_USERDATA)]         * 00200700
*                         [HOST(xhost|NO_HOST)]                     * 00200800
*                         [RETCODE(xretcode)]                         * 00200900
*                         [RSNCODE(xrsncode)]                         * 00201000
*                         [PLISTVER(xplistver|IMPLIED_VERSION)]     * 00201100
*                        [MF(S)]                                     * 00201200
*                        [MF(L,xmfctrl,xmfattr|BDY(DWORD))]        * 00201300
*                        [MF(E,xmfctrl,COMPLETE)]                  * 00201400
*                                                                     * 00201500
****** END OF SPECIFICATIONS *****************************************/ 00201600
*/*PB.ECHO01 MACRO INVOCATION ECHO-----------------------------------*/ 00201700
*  ANS('@SPACE;') NORESCAN COL(MACLMAR);                                00201800
*  ANS('/* ? IWMSRSRG '||MACLIST||' ')                                  00201900
*      NORESCAN COL(MACLMAR+5);    /* START ECHO */                     00202000
*                                                                       00202100
*  DCL ZELO  FIXED;                                                     00202200
*  DCL ZECOL FIXED;                                                     00202300
*                                                                       00202400
*  ZELO=1;     /* STARTING COLUMN */                                    00202500
*  DO WHILE ZELO<=LENGTH(MACKEYS);  /* PARENTHSIS SCAN */               00202600
*    ZECOL=INDEX(MACKEYS(ZELO:LENGTH(MACKEYS)),')');                    00202700
*    IF ZECOL>0                                                         00202800
*      THEN                                                             00202900
*        DO;   /* PARENTHESIS FOUND */                                  00203000
*          ANS(MACKEYS(ZELO:ZELO+ZECOL-1)||' ')                         00203100
*             NORESCAN COL(MACLMAR+5);                                  00203200
*          ZELO=ZELO+ZECOL;        /* NEXT PORTION */                   00203300
*        END;                                                           00203400
*      ELSE                                                             00203500
*        DO;   /* REMAINING KEYS */                                     00203600
*          ANS(MACKEYS(ZELO:LENGTH(MACKEYS)))                           00203700
*             NORESCAN COL(MACLMAR+5);                                  00203800
*          ZELO=LENGTH(MACKEYS)+1;                                      00203900
*        END;                                                           00204000
*  END;                                                                 00204100
*  ANS(' -09/04/97-2- */')                                              00204200
*      NORESCAN COL(MACLMAR+5);    /* END ECHO */                       00204300
*/********************************************************************/ 00204400
*/*PV.DCL01 MACRO DECLARES AND CODE GENERATION CONTROLS              */ 00204500
*/********************************************************************/ 00204600
*  DCL ZPRINT  EXTERNAL; DEACT ZPRINT; /* YES=PRINT, NO=NO PRINT     */ 00204700
*  DCL ZTEST   EXTERNAL; DEACT ZTEST;  /* YES=TEST, NO=NO TEST       */ 00204800
*  DCL ZSYSTEM EXTERNAL; DEACT ZSYSTEM;/* PCCODE10, MVS, SAK, VM     */ 00204900
*                                                                       00205000
*  DCL   ZIWMSRSRG CHAR EXTERNAL; /* YES=USED AT LEAST ONCE          */ 00205100
*  DEACT ZIWMSRSRG;                                                     00205200
*                                                                       00205300
*  DCL ZMACRET FIXED; DEACT ZMACRET;                                    00205400
*  ZMACRET=0;                   /* MACRO COMPILE RETURN CODE         */ 00205500
*                                                                       00205600
*  DCL ZMS CHAR;   DEACT ZMS;   /* ERROR MESSAGE                     */ 00205700
*  DCL ZCVAL CHAR; DEACT ZCVAL; /* ERROR MESSAGE WORK AREA           */ 00205800
*                                                                       00205900
*  DCL ZI FIXED;  DEACT ZI;     /* INDEX FOR VARIABLE NUM OF PARMS   */ 00206000
*  DCL ZJ FIXED;  DEACT ZJ;     /* INDEX FOR VARIABLE NUM OF PARMS   */ 00206100
*  DCL ZK FIXED;  DEACT ZK;     /* INDEX FOR RANGE COLON (:)         */ 00206200
*  DCL ZL FIXED;  DEACT ZL;     /* INDEX FOR RANGE VALUE CHECKING    */ 00206300
*  DCL ZLO FIXED; DEACT ZLO;    /* LOW RANGE VALUE                   */ 00206400
*  DCL ZHI FIXED; DEACT ZHI;    /* HIGH RANGE VALUE                  */ 00206500
*  DCL ZW CHAR;   DEACT ZW;     /* WORK AREA FOR RANGE VALUE SUBLIST */ 00206600
*  DCL ZN FIXED;  DEACT ZN;     /* NUMERIC WORK VARIABLE             */ 00206700
*  DCL ZC CHAR;   DEACT ZC;     /* CHARACTER WORK VARIABLE           */ 00206800
*  DCL ZMAXINVOCLEN FIXED; DEACT ZMAXINVOCLEN;  /* INVOCATION LENGTH */ 00206900
*  DCL ZPLLEN FIXED; DEACT ZPLLEN;        /* PARAMETER LIST LENGTH   */ 00207000
*                                                                       00207100
*  DCL ZPRMMAX FIXED;           /* MAXIMUM PARM LIST SIZE            */ 00207200
*  DCL ZPRMNUM FIXED;           /* PARAMETER ARRAY INDEX             */ 00207300
*  DCL ZPRM(100);               /* PARAMETER ENTRY                   */ 00207400
*  DCL EHAMAXLEN FIXED EXTERNAL;   /* MAX ILIST SIZE FOR PARM LISTS  */ 00207500
*  DCL EHAREGS CHARACTER EXTERNAL; /* REG DCLS                       */ 00207600
*  DCL EHALIST CHARACTER EXTERNAL; /* STANDARD PARM LIST GENERATION  */ 00207700
*/*******************************************************************/  00207800
*/*PV.XVAR01 DECLARE ALL MACRO PARAMETER VARIABLES                  */  00207900
*/*******************************************************************/  00208000
*  DCL XLOCATION;  DEACT XLOCATION;  /***PV.XVAR02 INPUT NAME */        00208100
*  DCL ZXLOCATION; DEACT ZXLOCATION;  /***INPUT/OUTPUT CONTROL */       00208200
*  DCL   XNETWORK_ID;              /***PV.XVAR03 INPUT NAME */          00208300
*  DEACT XNETWORK_ID;              /***PV.XVAR03 INPUT NAME */          00208400
*  DCL   ZXNETWORK_ID;             /***INPUT/OUTPUT CONTROL */          00208500
*  DEACT ZXNETWORK_ID;             /***INPUT/OUTPUT CONTROL */          00208600
*  DCL XLUNAME;  DEACT XLUNAME;    /***PV.XVAR02 INPUT NAME */          00208700
*  DCL ZXLUNAME; DEACT ZXLUNAME;   /***INPUT/OUTPUT CONTROL */          00208800
*  DCL XSTOKEN;  DEACT XSTOKEN;    /***PV.XVAR02 INPUT NAME */          00208900
*  DCL ZXSTOKEN; DEACT ZXSTOKEN;   /***INPUT/OUTPUT CONTROL */          00209000
*  DCL XUSERDATA;  DEACT XUSERDATA;  /***PV.XVAR02 INPUT NAME */        00209100
*  DCL ZXUSERDATA; DEACT ZXUSERDATA;  /***INPUT/OUTPUT CONTROL */       00209200
*  DCL XHOST;  DEACT XHOST;        /***PV.XVAR02 INPUT NAME */          00209300
*  DCL ZXHOST; DEACT ZXHOST;       /***INPUT/OUTPUT CONTROL */          00209400
*  DCL XRETCODE;  DEACT XRETCODE;  /***PV.XVAR02 OUTPUT NAME */         00209500
*  DCL ZXRETCODE; DEACT ZXRETCODE;  /***INPUT/OUTPUT CONTROL */         00209600
*  DCL XRSNCODE;  DEACT XRSNCODE;  /***PV.XVAR02 OUTPUT NAME */         00209700
*  DCL ZXRSNCODE; DEACT ZXRSNCODE;  /***INPUT/OUTPUT CONTROL */         00209800
*  DCL XPLISTVER FIXED;  DEACT XPLISTVER;  /***PV.XVAR02 INPUT VALUE */ 00209900
*  DCL ZXPLISTVER; DEACT ZXPLISTVER;  /***INPUT/OUTPUT CONTROL */       00210000
*  DCL XMF;  DEACT XMF;            /***PV.XVAR02 INPUT VALUE */         00210100
*  DCL ZXMF; DEACT ZXMF;           /***INPUT/OUTPUT CONTROL */          00210200
*  DCL XMFCTRL;  DEACT XMFCTRL;    /***PV.XVAR02 INPUT NAME */          00210300
*  DCL ZXMFCTRL; DEACT ZXMFCTRL;   /***INPUT/OUTPUT CONTROL */          00210400
*  DCL XMFATTR;  DEACT XMFATTR;    /***PV.XVAR02 INPUT VALUE */         00210500
*  DCL ZXMFATTR; DEACT ZXMFATTR;   /***INPUT/OUTPUT CONTROL */          00210600
*  DCL XMFSCK;  DEACT XMFSCK;      /***PV.XVAR02 INPUT VALUE */         00210700
*  DCL ZXMFSCK; DEACT ZXMFSCK;     /***INPUT/OUTPUT CONTROL */          00210800
*/********************************************************************/ 00210900
*/***PC.PLV01  PROCESS PLISTVER                                      */ 00211000
*/********************************************************************/ 00211100
*  IF TRANSLATE(PLISTVER(1)) = 'MAX' THEN                               00211200
*    XPLISTVER=2;                                                       00211300
*  ELSE                                                                 00211400
*    XPLISTVER=0;                                                       00211500
*  IF USERDATA^='' & XPLISTVER<1                                        00211600
*    THEN                                                               00211700
*      XPLISTVER=1;                                                     00211800
*  IF HOST^='' & XPLISTVER<2                                            00211900
*    THEN                                                               00212000
*      XPLISTVER=2;                                                     00212100
*  IF PLISTVER^=''                                                      00212200
*     & TRANSLATE(PLISTVER(1))^='IMPLIED_VERSION'                       00212300
*     & TRANSLATE(PLISTVER(1))^='MAX'                                   00212400
*    THEN                                                               00212500
*      DO;                                                              00212600
*                                                                       00212700
*        ZCVAL='';                           /* ERROR FLAG */           00212800
*        IF PLISTVER='PLISTVER' | PLISTVER='()'  /*CHECK ENTRY*/        00212900
*          THEN                                                         00213000
*            DO;                                                        00213100
*              ZMS=' 8, THE "PLISTVER" KEY'|| /**KOPTP* MSG*/           00213200
*                  ' MUST CONTAIN ONE'||                                00213300
*                  ' (OR MORE) ARGUMENT(S).';                           00213400
*              ANS MSG('?IWMSRSRG ---> '||ZMS);                         00213500
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          00213600
*              ZMACRET=8;                    /* MACRO ERROR */          00213700
*              ZCVAL='NO_ARGUMENT';                                     00213800
*            END;                                                       00213900
*        IF NUMBER(PLISTVER)>1               /* CHECK POSITIONALS */    00214000
*          THEN                                                         00214100
*            DO;                                                        00214200
*              ZMS=' 8, "PLISTVER'||         /**KPOSP* MSG*/            00214300
*                  PLISTVER||                                           00214400
*                  '" "PLISTVER"'||                                     00214500
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        00214600
*              ANS MSG('?IWMSRSRG ---> '||ZMS);                         00214700
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          00214800
*              ZMACRET=8;                    /* MACRO ERROR */          00214900
*            END;                                                       00215000
*                                                                       00215100
*        ZC=PLISTVER(1);                                                00215200
*        DO ZL=1 TO LENGTH(ZC);              /* MUST BE NUMBER */       00215300
*          IF ZC(ZL:ZL)<'0' |                /* MUST BE NUMERIC */      00215400
*             ZC(ZL:ZL)>'9'                  /* MUST BE NUMERIC */      00215500
*            THEN                                                       00215600
*              ZCVAL='NUMERIC';              /* NUMERIC ERROR */        00215700
*        END;                                                           00215800
*        IF ZCVAL=''                                                    00215900
*          THEN                                                         00216000
*            DO;                             /* CHECK RANGE LIMITS */   00216100
*            IF FIXED(PLISTVER(1))>=XPLISTVER                           00216200
*              THEN                                                     00216300
*                XPLISTVER=FIXED(PLISTVER(1));                          00216400
*              ELSE                                                     00216500
*                DO;                                                    00216600
*              ZMS=' 8, PLISTVER='||         /**KVALP* MSG*/            00216700
*                    PLISTVER(1)||                                      00216800
*                  ', BUT PLISTVER OF '||                               00216900
*                    CHAR(XPLISTVER)||                                  00217000
*                  ' IS REQUIRED.';                                     00217100
*              ANS MSG('?IWMSRSRG ---> '||ZMS);                         00217200
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          00217300
*              ZMACRET=8;                    /* MACRO ERROR */          00217400
*                END;                                                   00217500
*              IF XPLISTVER<0 |              /* LOW LIMIT */            00217600
*                 XPLISTVER>2                /* HIGH LIMIT */           00217700
*                THEN                                                   00217800
*                  ZCVAL='RANGE';            /* RANGE ERROR */          00217900
*            END;                                                       00218000
*        IF ZCVAL^=''                                                   00218100
*          THEN                                                         00218200
*            DO;                             /* RANGE ERROR */          00218300
*              ZXPLISTVER='';                /* RESET IN/OUTPUT */      00218400
*              ZMS=' 8, "PLISTVER '||        /**KRNGP* MSG*/            00218500
*                  PLISTVER||                                           00218600
*                  '" THE RANGE IS "0-2"'||                             00218700
*                  ' FOR ARGUMENT 1.';                                  00218800
*              ANS MSG('?IWMSRSRG ---> '||ZMS);                         00218900
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          00219000
*              ZMACRET=8;                    /* MACRO ERROR */          00219100
*            END;                                                       00219200
*      END;                                                             00219300
*                                                                       00219400
*/********************************************************************/ 00219500
*/***PG.MF01  PROCESS MF MACRO FORMS                                 */ 00219600
*/********************************************************************/ 00219700
*/*PG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 00219800
*  XMF='';                                                              00219900
*/*PG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 00220000
*  IF TRANSLATE(MF(1))                                                  00220100
*              = 'S'                         /* CHECK FOR KEYWORD */    00220200
*    THEN                                                               00220300
*      DO;                                                              00220400
*        XMF='S';                            /* SET XVARIABLE */        00220500
*        IF NUMBER(MF)>1                     /* CHECK POSITIONALS */    00220600
*          THEN                                                         00220700
*            DO;                                                        00220800
*              ZMS=' 8, "MF'||               /**KPOSP* MSG*/            00220900
*                  MF||                                                 00221000
*                  '" "MF"'||                                           00221100
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        00221200
*              ANS MSG('?IWMSRSRG ---> '||ZMS);                         00221300
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          00221400
*              ZMACRET=8;                    /* MACRO ERROR */          00221500
*            END;                                                       00221600
*/*PG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 00221700
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KYWRDCTL DO GROUP */     00221800
*/*PG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 00221900
*  IF TRANSLATE(MF(1))                                                  00222000
*              = 'L'                         /* CHECK FOR KEYWORD */    00222100
*    THEN                                                               00222200
*      DO;                                                              00222300
*        XMF='L';                            /* SET XVARIABLE */        00222400
*        IF NUMBER(MF)>3                     /* CHECK POSITIONALS */    00222500
*          THEN                                                         00222600
*            DO;                                                        00222700
*              ZMS=' 8, "MF'||               /**KPOSP* MSG*/            00222800
*                  MF||                                                 00222900
*                  '" "MF"'||                                           00223000
*                  ' CAN HAVE ONLY 3 ARGUMENTS.';                       00223100
*              ANS MSG('?IWMSRSRG ---> '||ZMS);                         00223200
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          00223300
*              ZMACRET=8;                    /* MACRO ERROR */          00223400
*            END;                                                       00223500
*/*PG.KKCTL10 -MF(L) SPECIAL CHECK-----------------------------------*/ 00223600
*        ZMAXINVOCLEN = LENGTH(MF) + 2;                                 00223700
*        IF PLISTVER ^= ''                                              00223800
*          THEN                                                         00223900
*            ZMAXINVOCLEN=ZMAXINVOCLEN + LENGTH(PLISTVER) + 8;          00224000
*        IF LENGTH(MACKEYS) > ZMAXINVOCLEN |                            00224100
*           MACLIST ^= ''                    /* CHECK FOR OTHER PARMS*/ 00224200
*          THEN                                                         00224300
*            DO;                                                        00224400
*              ZMS=' 8, THE "L" FORM OF "MF"'|| /**MFLP* MSG*/          00224500
*                  ' CAN ONLY HAVE'||                                   00224600
*                  ' THE "PLISTVER" KEY'||                              00224700
*                  ' SPECIFIED ON THE INVOCATION.';                     00224800
*              ANS MSG('?IWMSRSRG ---> '||ZMS);                         00224900
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          00225000
*              ZMACRET=8;                    /* MACRO ERROR */          00225100
*            END;                                                       00225200
*/*PG.KXVAR03 NAME, OPT RQD INPUT, POS(2) -XVARIABLE-----------------*/ 00225300
*  XMFCTRL=MF(2);                            /* SET XVARIABLE */        00225400
*  IF MF(2)=''                               /* CHECK FOR NULL */       00225500
*   THEN                                                                00225600
*    DO;                                     /* KEY IS REQUIRED */      00225700
*        ZXMFCTRL='';                        /* RESET IN/OUTPUT */      00225800
*        ZMS=' 8, WHEN "L" IS SPECIFIED'||                              00225900
*            ' FOR THE "MF" KEY, POSITIONAL'||                          00226000
*            ' ARG 2 IS REQUIRED.';          /**KRQDP* MSG*/            00226100
*        ANS MSG('?IWMSRSRG ---> '||ZMS);                               00226200
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00226300
*        ZMACRET=8;                          /* MACRO ERROR */          00226400
*    END;                                                               00226500
*  ELSE                                                                 00226600
*    ZXMFCTRL='INPUT';                       /* SET IN/OUTPUT */        00226700
*/*PG.KXVAR13 VALUE, OPT INPUT, POS(3) -XVARIABLE--------------------*/ 00226800
*  ZXMFATTR='INPUT';                         /* SET IN/OUTPUT */        00226900
*  XMFATTR='BDY(DWORD)';                     /* SET DEFAULT */          00227000
*  IF MF(3)^=''                              /* CHECK FOR NULL */       00227100
*    THEN                                                               00227200
*      XMFATTR=MF(3);                        /* SET XVARIABLE */        00227300
*/*PG.KCK01 VALUE, OPT INPUT, POS(3) -CHARACTER LENGTH---------------*/ 00227400
*  IF ZXMFATTR^='' &                         /* NOT IN/OUTPUT */        00227500
*     LENGTH(XMFATTR)>60                                                00227600
*    THEN                                                               00227700
*      DO;                                                              00227800
*        ZXMFATTR='';                        /* RESET IN/OUTPUT */      00227900
*        ZMS=' 8, "MF'||                     /**KLNGP* MSG*/            00228000
*            MF||                                                       00228100
*            '" ARGUMENT 3 EXCEEDS THE MAXIMUM'||                       00228200
*            ' LENGTH OF 60 CHARACTERS. ';                              00228300
*        ANS MSG('?IWMSRSRG ---> '||ZMS);                               00228400
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00228500
*        ZMACRET=8;                          /* MACRO ERROR */          00228600
*      END;                                                             00228700
*/*PG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 00228800
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KYWRDCTL DO GROUP */     00228900
*/*PG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 00229000
*  IF TRANSLATE(MF(1))                                                  00229100
*              = 'E'                         /* CHECK FOR KEYWORD */    00229200
*    THEN                                                               00229300
*      DO;                                                              00229400
*        XMF='E';                            /* SET XVARIABLE */        00229500
*        IF NUMBER(MF)>3                     /* CHECK POSITIONALS */    00229600
*          THEN                                                         00229700
*            DO;                                                        00229800
*              ZMS=' 8, "MF'||               /**KPOSP* MSG*/            00229900
*                  MF||                                                 00230000
*                  '" "MF"'||                                           00230100
*                  ' CAN HAVE ONLY 3 ARGUMENTS.';                       00230200
*              ANS MSG('?IWMSRSRG ---> '||ZMS);                         00230300
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          00230400
*              ZMACRET=8;                    /* MACRO ERROR */          00230500
*            END;                                                       00230600
*/*PG.KXVAR03 NAME, OPT RQD INPUT, POS(2) -XVARIABLE-----------------*/ 00230700
*  XMFCTRL=MF(2);                            /* SET XVARIABLE */        00230800
*  IF MF(2)=''                               /* CHECK FOR NULL */       00230900
*   THEN                                                                00231000
*    DO;                                     /* KEY IS REQUIRED */      00231100
*        ZXMFCTRL='';                        /* RESET IN/OUTPUT */      00231200
*        ZMS=' 8, WHEN "E" IS SPECIFIED'||                              00231300
*            ' FOR THE "MF" KEY, POSITIONAL'||                          00231400
*            ' ARG 2 IS REQUIRED.';          /**KRQDP* MSG*/            00231500
*        ANS MSG('?IWMSRSRG ---> '||ZMS);                               00231600
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00231700
*        ZMACRET=8;                          /* MACRO ERROR */          00231800
*    END;                                                               00231900
*  ELSE                                                                 00232000
*    ZXMFCTRL='INPUT';                       /* SET IN/OUTPUT */        00232100
*/*PG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 00232200
*  XMFSCK='';                                /* RESET XVARIABLE */      00232300
*  IF TRANSLATE(MF(3))                                                  00232400
*              = 'COMPLETE'                  /* CHECK FOR KEYWORD */    00232500
*    THEN                                                               00232600
*      XMFSCK = 'COMPLETE';                  /* SET XVARIABLE */        00232700
*/*PG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 00232800
*  ZXMFSCK='INPUT';                          /* SET IN/OUTPUT */        00232900
*  IF XMFSCK=''                              /* CHECK FOR KEYWORD */    00233000
*    THEN                                                               00233100
*      DO;                                   /* KEYWORD NOT ENTERED */  00233200
*        XMFSCK='COMPLETE';                  /* SET DEFAULT */          00233300
*        IF MF(3)^=''                                                   00233400
*          THEN                                                         00233500
*            DO;                                                        00233600
*              ZXMFSCK='';                   /* RESET IN/OUTPUT */      00233700
*              ZMS=' 8, "MF'||               /**KUKWP* MSG*/            00233800
*                  MF||'"'||                                            00233900
*                  ' ARGUMENT 3 IS AN UNKNOWN KEYWORD. '||              00234000
*                  ' VALID KEYWORD CHOICE(S) ARE:'||                    00234100
*                  ' "COMPLETE".';           /* VALID KEYWORD */        00234200
*              ANS MSG('?IWMSRSRG ---> '||ZMS);                         00234300
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          00234400
*              ZMACRET=8;                    /* MACRO ERROR */          00234500
*            END;                                                       00234600
*      END;                                                             00234700
*/*PG.KKCTL05 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 00234800
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KYWRDCTL DO GROUP */     00234900
*/*PG.KKCTL06 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 00235000
*  IF MF='MF'                                                           00235100
*    | MF='()'                               /*CHECK ENTRY*/            00235200
*     THEN                                                              00235300
*       DO;                                                             00235400
*              ZMS=' 8, THE "MF" KEY'||      /**KOPTP* MSG*/            00235500
*                  ' MUST CONTAIN ONE'||                                00235600
*                  ' (OR MORE) ARGUMENT(S).';                           00235700
*              ANS MSG('?IWMSRSRG ---> '||ZMS);                         00235800
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          00235900
*              ZMACRET=8;                    /* MACRO ERROR */          00236000
*       END;                                                            00236100
*  ELSE                                                                 00236200
*    DO;                                                                00236300
*      ZXMF='INPUT';                         /* SET IN/OUTPUT */        00236400
*      IF XMF=''                             /* CHECK FOR KEYWORD */    00236500
*        THEN                                                           00236600
*          DO;                               /* KEYWORD NOT ENTERED */  00236700
*            XMF='S';                        /* SET DEFAULT */          00236800
*            XMFSCK='COMPLETE';              /* COMPLETE CHECKING */    00236900
*            IF MF(1)^=''                    /* CHECK FOR KEYWORD */    00237000
*              THEN                                                     00237100
*                DO;                                                    00237200
*                  ZXMF='';                  /* RESET IN/OUTPUT */      00237300
*              ZMS=' 8, "MF'||               /**KUKWP* MSG*/            00237400
*                  MF||'"'||                                            00237500
*                  ' ARGUMENT 1 IS AN UNKNOWN KEYWORD. '||              00237600
*                  ' VALID KEYWORD CHOICE(S) ARE:'||                    00237700
*                  ' "S",'||                 /* VALID KEYWORD */        00237800
*                  ' "L",'||                 /* VALID KEYWORD */        00237900
*                  ' OR "E".';               /* VALID KEYWORD */        00238000
*              ANS MSG('?IWMSRSRG ---> '||ZMS);                         00238100
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          00238200
*              ZMACRET=8;                    /* MACRO ERROR */          00238300
*                END;                                                   00238400
*          END;                                                         00238500
*    END;                                                               00238600
*/********************************************************************/ 00238700
*/***PD.P01 FULL DEFAULT CHECKING                                    */ 00238800
*/********************************************************************/ 00238900
*  IF PLISTVER=''                                                       00239000
*     | PLISTVER(1)='IMPLIED_VERSION'                                   00239100
*    THEN                                                               00239200
*      ZC='ON';                              /* DEFAULT FLAG ON */      00239300
*    ELSE                                                               00239400
*      ZC='OFF';                             /* DEFAULT FLAG OFF */     00239500
*/********************************************************************/ 00239600
*/***PD.P02 DEFAULT ECHO                                             */ 00239700
*/********************************************************************/ 00239800
*/*PD.P02 XMF^='L' & XMFSCK='COMPLETE' ------------------------------*/ 00239900
*  IF XMF^='L'                                                          00240000
*    THEN                                                               00240100
*      DO;                                   /* FULL SYNTAX CHECK */    00240200
*        ANS('/*DEFAULT(S): */')                                        00240300
*           NORESCAN COL(MACLMAR+5);                                    00240400
*/*PD.KXVAR01 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 00240500
*  XUSERDATA='';                                                        00240600
*  IF USERDATA(1)=''                                                    00240700
*    THEN                                                               00240800
*      DO;                                                              00240900
*        XUSERDATA='NO_USERDATA';            /* SET DEFAULT */          00241000
*        ZC='ON';                            /* DEFAULT FLAG ON */      00241100
*      END;                                                             00241200
*/*PD.DFLT02 PRINT DEFAULT(S) IF APPROPRIATE ------------------------*/ 00241300
*  IF XPLISTVER>=1                                                      00241400
*    THEN                                                               00241500
*      DO;                                                              00241600
*  IF XUSERDATA^=''                                                     00241700
*    THEN                                                               00241800
*      ANS('/* USERDATA('||                                             00241900
*          XUSERDATA||                                                  00242000
*          ')*/')                                                       00242100
*          NORESCAN COL(MACLMAR+5);                                     00242200
*      END;                                                             00242300
*/*PD.KXVAR01 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 00242400
*  XHOST='';                                                            00242500
*  IF HOST(1)=''                                                        00242600
*    THEN                                                               00242700
*      DO;                                                              00242800
*        XHOST='NO_HOST';                    /* SET DEFAULT */          00242900
*        ZC='ON';                            /* DEFAULT FLAG ON */      00243000
*      END;                                                             00243100
*/*PD.DFLT02 PRINT DEFAULT(S) IF APPROPRIATE ------------------------*/ 00243200
*  IF XPLISTVER>=2                                                      00243300
*    THEN                                                               00243400
*      DO;                                                              00243500
*  IF XHOST^=''                                                         00243600
*    THEN                                                               00243700
*      ANS('/* HOST('||                                                 00243800
*          XHOST||                                                      00243900
*          ')*/')                                                       00244000
*          NORESCAN COL(MACLMAR+5);                                     00244100
*      END;                                                             00244200
*/*PD.DFLT02 PRINT DEFAULT(S) IF APPROPRIATE ------------------------*/ 00244300
*  IF PLISTVER=''                                                       00244400
*    THEN                                                               00244500
*      ANS('/* PLISTVER('||                                             00244600
*          CHAR(XPLISTVER)||                                            00244700
*          ')*/')                                                       00244800
*          NORESCAN COL(MACLMAR+5);                                     00244900
*  IF ZC='OFF'                               /*NO DEFAULTS TAKEN */     00245000
*    THEN                                                               00245100
*      ANS('/* NONE. */')                                               00245200
*         NORESCAN COL(MACLMAR+5);                                      00245300
*/*PD.P04 END DEFAULT ECHO ------------------------------------------*/ 00245400
*      END;                                                             00245500
*/********************************************************************/ 00245600
*/*PB.SYSL01 INVOKE SP LEVEL AND SYSTEM STATE MACROS                 */ 00245700
*/********************************************************************/ 00245800
*  DCL SYSSPLV CHAR EXTERNAL; DEACT SYSSPLV;/* SPLEVEL 1,2,3         */ 00245900
*  DCL SYSASCE CHAR EXTERNAL; DEACT SYSASCE;/* STATE ANY P AR */        00246000
*                                                                       00246100
*  IF SYSASCE=''                                                        00246200
*    THEN                                                               00246300
*      DO;                                                              00246400
*        IF SYSSPLV=''                                                  00246500
*          THEN                                                         00246600
*            ANS('?SPLEVEL  (TEST);') COL(MACLMAR);                     00246700
*        IF SYSSPLV^='1' & SYSSPLV^='2'                                 00246800
*          THEN                                                         00246900
*            ANS('?SYSSTATE (TEST);') COL(MACLMAR);                     00247000
*          ELSE                                                         00247100
*            SYSASCE='P';                    /* SYSSTATE DEFAULT*/      00247200
*      END;                                                             00247300
*/********************************************************************/ 00247400
*/***PG.P01 FULL MACRO SYNTAX CHECKING                               */ 00247500
*/********************************************************************/ 00247600
*/*PG.P02 XMF^='L' & XMFSCK='COMPLETE' ------------------------------*/ 00247700
*  IF XMF^='L'                                                          00247800
*    THEN                                                               00247900
*      DO;                                   /* FULL SYNTAX CHECK */    00248000
*/*PG.P03 EXCESSIVE POSITIONAL ARGUMENTS-----------------------------*/ 00248100
*  IF NUMBER(MACLIST)>0                      /* CHECK POSITIONALS */    00248200
*    THEN                                                               00248300
*      DO;                                                              00248400
*        ZMS=' 8, POSITIONAL ARGUMENT(S),'|| /**PPOSP* MSG*/            00248500
*            ' "'||MACLIST||'"'||                                       00248600
*            ' CANNOT BE USED.'||                                       00248700
*            ' NO POSITIONAL ARGUMENTS'||                               00248800
*            ' ARE ALLOWED.';                                           00248900
*        ANS MSG('?IWMSRSRG ---> '||ZMS);                               00249000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00249100
*        ZMACRET=8;                          /* MACRO ERROR */          00249200
*      END;                                                             00249300
*/*PG.KXVAR01 NAME, RQD INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 00249400
*  IF NUMBER(LOCATION)>1                     /* CHECK POSITIONALS */    00249500
*    THEN                                                               00249600
*      DO;                                                              00249700
*        ZMS=' 8, "LOCATION'||               /**KPOSP* MSG*/            00249800
*            LOCATION||                                                 00249900
*            '" "LOCATION"'||                                           00250000
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              00250100
*        ANS MSG('?IWMSRSRG ---> '||ZMS);                               00250200
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00250300
*        ZMACRET=8;                          /* MACRO ERROR */          00250400
*      END;                                                             00250500
*/*PG.KXVAR03 NAME, RQD INPUT, KEYS -XVARIABLE-----------------------*/ 00250600
*  XLOCATION=LOCATION(1);                    /* SET XVARIABLE */        00250700
*  IF LOCATION(1)=''                         /* CHECK FOR NULL */       00250800
*   THEN                                                                00250900
*    DO;                                     /* KEY IS REQUIRED */      00251000
*        ZXLOCATION='';                      /* RESET IN/OUTPUT */      00251100
*        ZMS=' 8,  '||                                                  00251200
*            ' "LOCATION" KEY AND ITS ARGUMENT'||                       00251300
*            ' ARE REQUIRED.';               /**KRQDP* MSG*/            00251400
*        ANS MSG('?IWMSRSRG ---> '||ZMS);                               00251500
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00251600
*        ZMACRET=8;                          /* MACRO ERROR */          00251700
*    END;                                                               00251800
*  ELSE                                                                 00251900
*    ZXLOCATION='INPUT';                     /* SET IN/OUTPUT */        00252000
*/*PG.KXVAR01 NAME, RQD INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 00252100
*  IF NUMBER(NETWORK_ID)>1                   /* CHECK POSITIONALS */    00252200
*    THEN                                                               00252300
*      DO;                                                              00252400
*        ZMS=' 8, "NETWORK_ID'||             /**KPOSP* MSG*/            00252500
*            NETWORK_ID||                                               00252600
*            '" "NETWORK_ID"'||                                         00252700
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              00252800
*        ANS MSG('?IWMSRSRG ---> '||ZMS);                               00252900
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00253000
*        ZMACRET=8;                          /* MACRO ERROR */          00253100
*      END;                                                             00253200
*/*PG.KXVAR03 NAME, RQD INPUT, KEYS -XVARIABLE-----------------------*/ 00253300
*  XNETWORK_ID=NETWORK_ID(1);                /* SET XVARIABLE */        00253400
*  IF NETWORK_ID(1)=''                       /* CHECK FOR NULL */       00253500
*   THEN                                                                00253600
*    DO;                                     /* KEY IS REQUIRED */      00253700
*        ZXNETWORK_ID='';                    /* RESET IN/OUTPUT */      00253800
*        ZMS=' 8,  '||                                                  00253900
*            ' "NETWORK_ID" KEY AND ITS ARGUMENT'||                     00254000
*            ' ARE REQUIRED.';               /**KRQDP* MSG*/            00254100
*        ANS MSG('?IWMSRSRG ---> '||ZMS);                               00254200
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00254300
*        ZMACRET=8;                          /* MACRO ERROR */          00254400
*    END;                                                               00254500
*  ELSE                                                                 00254600
*    ZXNETWORK_ID='INPUT';                   /* SET IN/OUTPUT */        00254700
*/*PG.KXVAR01 NAME, RQD INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 00254800
*  IF NUMBER(LUNAME)>1                       /* CHECK POSITIONALS */    00254900
*    THEN                                                               00255000
*      DO;                                                              00255100
*        ZMS=' 8, "LUNAME'||                 /**KPOSP* MSG*/            00255200
*            LUNAME||                                                   00255300
*            '" "LUNAME"'||                                             00255400
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              00255500
*        ANS MSG('?IWMSRSRG ---> '||ZMS);                               00255600
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00255700
*        ZMACRET=8;                          /* MACRO ERROR */          00255800
*      END;                                                             00255900
*/*PG.KXVAR03 NAME, RQD INPUT, KEYS -XVARIABLE-----------------------*/ 00256000
*  XLUNAME=LUNAME(1);                        /* SET XVARIABLE */        00256100
*  IF LUNAME(1)=''                           /* CHECK FOR NULL */       00256200
*   THEN                                                                00256300
*    DO;                                     /* KEY IS REQUIRED */      00256400
*        ZXLUNAME='';                        /* RESET IN/OUTPUT */      00256500
*        ZMS=' 8,  '||                                                  00256600
*            ' "LUNAME" KEY AND ITS ARGUMENT'||                         00256700
*            ' ARE REQUIRED.';               /**KRQDP* MSG*/            00256800
*        ANS MSG('?IWMSRSRG ---> '||ZMS);                               00256900
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00257000
*        ZMACRET=8;                          /* MACRO ERROR */          00257100
*    END;                                                               00257200
*  ELSE                                                                 00257300
*    ZXLUNAME='INPUT';                       /* SET IN/OUTPUT */        00257400
*/*PG.KXVAR01 NAME, RQD INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 00257500
*  IF NUMBER(STOKEN)>1                       /* CHECK POSITIONALS */    00257600
*    THEN                                                               00257700
*      DO;                                                              00257800
*        ZMS=' 8, "STOKEN'||                 /**KPOSP* MSG*/            00257900
*            STOKEN||                                                   00258000
*            '" "STOKEN"'||                                             00258100
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              00258200
*        ANS MSG('?IWMSRSRG ---> '||ZMS);                               00258300
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00258400
*        ZMACRET=8;                          /* MACRO ERROR */          00258500
*      END;                                                             00258600
*/*PG.KXVAR03 NAME, RQD INPUT, KEYS -XVARIABLE-----------------------*/ 00258700
*  XSTOKEN=STOKEN(1);                        /* SET XVARIABLE */        00258800
*  IF STOKEN(1)=''                           /* CHECK FOR NULL */       00258900
*   THEN                                                                00259000
*    DO;                                     /* KEY IS REQUIRED */      00259100
*        ZXSTOKEN='';                        /* RESET IN/OUTPUT */      00259200
*        ZMS=' 8,  '||                                                  00259300
*            ' "STOKEN" KEY AND ITS ARGUMENT'||                         00259400
*            ' ARE REQUIRED.';               /**KRQDP* MSG*/            00259500
*        ANS MSG('?IWMSRSRG ---> '||ZMS);                               00259600
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00259700
*        ZMACRET=8;                          /* MACRO ERROR */          00259800
*    END;                                                               00259900
*  ELSE                                                                 00260000
*    ZXSTOKEN='INPUT';                       /* SET IN/OUTPUT */        00260100
*/*PG.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 00260200
*  IF USERDATA='USERDATA' | USERDATA='()'    /*CHECK ENTRY*/            00260300
*    THEN                                                               00260400
*      DO;                                                              00260500
*        ZMS=' 8, THE "USERDATA" KEY'||      /**KOPTP* MSG*/            00260600
*            ' MUST CONTAIN ONE'||                                      00260700
*            ' (OR MORE) ARGUMENT(S).';                                 00260800
*        ANS MSG('?IWMSRSRG ---> '||ZMS);                               00260900
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00261000
*        ZMACRET=8;                          /* MACRO ERROR */          00261100
*      END;                                                             00261200
*  IF NUMBER(USERDATA)>1                     /* CHECK POSITIONALS */    00261300
*    THEN                                                               00261400
*      DO;                                                              00261500
*        ZMS=' 8, "USERDATA'||               /**KPOSP* MSG*/            00261600
*            USERDATA||                                                 00261700
*            '" "USERDATA"'||                                           00261800
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              00261900
*        ANS MSG('?IWMSRSRG ---> '||ZMS);                               00262000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00262100
*        ZMACRET=8;                          /* MACRO ERROR */          00262200
*      END;                                                             00262300
*/*PG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 00262400
*  ZXUSERDATA='INPUT';                       /* SET IN/OUTPUT */        00262500
*  XUSERDATA='NO_USERDATA';                  /* SET DEFAULT */          00262600
*  IF USERDATA(1)^=''                        /* CHECK FOR NULL */       00262700
*    THEN                                                               00262800
*      XUSERDATA=USERDATA(1);                /* SET XVARIABLE */        00262900
*/*PG.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 00263000
*  IF HOST='HOST' | HOST='()'                /*CHECK ENTRY*/            00263100
*    THEN                                                               00263200
*      DO;                                                              00263300
*        ZMS=' 8, THE "HOST" KEY'||          /**KOPTP* MSG*/            00263400
*            ' MUST CONTAIN ONE'||                                      00263500
*            ' (OR MORE) ARGUMENT(S).';                                 00263600
*        ANS MSG('?IWMSRSRG ---> '||ZMS);                               00263700
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00263800
*        ZMACRET=8;                          /* MACRO ERROR */          00263900
*      END;                                                             00264000
*  IF NUMBER(HOST)>1                         /* CHECK POSITIONALS */    00264100
*    THEN                                                               00264200
*      DO;                                                              00264300
*        ZMS=' 8, "HOST'||                   /**KPOSP* MSG*/            00264400
*            HOST||                                                     00264500
*            '" "HOST"'||                                               00264600
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              00264700
*        ANS MSG('?IWMSRSRG ---> '||ZMS);                               00264800
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00264900
*        ZMACRET=8;                          /* MACRO ERROR */          00265000
*      END;                                                             00265100
*/*PG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 00265200
*  ZXHOST='INPUT';                           /* SET IN/OUTPUT */        00265300
*  XHOST='NO_HOST';                          /* SET DEFAULT */          00265400
*  IF HOST(1)^=''                            /* CHECK FOR NULL */       00265500
*    THEN                                                               00265600
*      XHOST=HOST(1);                        /* SET XVARIABLE */        00265700
*/*PG.KXVAR01 NAME, OPT OUTPUT, KEYS -EXCESSIVE ARGUMENTS------------*/ 00265800
*  IF RETCODE='RETCODE' | RETCODE='()'       /*CHECK ENTRY*/            00265900
*    THEN                                                               00266000
*      DO;                                                              00266100
*        ZMS=' 8, THE "RETCODE" KEY'||       /**KOPTP* MSG*/            00266200
*            ' MUST CONTAIN ONE'||                                      00266300
*            ' (OR MORE) ARGUMENT(S).';                                 00266400
*        ANS MSG('?IWMSRSRG ---> '||ZMS);                               00266500
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00266600
*        ZMACRET=8;                          /* MACRO ERROR */          00266700
*      END;                                                             00266800
*  IF NUMBER(RETCODE)>1                      /* CHECK POSITIONALS */    00266900
*    THEN                                                               00267000
*      DO;                                                              00267100
*        ZMS=' 8, "RETCODE'||                /**KPOSP* MSG*/            00267200
*            RETCODE||                                                  00267300
*            '" "RETCODE"'||                                            00267400
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              00267500
*        ANS MSG('?IWMSRSRG ---> '||ZMS);                               00267600
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00267700
*        ZMACRET=8;                          /* MACRO ERROR */          00267800
*      END;                                                             00267900
*/*PG.KXVAR15 NAME, OPT OUTPUT, KEYS -XVARIABLE----------------------*/ 00268000
*  IF RETCODE(1)^=''                         /* CHECK FOR NULL */       00268100
*    THEN                                                               00268200
*      DO;                                                              00268300
*        XRETCODE=RETCODE(1);                /* SET XVARIABLE */        00268400
*        ZXRETCODE='OUTPUT';                 /* SET OUTPUT */           00268500
*      END;                                                             00268600
*  ELSE                                                                 00268700
*    IF ZXRETCODE^=''                                                   00268800
*      THEN                                                             00268900
*        ZXRETCODE='';                       /* RESET OUTPUT */         00269000
*/*PG.KXVAR01 NAME, OPT OUTPUT, KEYS -EXCESSIVE ARGUMENTS------------*/ 00269100
*  IF RSNCODE='RSNCODE' | RSNCODE='()'       /*CHECK ENTRY*/            00269200
*    THEN                                                               00269300
*      DO;                                                              00269400
*        ZMS=' 8, THE "RSNCODE" KEY'||       /**KOPTP* MSG*/            00269500
*            ' MUST CONTAIN ONE'||                                      00269600
*            ' (OR MORE) ARGUMENT(S).';                                 00269700
*        ANS MSG('?IWMSRSRG ---> '||ZMS);                               00269800
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00269900
*        ZMACRET=8;                          /* MACRO ERROR */          00270000
*      END;                                                             00270100
*  IF NUMBER(RSNCODE)>1                      /* CHECK POSITIONALS */    00270200
*    THEN                                                               00270300
*      DO;                                                              00270400
*        ZMS=' 8, "RSNCODE'||                /**KPOSP* MSG*/            00270500
*            RSNCODE||                                                  00270600
*            '" "RSNCODE"'||                                            00270700
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              00270800
*        ANS MSG('?IWMSRSRG ---> '||ZMS);                               00270900
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00271000
*        ZMACRET=8;                          /* MACRO ERROR */          00271100
*      END;                                                             00271200
*/*PG.KXVAR15 NAME, OPT OUTPUT, KEYS -XVARIABLE----------------------*/ 00271300
*  IF RSNCODE(1)^=''                         /* CHECK FOR NULL */       00271400
*    THEN                                                               00271500
*      DO;                                                              00271600
*        XRSNCODE=RSNCODE(1);                /* SET XVARIABLE */        00271700
*        ZXRSNCODE='OUTPUT';                 /* SET OUTPUT */           00271800
*      END;                                                             00271900
*  ELSE                                                                 00272000
*    IF ZXRSNCODE^=''                                                   00272100
*      THEN                                                             00272200
*        ZXRSNCODE='';                       /* RESET OUTPUT */         00272300
*/*PG.P04 XMF^='L' & XMFSCK='COMPLETE' ------------------------------*/ 00272400
*      END;                                  /* END COMPLETE CHECKING*/ 00272500
*/********************************************************************/ 00272600
*/***PE.MR01 GENERATE CODE IF ZMACRET=0                              */ 00272700
*/********************************************************************/ 00272800
*  IF ZMACRET = 0                                                       00272900
*    THEN                                                               00273000
*      DO;                                                              00273100
*/********************************************************************/ 00273200
*/***PE.PR01 PRINT CONTROLS, DEFAULT IS YES                          */ 00273300
*/********************************************************************/ 00273400
*  ANS(MACCONC||'LIST PUSH NOECHO;') NORESCAN COL(MACLMAR);             00273500
*  IF ZPRINT='NO'                            /* PRINT IS OFF */         00273600
*    THEN                                                               00273700
*      ANS(MACCONC||'LIST OFF NOECHO;') NORESCAN COL(MACLMAR);          00273800
*    ELSE                                                               00273900
*      ANS(MACCONC||'LIST ON NOECHO;')  NORESCAN COL(MACLMAR);          00274000
*/********************************************************************/ 00274100
*/*PE.DO02 OUTER MACRO DO STATEMENT----------------------------------*/ 00274200
*  IF XMF^='L'                                                          00274300
*    THEN                                                               00274400
*      ANS('DO; /* IWMSRSRG-PLISTVER */')                               00274500
*          NORESCAN COL(MACLMAR);                                       00274600
*/*MCMPLS01 RFY 15*/                                                    00274700
*  IF XMF^='L' & ZMACRET = 0                                            00274800
*    THEN                                                               00274900
*      ANS('RFY GPR15F RSTD;') NORESCAN COL(MACLMAR);                   00275000
*/*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*/  00275100
       DCL EHAMAPS CHAR EXTERNAL;                                       00275200
       IF INDEX(EHAMAPS,'XM@')=0 THEN                                   00275300
         EHAMAPS=EHAMAPS||'XM@,';                                       00275400
       IF INDEX(EHAREGS,'00F')=0                                        00275500
         THEN                                                           00275600
           EHAREGS=EHAREGS||'00F'; /* GPR00F                      */    00275700
       IF INDEX(EHAREGS,'15F')=0                                        00275800
         THEN                                                           00275900
           EHAREGS=EHAREGS||'15F'; /* GPR15F                      */    00276000
*/*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*/  00276100
*/*PL.LL01 ?IWMSRSRG MF=L PARAMETER LIST-----------------------------*/ 00276200
*  IF XMF='L'                                                           00276300
*    THEN                                                               00276400
*      DO;                                                              00276500
*        ANS('DCL 1 '||XMFCTRL||' '||XMFATTR||', '||                    00276600
*            '/* ?IWMSRSRG PARM LIST*/')                                00276700
*            NORESCAN COL(MACLMAR);                                     00276800
*/*PL.LL02  XVERSION FIXED(8) INPUT----------------------------------*/ 00276900
*        ANS('2 '||XMFCTRL||                                            00277000
*            '_XVERSION FIXED(8), '||                                   00277100
*            '/* INPUT XVERSION*/')                                     00277200
*            NORESCAN COL(MACLMAR+2);                                   00277300
*/*PL.LL13  XLUNAME CHAR(8) INPUT------------------------------------*/ 00277400
*        ANS('2 '||XMFCTRL||                                            00277500
*            '_XLUNAME CHAR(8), '||                                     00277600
*            '/* '||ZXLUNAME||' XLUNAME */')                            00277700
*            NORESCAN COL(MACLMAR+2);                                   00277800
*/*PL.LL13  XNETWORK_ID CHAR(8) INPUT--------------------------------*/ 00277900
*        ANS('2 '||XMFCTRL||                                            00278000
*            '_XNETWORK_ID CHAR(8), '||                                 00278100
*            '/* '||ZXNETWORK_ID||' XNETWORK_ID */')                    00278200
*            NORESCAN COL(MACLMAR+2);                                   00278300
*/*PL.LL13  XLOCATION CHAR(18) INPUT---------------------------------*/ 00278400
*        ANS('2 '||XMFCTRL||                                            00278500
*            '_XLOCATION CHAR(18), '||                                  00278600
*            '/* '||ZXLOCATION||' XLOCATION */')                        00278700
*            NORESCAN COL(MACLMAR+2);                                   00278800
*/*PL.LL13  XSTOKEN BIT(64) INPUT------------------------------------*/ 00278900
*        ANS('2 '||XMFCTRL||                                            00279000
*            '_XSTOKEN BIT(64), '||                                     00279100
*            '/* '||ZXSTOKEN||' XSTOKEN */')                            00279200
*            NORESCAN COL(MACLMAR+2);                                   00279300
*/*PL.LL13  XRSV001A CHAR(4) RESERVED--------------------------------*/ 00279400
*        ANS('2 '||XMFCTRL||                                            00279500
*            '_XRSV001A CHAR(4), '||                                    00279600
*            '/* RESERVED */')                                          00279700
*            NORESCAN COL(MACLMAR+2);                                   00279800
*/*PL.LPVER01 -------------------------------------------------------*/ 00279900
*  IF XPLISTVER>=1                                                      00280000
*    THEN                                                               00280100
*      DO;                                                              00280200
*/*PL.LL13  XRSV002F CHAR(1) RESERVED--------------------------------*/ 00280300
*        ANS('2 '||XMFCTRL||                                            00280400
*            '_XRSV002F CHAR(1), '||                                    00280500
*            '/* RESERVED */')                                          00280600
*            NORESCAN COL(MACLMAR+2);                                   00280700
*/*PL.LPVER02 -------------------------------------------------------*/ 00280800
*      END;                                                             00280900
*/*PL.LPVER01 -------------------------------------------------------*/ 00281000
*  IF XPLISTVER>=1                                                      00281100
*    THEN                                                               00281200
*      DO;                                                              00281300
*/*PL.LL02  XPLISTLEN FIXED(16) BDY(BYTE) INPUT----------------------*/ 00281400
*        ANS('2 '||XMFCTRL||                                            00281500
*            '_XPLISTLEN FIXED(16) BDY(BYTE), '||                       00281600
*            '/* INPUT XPLISTLEN*/')                                    00281700
*            NORESCAN COL(MACLMAR+2);                                   00281800
*/*PL.LPVER02 -------------------------------------------------------*/ 00281900
*      END;                                                             00282000
*/*PL.LPVER01 -------------------------------------------------------*/ 00282100
*  IF XPLISTVER>=1                                                      00282200
*    THEN                                                               00282300
*      DO;                                                              00282400
*/*PL.LL13  XRSV0032 CHAR(2) RESERVED--------------------------------*/ 00282500
*        ANS('2 '||XMFCTRL||                                            00282600
*            '_XRSV0032 CHAR(2), '||                                    00282700
*            '/* RESERVED */')                                          00282800
*            NORESCAN COL(MACLMAR+2);                                   00282900
*/*PL.LPVER02 -------------------------------------------------------*/ 00283000
*      END;                                                             00283100
*/*PL.LPVER01 -------------------------------------------------------*/ 00283200
*  IF XPLISTVER>=1                                                      00283300
*    THEN                                                               00283400
*      DO;                                                              00283500
*/*PL.LL13 ADDR XUSERDATA PTR(31) INPUT ADDR-------------------------*/ 00283600
*        ANS('2 '||XMFCTRL||                                            00283700
*            '_XUSERDATA_ADDR PTR(31), '||                              00283800
*            '/* '||ZXUSERDATA_ADDR||' XUSERDATA_ADDR */')              00283900
*            NORESCAN COL(MACLMAR+2);                                   00284000
*/*PL.LPVER02 -------------------------------------------------------*/ 00284100
*      END;                                                             00284200
*/*PL.LPVER01 -------------------------------------------------------*/ 00284300
*  IF XPLISTVER>=2                                                      00284400
*    THEN                                                               00284500
*      DO;                                                              00284600
*/*PL.LL13 ADDR XHOST PTR(31) INPUT ADDR-----------------------------*/ 00284700
*        ANS('2 '||XMFCTRL||                                            00284800
*            '_XHOST_ADDR PTR(31), '||                                  00284900
*            '/* '||ZXHOST_ADDR||' XHOST_ADDR */')                      00285000
*            NORESCAN COL(MACLMAR+2);                                   00285100
*/*PL.LPVER02 -------------------------------------------------------*/ 00285200
*      END;                                                             00285300
*/*PL.LL18 ----------------------------------------------------------*/ 00285400
*        ANS('2 * CHAR(0);')                                            00285500
*            NORESCAN COL(MACLMAR+2);                                   00285600
*/*PL.LL17 END OF MF=L PARAMETER LIST--------------------------------*/ 00285700
*      END;                                                             00285800
*/*PL.L01 MACRO WORK VARIABLES---------------------------------------*/ 00285900
*  DCL ZPRMLINE CHAR;          /* ZPRM ARRAY ENTRY ACCUMULATOR      */  00286000
*  DEACT ZPRMLINE;                                                      00286100
*  DCL ZNDX CHAR;              /* UNIQUE LIST STRUCTURE NAME        */  00286200
*  DEACT ZNDX;                                                          00286300
*  ZNDX=MACINDEX;              /* MACINDEX                          */  00286400
*  DCL XVERSION CHAR;                                                   00286500
*  DEACT XVERSION;                                                      00286600
*/*PL.L02 ?IWMSRSRG PARAMETER LIST-----------------------------------*/ 00286700
*  IF XMF^='L'                                                          00286800
*    THEN                                                               00286900
*      DO;                                                              00287000
*/*PL.L03 ?IWMSRSRG PARAMETER LIST-----------------------------------*/ 00287100
*        IF XMF='S'                                                     00287200
*          THEN                                                         00287300
*            XMFCTRL='#ZPLIST';                                         00287400
*/*PL.L04 ?IWMSRSRG PARAMETER LIST-----------------------------------*/ 00287500
*        ZPRMLINE='DCL 1 #Z'||ZNDX||' DEF('||XMFCTRL||'),'||            00287600
*                 ' /* ?IWMSRSRG PARM LIST*/';                          00287700
*/*PL.L05 ADDR XVERSION FIXED(8) INPUT-------------------------------*/ 00287800
*        ZPRMLINE=ZPRMLINE||' 2 #Z'||ZNDX||                             00287900
*                 '_XVERSION FIXED(8), '||                              00288000
*                 '/* INPUT XVERSION*/';                                00288100
*/*PL.L08  XLUNAME CHAR(8) INPUT-------------------------------------*/ 00288200
*        ZPRMLINE=ZPRMLINE||' 2 #Z'||ZNDX||                             00288300
*                 '_XLUNAME CHAR(8), '||                                00288400
*                 '/* '||ZXLUNAME||' XLUNAME */';                       00288500
*/*PL.L08  XNETWORK_ID CHAR(8) INPUT---------------------------------*/ 00288600
*        ZPRMLINE=ZPRMLINE||' 2 #Z'||ZNDX||                             00288700
*                 '_XNETWORK_ID CHAR(8), '||                            00288800
*                 '/* '||ZXNETWORK_ID||' XNETWORK_ID */';               00288900
*/*PL.L08  XLOCATION CHAR(18) INPUT----------------------------------*/ 00289000
*        ZPRMLINE=ZPRMLINE||' 2 #Z'||ZNDX||                             00289100
*                 '_XLOCATION CHAR(18), '||                             00289200
*                 '/* '||ZXLOCATION||' XLOCATION */';                   00289300
*/*PL.L08  XSTOKEN BIT(64) INPUT-------------------------------------*/ 00289400
*        ZPRMLINE=ZPRMLINE||' 2 #Z'||ZNDX||                             00289500
*                 '_XSTOKEN BIT(64), '||                                00289600
*                 '/* '||ZXSTOKEN||' XSTOKEN */';                       00289700
*/*PL.L08  XRSV001A CHAR(4) RESERVED---------------------------------*/ 00289800
*        ZPRMLINE=ZPRMLINE||' 2 #Z'||ZNDX||                             00289900
*                 '_XRSV001A CHAR(4), '||                               00290000
*                 '/* RESERVED */';                                     00290100
*/*PL.LPVER03 -------------------------------------------------------*/ 00290200
*  IF XPLISTVER>=1                                                      00290300
*    THEN                                                               00290400
*      DO;                                                              00290500
*/*PL.L08  XRSV002F CHAR(1) RESERVED---------------------------------*/ 00290600
*        ZPRMLINE=ZPRMLINE||' 2 #Z'||ZNDX||                             00290700
*                 '_XRSV002F CHAR(1), '||                               00290800
*                 '/* RESERVED */';                                     00290900
*/*PL.LPVER04 -------------------------------------------------------*/ 00291000
*      END;                                                             00291100
*/*PL.LPVER03 -------------------------------------------------------*/ 00291200
*  IF XPLISTVER>=1                                                      00291300
*    THEN                                                               00291400
*      DO;                                                              00291500
*/*PL.L05  XPLISTLEN FIXED(16) BDY(BYTE) INPUT-----------------------*/ 00291600
*        ZPRMLINE=ZPRMLINE||' 2 #Z'||ZNDX||                             00291700
*                 '_XPLISTLEN FIXED(16) BDY(BYTE), '||                  00291800
*                 '/* INPUT XPLISTLEN*/';                               00291900
*/*PL.LPVER04 -------------------------------------------------------*/ 00292000
*      END;                                                             00292100
*/*PL.LPVER03 -------------------------------------------------------*/ 00292200
*  IF XPLISTVER>=1                                                      00292300
*    THEN                                                               00292400
*      DO;                                                              00292500
*/*PL.L08  XRSV0032 CHAR(2) RESERVED---------------------------------*/ 00292600
*        ZPRMLINE=ZPRMLINE||' 2 #Z'||ZNDX||                             00292700
*                 '_XRSV0032 CHAR(2), '||                               00292800
*                 '/* RESERVED */';                                     00292900
*/*PL.LPVER04 -------------------------------------------------------*/ 00293000
*      END;                                                             00293100
*/*PL.LPVER03 -------------------------------------------------------*/ 00293200
*  IF XPLISTVER>=1                                                      00293300
*    THEN                                                               00293400
*      DO;                                                              00293500
*/*PL.L08 ADDR XUSERDATA PTR(31) INPUT ADDR--------------------------*/ 00293600
*        ZPRMLINE=ZPRMLINE||' 2 #Z'||ZNDX||                             00293700
*                 '_XUSERDATA_ADDR PTR(31), '||                         00293800
*                 '/* '||ZXUSERDATA_ADDR||' XUSERDATA_ADDR */';         00293900
*/*PL.LPVER04 -------------------------------------------------------*/ 00294000
*      END;                                                             00294100
*/*PL.LPVER03 -------------------------------------------------------*/ 00294200
*  IF XPLISTVER>=2                                                      00294300
*    THEN                                                               00294400
*      DO;                                                              00294500
*/*PL.L08 ADDR XHOST PTR(31) INPUT ADDR------------------------------*/ 00294600
*        ZPRMLINE=ZPRMLINE||' 2 #Z'||ZNDX||                             00294700
*                 '_XHOST_ADDR PTR(31), '||                             00294800
*                 '/* '||ZXHOST_ADDR||' XHOST_ADDR */';                 00294900
*/*PL.LPVER04 -------------------------------------------------------*/ 00295000
*      END;                                                             00295100
*/*PL.L11 CONSTANT TO ENSURE THAT LIST FORM IS LONG ENOUGH ----------*/ 00295200
*        ZPRMNUM=ZPRMNUM+1;                                             00295300
*        ZPRM(ZPRMNUM)=ZPRMLINE||' 2 * CHAR(0);';                       00295400
*        IF XPLISTVER^=0                                                00295500
*           & XMF^='S'                                                  00295600
*          THEN                                                         00295700
*            DO;                                                        00295800
*              ZPRMNUM=ZPRMNUM+1;                                       00295900
*              ZPRM(ZPRMNUM)=                                           00296000
*               'DCL #Z'||ZNDX||'_LENCHECK FIXED(32) CONSTANT('||       00296100
*               'LENGTH('||XMFCTRL||')-LENGTH(#Z'||ZNDX||'));'||        00296200
*               '/* CONSTANT TO ENSURE THAT THE LIST FORM'||            00296300
*               ' IS LONG ENOUGH */';                                   00296400
*            END;                                                       00296500
*/*PL.L12 PARAMETER LIST SIZE----------------------------------------*/ 00296600
*        ZPLLEN=47;                                                     00296700
*        IF XPLISTVER>=1                                                00296800
*          THEN                                                         00296900
*            ZPLLEN=56;                                                 00297000
*        IF XPLISTVER>=2                                                00297100
*          THEN                                                         00297200
*            ZPLLEN=60;                                                 00297300
*        IF ZPRMMAX<ZPLLEN                                              00297400
*           & XMF^='E'                                                  00297500
*          THEN                                                         00297600
*            ZPRMMAX=ZPLLEN;                                            00297700
*/*PL.L13 -----------------------------------------------------------*/ 00297800
*      END;                                                             00297900
*/*PI.L01 XMF^='L' & XMFSCK='COMPLETE' ------------------------------*/ 00298000
*  IF XMF^='L'                                                          00298100
*    THEN                                                               00298200
*      DO;                                                              00298300
*        ANS('RFY GPR15F UNRSTD;') NORESCAN COL(MACLMAR);               00298400
*/*PI.L03 CLEAR PARAMETER LIST --------------------------------------*/ 00298500
*            ANS('#Z'||ZNDX||'=''''B;'||                                00298600
*                '/* CLEAR PARAMETER AREA */')                          00298700
*                NORESCAN COL(MACLMAR);                                 00298800
*/*PI.L05A XVERSION FIXED(8)-----------------------------------------*/ 00298900
*        IF XPLISTVER^=0                                                00299000
*          THEN                                                         00299100
*            ANS('#Z'||ZNDX||'_XVERSION='||CHAR(XPLISTVER)||'; '||      00299200
*                '/* XVERSION FIXED(8) */')                             00299300
*                NORESCAN COL(MACLMAR);                                 00299400
*/*PI.L21 XLUNAME NAME CHAR(8)---------------------------------------*/ 00299500
*        IF ZXLUNAME='INPUT' |                                          00299600
*           ZXLUNAME='INOUT'                                            00299700
*          THEN                                                         00299800
*            ANS('#Z'||ZNDX||'_XLUNAME='||                              00299900
*                XLUNAME||';'||                                         00300000
*                '/* XLUNAME CHAR(8) */')                               00300100
*                NORESCAN COL(MACLMAR);                                 00300200
*/*PI.L21 XNETWORK_ID NAME CHAR(8)-----------------------------------*/ 00300300
*        IF ZXNETWORK_ID='INPUT' |                                      00300400
*           ZXNETWORK_ID='INOUT'                                        00300500
*          THEN                                                         00300600
*            ANS('#Z'||ZNDX||'_XNETWORK_ID='||                          00300700
*                XNETWORK_ID||';'||                                     00300800
*                '/* XNETWORK_ID CHAR(8) */')                           00300900
*                NORESCAN COL(MACLMAR);                                 00301000
*/*PI.L21 XLOCATION NAME CHAR(18)------------------------------------*/ 00301100
*        IF ZXLOCATION='INPUT' |                                        00301200
*           ZXLOCATION='INOUT'                                          00301300
*          THEN                                                         00301400
*            ANS('#Z'||ZNDX||'_XLOCATION='||                            00301500
*                XLOCATION||';'||                                       00301600
*                '/* XLOCATION CHAR(18) */')                            00301700
*                NORESCAN COL(MACLMAR);                                 00301800
*/*PI.L19 XSTOKEN NAME BIT(64)---------------------------------------*/ 00301900
*        IF ZXSTOKEN='INPUT' |                                          00302000
*           ZXSTOKEN='INOUT'                                            00302100
*          THEN                                                         00302200
*            IF (XSTOKEN(1:1)^='0' &                                    00302300
*               XSTOKEN(1:1)^='1')                                      00302400
*              THEN                                                     00302500
*                ANS('#Z'||ZNDX||'_XSTOKEN='||                          00302600
*                    XSTOKEN||';'||                                     00302700
*                    '/* XSTOKEN BIT(64) */')                           00302800
*                    NORESCAN COL(MACLMAR);                             00302900
*              ELSE                                                     00303000
*                ANS('#Z'||ZNDX||'_XSTOKEN='||                          00303100
*                    ''''||XSTOKEN||'''B;'||                            00303200
*                    '/* XSTOKEN BIT(64) */')                           00303300
*                    NORESCAN COL(MACLMAR);                             00303400
*/*PI.LPVER01 -------------------------------------------------------*/ 00303500
*  IF XPLISTVER>=1                                                      00303600
*    THEN                                                               00303700
*      DO;                                                              00303800
*/*PI.L05C XPLISTLEN FIXED(16)---------------------------------------*/ 00303900
*        ANS('#Z'||ZNDX||'_XPLISTLEN=LENGTH(#Z'||ZNDX||');'||           00304000
*            '/* XPLISTLEN FIXED(16) */')                               00304100
*            NORESCAN COL(MACLMAR);                                     00304200
*/*PI.LPVER02 -------------------------------------------------------*/ 00304300
*      END;                                                             00304400
*/*PI.LPVER01 -------------------------------------------------------*/ 00304500
*  IF XPLISTVER>=1                                                      00304600
*    THEN                                                               00304700
*      DO;                                                              00304800
*/*PI.L14 CHECK FOR * AS THE CHAR(64) ARGUMENT-----------------------*/ 00304900
*        IF TRANSLATE(XUSERDATA)                                        00305000
*                    = 'NO_USERDATA'                                    00305100
*          THEN                                                         00305200
*            ZXUSERDATA='';                  /* RESET INPUT/INOUT */    00305300
*/*PI.L15 ADDR(XUSERDATA) CHAR(64)-----------------------------------*/ 00305400
*        IF ZXUSERDATA^=''                                              00305500
*          THEN                                                         00305600
*            ANS('#Z'||ZNDX||'_XUSERDATA_ADDR='||                       00305700
*                'ADDR('||XUSERDATA||');'||                             00305800
*                '/* ADDR XUSERDATA CHAR(64) */')                       00305900
*                NORESCAN COL(MACLMAR);                                 00306000
*/*PI.LPVER02 -------------------------------------------------------*/ 00306100
*      END;                                                             00306200
*/*PI.LPVER01 -------------------------------------------------------*/ 00306300
*  IF XPLISTVER>=2                                                      00306400
*    THEN                                                               00306500
*      DO;                                                              00306600
*/*PI.L14 CHECK FOR * AS THE CHAR(64) ARGUMENT-----------------------*/ 00306700
*        IF TRANSLATE(XHOST)                                            00306800
*                    = 'NO_HOST'                                        00306900
*          THEN                                                         00307000
*            ZXHOST='';                      /* RESET INPUT/INOUT */    00307100
*/*PI.L15 ADDR(XHOST) CHAR(64)---------------------------------------*/ 00307200
*        IF ZXHOST^=''                                                  00307300
*          THEN                                                         00307400
*            ANS('#Z'||ZNDX||'_XHOST_ADDR='||                           00307500
*                'ADDR('||XHOST||');'||                                 00307600
*                '/* ADDR XHOST CHAR(64) */')                           00307700
*                NORESCAN COL(MACLMAR);                                 00307800
*/*PI.LPVER02 -------------------------------------------------------*/ 00307900
*      END;                                                             00308000
*/*PI.L31 INVOKE FUNCTION--------------------------------------------*/ 00308100
*              IF NUMBER(RSNCODE)>0                                     00308200
*                THEN                                                   00308300
*                  ANS('RFY GPR00F RSTD;') NORESCAN COL(MACLMAR);       00308400
*              ANS('RFY GPR01P RSTD;') NORESCAN COL(MACLMAR);           00308500
*              ANS('GPR01P=ADDR(#Z'||ZNDX||');'||                       00308600
*                  '/* PARAMETER LIST */')                              00308700
*                  NORESCAN COL(MACLMAR);                               00308800
*              IF SYSASCE^='P'                                          00308900
*                THEN                                                   00309000
*                  ANS('SAR(GPR01P,ALET(#Z'||ZNDX||'));'||              00309100
*                      '/* PARAMETER LIST AR */')                       00309200
*                      NORESCAN COL(MACLMAR);                           00309300
*/*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*/  00309400
         ANS('PC(XM@(96)|28);') SKIP COL(5);                            00309500
*/*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*/  00309600
*              ANS('RFY GPR01P UNRSTD;') NORESCAN COL(MACLMAR);         00309700
*              IF NUMBER(RETCODE)>0                                     00309800
*                THEN                                                   00309900
*                  ANS('RFY GPR15F RSTD;') NORESCAN COL(MACLMAR);       00310000
*/*PO.L08 XRETCODE RETURN CODE---------------------------------------*/ 00310100
*              IF NUMBER(RETCODE)>0                                     00310200
*                THEN                                                   00310300
*                    ANS(XRETCODE||                                     00310400
*                     '=GPR15F; /* SET RETURN CODE */')                 00310500
*                      NORESCAN COL(MACLMAR);                           00310600
*/*PO.L09 XRSNCODE REASON CODE---------------------------------------*/ 00310700
*              IF NUMBER(RSNCODE)>0                                     00310800
*                THEN                                                   00310900
*                    ANS(XRSNCODE||                                     00311000
*                     '=GPR00F; /* SET REASON CODE */')                 00311100
*                      NORESCAN COL(MACLMAR);                           00311200
*/*PO.L10 REMOVE REGISTER RESTRICTIONS-------------------------------*/ 00311300
*              IF NUMBER(RSNCODE)>0                                     00311400
*                THEN                                                   00311500
*              ANS('RFY GPR00F UNRSTD;') NORESCAN COL(MACLMAR);         00311600
*              IF NUMBER(RETCODE)>0                                     00311700
*                THEN                                                   00311800
*              ANS('RFY GPR15F UNRSTD;') NORESCAN COL(MACLMAR);         00311900
*/*PO.L12 END OF PARAMETER LIST PROCESSING---------------------------*/ 00312000
*      END;                                                             00312100
*/*PO.L13 IWMSRSRG USAGE INDICATOR-----------------------------------*/ 00312200
*  ZIWMSRSRG='YES';                          /* SET IWMSRSRG USED */    00312300
*/*PO.L15 END OF EXECUTABLE IWMSRSRG-PLISTVER MACRO------------------*/ 00312400
*  IF XMF^='L'                                                          00312500
*    THEN                                                               00312600
*      ANS('END; /* IWMSRSRG-PLISTVER */')                              00312700
*          NORESCAN COL(MACLMAR);                                       00312800
*/*PO.L16 RESTORE PRINT CONTROLS-------------------------------------*/ 00312900
*  ANS(MACCONC||'LIST POP NOECHO;') NORESCAN COL(MACLMAR);              00313000
*/*PO.L17 END OF IWMSRSRG MACRO--------------------------------------*/ 00313100
*  ANS(MACCONC||'SPACE;') NORESCAN COL(MACLMAR);                        00313200
*  ANS(' ') NORESCAN COL(MACLMAR);                                      00313300
*/*******************************************************************/  00313400
*/*  PO.L18 END OF CODE TO BE BYPASSED WHEN ZMACRET ^= 0            */  00313500
*/*******************************************************************/  00313600
*      END;                                                             00313700
*/*******************************************************************/  00313800
*/*  MVS ONLY     -CHECK IF AMG PARM LISTS ARE PRESENT              */  00313900
*/*               -ROUND MAX AMG PARM LIST TO DOUBLEWORD MULTIPLES  */  00314000
*/*******************************************************************/  00314100
*  IF ZPRMNUM>0                   /* NUMBER OF AMG PARM LIST ENTRIES*/  00314200
*    THEN                                                               00314300
*      DO;                                                              00314400
*        ZPRMMAX=((ZPRMMAX+7)/8)*8; /* ROUND PARM LIST SIZE UP TO       00314500
*                                      DOUBLEWORD MULTIPLES        */   00314600
*/*******************************************************************/  00314700
*/*  MVS -GENERATE PARM LIST DCL TO OVERLAY ?EPILOG'S ILIST AREA    */  00314800
*/*******************************************************************/  00314900
*        IF XMF ^= 'M' & XMF ^= 'E'                                     00315000
*          THEN                                                         00315100
*            DO;                                                        00315200
*              IF INDEX(EHALIST,',AMG,')=0 /* HAS DECLARE BEEN DONE?*/  00315300
*                THEN                                                   00315400
*                  DO;                                                  00315500
*                    ANS('?EPILOG                                       00315600
*                        STRING(''DCL #ZPLIST DEF(ILIST);'');');        00315700
*                    EHALIST=EHALIST||',AMG,';                          00315800
*                  END;                                                 00315900
*            END;                                                       00316000
*/*******************************************************************/  00316100
*/*  MVS  -EXTRACT PARM LISTS FROM AMG GLOBAL MACRO ARRAYS          */  00316200
*/*******************************************************************/  00316300
*        IF XMF ^= 'M' & XMF ^= 'E'                                     00316400
*          THEN                                                         00316500
*            DO;                                                        00316600
*              IF ZPRMMAX>EHAMAXLEN                                     00316700
*                THEN                                                   00316800
*                  EHAMAXLEN=ZPRMMAX; /* SET MAX PARM LIST SIZE     */  00316900
*            END;                                                       00317000
*        DO ZI=1 TO ZPRMNUM; /* EXTRACT AMG PARM LISTS               */ 00317100
*          ANS('?EPILOG STRING('''||ZPRM(ZI)||''');')                   00317200
*              COL(MACLMAR);                                            00317300
*        END;                                                           00317400
*      END;                                                             00317500
*/*-----------------------------------------------------------------*/  00317600
*/*  MVS  -ENSURE THAT GPRS NEEDED BY AMG MACROS WILL BE PROVIDED   */  00317700
*/*        BY ?EPILOG                                               */  00317800
*/*-----------------------------------------------------------------*/  00317900
*        IF INDEX(EHAREGS,'01P')=0                                      00318000
*          THEN                                                         00318100
*            EHAREGS=EHAREGS||'01P'; /* GPR01P                      */  00318200
*        IF INDEX(EHAREGS,'00F')=0                                      00318300
*          & NUMBER(RSNCODE)>0                                          00318400
*          THEN                                                         00318500
*            EHAREGS=EHAREGS||'00F'; /* GPR00F                      */  00318600
*        IF INDEX(EHAREGS,'15F')=0                                      00318700
*          THEN                                                         00318800
*            EHAREGS=EHAREGS||'15F'; /* GPR15F                      */  00318900
*  RETURN CODE(ZMACRET);                                                00319000
*%END IWMSRSRG;                                                         00319100
