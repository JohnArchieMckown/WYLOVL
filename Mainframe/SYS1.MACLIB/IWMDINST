*/**** START OF SPECIFICATIONS **************************************** 00000100
*                                                                     * 00000200
*                                                                     * 00000300
*01* MACRO NAME:  IWMDINST                              -08/26/97-<0> * 00000400
*                                                                     * 00000500
*                                                                     * 00000600
*01* DESCRIPTIVE NAME:  Install WLM Service Definition                * 00000700
*                                                                     * 00000800
*01* PROPRIETARY STATEMENT:                                           * 00000900
*                                                                     * 00001000
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 00001100
*     THIS MACRO IS "RESTRICTED MATERIALS OF IBM"                     * 00001200
*     5647-A01 (C) COPYRIGHT IBM CORP. 1994, 1997                     * 00001300
*                                                                     * 00001400
* STATUS= JBB6604                                                     * 00001500
*                                                                     * 00001600
*                                                                     * 00001700
*                                                                     * 00001800
*01* FUNCTION:                                                        * 00001900
*                                                                     * 00002000
*                                                                     * 00002100
*      The Install Service Definition routine is given control from   * 00002200
*      the IWMDINST macro.  The Install Service Definition macro will * 00002300
*      complete the parameter list with caller provided data and      * 00002400
*      generate a stacking, program call to the install service.      * 00002500
*                                                                     * 00002600
*      The purpose of this routine is to install the WLM service      * 00002700
*      definition supplied into the WLM couple dataset for the        * 00002800
*      current sysplex. After this service definition is installed in * 00002900
*      the couple dataset all policies contained in it are eligible   * 00003000
*      to be activated in the sysplex.                                * 00003100
*                                                                     * 00003200
*      The service definition is a single logical entity decribed by  * 00003300
*      the service definition descriptor element, defined by          * 00003400
*      IWMSERVD.  The service definition descriptor element contains  * 00003500
*      offsets to the 5 distinct areas that comprise the service      * 00003600
*      definition:                                                    * 00003700
*                                                                     * 00003800
*                                                                     * 00003900
*      o   The general service definition data area.                  * 00004000
*                                                                     * 00004100
*          This data area contains general service definition         * 00004200
*          information like the service definition name and           * 00004300
*          description along with more detailed information like the  * 00004400
*          policy, workload, service class and resource group         * 00004500
*          information.  This area is mapped by the IWMSVDEF.         * 00004600
*                                                                     * 00004700
*      o   The service definition classification rules data area.     * 00004800
*                                                                     * 00004900
*          This data area contains the definitions of the             * 00005000
*          classification rules and classification groups that govern * 00005100
*          which service and report classes are associated with       * 00005200
*          incoming work when the work enters MVS.  This area is      * 00005300
*          mapped by IWMSVDCR.                                        * 00005400
*                                                                     * 00005500
*      o   The notepad data area.                                     * 00005600
*                                                                     * 00005700
*          This data area contains any comments (or change history)   * 00005800
*          that an installation chooses to associate with the service * 00005900
*          definition.  This area is mapped by IWMSVNPA.              * 00006000
*                                                                     * 00006100
*      o   The service definition application environment data area.  * 00006200
*                                                                     * 00006300
*          This data area contains the definitions of the application * 00006400
*          environments.  This area is mapped by IWMSVAEA.            * 00006500
*                                                                     * 00006600
*      o   The service definition scheduling environment data area.   * 00006700
*                                                                     * 00006800
*          This data area contains the definitions of the scheduling  * 00006900
*          environments.  This area is mapped by IWMSVSEA.            * 00007000
*                                                                     * 00007100
*                                                                     * 00007200
*                                                                     * 00007300
*      The Service definition descriptor element and all five data    * 00007400
*      areas of the service definition must be passed as inputs to    * 00007500
*      the install service definition service.  Even if certain data  * 00007600
*      areas are non-applicable, for example no notepad information   * 00007700
*      exists, the data area header information must still be         * 00007800
*      completely filled in and pointed to by the descriptor element. * 00007900
*                                                                     * 00008000
*      All input data areas must represent a valid service definition * 00008100
*      in order for the install to occur.  If validity checking for   * 00008200
*      any section of the service definition fails, the entire        * 00008300
*      install process is aborted and a return and reason code        * 00008400
*      indicating that validation of the service definition failed is * 00008500
*      returned.  In addition, a reason code describing the specific  * 00008600
*      error detected is returned in the variable specified on        * 00008700
*      keyword VALCHECK_RSN and an offset to the specific section of  * 00008800
*      the service definition where the error was detected is         * 00008900
*      returned in the variable specified on the VALCHECK_OFFSET      * 00009000
*      keyword.  Validity check processing occurs until the first     * 00009100
*      error is detected and only a single error is identified on an  * 00009200
*      invocation of this macro.                                      * 00009300
*                                                                     * 00009400
*      The caller can also request that the install occurs only if    * 00009500
*      the service definition that was used as a base for the         * 00009600
*      definition being installed is still the currently installed    * 00009700
*      service definition in the WLM couple dataset.  This allows the * 00009800
*      caller the ability to prevent inadvertent over-writes of       * 00009900
*      service defininition updates that some other user (caller)     * 00010000
*      made in the window, from when the service definition was       * 00010100
*      initially read, to when the current install with the updated   * 00010200
*      service definition was issued.  For more details, refer to the * 00010300
*      COND keyword below.                                            * 00010400
*                                                                     * 00010500
*      The parameter list must be in the caller's primary address     * 00010600
*      space or be addressable by the dispatchable unit access list.  * 00010700
*                                                                     * 00010800
*01* EXTERNAL CLASSIFICATION:  GUPI                                   * 00010900
*                                                                     * 00011000
*01* END OF EXTERNAL CLASSIFICATION:                                  * 00011100
*                                                                     * 00011200
*01* ENVIRONMENT:                                                     * 00011300
*                                                                     * 00011400
*                                                                     * 00011500
*      Dispatchable unit mode: Task mode.                             * 00011600
*                                                                     * 00011700
*      Minimum authorization: Problem or Supervisor state.  Any PSW   * 00011800
*                        key.                                         * 00011900
*                                                                     * 00012000
*      AMODE:            31-bit.                                      * 00012100
*                                                                     * 00012200
*      Cross Memory Mode: PASN=HASN=SASN.                             * 00012300
*                                                                     * 00012400
*      ASC mode:         Primary or Access Register.  If in Access    * 00012500
*                        Register ASC mode, specify SYSSTATE          * 00012600
*                        ASCENV=AR before invoking this macro.        * 00012700
*                                                                     * 00012800
*      Interrupt status: Enabled for I/O and external interrupts.     * 00012900
*                                                                     * 00013000
*      Locks:            No locks held.                               * 00013100
*                                                                     * 00013200
*      Control parameters:     All parameter areas must reside in     * 00013300
*                        current primary or be addressable by the     * 00013400
*                        dispatchable unit access list.               * 00013500
*                                                                     * 00013600
*                        In addition, all parameters must reside in   * 00013700
*                        storage of the same key as the caller is     * 00013800
*                        executing in when the macro is invoked       * 00013900
*                        unless the the caller is in key 0.           * 00014000
*                                                                     * 00014100
*                                                                     * 00014200
*                                                                     * 00014300
*01* PROGRAMMING REQUIREMENTS:                                        * 00014400
*                                                                     * 00014500
*                                                                     * 00014600
*    1.  The macro CVT must be included to use this macro.            * 00014700
*                                                                     * 00014800
*    2.  This functions provided by this macro are only supported on  * 00014900
*        MVS/ESA SP5.2.0 or higher.  If code with this macro          * 00015000
*        expansion is executed on lower MVS/ESA releases (version 3   * 00015100
*        or higher) a return code of 4 and reason code of xxxx041A    * 00015200
*        (constant IwmRsnCodeNoPolMgt) will be returned indicating    * 00015300
*        that the service is not available.  This macro should NOT be * 00015400
*        executed on MVS versions 1 or 2.                             * 00015500
*                                                                     * 00015600
*    3.  The macro IWMYCON must be included to use this macro.        * 00015700
*                                                                     * 00015800
*    4.  The macro IWMPB must be in the library concatenation, since  * 00015900
*        it is included by IWMYCON.                                   * 00016000
*                                                                     * 00016100
*    5.  Note that the high order halfword of register 0, and the     * 00016200
*        reason code variable when specified, may be non-zero and     * 00016300
*        represents diagnostic data which is NOT part of the external * 00016400
*        interface.  The high order halfword should thus be excluded  * 00016500
*        from comparison with the reason code values described above. * 00016600
*        The constant, IWMRSNCODE_MASK_CONST defined in IWMYCON, may  * 00016700
*        be used for this purpose.                                    * 00016800
*                                                                     * 00016900
*                                                                     * 00017000
*                                                                     * 00017100
*01* RESTRICTIONS:                                                    * 00017200
*                                                                     * 00017300
*                                                                     * 00017400
*    1.  This macro may not be used prior to the completion of WLM    * 00017500
*        address space initialization                                 * 00017600
*                                                                     * 00017700
*    2.  The caller cannot have an EUT FRR established.               * 00017800
*                                                                     * 00017900
*                                                                     * 00018000
*                                                                     * 00018100
*01* INPUT REGISTER INFORMATION:                                      * 00018200
*                                                                     * 00018300
*    Before issuing the IWMDINST macro, the caller does not have to   * 00018400
*    place any information into any register unless using it in       * 00018500
*    register notation for a particular parameter, or using it as a   * 00018600
*    base register.                                                   * 00018700
*                                                                     * 00018800
*01* OUTPUT REGISTER INFORMATION:                                     * 00018900
*                                                                     * 00019000
*    When control returns to the caller, the GPRs contain:            * 00019100
*                                                                     * 00019200
*                                                                     * 00019300
*    REGISTER  CONTENTS                                               * 00019400
*                                                                     * 00019500
*    0         Reason code if GR15 return code is non-zero            * 00019600
*                                                                     * 00019700
*    1         Used as work registers by the system                   * 00019800
*                                                                     * 00019900
*    2-13      Unchanged                                              * 00020000
*                                                                     * 00020100
*    14        Used as a work register by the system                  * 00020200
*                                                                     * 00020300
*    15        Return code                                            * 00020400
*                                                                     * 00020500
*                                                                     * 00020600
*                                                                     * 00020700
*    When control returns to the caller, the ARs contain:             * 00020800
*                                                                     * 00020900
*                                                                     * 00021000
*    REGISTER  CONTENTS                                               * 00021100
*                                                                     * 00021200
*    0-1       Used as work registers by the system                   * 00021300
*                                                                     * 00021400
*    2-13      Unchanged                                              * 00021500
*                                                                     * 00021600
*    14-15     Used as work registers by the system                   * 00021700
*                                                                     * 00021800
*                                                                     * 00021900
*                                                                     * 00022000
*    Some callers depend on register contents remaining the same      * 00022100
*    before and after issuing a service.  If the system changes the   * 00022200
*    contents of registers on which the caller depends, the caller    * 00022300
*    must save them before issuing the service, and restore them      * 00022400
*    after the system returns control.                                * 00022500
*                                                                     * 00022600
*01* PERFORMANCE IMPLICATIONS:                                        * 00022700
*                                                                     * 00022800
*    None                                                             * 00022900
*                                                                     * 00023000
*01* SYNTAX:                                                          * 00023100
*                                                                     * 00023200
*[xlabel]  IWMDINST     SERVD_AREA=xservd_area                        * 00023300
*                     [,QRY_BASEID=xqry_baseid]                       * 00023400
*                      ,PRODUCT_ID=xproduct_id                        * 00023500
*                      ,VALCHECK_RSN=xvalcheck_rsn                    * 00023600
*                      ,VALCHECK_OFFSET=xvalcheck_offset              * 00023700
*                     ,COND=YES                                      * 00023800
*                    |     ,IN_BASEID=xin_baseid                      * 00023900
*                     ,COND=NO                                       * 00024000
*                     [,RETCODE=xretcode]                             * 00024100
*                     [,RSNCODE=xrsncode]                             * 00024200
*                     [,PLISTVER=xplistver|IMPLIED_VERSION]         * 00024300
*                    [,MF=S]                                         * 00024400
*                    [,MF=(L,xmfctrl,xmfattr|0D)]                  * 00024500
*                    [,MF=(E,xmfctrl,COMPLETE)]                    * 00024600
*                                                                     * 00024700
*                                                                     * 00024800
*      Where:                                                         * 00024900
*                                                                     * 00025000
*                                                                     * 00025100
*      [xlabel]                                                       * 00025200
*          is an optional symbol, starting in column 1, that is the   * 00025300
*          name on the IWMDINST macro invocation.  The name must      * 00025400
*          conform to the rules for an ordinary assembler language    * 00025500
*          symbol.                                                    * 00025600
*          DEFAULT: No name.                                          * 00025700
*                                                                     * 00025800
*                                                                     * 00025900
*                                                                     * 00026000
*                                                                     * 00026100
*      SERVD_AREA=xservd_area                                         * 00026200
*          is the name (RS-type), or address in register (2)-(12), of * 00026300
*          a required character input variable specifying an area     * 00026400
*          that contains the service definition data to be installed. * 00026500
*          This area is defined by the IWMSERVD macro.                * 00026600
*                                                                     * 00026700
*                                                                     * 00026800
*                                                                     * 00026900
*                                                                     * 00027000
*      [QRY_BASEID=xqry_baseid]                                       * 00027100
*          is the name (RS-type), or address in register (2)-(12), of * 00027200
*          an optional character output variable specifying an area   * 00027300
*          to contain the identifier of the service definition that   * 00027400
*          is currently installed on the WLM couple dataset.  This    * 00027500
*          area is mapped by the SVIDSSVD DSECT in macro IWMSVIDS.    * 00027600
*          When this keyword is specified, the data is returned when  * 00027700
*          the return code indicates successful completion (return    * 00027800
*          code 0) regardless of whether COND(YES) or COND(NO) was    * 00027900
*          specified. In addition, this data is returned on a         * 00028000
*          conditional request (COND(YES)) if the return and reason   * 00028100
*          code indicate that specified IN_BASEID does not match the  * 00028200
*          baseid of the installed service definition (return code 4, * 00028300
*          reason code '0413'X).                                      * 00028400
*                                                                     * 00028500
*                                                                     * 00028600
*                                                                     * 00028700
*                                                                     * 00028800
*      PRODUCT_ID=xproduct_id                                         * 00028900
*          is the name (RS-type), or address in register (2)-(12), of * 00029000
*          a required 32 character input variable specifying an area  * 00029100
*          that contains an identifier of the product (application)   * 00029200
*          performing the install.  The identifier should include     * 00029300
*          information like product name, a unique version/release    * 00029400
*          identifier, and any other information that can help        * 00029500
*          identify your product.  This area is mapped by the         * 00029600
*          SVIDSPRD DSECT in the IWMSVIDS macro.                      * 00029700
*                                                                     * 00029800
*                                                                     * 00029900
*                                                                     * 00030000
*                                                                     * 00030100
*      VALCHECK_RSN=xvalcheck_rsn                                     * 00030200
*          is the name (RS-type), or address in register (2)-(12), of * 00030300
*          a required fullword output variable that will contain the  * 00030400
*          reason code identifying the specific error in the input    * 00030500
*          service definition found during validity checking.  This   * 00030600
*          reason code is only returned if validation of the input    * 00030700
*          service definition fails and a primary return code of 8    * 00030800
*          and reason code of xxxx083D is returned.                   * 00030900
*                                                                     * 00031000
*                                                                     * 00031100
*                                                                     * 00031200
*                                                                     * 00031300
*      VALCHECK_OFFSET=xvalcheck_offset                               * 00031400
*          is the name (RS-type), or address in register (2)-(12), of * 00031500
*          a required fullword output variable to contain the offset  * 00031600
*          from the beginning of the service definition (IWMSERVD) to * 00031700
*          the section of the input service definition where validity * 00031800
*          check processing found an error described by the reason    * 00031900
*          code returned in VALCHECK_RSN.  This offset is returned    * 00032000
*          under the same conditions as when VALCHECK_RSN is          * 00032100
*          returned.                                                  * 00032200
*                                                                     * 00032300
*                                                                     * 00032400
*                                                                     * 00032500
*                                                                     * 00032600
*      COND=YES|NO                                                  * 00032700
*          is a required keyword input which indicates whether        * 00032800
*          checking is performed prior to the install, to determine   * 00032900
*          if the service definition that the input definition was    * 00033000
*          based on is still the currently installed service          * 00033100
*          definition (i.e. another user has not made updates).       * 00033200
*                                                                     * 00033300
*                                                                     * 00033400
*          COND=YES                                                   * 00033500
*                                                                     * 00033600
*              indicates that the input service definition should     * 00033700
*              only be installed if the identifier of currently       * 00033800
*              installed service definition matches the base          * 00033900
*              identifier passed on IN_BASEID keyword. This allows    * 00034000
*              the user to detect changes in the installed service    * 00034100
*              definition, since the last extract was done, and       * 00034200
*              allows the user to confirm whether the install should  * 00034300
*              still occur.                                           * 00034400
*                                                                     * 00034500
*                                                                     * 00034600
*              IN_BASEID=xin_baseid                                   * 00034700
*                  is the name (RS-type), or address in register      * 00034800
*                  (2)-(12), of a required character input variable   * 00034900
*                  specifying an area that contains the identifier of * 00035000
*                  the service definition that was used as a base for * 00035100
*                  the service definition being installed.  This area * 00035200
*                  is mapped by the SVIDSSVD DESCT in macro IWMSVIDS. * 00035300
*                                                                     * 00035400
*                                                                     * 00035500
*                                                                     * 00035600
*          COND=NO                                                    * 00035700
*              indicates that the input service definition should be  * 00035800
*              installed unconditionally.                             * 00035900
*                                                                     * 00036000
*                                                                     * 00036100
*                                                                     * 00036200
*                                                                     * 00036300
*                                                                     * 00036400
*                                                                     * 00036500
*      [RETCODE=xretcode]                                             * 00036600
*          is the name (RS-type) of an optional fullword output       * 00036700
*          variable, or register (2)-(12), into which the return code * 00036800
*          is to be copied from GPR 15.                               * 00036900
*                                                                     * 00037000
*                                                                     * 00037100
*                                                                     * 00037200
*                                                                     * 00037300
*      [RSNCODE=xrsncode]                                             * 00037400
*          is the name (RS-type) of an optional fullword output       * 00037500
*          variable, or register (2)-(12), into which the reason code * 00037600
*          is to be copied from GPR 0.                                * 00037700
*                                                                     * 00037800
*                                                                     * 00037900
*                                                                     * 00038000
*                                                                     * 00038100
*      [PLISTVER=xplistver|IMPLIED_VERSION]                         * 00038200
*          is an optional byte input decimal value in the "0-0" range * 00038300
*          that specifies the macro version.  PLISTVER is the only    * 00038400
*          key allowed on the list form of MF and determines which    * 00038500
*          parameter list is generated.  Note that MAX may be         * 00038600
*          specified instead of a number, and the parameter list will * 00038700
*          be of the largest size currently supported. This size may  * 00038800
*          grow from release to release (thus possibly affecting the  * 00038900
*          amount of storage needed by your program).  If your        * 00039000
*          program can tolerate this, IBM recommends that you always  * 00039100
*          specify MAX when creating the list form parameter list as  * 00039200
*          that will ensure that the list form parameter list is      * 00039300
*          always long enough to hold whatever parameters might be    * 00039400
*          specified on the execute form.                             * 00039500
*          DEFAULT: IMPLIED_VERSION.  When PLISTVER is omitted, the   * 00039600
*          default is the lowest version which allows all of the      * 00039700
*          parameters specified on the invocation to be processed.    * 00039800
*                                                                     * 00039900
*                                                                     * 00040000
*                                                                     * 00040100
*                                                                     * 00040200
*      [MF=S|L|E]                                                   * 00040300
*          is an optional keyword input which specifies the macro     * 00040400
*          form.                                                      * 00040500
*          DEFAULT: S                                                 * 00040600
*                                                                     * 00040700
*                                                                     * 00040800
*          [MF=S]                                                     * 00040900
*              specifies the standard form of the macro.  The "S"     * 00041000
*              form generates code to put the parameters into an      * 00041100
*              in-line parameter list and invoke the desired service. * 00041200
*              Full checking for required macro keys is done along    * 00041300
*              with supplying defaults for omitted optional           * 00041400
*              parameters.                                            * 00041500
*                                                                     * 00041600
*          [MF=(L,xmfctrl,xmfattr|0D)]                              * 00041700
*              specifies the list form of the macro.  The "L" form    * 00041800
*              defines an area to be used for the parameter list.     * 00041900
*              Only the PLISTVER key may be specified on the          * 00042000
*              invocation.  All other macro parameters are flagged as * 00042100
*              errors.  If PLISTVER is not specified, the original    * 00042200
*              parameter list definition is used.                     * 00042300
*                                                                     * 00042400
*            ,xmfctrl                                                 * 00042500
*              is a required input.  It is the name of a storage area * 00042600
*              for the parameter list.                                * 00042700
*                                                                     * 00042800
*            ,xmfattr|0D                                            * 00042900
*              is an optional 60 character input string that varies   * 00043000
*              from 1 to 60 characters. Use it to force boundary      * 00043100
*              alignment of the parameter list. Use only 0F or 0D.    * 00043200
*              DEFAULT: 0D which forces the parameter list to a       * 00043300
*              doubleword boundary.                                   * 00043400
*                                                                     * 00043500
*          [MF=(E,xmfctrl,COMPLETE)]                                * 00043600
*              specifies the execute form of the macro.  The "E" form * 00043700
*              generates code to put the parameters into the          * 00043800
*              parameter list specified by xmfctrl and provides full  * 00043900
*              syntax checking with default setting.                  * 00044000
*                                                                     * 00044100
*            ,xmfctrl                                                 * 00044200
*              is a required input.  It is the name (RS-type), or     * 00044300
*              address in register (1)-(12), of a storage area for    * 00044400
*              the parameter list.                                    * 00044500
*                                                                     * 00044600
*            ,COMPLETE                                              * 00044700
*              is an optional keyword input which specifies the       * 00044800
*              degree of macro parameter syntax checking.             * 00044900
*              DEFAULT: COMPLETE                                      * 00045000
*                                                                     * 00045100
*                                                                     * 00045200
*              COMPLETE                                               * 00045300
*                  Checking for required macro keys is done and       * 00045400
*                  defaults are supplied for omitted optional         * 00045500
*                  parameters.                                        * 00045600
*                                                                     * 00045700
*                                                                     * 00045800
*                                                                     * 00045900
*                                                                     * 00046000
*                                                                     * 00046100
*                                                                     * 00046200
*                                                                     * 00046300
*01* RETURN CODES:                                                    * 00046400
*                                                                     * 00046500
*                                                                     * 00046600
*            0    Name: IwmRetCodeOk                                  * 00046700
*                                                                     * 00046800
*                 Meaning: Successful completion.                     * 00046900
*                                                                     * 00047000
*                 Action: None required.                              * 00047100
*                                                                     * 00047200
*            4    Name: IwmRetCodeWarning                             * 00047300
*                                                                     * 00047400
*                 Meaning: Successful completion, unusual conditions  * 00047500
*                 noted.                                              * 00047600
*                                                                     * 00047700
*                                                                     * 00047800
*                 HEX REASON  MEANING/ACTION                          * 00047900
*                 CODE                                                * 00048000
*                                                                     * 00048100
*                 xxxx0413    Name: IwmRsnCodeIdsDontMatch            * 00048200
*                                                                     * 00048300
*                             Meaning:  COND=YES was specified on the * 00048400
*                             IWMDINST macro, yet the service         * 00048500
*                             definition identifier specified on the  * 00048600
*                             IN_BASEID keyword did not match the     * 00048700
*                             identifier of the installed service     * 00048800
*                             definition.  The identifier of the      * 00048900
*                             currently installed service definition  * 00049000
*                             is returned in the area specified on    * 00049100
*                             the QRY_BASEID keyword.                 * 00049200
*                                                                     * 00049300
*                             Action: None required.                  * 00049400
*                                                                     * 00049500
*                 xxxx041A    Name: IwmRsnCodeNoPolMgt                * 00049600
*                                                                     * 00049700
*                             Meaning:  System does not support       * 00049800
*                             policy management services.  This       * 00049900
*                             return code is only set when the MVS    * 00050000
*                             release is prior to MVS/ESA SP5.2.0.    * 00050100
*                                                                     * 00050200
*                             Action: None required.                  * 00050300
*                                                                     * 00050400
*                                                                     * 00050500
*                                                                     * 00050600
*            8    Name: IwmRetCodeInvocError                          * 00050700
*                                                                     * 00050800
*                 Meaning: Invalid invocation environment or          * 00050900
*                 parameters.                                         * 00051000
*                                                                     * 00051100
*                                                                     * 00051200
*                 HEX REASON  MEANING/ACTION                          * 00051300
*                 CODE                                                * 00051400
*                                                                     * 00051500
*                 xxxx0801    Name: IwmRsnCodeSrbMode                 * 00051600
*                                                                     * 00051700
*                             Meaning:  Caller is in SRB mode.        * 00051800
*                                                                     * 00051900
*                             Action: Avoid requesting this function  * 00052000
*                             while in SRB mode.                      * 00052100
*                                                                     * 00052200
*                 xxxx0803    Name: IwmRsnCodeDisabled                * 00052300
*                                                                     * 00052400
*                             Meaning: Caller is disabled.            * 00052500
*                                                                     * 00052600
*                             Action: Avoid requesting this function  * 00052700
*                             while disabled.                         * 00052800
*                                                                     * 00052900
*                 xxxx0804    Name: IwmRsnCodeLocked                  * 00053000
*                                                                     * 00053100
*                             Meaning: Caller is locked.              * 00053200
*                                                                     * 00053300
*                             Action: Avoid requesting this function  * 00053400
*                             while locked.                           * 00053500
*                                                                     * 00053600
*                 xxxx0810    Name: IwmRsnCodeEutFrr                  * 00053700
*                                                                     * 00053800
*                             Meaning:  Caller has EUT FRR            * 00053900
*                             established.                            * 00054000
*                                                                     * 00054100
*                             Action: Avoid requesting this function  * 00054200
*                             with an EUT FRR set.                    * 00054300
*                                                                     * 00054400
*                 xxxx0823    Name: IwmRsnCodeDatoff                  * 00054500
*                                                                     * 00054600
*                             Meaning: Caller invoked service while   * 00054700
*                             DATOFF                                  * 00054800
*                                                                     * 00054900
*                             Action: Avoid requesting this function  * 00055000
*                             in this environment.                    * 00055100
*                                                                     * 00055200
*                 xxxx0824    Name: IwmRsnCodeAmode24                 * 00055300
*                                                                     * 00055400
*                             Meaning: Caller invoked service but was * 00055500
*                             in 24 bit addressing mode.              * 00055600
*                                                                     * 00055700
*                             Action: Request this function only when * 00055800
*                             you are in 31 bit addressing mode.      * 00055900
*                                                                     * 00056000
*                 xxxx0827    Name: IwmRsnCodeRsvdNot0                * 00056100
*                                                                     * 00056200
*                             Meaning:  Reserved field in parameter   * 00056300
*                             list was non-zero.                      * 00056400
*                                                                     * 00056500
*                             Action: Check for possible storage      * 00056600
*                             overlay of the parameter list.          * 00056700
*                                                                     * 00056800
*                 xxxx0828    Name: IwmRsnCodeBadVersion              * 00056900
*                                                                     * 00057000
*                             Meaning: Version number in parameter    * 00057100
*                             list is not valid or the length         * 00057200
*                             specified is incorrect.                 * 00057300
*                                                                     * 00057400
*                             Action: Check for possible storage      * 00057500
*                             overlay of the parameter list.          * 00057600
*                                                                     * 00057700
*                 xxxx0829    Name: IwmRsnCodeBadOptions              * 00057800
*                                                                     * 00057900
*                             Meaning:  Parameter list omits required * 00058000
*                             parameters or supplies mutually         * 00058100
*                             exclusive parameters or provides data   * 00058200
*                             associated with options not selected.   * 00058300
*                                                                     * 00058400
*                             Action: Check for possible storage      * 00058500
*                             overlay of the parameter list.          * 00058600
*                                                                     * 00058700
*                 xxxx0830    Name: IwmRsnCodeBadAlet                 * 00058800
*                                                                     * 00058900
*                             Meaning:  Caller has passed an invalid  * 00059000
*                             ALET.                                   * 00059100
*                                                                     * 00059200
*                             Action: Check for possible storage      * 00059300
*                             overlay of the parameter list or        * 00059400
*                             variable.                               * 00059500
*                                                                     * 00059600
*                 xxxx083D    Name: IwmRsnCodeBadServDI               * 00059700
*                                                                     * 00059800
*                             Meaning:  Caller has passed a Service   * 00059900
*                             Definition area that failed validation. * 00060000
*                                                                     * 00060100
*                             Action:  See values in VALCHECK_RSN and * 00060200
*                             VALCHECK_OFFSET parameters for more     * 00060300
*                             information concerning the specific     * 00060400
*                             failure.                                * 00060500
*                                                                     * 00060600
*                 xxxx0841    Name: IwmRsnCodeXMemMode                * 00060700
*                                                                     * 00060800
*                             Meaning:  Caller is in cross memory     * 00060900
*                             mode.                                   * 00061000
*                                                                     * 00061100
*                             Action: Invoke the function in          * 00061200
*                             non-cross memory mode.                  * 00061300
*                                                                     * 00061400
*                 xxxx085B    Name: IwmRsnCodeNoSERVDArea             * 00061500
*                                                                     * 00061600
*                             Meaning:  Caller invoked service        * 00061700
*                             without a required SERVD area or the    * 00061800
*                             SERVD area address is 0.                * 00061900
*                                                                     * 00062000
*                             Action: Check for possible storage      * 00062100
*                             overlay of the parameter list or        * 00062200
*                             variable.                               * 00062300
*                                                                     * 00062400
*                                                                     * 00062500
*                                                                     * 00062600
*            C    Name: IwmRetCodeEnvError                            * 00062700
*                                                                     * 00062800
*                 Meaning: Environmental error.                       * 00062900
*                                                                     * 00063000
*                                                                     * 00063100
*                 HEX REASON  MEANING/ACTION                          * 00063200
*                 CODE                                                * 00063300
*                                                                     * 00063400
*                 xxxx0C01    Name: IwmRsnCodeNoStg                   * 00063500
*                                                                     * 00063600
*                             Meaning:  Storage is not available for  * 00063700
*                             the request.                            * 00063800
*                                                                     * 00063900
*                             Action: There is a storage shortage.    * 00064000
*                             The function may work successfully at a * 00064100
*                             later time.                             * 00064200
*                                                                     * 00064300
*                 xxxx0C0E    Name: IwmRsnCodeInsufAccess             * 00064400
*                                                                     * 00064500
*                             Meaning:  The RACF facility class is    * 00064600
*                             active and a profile has been defined   * 00064700
*                             for the MVSADMIN.WLM.POLICY RACF        * 00064800
*                             facility class profile to which the     * 00064900
*                             caller does not have sufficient         * 00065000
*                             (update) access.                        * 00065100
*                                                                     * 00065200
*                             Action: Invoke the function when the    * 00065300
*                             conditions are alleviated.              * 00065400
*                                                                     * 00065500
*                 xxxx0C0F    Name: IwmRsnCodeCDSNotAvail             * 00065600
*                                                                     * 00065700
*                             Meaning:  A couple dataset for WLM has  * 00065800
*                             not been defined or it has been defined * 00065900
*                             but this system does not have           * 00066000
*                             connectivity to the dataset.            * 00066100
*                                                                     * 00066200
*                             Action: No action required.             * 00066300
*                                                                     * 00066400
*                 xxxx0C10    Name: IwmRsnCodeCDSTooSmall             * 00066500
*                                                                     * 00066600
*                             Meaning:  WLM CDS is too small to       * 00066700
*                             process the request.                    * 00066800
*                                                                     * 00066900
*                             Action: No action required.             * 00067000
*                                                                     * 00067100
*                                                                     * 00067200
*                                                                     * 00067300
*            10   Name: IwmRetCodeCompError                           * 00067400
*                                                                     * 00067500
*                 Meaning: Component error.                           * 00067600
*                                                                     * 00067700
*                 Action: No action required.  The function may be    * 00067800
*                 successful if invoked again.                        * 00067900
*                                                                     * 00068000
*                                                                     * 00068100
*                                                                     * 00068200
*                                                                     * 00068300
*01* REASON CODES:                                                    * 00068400
*                                                                     * 00068500
*       A unique reason code will be returned whenever the return     * 00068600
*       code is non-zero.  Reason codes, as appropriate, are defined  * 00068700
*       under their corresponding return code.  Reason code and       * 00068800
*       return code constants are defined within IWMYCON.  Note that  * 00068900
*       the high order halfword of register 0, and the reason code    * 00069000
*       variable when specified, may be non-zero and represents       * 00069100
*       diagnostic data which is NOT part of the external interface.  * 00069200
*       The high order halfword should thus be excluded from          * 00069300
*       comparison with the reason code values described above.  The  * 00069400
*       constant, IWMRSNCODE_MASK_CONST defined in IWMYCON, may be    * 00069500
*       used for this purpose.                                        * 00069600
*                                                                     * 00069700
*01* ABEND CODES:                                                     * 00069800
*                                                                     * 00069900
*                                                                     * 00070000
*       1C7       WLM Abend                                           * 00070100
*                                                                     * 00070200
*                                                                     * 00070300
*                                                                     * 00070400
*01* ABEND REASON CODES:                                              * 00070500
*                                                                     * 00070600
*       REASON    ABEND                                               * 00070700
*       CODE      CODE      DESCRIPTION                               * 00070800
*                                          * 00070900
*                                                                     * 00071000
*                                                                     * 00071100
*       0Axx0005  1C7       An    attempt   to   reference   caller's * 00071200
*                           parameters caused an OC4 abend.           * 00071300
*                                                                     * 00071400
*                                                                     * 00071500
*                                                                     * 00071600
*01* MODULE TYPE:  ASSEM MACRO                                        * 00071700
*                                                                     * 00071800
*02*   PROCESSOR:  ASSEM                                              * 00071900
*                                                                     * 00072000
*01* COMPONENT:  SCWLM                                                * 00072100
*                                                                     * 00072200
*01* DISTRIBUTION LIBRARY: AMACLIB                                    * 00072300
*                                                                     * 00072400
*01* MACRO USAGE NOTES:                                               * 00072500
*                                                                     * 00072600
*                                                                     * 00072700
*    1.  Printing of the macro expansion is controlled by the ZPRINT  * 00072800
*        global macro variable.  Any value other than 'NO' will       * 00072900
*        result in the macro expansion being printed.  The default is * 00073000
*        'YES'.  The following examples illustrate how the ZPRINT     * 00073100
*        variable should be set.                                      * 00073200
*                                                                     * 00073300
*                    GBLC &ZPRINT                                     * 00073400
*            &ZPRINT SETC 'YES'          &ZPRINT SETC 'NO'            * 00073500
*                                                                     * 00073600
*                                                                     * 00073700
*    2.  All   keys   currently   contained  in  the  IWMDINST  macro * 00073800
*        correspond  to  version  0.   If you specify PLISTVER, use a * 00073900
*        value of 0 or MAX.                                           * 00074000
*                                                                     * 00074100
*                                                                     * 00074200
*                                                                     * 00074300
*                                                                     * 00074400
*01* CHANGE ACTIVITY:                                                 * 00074500
*                                                                     * 00074600
*   Flag LineItem  FMID    Date   ID    Comment                       * 00074700
*                                                                     * 00074800
*    $L0=WLMRM    HBB5520 940109 PD88CT:                              * 00074900
*    $L1=WLMP     HBB6603 951012 PD88RK:  Comments on application     * 00075000
*                                         environment data area       * 00075100
*    $P1=PSY0315  JBB6604 970225 PDB9RK:  Document reason code -      * 00075200
*                                         IwmRsnCodeXMemMode          * 00075300
*    $P2=PSY0321  JBB6604 970225 PDB9RK:  Document abend code - 1C7   * 00075400
*    $P3=PSY0322  JBB6604 970225 PDB9RK:  Authorization statement is  * 00075500
*                                         incorrect                   * 00075600
*    $P4=PSY0571  JBB6604 970401 PDB9DB:  Add SVSEA to prolog         * 00075700
****** END OF SPECIFICATIONS *****************************************/ 00075800
*/* TLINE 1 *********************************************************** 00075900
         MACRO                                                          00076000
&XLABEL  IWMDINST &SERVD_AREA=,&QRY_BASEID=,&PRODUCT_ID=,              *00076100
               &VALCHECK_RSN=,&VALCHECK_OFFSET=,&COND=,&IN_BASEID=,    *00076200
               &RETCODE=,&RSNCODE=,&PLISTVER=,&MF=                      00076300
.*                                                                      00076400
*                     MACDATE -08/26/97-<0>                             00076500
.*                                                                      00076600
.*******************************************************************    00076700
.***AB.02  GLOBAL VARIABLES TO CONTROL PRINT AND CODE GENERATION        00076800
.*******************************************************************    00076900
                     GBLC  &ZPRINT     YES=PRINT NO=NO PRINT            00077000
                     GBLC  &ZTEST      YES=TEST NO=NO TEST              00077100
                     GBLC  &ZSYSTEM    PCCODE10, MVS, SAK, VM, XAX      00077200
.*                                                                      00077300
                     GBLC  &ZIWMDINST  YES=MACRO USED AT LEAST ONCE     00077400
.*******************************************************************    00077500
.***AB.03  COMMONLY USED LOCAL MACRO VARIABLES                          00077600
.*******************************************************************    00077700
                     LCLC  &ZMS        ERROR MESSAGE WORK AREA          00077800
                     LCLC  &ZCNDX      LAST THREE SYSNDX CHARACTERS     00077900
                     LCLC  &ZCLNG      USED WHEN LENGTH IS NEEDED       00078000
                     LCLC  &ZCGPR      USED WHEN VALUE IS IN A GPR      00078100
                     LCLC  &ZCVAL      USED TO CONTAIN FIXED VALUE      00078200
                     LCLA  &ZAWRK      USED AS A WORK AREA              00078300
                     LCLA  &ZASIZ      USED FOR SIZE OF VALUE           00078400
                     LCLA  &ZN         NUMERIC WORK VARIABLE            00078500
                     LCLC  &ZC         CHARACTER WORK VARIABLE          00078600
                     LCLC  &ZTLC       CHARACTER TOO LONG VARIABLE      00078700
                     LCLA  &ZTLA       VALUE TOO LONG VARIABLE          00078800
                     LCLA  &ZMACRET    MACRO RETURN CODE                00078900
&ZMACRET             SETA  0           ASSUME NO ERRORS                 00079000
.*                                                                      00079100
                     LCLC  &ZCSYSLIST(255)      NONXKEY, POS ARRAY      00079200
                     LCLA  &ZASYSLNDX  WORK INDEX FOR ZCSYSLIST()       00079300
                     LCLA  &ZPLLEN     PARAMETER LIST LENGTH            00079400
                     LCLC  &ZENDBASEPL          End of base PL          00079500
                     LCLA  &ZPLWORKA   PARAMETER LIST LENGTH            00079600
.*******************************************************************    00079700
.***AB.04  MACRO VARIABLES FOR RANGES AND SETS OF ARGUMENTS             00079800
.*******************************************************************    00079900
                     LCLA  &ZI         INDEX FOR ARRAY                  00080000
                     LCLA  &ZJ         INDEX FOR PARMS                  00080100
                     LCLA  &ZK         INDEX FOR PARSE                  00080200
                     LCLA  &ZLO        LOW RANGE VALUE                  00080300
                     LCLA  &ZHI        HIGH RANGE VALUE                 00080400
                     LCLC  &ZW         WORK AREA FOR PARM               00080500
.********************************************************************   00080600
.***AB.05  INVOKE MVS MACROS TO CONTROL CODE GENERATION                 00080700
.********************************************************************   00080800
                     GBLC  &SYSSPLV    SP LEVEL 1,2,3 -SPLEVEL          00080900
                     GBLC  &SYSASCE    SYSTEM STATE P ANY AR-SYSSTATE   00081000
.*                                                                      00081100
                     AIF   (K'&SYSASCE GT 0).ZSYS4  SYS STATE DEFINED   00081200
                     AIF   (K'&SYSSPLV GT 0).ZSYS2  SP LEVEL DEFINED    00081300
                     SPLEVEL  TEST                                      00081400
.ZSYS2               ANOP  ,                                            00081500
                     AIF   ('&SYSSPLV' EQ '1').ZSYS3  PRE SP 3.1        00081600
                     AIF   ('&SYSSPLV' EQ '2').ZSYS3  PRE SP 3.1        00081700
                     SYSSTATE TEST                                      00081800
                     AGO   .ZSYS4                                       00081900
.ZSYS3               ANOP  ,                                            00082000
&SYSASCE             SETC  'P'         ASSUME SYSSTATE PRIMARY          00082100
.ZSYS4               ANOP  ,                                            00082200
.*******************************************************************    00082300
.***AB.07  DEFINE ALL MACRO VARIABLES                                   00082400
.*******************************************************************    00082500
                     LCLC  &XSERVD_AREA         ++ NAME                 00082600
                     LCLC  &XQRY_BASEID         ++ NAME                 00082700
                     LCLC  &XPRODUCT_ID         ++ NAME                 00082800
                     LCLC  &XVALCHECK_RSN       ++ NAME                 00082900
                     LCLC  &XVALCHECK_OFFSET    ++ NAME                 00083000
                     LCLC  &XCOND      ++ VALUE                         00083100
                     LCLC  &XIN_BASEID          ++ NAME                 00083200
                     LCLC  &XRETCODE   ++ NAME                          00083300
                     LCLC  &XRSNCODE   ++ NAME                          00083400
                     LCLA  &XPLISTVER  ++ VALUE                         00083500
                     LCLC  &XMF        ++ VALUE                         00083600
                     LCLC  &XMFCTRL    ++ NAME                          00083700
                     LCLC  &XMFATTR    ++ VALUE                         00083800
                     LCLC  &XMFSCK     ++ VALUE                         00083900
.*******************************************************************    00084000
.***AB.13  DEFINE MACRO VARIABLES FOR INPUT/OUTPUT PROCESSING           00084100
.*******************************************************************    00084200
                     LCLC  &ZXSERVD_AREA        ++ INPUT NAME           00084300
                     LCLC  &ZXQRY_BASEID        ++ OUTPUT NAME          00084400
                     LCLC  &ZXPRODUCT_ID        ++ INPUT NAME           00084500
                     LCLC  &ZXVALCHECK_RSN      ++ OUTPUT NAME          00084600
                     LCLC  &ZXVALCHECK_OFFSET   ++ OUTPUT NAME          00084700
                     LCLC  &ZXCOND     ++ INPUT VALUE                   00084800
                     LCLC  &ZXIN_BASEID         ++ INPUT NAME           00084900
                     LCLC  &ZXRETCODE  ++ OUTPUT NAME                   00085000
                     LCLC  &ZXRSNCODE  ++ OUTPUT NAME                   00085100
                     LCLC  &ZXPLISTVER          ++ INPUT VALUE          00085200
                     LCLC  &ZXMF       ++ INPUT VALUE                   00085300
                     LCLC  &ZXMFCTRL   ++ INPUT NAME                    00085400
                     LCLC  &ZXMFATTR   ++ INPUT VALUE                   00085500
                     LCLC  &ZXMFSCK    ++ INPUT VALUE                   00085600
.********************************************************************   00085700
.***AC.PLV01  PROCESS PLISTVER                                      *   00085800
.********************************************************************   00085900
&XPLISTVER      SETA  0                                                 00086000
                AIF   (K'&PLISTVER(1) LE 0).ZPLV0                       00086100
                AIF   ('&PLISTVER(1)' NE 'MAX').ZPLV0                   00086200
&XPLISTVER      SETA  0                                                 00086300
.ZPLV0          ANOP  ,                                                 00086400
.*                                                                      00086500
                AIF   (K'&PLISTVER(1) LE 0).ZPVCKE                      00086600
                AIF   ('&PLISTVER(1)' EQ 'IMPLIED_VERSION').ZPVCKE      00086700
                AIF   ('&PLISTVER(1)' EQ 'MAX').ZPVCKE                  00086800
.*-------------------------------------------------------------------   00086900
                AIF   (N'&PLISTVER LE 1).ZPVCK3  CK NUM                 00087000
&ZMS            SETC  '"PLISTVER='         *KPOSA* MNOTE                00087100
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00087200
&ZMS            SETC  '&ZMS "PLISTVER"'                                 00087300
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00087400
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00087500
                AGO   .ZPVCK2                                           00087600
.ZPVCK3         ANOP  ,                                                 00087700
.*-------------------------------------------------------------------   00087800
                AIF   ('&PLISTVER'(1,1) NE '(').ZPVCK2                  00087900
&ZMS            SETC  '"PLISTVER='         *KGPRA* MNOTE                00088000
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00088100
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         00088200
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'                 00088300
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00088400
                AGO   .ZPVCKE                                           00088500
.ZPVCK2         ANOP  ,                                                 00088600
.*-------------------------------------------------------------------   00088700
&ZCVAL          SETC  '&PLISTVER(1)'                                    00088800
                AIF   ('&ZCVAL'(1,1) EQ '(').ZPVCKE  IN GPR             00088900
                AIF   (T'&ZCVAL NE 'N').ZPVCK6  NUMERIC ERR             00089000
&ZN             SETA   &PLISTVER(1)        CONVERT TO ARITHMETIC        00089100
                AIF   (&ZN LT 0).ZPVCK6    TOO LOW                      00089200
                AIF   (&ZN LE 0).ZPVCK4A   NOT HIGH                     00089300
.ZPVCK6         ANOP  ,                                                 00089400
&ZMS            SETC  '"PLISTVER='         *KRNGA* MNOTE                00089500
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00089600
&ZMS            SETC  '&ZMS THE RANGE IS "0-0"'                         00089700
                MNOTE 8,' &ZMS FOR ARGUMENT 1.'                         00089800
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00089900
&XPLISTVER      SETA  0                                                 00090000
                AGO   .ZPVCKE                                           00090100
.*-------------------------------------------------------------------   00090200
.ZPVCK4A        ANOP  ,                                                 00090300
                AIF   (&ZN GE &XPLISTVER).ZPVCK4                        00090400
&ZMS            SETC  'PLISTVER='          *KVALA* MNOTE                00090500
&ZMS            SETC  '&ZMS.&PLISTVER(1)'                               00090600
&ZMS            SETC  '&ZMS., BUT PLISTVER OF'                          00090700
&ZMS            SETC  '&ZMS &XPLISTVER'                                 00090800
                MNOTE 8,' &ZMS IS REQUIRED.'                            00090900
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00091000
                AGO   .ZPVCK5                                           00091100
.ZPVCK4         ANOP  ,                                                 00091200
&XPLISTVER      SETA  &PLISTVER(1)                                      00091300
.ZPVCK5         ANOP  ,                                                 00091400
.ZPVCKE         ANOP  ,                                                 00091500
.********************************************************************   00091600
.***AG.MF01 PROCESS MF MACRO FORMS                                      00091700
.********************************************************************   00091800
                     ACTR  10000                                        00091900
.*------------------------------------------------------------------    00092000
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00092100
&XMF                 SETC  ''          INITIALIZE XVARIABLE             00092200
.*-------------------------------------------------------------------   00092300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00092400
.ZG35                ANOP  ,                                            00092500
&ZTLC                SETC 'S'                                           00092600
                     AIF   ('&MF(1)' NE '&ZTLC').ZG36                   00092700
&XMF                 SETC  'S'         SET KEYWORD                      00092800
                     AIF   (N'&MF LE 1).ZG35A   CK NUM                  00092900
&ZMS                 SETC  '"MF='      *KPOSA* MNOTE                    00093000
&ZMS                 SETC  '&ZMS.&MF"'                                  00093100
&ZMS                 SETC  '&ZMS "MF"'                                  00093200
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00093300
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00093400
.ZG35A               ANOP  ,                                            00093500
.*-------------------------------------------------------------------   00093600
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00093700
.ZG36                ANOP  ,                                            00093800
&ZTLC                SETC 'L'                                           00093900
                     AIF   ('&MF(1)' NE '&ZTLC').ZG43                   00094000
&XMF                 SETC  'L'         SET KEYWORD                      00094100
                     AIF   (N'&MF LE 3).ZG36A   CK NUM                  00094200
&ZMS                 SETC  '"MF='      *KPOSA* MNOTE                    00094300
&ZMS                 SETC  '&ZMS.&MF"'                                  00094400
&ZMS                 SETC  '&ZMS "MF"'                                  00094500
                     MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'         00094600
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00094700
.ZG36A               ANOP  ,                                            00094800
.*-------------------------------------------------------------------   00094900
.***AG.KKCTL08 -MF(L) SPECIAL CHECK                                     00095000
                     AIF   (N'&SYSLIST NE 0).ZG36B  POSITIONALS?        00095100
                     AIF   ('&SERVD_AREA' NE '').ZG36B  KEYS?           00095200
                     AIF   ('&QRY_BASEID' NE '').ZG36B  KEYS?           00095300
                     AIF   ('&PRODUCT_ID' NE '').ZG36B  KEYS?           00095400
                     AIF   ('&VALCHECK_RSN' NE '').ZG36B  KEYS?         00095500
                     AIF   ('&VALCHECK_OFFSET' NE '').ZG36B  KEYS?      00095600
                     AIF   ('&COND' NE '').ZG36B  KEYS?                 00095700
                     AIF   ('&IN_BASEID' NE '').ZG36B  KEYS?            00095800
                     AIF   ('&RETCODE' NE '').ZG36B  KEYS?              00095900
                     AIF   ('&RSNCODE' NE '').ZG36B  KEYS?              00096000
                     AGO    .ZG36C     INVOCATION OKAY                  00096100
.ZG36B               ANOP  ,                                            00096200
&ZMS                 SETC  'THE "L" FORM OF "MF"'  *MFLA* MNOTE         00096300
&ZMS                 SETC  '&ZMS CAN ONLY HAVE'                         00096400
&ZMS                 SETC  '&ZMS THE "PLISTVER" KEY'                    00096500
                     MNOTE 8,' &ZMS SPECIFIED ON THE INVOCATION.'       00096600
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00096700
.ZG36C               ANOP  ,                                            00096800
.*-------------------------------------------------------------------   00096900
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00097000
&ZXMFCTRL            SETC  'INPUT'     SET IN/OUTPUT                    00097100
&XMFCTRL             SETC  '&MF(2,1)'  SET XVARIABLE                    00097200
                     AIF   (N'&MF(2) GT 1).ZG38B  MULTI PARMS           00097300
&XMFCTRL             SETC  '&MF(2)'    SET XVARIABLE                    00097400
.ZG38B               AIF   (K'&MF(2) GT 0).ZG38C                        00097500
&ZXMFCTRL            SETC  ''          RESET IN/OUTPUT                  00097600
&ZMS                 SETC  'WHEN "L" IS SPECIFIED'  *KRQDA*             00097700
&ZMS                 SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'          00097800
                     MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                 00097900
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00098000
.ZG38C               ANOP  ,                                            00098100
.*-------------------------------------------------------------------   00098200
.***AG.KCK01 NAME, OPT RQD INPUT, POS(2) -GPR NOT ALLOWED               00098300
                     AIF   (K'&ZXMFCTRL LE 0).ZG38P  NOT I/O            00098400
                     AIF   ('&XMFCTRL'(1,1) NE '(').ZG38P               00098500
&ZXMFCTRL            SETC  ''          RESET IN/OUTPUT                  00098600
&ZMS                 SETC  '"MF='      *KGPRA* MNOTE                    00098700
&ZMS                 SETC  '&ZMS.&MF"'                                  00098800
&ZMS                 SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'    00098900
                     MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 2.'            00099000
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00099100
.ZG38P               ANOP  ,                                            00099200
.*-------------------------------------------------------------------   00099300
.***AG.KXVAR13 VALUE, OPT INPUT, POS(3) -XVARIABLE                      00099400
&ZXMFATTR            SETC  'INPUT'     SET IN/OUTPUT                    00099500
&XMFATTR             SETC  '0D'                                         00099600
                     AIF   (K'&MF(3) LE 0).ZG41B  PARM                  00099700
&XMFATTR             SETC  '&MF(3,1)'  SET XVARIABLE                    00099800
                     AIF   (N'&MF(3) GT 1).ZG41B  MULTI PARMS           00099900
&XMFATTR             SETC  '&MF(3)'    SET XVARIABLE                    00100000
.ZG41B               ANOP  ,                                            00100100
.*-------------------------------------------------------------------   00100200
.***AG.KCK01 VALUE, OPT INPUT, POS(3) -GPR NOT ALLOWED                  00100300
                     AIF   (K'&ZXMFATTR LE 0).ZG41P  NOT I/O            00100400
                     AIF   ('&XMFATTR'(1,1) NE '(').ZG41P               00100500
&ZXMFATTR            SETC  ''          RESET IN/OUTPUT                  00100600
&ZMS                 SETC  '"MF='      *KGPRA* MNOTE                    00100700
&ZMS                 SETC  '&ZMS.&MF"'                                  00100800
&ZMS                 SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'    00100900
                     MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 3.'            00101000
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00101100
.ZG41P               ANOP  ,                                            00101200
.*-------------------------------------------------------------------   00101300
.***AG.KCK03 VALUE, OPT INPUT, POS(3) -CHARACTER LENGTH                 00101400
                     AIF   (K'&ZXMFATTR LE 0).ZG41S  NOT I/O            00101500
                     AIF   (K'&XMFATTR LE 60).ZG41S  LNG OK             00101600
&ZXMFATTR            SETC  ''          RESET IN/OUTPUT                  00101700
&ZMS                 SETC  '"MF='      *KLNGA* MNOTE                    00101800
&ZMS                 SETC  '&ZMS.&MF"'                                  00101900
&ZMS                 SETC  '&ZMS ARGUMENT 3 EXCEEDS THE MAXIMUM'        00102000
                     MNOTE 8,' &ZMS LENGTH OF 60 CHARACTERS.'           00102100
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00102200
.ZG41S               ANOP  ,                                            00102300
.*-------------------------------------------------------------------   00102400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00102500
.ZG43                ANOP  ,                                            00102600
&ZTLC                SETC 'E'                                           00102700
                     AIF   ('&MF(1)' NE '&ZTLC').ZG51                   00102800
&XMF                 SETC  'E'         SET KEYWORD                      00102900
                     AIF   (N'&MF LE 3).ZG43A   CK NUM                  00103000
&ZMS                 SETC  '"MF='      *KPOSA* MNOTE                    00103100
&ZMS                 SETC  '&ZMS.&MF"'                                  00103200
&ZMS                 SETC  '&ZMS "MF"'                                  00103300
                     MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'         00103400
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00103500
.ZG43A               ANOP  ,                                            00103600
.*-------------------------------------------------------------------   00103700
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00103800
&ZXMFCTRL            SETC  'INPUT'     SET IN/OUTPUT                    00103900
&XMFCTRL             SETC  '&MF(2,1)'  SET XVARIABLE                    00104000
                     AIF   (N'&MF(2) GT 1).ZG45B  MULTI PARMS           00104100
&XMFCTRL             SETC  '&MF(2)'    SET XVARIABLE                    00104200
.ZG45B               AIF   (K'&MF(2) GT 0).ZG45C                        00104300
&ZXMFCTRL            SETC  ''          RESET IN/OUTPUT                  00104400
&ZMS                 SETC  'WHEN "E" IS SPECIFIED'  *KRQDA*             00104500
&ZMS                 SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'          00104600
                     MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                 00104700
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00104800
.ZG45C               ANOP  ,                                            00104900
.*-------------------------------------------------------------------   00105000
.***AG.KCK02 NAME, OPT RQD INPUT, POS(2) -GPR OUT OF RANGE              00105100
                     AIF   (K'&ZXMFCTRL LE 0).ZG45R  NOT I/O            00105200
                     AIF   ('&XMFCTRL'(1,1) NE '(').ZG45R               00105300
&ZCGPR               SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)                   00105400
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG45P                 00105500
                     AIF   (K'&ZCGPR GT 2).ZG45Q                        00105600
                     AIF   ('&ZCGPR' EQ '0').ZG45Q                      00105700
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00105800
                     AIF   (T'&ZCGPR NE 'N').ZG45Q  INVALID REG NAME    00105900
.ZG45P               ANOP  ,                                            00106000
                     AIF   (T'&ZCGPR NE 'N').ZG45R  NON NUMERIC         00106100
                     AIF   ('&ZCGPR' LT '1').ZG45Q                      00106200
                     AIF   ('&ZCGPR' LE '12').ZG45R                     00106300
.ZG45Q               ANOP  ,                                            00106400
&ZMS                 SETC  '"MF='      *KGPRA* MNOTE                    00106500
&ZMS                 SETC  '&ZMS.&MF"'                                  00106600
&ZMS                 SETC  '&ZMS ARGUMENT 2 MUST SPECIFY A REGISTER'    00106700
                     MNOTE 8,' &ZMS IN THE RANGE (1)-(12).'             00106800
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00106900
.ZG45R               ANOP  ,                                            00107000
.*-------------------------------------------------------------------   00107100
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00107200
&XMFSCK              SETC  ''          INITIALIZE XVARIABLE             00107300
.ZG49A   AIF   ('&MF(3)' NE 'COMPLETE').ZG50A                           00107400
&XMFSCK              SETC  'COMPLETE'  SET KEYWORD                      00107500
.*-------------------------------------------------------------------   00107600
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00107700
.ZG50A               AIF   (K'&XMFSCK GT 0).ZG50C  KEYWORD              00107800
                     AIF   (K'&MF(3) LE 0).ZG50B                        00107900
&ZMS                 SETC  '"MF='      *KUKWA* MNOTE                    00108000
&ZMS                 SETC  '&ZMS.&MF"'                                  00108100
&ZMS                 SETC  '&ZMS ARGUMENT 3 IS AN UNKNOWN KEYWORD. '    00108200
&ZMS                 SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'          00108300
&ZMS                 SETC  '&ZMS "COMPLETE".'   VALID KEYWORD           00108400
                     MNOTE 8,' &ZMS '                                   00108500
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00108600
.ZG50B               ANOP  ,                                            00108700
&XMFSCK              SETC  'COMPLETE'  SET DEFAULT KEYWORD              00108800
.ZG50C               ANOP  ,                                            00108900
&ZXMFSCK             SETC  'INPUT'     SET IN/OUTPUT                    00109000
.*------------------------------------------------------------------    00109100
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00109200
.ZG51                ANOP  ,                                            00109300
&ZXMF                SETC  'INPUT'     SET IN/OUTPUT                    00109400
                     AIF   (K'&XMF GT 0).ZG51E  VALID ARG               00109500
                     AIF   (T'&MF EQ 'O').ZG51D  OMITTED                00109600
&ZASYSLNDX           SETA  0                                            00109700
.ZG51A               ANOP  ,           POSITIONAL MACRO KEY             00109800
&ZASYSLNDX           SETA  &ZASYSLNDX+1                                 00109900
                     AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG51C             00110000
&ZTLC                SETC 'MF'                                          00110100
                     AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG51A    00110200
.ZG51B               ANOP  ,                                            00110300
&ZXMF                SETC  ''          RESET IN/OUTPUT                  00110400
&ZMS                 SETC  'THE "MF" KEY'       *KOPTA* MNOTE           00110500
&ZMS                 SETC  '&ZMS MUST CONTAIN ONE'                      00110600
                     MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'             00110700
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00110800
                     AGO   .ZG51E                                       00110900
.ZG51C               ANOP  ,                                            00111000
&ZXMF                SETC  ''          RESET IN/OUTPUT                  00111100
&ZMS                 SETC  '"MF='      *KUKWA* MNOTE                    00111200
&ZMS                 SETC  '&ZMS.&MF"'                                  00111300
&ZMS                 SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '    00111400
&ZMS                 SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'          00111500
&ZMS                 SETC  '&ZMS "S",'          VALID KEYWORD           00111600
&ZMS                 SETC  '&ZMS "L",'          VALID KEYWORD           00111700
&ZMS                 SETC  '&ZMS OR "E".'       VALID KEYWORD           00111800
                     MNOTE 8,' &ZMS '                                   00111900
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00112000
                     AGO   .ZG51E                                       00112100
.ZG51D               ANOP  ,                                            00112200
&XMF                 SETC  'S'         SET DEFAULT KEYWORD              00112300
&XMFSCK              SETC  'COMPLETE'  COMPLETE CHECKING                00112400
.ZG51E               ANOP  ,                                            00112500
.********************************************************************   00112600
.***AG.MF02  FULL MACRO SYNTAX CHECKING                                 00112700
.********************************************************************   00112800
                     ACTR  10000                                        00112900
.*-------------------------------------------------------------------   00113000
.***AG.MF03 MF=(SLE)                                                    00113100
                     AIF   ('&XMF' EQ 'L').ZGMFX                        00113200
.*----------------------------------------------------------------***   00113300
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00113400
                     AIF   (N'&SERVD_AREA LE 1).ZG2A  CK NUM            00113500
&ZMS                 SETC  '"SERVD_AREA='       *KPOSA* MNOTE           00113600
&ZMS                 SETC  '&ZMS.&SERVD_AREA"'                          00113700
&ZMS                 SETC  '&ZMS "SERVD_AREA"'                          00113800
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00113900
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00114000
.ZG2A                ANOP  ,                                            00114100
.*-------------------------------------------------------------------   00114200
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00114300
&ZXSERVD_AREA        SETC  'INPUT'     SET IN/OUTPUT                    00114400
&XSERVD_AREA         SETC  '&SERVD_AREA(1)'     SET XVARIABLE           00114500
                     AIF   (N'&SERVD_AREA GT 1).ZG2B  MULTI PARMS       00114600
&XSERVD_AREA         SETC  '&SERVD_AREA'        SET XVARIABLE           00114700
.ZG2B                AIF   (K'&SERVD_AREA(1) GT 0).ZG2C                 00114800
&ZXSERVD_AREA        SETC  ''          RESET IN/OUTPUT                  00114900
&ZMS                 SETC  ' '         *KRQDA*                          00115000
&ZMS                 SETC  '&ZMS "SERVD_AREA" KEY AND ITS ARGUMENT'     00115100
                     MNOTE 8,' &ZMS ARE REQUIRED.'                      00115200
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00115300
.ZG2C                ANOP  ,                                            00115400
.*-------------------------------------------------------------------   00115500
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00115600
                     AIF   (K'&ZXSERVD_AREA LE 0).ZG2R  NOT I/O         00115700
                     AIF   ('&XSERVD_AREA'(1,1) NE '(').ZG2R            00115800
&ZCGPR               SETC  '&XSERVD_AREA'(2,K'&XSERVD_AREA-2)           00115900
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG2P                  00116000
                     AIF   (K'&ZCGPR GT 2).ZG2Q                         00116100
                     AIF   ('&ZCGPR' EQ '0').ZG2Q                       00116200
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00116300
                     AIF   (T'&ZCGPR NE 'N').ZG2Q  INVALID REG NAME     00116400
.ZG2P                ANOP  ,                                            00116500
                     AIF   (T'&ZCGPR NE 'N').ZG2R  NON NUMERIC          00116600
                     AIF   ('&ZCGPR' LT '2').ZG2Q                       00116700
                     AIF   ('&ZCGPR' LE '12').ZG2R                      00116800
.ZG2Q                ANOP  ,                                            00116900
&ZMS                 SETC  '"SERVD_AREA='       *KGPRA* MNOTE           00117000
&ZMS                 SETC  '&ZMS.&SERVD_AREA"'                          00117100
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00117200
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00117300
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00117400
.ZG2R                ANOP  ,                                            00117500
.*----------------------------------------------------------------***   00117600
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00117700
                     AIF   (N'&QRY_BASEID LE 1).ZG5A  CK NUM            00117800
&ZMS                 SETC  '"QRY_BASEID='       *KPOSA* MNOTE           00117900
&ZMS                 SETC  '&ZMS.&QRY_BASEID"'                          00118000
&ZMS                 SETC  '&ZMS "QRY_BASEID"'                          00118100
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00118200
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00118300
.ZG5A                ANOP  ,                                            00118400
.*-------------------------------------------------------------------   00118500
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00118600
                     AIF   (K'&QRY_BASEID(1) LE 0).ZG5C  NO PARM        00118700
&ZXQRY_BASEID        SETC  'OUTPUT'    SET OUTPUT                       00118800
&XQRY_BASEID         SETC  '&QRY_BASEID(1)'     SET XVARIABLE           00118900
                     AIF   (N'&QRY_BASEID GT 1).ZG5C                    00119000
&XQRY_BASEID         SETC  '&QRY_BASEID'        SET XVARIABLE           00119100
.ZG5C                ANOP  ,                                            00119200
.*-------------------------------------------------------------------   00119300
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00119400
                     AIF   (K'&ZXQRY_BASEID LE 0).ZG5R  NOT I/O         00119500
                     AIF   ('&XQRY_BASEID'(1,1) NE '(').ZG5R            00119600
&ZCGPR               SETC  '&XQRY_BASEID'(2,K'&XQRY_BASEID-2)           00119700
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG5P                  00119800
                     AIF   (K'&ZCGPR GT 2).ZG5Q                         00119900
                     AIF   ('&ZCGPR' EQ '0').ZG5Q                       00120000
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00120100
                     AIF   (T'&ZCGPR NE 'N').ZG5Q  INVALID REG NAME     00120200
.ZG5P                ANOP  ,                                            00120300
                     AIF   (T'&ZCGPR NE 'N').ZG5R  NON NUMERIC          00120400
                     AIF   ('&ZCGPR' LT '2').ZG5Q                       00120500
                     AIF   ('&ZCGPR' LE '12').ZG5R                      00120600
.ZG5Q                ANOP  ,                                            00120700
&ZMS                 SETC  '"QRY_BASEID='       *KGPRA* MNOTE           00120800
&ZMS                 SETC  '&ZMS.&QRY_BASEID"'                          00120900
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00121000
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00121100
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00121200
.ZG5R                ANOP  ,                                            00121300
.*----------------------------------------------------------------***   00121400
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00121500
                     AIF   (N'&PRODUCT_ID LE 1).ZG8A  CK NUM            00121600
&ZMS                 SETC  '"PRODUCT_ID='       *KPOSA* MNOTE           00121700
&ZMS                 SETC  '&ZMS.&PRODUCT_ID"'                          00121800
&ZMS                 SETC  '&ZMS "PRODUCT_ID"'                          00121900
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00122000
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00122100
.ZG8A                ANOP  ,                                            00122200
.*-------------------------------------------------------------------   00122300
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00122400
&ZXPRODUCT_ID        SETC  'INPUT'     SET IN/OUTPUT                    00122500
&XPRODUCT_ID         SETC  '&PRODUCT_ID(1)'     SET XVARIABLE           00122600
                     AIF   (N'&PRODUCT_ID GT 1).ZG8B  MULTI PARMS       00122700
&XPRODUCT_ID         SETC  '&PRODUCT_ID'        SET XVARIABLE           00122800
.ZG8B                AIF   (K'&PRODUCT_ID(1) GT 0).ZG8C                 00122900
&ZXPRODUCT_ID        SETC  ''          RESET IN/OUTPUT                  00123000
&ZMS                 SETC  ' '         *KRQDA*                          00123100
&ZMS                 SETC  '&ZMS "PRODUCT_ID" KEY AND ITS ARGUMENT'     00123200
                     MNOTE 8,' &ZMS ARE REQUIRED.'                      00123300
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00123400
.ZG8C                ANOP  ,                                            00123500
.*-------------------------------------------------------------------   00123600
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00123700
                     AIF   (K'&ZXPRODUCT_ID LE 0).ZG8R  NOT I/O         00123800
                     AIF   ('&XPRODUCT_ID'(1,1) NE '(').ZG8R            00123900
&ZCGPR               SETC  '&XPRODUCT_ID'(2,K'&XPRODUCT_ID-2)           00124000
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG8P                  00124100
                     AIF   (K'&ZCGPR GT 2).ZG8Q                         00124200
                     AIF   ('&ZCGPR' EQ '0').ZG8Q                       00124300
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00124400
                     AIF   (T'&ZCGPR NE 'N').ZG8Q  INVALID REG NAME     00124500
.ZG8P                ANOP  ,                                            00124600
                     AIF   (T'&ZCGPR NE 'N').ZG8R  NON NUMERIC          00124700
                     AIF   ('&ZCGPR' LT '2').ZG8Q                       00124800
                     AIF   ('&ZCGPR' LE '12').ZG8R                      00124900
.ZG8Q                ANOP  ,                                            00125000
&ZMS                 SETC  '"PRODUCT_ID='       *KGPRA* MNOTE           00125100
&ZMS                 SETC  '&ZMS.&PRODUCT_ID"'                          00125200
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00125300
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00125400
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00125500
.ZG8R                ANOP  ,                                            00125600
.*----------------------------------------------------------------***   00125700
.***AG.KXVAR05 NAME, RQD OUTPUT, KEYS -XVARIABLE KEY                    00125800
                     AIF   (N'&VALCHECK_RSN LE 1).ZG11A  CK NUM         00125900
&ZMS                 SETC  '"VALCHECK_RSN='     *KPOSA* MNOTE           00126000
&ZMS                 SETC  '&ZMS.&VALCHECK_RSN"'                        00126100
&ZMS                 SETC  '&ZMS "VALCHECK_RSN"'                        00126200
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00126300
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00126400
.ZG11A               ANOP  ,                                            00126500
.*-------------------------------------------------------------------   00126600
.***AG.KXVAR06 NAME, RQD OUTPUT, KEYS -XVARIABLE                        00126700
&ZXVALCHECK_RSN      SETC  'OUTPUT'    SET IN/OUTPUT                    00126800
&XVALCHECK_RSN       SETC  '&VALCHECK_RSN(1)'   SET XVARIABLE           00126900
                     AIF   (N'&VALCHECK_RSN GT 1).ZG11B  MULTI PARMS    00127000
&XVALCHECK_RSN       SETC  '&VALCHECK_RSN'      SET XVARIABLE           00127100
.ZG11B               AIF   (K'&VALCHECK_RSN(1) GT 0).ZG11C              00127200
&ZXVALCHECK_RSN      SETC  ''          RESET IN/OUTPUT                  00127300
&ZMS                 SETC  ' '         *KRQDA*                          00127400
&ZMS                 SETC  '&ZMS "VALCHECK_RSN" KEY AND ITS ARGUMENT'   00127500
                     MNOTE 8,' &ZMS ARE REQUIRED.'                      00127600
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00127700
.ZG11C               ANOP  ,                                            00127800
.*-------------------------------------------------------------------   00127900
.***AG.KCK02 NAME, RQD OUTPUT, KEYS -GPR OUT OF RANGE                   00128000
                     AIF   (K'&ZXVALCHECK_RSN LE 0).ZG11R  NOT I/O      00128100
                     AIF   ('&XVALCHECK_RSN'(1,1) NE '(').ZG11R         00128200
&ZCGPR               SETC  '&XVALCHECK_RSN'(2,K'&XVALCHECK_RSN-2)       00128300
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG11P                 00128400
                     AIF   (K'&ZCGPR GT 2).ZG11Q                        00128500
                     AIF   ('&ZCGPR' EQ '0').ZG11Q                      00128600
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00128700
                     AIF   (T'&ZCGPR NE 'N').ZG11Q  INVALID REG NAME    00128800
.ZG11P               ANOP  ,                                            00128900
                     AIF   (T'&ZCGPR NE 'N').ZG11R  NON NUMERIC         00129000
                     AIF   ('&ZCGPR' LT '2').ZG11Q                      00129100
                     AIF   ('&ZCGPR' LE '12').ZG11R                     00129200
.ZG11Q               ANOP  ,                                            00129300
&ZMS                 SETC  '"VALCHECK_RSN='     *KGPRA* MNOTE           00129400
&ZMS                 SETC  '&ZMS.&VALCHECK_RSN"'                        00129500
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00129600
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00129700
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00129800
.ZG11R               ANOP  ,                                            00129900
.*----------------------------------------------------------------***   00130000
.***AG.KXVAR05 NAME, RQD OUTPUT, KEYS -XVARIABLE KEY                    00130100
                     AIF   (N'&VALCHECK_OFFSET LE 1).ZG14A  CK NUM      00130200
&ZMS                 SETC  '"VALCHECK_OFFSET='  *KPOSA* MNOTE           00130300
&ZMS                 SETC  '&ZMS.&VALCHECK_OFFSET"'                     00130400
&ZMS                 SETC  '&ZMS "VALCHECK_OFFSET"'                     00130500
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00130600
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00130700
.ZG14A               ANOP  ,                                            00130800
.*-------------------------------------------------------------------   00130900
.***AG.KXVAR06 NAME, RQD OUTPUT, KEYS -XVARIABLE                        00131000
&ZXVALCHECK_OFFSET   SETC  'OUTPUT'    SET IN/OUTPUT                    00131100
&XVALCHECK_OFFSET    SETC  '&VALCHECK_OFFSET(1)'  SET XVARIABLE         00131200
                     AIF   (N'&VALCHECK_OFFSET GT 1).ZG14B  MULTI PARMS 00131300
&XVALCHECK_OFFSET    SETC  '&VALCHECK_OFFSET'   SET XVARIABLE           00131400
.ZG14B               AIF   (K'&VALCHECK_OFFSET(1) GT 0).ZG14C           00131500
&ZXVALCHECK_OFFSET   SETC  ''          RESET IN/OUTPUT                  00131600
&ZMS                 SETC  ' '         *KRQDA*                          00131700
&ZMS                 SETC  '&ZMS "VALCHECK_OFFSET" KEY AND ITS ARGUMENT'00131800
                     MNOTE 8,' &ZMS ARE REQUIRED.'                      00131900
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00132000
.ZG14C               ANOP  ,                                            00132100
.*-------------------------------------------------------------------   00132200
.***AG.KCK02 NAME, RQD OUTPUT, KEYS -GPR OUT OF RANGE                   00132300
                     AIF   (K'&ZXVALCHECK_OFFSET LE 0).ZG14R  NOT I/O   00132400
                     AIF   ('&XVALCHECK_OFFSET'(1,1) NE '(').ZG14R      00132500
&ZCGPR               SETC  '&XVALCHECK_OFFSET'(2,K'&XVALCHECK_OFFSET-2) 00132600
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG14P                 00132700
                     AIF   (K'&ZCGPR GT 2).ZG14Q                        00132800
                     AIF   ('&ZCGPR' EQ '0').ZG14Q                      00132900
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00133000
                     AIF   (T'&ZCGPR NE 'N').ZG14Q  INVALID REG NAME    00133100
.ZG14P               ANOP  ,                                            00133200
                     AIF   (T'&ZCGPR NE 'N').ZG14R  NON NUMERIC         00133300
                     AIF   ('&ZCGPR' LT '2').ZG14Q                      00133400
                     AIF   ('&ZCGPR' LE '12').ZG14R                     00133500
.ZG14Q               ANOP  ,                                            00133600
&ZMS                 SETC  '"VALCHECK_OFFSET='  *KGPRA* MNOTE           00133700
&ZMS                 SETC  '&ZMS.&VALCHECK_OFFSET"'                     00133800
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00133900
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00134000
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00134100
.ZG14R               ANOP  ,                                            00134200
.*------------------------------------------------------------------    00134300
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00134400
&XCOND               SETC  ''          INITIALIZE XVARIABLE             00134500
.*-------------------------------------------------------------------   00134600
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00134700
.ZG18                ANOP  ,                                            00134800
                     AIF   (K'&COND(1) LE 0).ZG18A                      00134900
&ZTLC                SETC 'YES'                                         00135000
                     AIF   ('&COND(1)' NE '&ZTLC').ZG22                 00135100
&XCOND               SETC  'YES'       SET KEYWORD                      00135200
                     AIF   (N'&COND LE 1).ZG18A  CK NUM                 00135300
&ZMS                 SETC  '"COND='    *KPOSA* MNOTE                    00135400
&ZMS                 SETC  '&ZMS.&COND"'                                00135500
&ZMS                 SETC  '&ZMS "COND"'                                00135600
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00135700
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00135800
.ZG18A               ANOP  ,                                            00135900
.*----------------------------------------------------------------***   00136000
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00136100
                     AIF   (N'&IN_BASEID LE 1).ZG20A  CK NUM            00136200
&ZMS                 SETC  '"IN_BASEID='        *KPOSA* MNOTE           00136300
&ZMS                 SETC  '&ZMS.&IN_BASEID"'                           00136400
&ZMS                 SETC  '&ZMS "IN_BASEID"'                           00136500
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00136600
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00136700
.ZG20A               ANOP  ,                                            00136800
.*-------------------------------------------------------------------   00136900
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00137000
&ZXIN_BASEID         SETC  'INPUT'     SET IN/OUTPUT                    00137100
&XIN_BASEID          SETC  '&IN_BASEID(1)'      SET XVARIABLE           00137200
                     AIF   (N'&IN_BASEID GT 1).ZG20B  MULTI PARMS       00137300
&XIN_BASEID          SETC  '&IN_BASEID'         SET XVARIABLE           00137400
.ZG20B               AIF   (K'&IN_BASEID(1) GT 0).ZG20C                 00137500
&ZXIN_BASEID         SETC  ''          RESET IN/OUTPUT                  00137600
&ZMS                 SETC  ' '         *KRQDA*                          00137700
&ZMS                 SETC  '&ZMS "IN_BASEID" KEY AND ITS ARGUMENT'      00137800
                     MNOTE 8,' &ZMS ARE REQUIRED.'                      00137900
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00138000
.ZG20C               ANOP  ,                                            00138100
.*-------------------------------------------------------------------   00138200
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00138300
                     AIF   (K'&ZXIN_BASEID LE 0).ZG20R  NOT I/O         00138400
                     AIF   ('&XIN_BASEID'(1,1) NE '(').ZG20R            00138500
&ZCGPR               SETC  '&XIN_BASEID'(2,K'&XIN_BASEID-2)             00138600
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG20P                 00138700
                     AIF   (K'&ZCGPR GT 2).ZG20Q                        00138800
                     AIF   ('&ZCGPR' EQ '0').ZG20Q                      00138900
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00139000
                     AIF   (T'&ZCGPR NE 'N').ZG20Q  INVALID REG NAME    00139100
.ZG20P               ANOP  ,                                            00139200
                     AIF   (T'&ZCGPR NE 'N').ZG20R  NON NUMERIC         00139300
                     AIF   ('&ZCGPR' LT '2').ZG20Q                      00139400
                     AIF   ('&ZCGPR' LE '12').ZG20R                     00139500
.ZG20Q               ANOP  ,                                            00139600
&ZMS                 SETC  '"IN_BASEID='        *KGPRA* MNOTE           00139700
&ZMS                 SETC  '&ZMS.&IN_BASEID"'                           00139800
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00139900
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00140000
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00140100
.ZG20R               ANOP  ,                                            00140200
.*-------------------------------------------------------------------   00140300
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00140400
.ZG22                ANOP  ,                                            00140500
&ZTLC                SETC 'NO'                                          00140600
                     AIF   ('&COND(1)' NE '&ZTLC').ZG23                 00140700
&XCOND               SETC  'NO'        SET KEYWORD                      00140800
                     AIF   (N'&COND LE 1).ZG22A  CK NUM                 00140900
&ZMS                 SETC  '"COND='    *KPOSA* MNOTE                    00141000
&ZMS                 SETC  '&ZMS.&COND"'                                00141100
&ZMS                 SETC  '&ZMS "COND"'                                00141200
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00141300
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00141400
.ZG22A               ANOP  ,                                            00141500
.*------------------------------------------------------------------    00141600
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00141700
&ZCVAL               SETC ''           CLEAR ERROR KEY ACCUMULATOR      00141800
.ZG22A0              AIF   (K'&IN_BASEID LE 0).ZG22A1  OK               00141900
&ZCVAL               SETC '&ZCVAL IN_BASEID'    INCORRECT KEY USED      00142000
.ZG22A1              AIF   (K'&ZCVAL LE 0).ZG22A2  OK                   00142100
&ZCVAL               SETC '&ZCVAL'(2,K'&ZCVAL-1)                        00142200
&ZMS                 SETC  '"COND'     *KMEIA* MNOTE                    00142300
&ZMS                 SETC  '&ZMS.=&COND"'                               00142400
&ZMS                 SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'         00142500
                     MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'         00142600
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00142700
.ZG22A2              ANOP  ,                                            00142800
.*------------------------------------------------------------------    00142900
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00143000
.ZG23                ANOP  ,                                            00143100
&ZXCOND              SETC  'INPUT'     SET IN/OUTPUT                    00143200
                     AIF   (K'&XCOND GT 0).ZG23E  VALID ARG             00143300
                     AIF   (T'&COND EQ 'O').ZG23D  OMITTED              00143400
&ZASYSLNDX           SETA  0                                            00143500
.ZG23A               ANOP  ,           POSITIONAL MACRO KEY             00143600
&ZASYSLNDX           SETA  &ZASYSLNDX+1                                 00143700
                     AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG23C             00143800
&ZTLC                SETC 'COND'                                        00143900
                     AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG23A    00144000
.ZG23B               ANOP  ,                                            00144100
&ZXCOND              SETC  ''          RESET IN/OUTPUT                  00144200
&ZMS                 SETC  'THE "COND" KEY'     *KOPTA* MNOTE           00144300
&ZMS                 SETC  '&ZMS MUST CONTAIN ONE'                      00144400
                     MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'             00144500
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00144600
                     AGO   .ZG23E                                       00144700
.ZG23C               ANOP  ,                                            00144800
&ZXCOND              SETC  ''          RESET IN/OUTPUT                  00144900
&ZMS                 SETC  '"COND='    *KUKWA* MNOTE                    00145000
&ZMS                 SETC  '&ZMS.&COND"'                                00145100
&ZMS                 SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '    00145200
&ZMS                 SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'          00145300
&ZMS                 SETC  '&ZMS "YES"'         VALID KEYWORD           00145400
&ZMS                 SETC  '&ZMS OR "NO".'      VALID KEYWORD           00145500
                     MNOTE 8,' &ZMS '                                   00145600
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00145700
                     AGO   .ZG23E                                       00145800
.ZG23D               ANOP  ,                                            00145900
&XCOND               SETC  'YES'       SET DEFAULT KEYWORD              00146000
.ZG23E               ANOP  ,                                            00146100
.*------------------------------------------------------------------    00146200
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00146300
                     AIF   (K'&COND(1) GT 0).ZG23F  PARM                00146400
&XCOND               SETC  ''          ENSURE NULL KEYWORD              00146500
&ZXCOND              SETC  ''          RESET IN/OUTPUT                  00146600
&ZMS                 SETC  'THE'                                        00146700
&ZMS                 SETC  '&ZMS "COND" KEY AND ITS ARGUMENT'           00146800
&ZMS                 SETC  '&ZMS ARE REQUIRED.'                         00146900
&ZMS                 SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'          00147000
&ZMS                 SETC  '&ZMS "YES"'         VALID KEYWORD           00147100
&ZMS                 SETC  '&ZMS OR "NO".'      VALID KEYWORD           00147200
                     MNOTE 8,' &ZMS '                                   00147300
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00147400
.ZG23F               ANOP  ,                                            00147500
.*----------------------------------------------------------------***   00147600
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00147700
                     AIF   (N'&RETCODE LE 1).ZG25A  CK NUM              00147800
&ZMS                 SETC  '"RETCODE='          *KPOSA* MNOTE           00147900
&ZMS                 SETC  '&ZMS.&RETCODE"'                             00148000
&ZMS                 SETC  '&ZMS "RETCODE"'                             00148100
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00148200
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00148300
.ZG25A               ANOP  ,                                            00148400
.*-------------------------------------------------------------------   00148500
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00148600
                     AIF   (K'&RETCODE(1) LE 0).ZG25C  NO PARM          00148700
&ZXRETCODE           SETC  'OUTPUT'    SET OUTPUT                       00148800
&XRETCODE            SETC  '&RETCODE(1)'        SET XVARIABLE           00148900
                     AIF   (N'&RETCODE GT 1).ZG25C                      00149000
&XRETCODE            SETC  '&RETCODE'  SET XVARIABLE                    00149100
.ZG25C               ANOP  ,                                            00149200
.*-------------------------------------------------------------------   00149300
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00149400
                     AIF   (K'&ZXRETCODE LE 0).ZG25R  NOT I/O           00149500
                     AIF   ('&XRETCODE'(1,1) NE '(').ZG25R              00149600
&ZCGPR               SETC  '&XRETCODE'(2,K'&XRETCODE-2)                 00149700
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG25P                 00149800
                     AIF   (K'&ZCGPR GT 2).ZG25Q                        00149900
                     AIF   ('&ZCGPR' EQ '0').ZG25Q                      00150000
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00150100
                     AIF   (T'&ZCGPR NE 'N').ZG25Q  INVALID REG NAME    00150200
.ZG25P               ANOP  ,                                            00150300
                     AIF   (T'&ZCGPR NE 'N').ZG25R  NON NUMERIC         00150400
                     AIF   ('&ZCGPR' LT '2').ZG25Q                      00150500
                     AIF   ('&ZCGPR' LE '12').ZG25R                     00150600
.ZG25Q               ANOP  ,                                            00150700
&ZMS                 SETC  '"RETCODE='          *KGPRA* MNOTE           00150800
&ZMS                 SETC  '&ZMS.&RETCODE"'                             00150900
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00151000
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00151100
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00151200
.ZG25R               ANOP  ,                                            00151300
.*----------------------------------------------------------------***   00151400
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00151500
                     AIF   (N'&RSNCODE LE 1).ZG28A  CK NUM              00151600
&ZMS                 SETC  '"RSNCODE='          *KPOSA* MNOTE           00151700
&ZMS                 SETC  '&ZMS.&RSNCODE"'                             00151800
&ZMS                 SETC  '&ZMS "RSNCODE"'                             00151900
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00152000
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00152100
.ZG28A               ANOP  ,                                            00152200
.*-------------------------------------------------------------------   00152300
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00152400
                     AIF   (K'&RSNCODE(1) LE 0).ZG28C  NO PARM          00152500
&ZXRSNCODE           SETC  'OUTPUT'    SET OUTPUT                       00152600
&XRSNCODE            SETC  '&RSNCODE(1)'        SET XVARIABLE           00152700
                     AIF   (N'&RSNCODE GT 1).ZG28C                      00152800
&XRSNCODE            SETC  '&RSNCODE'  SET XVARIABLE                    00152900
.ZG28C               ANOP  ,                                            00153000
.*-------------------------------------------------------------------   00153100
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00153200
                     AIF   (K'&ZXRSNCODE LE 0).ZG28R  NOT I/O           00153300
                     AIF   ('&XRSNCODE'(1,1) NE '(').ZG28R              00153400
&ZCGPR               SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                 00153500
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG28P                 00153600
                     AIF   (K'&ZCGPR GT 2).ZG28Q                        00153700
                     AIF   ('&ZCGPR' EQ '0').ZG28Q                      00153800
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00153900
                     AIF   (T'&ZCGPR NE 'N').ZG28Q  INVALID REG NAME    00154000
.ZG28P               ANOP  ,                                            00154100
                     AIF   (T'&ZCGPR NE 'N').ZG28R  NON NUMERIC         00154200
                     AIF   ('&ZCGPR' LT '2').ZG28Q                      00154300
                     AIF   ('&ZCGPR' LE '12').ZG28R                     00154400
.ZG28Q               ANOP  ,                                            00154500
&ZMS                 SETC  '"RSNCODE='          *KGPRA* MNOTE           00154600
&ZMS                 SETC  '&ZMS.&RSNCODE"'                             00154700
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00154800
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00154900
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00155000
.ZG28R               ANOP  ,                                            00155100
.******************************************************************     00155200
.***AH.P00 CHECK STANDALONE POSITIONAL VARIABLES                        00155300
.******************************************************************     00155400
                     ACTR  10000                                        00155500
.*----------------------------------------------------------------***   00155600
.***AH.P02 EXTRA POSITIONALS                                            00155700
                     AIF   (N'&SYSLIST LE 0).ZGLISTX  NO EXTRAS         00155800
                     AIF   (N'&SYSLIST NE 2).ZGLISTX1  NOT NULL         00155900
                     AIF   ('&SYSLIST(1)' NE '').ZGLISTX1  NOT NULL     00156000
                     AIF   ('&SYSLIST(2)' EQ '').ZGLISTX  NOT NULL      00156100
.ZGLISTX1            ANOP  ,                                            00156200
&ZCVAL               SETC  ''          ERROR FIELD                      00156300
&ZAWRK               SETA  0           POSITIONAL NUMBER                00156400
.ZGLIST2             ANOP  ,                                            00156500
&ZAWRK               SETA  &ZAWRK+1    NEXT POSITIONAL                  00156600
                     AIF   (&ZAWRK GT N'&SYSLIST).ZGLIST3  DONE         00156700
&ZCVAL               SETC '&ZCVAL,&SYSLIST(&ZAWRK)'  EXTRA              00156800
                     AGO   .ZGLIST2                                     00156900
.*                                                                      00157000
.ZGLIST3             ANOP  ,                                            00157100
&ZCVAL               SETC '&ZCVAL'(2,K'&ZCVAL-1)  STRIP COMMA           00157200
&ZMS                 SETC  'POSITIONAL ARGUMENT(S),'  *PPOSA* MNOTE     00157300
&ZMS                 SETC  '&ZMS "&ZCVAL"'                              00157400
&ZMS                 SETC  '&ZMS CANNOT BE USED.'                       00157500
&ZMS                 SETC  '&ZMS NO POSITIONAL ARGUMENTS'               00157600
                     MNOTE 8,' &ZMS ARE ALLOWED.'                       00157700
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00157800
.ZGLISTX             ANOP  ,                                            00157900
&ZASYSLNDX           SETA  0                                            00158000
.*-------------------------------------------------------------------   00158100
.***AG.MF04 MF=(SLE)                                                    00158200
.ZGMFX               ANOP  ,           END OF FULL SYNTAX CHECK         00158300
.*******************************************************************    00158400
.***AE.ZMR01 NO CODE GENERATED IF ERRORS DETECTED                       00158500
.*******************************************************************    00158600
                     AIF   (&ZMACRET NE 0).ZLX2  ERROR DETECTED         00158700
.*******************************************************************    00158800
.***AE.01  START OF IWMDINST MACRO CODE                                 00158900
.*******************************************************************    00159000
                     LCLC  &M0M0001                 NAME                00159100
&M0M0001             SETC  '&XLABEL'                SET NAME            00159200
                     AIF   (K'&XLABEL NE 0).XLAB2                       00159300
&M0M0001             SETC  'M00M&SYSNDX'            DEFAULT NAME        00159400
.*                                                                      00159500
.XLAB2               ANOP  ,                                            00159600
                     AIF   ('&XMF' EQ 'L').XLAB3                        00159700
&M0M0001 DS    0H                             IWMDINST-0                00159800
.XLAB3               ANOP  ,                                            00159900
.*******************************************************************    00160000
.***AE.PR01 PRINT CONTROLS, DEFAULT IS YES                              00160100
.*******************************************************************    00160200
              PUSH  PRINT                                               00160300
                     AIF   ('&ZPRINT' NE 'NO').ZPRINTX  TURN PRINT ON   00160400
                     PRINT OFF         ++ PR01                          00160500
                     AGO   .ZPRNTXX                                     00160600
.ZPRINTX             PRINT ON                                           00160700
.ZPRNTXX             ANOP  ,                                            00160800
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00160900
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00161000
.********************************************************************   00161100
.***AL.L01 INTERNAL ARRAY TO PRODUCE FORMATTED CODE                     00161200
.********************************************************************   00161300
                      LCLA  &ZOPN          LIST INSTRUCTION INDEX       00161400
                      LCLA  &ZOPN1         INVOCATION INDEX             00161500
                      LCLC  &ZOPL(4095)    LABEL                        00161600
                      LCLC  &ZOPO(4095)    OPERATION                    00161700
                      LCLC  &ZOPV(4095)    VALUE                        00161800
                      LCLC  &ZOPD(4095)    DESCRIPTION                  00161900
.*                                                                      00162000
&ZOPN                 SETA  0              INITIAL INST INDEX VALUE     00162100
.******************************************************************     00162200
.***AL.L10 IWMDINST FMT=LIST MF=S|L PARAMETERS                          00162300
.******************************************************************     00162400
                      AIF   ('&XMF' EQ 'L').ZLMFSL2                     00162500
                      AIF   ('&XMF' NE 'S').ZLMFSLX                     00162600
&XMFCTRL              SETC  '#Z'.'&SYSNDX'(1,4).'A'                     00162700
&XMFATTR              SETC  '0D'                                        00162800
.*                                                                      00162900
&ZOPN                 SETA  &ZOPN+1                                     00163000
&ZOPL(&ZOPN)          SETC  ' '                                         00163100
&ZOPO(&ZOPN)          SETC  'B'                                         00163200
&ZOPV(&ZOPN)          SETC  '&XMFCTRL.S'                                00163300
&ZOPD(&ZOPN)          SETC  '++ IWMDINST ARG PARMS'                     00163400
.*                                                                      00163500
&ZOPN                 SETA  &ZOPN+1                                     00163600
&ZOPL(&ZOPN)          SETC  ' '                                         00163700
&ZOPO(&ZOPN)          SETC  'SPACE'                                     00163800
&ZOPV(&ZOPN)          SETC  '1'                                         00163900
&ZOPD(&ZOPN)          SETC  ' '                                         00164000
.*                                                                      00164100
.ZLMFSL2              ANOP  ,                                           00164200
.*-------------------------------------------------------------------   00164300
.***AM.L00  IWMDINST FMT=LIST name                                      00164400
                      AIF   ('&XMF' NE 'L').ZLMFSL2M                    00164500
&ZOPN                 SETA &ZOPN+1                                      00164600
&ZOPL(&ZOPN)          SETC '&M0M0001'                                   00164700
&ZOPO(&ZOPN)          SETC 'EQU'                                        00164800
&ZOPV(&ZOPN)          SETC '&XMFCTRL'                                   00164900
&ZOPD(&ZOPN)          SETC '++ IWMDINST NAME'                           00165000
.ZLMFSL2M             ANOP  ,                                           00165100
.*-------------------------------------------------------------------   00165200
.***AM.L01  IWMDINST FMT=LIST PARAMETERS                                00165300
&ZOPN                 SETA &ZOPN+1                                      00165400
&ZOPL(&ZOPN)          SETC '&XMFCTRL'                                   00165500
&ZOPO(&ZOPN)          SETC 'DS'                                         00165600
&ZOPV(&ZOPN)          SETC '&XMFATTR'                                   00165700
&ZOPD(&ZOPN)          SETC '++ IWMDINST PARM LIST'                      00165800
.*-------------------------------------------------------------------   00165900
.***AM.L02 XVERSION XL1                                                 00166000
&ZOPN                 SETA &ZOPN+1                                      00166100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XVERSION'                         00166200
&ZOPO(&ZOPN)          SETC 'DS'                                         00166300
&ZOPV(&ZOPN)          SETC 'XL1'                                        00166400
&ZOPD(&ZOPN)          SETC '++ INPUT XVERSION'                          00166500
.*-------------------------------------------------------------------   00166600
.***AM.L03 XINSTALL_OPTIONS BL.8                                        00166700
&ZOPN                 SETA &ZOPN+1                                      00166800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XINSTALL_OPTIONS'                 00166900
&ZOPO(&ZOPN)          SETC 'DS'                                         00167000
&ZOPV(&ZOPN)          SETC 'BL.8'                                       00167100
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             00167200
.*                                                                      00167300
&ZOPN                 SETA  &ZOPN+1                                     00167400
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XCOND_YES'                       00167500
&ZOPO(&ZOPN)          SETC  'EQU'                                       00167600
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             00167700
&ZOPD(&ZOPN)          SETC  '++ XCOND.'                                 00167800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).YES'                          00167900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00168000
.*-------------------------------------------------------------------   00168100
.***AM.L09  XRSV0001 CL2                                                00168200
&ZOPN                 SETA &ZOPN+1                                      00168300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0001'                         00168400
&ZOPO(&ZOPN)          SETC 'DS'                                         00168500
&ZOPV(&ZOPN)          SETC 'CL2'                                        00168600
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV0001'                      00168700
.*-------------------------------------------------------------------   00168800
.***AM.L09 ADDR XSERVD_AREA A                                           00168900
&ZOPN                 SETA &ZOPN+1                                      00169000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSERVD_AREA_ADDR'                 00169100
&ZOPO(&ZOPN)          SETC 'DS'                                         00169200
&ZOPV(&ZOPN)          SETC 'A'                                          00169300
&ZOPD(&ZOPN)          SETC '++ &ZXSERVD_AREA ADDR XSERVD_AREA'          00169400
.*-------------------------------------------------------------------   00169500
.***AM.L09 ALET XSERVD_AREA F                                           00169600
&ZOPN                 SETA &ZOPN+1                                      00169700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSERVD_AREA_ALET'                 00169800
&ZOPO(&ZOPN)          SETC 'DS'                                         00169900
&ZOPV(&ZOPN)          SETC 'F'                                          00170000
&ZOPD(&ZOPN)          SETC '++ &ZXSERVD_AREA ALET XSERVD_AREA'          00170100
.*-------------------------------------------------------------------   00170200
.***AM.L09 ADDR XIN_BASEID A                                            00170300
&ZOPN                 SETA &ZOPN+1                                      00170400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XIN_BASEID_ADDR'                  00170500
&ZOPO(&ZOPN)          SETC 'DS'                                         00170600
&ZOPV(&ZOPN)          SETC 'A'                                          00170700
&ZOPD(&ZOPN)          SETC '++ &ZXIN_BASEID ADDR XIN_BASEID'            00170800
.*-------------------------------------------------------------------   00170900
.***AM.L09 ADDR XQRY_BASEID A                                           00171000
&ZOPN                 SETA &ZOPN+1                                      00171100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XQRY_BASEID_ADDR'                 00171200
&ZOPO(&ZOPN)          SETC 'DS'                                         00171300
&ZOPV(&ZOPN)          SETC 'A'                                          00171400
&ZOPD(&ZOPN)          SETC '++ &ZXQRY_BASEID ADDR XQRY_BASEID'          00171500
.*-------------------------------------------------------------------   00171600
.***AM.L09 ADDR XPRODUCT_ID A                                           00171700
&ZOPN                 SETA &ZOPN+1                                      00171800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XPRODUCT_ID_ADDR'                 00171900
&ZOPO(&ZOPN)          SETC 'DS'                                         00172000
&ZOPV(&ZOPN)          SETC 'A'                                          00172100
&ZOPD(&ZOPN)          SETC '++ &ZXPRODUCT_ID ADDR XPRODUCT_ID'          00172200
.*-------------------------------------------------------------------   00172300
.***AM.L09  XVALCHECK_RSN F                                             00172400
&ZOPN                 SETA &ZOPN+1                                      00172500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XVALCHECK_RSN'                    00172600
&ZOPO(&ZOPN)          SETC 'DS'                                         00172700
&ZOPV(&ZOPN)          SETC 'F'                                          00172800
&ZOPD(&ZOPN)          SETC '++ &ZXVALCHECK_RSN  XVALCHECK_RSN'          00172900
.*-------------------------------------------------------------------   00173000
.***AM.L09  XVALCHECK_OFFSET F                                          00173100
&ZOPN                 SETA &ZOPN+1                                      00173200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XVALCHECK_OFFSET'                 00173300
&ZOPO(&ZOPN)          SETC 'DS'                                         00173400
&ZOPV(&ZOPN)          SETC 'F'                                          00173500
&ZOPD(&ZOPN)          SETC '++ &ZXVALCHECK_OFFSET  XVALCHECK_OFFSET'    00173600
.*-------------------------------------------------------------------   00173700
.***AM.L09  XRSV0020 CL8                                                00173800
&ZOPN                 SETA &ZOPN+1                                      00173900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0020'                         00174000
&ZOPO(&ZOPN)          SETC 'DS'                                         00174100
&ZOPV(&ZOPN)          SETC 'CL8'                                        00174200
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV0020'                      00174300
.*-------------------------------------------------------------------   00174400
.***AM.L10 END OF IWMDINST LIST PARAMETERS                              00174500
&ZOPN                 SETA &ZOPN+1                                      00174600
&ZOPL(&ZOPN)          SETC '&XMFCTRL.L'                                 00174700
&ZOPO(&ZOPN)          SETC 'EQU'                                        00174800
&ZOPV(&ZOPN)          SETC '*-&XMFCTRL'                                 00174900
&ZOPD(&ZOPN)          SETC '++ LENGTH OF PLIST'                         00175000
.*                                                                      00175100
&ZOPN                 SETA &ZOPN+1                                      00175200
&ZOPL(&ZOPN)          SETC ' '                                          00175300
&ZOPO(&ZOPN)          SETC 'SPACE'                                      00175400
&ZOPV(&ZOPN)          SETC '1'                                          00175500
&ZOPD(&ZOPN)          SETC ' '                                          00175600
.*-------------------------------------------------------------------   00175700
.***AL.L12 IWMDINST FMT=LIST MF=S|L PARAMETERS                          00175800
                      AIF   ('&XMF' EQ 'L').ZMFLX  DONE IF MF=L         00175900
.*                                                                      00176000
&ZOPN                 SETA  &ZOPN+1                                     00176100
&ZOPL(&ZOPN)          SETC  '&XMFCTRL.S'                                00176200
&ZOPO(&ZOPN)          SETC  'DC'                                        00176300
&ZOPV(&ZOPN)          SETC  '0H''0'''                                   00176400
&ZOPD(&ZOPN)          SETC  '++ IWMDINST ARG PARMS'                     00176500
.*                                                                      00176600
.ZLMFSLX              ANOP  ,                                           00176700
.*-------------------------------------------------------------------   00176800
.***AL.L13 SET ZPLLEN TO ITS APPROPRIATE VALUE                          00176900
&ZPLLEN               SETA 40                                           00177000
.*                                                                      00177100
.******************************************************************     00177200
.***AI.L01 IWMDINST FMT=LIST FILL IN PARAMETER AREA                     00177300
.******************************************************************     00177400
                      ACTR  10000                                       00177500
&ZCVAL                SETC  'LA'           ASSUME XA MODE               00177600
                      AIF   ('&SYSASCE' EQ 'P').ZIMFXA  SYSSTATE PRI    00177700
&ZCVAL                SETC  'LAE'          XAX MODE                     00177800
.ZIMFXA               ANOP ,                                            00177900
.*                                                                      00178000
                      AIF   ('&XMFCTRL'(1,1) NE '(').ZIMFN2  NOT GPR    00178100
&ZCGPR                SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)  GET GPR         00178200
                      AIF   ('&ZCGPR' EQ 'GPR1').ZIMFNX                 00178300
                      AIF   ('&ZCGPR' EQ 'GPR01').ZIMFNX                00178400
                      AIF   ('&ZCGPR' EQ 'REG1').ZIMFNX                 00178500
                      AIF   ('&ZCGPR' EQ 'REG01').ZIMFNX                00178600
                      AIF   ('&ZCGPR' EQ 'R1').ZIMFNX                   00178700
                      AIF   ('&ZCGPR' EQ '1').ZIMFNX                    00178800
                      AIF   ('&ZCGPR' EQ '01').ZIMFNX                   00178900
&ZOPN                 SETA  &ZOPN+1                                     00179000
&ZOPL(&ZOPN)          SETC  ' '                                         00179100
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00179200
&ZOPV(&ZOPN)          SETC  '1,0(,&ZCGPR)'                              00179300
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00179400
                      AGO   .ZIMFNX                                     00179500
.*                                                                      00179600
.ZIMFN2               ANOP ,                                            00179700
&ZOPN                 SETA  &ZOPN+1                                     00179800
&ZOPL(&ZOPN)          SETC  ' '                                         00179900
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00180000
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL'                                00180100
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00180200
.ZIMFNX               ANOP ,                                            00180300
.********************************************************************   00180400
.***AI.L02 IWMDINST FMT=LIST INITIALIZE PARAMETER AREA                  00180500
.********************************************************************   00180600
.***AI.L03 MF=(SLE)                                                     00180700
                      AIF   ('&XMF' EQ 'L').ZIMFLX                      00180800
.*                                                                      00180900
&ZOPN                 SETA  &ZOPN+1                                     00181000
&ZOPL(&ZOPN)          SETC  ' '                                         00181100
&ZOPO(&ZOPN)          SETC  'XC'                                        00181200
&ZOPV(&ZOPN)          SETC  '0(&ZPLLEN,1),0(1)'                         00181300
&ZOPD(&ZOPN)          SETC  '++ INITIALIZE'                             00181400
.ZIMFLX               ANOP  ,                                           00181500
.*-------------------------------------------------------------------   00181600
.***AI.L05 XINSTALL_OPTIONS BL1                                         00181700
&ZW                   SETC  ''                                          00181800
&ZCLNG                SETC  ''             RESET BIT ON FLAG            00181900
.*-------------------------------------------------------------------   00182000
.***AI.L08 XINSTALL_OPTIONS "YES"                                       00182100
.***      BL1'1XXXXXXX'                                                 00182200
         AIF   ('&XCOND' NE 'YES').ZI3A                                 00182300
&ZW                   SETC  '&ZW.10000000'                              00182400
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00182500
                      AGO   .ZI3C                                       00182600
.*                                                                      00182700
.ZI3A                 ANOP  ,                                           00182800
&ZW                   SETC  '&ZW.00000000'                              00182900
.ZI3C                 ANOP  ,                                           00183000
.*-------------------------------------------------------------------   00183100
.***AI.L11 XINSTALL_OPTIONS BL1                                         00183200
                      AIF   ('&ZCLNG' NE 'YES').ZI3E  ALL ZERO BITS     00183300
&ZOPN                 SETA  &ZOPN+1                                     00183400
&ZOPL(&ZOPN)          SETC  ' '                                         00183500
&ZOPO(&ZOPN)          SETC  'OI'                                        00183600
&ZOPV(&ZOPN)          SETC  '1(1),B''&ZW'''                             00183700
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              00183800
.ZI3E                 ANOP  ,                                           00183900
.*-------------------------------------------------------------------   00184000
.***AI.L19 ADDR XSERVD_AREA A                                           00184100
                      AIF   ('&ZXSERVD_AREA' EQ '').ZI5H                00184200
&ZCLNG                SETC  '&XSERVD_AREA'                              00184300
&ZCGPR                SETC  '14'                                        00184400
         AIF   ('&XSERVD_AREA'(1,1) EQ '(').ZI5F  IN GPR                00184500
.*                                                                      00184600
&ZOPN                 SETA  &ZOPN+1                                     00184700
&ZOPL(&ZOPN)          SETC  ' '                                         00184800
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00184900
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00185000
&ZOPD(&ZOPN)          SETC  '++ &ZXSERVD_AREA XSERVD_AREA'              00185100
.*                                                                      00185200
                      AGO   .ZI5G                                       00185300
.*                                                                      00185400
.ZI5F                 ANOP  ,                                           00185500
&ZCGPR   SETC  '&XSERVD_AREA'(2,K'&XSERVD_AREA-2)                       00185600
.*                                                                      00185700
.ZI5G                 ANOP  ,                                           00185800
.*                                                                      00185900
&ZOPN                 SETA  &ZOPN+1                                     00186000
&ZOPL(&ZOPN)          SETC  ' '                                         00186100
&ZOPO(&ZOPN)          SETC  'ST'                                        00186200
&ZOPV(&ZOPN)          SETC  '&ZCGPR,4(,1)'                              00186300
&ZOPD(&ZOPN)          SETC  '++ &ZXSERVD_AREA XSERVD_AREA'              00186400
.*                                                                      00186500
.ZI5H                 ANOP  ,                                           00186600
.*-------------------------------------------------------------------   00186700
.***AI.L23 ALET XSERVD_AREA F                                           00186800
         AIF   ('&ZXSERVD_AREA' EQ '').ZI6G                             00186900
         AIF   ('&SYSASCE' EQ 'P').ZI6G    SYSSTATE PRIMARY             00187000
&ZCLNG                SETC  '&XSERVD_AREA'                              00187100
         AIF   ('&XSERVD_AREA'(1,1) EQ '(').ZI6E  IN AR                 00187200
.*                                                                      00187300
&ZCGPR                SETC  '14'                                        00187400
                      AGO   .ZI6F                                       00187500
.*                                                                      00187600
.ZI6E                 ANOP  ,                                           00187700
&ZCGPR   SETC  '&XSERVD_AREA'(2,K'&XSERVD_AREA-2)                       00187800
.*                                                                      00187900
.ZI6F                 ANOP  ,                                           00188000
.*                                                                      00188100
&ZOPN                 SETA  &ZOPN+1                                     00188200
&ZOPL(&ZOPN)          SETC  ' '                                         00188300
&ZOPO(&ZOPN)          SETC  'STAM'                                      00188400
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCGPR,8(1)'                        00188500
&ZOPD(&ZOPN)          SETC  '++ &ZXSERVD_AREA XSERVD_AREA'              00188600
.*                                                                      00188700
.ZI6G                 ANOP  ,                                           00188800
.*-------------------------------------------------------------------   00188900
.***AI.L19 ADDR XIN_BASEID A                                            00189000
                      AIF   ('&ZXIN_BASEID' EQ '').ZI7H                 00189100
&ZCLNG                SETC  '&XIN_BASEID'                               00189200
&ZCGPR                SETC  '14'                                        00189300
         AIF   ('&XIN_BASEID'(1,1) EQ '(').ZI7F  IN GPR                 00189400
.*                                                                      00189500
&ZOPN                 SETA  &ZOPN+1                                     00189600
&ZOPL(&ZOPN)          SETC  ' '                                         00189700
&ZOPO(&ZOPN)          SETC  'LA'                                        00189800
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00189900
&ZOPD(&ZOPN)          SETC  '++ &ZXIN_BASEID XIN_BASEID'                00190000
.*                                                                      00190100
                      AGO   .ZI7G                                       00190200
.*                                                                      00190300
.ZI7F                 ANOP  ,                                           00190400
&ZCGPR   SETC  '&XIN_BASEID'(2,K'&XIN_BASEID-2)                         00190500
.*                                                                      00190600
.ZI7G                 ANOP  ,                                           00190700
.*                                                                      00190800
&ZOPN                 SETA  &ZOPN+1                                     00190900
&ZOPL(&ZOPN)          SETC  ' '                                         00191000
&ZOPO(&ZOPN)          SETC  'ST'                                        00191100
&ZOPV(&ZOPN)          SETC  '&ZCGPR,12(,1)'                             00191200
&ZOPD(&ZOPN)          SETC  '++ &ZXIN_BASEID XIN_BASEID'                00191300
.*                                                                      00191400
.ZI7H                 ANOP  ,                                           00191500
.*-------------------------------------------------------------------   00191600
.***AI.L19 ADDR XQRY_BASEID A                                           00191700
                      AIF   ('&ZXQRY_BASEID' EQ '').ZI8H                00191800
&ZCLNG                SETC  '&XQRY_BASEID'                              00191900
&ZCGPR                SETC  '14'                                        00192000
         AIF   ('&XQRY_BASEID'(1,1) EQ '(').ZI8F  IN GPR                00192100
.*                                                                      00192200
&ZOPN                 SETA  &ZOPN+1                                     00192300
&ZOPL(&ZOPN)          SETC  ' '                                         00192400
&ZOPO(&ZOPN)          SETC  'LA'                                        00192500
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00192600
&ZOPD(&ZOPN)          SETC  '++ &ZXQRY_BASEID XQRY_BASEID'              00192700
.*                                                                      00192800
                      AGO   .ZI8G                                       00192900
.*                                                                      00193000
.ZI8F                 ANOP  ,                                           00193100
&ZCGPR   SETC  '&XQRY_BASEID'(2,K'&XQRY_BASEID-2)                       00193200
.*                                                                      00193300
.ZI8G                 ANOP  ,                                           00193400
.*                                                                      00193500
&ZOPN                 SETA  &ZOPN+1                                     00193600
&ZOPL(&ZOPN)          SETC  ' '                                         00193700
&ZOPO(&ZOPN)          SETC  'ST'                                        00193800
&ZOPV(&ZOPN)          SETC  '&ZCGPR,16(,1)'                             00193900
&ZOPD(&ZOPN)          SETC  '++ &ZXQRY_BASEID XQRY_BASEID'              00194000
.*                                                                      00194100
.ZI8H                 ANOP  ,                                           00194200
.*-------------------------------------------------------------------   00194300
.***AI.L19 ADDR XPRODUCT_ID A                                           00194400
                      AIF   ('&ZXPRODUCT_ID' EQ '').ZI9H                00194500
&ZCLNG                SETC  '&XPRODUCT_ID'                              00194600
&ZCGPR                SETC  '14'                                        00194700
         AIF   ('&XPRODUCT_ID'(1,1) EQ '(').ZI9F  IN GPR                00194800
.*                                                                      00194900
&ZOPN                 SETA  &ZOPN+1                                     00195000
&ZOPL(&ZOPN)          SETC  ' '                                         00195100
&ZOPO(&ZOPN)          SETC  'LA'                                        00195200
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00195300
&ZOPD(&ZOPN)          SETC  '++ &ZXPRODUCT_ID XPRODUCT_ID'              00195400
.*                                                                      00195500
                      AGO   .ZI9G                                       00195600
.*                                                                      00195700
.ZI9F                 ANOP  ,                                           00195800
&ZCGPR   SETC  '&XPRODUCT_ID'(2,K'&XPRODUCT_ID-2)                       00195900
.*                                                                      00196000
.ZI9G                 ANOP  ,                                           00196100
.*                                                                      00196200
&ZOPN                 SETA  &ZOPN+1                                     00196300
&ZOPL(&ZOPN)          SETC  ' '                                         00196400
&ZOPO(&ZOPN)          SETC  'ST'                                        00196500
&ZOPV(&ZOPN)          SETC  '&ZCGPR,20(,1)'                             00196600
&ZOPD(&ZOPN)          SETC  '++ &ZXPRODUCT_ID XPRODUCT_ID'              00196700
.*                                                                      00196800
.ZI9H                 ANOP  ,                                           00196900
.*-------------------------------------------------------------------   00197000
&ZOPN1                SETA &ZOPN                                        00197100
.*******************************************************************    00197200
.***  PROCESS IWMDINST OUTPUT PARAMETERS                                00197300
.*******************************************************************    00197400
                      ACTR  10000                                       00197500
.*------------------------------------------------------------------    00197600
.***AO.L02 XVALCHECK_RSN F                                              00197700
         AIF   ('&ZXVALCHECK_RSN' EQ 'OUTPUT').ZO10A  OUTPUT            00197800
         AIF   ('&ZXVALCHECK_RSN' NE 'INOUT').ZO10C  INOUT              00197900
.ZO10A    AIF   ('&XVALCHECK_RSN'(1,1) NE '(').ZO10B  ADDR IN GPR       00198000
&ZCGPR   SETC  '&XVALCHECK_RSN'(2,K'&XVALCHECK_RSN-2)                   00198100
&ZOPN                 SETA  &ZOPN+1                                     00198200
&ZOPL(&ZOPN)          SETC  ' '                                         00198300
&ZOPO(&ZOPN)          SETC  'MVC'                                       00198400
&ZOPV(&ZOPN)          SETC  '0(4,&ZCGPR),24(1)'                         00198500
&ZOPD(&ZOPN)          SETC  '++ XVALCHECK_RSN F'                        00198600
                      AGO   .ZO10C                                      00198700
.*                                                                      00198800
.ZO10B                ANOP  ,                                           00198900
&ZAWRK   SETA  K'&XVALCHECK_RSN                                         00199000
         AIF   ('&XVALCHECK_RSN'(&ZAWRK,1) NE ')').ZO10G                00199100
&ZN      SETA  2                                                        00199200
.ZO10H    ANOP                                                          00199300
         AIF   (&ZN GE &ZAWRK).ZO10G                                    00199400
         AIF   ('&XVALCHECK_RSN'(&ZN,1) NE '(').ZO10I                   00199500
&ZC      SETC  '&XVALCHECK_RSN'(1,&ZN).'4'.','                          00199600
&ZC      SETC  '&ZC'.'&XVALCHECK_RSN'(&ZN+1,&ZAWRK-&ZN).',24(1)'        00199700
         AGO   .ZO10J                                                   00199800
.ZO10I    ANOP                                                          00199900
&ZN      SETA  &ZN+1                                                    00200000
         AGO   .ZO10H                                                   00200100
.ZO10G    ANOP                                                          00200200
&ZC      SETC  '&XVALCHECK_RSN.(4),24(1)'                               00200300
.ZO10J    ANOP                                                          00200400
&ZOPN                 SETA  &ZOPN+1                                     00200500
&ZOPL(&ZOPN)          SETC  ' '                                         00200600
&ZOPO(&ZOPN)          SETC  'MVC'                                       00200700
&ZOPV(&ZOPN)          SETC  '&ZC'                                       00200800
&ZOPD(&ZOPN)          SETC  '++ XVALCHECK_RSN F'                        00200900
.ZO10C                ANOP  ,                                           00201000
.*------------------------------------------------------------------    00201100
.***AO.L02 XVALCHECK_OFFSET F                                           00201200
         AIF   ('&ZXVALCHECK_OFFSET' EQ 'OUTPUT').ZO11A  OUTPUT         00201300
         AIF   ('&ZXVALCHECK_OFFSET' NE 'INOUT').ZO11C  INOUT           00201400
.ZO11A    AIF   ('&XVALCHECK_OFFSET'(1,1) NE '(').ZO11B  ADDR IN GPR    00201500
&ZCGPR   SETC  '&XVALCHECK_OFFSET'(2,K'&XVALCHECK_OFFSET-2)             00201600
&ZOPN                 SETA  &ZOPN+1                                     00201700
&ZOPL(&ZOPN)          SETC  ' '                                         00201800
&ZOPO(&ZOPN)          SETC  'MVC'                                       00201900
&ZOPV(&ZOPN)          SETC  '0(4,&ZCGPR),28(1)'                         00202000
&ZOPD(&ZOPN)          SETC  '++ XVALCHECK_OFFSET F'                     00202100
                      AGO   .ZO11C                                      00202200
.*                                                                      00202300
.ZO11B                ANOP  ,                                           00202400
&ZAWRK   SETA  K'&XVALCHECK_OFFSET                                      00202500
         AIF   ('&XVALCHECK_OFFSET'(&ZAWRK,1) NE ')').ZO11G             00202600
&ZN      SETA  2                                                        00202700
.ZO11H    ANOP                                                          00202800
         AIF   (&ZN GE &ZAWRK).ZO11G                                    00202900
         AIF   ('&XVALCHECK_OFFSET'(&ZN,1) NE '(').ZO11I                00203000
&ZC      SETC  '&XVALCHECK_OFFSET'(1,&ZN).'4'.','                       00203100
&ZC      SETC  '&ZC'.'&XVALCHECK_OFFSET'(&ZN+1,&ZAWRK-&ZN).',28(1)'     00203200
         AGO   .ZO11J                                                   00203300
.ZO11I    ANOP                                                          00203400
&ZN      SETA  &ZN+1                                                    00203500
         AGO   .ZO11H                                                   00203600
.ZO11G    ANOP                                                          00203700
&ZC      SETC  '&XVALCHECK_OFFSET.(4),28(1)'                            00203800
.ZO11J    ANOP                                                          00203900
&ZOPN                 SETA  &ZOPN+1                                     00204000
&ZOPL(&ZOPN)          SETC  ' '                                         00204100
&ZOPO(&ZOPN)          SETC  'MVC'                                       00204200
&ZOPV(&ZOPN)          SETC  '&ZC'                                       00204300
&ZOPD(&ZOPN)          SETC  '++ XVALCHECK_OFFSET F'                     00204400
.ZO11C                ANOP  ,                                           00204500
.*******************************************************************    00204600
.***AO.X02  RETURN CODE PROCESSING                                      00204700
.*******************************************************************    00204800
                      AIF   (N'&RETCODE LE 0).ZMRETX                    00204900
                      AIF   ('&XRETCODE'(1,1) EQ '(').ZMRET2            00205000
                      AIF   ('&XRETCODE' EQ 'GPR15').ZMRETX             00205100
                      AIF   ('&XRETCODE' EQ 'REG15').ZMRETX             00205200
                      AIF   ('&XRETCODE' EQ 'R15').ZMRETX               00205300
                      AIF   ('&XRETCODE' EQ '15').ZMRETX                00205400
&ZOPN                 SETA  &ZOPN+1                                     00205500
&ZOPL(&ZOPN)          SETC  ' '                                         00205600
&ZOPO(&ZOPN)          SETC  'ST'                                        00205700
&ZOPV(&ZOPN)          SETC  '15,&XRETCODE'                              00205800
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00205900
                      AGO   .ZMRETX                                     00206000
.*                                                                      00206100
.ZMRET2               ANOP  ,                                           00206200
&ZCGPR                SETC  '&XRETCODE'(2,K'&XRETCODE-2)                00206300
                      AIF   ('&ZCGPR' EQ 'GPR15').ZMRETX                00206400
                      AIF   ('&ZCGPR' EQ 'REG15').ZMRETX                00206500
                      AIF   ('&ZCGPR' EQ 'R15').ZMRETX                  00206600
                      AIF   ('&ZCGPR' EQ '15').ZMRETX                   00206700
&ZOPN                 SETA  &ZOPN+1                                     00206800
&ZOPL(&ZOPN)          SETC  ' '                                         00206900
&ZOPO(&ZOPN)          SETC  'LR'                                        00207000
&ZOPV(&ZOPN)          SETC  '&ZCGPR,15'                                 00207100
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00207200
.ZMRETX               ANOP  ,                                           00207300
.*******************************************************************    00207400
.***AO.X03  REASON CODE PROCESSING                                      00207500
.*******************************************************************    00207600
                      AIF   (N'&RSNCODE LE 0).ZMRSNX                    00207700
                      AIF   ('&XRSNCODE'(1,1) EQ '(').ZMRSN2            00207800
                      AIF   ('&XRSNCODE' EQ 'GPR0').ZMRSNX              00207900
                      AIF   ('&XRSNCODE' EQ 'GPR00').ZMRSNX             00208000
                      AIF   ('&XRSNCODE' EQ 'REG0').ZMRSNX              00208100
                      AIF   ('&XRSNCODE' EQ 'REG00').ZMRSNX             00208200
                      AIF   ('&XRSNCODE' EQ 'R0').ZMRSNX                00208300
                      AIF   ('&XRSNCODE' EQ '0').ZMRSNX                 00208400
                      AIF   ('&XRSNCODE' EQ '00').ZMRSNX                00208500
&ZOPN                 SETA  &ZOPN+1                                     00208600
&ZOPL(&ZOPN)          SETC  ' '                                         00208700
&ZOPO(&ZOPN)          SETC  'ST'                                        00208800
&ZOPV(&ZOPN)          SETC  '0,&XRSNCODE'                               00208900
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00209000
                      AGO   .ZMRSNX                                     00209100
.*                                                                      00209200
.ZMRSN2               ANOP  ,                                           00209300
&ZCGPR                SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                00209400
                      AIF   ('&ZCGPR' EQ 'GPR0').ZMRSNX                 00209500
                      AIF   ('&ZCGPR' EQ 'GPR00').ZMRSNX                00209600
                      AIF   ('&ZCGPR' EQ 'REG0').ZMRSNX                 00209700
                      AIF   ('&ZCGPR' EQ 'REG00').ZMRSNX                00209800
                      AIF   ('&ZCGPR' EQ 'R0').ZMRSNX                   00209900
                      AIF   ('&ZCGPR' EQ '0').ZMRSNX                    00210000
                      AIF   ('&ZCGPR' EQ '00').ZMRSNX                   00210100
&ZOPN                 SETA  &ZOPN+1                                     00210200
&ZOPL(&ZOPN)          SETC  ' '                                         00210300
&ZOPO(&ZOPN)          SETC  'LR'                                        00210400
&ZOPV(&ZOPN)          SETC  '&ZCGPR,0'                                  00210500
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00210600
.ZMRSNX               ANOP  ,                                           00210700
.*******************************************************************    00210800
.***AO.X04  LABEL FOR MF=L PROCESSING                                   00210900
.*******************************************************************    00211000
.ZMFLX                ANOP  ,              MF=L PROCESSING              00211100
.*******************************************************************    00211200
.***AO.X05  FORMAT GENERATED INSTRUCTIONS                               00211300
.*******************************************************************    00211400
                      ACTR  10000                                       00211500
.*                                                                      00211600
                      LCLA  &ZLC           COLUMN POSITION              00211700
                      LCLA  &ZOPX          LIST TABLE INDEX             00211800
                      LCLC  &ZLL           LABEL                        00211900
                      LCLC  &ZLOP          OPERATION                    00212000
                      LCLC  &ZLV           VALUE                        00212100
                      LCLC  &ZLD           DESCRIPTION                  00212200
.*                                                                      00212300
&ZOPX                 SETA  1                                           00212400
.ZL2                  AIF   (&ZOPX GT &ZOPN1).ZLX  B IF DONE            00212500
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00212600
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00212700
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00212800
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00212900
                      AIF   (K'&ZLD LE 0).ZL5                           00213000
&ZLC                  SETA  35             COMMENT COLUMN               00213100
                      AIF   ('&ZLD'(1,1) NE '*').ZL3                    00213200
&ZLC                  SETA  33             COMMMENT COLUMN              00213300
.ZL3                  AIF   (K'&ZLV GE &ZLC-16-1).ZL4                   00213400
&ZLV                  SETC  '&ZLV'.' '                                  00213500
                      AGO   .ZL3                                        00213600
.*                                                                      00213700
.ZL4                  ANOP  ,                                           00213800
&ZLV                  SETC  '&ZLV'.' '                                  00213900
.ZL5                  ANOP  ,                                           00214000
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00214100
.*                                                                      00214200
&ZLL     &ZLOP &ZLV                                                     00214300
.*                                                                      00214400
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00214500
                      AGO   .ZL2           CONTINUE LOOPING             00214600
.*                                                                      00214700
.ZLX                  ANOP  ,                                           00214800
                      AIF   ('&XMF' EQ 'L').ZLINKX  MF=L                00214900
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00215000
         L     14,16(0,0)              GET CVT ADDRESS                  00215100
         AIF   ('&SYSASCE' EQ 'P').NOAR    CHECK FOR AR MODE CALLERS    00215200
         LAE   14,0(14,0)              CLEAR AR 14                      00215300
.NOAR    ANOP                                                           00215400
         TM    CVTOSLV1-CVT(14),X'10'      TEST FOR SP520 RELEASE       00215500
         BO    WLM&SYSNDX              BRANCH WHEN WLM IS PRESENT       00215600
         LA    0,IWMRSNCODENOPOLMGT    SET REASON CODE = NO WLM         00215700
         LA    15,IWMRETCODEWARNING    SET WARNING RETURN CODE          00215800
         B     END&SYSNDX              BRANCH TO END LABEL              00215900
WLM&SYSNDX DS    0H                    BRANCH LABEL FOR WLM PRESENT     00216000
         L     14,772(14,0)            GET SFT ADDRESS                  00216100
         L     14,380(14,0)            GET LX FOR SERVICE ROUTINE       00216200
         LA    15,31                   GET EX FOR SERVICE ROUTINE       00216300
         OR    14,15                   GET PC NUMBER                    00216400
         PC    0(14)                                                    00216500
END&SYSNDX DS    0H                    END LABEL                        00216600
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00216700
.ZLINKX               ANOP  ,                                           00216800
.*******************************************************************    00216900
.***AP.X01  FORMAT GENERATED CODE                                       00217000
.ZL21                 AIF   (&ZOPX GT &ZOPN).ZLX1  B IF DONE            00217100
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00217200
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00217300
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00217400
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00217500
                      AIF   (K'&ZLD LE 0).ZL51                          00217600
&ZLC                  SETA  35             COMMENT COLUMN               00217700
                      AIF   ('&ZLD'(1,1) NE '*').ZL31                   00217800
&ZLC                  SETA  33             COMMENT COLUMN               00217900
.ZL31                 AIF   (K'&ZLV GE &ZLC-16-1).ZL41                  00218000
&ZLV                  SETC  '&ZLV'.' '                                  00218100
                      AGO   .ZL31                                       00218200
.*                                                                      00218300
.ZL41                 ANOP  ,                                           00218400
&ZLV                  SETC  '&ZLV'.' '                                  00218500
.ZL51                 ANOP  ,                                           00218600
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00218700
.*                                                                      00218800
&ZLL     &ZLOP &ZLV                                                     00218900
.*                                                                      00219000
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00219100
                      AGO   .ZL21          CONTINUE LOOPING             00219200
.*                                                                      00219300
.ZLX1                 ANOP  ,                                           00219400
.*******************************************************************    00219500
.***AP.X02  END OF IWMDINST MACRO                                       00219600
&ZIWMDINST            SETC  'YES'          SET IWMDINST USED            00219700
         POP   PRINT                                                    00219800
*                                            IWMDINST-0                 00219900
         SPACE 1                                                        00220000
.ZLX2                 ANOP  ,                                           00220100
         MEND                                                           00220200
**********************************************************************/ 00220300
*/*PB.OC01 INVOKE MACRO---------------------------------------------*/  00220400
*%IWMDINST: MACRO KEYS(SERVD_AREA,QRY_BASEID,PRODUCT_ID,VALCHECK_RSN,   00220500
*                 VALCHECK_OFFSET,COND,IN_BASEID,RETCODE,RSNCODE,       00220600
*                 PLISTVER,MF);                                         00220700
*  ANS('?'||MACLABEL||' '||'IWMDINSP '||MACLIST||                       00220800
*         ' '||MACKEYS||';') COL(MACLMAR);                              00220900
*%END IWMDINST;                                                         00221000
