*/*                                                                     00050000
         MACRO                                                          00100000
&NAME    TIMEUSED &STORADR=,&LINKAGE=BRANCH,&CPU=,&VECTOR=,&RELATED=   X00150000
                                                                   @D1C 00200000
.*********************************************************************  00250000
.*                                                                      00300000
.*01* MACRO-NAME = TIMEUSED                                             00350000
.*                                                                      00400000
.*01* COPYRIGHT =                                                       00450000
.*                5685-001                                              00500000
.*                THIS MACRO IS "RESTRICTED MATERIALS OF IBM"           00550000
.*                (C) COPYRIGHT IBM CORP. 1986, 1989                    00600000
.*                LICENSED MATERIALS - PROPERTY OF IBM                  00650000
.*                                                                      00700000
.*01* STATUS = JBB3313                                                  00750000
.*                                                                      00800000
.*01* FUNCTION = Return the total CPU time or Vector time used by the   00850000
.*               current work unit (TCB or SRB) up to the present.      00900000
.*               Note that the PC entered service can only be used      00916600
.*               to obtain the total CPU time or Vector time for the    00927700
.*               current TCB.                                           00938800
.*                                                                      00950000
.*                                                                      00966600
.*01* MACRO PARAMETERS (BAL) =                                          01000000
.*                                                                      01050000
.*             STORADR=RX-ADDRESS|(2)-(12)                              01100000
.*                     the label of, or a register pointing to, a       01150000
.*                     double-word where the time value is returned.    01200000
.*                                                                      01250000
.*                ,LINKAGE=BRANCH  - Branch entered service to be used. 01262500
.*                        =SYSTEM  - PC entered service to be used.     01275000
.*                                                                      01287500
.*                ,CPU=TOD  - CPU time requested in TOD format.         01289200
.*                    =MIC  - CPU time requested in micro-secs.         01290900
.*                                                                      01292600
.*                ,VECTOR=TOD  - Vector time requested in TOD format.   01294300
.*                       =MIC  - Vector time requested in micro-secs.   01296000
.*                                                                      01297700
.*                ,RELATED=ANY-COMMENT                                  01300000
.*                          - Information used to self document the     01350000
.*                            macro invocation.  May be any valid       01400000
.*                            macro keyword expression.                 01450000
.*                                                                      01500000
.*01* MACRO PARAMETERS (PL/AS) =                                        01550000
.*                                                                      01600000
.*             STORADR(dword)                                           01600100
.*                     - where "dword" is a double-word area            01600200
.*                       in which the time value is returned.           01600300
.*                                                                      01600400
.*                 LINKAGE(BRANCH)- Branch entered service to be used.  01600500
.*                        (SYSTEM)- PC entered service to be used.      01600600
.*                                                                      01600700
.*                 CPU(TOD) - CPU time requested in TOD format.         01600800
.*                    (MIC) - CPU time requested in micro-secs.         01600900
.*                                                                      01601000
.*                 VECTOR(TOD) - Vector time requested in TOD format.   01601100
.*                       (MIC) - Vector time requested in micro-secs.   01601200
.*                                                                      01601300
.*                 RELATED(Any-comment)                                 01601400
.*                         - Information used to self document the      01601500
.*                           macro invocation.  May be any valid        01601600
.*                           macro keyword expression.                  01601700
.*                                                                      01601800
.*                                                                      01601900
.*01* NOTES = When the PC is made to the non-privileged TIMEUSED        01602000
.*            service routine, register 0 contains a timing             01602100
.*            function indicator.                                       01602200
.*                                                                      01602300
.*            GPR 0          Value returned                             01604100
.*            -----------    -------------------------------            01608200
.*            '00000000'X    CPU time in TOD format.                    01612300
.*            '00000001'X    CPU time in micro-seconds.                 01616400
.*            '00000002'X    Vector time in TOD format.                 01620500
.*            '00000003'X    Vector time in micro-seconds.              01624600
.*                                                                      01628700
.*                                                                      01632800
.*02*    RESTRICTIONS = If LINKAGE=BRANCH is specified by the           01637500
.*                      invoker, the invoker must be Supervisor         01660000
.*                      State, Key 0, so that IEAVRT05 can set          01682500
.*                      set up its FRR and the invoker must not         01705000
.*                      be in AR ASC mode.                              01727500
.*                                                                      01750000
.*                      If LINKAGE=SYSTEM is specified by the           01757100
.*                      invoker, the invoker must be enabled,           01764200
.*                      unlocked, and in task mode, with no             01771300
.*                      FRRs in effect.                                 01778400
.*                                                                      01785500
.*                      CPU=MIC is only valid when                      01787800
.*                      LINKAGE=SYSTEM.                                 01790100
.*                                                                      01792600
.*                      VECTOR= parameter is only valid when            01793600
.*                      LINKAGE=SYSTEM.                                 01794600
.*                                                                      01795600
.*                      VECTOR= and CPU= are mutually exclusive         01796600
.*                      parameters.                                     01797600
.*                                                                      01798600
.*01* MODULE-TYPE = Macro                                               01800000
.*                                                                      01850000
.*02*    PROCESSOR = Assembler-H or PL/AS                               01900000
.*                                                                      01950000
.*01* MACROS = None                                                     02000000
.*                                                                      02050000
.*01* EXTERNAL REFERENCES =                                             02100000
.*                                                                      02150000
.*02*    ROUTINES = IEAVRT05 via BASSM                                  02200000
.*                  IEATTUSD via PC                                     02225000
.*                                                                      02250000
.*01* MNOTES =                                                          02300000
.*                                                                      02350000
.*           8  STORADR MUST BE SPECIFIED                               02400000
.*           8  EXCESSIVE POSITIONAL PARAMETERS SPECIFIED               02425000
.*           8  EXCESSIVE PARAMETERS SPECIFIED FOR STORADR              02450000
.*           8  VALUE FOR LINKAGE= PARAMETER MUST BE SYSTEM OR BRANCH   02475000
.*           8  VALUE FOR CPU= PARAMETER MUST BE TOD OR MIC             02479100
.*           8  VALUE FOR VECTOR= PARAMETER MUST BE TOD OR MIC          02483200
.*           8  VECTOR= PARAMETER IS ONLY VALID WITH LINKAGE=SYSTEM     02487300
.*           8  CPU=MIC IS ONLY VALID WITH LINKAGE=SYSTEM               02491400
.*           8  CPU= AND VECTOR= ARE MUTUALLY EXCLUSIVE PARAMETERS      02495500
.*                                                                      02500000
.*01* COMPONENT = SC1CV (Timer Supervision)                             02550000
.*                                                                      02600000
.*01* CHANGE-ACTIVITY =                                                 02650000
.*                                                                      02700000
.*  $00=OY08577  JBB2220  861231  PD16H5:  TCB and SRB Timing Support   02750000
.*  $L1=TUSED    JBB3313  880501  PD16CU:  LINKAGE=SYSTEM Support       02775000
.*  $D1=DCR0007  JBB3313  880906  PD16CU:  VECTOR= and CPU= Support     02787500
.*                                                                      02800000
.********************************************************************** 02850000
*        MACDATE 09/06/1988                                        @D1C 02900000
*                                                                       02950000
         LCLA  &I          LOOP VARIABLE                           @D1A 02950100
         LCLB  &ERR(9)     ERROR INDICATION ARRAY                  @D1A 02950200
         LCLB  &STOPGEN    FLAG = STOP MACRO CODE GENERATION       @D1A 02950300
         LCLC  &ERRM(9)    ERROR MESSAGES ARRAY                    @D1A 02950400
&ERRM(1) SETC  'EXCESSIVE POSITIONAL PARAMETERS SPECIFIED'         @D1C 02950500
&ERRM(2) SETC  'STORADR MUST BE SPECIFIED'                         @D1C 02950600
&ERRM(3) SETC  'EXCESSIVE PARAMETERS SPECIFIED FOR STORADR'        @D1C 02950700
&ERRM(4) SETC  'VALUE FOR LINKAGE= PARAMETER MUST BE SYSTEM OR BRANCH' X02950800
                                                                   @D1C 02950900
&ERRM(5) SETC  'VALUE FOR CPU= PARAMETER MUST BE TOD OR MIC'       @D1A 02951000
&ERRM(6) SETC  'VALUE FOR VECTOR= PARAMETER MUST BE TOD OR MIC'    @D1A 02951100
&ERRM(7) SETC  'VECTOR= PARAMETER IS ONLY VALID WITH LINKAGE=SYSTEM'   X02951200
                                                                   @D1A 02951300
&ERRM(8) SETC  'CPU=MIC IS ONLY VALID WITH LINKAGE=SYSTEM'         @D1A 02951400
&ERRM(9) SETC  'CPU= AND VECTOR= ARE MUTUALLY EXCLUSIVE PARAMETERS'    X02951500
                                                                   @D1A 02951600
.* THIS LOOP RESETS ALL THE ERROR INDICATORS                            02951800
.*                                                                      02952000
&I       SETA  1           INITIALIZE LOOP VARIABLE                @D1A 02952200
.LOOP1   ANOP  ,                                                   @D1A 02952400
&ERR(&I) SETB  0           INITIALIZE TO NO ERRORS                 @D1A 02952600
&STOPGEN SETB  0           INITIALIZE TO CODE GENERATION           @D1A 02952800
&I       SETA  &I+1        INCREMENT LOOP VARIABLE                 @D1A 02953000
         AIF   (&I LE 9).LOOP1  IF I<=9 THEN CONTINUE LOOP         @D1A 02953200
*                                                                       02953600
*                                                                       02954800
         AIF   (N'&SYSLIST EQ 0).NOPOS  ANY POSITIONALS?           @D1A 02955600
&ERR(1)  SETB  1           POSITIONALS SPECIFIED- ERROR            @D1A 02956400
.NOPOS   ANOP  ,                                                   @D1A 02957200
*                                                                       02958400
         AIF   ('&LINKAGE' EQ 'BRANCH').CHKSTOR IS THIS BR ENTRY   @L1A 02960000
         AIF   ('&LINKAGE' EQ 'SYSTEM').CHKSTOR IS THIS PC ENTRY   @L1A 02970000
&ERR(4)  SETB   1          LINKAGE= NOT BRANCH OR SYSTEM- ERROR    @D1A 02980000
*                                                                       02985000
.CHKSTOR ANOP  ,                                                   @D1C 02991000
         AIF   ('&STORADR' NE '').CHKSUBL  STORADR SPECIFIED?      @D1C 02994000
&ERR(2)  SETB  1           STORADR= NOT SPECIFIED- ERROR           @D1C 02997000
         AGO   .CHKTIMV                                                 02998500
*                                                                       03000000
.CHKSUBL ANOP  ,                                                   @D1A 03003000
         AIF   (N'&STORADR EQ 1).CHKTIMV  ONLY ONE VALUE GIVEN?    @D1C 03006000
&ERR(3)  SETB  1           SUBLIST SPECIFIED FOR STORADR=- ERROR   @D1C 03009000
*                                                                       03012000
.CHKTIMV ANOP  ,                                                   @D1A 03015000
         AIF   ('&CPU' EQ '').CHKVECT     CPU TIMING-DEFAULTED?    @D1A 03021000
         AIF   ('&CPU' EQ 'TOD').CHKBOTH  CPU TIMING-TOD FORMAT?   @D1A 03027000
         AIF   ('&CPU' EQ 'MIC').CHKLEQB  CPU TIMING-MIC FORMAT?   @D1A 03035400
&ERR(5)  SETB  1           CPU= VALUE NOT TOD OR MIC- ERROR        @D1C 03043800
         AGO   .CHKBOTH                                            @D1A 03052200
*                                                                       03060600
.CHKLEQB ANOP  ,                                                   @D1A 03069000
         AIF   ('&LINKAGE' EQ 'SYSTEM').CHKBOTH LINKAGE=SYSTEM?    @D1A 03077400
&ERR(8)  SETB  1           CPU=MIC AND LINKAGE=BRANCH- ERROR       @D1C 03085800
*                                                                       03094200
.CHKBOTH ANOP  ,                                                   @D1A 03102600
         AIF   ('&VECTOR' EQ '').CHKERR   VECTOR= UNSPECIFIED?     @D1A 03111000
&ERR(9)  SETB  1           CPU= AND VECTOR= BOTH SPECIFIED- ERROR  @D1C 03119400
*                                                                       03127800
.CHKVECT ANOP  ,                                                   @D1A 03136200
         AIF   ('&VECTOR' EQ '').CHKERR    VECTOR= UNSPECIFIED?    @D1A 03144600
         AIF   ('&VECTOR' EQ 'TOD').CHKLINK VECTOR=TOD?            @D1A 03153000
         AIF   ('&VECTOR' EQ 'MIC').CHKLINK VECTOR=MIC?            @D1A 03161400
&ERR(6)  SETB  1           VECTOR= VALUE NOT TOD OR MIC- ERROR     @D1C 03169800
         AGO   .CHKERR                                             @D1A 03178200
*                                                                       03186600
.CHKLINK ANOP  ,                                                   @D1A 03195000
         AIF   ('&LINKAGE' EQ 'SYSTEM').CHKERR  LINKAGE=SYSTEM?    @D1A 03203400
&ERR(7)  SETB  1           VECTOR= AND LINKAGE=BRANCH- ERROR       @D1C 03211800
*                                                                       03220200
.* THIS LOOP WRITES OUT ALL ERRORS INDICATED BY THE ERROR FLAGS         03223000
.*                                                                      03225800
.CHKERR  ANOP  ,                                                   @D1A 03228600
&I       SETA  1           INITIALIZE LOOP VARIABLE                @D1A 03237000
.LOOP2   ANOP  ,                                                   @D1A 03245400
         AIF   (&ERR(&I) EQ 0).IPLUS1  NO ERROR INDICATED?         @D1A 03253800
&STOPGEN SETB  1           INDICATE AN ERROR WAS ENCOUNTERED       @D1A 03262200
         MNOTE 8,'&ERRM(&I)'  PRINT OUT ERROR MESSAGE              @D1A 03270600
*                                                                       03279000
.IPLUS1  ANOP  ,                                                        03287400
&I       SETA  &I+1        INCREMENT LOOP VARIABLE                 @D1A 03295800
         AIF   (&I LE 9).LOOP2  IF I<=9 THEN CONTINUE LOOP         @D1A 03304200
*                                                                       03312600
         AIF   (&STOPGEN EQ 0).GENCODE  NO ERRORS-SO GENERATE CODE @D1A 03321000
         MEXIT             ERRORS ENCOUNTERED- EXIT                @D1A 03329400
*                                                                       03337800
*                                                                       03346200
.GENCODE ANOP  ,                                                   @D1A 03354600
         AIF   ('&LINKAGE' EQ 'SYSTEM').PCSERV IS THIS PC ENTRY    @L1A 03366600
*                                                                       03374900
.BRSERV  ANOP  ,                                                   @D1C 03383200
         AIF   ('&STORADR'(1,1) EQ '(').ISAREG1                         03385600
&NAME    LA    1,&STORADR         AREA FOR RETURN OF TIME VALUE         03388000
         AGO   .NEXT                                                    03390400
.ISAREG1 ANOP  ,                                                   @D1C 03392800
&NAME    LR    1,&STORADR(1)      AREA FOR RETURN OF TIME VALUE         03395200
.NEXT    ANOP  ,                                                   @D1C 03397600
         L     15,X'B4C'(0,0)     SVT ADDRESS                           03400000
         L     15,X'88'(0,15)     ADDRESS OF SERVICE ROUTINE            03450000
         BASSM 14,15                                                    03500000
         MEXIT                                                     @L1A 03514200
*                                                                       03528400
.PCSERV  ANOP  ,                                                   @D1C 03542600
&NAME    L     14,16(0,0)         CVT ADDRESS                      @L1A 03556800
         L     14,772(14,0)       SFT ADDRESS                      @L1A 03571300
         L     14,244(14,0)       LX/EX FOR SERVICE ROUTINE        @L1A 03578400
         AIF   ('&VECTOR' EQ 'TOD').VECTTOD                        @D1A 03578700
         AIF   ('&VECTOR' EQ 'MIC').VECTMIC                        @D1A 03579000
         AIF   ('&CPU' EQ '').CPUTOD                               @D1A 03579300
         AIF   ('&CPU' EQ 'TOD').CPUTOD                            @D1A 03579600
         AIF   ('&CPU' EQ 'MIC').CPUMIC                            @D1A 03579900
.CPUTOD  ANOP  ,                                                   @D1A 03580200
         LA    0,0                SET TIMING FLAG TO CPU/TOD       @D1A 03580500
         AGO   .PCTOIT                                             @D1A 03580800
.CPUMIC  ANOP  ,                                                   @D1A 03581100
         LA    0,1                SET TIMING FLAG TO CPU/MIC       @D1A 03581400
         AGO   .PCTOIT                                             @D1A 03581700
.VECTTOD ANOP  ,                                                   @D1A 03582000
         LA    0,2                SET TIMING FLAG TO VECTOR/TOD    @D1A 03582300
         AGO   .PCTOIT                                             @D1A 03582600
.VECTMIC ANOP  ,                                                   @D1A 03582900
         LA    0,3                SET TIMING FLAG TO VECTOR/MIC    @D1A 03583200
.PCTOIT  ANOP  ,                                                   @D1A 03583500
         PC    0(14)              PC TO TIMEUSED SERVICE ROUTINE   @L1A 03585500
*                                                                  @D1C 03586900
         LTR   15,15              CHECK THE RETURN CODE            @L1A 03587300
         BNZ   *+8                BAD RETURN CODE SO SKIP STORE    @L1A 03587700
         AIF   ('&STORADR'(1,1) EQ '(').ISAREG2                         03588300
         STM   0,1,&STORADR       AREA FOR RETURN OF TIME VALUE    @L1C 03589700
         MEXIT                                                          03591100
*                                                                       03592500
.ISAREG2 ANOP  ,                                                   @D1C 03593900
         STM   0,1,0(&STORADR(1)) AREA FOR RETURN OF TIME VALUE    @L1A 03595300
         MEXIT                                                          03596700
*                                                                       03598100
         MEND                                                           03800000
**/                                                                     03850000
*% TIMEUSED :                                                           03900000
*   MACRO KEYS(                                                         03950000
*              STORADR,               /* User's return area address  */ 04000000
*              LINKAGE,               /* Linkage requested       @L1A*/ 04025000
*              CPU,                   /* CPU time value          @D1A*/ 04033300
*              VECTOR,                /* Vector time value       @D1A*/ 04041600
*              RELATED                                                  04050000
*                     );                                                04100000
*/*                                                                  */ 04150000
*/* Define external macro variables                                  */ 04200000
*/*                                                                  */ 04250000
*   DECLARE                                                             04300000
*      EHAREGS CHARACTER EXTERNAL,    /*                             */ 04350000
*      EHAMAPS CHARACTER EXTERNAL,    /*                         @L1A*/ 04375000
*      EHARC   FIXED     EXTERNAL;    /*                             */ 04400000
*/*                                                                  */ 04450000
*/* Define internal macro variables                                  */ 04500000
*/*                                                                  */ 04550000
*   DECLARE                                                             04600000
*      IVDOCMT CHAR,                  /*                             */ 04650000
*      MPREFIX CHAR,                  /*                         @L1A*/ 04662500
*      ERRMSG  CHAR,                  /*                         @L1A*/ 04675000
*      EM(10)   CHAR,                 /*                         @D1C*/ 04687500
*      IVDATE  CHAR;                  /*                             */ 04700000
*/*                                                                  */ 04750000
*/* Initialize macro variables                                       */ 04800000
*/*                                                                  */ 04850000
*   EHARC = 0;                                                          04900000
*   IVDATE = 'MACDATE(09/06/1988)';                                     04950000
*   MPREFIX = '?TIMEUSED --> ';       /*                         @L1A*/ 04957100
*   EM(1) = 'TOO MANY ERRORS ENCOUNTERED; NO CODE GENERATED.'; /*@L1A*/ 04964200
*   EM(2) = 'EXCESSIVE POSITIONAL PARAMETERS SPECIFIED.';      /*@L1A*/ 04971300
*   EM(3) = 'STORADR MUST BE SPECIFIED.';                      /*@L1A*/ 04978400
*   EM(4) = 'EXCESSIVE PARAMETERS SPECIFIED FOR ''STORADR''.'; /*@L1A*/ 04985500
*   EM(5) = 'VALUE FOR ''LINKAGE'' PARAMETER MUST BE'||        /*@L1A*/ 04990300
*           ' SYSTEM OR BRANCH';                               /*@L1A*/ 04995100
*   EM(6) = 'VALUE FOR ''CPU'' PARAMETER MUST BE TOD OR MIC'; /* @D1A*/ 04995600
*   EM(7) = 'VALUE FOR ''VECTOR'' PARAMETER MUST BE TOD OR MIC'; /*     04996100
*                                                                @D1A*/ 04996600
*   EM(8) = '''VECTOR'' PARAMETER IS ONLY VALID WITH LINKAGE(SYSTEM)';  04997100
*                                                             /* @D1A*/ 04997600
*   EM(9) = 'CPU(MIC) IS ONLY VALID WITH LINKAGE(SYSTEM)';    /* @D1A*/ 04998100
*   EM(10) = '''CPU'' AND ''VECTOR'' ARE MUTUALLY EXCLUSIVE PARAMETERS' 04998600
*                                           ;                 /* @D1A*/ 04999100
*   IF STORADR ^= '' THEN                                               05000000
*      IVDOCMT = '?TIMEUSED '||'STORADR'||STORADR||' ';                 05050000
*   IF LINKAGE ^= '' THEN                                   /*   @L1A*/ 05066600
*      IVDOCMT = IVDOCMT||'LINKAGE'||LINKAGE||' ';          /*   @L1A*/ 05083200
*   IF CPU ^= '' THEN                                       /*   @D1A*/ 05086500
*      IVDOCMT = IVDOCMT||'CPU'||CPU||' ';                  /*   @D1A*/ 05089800
*   IF VECTOR ^= '' THEN                                    /*   @D1A*/ 05093100
*      IVDOCMT = IVDOCMT||'VECTOR'||VECTOR||' ';            /*   @D1A*/ 05096400
*   IF RELATED ^= '' THEN                                               05100000
*      IVDOCMT = IVDOCMT||'RELATED'||RELATED||' ';                      05150000
*   IVDOCMT = IVDOCMT||IVDATE;                                          05200000
*/*                                                                  */ 05250000
*/* Validity check the input                                         */ 05300000
*/*                                                                  */ 05350000
*   IF NUMBER(MACLIST) > 0 THEN       /* Excessive positionals       */ 05400000
*      DO;                            /* Put out message             */ 05450000
*         ERRMSG = MPREFIX||EM(2);    /* Build message           @L1A*/ 05487500
*         ANS MSG(ERRMSG) NORESCAN;   /* Issue message           @L1A*/ 05525000
*         ANS (COMMENT(ERRMSG)) COL(MACLMAR);   /* Comment       @L1A*/ 05562500
*         EHARC = 8;                  /* Set return code to 8        */ 05600000
*      END;                           /* End no STORADR              */ 05650000
*   IF LINKAGE ^= '' THEN             /* If LINKAGE specified    @D1C*/ 05656200
*   IF LINKAGE(1) ^= 'SYSTEM' & LINKAGE(1) ^= 'BRANCH' THEN  /*  @L1A*/ 05662400
*      DO;                            /* Put out message         @L1A*/ 05668600
*         ERRMSG = MPREFIX||EM(5);    /* Build message           @L1A*/ 05673200
*         ANS MSG(ERRMSG) NORESCAN;   /* Issue message           @L1A*/ 05677800
*         ANS (COMMENT(ERRMSG)) COL(MACLMAR);   /* Comment       @L1A*/ 05682400
*         EHARC = 8;                  /* Set return code to 8    @L1A*/ 05687200
*      END;                           /* End invalid LINKAGE     @L1A*/ 05693400
*   IF CPU ^= '' THEN                 /* If CPU specified        @D1A*/ 05693500
*   DO;                               /* CPU specified           @D1A*/ 05693600
*   IF CPU(1) ^= 'TOD' & CPU(1) ^= 'MIC' THEN                /*  @D1A*/ 05693700
*      DO;                            /* Put out message         @D1A*/ 05693800
*         ERRMSG = MPREFIX||EM(6);    /* Build message           @D1A*/ 05693900
*         ANS MSG(ERRMSG) NORESCAN;   /* Issue message           @D1A*/ 05694000
*         ANS (COMMENT(ERRMSG)) COL(MACLMAR);   /* Comment       @D1A*/ 05694100
*         EHARC = 8;                  /* Set return code to 8    @D1A*/ 05694200
*      END;                           /* End invalid TIMEVAL     @D1A*/ 05694300
*   ELSE                              /* TIMEVAL=CPU or VECTOR   @D1A*/ 05694400
*      IF CPU(1) = 'MIC' & (LINKAGE = '' | LINKAGE(1) = 'BRANCH')       05694500
*      THEN                                                   /* @D1A*/ 05694600
*      DO;                            /* Put out message         @D1A*/ 05694700
*         ERRMSG = MPREFIX||EM(9);    /* Build message           @D1A*/ 05694800
*         ANS MSG(ERRMSG) NORESCAN;   /* Issue message           @D1A*/ 05694900
*         ANS (COMMENT(ERRMSG)) COL(MACLMAR);   /* Comment       @D1A*/ 05695000
*         EHARC = 8;                  /* Set return code to 8    @D1A*/ 05695100
*      END;                           /* End invalid TIMEVAL     @D1A*/ 05695200
*   IF VECTOR ^= '' THEN              /* If VECTOR specified     @D1A*/ 05695300
*   DO;                               /* Put out message         @D1A*/ 05695400
*      ERRMSG = MPREFIX||EM(10);      /* Build message           @D1A*/ 05695500
*      ANS MSG(ERRMSG) NORESCAN;      /* Issue message           @D1A*/ 05695600
*      ANS (COMMENT(ERRMSG)) COL(MACLMAR);   /* Comment          @D1A*/ 05695700
*      EHARC = 8;                     /* Set return code to 8    @D1A*/ 05695800
*   END;                              /* End invalid TIMEVAL     @D1A*/ 05695900
*   END;                              /* End CPU specified       @D1A*/ 05696000
*   IF VECTOR ^= '' THEN              /* If VECTOR specified     @D1A*/ 05696100
*   DO;                               /* VECTOR specified        @D1A*/ 05696200
*   IF VECTOR(1) ^= 'TOD' & VECTOR(1) ^= 'MIC' THEN          /*  @D1A*/ 05696300
*      DO;                            /* Put out message         @D1A*/ 05696400
*         ERRMSG = MPREFIX||EM(7);    /* Build message           @D1A*/ 05696500
*         ANS MSG(ERRMSG) NORESCAN;   /* Issue message           @D1A*/ 05696600
*         ANS (COMMENT(ERRMSG)) COL(MACLMAR);   /* Comment       @D1A*/ 05696700
*         EHARC = 8;                  /* Set return code to 8    @D1A*/ 05696800
*      END;                           /* End invalid LINKAGE     @D1A*/ 05696900
*   IF LINKAGE = '' | LINKAGE(1) = 'BRANCH' THEN              /* @D1A*/ 05697000
*      DO;                            /* Put out message         @D1A*/ 05697100
*         ERRMSG = MPREFIX||EM(8);    /* Build message           @D1A*/ 05697200
*         ANS MSG(ERRMSG) NORESCAN;   /* Issue message           @D1A*/ 05697300
*         ANS (COMMENT(ERRMSG)) COL(MACLMAR);   /* Comment       @D1A*/ 05697400
*         EHARC = 8;                  /* Set return code to 8    @D1A*/ 05697500
*      END;                           /* End invalid TIMEVAL     @D1A*/ 05697600
*   END;                              /* End VECTOR specified    @D1A*/ 05697700
*   IF NUMBER(STORADR) > 1 THEN       /*                             */ 05700000
*      DO;                            /* Put out message             */ 05750000
*         ERRMSG = MPREFIX||EM(4);    /* Build message           @L1A*/ 05787500
*         ANS MSG(ERRMSG) NORESCAN;   /* Issue message           @L1A*/ 05825000
*         ANS (COMMENT(ERRMSG)) COL(MACLMAR);   /* Comment       @L1A*/ 05862500
*         EHARC = 8;                  /* Set return code to 8        */ 05900000
*      END;                           /* End no STORADR              */ 05950000
*   IF STORADR = ''| (STORADR(1) = '') THEN                             06000000
*      DO;                            /* Put out message             */ 06050000
*         ERRMSG = MPREFIX||EM(3);    /* Build message           @L1A*/ 06087500
*         ANS MSG(ERRMSG) NORESCAN;   /* Issue message           @L1A*/ 06125000
*         ANS (COMMENT(ERRMSG)) COL(MACLMAR);   /* Comment       @L1A*/ 06162500
*         EHARC = 8;                  /* Set return code to 8        */ 06200000
*      END;                           /* End no STORADR              */ 06250000
*   IF EHARC ^= 0 THEN                /* If errors ...           @L1C*/ 06262500
*      DO;                            /*                         @L1A*/ 06275000
*         ANS ('@SPACE(1);') NORESCAN COL(MACLMAR); /* Space     @L1A*/ 06287500
*         ANS (COMMENT(EM(1))) COL(MACLMAR);  /* Issue comment with     06300000
*                                                semicolon       @L1A*/ 06312500
*      END;                           /*                         @L1A*/ 06325000
*   ELSE                              /*                         @L1A*/ 06337500
*      DO;                            /* Generate expansion          */ 06350000
*         IF MACLABEL ^= '' THEN      /* Put out the label if coded  */ 06400000
*            ANS(MACLABEL) COL(MACLMAR);                                06450000
*/*                                                                  */ 06500000
*         ANS('DO; ') COL(MACLMAR);   /* Write out DO statement with */ 06550000
*         ANS(COMMENT(IVDOCMT));      /* invocation as a comment     */ 06600000
*         ANS('RFY (GPR00F,GPR01F,GPR14P,GPR15P) RSTD;') COL(MACLMAR);  06650000
*         ANS(COMMENT(' RESTRICT TIMEUSED REGISTERS'));                 06700000
*         IF LINKAGE = '' | LINKAGE(1) = 'BRANCH' THEN  /*              06712500
*                                           If Branch entry...   @L1A*/ 06725000
*            DO;                      /* Set up BASSM linkage    @L1A*/ 06737500
*         ANS('GPR01P=ADDR('||STORADR(1)||');') COL(MACLMAR)            06750000
*              NORESCAN;                                                06800000
*         ANS(COMMENT(' AREA FOR RETURN OF TIME VALUE'));               06850000
*         ANS('GEN'||' (L     GPR15P,2892(0,0));') COL(MACLMAR);        06900000
*         ANS(COMMENT(' SVT ADDRESS'));                                 06950000
*         ANS('GEN'||' (L     GPR15P,136(0,GPR15P));') COL(MACLMAR);    07000000
*         ANS(COMMENT(' ADDRESS OF SERVICE ROUTINE'));                  07050000
*         ANS('GEN'||' (BASSM GPR14P,GPR15P);') COL(MACLMAR);           07100000
*         ANS(COMMENT(' BRANCH TO THE SERVICE ROUTINE'));               07150000
*            END;                                            /*  @L1A*/ 07155500
*         ELSE                        /* Otherwise...            @L1A*/ 07161000
*            DO;                      /* Set up PC linkage       @L1A*/ 07166500
*         ANS('GPR14F=XM@(62);') COL(MACLMAR);                /* @L1A*/ 07172000
*         ANS(COMMENT(' LX/EX FOR SERVICE ROUTINE'));         /* @L1A*/ 07177500
*         IF VECTOR ^= '' THEN        /* If VECTOR specified...  @D1A*/ 07177700
*         IF VECTOR(1) = 'TOD' THEN   /* VECTOR/TOD selected     @D1A*/ 07177900
*            DO;                      /* Set up function flag    @D1A*/ 07178100
*            ANS('GPR00F = 2;') COL(MACLMAR);                 /* @D1A*/ 07178300
*            ANS(COMMENT(' INDICATE VECTOR/TOD TIMING'));     /* @D1A*/ 07178500
*            END;                                             /* @D1A*/ 07178700
*         ELSE                        /* VECTOR/MIC selected     @D1A*/ 07178900
*            DO;                      /* Set up function flag    @D1A*/ 07179100
*            ANS('GPR00F = 3;') COL(MACLMAR);                 /* @D1A*/ 07179300
*            ANS(COMMENT(' INDICATE VECTOR/MIC TIMING'));     /* @D1A*/ 07179500
*            END;                                             /* @D1A*/ 07179700
*         ELSE                        /* VECTOR not specified    @D1A*/ 07179900
*         IF CPU = '' | CPU(1) = 'TOD' THEN /* CPU/TOD selected  @D1A*/ 07180100
*            DO;                      /* Set up function flag    @D1A*/ 07180300
*            ANS('GPR00F = 0;') COL(MACLMAR);                 /* @D1A*/ 07180500
*            ANS(COMMENT(' INDICATE CPU/TOD TIMING'));        /* @D1A*/ 07180700
*            END;                                             /* @D1A*/ 07180900
*         ELSE                        /* CPU/MIC selected        @D1A*/ 07181100
*            DO;                      /* Set up function flag    @D1A*/ 07181300
*            ANS('GPR00F = 1;') COL(MACLMAR);                 /* @D1A*/ 07181500
*            ANS(COMMENT(' INDICATE CPU/MIC TIMING'));        /* @D1A*/ 07181700
*            END;                                             /* @D1A*/ 07181900
*         ANS('GEN'||' (PC    0(GPR14F));') COL(MACLMAR);     /* @L1A*/ 07183000
*         ANS(COMMENT(' PC TO THE SERVICE ROUTINE'));         /* @L1A*/ 07188500
*         ANS('IF GPR15F = 0 THEN') COL(MACLMAR);             /* @L1A*/ 07189300
*         ANS('STM(GPR00F,GPR01F,'||STORADR(1)||');') COL(MACLMAR+2)    07190100
*              NORESCAN;                                      /* @L1A*/ 07191100
*         ANS(COMMENT(' STORE THE TIMEUSED VALUE'));          /* @L1A*/ 07192400
*            END;                                            /*  @L1A*/ 07194000
*         ANS('RFY (GPR00F,GPR01F,GPR14P,GPR15P) UNRSTD;')              07212600
*             COL(MACLMAR);                                  /*  @L1C*/ 07231200
*         ANS(COMMENT(' UNRESTRICT TIMEUSED REGISTERS'));               07250000
*         ANS('END;') COL(MACLMAR);   /* Write out END statement     */ 07300000
*         ANS(COMMENT(IVDOCMT));      /* with comment                */ 07350000
*      END;                           /* End STORADR specified       */ 07400000
*/*                                                                  */ 07414200
*/*  Ensure cross memory variables are defined                       */ 07428400
*/*                                                                  */ 07442600
*   IF INDEX(EHAMAPS,'XM@')=0 THEN    /* If XM services were not     */ 07456800
*      EHAMAPS=EHAMAPS||'XM@,';       /* previously defined, then    */ 07471000
*                                     /* do so                   @L1A*/ 07485200
*/*  Declare registers if they have not been declared already        */ 07500000
*/*                                                                  */ 07550000
*   IF INDEX(EHAREGS,'00F')=0 THEN    /* If register 0 is not        */ 07564200
*      EHAREGS=EHAREGS||'00F';        /* defined, then do so     @L1C*/ 07578400
*   IF INDEX(EHAREGS,'01F')=0 THEN    /* If register 1 is not        */ 07592600
*      EHAREGS=EHAREGS||'01F';        /* defined, then do so     @L1C*/ 07606800
*   IF INDEX(EHAREGS,'01P')=0 THEN    /* IF REGISTER 1 IS NOT        */ 07621000
*      EHAREGS=EHAREGS||'01P';        /* DEFINED, THEN DO SO     @L1C*/ 07635200
*   IF INDEX(EHAREGS,'14F')=0 THEN    /* If register 14 is not       */ 07650000
*      EHAREGS=EHAREGS||'14F';        /* defined, then do so     @L1A*/ 07675000
*   IF INDEX(EHAREGS,'14P')=0 THEN    /* If register 14 is not       */ 07700000
*      EHAREGS=EHAREGS||'14P';        /* defined, then do so         */ 07750000
*   IF INDEX(EHAREGS,'15P')=0 THEN    /* If register 15 is not       */ 07800000
*      EHAREGS=EHAREGS||'15P';        /* defined, then do so         */ 07850000
*   IF INDEX(EHAREGS,'15F')=0 THEN    /* If register 15 is not       */ 07866600
*      EHAREGS=EHAREGS||'15F';        /* defined, then do so         */ 07883200
*   RETURN CODE(EHARC);               /* Return to caller            */ 07900000
*                                     /*                             */ 07950000
*%END TIMEUSED;                                                         08000000
