*%/*                                                                    00050000
         MACRO                                                          00103000
&LABEL   DATOFF &INDEX,&RELATED=,&DFTABLE=NO                            00106000
.*                                                                      00109000
.* ONLY PRINT THE PROLOGUE WHEN THE MACRO IS BEING USED TO GENERATE     00112000
.* THE DSECT FOR THE TABLE, AND THE PARAMETERS ARE CORRECT (NO INDEX    00115000
.* SPECIFIED).                                                          00118000
.*                                                                      00121000
         AIF  (('&DFTABLE' NE 'DSECT') OR                              *00124000
               ('&INDEX' NE '')).NOPROLG                                00130000
.*                                                                      00133000
*********************************************************************** 00179700
*                                                                     * 00226400
*01* MACRO-NAME = DATOFF                                              * 00273100
*                                                                     * 00319800
*01* DESCRIPTIVE-NAME = DAT-OFF LINKAGE MACRO                         * 00366500
*                                                                     * 00413200
*01*  COPYRIGHT =                                                     * 00463200
*       LICENSED MATERIALS - PROPERTY OF IBM                          * 00568000
*       THIS MACRO IS "RESTRICTED MATERIALS OF IBM"                   * 00594200
*       5647-A01 (C) COPYRIGHT IBM CORP. 1981, 2000                   * 00620400
*                                                                     * 00646700
*01* STATUS = HBB7703                                                 * 00665300
*                                                                     * 00683900
*01* EXTERNAL CLASSIFICATION: PI                                      * 00702500
*01* END OF EXTERNAL CLASSIFICATION:                                  * 00721100
*                                                                     * 00740100
*01* FUNCTION = LINK FROM DAT-ON ROUTINE TO DAT-OFF ROUTINE           * 00786800
*                                                                     * 00833500
*    NOTE  --    IN ORDER TO ADD ANOTHER INDEX,                       * 00841200
*                THE CORRESPONDING PLACE IN BOTH                      * 00848900
*                THE CSECT AND DSECT LISTS MUST                       * 00856600
*                BE UPDATED.                                          * 00864300
*                                                                     * 00872000
*01* MODULE-TYPE = MACRO                                              * 00880200
*                                                                     * 00926900
*02* PROCESSOR = BILINGUAL                                            * 00973600
*                                                                     * 01020300
*01* MACROS = IHBERMAC                                                * 01160400
*                                                                     * 01207100
*01* PARAMETERS:                                                      * 01253800
*        POSITIONAL: INDEX -- INDEX INTO DAT-OFF INDEX TABLE          * 01300500
*        KEYWORD:  DFTABLE -- NO (DEFAULT) -- DO REGULAR MACRO        * 01347200
*                             YES -- GENERATE DATOFF LINKAGE TABLE    * 01393900
*                             YES64 -- GENERATE 64-BIT LINKAGES   @L2A* 01417200
*                             DSECT -- GENERATE DSECT FOR TABLE       * 01440600
*                  RELATED -- (OPTIONAL) DATOFF CSECT NAME COMMENT    * 01487300
*                                                                     * 01534000
*01* CHANGE-ACTIVITY =                                                * 01580700
*                                                                     * 01627400
*    G860PXT     HBB2102 SUPPORT (NEW)                                * 01635100
*   $P1=PAE0016  JBB2133  830110  PD16XD: GEN CODE EXTENDS TO COL 72  * 01638900
*   $L1=IOGEN    JBB2220  841128  PD16FH: IOGEN RESTRUCTURE           * 01642800
*   $D1=DCR0004  HBB4410  871102  PD16H5: NIP WTO/R SUPPORT           * 01646700
*   $P2=PH31895  HBB4420  901126  PD16EJ: REMOVE IEERECON SUPPORT     * 01648700
*   $P3=PH32182  HBB4420  910201  PD16EJ: REMOVE EXTERN STATEMENT     * 01649300
*                                         FOR IEERECON                * 01649900
*   $01=OY42327  HBB4420  910418  PD16CU: SET AMODE 31 ON BRANCH      * 01650000
*                                         TO DATOFF ROUTINE           * 01650100
*   $02=OY45406  HBB4420  910708  PD16AC: REMOVED BLOCK GENERATE FROM * 01650200
*                                         PL/S VERSION TO AVOID       * 01650300
*                                         POSSIBLE ASSEMBLY FAILURES  * 01650400
*   $L2=64BITSUP HBB7703  980106  PD00XB: 64-BIT ROUTINES             * 01650500
*   $L3=64BITSUP HBB7703  990731  PD00B7: REMOVE RSM 64BIT ROUTINES   * 01650600
*   $P4=PXD0365  HBB7703  990824  PD00XB: NO BIT 0 FOR USR64N         * 01658400
*   $P5=PXD0721  HBB7703  991116  PD00XB: FIX PSAXDATLK OFFSET        * 01662300
*                                                                     * 01666200
*01* MNOTES = IHB006 INDEX OPERAND REQUIRED, NOT SPECIFIED            * 01674100
*             IHB002 INVALID INDEX SPECIFIED - XX                     * 01720800
*             IHB002 INVALID DFTABLE SPECIFIED - XX                   * 01767500
*             IHB280 INDEX INVALID WITH DFTABLE                       * 01814200
*                                                                     * 01860900
*01* COMPONENT = SC1C5 (SUPERVISOR CONTROL)                           * 01876400
*                                                                     * 01891900
*01*  DISTRIBUTION-LIBRARY = AMACLIB                                  * 01897100
*                                                                     * 01902300
*********************************************************************** 01907600
.* A-000000-999999                                             @G860PXT 01954300
.*                                                                      02001000
.NOPROLG ANOP                                                           02050000
.*                                                                      02087500
*        MACDATE = 11/11/98                                             02125000
.*                                                                      02162500
         LCLA  &NDMVCL0,&NDXC0,&NDUSR1      . LOCAL VARIABLES           02200000
         LCLA  &NDUSR2,&NDUSR3,&NDUSR4      . (OFFSETS INTO DATOFF      02250000
         LCLA  &NDUSR641,&NDUSR642,&NDUSR643,&NDUSR644             @L2A 02275000
         LCLA  &NDSWP,&NDRESO,&NDPOFF       . TABLE)                    02300000
         LCLA  &NDRECON,&NDABEND            .                           02350000
         LCLA  &NDCBL,&NDMBL                .                           02375000
         LCLA  &NDMVCLK                     .                           02387500
         LCLA  &OFFSET                      . ACTUAL OFFSET TO USE      02400000
         LCLA  &NEED64                      . 64-BIT ROUTINE?      @L2A 02412500
         LCLA  &NDMVCL64,&NDXC4,&NDMVCLK64,&NDCDS64                @L3C 02425000
         LCLA  &NDABEND64                                          @L2A 02437500
.*                                                                      02450000
.*  FOLLOWING ARE THE OFFSETS INTO THE DATOFF INDEX TABLE FOR THE       02500000
.*  INDICES THAT HAVE BEEN ASSIGNED.                                    02550000
.*                                                                      02600000
&NDMVCL0 SETA 0                      . MVCL ROUTINE                     02650000
&NDXC0   SETA 4                      . XC ROUTINE                       02700000
&NDUSR1  SETA 8                      . USER ROUTINE 1                   02750000
&NDUSR2  SETA 12                     . USER ROUTINE 2                   02800000
&NDUSR3  SETA 16                     . USER ROUTINE 3                   02850000
&NDUSR4  SETA 20                     . USER ROUTINE 4                   02900000
&NDSWP   SETA 24                     . RSM SWAP-IN ROUTINE              02950000
&NDRESO  SETA 28                     . RESTART PSW REFRESH ROUTINE      03000000
&NDPOFF  SETA 32                     . NOT USED (WAS MCH ROUTER)   @D1C 03050000
&NDRECON SETA 36                     . NOT USED (WAS IEERECON)     @P2C 03100000
&NDMBL   SETA 40                     . MOVE 4K BLOCK                    03150000
&NDCBL   SETA 44                     . CLEAR 4K BLOCK                   03183300
&NDABEND SETA 48                     . ABEND FOR INVALID INDEX          03216600
&NDMVCLK SETA 52                     . MVCL IN USER KEY ROUTINE         03233300
&NDCDS   SETA 56                     . COMPARE DOUBLE AND SWAP          03241600
&NDMVCL64 SETA 0                     . MVCL64 ROUTINE              @L2A 03242800
&NDXC64  SETA  4                     . XC64 ROUTINE                @L2A 03244000
&NDMVCLK64 SETA 8                    . MVCL64 IN USER KEY ROUTINE  @L2A 03245200
&NDCDS64 SETA 12                     . CDS64                       @L2A 03246400
&NDUSR641 SETA 16                    . USER64 ROUTINE 1            @L3C 03246800
&NDUSR642 SETA 20                    . USER64 ROUTINE 2            @L3C 03247200
&NDUSR643 SETA 24                    . USER64 ROUTINE 3            @L3C 03247600
&NDUSR644 SETA 28                    . USER64 ROUTINE 4            @L3C 03248000
&NDABEND64 SETA 32                   . ABEND64                     @L3C 03248400
&NEED64  SETA 0                      . ASSUME NOT 64-BIT ROUTINE   @L2A 03248800
.*                                                                      03250000
.*   CHECK IF THE DFTABLE OPERAND IS SPECIFIED. IF IT IS, THE           03300000
.*   INDEX TABLE IS TO BE GENERATED. OTHERWISE, THE CODE TO EFFECT      03350000
.*   LINKING TO THE GIVEN DATOFF ROUTINE IS GENERATED.                  03400000
.*                                                                      03450000
         AIF   ('&DFTABLE' NE 'NO').GENTAB      DFTABLE OPERAND HERE?   03500000
.*                                              YES, GENERATE TABLE     03550000
.*                                                                      03600000
.*   CHECK THAT THE INDEX OPERAND IS SPECIFIED                          03650000
.*                                                                      03700000
         AIF   (T'&INDEX NE 'O').ISINDEX        INDEX OPERAND HERE?     03750000
.*       IHB001 INDEX OPERAND REQUIRED, NOT SPECIFIED                   03800000
         IHBERMAC 1006,INDEX                    NO, PRINT MESSAGE       03850000
         MEXIT                                  EXIT MACRO              03900000
.ISINDEX ANOP                                   INDEX OPERAND PRESENT   03950000
.*                                                                      04000000
.* CHECK THAT INDEX PARAMETER IS VALID                                  04050000
.*                                                                      04100000
&OFFSET  SETA  &NDMVCL0                          ASSUME INDMVCL0 OFFSET 04150000
         AIF   ('&INDEX' EQ 'INDMVCL0').GENCODE  BRANCH IF 'INDMVCL0'   04200000
&OFFSET  SETA  &NDXC0                            ASSUME INDXC0 OFFSET   04250000
         AIF   ('&INDEX' EQ 'INDXC0').GENCODE    BRANCH IF 'INDXC0'     04300000
&OFFSET  SETA  &NDUSR1                           ASSUME INDUSR1 OFFSET  04350000
         AIF   ('&INDEX' EQ 'INDUSR1').GENCODE   BRANCH IF 'INDUSR1'    04400000
&OFFSET  SETA  &NDUSR2                           ASSUME INDUSR2 OFFSET  04450000
         AIF   ('&INDEX' EQ 'INDUSR2').GENCODE   BRANCH IF 'INDUSR2'    04500000
&OFFSET  SETA  &NDUSR3                           ASSUME INDUSR3 OFFSET  04550000
         AIF   ('&INDEX' EQ 'INDUSR3').GENCODE   BRANCH IF 'INDUSR3'    04600000
&OFFSET  SETA  &NDUSR4                           ASSUME INDUSR4 OFFSET  04650000
         AIF   ('&INDEX' EQ 'INDUSR4').GENCODE   BRANCH IF 'INDUSR4'    04700000
&OFFSET  SETA  &NDSWP                            ASSUME INDSWP OFFSET   04750000
         AIF   ('&INDEX' EQ 'INDSWP').GENCODE    BRANCH IF 'INDSWP'     04800000
&OFFSET  SETA  &NDRESO                           ASSUME INDRESO OFFSET  04850000
         AIF   ('&INDEX' EQ 'INDRESO').GENCODE   BRANCH IF 'INDRESO'    04900000
&OFFSET  SETA  &NDPOFF                           ASSUME INDPOFF OFFSET  04950000
         AIF   ('&INDEX' EQ 'INDPOFF').OBSOLET   NO LONGER USED    @D1C 05000000
&OFFSET  SETA  &NDRECON                          ASSUME INDRECON OFFSET 05050000
         AIF   ('&INDEX' EQ 'INDRECON').OBSOLET  NO LONGER USED    @P2C 05100000
&OFFSET  SETA  &NDMBL                            ASSUME INDMBL OFFSET   05150000
         AIF   ('&INDEX' EQ 'INDMBL').GENCODE    BRANCH IF 'INDMBL'     05175000
&OFFSET  SETA  &NDCBL                            ASSUME INDCBL OFFSET   05200000
         AIF   ('&INDEX' EQ 'INDCBL').GENCODE    BRANCH IF 'INDCBL'     05225000
&OFFSET  SETA  &NDMVCLK                          ASSUME INDMVCLK OFFSET 05233300
         AIF   ('&INDEX' EQ 'INDMVCLK').GENCODE  BRANCH IF 'INDMVCLK'   05241600
&OFFSET  SETA  &NDCDS                        ASSUME INDCDS OFFSET  @L1A 05244400
         AIF   ('&INDEX' EQ 'INDCDS').GENCODE    BRANCH IF EQUAL   @L1A 05247200
&NEED64  SETA 1                      . ASSUME 64-BIT ROUTINE       @L2A 05247400
&OFFSET  SETA  &NDMVCL64                   ASSUME INDMVCL64 OFFSET @L2A 05247600
         AIF   ('&INDEX' EQ 'INDMVCL64').GENCODE                   @L2A 05247800
&OFFSET  SETA  &NDXC64                     ASSUME INDXC64 OFFSET   @L2A 05248000
         AIF   ('&INDEX' EQ 'INDXC64').GENCODE                     @L2A 05248200
&OFFSET  SETA  &NDMVCLK64                 ASSUME INDMVCLK64 OFFSET @L2A 05248400
         AIF   ('&INDEX' EQ 'INDMVCLK64').GENCODE                  @L2A 05248600
&OFFSET  SETA  &NDCDS64                    ASSUME INDCDS64 OFFSET  @L2A 05248800
         AIF   ('&INDEX' EQ 'INDCDS64').GENCODE                    @L2A 05249000
&OFFSET  SETA  &NDUSR641                        ASSUME INDUSR641 OFFSET 05254600
         AIF   ('&INDEX' EQ 'INDUSR641').GENCODE BRANCH IF 'INDUSR641'  05259600
&OFFSET  SETA  &NDUSR642                        ASSUME INDUSR642 OFFSET 05264600
         AIF   ('&INDEX' EQ 'INDUSR642').GENCODE BRANCH IF 'INDUSR642'  05269600
&OFFSET  SETA  &NDUSR643                        ASSUME INDUSR643 OFFSET 05274600
         AIF   ('&INDEX' EQ 'INDUSR643').GENCODE BRANCH IF 'INDUSR643'  05279600
&OFFSET  SETA  &NDUSR644                        ASSUME INDUSR644 OFFSET 05284600
         AIF   ('&INDEX' EQ 'INDUSR644').GENCODE BRANCH IF 'INDUSR644'  05289600
.*                                                                      05294600
.* AT THIS POINT, THE INDEX OPERAND IS INVALID, SO AN MNOTE IS ISSUED   05300000
.* AND THE MACRO IS EXITED.                                             05350000
.*                                                                      05400000
.*       IHB002 INVALID INDEX SPECIFIED - XX                            05450000
.OBSOLET ANOP                                                      @D1A 05475000
         IHBERMAC 1001,INDEX,&INDEX              ISSUE MNOTE            05500000
         MEXIT                                   EXIT MACRO             05550000
.*                                                                      05600000
.* OTHERWISE, A VALID INDEX HAS BEEN FOUND, SO THE NECESSARY CODE IS    05650000
.* GENERATED.                                                           05700000
.*                                                                      05750000
.GENCODE ANOP                                                           05800000
&DATOFL1 SETC  'DAT&SYSNDX'                                        @01A 05825000
&LABEL   LA    15,&OFFSET             GET OFFSET INTO DAT-OFF TABLE     05850000
         AIF   (&NEED64 NE 0).DO64                                 @L2A 05857100
         L     14,&DATOFL1            SET TARGET ADDRESS FOR BASSM @01A 05864200
         BASSM 0,14                   SAVE AMODE IN BIT-0 OF REGISTER  -05878400
                                      0 AND SWITCH TO 31-BIT MODE  @01A 05892600
         CNOP  0,4                    ALIGN ON A FULLWORD BOUNDARY @01A 05906800
         B     *+8                    SKIP CONSTANT                @01A 05921000
&DATOFL1 DC    A(X'80000000'+PSADATLK-PSA)                         @01A 05935200
         MEXIT                                                          05950000
.DO64    ANOP                                                      @L2A 05953800
         GBLC  &SYSAM64                                            @L2A 05957600
         SYSSTATE TEST                                             @L2A 05961400
         AIF   ('&SYSAM64' EQ 'YES').AM64OK                        @L2A 05965200
         MNOTE 8,'DATOFF --> &INDEX REQUIRES AMODE 64. SYSSTATE AMODE64-05969000
               =YES IS REQUIRED.'                                  @L2A 05972800
         MEXIT                                                     @L2A 05976600
.AM64OK  ANOP                                                      @L2A 05980400
         LGHI  14,X'1E00'             PSAXDATLK ADDRESS            @P5C 05986100
         BASR  0,14                   BRANCH TO PSA                @L2A 05991800
         MEXIT                                                     @L2A 05995600
.*                                                                      06000000
.* AT THIS STAGE, THE MACRO HAS BEEN CALLED, SPECIFYING THE DFTABLE     06050000
.* PARAMETER (GENERATING THE TABLE IF DFTABLE=YES, OR A DSECT IF        06100000
.* DFTABLE=DSECT IS SPECIFIED). THE APPROPRIATE V-CONS ARE              06150000
.* GENERATED, PROVIDED THAT NO INDEX WAS SPECIFIED.                     06200000
.*                                                                      06250000
.GENTAB  ANOP                                                           06300000
         AIF   ('&INDEX' EQ '').GENOK                                   06350000
.*       IHB280  INDEX INVALID WITH DFTABLE                             06400000
         IHBERMAC 1020,INDEX,DFTABLE                                    06450000
         MEXIT                                                          06500000
.GENOK   ANOP                                                           06550000
         AIF   ('&DFTABLE' EQ 'YES').TABDC   TABLE? YES, BRANCH         06600000
         AIF   ('&DFTABLE' EQ 'YES64').TABDC64 TABLE? YES, BRANCH  @L2A 06625000
         AIF   ('&DFTABLE' EQ 'DSECT').TABDS DSECT? YES, BRANCH         06650000
.*                                                                      06700000
.* AT THIS STAGE, THE DSECT PARAMETER IS INVALID.                       06750000
.*                                                                      06800000
.*       ***IHB002 INVALID DFTABLE PARAMETER - XX                       06850000
         IHBERMAC 1001,DFTABLE,&DFTABLE                                 06900000
         MEXIT                                                          06950000
.TABDC   ANOP                              TABLE WANTED --              07000000
         GBLA  &SYSALVL                                            @LXA 07016600
         SYSSTATE TEST                                             @LXA 07033200
INDDFT   DC    0F'0'              DATOFF INDEX TABLE                    07050000
         ORG   INDDFT+&NDMVCL0                                          07300000
         EXTRN IEAVMVC0                                                 07350000
INDMVCL0 DC    A(X'80000000'+IEAVMVC0) MVCL ROUTINE                     07400000
         ORG   INDDFT+&NDXC0                                            07450000
         EXTRN IEAVXC0                                                  07500000
INDXC0   DC    A(X'80000000'+IEAVXC0)  XC ROUTINE                       07550000
         ORG   INDDFT+&NDUSR1                                           07600000
         WXTRN IEAVEUR1                                        @ZMC2809 07650000
INDUSR1  DC    A(X'80000000'+IEAVEUR1) USER ROUTINE 1                   07700000
         ORG   INDDFT+&NDUSR2                                           07750000
         WXTRN IEAVEUR2                                        @ZMC2809 07800000
INDUSR2  DC    A(X'80000000'+IEAVEUR2) USER ROUTINE 2                   07850000
         ORG   INDDFT+&NDUSR3                                           07900000
         WXTRN IEAVEUR3                                        @ZMC2809 07950000
INDUSR3  DC    A(X'80000000'+IEAVEUR3) USER ROUTINE 3                   08000000
         ORG   INDDFT+&NDUSR4                                           08050000
         WXTRN IEAVEUR4                                        @ZMC2809 08100000
INDUSR4  DC    A(X'80000000'+IEAVEUR4) USER ROUTINE 4                   08150000
         ORG   INDDFT+&NDSWP                                            08200000
         AIF   (&SYSALVL GT 1).ESAME1A                             @LXA 08225000
         EXTRN IARMDSWP                                                 08250000
INDSWP   DC    A(X'80000000'+IARMDSWP) RSM SWAP-IN ROUTINE              08300000
         AGO   .ESAME1B                                            @LXA 08310000
.ESAME1A ANOP                                                      @LXA 08320000
INDSWP   DC    A(X'80000000'+IEAVDFTA) NOT SUPPORTED IN ESAME      @LXA 08330000
.ESAME1B ANOP                                                      @LXA 08340000
         ORG   INDDFT+&NDRESO                                           08350000
         EXTRN IEAVEREO                                                 08400000
INDRESO  DC    A(X'80000000'+IEAVEREO) RESTART FLIH PSW REFRESH ROUTINE 08450000
         ORG   INDDFT+&NDPOFF                                           08500000
******   EXTRN IGFPOFF                                             @D1C 08550000
INDPOFF  DC    A(X'80000000'+IEAVDFTA) NO LONGER SUPPORTED         @D1C 08600000
         ORG   INDDFT+&NDRECON                                          08650000
******   EXTRN IEERECON                                            @P3C 08700000
INDRECON DC    A(X'80000000'+IEAVDFTA) NO LONGER SUPPORTED         @P2C 08750000
         ORG   INDDFT+&NDMBL                                            08800000
         AIF   (&SYSALVL GT 1).ESAME2A                             @LXA 08815900
         EXTRN IARMDMBL                                                 08831900
INDMBL   DC    A(X'80000000'+IARMDMBL)  4K MOVE BLOCK                   08863800
         AGO   .ESAME2B                                            @LXA 08870100
.ESAME2A ANOP                                                      @LXA 08876400
INDMBL   DC    A(X'80000000'+IEAVDFTA) NOT SUPPORTED IN ESAME      @LXA 08882700
.ESAME2B ANOP                                                      @LXA 08889000
         ORG   INDDFT+&NDCBL                                            08895700
         AIF   (&SYSALVL GT 1).ESAME3A                             @LXA 08911600
         EXTRN IARMDCBL                                                 08927600
INDCBL   DC    A(X'80000000'+IARMDCBL) 4K CLEAR BLOCK                   08959500
         AGO   .ESAME3B                                            @LXA 08965800
.ESAME3A ANOP                                                      @LXA 08972100
INDCBL   DC    A(X'80000000'+IEAVDFTA) NOT SUPPORTED IN ESAME      @LXA 08978400
.ESAME3B ANOP                                                      @LXA 08984700
         ORG   INDDFT+&NDABEND                                          08991400
         EXTRN IEAVDFTA                                                 09023300
INDABEND DC    A(X'80000000'+IEAVDFTA) ABEND FOR INVALID INDEX          09055200
         ORG   INDDFT+&NDMVCLK                                          09063200
         EXTRN IEAVMVKY                                                 09071200
INDMVCLK DC    A(X'80000000'+IEAVMVKY) MVCL IN USER'S KEY ROUTINE       09079200
         ORG   INDDFT+&NDCDS                                       @L1A 09081400
         EXTRN IEAVCDS                                             @L1A 09083600
INDCDS   DC    A(X'80000000'+IEAVCDS)  COMPARE DOUBLE AND SWAP RTN @L1A 09085800
         MEXIT                                                          09088100
.TABDC64 ANOP                              TABLE WANTED --         @L2A 09088200
INDDFT64 DC    0F'0'              64-BIT DATOFF INDEX TABLE        @L2A 09088300
*                                                                       09088400
* THE FOLLOWING ROUTINES DO NOT SET BIT 0 BECAUSE THEY ARE ASSUMED      09088500
* TO GET CONTROL IN AMODE 64 IN WHICH CASE THAT BIT IS PART OF THE      09088600
* ADDRESS AND THUS MUST BE 0.                                           09088700
         ORG   INDDFT64+&NDMVCL64                                  @L2A 09088800
         EXTRN IEAVMV64                                            @L2A 09088900
INDMVCL64 DC   A(IEAVMV64)             MVCL ROUTINE                @L2A 09089000
         ORG   INDDFT64+&NDXC64                                    @L2A 09089100
         EXTRN IEAVXC64                                            @L2A 09089200
INDXC64  DC    A(IEAVXC64)             XC ROUTINE                  @L2A 09089300
         ORG   INDDFT64+&NDMVCLK64                                 @L2A 09089400
         EXTRN IEAVMK64                                            @L2A 09089500
INDMVCLK64 DC  A(IEAVMK64)             MVCL IN USER'S KEY ROUTINE  @L2A 09089600
         ORG   INDDFT64+&NDCDS64                                   @L2A 09089700
         EXTRN IEAVCD64                                            @L2A 09089800
INDCDS64 DC    A(IEAVCD64)             COMPARE DOUBLE AND SWAP RTN @L2A 09089900
         ORG   INDDFT64+&NDUSR641                                  @L2A 09090900
         WXTRN IEAV64U1                                            @L2A 09091000
INDUSR641 DC   A(IEAV64U1) USER64 ROUTINE 1                        @P4C 09091100
         ORG   INDDFT64+&NDUSR642                                  @L2A 09091200
         WXTRN IEAV64U2                                            @L2A 09091300
INDUSR642 DC   A(IEAV64U2) USER64 ROUTINE 2                        @P4C 09091400
         ORG   INDDFT64+&NDUSR643                                  @L2A 09091500
         WXTRN IEAV64U3                                            @L2A 09091600
INDUSR643 DC   A(IEAV64U3) USER64 ROUTINE 3                        @P4C 09091700
         ORG   INDDFT64+&NDUSR644                                  @L2A 09091800
         WXTRN IEAV64U4                                            @L2A 09091900
INDUSR644 DC   A(IEAV64U4) USER64 ROUTINE 4                        @P4C 09092000
         ORG   INDDFT64+&NDABEND64                                 @L2A 09092100
         EXTRN IEAVD64A                                            @L2A 09092200
INDABEND64 DC    A(IEAVD64A)           ABEND FOR INVALID INDEX     @L2A 09092300
         MEXIT                                                          09092400
.TABDS   ANOP                                                           09092500
INDDFT   DSECT                    DATOFF INDEX TABLE                    09092600
         ORG   INDDFT+&NDMVCL0                                          09092700
INDMVCL0 DC    A(0)                    MVCL ROUTINE                     09092800
         ORG   INDDFT+&NDXC0                                            09092900
INDXC0   DC    A(0)                    XC ROUTINE                       09093000
         ORG   INDDFT+&NDUSR1                                           09093100
INDUSR1  DC    A(0)                    USER ROUTINE 1                   09093200
         ORG   INDDFT+&NDUSR2                                           09093300
INDUSR2  DC    A(0)                    USER ROUTINE 2                   09093400
         ORG   INDDFT+&NDUSR3                                           09093500
INDUSR3  DC    A(0)                    USER ROUTINE 3                   09093600
         ORG   INDDFT+&NDUSR4                                           09093700
INDUSR4  DC    A(0)                    USER ROUTINE 4                   09093800
         ORG   INDDFT+&NDSWP                                            09093900
INDSWP   DC    A(0)                    RSM SWAP-IN ROUTINE              09094000
         ORG   INDDFT+&NDRESO                                           09094100
INDRESO  DC    A(0)                    RESTART FLIH PSW REFRESH ROUTINE 09094200
         ORG   INDDFT+&NDPOFF                                           09094300
INDPOFF  DC    A(0)                    MCH ROUTER NO LONGER        @D1C 09094400
*                                      SUPPORTED, GOES TO ABEND ROUTINE 09094500
         ORG   INDDFT+&NDRECON                                          09094600
INDRECON DC    A(0)                    IEERECON NO LONGER SUPPORTED    -09094700
                                       GOES TO ABEND ROUTINE       @P2C 09094800
         ORG   INDDFT+&NDMBL                                            09095000
INDMBL   DC    A(0)                    4K MOVE BLOCK                    09095400
         ORG   INDDFT+&NDCBL                                            09095800
INDCBL   DC    A(0)                    4K CLEAR BLOCK                   09096200
         ORG   INDDFT+&NDABEND                                          09096600
INDABEND DC    A(0)                    ABEND FOR INVALID INDEX          09097000
         ORG   INDDFT+&NDMVCLK                                          09097100
INDMVCLK DC    A(0)                    MVCL IN USER'S KEY ROUTINE       09097200
         ORG   INDDFT+&NDCDS                                       @L1A 09097400
INDCDS   DC    A(0)                    COMPARE DOUBLE AND SWAP RTN @L1A 09097700
INDDFT64 DSECT                    64-BIT DATOFF INDEX TABLE        @L2A 09097800
         ORG   INDDFT64+&NDMVCL64                                  @L2A 09097900
INDMVCL64 DC   A(0)                    MVCL ROUTINE                @L2A 09098000
         ORG   INDDFT64+&NDXC64                                    @L2A 09098100
INDXC64  DC    A(0)                    XC ROUTINE                  @L2A 09098200
         ORG   INDDFT64+&NDMVCLK64                                 @L2A 09098300
INDMVCLK64 DC  A(0)                    MVCL IN USER'S KEY ROUTINE  @L2A 09098400
         ORG   INDDFT64+&NDCDS64                                   @L2A 09098500
INDCDS64 DC    A(0)                    COMPARE DOUBLE AND SWAP RTN @L2A 09098600
         ORG   INDDFT64+&NDUSR641                                       09103400
INDUSR641 DC   A(0)                    USER ROUTINE 1                   09107600
         ORG   INDDFT64+&NDUSR642                                       09111800
INDUSR642 DC   A(0)                    USER ROUTINE 2                   09116000
         ORG   INDDFT64+&NDUSR643                                       09120200
INDUSR643 DC   A(0)                    USER ROUTINE 3                   09124400
         ORG   INDDFT64+&NDUSR644                                       09128600
INDUSR644 DC   A(0)                    USER ROUTINE 4                   09132800
         ORG   INDDFT64+&NDABEND64                                 @L2A 09137000
INDABEND64 DC  A(0)                    ABEND FOR INVALID INDEX     @L2A 09141200
         MEND                                                           09145400
* */                                                                    09150000
* DATOFF: MACRO                                                         09200000
* KEYS(RELATED);                                                        09250000
*/********************************************************************/ 09300000
*/*                PL/S VERSION OF THE DATOFF MACRO                  */ 09350000
*/********************************************************************/ 09400000
*                                                                       09450000
*/********************************************************************/ 09500000
*/*                DEFINE EXTERNAL MACRO VARIABLES                   */ 09550000
*/********************************************************************/ 09600000
*                                                                       09650000
* DECLARE                                                               09700000
*   EHAREGS CHARACTER EXT;   /* CONTAINS DECLARED REGISTER NUMBERS.  */ 09750000
*                                                                       09800000
*/********************************************************************/ 09850000
*/*                DEFINE INTERNAL MACRO VARIABLES                   */ 09900000
*/********************************************************************/ 09950000
*                                                                       10000000
* DECLARE                                                               10050000
*   DATDOCMT CHAR,           /* COMMENT FOR GENERATED DO STATEMENT.  */ 10100000
*   RC       FIXED,          /* RETURN CODE FOR THIS INVOCATION.     */ 10150000
*   INDMVCL0 FIXED,          /*    SUPPLIED MVCL                     */ 10200000
*   INDXC0   FIXED,          /*    SUPPLIED XC                       */ 10250000
*   INDUSR1  FIXED,          /*    USER ROUTINE 1                    */ 10300000
*   INDUSR2  FIXED,          /*    USER ROUTINE 2                    */ 10350000
*   INDUSR3  FIXED,          /*    USER ROUTINE 3                    */ 10400000
*   INDUSR4  FIXED,          /*    USER ROUTINE 4                    */ 10450000
*   INDUSR641 FIXED,         /*    USER64 ROUTINE 1              @L2A*/ 10460000
*   INDUSR642 FIXED,         /*    USER64 ROUTINE 2              @L2A*/ 10470000
*   INDUSR643 FIXED,         /*    USER64 ROUTINE 3              @L2A*/ 10480000
*   INDUSR644 FIXED,         /*    USER64 ROUTINE 4              @L2A*/ 10490000
*   INDSWP   FIXED,          /*    RSM SWAP IN                       */ 10500000
*   INDRESO  FIXED,          /*    DATOFF RESTART FLIH               */ 10550000
*   INDPOFF  FIXED,          /*    MCH ROUTER - NOT SUPPORTED    @D1C*/ 10600000
*   INDRECON FIXED,          /*    IEERECON - NOT SUPPORTED      @P2C*/ 10650000
*   INDCBL   FIXED,          /*    4K CLEAR BLOCK                    */ 10700000
*   INDMBL   FIXED,          /*    4K MOVE BLOCK                     */ 10725000
*   INDABEND FIXED,          /*    ABEND FOR INVALID INDEX           */ 10750000
*   INDMVCLK FIXED,          /*    SUPPLIED MVCL IN USERS KEY    @L1C*/ 10775000
*   INDCDS   FIXED,          /*    COMPARE DOUBLE & SWAP INDEX   @L1A*/ 10800000
*   INDMVCL64 FIXED,         /*    SUPPLIED MVCL                 @L2A*/ 10805000
*   INDXC64  FIXED,          /*    SUPPLIED XC                   @L2A*/ 10810000
*   INDMVCLK64 FIXED,        /*    SUPPLIED MVCL IN USERS KEY    @L2A*/ 10815000
*   INDCDS64 FIXED,          /*    COMPARE DOUBLE & SWAP INDEX   @L2A*/ 10820000
*   OFFSET   FIXED;          /*    ABSOLUTE OFFSET INTO TABLE    @L1M*/ 10825000
*   DCL EHAREGS64 CHAR EXT;        /*                                */ 10837500
*                                                                       10850000
*/********************************************************************/ 10900000
*/*                INITIALIZE INDEX VARIABLES                        */ 10950000
*/********************************************************************/ 11000000
*                                                                       11050000
* INDMVCL0 = 0;              /*    SUPPLIED MVCL OFFSET              */ 11100000
* INDXC0 = 4;                /*    SUPPLIED XC OFFSET                */ 11150000
* INDUSR1 = 8;               /*    USER ROUTINE 1 OFFSET             */ 11200000
* INDUSR2 = 12;              /*    USER ROUTINE 2 OFFSET             */ 11250000
* INDUSR3 = 16;              /*    USER ROUTINE 3 OFFSET             */ 11300000
* INDUSR4 = 20;              /*    USER ROUTINE 4 OFFSET             */ 11350000
* INDSWP = 24;               /*    RSM SWAP IN OFFSET                */ 11400000
* INDRESO = 28;              /*    DATOFF RESTART FLIH OFFSET        */ 11450000
* INDPOFF = 32;              /*    MCH ROUTER - NOT SUPPORTED    @D1C*/ 11500000
* INDRECON = 36;             /*    IEERECON -NOT SUPPORTED       @P2C*/ 11550000
* INDMBL = 40;               /*   4K MOVE BLOCK                      */ 11600000
* INDCBL = 44;               /*   4K CLEAR BLOCK                     */ 11616600
*                            /*   OFFSET 48 IS FOR ABEND ROUTINE     */ 11633200
* INDMVCLK = 52;             /*   MVCL IN USERS KEY OFFSET           */ 11641600
* INDCDS   = 56;             /*   COMPARE DOUBLE & SWAP INDEX        */ 11645800
* INDMVCL64 = 0;             /*    SUPPLIED MVCL OFFSET          @L2A*/ 11646600
* INDXC64 = 4;               /*    SUPPLIED XC OFFSET            @L2A*/ 11647400
* INDMVCLK64 = 8;            /*   MVCL IN USERS KEY OFFSET       @L2A*/ 11648200
* INDCDS64  = 12;            /*   COMPARE DOUBLE & SWAP INDEX    @L2A*/ 11649000
* INDUSR641 = 16;            /*    USER64 ROUTINE 1 OFFSET       @L3C*/ 11657500
* INDUSR642 = 20;            /*    USER64 ROUTINE 2 OFFSET       @L3C*/ 11666000
* INDUSR643 = 24;            /*    USER64 ROUTINE 3 OFFSET       @L3C*/ 11674500
* INDUSR644 = 28;            /*    USER64 ROUTINE 4 OFFSET       @L3C*/ 11683000
*                                                                       11691600
* RC = 0;                    /* NO ERRORS FOR THIS INVOCATION.       */ 11700000
* DATDOCMT = '?DATOFF '||MACLIST||' '||MACKEYS||' MACDATE(11/11/98)';   11750000
*                            /* THE MACRO INVOCATION             @02C*/ 11800000
* IF MACLIST(1) = ''         /* MACLIST ARGUMENT SUPPLIED?           */ 11850000
*   THEN DO;                 /* NO  -                                */ 11900000
*     RC = 12;               /*       INDICATE SEVERE ERROR.         */ 11950000
*     ANS MSG('AHA002 INDEX PARAMETER IS REQUIRED '||                   12000000
*             'BUT IS NOT SUPPLIED.  NO TEXT IS GENERATED.'); /* @01C*/ 12050000
*     ANS (COMMENT(DATDOCMT)) COL(6); /* WRITE INVOCATION IN SOURCE  */ 12100000
*     ANS ('/* AHA002 INDEX PARAMETER IS REQUIRED BUT IS NOT '          12150000
*          ||'SUPPLIED. NO TEXT IS GENERATED. */') COL(6);              12200000
*     GOTO DAT09999;         /*       EXIT MACRO                     */ 12250000
*   END;                     /* END - MACLIST NOT SUPPLIED.          */ 12300000
* IF NUMBER(MACLIST) > 1     /* TOO MANY MACLIST ARGUMENTS?          */ 12350000
*   THEN DO;                 /* YES -                                */ 12400000
*     RC = 4;                /*       WARNING LEVEL ERROR.           */ 12450000
*     ANS MSG('AHA0031 THE MACLIST '||QUOTE(MACLIST)||                  12487500
*             ' IS TOO LONG. ARGUMENTS ARE IGNORED AFTER '||            12525000
*             QUOTE(MACLIST(1))||'.'); /*                        @01C*/ 12562500
*     ANS (COMMENT(DATDOCMT)) COL(6); /* WRITE INVOCATION IN SOURCE  */ 12600000
*     ANS ('/* AHA0031 THE MACLIST '||QUOTE(MACLIST)                    12650000
*          ||' IS TOO LONG. ARGUMENTS ARE IGNORED AFTER '               12700000
*          ||QUOTE(MACLIST(1))||'. */') COL(6);                         12750000
*   END;                     /* END - TOO MANY MACLIST ARGUMENTS.    */ 12800000
*                            /* MAKE A STRING OF THE MACRO CALL      */ 12850000
*                                                                       12900000
*/* AT THIS POINT, THE REQUIRED PARAMETERS ARE PRESENT. THE MACRO    */ 12950000
*/* CHECKS THAT THE INDEX PARAMETER IS AMONG THE VALID SET. IF SO,   */ 13000000
*/* THE MACRO CODE IS GENERATED; OTHERWISE THE MACRO IS EXITED WITH  */ 13050000
*/* A RETURN CODE OF 12.                                             */ 13100000
*                                                                       13150000
* OFFSET = INDMVCL0;             /* USE OFFSET FOR INDMVCL0          */ 13200000
* IF MACLIST(1)='INDMVCL0' THEN  /* INDEX = 'INDMVCL0'?              */ 13250000
*    GOTO DOFF100;               /*   YES - GENERATE CODE            */ 13300000
* OFFSET = INDXC0;               /* USE OFFSET FOR INDXC0            */ 13350000
* IF MACLIST(1)='INDXC0' THEN    /* INDEX = 'INDXC0'?                */ 13400000
*    GOTO DOFF100;               /*   YES - GENERATE CODE            */ 13450000
* OFFSET = INDUSR1;              /* USE OFFSET FOR INDUSR1           */ 13500000
* IF MACLIST(1)='INDUSR1' THEN   /* INDEX = 'INDUSR1'?               */ 13550000
*    GOTO DOFF100;               /*   YES - GENERATE CODE            */ 13600000
* OFFSET = INDUSR2;              /* USE OFFSET FOR INDUSR2           */ 13650000
* IF MACLIST(1)='INDUSR2' THEN   /* INDEX = 'INDUSR2'?               */ 13700000
*    GOTO DOFF100;               /*   YES - GENERATE CODE            */ 13750000
* OFFSET = INDUSR3;              /* USE OFFSET FOR INDUSR3           */ 13800000
* IF MACLIST(1)='INDUSR3' THEN   /* INDEX = 'INDUSR3'?               */ 13850000
*    GOTO DOFF100;               /*   YES - GENERATE CODE            */ 13900000
* OFFSET = INDUSR4;              /* USE OFFSET FOR INDUSR4           */ 13950000
* IF MACLIST(1)='INDUSR4' THEN   /* INDEX = 'INDUSR4'?               */ 14000000
*    GOTO DOFF100;               /*   YES - GENERATE CODE            */ 14050000
* OFFSET = INDSWP;               /* USE OFFSET FOR INDSWP            */ 14100000
* IF MACLIST(1)='INDSWP' THEN    /* INDEX = 'INDSWP'?                */ 14150000
*    GOTO DOFF100;               /*   YES - GENERATE CODE            */ 14200000
* OFFSET = INDRESO;              /* USE OFFSET FOR INDRESO           */ 14250000
* IF MACLIST(1)='INDRESO' THEN   /* INDEX = 'INDRESO'?               */ 14300000
*    GOTO DOFF100;               /*   YES - GENERATE CODE            */ 14350000
* IF MACLIST(1)='INDPOFF' THEN   /* INDEX = 'INDPOFF'?               */ 14450000
*    GOTO DOFF90;                /*   YES - NOT SUPPORTED        @D1C*/ 14500000
* OFFSET = INDRECON;             /* USE OFFSET FOR INDRECON          */ 14550000
* IF MACLIST(1)='INDRECON' THEN  /* INDEX = 'INDRECON'?              */ 14600000
*    GOTO DOFF90;                /*   YES - NOT SUPPORTED        @P2C*/ 14650000
* OFFSET = INDMBL;               /* USE OFFSET FOR INDMBL            */ 14700000
* IF MACLIST(1)='INDMBL' THEN    /* INDEX = 'INDMBL'?                */ 14727400
*    GOTO DOFF100;               /*   YES - GENERATE CODE            */ 14754800
* OFFSET = INDCBL;               /* USE OFFSET FOR INDCBL            */ 14782200
* IF MACLIST(1)='INDCBL'   THEN  /* INDEX = 'INDCBL'?                */ 14809600
*    GOTO DOFF100;               /*   YES - GENERATE CODE            */ 14837200
* OFFSET = INDMVCLK;             /* USE OFFSET FOR INDMVCLK          */ 14840400
* IF MACLIST(1)='INDMVCLK' THEN  /* INDEX = 'INDMVCLK'?              */ 14843600
*    GOTO DOFF100;               /*   YES - GENERATE CODE            */ 14846800
* OFFSET = INDCDS;               /* USE OFFSET FOR INDCDS        @L1A*/ 14847600
* IF MACLIST(1)='INDCDS'   THEN  /* INDEX = 'INDCDS'?            @L1A*/ 14848400
*    GOTO DOFF100;               /* YES - GENERATE CODE          @L1A*/ 14849200
* NEED64 = 'YES';                /* NEED AMODE=64 VERSION        @L2A*/ 14850300
* SETSSTRING = 'SETS(G64R02P,G64R03F,G64R04P,G64R05F)';     /*   @L2A*/ 14851400
* REFSSTRING = '';                                  /*           @L2A*/ 14852500
* OFFSET = INDMVCL64;            /* USE OFFSET FOR INDMVCL64     @L2A*/ 14853600
* IF MACLIST(1)='INDMVCL64' THEN /* INDEX = 'INDMVCL64'?         @L2A*/ 14854700
*    GOTO DOFF100;               /*   YES - GENERATE CODE        @L2A*/ 14855800
* OFFSET = INDXC64;              /* USE OFFSET FOR INDXC64       @L2A*/ 14856900
* SETSSTRING = 'SETS(G64R02P,G64R03F)';                     /*   @L2A*/ 14858000
* REFSSTRING = ' REFS(G64R04P)';                     /*          @L2A*/ 14859100
* IF MACLIST(1)='INDXC64' THEN   /* INDEX = 'INDXC64'?           @L2A*/ 14860200
*    GOTO DOFF100;               /*   YES - GENERATE CODE        @L2A*/ 14861300
* SETSSTRING = 'SETS(G64R02P,G64R03F,G64R04P,G64R05F)';     /*   @L2A*/ 14862400
* REFSSTRING = ' REFS(G64R06P)';                     /*          @L2A*/ 14863500
* OFFSET = INDMVCLK64;           /* USE OFFSET FOR INDMVCLK64    @L2A*/ 14864600
* IF MACLIST(1)='INDMVCLK64' THEN /* INDEX = 'INDMVCLK64'?       @L2A*/ 14865700
*    GOTO DOFF100;               /*   YES - GENERATE CODE        @L2A*/ 14866800
* OFFSET = INDCDS64;             /* USE OFFSET FOR INDCDS64      @L2A*/ 14867900
* SETSSTRING = 'SETS(G64R02P,G64R03F)';                     /*   @L2A*/ 14869000
* REFSSTRING = ' REFS(G64R04P,G64R05F,G64R06P)';     /*          @L2A*/ 14870100
* IF MACLIST(1)='INDCDS64' THEN  /* INDEX = 'INDCDS64'?          @L2A*/ 14871200
*    GOTO DOFF100;               /* YES - GENERATE CODE          @L2A*/ 14872300
* IF INDEX(EHAREGS64,'13P')=0 THEN /*                                */ 14873600
*    EHAREGS64=EHAREGS64||'13P';                                        14873700
* OFFSET = INDUSR641;            /* USE OFFSET FOR INDUSR641     @L2A*/ 14875900
* IF MACLIST(1)='INDUSR641' THEN /* INDEX = 'INDUSR641'?         @L2A*/ 14877600
*    GOTO DOFF100;               /*   YES - GENERATE CODE        @L2A*/ 14879300
* OFFSET = INDUSR642;            /* USE OFFSET FOR INDUSR642     @L2A*/ 14881000
* IF MACLIST(1)='INDUSR642' THEN /* INDEX = 'INDUSR642'?         @L2A*/ 14882700
*    GOTO DOFF100;               /*   YES - GENERATE CODE        @L2A*/ 14884400
* OFFSET = INDUSR643;            /* USE OFFSET FOR INDUSR643     @L2A*/ 14886100
* IF MACLIST(1)='INDUSR643' THEN /* INDEX = 'INDUSR643'?         @L2A*/ 14887800
*    GOTO DOFF100;               /*   YES - GENERATE CODE        @L2A*/ 14889500
* OFFSET = INDUSR644;            /* USE OFFSET FOR INDUSR644     @L2A*/ 14891200
* IF MACLIST(1)='INDUSR644' THEN /* INDEX = 'INDUSR644'?         @L2A*/ 14892900
*    GOTO DOFF100;               /*   YES - GENERATE CODE        @L2A*/ 14894600
*                                /* NONE OF THE ABOVE -              */ 14896300
*DOFF90:                         /* INDEX NO LONGER SUPPORTED    @D1A*/ 14898000
*     RC = 12;                   /* INDICATE SEVERE ERROR            */ 14900000
*     ANS MSG('AHA0001 '||QUOTE(MACLIST(1))||' IS NOT A VALID INDEX. NO 14950000
*TEXT IS GENERATED.');           /* ERROR MESSAGE                    */ 15000000
*     ANS (COMMENT(DATDOCMT)) COL(6); /* WRITE INVOCATION IN SOURCE  */ 15050000
*     ANS ('/* AHA001 '||QUOTE(MACLIST(1))||' IS NOT A VALID '          15100000
*          ||'INDEX. NO TEXT IS GENERATED. */') COL(6);                 15150000
*     GOTO DAT09999;             /* DON'T GENERATE CODE              */ 15200000
*DOFF100:                        /* SECTION TO GENERATE CODE         */ 15250000
* IF MACLABEL ^= ''              /* ANY LABELS SPECIFIED?            */ 15300000
*   THEN                         /* YES -                            */ 15350000
*     ANS(MACLABEL) COL(MACLMAR);/*   PUT IN LABEL                   */ 15400000
* ANS ('DO;'||COMMENT(DATDOCMT)) COL(MACCOL);                           15450000
* ANS ('RFY (GPR14P, GPR15P, GPR00P) RSTD;') COL(MACCOL+2);             15500000
* ANS ('GPR15P='||CHAR(OFFSET)||';'                                     15550000
*            ||COMMENT('GET DAT TABLE OFFSET')) COL(MACCOL+2);          15600000
* IF NEED64 ^= 'YES' THEN        /*                              @L2A*/ 15607500
* DO;                            /*                              @L2A*/ 15615000
*   ANS ('GPR14P=''80000000''X|(ADDR(PSADATLK)-ADDR(PSA));'             15622500
*            ||COMMENT('SET TARGET ADDRESS FOR BASSM'))                 15630000
*            COL(MACCOL+2);      /*                              @01A*/ 15645000
*   ANS ('GEN REFS(PSADATLK,PSA)') COL(MACCOL+2) SKIP(1); /*     @02C*/ 15660000
*   ANS (' (BASSM 0,14);'                                               15675000
*            ||COMMENT('CALL DATOFF LINKAGE ROUTINE')) COL(MACCOL+2)    15690000
*            SKIP(1);                                   /*       @02C*/ 15720000
* END;                           /*                              @L2A*/ 15720900
* ELSE DO;                       /* NEED64                       @L2A*/ 15721800
* IF INDEX(EHAREGS64,'02P')=0 THEN /*                                */ 15723600
*    EHAREGS64=EHAREGS64||'02P';                                        15724500
* IF INDEX(EHAREGS64,'03F')=0 THEN /*                                */ 15725400
*    EHAREGS64=EHAREGS64||'03F';                                        15726300
* IF INDEX(EHAREGS64,'04P')=0 THEN /*                                */ 15727200
*    EHAREGS64=EHAREGS64||'04P';                                        15728100
* IF INDEX(EHAREGS64,'05F')=0 THEN /*                                */ 15729000
*    EHAREGS64=EHAREGS64||'05F';                                        15729900
* IF INDEX(EHAREGS64,'06P')=0 THEN /*                                */ 15730800
*    EHAREGS64=EHAREGS64||'06P';                                        15731700
* IF INDEX(EHAREGS64,'14P')=0 THEN /*                                */ 15732000
*    EHAREGS64=EHAREGS64||'14P';                                        15732300
*   DCL SYSAM64 CHAR EXT;        /*                              @L2A*/ 15732600
*   ANS ('?SYSSTATE (TEST);') RESCAN;       /*                   @L2A*/ 15733500
*   IF SYSAM64 ^= 'YES' THEN                /*                   @L2A*/ 15734400
*   DO;                                     /*                   @L2A*/ 15735300
*     ANS MSG('?DATOFF --> '||MACLIST(1)||' REQUIRES AMODE 64. ' ||     15736200
*             'SYSSTATE AMODE64(YES) IS REQUIRED.') NORESCAN; /* @L2A*/ 15737100
*     RETURN CODE(8);                       /*                   @L2A*/ 15738000
*   END;                                    /*                   @L2A*/ 15738900
*   ANS ('G64R14P=ADDR(PSAXDATLK)-ADDR(THEPSAX)+1000X;'                 15739800
*            ||COMMENT('SET TARGET ADDRESS FOR BASR'))                  15740700
*            COL(MACCOL+2);      /*                              @L2A*/ 15741600
*   ANS ('GEN EXIT SEQFLOW ' ||                                         15742500
*       SETSSTRING || REFSSTRING )                                      15743400
*            COL(MACCOL+2);      /*                              @L2A*/ 15744300
*   ANS (' (BASR  0,14);'                                               15745200
*            ||COMMENT('CALL DATOFF LINKAGE ROUTINE')) COL(MACCOL+2)    15746100
*            SKIP(1);                                   /*       @L2A*/ 15747000
* END;                           /* NEED64                       @L2A*/ 15747900
* ANS ('RFY (GPR14P, GPR15P, GPR00P) UNRSTD;') COL(MACCOL+2);           15750000
* ANS ('END;'||COMMENT(DATDOCMT)) COL(MACCOL);                          15800000
* IF INDEX(EHAREGS,'00P')=0 THEN /* ENSURE GPR00P IS IN EHAREGS      */ 15850000
*    EHAREGS=EHAREGS||'00P';                                            15900000
* IF INDEX(EHAREGS,'14P')=0 THEN /* ENSURE GPR14P IS IN EHAREGS      */ 15950000
*    EHAREGS=EHAREGS||'14P';                                            16000000
* IF INDEX(EHAREGS,'15P')=0 THEN /* ENSURE GPR15P IS IN EHAREGS      */ 16050000
*    EHAREGS=EHAREGS||'15P';                                            16100000
*DAT09999 :                      /* END OF MACRO:                    */ 16150000
* RETURN CODE(RC);               /* RETURN WITH RETURN CODE.         */ 16200000
* %END;                                                                 16250000
