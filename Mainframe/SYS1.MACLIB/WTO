* %/*                                                          @ZMC0828 00050000
         MACRO                                                          00250002
&NAME    WTO   &MESG,&MF=I,&ROUTCDE=,&DESC=,&MSGTYP=,&MCSFLAG=,&QID=,  X00280000
               &AREAID=,&SUBSMOD=,&CONNECT=^,&CONSID=^,&JOBID=^,       X00310000
               &JOBNAME=^,&KEY=^,&TOKEN=^,&PRTY=^,&SYSNAME=^,          X00340000
               &WQEBLK=^,&CONSNAME=^,&CART=^,&TEXT=^,&LINKAGE=^,       +00360000
               &SYNCH=^,&WSPARM=^                                  @01C 00380000
.***START OF SPECIFICATIONS******************************************** 00390500
.*                                                             @G64DPSS 00401064
.* MACRO NAME= WTO                                             @G860PSS 00401100
.*                                                             @G860PSS 00401200
.* DESCRIPTIVE NAME= WRITE TO OPERATOR (WTO)                   @G860PSS 00401500
.*                                                             @G860PSS 00401600
.* EXTERNAL CLASSIFICATION: GUPI                                        00401700
.* END OF EXTERNAL CLASSIFICATION:                                      00401800
.*                                                                      00401900
.**01* PROPRIETARY STATEMENT=                                         * 00402100
.* **PROPRIETARY_STATEMENT********************************************* 00402300
.*                                                                    * 00402500
.*                                                                    * 00402700
.*  LICENSED MATERIALS - PROPERTY OF IBM                              * 00402900
.*  THIS MACRO IS "RESTRICTED MATERIALS OF IBM"                       * 00403100
.*  5647-A01 (C) COPYRIGHT IBM CORP. 1981, 1999                       * 00403300
.*                                                                    * 00403500
.*  STATUS= JBB6607                                                   * 00403700
.*                                                                    * 00403900
.* **END_OF_PROPRIETARY_STATEMENT************************************** 00404100
.*                                                                      00404800
.*                                                                      00406000
.* INVOCATION =                                                    @L2C 00406200
.*             SPECIFY:   WTO MESG,ROUTCDE=,DESC=,MSGTYP=,     @G64DPSS 00406400
.*                            MCSFLAG=,QID=,AREAID=,MF=,           @L2C 00406700
.*                            CONNECT=,CONSID=,JOBID=,             @D2C 00406800
.*                            PRTY=,KEY=,TOKEN=,SYSNAME=,          @L2A 00406900
.*                            SUBSMOD=,JOBNAME=,                   @01C 00407000
.*                            CONSNAME=,CART=,TEXT=,LINKAGE=,      @L6C 00407100
.*                            SYNCH=,WSPARM=                       @L6A 00407200
.*                                                                      00407300
.*                                     OR                          @L2A 00407400
.*                                                                      00407500
.*                        WTO WQEBLK=                              @L2A 00407600
.*                                                                      00407700
.*              WHERE:                                         @G64DPSS 00408264
.*                MESG     THE MESSAGE TEXT FOR A SINGLE OR    @G64DPSS 00409164
.*                         MULTIPLE LINE MESSAGE TO BE         @G64DPSS 00410064
.*                         WRITTEN.                            @G64DPSS 00410964
.*                ROUTCDE= ROUTING CODES TO BE ASSIGNED TO THE @G64DPSS 00411864
.*                         MESSAGE.                            @G64DPSS 00412764
.*                                                             @G64DPSS 00413664
.*                DESC=    DESCRIPTOR CODES TO BE ASSIGNED TO  @G64DPSS 00414564
.*                         THE MESSAGE.                        @G64DPSS 00415464
.*                                                             @G64DPSS 00416364
.*                MSGTYP=  SPECIFIES HOW THE MESSAGE IS TO BE  @G64DPSS 00417264
.*                         ROUTED. VALID VALUES ARE:           @G64DPSS 00418164
.*                           N, Y, SESS, JOBNAMES, STATUS      @G64DPSS 00419400
.*                                                             @G64DPSS 00420864
.*                MCSFLAG= SPECIFIES ATTRIBUTES OF THE         @G64DPSS 00421764
.*                         MESSAGE. VALID VALUES ARE:          @G64DPSS 00422664
.*                           REG0, RESP, REPLY, BRDCST,        @G64DPSS 00423500
.*                           HRDCPY, QREG0, NOTIME, CMD, NOCPY,    @L2C 00424100
.*                           BUSYEXIT                              @D2C 00424700
.*                                                             @G64DPSS 00425364
.*                QID=     REMOTE ENTRY SERVICES (RSS) QUEUE   @G64DPSS 00426264
.*                         ID (OS/VS1 ONLY).                   @G64DPSS 00427164
.*                                                             @G64DPSS 00428064
.*                AREAID=  SPECIFIES A DISPLAY AREA ON THE     @G64DPSS 00428964
.*                         CONSOLE WHERE THE MESSAGE IS TO BE  @G64DPSS 00429864
.*                         WRITTEN.                            @G64DPSS 00430764
.*                                                             @G64DPSS 00431664
.*                MF=      SPECIFIES THE TYPE OF EXPANSION     @G64DPSS 00432564
.*                         REQUIRED. VALID VALUES ARE:         @G64DPSS 00433464
.*                           I, L, E                           @G64DPSS 00434300
.*                         IF NOT SPECIFIED, OR SPECIFIED WITHOUT  @L2A 00434500
.*                         DATA, STANDARD FORM (I-INLINE)          @L2A 00434700
.*                         ASSUMED.                                @L2A 00434900
.*                                                             @G64DPSS 00435264
.*                CONNECT= SPECIFIES THE 4-BYTE MESSAGE NUMBER     @L2A 00435300
.*                         OF THE MULTI-LINE WTO THAT THIS         @L2A 00435400
.*                         WTO IS TO BE CONNECTED TO.  IF A        @L2A 00435500
.*                         REGISTER IS USED, THE REGISTER          @L2A 00435600
.*                         CONTAINS THE MESSAGE NUMBER.  THIS      @L2A 00435700
.*                         KEYWORD IS MUTUALLY EXCLUSIVE WITH      @L2A 00435800
.*                         THE CONSID, CONSNAME AND                @01C 00435900
.*                         SYSNAME KEYWORDS.                       @L2A 00436000
.*                         ONLY VALID FOR CONTINUATION OF          @L2A 00436100
.*                         MULTI-LINE MESSAGES.                    @L2A 00436200
.*                                                                      00436300
.*                CONSID=  SPECIFIES THE 4-BYTE ID OF THE          @L2A 00436400
.*                         CONSOLE TO RECEIVE A MESSAGE.           @L2A 00436500
.*                         IF A REGISTER IS USED, THE REGISTER     @L2A 00436600
.*                         CONTAINS THE 4-BYTE ID.                 @L2A 00436700
.*                         THIS KEYWORD IS MUTUALLY EXCLUSIVE      @L2A 00436800
.*                         WITH THE CONNECT AND CONSNAME KEYWORD.  @L3C 00436900
.*                                                                      00437000
.*              CONSNAME=  SPECIFIES THE 8-BYTE NAME OF THE        @L3A 00437100
.*                         CONSOLE TO RECEIVE A MESSAGE.           @L3A 00437200
.*                         IF A REGISTER IS USED, THE REGISTER     @L3A 00437300
.*                         CONTAINS THE ADDRESS OF THE 8-BYTE      @L3A 00437400
.*                         CONSOLE NAME.                           @L3A 00437500
.*                         THIS KEYWORD IS MUTUALLY EXCLUSIVE      @L3A 00437600
.*                         WITH THE CONNECT AND CONSID KEYWORD.    @POC 00437700
.*                                                                      00437800
.*                JOBID=   SPECIFIES THE 8-BYTE ID WITH WHICH      @L2A 00437900
.*                         THE JES IDENTIFIES THE ISSUER OF        @L2A 00438000
.*                         THIS WTO.  THE KEYWORD IS FOR USE BY    @L2A 00438100
.*                         JES2 AND JES3.  IF A REGISTER IS USED,  @L2A 00438200
.*                         THE REGISTER CONTAINS THE ADDRESS OF    @L2A 00438300
.*                         THE 8-BYTE ID.                          @L2A 00438400
.*                                                                      00438500
.*                JOBNAME= SPECIFIES THE 8-BYTE NAME WITH WHICH    @L2A 00438600
.*                         THE JES IDENTIFIES THE ISSUER OF        @L2A 00438700
.*                         THIS WTO.  THE KEYWORD IS FOR USE BY    @L2A 00438800
.*                         JES2 AND JES3.  IF A REGISTER IS USED   @L2A 00438900
.*                         THE REGISTER CONTAINS THE ADDRESS OF    @L2A 00439000
.*                         THE 8-BYTE NAME.                        @L2A 00439100
.*                                                                      00439200
.*                SUBSMOD= INDICATES WHETHER THE CHARACTERISTICS   @L2A 00440100
.*                         OF THE MESSAGE ISSUED MAY BE CHANGED    @L2A 00440200
.*                         BY THE PRIMARY SUBSYSTEM.               @L2A 00440300
.*                         THE VALID VALUES ARE:                   @L2A 00440400
.*                                  YES - THIS IS THE DEFAULT      @L2A 00440500
.*                                  NO                             @L2A 00440600
.*                                                                      00440700
.*                PRTY=    SPECIFIES THE 2-BYTE PRIORITY TO BE     @L2A 00440800
.*                         ASSIGNED TO THIS MESSAGE. IF A          @L2A 00440900
.*                         REGISTER IS USED, THE 2 RIGHTMOST       @L2A 00441000
.*                         BYTES OF THE REGISTER CONTAIN THE       @L2A 00441100
.*                         2-BYTE VALUE.                           @L2A 00441200
.*                                                                      00441300
.*                KEY=     SPECIFIES AN 8-BYTE KEY TO BE           @L2A 00441400
.*                         ASSOCIATED WITH THIS MESSAGE.  IF A     @L2A 00441500
.*                         REGISTER IS USED, THE REGISTER          @L2A 00441600
.*                         SPECIFIES THE ADDRESS OF THE 8-BYTE     @L2A 00441700
.*                         KEY.                                    @L2A 00441800
.*                                                                      00441900
.*                TOKEN=   SPECIFIES A 4-BYTE TOKEN TO BE          @L2A 00442000
.*                         ASSOCIATED WITH THIS MESSAGE.  THE      @L2A 00442100
.*                         FIELD IS USED TO IDENTIFY A GROUP       @L2A 00442200
.*                         OF MESSAGES THAT CAN BE DELETED BY      @L2A 00442300
.*                         TOKEN.  THE TOKEN SHOULD BE UNIQUE      @L2A 00442400
.*                         WITHIN AN ADDRESS SPACE. IF A REGISTER  @L2A 00442500
.*                         IS USED, THE REGISTER CONTAINS THE      @L2A 00442600
.*                         4-BYTE VALUE.                           @L2A 00442700
.*                                                                      00442800
.*                SYSNAME= SPECIFIES AN 8-BYTE SYSTEM NAME TO BE   @L2A 00442900
.*                         ASSIGNED TO THIS MESSAGE.  IT IS THE    @L2A 00443000
.*                         SYSTEM NAME OF WHERE THIS WTO           @L2A 00443100
.*                         ORIGINATED.  IF A REGISTER IS           @L2A 00443200
.*                         USED, THE REGISTER CONTAINS THE         @L2A 00443300
.*                         ADDRESS OF THE 8-BYTE NAME. THIS        @L2A 00443400
.*                         KEYWORD IS MUTUALLY EXCLUSIVE WITH      @L2A 00443500
.*                         THE CONNECT KEYWORD.                    @L2A 00443600
.*                                                                      00444600
.*                CART=    SPECIFIES THE 4-BYTE ADDRESS OF AN      @L4A 00444700
.*                         EIGHT BYTE COMMAND AND RESPONSE TOKEN   @L4A 00444800
.*                         TO BE ASSOCIATED WITH THIS MESSAGE. THE @L4A 00444900
.*                         CART IS USED TO ASSOCIATE A WTO         @L4A 00445000
.*                         RESPONSE WITH THE ORIGINATING COMMAND.  @L4A 00445100
.*                         IF A REGISTER IS USED, THE REGISTER     @L4A 00445200
.*                         CONTAINS THE 4-BYTE ADDRESS VALUE.      @L4A 00445300
.*                         IF AN 8-BYTE FIELD IS USED, THE ADDRESS @L4A 00445400
.*                         OF THE FIELD IS STORED IN THE WPL.      @L4A 00445500
.*                                                                      00445600
.*                TEXT=    SPECIFIES A DATA AREA                   @PEA 00445700
.*                         CONTAINING A 2 BYTE MESSAGE LENGTH      @L5A 00445800
.*                         FIELD FOLLOWED BY THE ACTUAL MESSAGE    @L5A 00445900
.*                         TEXT. IF A REGISTER IS USED, THE        @L5A 00446000
.*                         REGISTER CONTAINS THE ADDRESS OF THE    @L5A 00446100
.*                         DATA AREA. IF A FIELD IS USED, THE      @L5A 00446200
.*                         ADDRESS OF THE FIELD IS STORED IN       @L5A 00446300
.*                         THE WPL. THE TEXT KEYWORD IS            @L5A 00446400
.*                         MUTUALLY EXCLUSIVE WITH INLINE          @L5A 00446500
.*                         MESSAGE TEXT. EITHER TEXT OR INLINE     @L5A 00446600
.*                         TEXT (BUT NOT BOTH) IS REQUIRED ON      @L5A 00446700
.*                         THE STANDARD OR LIST FORM OF WTO.       @L5A 00446800
.*                                                                 @L5A 00446900
.*                WQEBLK=  SPECIFIES A WQE CONTROL BLOCK TO BE     @L2A 00447000
.*                         USED AS INPUT FOR THE WTO.  IF A        @L2A 00447100
.*                         REGISTER IS USED, THE REGISTER          @L2A 00447200
.*                         SPECIFIES THE ADDRESS OF THE WQE        @L2A 00447300
.*                         CONTROL BLOCK TO BE USED AS INPUT TO    @L2A 00447400
.*                         THE WTO.  THIS KEYWORD IS MUTUALLY      @L2A 00447500
.*                         EXCLUSIVE WITH ALL OTHER KEYWORDS.      @L2A 00447600
.*                         THIS KEYWORD IS ONLY VALID ON THE       @L2A 00447700
.*                         STANDARD FORM (MF=I) OF THE MACRO.      @L2A 00447800
.*                         STANDARD FORM OF THE MACRO.             @L2A 00447900
.*                                                                      00448000
.*               LINKAGE=  SPECIFIES HOW CONTROL IS TO PASS TO THE @L6A 00448100
.*                         WTO FUNCTION.                           @L6A 00448200
.*                         THE VALID VALUES ARE-                   @L6A 00448300
.*                              BRANCH                             @L6A 00448400
.*                              SVC - THIS IS THE DEFAULT          @L6A 00448500
.*                                                                      00448600
.*                 SYNCH=  SPECIFIES WHETHER THE WTO REQUEST IS TO @L6A 00448700
.*                         BE PROCESSED SYNCHRONOUSLY WITH RESPECT @L6A 00448800
.*                         TO THE CALLER.  "SYNCH=YES" IS MUTUALLY @L6A 00448900
.*                         EXCLUSIVE WITH THE CONNECT, AREAID,     @L6A 00449000
.*                         KEYWORDS AND WITH "MCSFLAG=HRDCPY"      @L6A 00449100
.*                         THE VALID VALUES ARE-                   @L6A 00449200
.*                              YES                                @L6A 00449300
.*                              NO  - THIS IS THE DEFAULT          @L6A 00449400
.*                                                                      00449500
.*                WSPARM=  SPECIFIES WHETHER A WAIT STATE IS       @L6A 00449600
.*                         ASSOCIATED WITH THE MESSAGE. IF NO      @L6A 00449700
.*                         WAIT STATE IS ASSOCIATED WITH THE       @L6A 00449800
.*                         MESSAGE THE VALUE WILL BE 0 (THE        @L6A 00449900
.*                         DEFAULT).  IF A NON-ZERO VALUE IS       @L6A 00450000
.*                         SPECIFIED THEN IT IS EITHER THE         @L6A 00450100
.*                         ADDRESS OF THE WAIT STATE PARAMETER     @L6A 00450200
.*                         LIST OR A REGISTER CONTAINING A         @L6A 00450300
.*                         POINTER TO THE PARAMETER LIST.          @L6A 00450400
.*                         WSPARM REQUIRES SYNCH=YES.              @L6A 00450500
.*                                                                      00450600
.*                                                                      00450700
.* FUNCTION =                                                      @L2C 00450800
.*      BUILDS A WRITE TO OPERATOR PARAMETER LIST              @G64DPSS 00450900
.*      (WPL) AND/OR THE CODE WHICH WILL INVOKE SVC 35         @G64DPSS 00451000
.*      OR A BRANCH ENTRY WTO TO ISSUE THE MESSAGE.                @L6C 00451100
.*                                                             @G64DPSS 00451200
.* OPERATION =                                                     @L2A 00451300
.*      - PERFORM APPROPRIATE PARAMETER LIST GENERATION IF         @L2A 00451400
.*           WQEBLK KEYWORD IS SPECIFIED                           @L2A 00451500
.*      - IF EXECUTE FORM SPECIFIED, INSERT RUN-TIME KEYWORD       @L2A 00451600
.*           VALUES INTO THE ALREADY-EXISTING PARAMETER LIST       @L2A 00451700
.*      - IF NO NEW OR CHANGED KEYWORDS SPECIFIED, GENERATE        @L2A 00451800
.*           STANDARD FORM OF THE WPL                              @L2A 00451900
.*      - GENERATE AN EXTENDED FORMAT WPL (WPX) WHEN ANY           @L2A 00452000
.*           NEW OR CHANGED KEYWORDS ARE SPECIFIED.                @L2A 00452100
.*      - IF THIS IS A MULTI-LINE WTO, GENERATE THE MULTI-LINE     @L2A 00452200
.*           SECTION OF THE WPL                                    @L2A 00452300
.*      - IF LINKAGE=BRANCH WAS SPECIFIED GENERATE CODE FOR BRANCH @L6A 00452400
.*           ENTRY TO IEAVBWTO.  OTHERWISE ISSUE THE SVC.          @L6A 00452500
.*                                                                      00452600
.* USAGE =                                                         @L2A 00452700
.*      ANY PROGRAM MAY USE THIS MACRO TO BUILD THE WTO            @L2A 00452800
.*      PARAMETER LIST.  HOWEVER, WQEBLK, JOBID, SYSNAME,          @L2A 00452900
.*      JOBNAME, SUBSMOD, PRTY, LINKAGE, SYNCH, AND                @01C 00453000
.*      WSPARM ARE FOR CONTROL PROGRAM USE ONLY.                   @L6C 00453100
.*                                                                      00453200
.* RESTRICTIONS =                                                  @PFA 00453300
.*                                                                 @PFA 00453600
.*    "LINKAGE" SPECIFIED AS OR DEFAULTED TO "SVC" REQUIRES        @PFA 00453700
.*      THE CALLER TO:                                             @PFA 00453800
.*      - BE IN TASK MODE                                          @PFA 00453900
.*      - HOLD NO LOCKS                                            @PFA 00454000
.*      - BE ENABLED FOR INTERRUPTS                                @PFA 00454100
.*      - BE IN PRIMARY ASC MODE                                   @PFA 00454200
.*      - BE IN NON-CROSS-MEMORY MODE                              @PFA 00454300
.*      - "AUTHORIZED" PARAMETERS REQUIRE SUPERVISOR STATE,        @PFA 00454400
.*         PROTECT KEY 0-7.                                        @PFA 00454500
.*                                                                 @PFA 00454600
.*    "LINKAGE=BRANCH" CAN BE USED-                                @PFA 00454700
.*      WHEN IN SRB MODE-                                          @PFA 00454800
.*        A WTO ISSUED FROM SRB MODE WILL NOT HAVE A JOBNAME OR    @PFA 00454900
.*        JOBID ASSOCIATED WITH IT.                                @PFA 00455000
.*        IT WILL NOT BE AUTOMATICALLY DOM'D WHEN THE TASK ENDS.   @PFA 00455100
.*      WHEN DISABLED FOR INTERRUPTS-                              @PFA 00455200
.*        WTO PARAMETER LIST AND ALL STORAGE ADDRESSED BY IT       @PFA 00455300
.*        MUST BE IN FIXED OR DREF STORAGE.                        @PFA 00455400
.*      WHEN LOCKS HELD                                            @PFA 00455500
.*      WHEN THE PRIMARY ADDRESS SPACE IS NOT THE SAME AS          @PFA 00455600
.*      THE HOME ADDRESS SPACE-                                    @PFA 00455700
.*        CALLER MUST BE IN PRIMARY ASC MODE.                      @PFA 00455800
.*                                                                 @PFA 00455900
.*    IF "LINKAGE=BRANCH" IS SPECIFIED-                            @PFA 00456000
.*        WQEBLK KEYWORD CANNOT BE SPECIFIED, ABEND IF ATTEMPTED   @PFA 00456100
.*        MESSAGE TEXT MAY NOT CONTAIN DBCS DATA.                  @PFA 00456200
.*        CALLER MUST BE IN SUPERVISOR STATE, PROTECT KEY 0-7.     @PFA 00456300
.*        CALLER MUST BE IN PRIMARY ASC MODE.                      @PFA 00456400
.*                                                                 @PFA 00456500
.*    IF "WSPARM" IS SPECIFIED AS NONZERO-                         @PFA 00456600
.*        "LINKAGE=BRANCH" RESTRICTIONS APPLY, PLUS                @PFA 00456700
.*         ALL INPUT STORAGE MUST BE FIXED. (WTO PARAMETER         @PFA 00456800
.*         LIST AND ANY STORAGE ADDRESSESED BY IT, SUCH AS         @PFA 00456900
.*         TEXT DATA OR CART, PLUS THE LOADWAIT PARAMETER          @PFA 00457000
.*         LIST POINTED TO BY WSPARM).                             @PFA 00457100
.*                                                                      00457200
.* DEPENDENCIES =                                                  @L2A 00457300
.*      - LIST AND EXECUTE FORM MUST REFERENCE THE SAME VERSION    @L2A 00457400
.*           OF THE PARAMETER LIST (WPL)                           @L2A 00457500
.*      - THE LENGTH OF THE WPX IS MAINTAINED IN A ONE BYTE FIELD  @L5A 00457600
.*        WITHIN THE WPX. WHENEVER THE LENGTH OF THE WPX CHANGES   @L5A 00457700
.*        THIS FIELD MUST BE UPDATED.                              @L5A 00457800
.*                                                                      00457900
.* MODULE TYPE = MACRO                                             @L2A 00458000
.*                                                                      00458100
.* ENTRY POINT = N/A                                               @L2A 00458200
.*                                                                      00458300
.* INPUT = SEE INVOCATION                                          @L2A 00458400
.*                                                                      00458500
.* OUTPUT =                                                        @L2A 00458600
.*      PARAMETER LIST TO ISSUE SVC 35 OR BALR AND/OR THE          @L6C 00458700
.*      INSTRUCTIONS REQUIRED TO MODIFY THE PARAMETER              @L2A 00458800
.*      LIST AND ISSUE SVC 35 OR BALR TO IEAVBWGL.                 @L6A 00458900
.*                                                                      00459000
.* EXIT, NORMAL                                                    @L2A 00459100
.*   CONDITION - NO ERRORS DETECTED BY THE WTO MACRO               @L2A 00459200
.*   OUTPUT    - NO MNOTE ISSUED. SEVERITY CODE = 0                @L2A 00459300
.*                                                                      00459400
.* EXIT, NORMAL                                                    @L2A 00459500
.*   CONDITION - INFORMATIONAL MNOTE CONDITION DETECTED BY THE     @L2A 00459600
.*                 WTO MACRO                                       @L2A 00459700
.*   OUTPUT    - MNOTE WITH SEVERITY CODE 0 ISSUED WHEN:           @L6C 00459800
.*                .DATA IS SPECIFIED FOR A RUN-TIME KEYWORD ON A   @L6C 00459900
.*                 LIST FORM INVOCATION. THE DATA IS IGNORED.      @L2A 00460000
.*                .LINE TYPE DATA IS SPECIFIED WITH THE TEXT       @PKA 00460100
.*                 KEYWORD ON AN EXECUTE FORM INVOCATION.          @PKA 00460200
.*                 THE LINE TYPE DATA IS IGNORED.                  @PKA 00460300
.*                .A LINE OF INLINE TEXT IS LONGER THAN THE        @PMM 00460400
.*                   DOCUMENTED ALLOWED MAXIMUM LENGTH.            @PMM 00460500
.*                                                                      00460600
.* EXIT, NORMAL                                                    @L2A 00460700
.*   CONDITION - WARNING CONDITION DETECTED BY THE WTO MACRO       @L2A 00460800
.*   OUTPUT    - MNOTE WITH SEVERITY CODE 4 ISSUED WHEN:           @L2A 00460900
.*                .A RUN-TIME KEYWORD IS SPECIFIED WITHOUT DATA    @L2A 00461000
.*                   DURING A STANDARD OR EXECUTE FORM INVOCATION. @L2A 00461100
.*                   THE KEYWORD IS IGNORED.                       @L2A 00461200
.*                .AN INVALID ROUTING CODE IS SPECIFIED            @L2A 00461300
.*                .AN INVALID RANGE OF ROUTING CODES IS SPECIFIED  @L2A 00461400
.*                .RESERVED ROUTING CODES (29-40) ARE          @YA10057 00461500
.*                   SPECIFIED                                 @YA10057 00461600
.*                .AN INVALID SUBSMOD KEYWORD VALUE IS SPECIFIED   @L2A 00461700
.*                .THE BUSYEXIT PARAMETER IS USED ON A WTOR        @L2A 00461800
.*                .AN INVALID DESCRIPTOR CODE IS SPECIFIED         @L2A 00461900
.*                .INVALID OR MUTUALLY EXCLUSIVE MCSFLAG           @L2A 00462000
.*                   VALUES ARE SPECIFIED                          @L2A 00462100
.*                .AN INVALID MSGTYPE VALUE IS SPECIFIED           @L2A 00462200
.*                .AN INVALID QID VALUE IS SPECIFIED               @L2A 00462300
.*                .MORE THAN ONE ARGUMENT CODED WITH EITHER THE    @L6A 00462400
.*                   LINKAGE, SYNCH, OR WSPARM KEYWORDS.           @L6A 00462500
.*                                                                      00462600
.* EXIT, ERROR                                                     @L2A 00462700
.*   CONDITION - TERMINATING ERROR CONDITION DETECTED BY           @L2A 00462800
.*                 THE WTO MACRO                                   @L2A 00462900
.*   OUTPUT    - MNOTE WITH SEVERITY CODE 12 ISSUED WHEN:          @L2A 00463000
.*                .THE WQEBLK KEYWORD IS SPECIFIED ALONG WITH      @L2A 00463100
.*                   OTHER KEYWORDS                                @L2A 00463200
.*                .THE CONNECT KEYWORD IS SPECIFIED ALONG WITH     @L2A 00463300
.*                   EITHER THE SYSNAME, CONSID OR                 @01C 00463400
.*                   CONSNAME.                                     @L3A 00463500
.*                .THE CONSID KEYWORD IS SPECIFIED ALONG WITH      @L3A 00463600
.*                   THE CONSNAME KEYWORD.                         @L3A 00463700
.*                .THE CONNECT KEYWORD IS SPECIFIED ON A           @L2A 00463800
.*                   SINGLE-LINE WTO                               @L2A 00463900
.*                .THE NUMBER OF TEXT LINES REQUESTED IS EITHER    @L2A 00464000
.*                   ZERO OR GREATER THAN 255                      @L2A 00464100
.*                .THE TEXT KEYWORD IS SPECIFIED ALONG WITH        @L5A 00464200
.*                   INLINE MESSAGE TEXT.                          @L5A 00464300
.*                .SYNCH=YES WITH MORE THAN 14 LINES OF TEXT.      @L6A 00464400
.*                .SYNCH=YES SPECIFIED ALONG WITH CONNECT OR       @L6A 00464500
.*                   AREAID KEYWORDS.                              @L6A 00464600
.*                .SYNCH=YES SPECIFIED WITH MCSFLAG=HRDCPY         @L6A 00464700
.*                .SYNCH=YES SPECIFIED WITHOUT LINKAGE=BRANCH      @L6A 00464800
.*                     ON STANDARD OR EXECUTE FORM.                @P9A 00464900
.*                .WSPARM ^= 0 SPECIFIED WITHOUT SYNCH=YES         @P9C 00465000
.*                     OR  WITHOUT LINKAGE=BRANCH ON STANDARD      @P9C 00465100
.*                     OR EXECUTE FORM.                            @P9A 00465200
.*                                                                      00465300
.* EXTERNAL REFERENCES = N/A                                       @L2A 00465400
.*                                                                      00465500
.* TABLES = N/A                                                    @L2A 00465600
.*                                                                      00465700
.* MACROS =                                                        @L2A 00465800
.*      THE PARAMETER LIST GENERATED BY THIS MACRO IS MAPPED       @L2A 00465900
.*      BY THE MACRO IEZWPL. HOWEVER, IEZWPL IS NOT REQUIRED       @L2A 00466000
.*      TO USE THIS MACRO.                                         @L2A 00466100
.*                                                                      00466200
.* CHANGE ACTIVITY =                                           @G64DPSS 00466300
.*              G64DPSS,OZ43167,G860PSS,ZMC0828                @ZMC0828 00466400
.* $D1=DCR7,     JBB2110, 820831, PDSJ: MULTILINE WTP SUPPORT           00466500
.* $L1=MRRHCLOG, JBB2125, 830608, PDF8: HARDCOPY LOG FORMAT             00466600
.* $L2=COEXWTO1, JBB2220, 841101, PDF9: JES3/MCS COEXISTENCE            00466700
.* $P1=PA20104,  JBB2220, 850220, PDF9: JES3/MCS COEXISTENCE            00466800
.* $P2=PA20116,  JBB2220, 850220, PDF9: JES3/MCS COEXISTENCE            00466900
.* $P3=PA21155,  JBB2220, 860910, PDF9: JES3/MCS COEXISTENCE            00467000
.* $P4=PA21240,  JBB2220, 861008, PDF9: JES3/MCS COEXISTENCE            00467100
.*                      YA10057                                         00467200
.*              YA11509 - NO CODE CHANGES.                              00467300
.*              YA17152 - REDEFINE COMMON ACRONYMS OF GLOBAL DECLARES   00467400
.* $L3=CNMG2,    HBB4410, 870424, PDR3: CONSOLE MERGE STAGE II          00467500
.* $P5=PEO0005,  HBB4410, 850424, PDR3: CONSOLE MERGE STAGE II          00467600
.* $L4=TSOOP,    HBB4410, 870622, PDBU: TSO OPERATOR                    00467700
.* $L5=KNWTO,    HBB4410, 870916, PDCM: KANJI/WTO                       00467800
.* $P6=PEO0021,  HBB4410, 880120, PDBU: CONSOLE MERGE STAGE II          00467900
.* $P7=PEO0158,  HBB4410, 880210, PDBU: CONSOLE MERGE STAGE II          00468000
.* $P8=PEO0133,  HBB4410, 880420, PDF9: TSO OPERATOR                    00468100
.* $L6=CNITGDHE, HBB4410, 890313, PDHE: CONSOLE INTEGRATION             00468200
.* $P9=PH25014,  HBB4410, 890503, PDHD: CONSOLE INTEGRATION             00468300
.* $PA=PH25015,  HBB4410, 890503, PDHD: CONSOLE INTEGRATION             00468400
.* $PB=PH25016,  HBB4410, 890503, PDHD: CONSOLE INTEGRATION             00468500
.* $PC=PH25022,  HBB4410, 890503, PDHD: CONSOLE INTEGRATION             00468600
.* $D2=DEO0124,  HBB4410, 890421, PDCM: DCR 124                         00468700
.* $PE=PEO1712,  HBB4410, 890612, PDCM: TEXT PARAMETER DESCRIPTION      00468800
.* $D3=DEO0184,  HBB4410, 890619, PDHE: DCR 184                         00468900
.* $PF=PEO2883,  HBB4410, 891127, PDHE: ADD RESTRICTIONS TO PROLOG      00469000
.* $PG=PEO3063,  HBB4410, 900105, PDF9: ADD MAX TEXT LENGTH CHECKS      00469100
.* $PH=PEO3503,  HBB4410, 900306, PDHK: ADD MAX TEXT LENGTH CHECKS      00469200
.* $PI=PEO3640,  HBB4410, 900306, PDCY: ALLOW NULL VALUE FOR THE TEXT   00469300
.*                                      KEYWORD FOR LIST FORM OF MACRO  00469400
.* $PJ=PEO3823,  HBB4410, 900330, PDHD: DOWNWARD COMPATABILITY          00469500
.* $PK=PEO3824,  HBB4410, 900330, PDHD: WARN FOR LINE TYPE/EXEC FORM    00469600
.* $PL=PEO3650,  HBB4410, 900330, PDBT: TEXT KWRD WITH NULL END-LINE    00469700
.* $PM=PEO4290,  HBB4410, 900504, PDHE: CHANGE MNOTE SEVERITY           00469800
.* $PN=PEO4497,  HBB4410, 900612, PDHE: CHANGE MNOTE SEVERITY           00469900
.* $01=OY37350,  HBB4410, 901019, PDHE: PEO4845 REMOVE UNSUPPORTED      00470000
.*                                      PARAMETER SUPPORT               00470100
.* $02=OY41569,  HBB4410, 900404, PDBU: DON'T SET ROUTECODE 2 AS A      00470200
.*                                      DEFAULT WHEN ONLY MSGTYP IS     00470300
.*                                      SPECIFIED                       00470400
.* $03=OY49988,  HBB4410, 911206, PDCI: AVOID LABEL NOT FOUND MESSAGE   00470500
.* $04=OY53863,  HBB4410, 920501, PDHE: MNOTE BEING ISSUED INCORRECTLY  00470600
.* $05=OY60714,  HBB4410, 930127, PDCI: WRONG VERSION OF WPX GENERATED  00470700
.*                                      IF BUSYEXIT SPECIFIED WITH      00470800
.*                                      NEW VERSION 4 KEYWORDS          00470900
.* $06=OW07261,  HBB4430, 940831, PDEV: Support TEXT=(L,DE)             00471000
.* $PO=PQC0074,  HBB6603, 950210, PDCM: CONSNAME Doc                    00471100
.* $PP=PQC1061,  HBB6603, 960831, PDCI: ASCB                            00471200
.* $PQ=PWA0021,  JBB6607, 980413, PDHD: TEXT keyword, FIN of OW30888    00471300
.* $07=OW33655,  HBB6601, 980630, PDHD: Invalid assembly errors         00471400
.***END OF SPECIFICATIONS********************************************** 00471500
.*                                                                      00471600
.* MESSAGES (MNOTES) =                                             @L2A 00471700
.*   - SEVERITY 0 MNOTES:                                          @L2A 00471800
.*      - 'KKKKKKKK' DATA IGNORED ON THE LIST FORM OF WTO.         @L2A 00471900
.*           WHERE 'KKKKKKKK' MAY BE CONNECT, CONSID, KEY,         @L2A 00472000
.*           JOBNAME, JOBID, PRTY, TOKEN, SYSNAME,                 @01C 00472100
.*           CONSNAME, CART, TEXT, LINKAGE OR WSPARM.              @L6C 00472200
.*      - INLINE TEXT EXCEEDS ALLOWED MAXIMUM. TEXT LINE           @PMM 00472300
.*             (NUMBER N) HAS BEEN TRUNCATED.                      @PMM 00472400
.*           WHERE 'NUMBER N' APPLIES TO THE LINE NUMBER ON A      @PMM 00472500
.*           MULTI LINE MESSAGE                                    @PMM 00472600
.*                                                                      00472700
.*   - SEVERITY 4 MNOTES:                                          @L2A 00472800
.*      - RESERVED ROUTING CODE(S) 29-40 IGNORED.              @YA10057 00472900
.*      - INVALID RANGE OF ROUTING CODES IGNORED.                  @L2A 00473000
.*      - SUBSMOD=YES ASSUMED. SPECIFIED SUBSMOD VALUE             @L2A 00473100
.*          WAS NOT YES OR NO.                                     @L2A 00473200
.*      - MCSFLAG=BUSYEXIT IGNORED.  NOT VALID ON WTOR.            @L2A 00473300
.*      - 'KKKKKKKK' KEYWORD IGNORED. NO VALUE SPECIFIED.          @L2A 00473400
.*           WHERE 'KKKKKKKK' MAY BE WQEBLK, CONNECT, CONSID,      @L2A 00473500
.*           JOBID, JOBNAME, PRTY, KEY, TOKEN, SYSNAME,            @01C 00473600
.*           CONSNAME, CART, TEXT OR WSPARM.                       @L6C 00473700
.*      - LINKAGE IS TOO LONG.  ARGUMENTS ARE IGNORED AFTER XXXXX. @L6A 00473800
.*      - SYNCH IS TOO LONG.  ARGUMENTS ARE IGNORED AFTER XXXXXXX. @L6A 00473900
.*      - WSPARM IS TOO LONG.  ARGUMENTS ARE IGNORED AFTER XXXXXX. @L6A 00474000
.*      - ROUTCDE  N  IS AN INVALID ROUTING CODE. IT IS IGNORED.   @L2A 00474100
.*      - DESC  N  IS AN INVALID DESCRIPTOR CODE. IT IS IGNORED.   @L2A 00474200
.*      - MSGTYP FIELD INVALID. N IS ASSUMED                       @L2A 00474300
.*      - MCSFLAG= &MCSFLAG(&I) IS INVALID. IT IS IGNORED.         @L2A 00474400
.*      - HRDCPY AND NOCPY MUTUALLY EXCLUSIVE. MCSFLAG=HRDCPY      @L2A 00474500
.*          ASSUMED.                                               @L2A 00474600
.*      - QID FIELD IS INVALID. ZERO ASSUMED.                      @L2A 00474700
.*                                                                      00474800
.*   - SEVERITY 12 MNOTES:                                         @L2A 00474900
.*      - NO TEXT GENERATED. 'WQEBLK' IS MUTUALLY EXCLUSIVE        @L2A 00475000
.*          WITH ALL OTHER KEYWORDS.                               @L2A 00475100
.*      - NO TEXT GENERATED. 'CONNECT' IS MUTUALLY EXCLUSIVE       @L3C 00475200
.*          WITH THE CONSID, SYSNAME, AND CONSNAME KEYWORDS.       @01C 00475300
.*      - NO TEXT GENERATED. 'CONSID' IS MUTUALLY EXCLUSIVE        @L3A 00475400
.*          WITH THE CONSNAME KEYWORD.                                  00475500
.*      - NO TEXT GENERATED. 'CONNECT' IS MUTUALLY EXCLUSIVE       @L2A 00475600
.*          WITH SINGLE LINE WTO.                                  @L2A 00475700
.*      - NUMBER OF LINES REQUESTED IS 0 OR GREATER THAN 255 -     @L2A 00475800
.*          GENERATION TERMINATED                                  @L2A 00475900
.*      - NO TEXT GENERATED. INLINE TEXT IS MUTUALLY EXCLUSIVE     @L5A 00476000
.*          WITH 'TEXT'.                                           @L5A 00476100
.*      - NO TEXT GENERATED.  TOO MANY LINES OF TEXT.              @L6A 00476200
.*          MAX=## WHEN SYNCH=YES.                                 @L6A 00476300
.*             WHERE ## IS THE VALUE ASSIGNED TO THE VARIABLE      @L6A 00476400
.*               MAXLINS                                           @L6A 00476500
.*      - NO TEXT GENERATED. 'SYNCH=YES'                           @L6A 00476600
.*          REQUIRES 'LINKAGE=BRANCH'.                             @L6A 00476700
.*      - NO TEXT GENERATED. 'SYNCH=YES' IS MUTUALLY EXCLUSIVE     @L6A 00476800
.*          WITH THE CONNECT AND AREAID KEYWORDS.                  @L6A 00476900
.*      - NO TEXT GENERATED. 'SYNCH=YES' IS MUTUALLY EXCLUSIVE     @L6A 00477000
.*          WITH 'MCSFLAG=HRDCPY'.                                 @L6A 00477100
.*      - NO TEXT GENERATED. 'WSPARM ^= 0' REQUIRES                @L6A 00477200
.*          'LINKAGE=BRANCH' AND 'SYNCH=YES'.                      @L6A 00477300
.*      - NO TEXT GENERATED. SPECIFIED LINKAGE VALUE WAS NOT       @L6A 00477400
.*          SVC OR BRANCH.                                         @L6A 00477500
.*      - NO TEXT GENERATED. SPECIFIED SYNCH VALUE WAS NOT         @L6A 00477600
.*          YES OR NO.                                             @L6A 00477700
.*      - NO TEXT GENERATED. SPECIFIED WSPARM VALUE WAS NOT        @L6A 00477800
.*          0, A REGISTER, OR AN ADDRESS.                          @L6A 00477900
.*                                                                      00478000
.* NOTES      = THIS MACRO IS INVOKED BY THE WTOR AND WTL      @G860PSS 00478100
.*              MACROS TO GENERATE SOME SECTIONS OF THEIR      @G860PSS 00478200
.*              PARAMETER LISTS.                               @G860PSS 00478300
.*                                                             @G860PSS 00478400
.*              THE WPL IS GENERATED BY THIS MACRO IN DIFFERENT    @L2A 00478500
.*              FORMATS DEPENDING ON THE KEYWORDS PROVIDED.        @L2A 00478600
.*              A STANDARD WPL IS GENERATED IF ONLY THE            @L2A 00478700
.*              FOLLOWING KEYWORDS ARE SPECIFIED: ROUTCDE(1-16),   @L2A 00478800
.*              DESC, MCSFLAG, MSGTYPE, QID, AREAID.               @L2A 00478900
.*              IF ANY OTHER KEYWORDS ARE SPECIFIED, A DIFFERENT   @L2A 00479000
.*              STRUCTURE (WPX - MAPPED BY IEZWPL) IS BUILT        @L2A 00479100
.*              FOLLOWING THE MESSAGE TEXT. FOR A MULTI-LINE       @L2A 00479200
.*              WTO, THE MINOR LINES FOLLOW THE WPX.               @L2A 00479300
.*                                                                      00479400
.*              IN ORDER TO SUPPORT ASSEMBLER F, THIS MACRO        @P4A 00479500
.*              MUST BE STRUCTURED SUCH THAT THERE ARE NO          @P4A 00479600
.*              INSTRUCTIONS MORE THAN 3 LINES IN LENGTH.          @P4A 00479700
.*                                                                      00479800
.*              THE LENGTH OF THE WPX IS SPECIFIED WITHIN THE      @LAA 00479900
.*              WPX. WHENEVER THE LENGTH OF THE WPX CHANGES,       @LAA 00480000
.*              THE VALUE OF THIS FIELD MUST ALSO CHANGE. THE      @LAA 00480100
.*              VERSION ID OF THE WPL CAN BE USED TO DETERMINE     @LAA 00480200
.*              THE METHOD TO USE TO ESTABLISH THE LENGTH OF       @LAA 00480300
.*              THE WPX.                                           @LAA 00480400
.*                                                                      00480500
.*              IF LINKAGE=BRANCH IS SPECIFIED THE CONTENTS OF     @L6A 00480600
.*              REGISTER 14 WILL BE DESTROYED.                     @L6A 00480700
.*                                                                      00480800
.********************************************************************** 00480900
.* C THE TEXT LENGTH FIELD FOR WTORS IS NOW ONE BYTE INSTEAD   @G860PSS 00481000
.*   OF TWO                                                    @G860PSS 00481100
.* C MAKE THE PL/S VERSION WORK                                @ZMC0828 00481200
.* A TEST FOR MVS SP LEVEL WHEN BUILDING PARM LIST             @G860PSS 00481300
.* C ALLOW MULTILINE HARDCOPY ONLY WTO                             @D1A 00481400
.* A 'CMD' MCSFLAG FOR OPERATOR COMMANDS                           @L1A 00481500
.* A MODIFY THE MACRO TO PROCESS WQEBLK, 128 ROUTING CODES,        @L2A 00481600
.*   CONSID, JOBID, KEY, TOKEN, SYSNAME, DOMID, JOBNAME,           @L2A 00481700
.*   MPF, SUBSMOD, PRTY, CONNECT AND MCSFLAG=BUSYEXIT              @L2A 00481800
.* C GENERATE WPX 4-BYTE FIELDS ON A BYTE BOUNDARY RATHER THAN     @P1A 00481900
.*   ON A FULLWORD BOUNDARY                                        @P1A 00482000
.* C ACCEPT WQEBLK FIELD NAMES CONTAINING THE PASSED WQE ITSELF    @P2A 00482100
.*   RATHER THAN THE ADDRESS OF THE PASSED WQE                     @P2A 00482200
.* C LIMIT MAX INSTRUCTION LENGTH TO 3 LINES TO SUPPORT ASM F      @P3A 00482300
.* C REFIX PA21155 SO WPX IS ALWAYS CORRECTLY GENERATED            @P4A 00482400
.* C ALLOW ROUTING CODE 41 TO BE SPECIFIED                     @YA10057 00482500
.* NO CODE CHANGES. REASSEM FOR PTF PACKAGING PROBLEM          @YA11509 00482600
.* C REDEFINE GLOBAL NAMES &LEN , &MCS , &WTOLEN   UNIQUELY    @YA17152 00482700
.* A MODIFY THE MACRO TO PROCESS THE CONSNAME AND REPLY CONSOLE    @L3A 00482800
.*   NAME ADDRESS(WTOR)                                            @L3A 00482900
.* C CONSNAME PARAMETER CORRECTED                                  @P5A 00483000
.* A MODIFY THE MACRO TO PROCESS CART                              @D2C 00483100
.* A MODIFY THE MACRO TO ACCEPT THE TEXT KEYWORD                   @L5A 00483200
.* C FIXED REPLY ADDRESS AND ECB ADDRESS ON WTOR STANDARD FORM     @P6A 00483300
.* C PUT BACK CODE TO INITIALIZE REPLY/ECB ADDRESS FOR WTOR        @P7A 00483400
.* C CHANGE GENERATED CODE FOR TEXT KEYWORD ON MULTI-LINE WTO      @P8A 00483500
.* C MODIFY THE MACRO TO PROCESS LINKAGE, SYNCH, AND  WSPARM       @L6A 00483600
.*   KEYWORDS                                                      @L6A 00483700
.* C ALLOW LINKAGE AND WSPARM TO BE NULL ON LIST FORM              @P9A 00483800
.* C UPDATE SYNCH=NO ON EXECUTE FORM                               @PAA 00483900
.* C INITIALIZE WSPARM WITH REAL VALUE ON INLINE FORM              @PBA 00484000
.* C DO NOT GENERATE A WPX FOR SYNCH=NO ON STANDARD FORM           @PCA 00484100
.* C DCR 124 - REMOVE UNIMPLEMENTED FUNCTION                       @D2A 00484200
.* C DOCUMENT RESTRICTIONS IN PROLOG                               @PFA 00484300
.* C ADD CHECKS FOR INLINE TEXT WHOSE LENGTHS EXCEED THE MAXIMUM   @PGA 00484400
.*   ALLOWED LENGTHS                                               @PGA 00484500
.* C ALLOW NULL VALUE FOR TEXT KEYWORD WHEN LIST FORM OF MACRO     @PIA 00484600
.*   IS SPECIFIED                                                  @PIA 00484700
.* C GENERATE VERSION 1 WPX IF NO NEW KYWDS USED                   @PJA 00484800
.* C ISSUE SEV 0 MNOTE FOR LINE TYPE DATA ON TEXT, EXEC FORM       @PKA 00484900
.* C ALWAYS GENERATE TEXT LENGTH OF 8 WHEN TEXT KEYWORD SPECIFIED  @PLA 00485000
.* C MNOTE SEVERITY FROM 4 TO 0 IN TRUNCATED LINES                 @PMA 00485100
.* C MISSED ONE MNOTE ON PREVIOUS CHANGE                           @PNA 00485200
.* C DON'T SET ROUTECODE 2 AS A DEFAULT IF ONLY MSGTYP SPECIFIED   @02A 00485300
.* C CHANGE LABEL MLWX09 TO MLW09                                  @03A 00485400
.* C TEXT KEYWORD ISSUANCE OF *LINE TYPE ON EXECUTE FORM IGNORED*  @04A 00485500
.*   MESSAGE ISSUED INCORRECTLY ON MULTILINE INVOCATIONS           @04A 00485600
.* C GENERATE VERSION 2 WPX WHEN BUSYEXIT IS SPECIFIED WITH NEW    @05A 00485700
.*   VERSION 4 KEYWORDS                                            @05A 00485800
.* C Support TEXT=(line,line-type).  The pubs document this as     @06A 00485900
.*   supported, but an assembler error occurs if it is coded.      @06A 00486000
.* C Correct mutually exclusive information for CONSNAME in prolog @POA 00486100
.* C Add ASCB parameter to PLAS version. Control program use only  @PPA 00486200
.* C Corrections when TEXT keyword, multiline, but only 1 line     @PQA 00486300
.*   and 1 set of parentheses. FIN of APAR OW30888.                @PQA 00486400
.* C Use the correct expression for the second number of a         @07A 00486500
.*   substring when looking at the ROUTCDE keyword.                @07A 00486600
.********************************************************************** 00486700
.*       GLOBAL DECLARATIONS                                            00486800
.********************************************************************** 00487400
         GBLA  &IHBLEN               MESSAGE LENGTH FIELD, WTO @YA17152 00488300
         GBLB  &IHBWTL               GLOBAL WTL INDICATOR               00489700
         GBLB  &IHBWTOR              GLOBAL WTOR INDICATOR              00503400
         GBLB  &IHBMCS               MCS FLAGS ARE TO BE SET   @YA17152 00505100
         GBLB  &SWM                  MSGTYPE FLAGS ARE TO BE SET   @L2A 00506800
         GBLB  &IWPXBIT              A WPX IS TO BE BUILT          @L2A 00508500
         GBLB  &IWQEBIT              A WQEBLK SETUP HAS OCCURRED   @L2A 00510200
         GBLB  &WTOERR               INDICATOR FOR WTOR THAT WTO       X00510400
                                     A TERMINATING MNOTE           @L2A 00510600
         GBLB  &RAREG                REPLY ADDRESS IN REGISTER BIT @L2A 00510800
         GBLB  &RLREG                REPLY LENGTH IN REGISTER BIT  @L2A 00511000
         GBLB  &EAREG                ECB ADDRESS IN REGISTER BIT   @L2A 00511200
         GBLB  &RCNREG               REPLY CONSOLE NAME/ID ADDRESS     X00511300
                                     IN REGISTER BIT               @L3A 00511400
         GBLB  &RCNSPEC              REPLY CONSOLE NAME/ID ADDRESS     X00511500
                                     KEYWORD SPECIFIED             @L3A 00511600
         GBLB  &MLW                  MULTI-LINE WTO SPECIFIED      @L6C 00511700
         GBLC  &IWPXVER              VERSION OF WPX TO BUILD       @PJA 00511800
         GBLC  &WTORYA               REPLY ADDRESS (WTOR)          @L2A 00511900
         GBLC  &WTOECB               ECB ADDRESS (WTOR)            @L2A 00513600
         GBLC  &WTOLENR              REPLY BUFFER LENGTH(WTOR) @YA17152 00515300
         GBLC  &WTORCN               REPLY CONSOLE NAME/ID ADDRESS @L3A 00516200
         GBLC  &SYSSPLV              SYSTEM PRODUCT LEVEL      @G860PSS 00517100
         GBLC  &CD(16)               DC FIELDS SAVEAREA            @L2A 00523900
         GBLC  &GNAME                LABEL NAME                    @L2A 00527300
         GBLC  &VALH                 INDIVIDUAL MINOR LINE ENTRY   @L5A 00528100
         GBLC  &VALH1                TEXT ADDRESS PORTION OF VALH  @L5A 00528900
         GBLC  &VALH2                LINE TYPE PORTION OF VALH     @L5A 00529700
.********************************************************************** 00530800
.*       LOCAL DECLARATIONS                                             00544500
.********************************************************************** 00558200
         LCLA  &H,&I,&N,&J           COUNTERS/SAVEAREAS            @L2C 00561100
         LCLA  &LLCNT                TOTAL NUMBER OF LINES IN MULTI-   X00564000
                                     LINE WTO                      @L2A 00566900
         LCLA  &RCLEN                ROUTING CODE ELEMENT LENGTH   @P3C 00568300
         LCLA  &I1                   ROUTING CODE ELEMENT COUNTER  @L2A 00569800
         LCLA  &K                    ROUTING CODE UPPER RANGE      @L2A 00572700
         LCLA  &MLINDX               WORKING NUMBER OF LINES IN MULTI- X00573200
                                     LINE WTO                      @L5A 00573700
         LCLA  &MLTTIND              OFFSET INTO MLWTO PARMLIST FOR    X00574200
                                     LINE TYPE INDICATORS          @L5A 00574700
         LCLB  &MISCFLG(8)           MISCELLANEOUS FLAGS SAVEAREA  @L2A 00575600
         LCLB  &EMCS(16)             EXTENDED MCSFLAGS SAVEAREA    @L2A 00578600
         LCLA  &LT(256)              LINE TYPE FLAGS FIELD       X02007 00583800
         LCLB  &NODFLT               DO NOT SET ROUTING CODE DEFAULT    00596600
         LCLB  &B(16),&AD,&E,&E1,&E2,&E3,&E4,&E5,&E6               @L2C 00605100
         LCLB  &RB(128)              ROUTING CODE BIT FIELD        @L2A 00613600
         LCLB  &RSVDMNT              BIT INDICATING RESERVED ROUTING   X00626700
                                     CODES WERE SPECIFIED          @L2A 00631200
         LCLB  &SECONDL              PROCESSED FIRST LINE OF MLWTO      00635700
         LCLC  &EM(2)                EXTENDED MCSFLAGS DC FIELD    @L2A 00680700
         LCLB  &PAIR                 DOUBLE CHAR FOUND IN TEXT   X02007 00686200
         LCLC  &DCFLGS               MISCELLANEOUS FLAGS DC FIELD  @L2A 00695300
         LCLC  &RNIBBLE              ROUTING CODE CONVERSION FIELD @L2A 00704400
         LCLC  &DCRC                 ROUTING CODE DC FIELD         @L2A 00713500
         LCLC  &CFLG(17)             VALUE TABLE                   @L2C 00722600
         LCLC  &LOW,&HIGH            ROUTING CODE RANGE VALUES     @L2A 00731700
         GBLC  &ILMEQU               INLINE MESSAGE TEXT VALUE     @L6A 00732800
         LCLC  &ILTEQU               INLINE LINETYPE VALUE         @L6A 00733900
         LCLA  &NUMML                COUNTER FOR TOTAL NUMBER OF LINES +00735000
                                     IN A MULTILINE MESSAGE        @L6A 00736100
         LCLA  &NUMARG               NUMBER OF ARGUMENTS IN AN INLINE  +00737200
                                     VALUE                         @L6A 00738300
         LCLA  &MAXLINS              MAXIMUM NUMBER OF LINES OF TEXT   +00739400
                                     ALLOWED WITH SYNCH=YES        @L6A 00740500
         LCLA  &MAXCLLN              MAXIMUM INLINE LENGTH OF A        +00740600
                                     CONTROL LINETYPE TEXT LINE    @PGA 00740700
         LCLA  &MAXMLLN              MAXIMUM INLINE LENGTH OF ANY      +00740800
                                     OTHER MULTI-LINE TEXT LINE    @PGA 00740900
         LCLA  &MAXSLLN              MAXIMUM LENGTH OF INLINE TEXT     +00741000
                                     ON A SINGLE LINE WTO          @PGA 00741100
         LCLA  &MAXSRLN              MAXIMUM LENGTH OF INLINE TEXT     +00741200
                                     ON A SINGLE LINE WTOR         @PGA 00741300
         LCLB  &SYNN                 SYNCH TO BE TURNED OFF        @PAA 00741600
         LCLB  &LTWARN               LINE TYPE WARNING ISSUED      @PKA 00742300
         ACTR  30000                 INITIALIZE LOOP INHIBITOR     @L2C 00743000
         AIF   (&IHBWTOR).LBL1      IF INVOKED BY WTOR, USE THE LABEL  X00754300
                                    GENERATED BY THE WTOR MACRO    @L2A 00765600
&GNAME   SETC  'IHB'.'&SYSNDX'      SET LABEL NAME                      00780600
.LBL1    ANOP                       LABEL NAME PROPERLY SET        @L2A 00795700
&IWPXBIT SETB  0                    INITIALIZE WPX INDICATOR       @L2A 00800000
&IWPXVER SETC  '1'                  INITIALIZE WPX VERSION         @PJC 00825000
&IWQEBIT SETB  0                    INITIALIZE WQEBLK INDICATOR    @L2A 00850000
&WTOERR  SETB  0                    INITIALIZE SEVERE MNOTE BIT    @L2A 00879100
&MAXLINS SETA  14                   MAXIMUM NUMBER OF LINES OF TEXT    +00888800
                                    ALLOWED WITH SYNCH=YES         @L6A 00898500
&MAXSLLN SETA  126                  MAXIMUM LENGTH OF INLINE TEXT      +00898600
                                    ON A SINGLE LINE WTO           @PHM 00898700
&MAXSRLN SETA  122                  MAXIMUM LENGTH OF INLINE TEXT      +00898800
                                    ON A SINGLE LINE WTOR          @PHM 00898900
         AIF   (&IHBWTOR).WTOROK    IF THIS WAS FROM WTOR, SET         +00899000
                                    MAXIMUM LINE LENGTHS TO ACCOUNT    +00899100
                                    FOR REPLY IDS                  @PHA 00899200
&MAXCLLN SETA  35                   MAXIMUM INLINE LENGTH OF A         +00899500
                                    CONTROL LINETYPE TEXT LINE     @PGA 00900500
&MAXMLLN SETA  71                   MAXIMUM INLINE LENGTH OF ANY       +00901500
                                    OTHER MULTI-LINE TEXT LINE     @PGA 00902500
         AGO   .WTORNO              NOT WTOR                       @PHA 00906600
.WTOROK  ANOP                       WTO CALLED FROM WTOR           @PHA 00906700
&MAXCLLN SETA  31                   MAXIMUM INLINE LENGTH OF A WTOR    +00906800
                                    CONTROL LINETYPE TEXT LINE     @PHA 00906900
&MAXMLLN SETA  67                   MAXIMUM INLINE LENGTH OF ANY       +00907000
                                    OTHER MULTI-LINE TEXT LINE     @PHA 00907100
.WTORNO  ANOP                       SKIP HERE IF NOT WTOR          @PHA 00907600
.********************************************************************** 00908300
.*                                                                 @L2A 00908400
.*       CHECK FOR SPECIFICATION OF THE WQEBLK KEYWORD.            @L2A 00908500
.*       IF SPECIFIED, VERIFY THAT NO OTHER KEYWORDS HAVE          @L2A 00908600
.*       BEEN SPECIFIED. THIS CHECK AUTOMATICALLY ENSURES          @L2A 00908700
.*       THAT THE STANDARD FORM IS BEING USED.                     @L2A 00908800
.*                                                                 @L2A 00908900
.********************************************************************** 00909000
         AIF   ('&WQEBLK' EQ '^').NOWQEB  IF NO WQEBLK, CHECK FOR      X00909100
                                          KEYWORD ERRORS           @L2A 00909200
         AIF   ('&MESG'    NE ''  OR  '&MF'      NE 'I' OR             X00909300
                '&ROUTCDE' NE ''  OR  '&DESC'    NE ''  OR             X00909400
                '&QID'     NE ''  OR  '&AREAID'  NE '').BADWQEB    @P4C 00909500
         AIF   ('&MSGTYP'  NE ''  OR  '&MCSFLAG' NE ''  OR             X00909600
                '&SUBSMOD' NE ''  OR                                   X00909700
                '&CONSID'  NE '^' OR  '&CONNECT' NE '^').BADWQEB   @D2C 00909800
         AIF   ('&JOBID'   NE '^' OR                                   X00909900
                '&JOBNAME' NE '^' OR  '&SYSNAME' NE '^' OR             X00910000
                '&PRTY'    NE '^' OR  '&KEY'     NE '^').BADWQEB   @01C 00910100
         AIF   ('&LINKAGE' NE '^' OR  '&SYNCH'   NE '^' OR             +00910200
                '&WSPARM'  NE '^').BADWQEB                         @L6A 00910300
         AIF   ('&TOKEN'   EQ '^' AND '&CONSNAME' EQ '^' AND           X00910400
                '&CART'    EQ '^' AND '&TEXT'    EQ '^').WQEONLY       X00910500
                                               WQEBLK SPECIFIED.   @L5C 00910600
.BADWQEB ANOP                           MUTUALLY EXCLUSIVE ERROR   @P4A 00910700
         MNOTE 12,'NO TEXT GENERATED. ''WQEBLK'' IS MUTUALLY EXCLUSIVE X00910800
               WITH ALL OTHER KEYWORDS.'                           @L2A 00910900
&WTOERR  SETB  1                        A SEVERE MNOTE WAS ISSUED  @L2A 00911000
         AGO   .END                     DONE WITH MACRO PROCESSING @L2A 00911100
.WQEONLY ANOP                           WQEBLK IS ONLY KEYWORD     @L2A 00911200
         AIF   ('&WQEBLK' NE '').WQEDATA VERIFY DATA SPECIFIED     @L2A 00911300
         MNOTE 12,'''WQEBLK'' KEYWORD IGNORED. NO VALUE SPECIFIED.'    X00911400
                                                                   @L2A 00911500
&WTOERR  SETB  1                        A SEVERE MNOTE WAS ISSUED  @L2A 00911600
         AGO   .END                     DONE WITH MACRO PROCESSING @L2A 00911700
.WQEDATA ANOP                           WQEBLK DATA SPECIFIED      @L2A 00911800
.********************************************************************** 00911900
.*                                                                 @L2A 00912000
.*       PUT WQEBLK INFORMATION INTO REGISTER 0.                   @L2A 00912100
.*                                                                 @L2A 00912200
.********************************************************************** 00912300
         AIF   ('&WQEBLK'(1,1) EQ '(').WBREG  BRANCH IF IN REG     @L2A 00912400
         LA    0,&WQEBLK(1)             PUT WQE ADDRESS INTO REG 0 @P2C 00912500
         AGO   .WBPLIST                 GO ISSUE SVC 35            @L2A 00912600
.WBREG   AIF   ('&WQEBLK'(2,1) EQ '0' OR                               X00912700
                '&WQEBLK'(2,2) EQ 'R0').WBPLIST SKIP LOAD IF ALREADY   X00912800
                                        IN REGISTER 0              @L2A 00912900
         LR    0,&WQEBLK(1)             PUT WQE ADDRESS INTO REG 0 @L2A 00913000
.* GENERATE THE PARAMETER LIST FOR A WQEBLK INVOCATION             @L2A 00913100
.* AND PUT THE ADDRESS OF THE PASSED WQE INTO REGISTER 0           @L2A 00913200
.WBPLIST ANOP                           GENERATE PLIST FOR WQEBLK  @L2A 00913300
         CNOP  0,4                      SET UP PARAMETER LIST      @L2A 00913400
&NAME    BAL   1,&GNAME.A                                          @L2A 00913500
         DC    AL2(4)                   MESSAGE LENGTH FIELD       @L2A 00913600
         DC    B'0000000000000010'      MCSFLAGS FIELD             @L2A 00913700
&IWQEBIT SETB  1                        INDICATE WQEBLK WAS SET    @L2A 00913800
&GNAME.A DS    0H                                                  @L2A 00913900
         AGO   .EXECUTE                 ISSUE SVC 35 OR BRANCH ENTRY   +00914000
                                        WTO                        @L6C 00914100
.********************************************************************** 00914200
.*                                                                 @L2A 00914300
.*       THE WQEBLK KEYWORD WAS NOT SPECIFIED.                     @L2A 00914400
.*       CHECK FOR THE FOLLOWING TERMINATING ERROR SITUATION:      @L2A 00914500
.*        - LINKAGE KEYWORD ISSUED WITH INVALID ARGUMENT           @L6A 00914600
.*                                                                 @L6A 00914700
.********************************************************************** 00914800
.NOWQEB  ANOP                     WQEBLK NOT SPECIFIED             @L6A 00914900
         AIF   ('&LINKAGE' EQ '^').CHKSYNC       LINKAGE NOT NAMED @L6A 00915000
         AIF   ('&MF(1)' EQ 'L' AND                                    +00915100
                '&LINKAGE' EQ '').CHKSYNC     NULL OK W/LIST FORM  @P9A 00915200
         AIF   ('&LINKAGE(1)' NE 'SVC' AND                             +00915300
                '&LINKAGE(1)' NE 'BRANCH').ERROR1  LINKAGE SPECIFIED   +00915400
                                                WITH INVALID VALUE @L6A 00915500
         AIF   (N'&LINKAGE LE 1 AND                                    +00915600
                N'&LINKAGE(1) LE 1).CHKSYNC     MORE THAN ONE OPERAND  +00915700
                                                  SPECIFIED?       @L6A 00915800
         MNOTE 4,'*** ''LINKAGE=&LINKAGE'' IS TOO LONG.'           @L6A 00915900
         MNOTE '    ARGUMENTS ARE IGNORED AFTER ''&LINKAGE(1)''.'  @L6A 00916000
.********************************************************************** 00916100
.*       CHECK FOR THE FOLLOWING TERMINATING ERROR SITUATIONS:     @L6A 00916200
.*        - SYNCH KEYWORD ISSUED WITH INVALID ARGUMENT             @L6A 00916300
.*        - SYNCH ARGUMENT YES WITHOUT REQUIRED LINKAGE=BRANCH     @L6A 00916400
.*                ON STANDARD OR EXECUTE FORM                      @P9A 00916500
.*        - SYNCH = YES MUTUALLY EXCLUSIVE WITH CONNECT, AREAID,   @L6A 00916600
.*           PRTY, AND WQEBLK KEYWORDS                             @L6A 00916700
.*        - SYNCH = YES MUTUALLY EXCLUSIVE WITH MCSFLAG=HRDCPY     @L6A 00916800
.********************************************************************** 00916900
.CHKSYNC ANOP                                                      @L6A 00917000
         AIF   ('&SYNCH' EQ '^').CHKWSPR       SYNCH NOT NAMED     @L6A 00917100
         AIF   ('&SYNCH(1)' NE 'YES' AND                               +00917200
                '&SYNCH(1)' NE 'NO').ERROR3    SYNCH SPECIFIED WITH    +00917300
                                               WITH INVALID VALUE  @L6A 00917400
         AIF   (N'&SYNCH LE 1 AND                                      +00917500
                N'&SYNCH(1) LE 1).CHKSYN1      MORE THAN ONE OPERAND   +00917600
                                               SPECIFIED?          @L6A 00917700
         MNOTE 4,'*** ''SYNCH=&SYNCH'' IS TOO LONG.'               @L6A 00917800
         MNOTE '    ARGUMENTS ARE IGNORED AFTER ''&SYNCH(1)''.'    @L6A 00917900
.CHKSYN1 ANOP                                                      @L6A 00918000
         AIF   ('&SYNCH(1)' EQ 'NO').CHKWSPR   IF SYNCH^=YES THEN SKIP +00918100
                                               LINKAGE AND MUTUALLY    +00918200
                                               EXCLUSIVE CHECKS    @L6A 00918300
         AIF   ('&LINKAGE(1)' NE 'BRANCH'  AND                         +00918400
                '&MF(1)' NE 'L').ERROR4        LINKAGE WRONG       @P9C 00918500
         AIF   ('&CONNECT' NE '^' OR '&AREAID' NE '').ERROR5           +00918600
                                               CHECK FOR MUTUALLY      +00918700
                                               EXCLUSIVE KEYWORDS  @L6A 00918800
.********************************************************************** 00918900
.*       CHECK FOR THE FOLLOWING TERMINATING ERROR SITUATIONS:     @L6A 00919000
.*        - WSPARM KEYWORD ISSUED WITHOUT AN ARGUMENT- INLINE FORM @PAC 00919100
.*        - WSPARM SPECIFIED WITH VALUE OTHER THAN 0 AND           @L6A 00919200
.*            SYNCH^='YES'                                         @L6A 00919300
.********************************************************************** 00919400
.CHKWSPR ANOP                                                      @L6A 00919500
         AIF   ('&WSPARM' EQ '^').CHKCONN      WSPARM NOT NAMED    @L6A 00919600
         AIF   ('&MF(1)' EQ 'L' AND                                    +00919700
                '&WSPARM' EQ '').CHKCONN      NULL OK W/LIST FORM  @P9A 00919800
         AIF   ('&MF(1)' EQ 'E' AND                                    +00919900
                '&WSPARM' EQ '').CHKCONN    EXEC FORM HAS OWN MSG  @PAC 00920000
         AIF   ('&WSPARM(1)' EQ '').ERROR7     WSPARM KEYWORD SPECIFIED+00920100
                                               WITHOUT AN ARGUMENT @L6A 00920200
         AIF   ('&WSPARM(1)' NE '0' AND '&SYNCH(1)' NE 'YES').ERROR8   +00920300
                                               TEST FOR REQUIRED KEY-  +00920400
                                               WORDS W/ WSPARM^=0  @L6A 00920500
         AIF   (N'&WSPARM LE 1 AND                                     +00920600
                N'&WSPARM(1) LE 1).CHKCONN     MORE THAN ONE OPERAND   +00920700
                                               SPECIFIED?          @L6A 00920800
         MNOTE 4,'*** ''WSPARM=&WSPARM'' IS TOO LONG.'             @L6A 00920900
         MNOTE '    ARGUMENTS ARE IGNORED AFTER ''&WSPARM(1)''.'   @L6A 00921000
.********************************************************************** 00921100
.*       CHECK FOR THE FOLLOWING TERMINATING ERROR SITUATION:      @L6A 00921200
.*        - CONNECT KEYWORD MUTUALLY EXCLUSIVE WITH THE SYSNAME,   @L2A 00921300
.*                    CONSID AND CONSNAME                          @01C 00921400
.*                                                                 @L2A 00921500
.********************************************************************** 00921600
.CHKCONN ANOP                     CHECK FOR CONNECT KEYWORD        @L6A 00921700
         AIF   ('&CONNECT' EQ '^').CONNOK BRANCH IF NO CONNECT     @L2A 00921800
         AIF   ('&CONSID' NE '^' OR '&SYSNAME' NE '^' ).BADCON     @01C 00921900
         AIF   ('&CONSNAME' EQ '^').TEXTK  VERIFY CONNECT NOT ISSUED   X00922100
                              WITH THESE KEYWORDS.. IF NO CONSNAME,    X00922200
                              SKIP OVER CONSNAME ERROR CHECK       @L5A 00922300
.BADCON  ANOP                                                      @L2A 00922400
         MNOTE 12,'NO TEXT GENERATED. ''CONNECT'' IS MUTUALLY EXCLUSIVEX00922500
               WITH THE CONSID, SYSNAME, AND CONSNAME KEYWORDS.'   @01C 00922600
&WTOERR  SETB  1                        A SEVERE MNOTE WAS ISSUED  @L2A 00922800
         AGO   .END                  TERMINATE MACRO PROCESSING    @L3C 00922900
.********************************************************************** 00923000
.*                                                                 @L3A 00923100
.*       THE CONNECT KEYWORD HAS NO ERRORS OR WAS NOT SPECIFIED    @L5C 00923200
.*       CHECK FOR THE FOLLOWING TERMINATING ERROR SITUATION:      @L3A 00923300
.*        - CONSID KEYWORD MUTUALLY EXCLUSIVE WITH THE CONSNAME    @L3A 00923400
.*                                                                 @L3A 00923500
.********************************************************************** 00923600
.CONNOK  ANOP                     NO CONNECT KEYWORD SPECIFIED     @L3A 00923700
         AIF   ('&CONSID' EQ '^').TEXTK  BRANCH IF NO CONSID       @L5C 00923800
         AIF   ('&CONSNAME' EQ '^').TEXTK    CONSID SPECIFIED. VERIFY  X00923900
                                          CONSNAME NOT SPECIFIED.  @L5C 00924000
         MNOTE 12,'NO TEXT GENERATED. ''CONSID'' IS MUTUALLY EXCLUSIVE X00924100
               WITH THE CONSNAME KEYWORD.'                         @L3A 00924200
&WTOERR  SETB  1                        A SEVERE MNOTE WAS ISSUED  @L3A 00924300
         AGO   .END                  TERMINATE MACRO PROCESSING    @L3A 00924400
.******************************************************************@L5A 00924500
.*                                                                 @L5A 00924600
.*       THE CONSID KEYWORD HAS NO ERRORS OR WAS NOT SPECIFIED.    @L5A 00924700
.*       CHECK FOR THE FOLLOWING TERMINATING ERROR SITUATIONS:     @L5A 00924800
.*       - TEXT KEYWORD MUTUALLY EXCLUSIVE WITH INLINE TEXT.       @L5A 00924900
.*                                                                 @L5A 00925000
.******************************************************************@L5A 00925100
.TEXTK   ANOP                        TEXT SPECIFIED                @L5A 00925200
.********************************************************************** 00925300
.*       IF BOTH TEXT AND INLINE TEXT ARE SPECIFIED, ISSUE AN      @L5A 00925400
.*       ERROR MESSAGE.                                            @L5A 00925500
.********************************************************************** 00925600
         AIF   ('&TEXT' EQ '^' OR '&MESG' EQ '').CHCKMF            @L5A 00925700
         MNOTE 12,'NO TEXT GENERATED. ''TEXT'' AND INLINE TEXT ARE MUTUX00925800
               ALLY EXCLUSIVE.'      ISSUE ERROR MESSAGE           @L5A 00925900
&WTOERR  SETB  1                     A SEVERE MNOTE WAS ISSUED     @L5A 00926000
         AGO   .END                  TERMINATE MACRO PROCESSING    @L5A 00926100
.CHCKMF  ANOP                        NO CONNECT/KEYWORDS ERROR     @L3A 00926200
         AIF   ('&TEXT' EQ '^').NOTTEXT   IF TEXT KEYWORD SPECIFIED,   X00926300
                                     USE IT FOR MLWTO CHECK        @L5A 00926400
&MLW     SETB  (N'&TEXT GT 1 OR N'&TEXT(1) GT 1) INDICATE IF THIS      X00926500
                                     IS A MULTI-LINE WTO           @PIC 00926600
         AIF   (&MLW EQ 0).NOTMLW    If not a multiline, move on   @PQA 00926700
         AIF   (N'&TEXT EQ 1).MLW1   If TEXT=textaddr , or,        @PQA 00926800
         AIF   (N'&TEXT EQ 2 AND N'&TEXT(2) LT 2).MLW1 If this is  @PQAX00926900
                                     TEXT=(textaddr,linetype)      @PQAX00927000
                                     then this has only one line   @PQA 00927100
&NUMML   SETA  N'&TEXT               Total number of lines         @PQA 00927200
         AGO   .NOTMLW                                             @PQA 00927300
.MLW1    ANOP                                                      @PQA 00927400
&NUMML   SETA  1                     This has one line of text     @PQA 00927500
.NOTMLW  ANOP                                                      @PQA 00927600
.NOTTEXT ANOP                        NO CONNECT/KEYWORDS ERROR     @L3A 00927700
         AIF    ('&MF' EQ 'I' OR '&MF' EQ 'L').NUMCHK  CHECK FOR LIST  X00927800
                                     OR STANDARD FORM              @L2C 00927900
.********************************************************************** 00928000
.*                                                                      00928100
.*       NEITHER LIST NOR STANDARD FORM SPECIFIED. VERIFY THIS IS       00928200
.*       EXECUTE FORM AND THAT IT WAS PROPERLY SPECIFIED.               00928300
.*                                                                      00928400
.********************************************************************** 00928800
         AIF   (N'&MF EQ 2 AND '&MF(1)' EQ 'E').EXVALID  VERIFY VALID  X00932900
                                     EXECUTE MF STRUCTURE USED     @L2C 00937000
.********************************************************************** 00941100
.*       ISSUE ERROR MESSAGE:                                  @G860PSS 00941600
.* 12,INVALID MF OPERAND SPECIFIED-MF                          @G860PSS 00942100
.********************************************************************** 00942600
         IHBERMAC 35,,&MF                                               00943100
         MEXIT                                                          00943600
.********************************************************************** 00944100
.*                                                             @G860PSS 00945200
.*       EXECUTE FORM VALIDLY SPECIFIED. CHECK FOR             @G860PSS 00949300
.*       SPECIFICATION OF RUN-TIME PARAMETERS. (AN EXECUTE FORM    @L2C 00951300
.*       INVOCATION CAN ONLY REPRESENT A WTO BECAUSE THE WTOR      @L2A 00953300
.*       MACRO DOES ITS OWN EXECUTE FORM PROCESSING.)              @L2A 00955300
.*                                                             @G860PSS 00957500
.********************************************************************** 00961600
.EXVALID ANOP                        EXECUTE FORM VALIDLY USED     @L2A 00963600
&NAME    IHBINNRA &MF(2)             SET UP PARAMETER LIST ADDRESS      00965700
.********************************************************************** 00969800
.*       ALL DONE IF WTL                                       @G860PSS 00975000
.********************************************************************** 00987500
         AIF   (&IHBWTL).END         IF WTL, GO TO END OF MACRO         01000000
.********************************************************************** 01012500
.*       CHECK FOR EXCESSIVE MULTIPLE LINES WITH SYNCH=YES.        @L6A 01012600
.*       THE MAXIMUM NUMBER OF LINES ALLOWED WHEN SYNCH=YES IS     @L6A 01012700
.*       DEFINED IN THE VARIABLE &MAXLINS                          @L6A 01012800
.********************************************************************** 01012900
         AIF   ('&SYNCH(1)' EQ 'YES' AND                               +01013000
                 N'&SYSLIST GT &MAXLINS).ERROR2     TOO MANY LINES FOR +01013100
                                                    SYNCH=YES      @L6A 01013200
         AIF   ('&SYNCH(1)' EQ 'YES' AND                               +01013300
                 N'&TEXT GT &MAXLINS).ERROR2        TOO MANY LINES FOR +01013400
                                                    SYNCH=YES      @L6A 01013500
.********************************************************************** 01013600
.*       IF THE TEXT KEYWORD IS SPECIFIED, INSERT THE KEYWORD      @L5A 01013700
.*       VALUE INTO THE PARAMETER LIST IN PLACE OF INLINE          @L5A 01013800
.*       MESSAGE TEXT.                                             @L5A 01013900
.********************************************************************** 01014000
.ETEXTID ANOP                           CHECK FOR TEXT                  01014100
         AIF   ('&TEXT' EQ '^').SETTEST SKIP DOWN IF NO TEXT       @L5A 01014300
         AIF   ('&TEXT' NE '').ETEXTDT  VERIFY DATA SPECIFIED      @L5A 01014600
         MNOTE 4,'''TEXT'' KEYWORD IGNORED. NO VALUE SPECIFIED.'   @L5A 01014900
         AGO   .SETTEST                 NO TEXT - SKIP DOWN        @L5A 01015200
.ETEXTDT ANOP                           TEXT KEYWORD SPECIFIED     @L5A 01015500
.********************************************************************** 01015800
.*       SET UP REGISTER 14 TO TEMPORARILY POINT TO MESSAGE TEXT   @L5A 01016100
.*       AREA IN PARAMETER LIST TO STORE TEXT VALUE.               @L5A 01016400
.********************************************************************** 01016700
&EMCS(9) SETB  1                        INDICATE IN EXT MCSFLAGS2  @L5A 01017000
         AIF   (&MLW).ETEXTR2           BRANCH IF MULTILINE        @PQM 01017200
         AIF   ('&TEXT'(1,1) EQ '(').ETEXTRG BRANCH IF IN REGISTER @L5A 01017600
         LA    15,&TEXT(1)              LOAD TEXT VALUE            @L5A 01017900
         ST    15,4(0,1)                STORE TEXT ADDR INTO PLIST @L5A 01018200
         AGO   .SETREG                  SET UP POINTER TO PARMLIST @L5A 01018500
.ETEXTRG ANOP                           TEXT ADDRESS IN REGISTER   @L5A 01018800
         ST    &TEXT(1),4(0,1)          STORE TEXT ADDR INTO PLIST @L5A 01019100
         AGO   .SETREG                  SET UP POINTER TO PARMLIST @L5A 01019400
.ETEXTR2 ANOP                           MULTILINE W/VALUE IN REG   @L5A 01019700
&VALH    SETC  '&TEXT(1)'               Extract line               @PQA 01019800
&VALH1   SETC  '&TEXT(1,1)'             EXTRACT FIRST LINE'S ADDR  @L5A 01020000
         AIF   ('&VALH1' EQ '').SETREG  BRANCH IF NULL ENTRY       @L5A 01020300
         AIF   (N'&TEXT EQ 2 AND N'&TEXT(2) LT 2).LN11 If this is  @PQAX01020400
                                     TEXT=(textaddr,linetype)      @PQAX01020500
                                     then look for only one paren  @PQAx01020600
                                     to indicate a register        @PQA 01020700
         AIF   ('&TEXT(1,2)' EQ '').ETEXTLA    LINE TYPE NOT SPEC. @PQA 01020800
         MNOTE 0,'LINE TYPE ON EXECUTE FORM IGNORED.'              @PQA 01020900
&LTWARN  SETB  1                        ISSUE WARNING ONCE ONLY    @PQA 01021000
.ETEXTLA ANOP                                                      @PQA 01021100
         AIF   ('&VALH'(1,2) NE '((').ETEXTR4 BRANCH NOT REGISTER  @PQA 01021200
&VALH1   SETC  '&TEXT(1,1,1)'           Strip the parens off the       X01021300
                                        register specification     @PQC 01021400
         AGO   .REGTXT                  Text is a register         @PQA 01021500
.LN11    ANOP                           If one line only, will be      X01021600
                                        one paren for register     @PQA 01021700
         AIF   ('&TEXT(2)' EQ '').ETEXTLB      LINE TYPE NOT SPEC. @PQA 01021800
         MNOTE 0,'LINE TYPE ON EXECUTE FORM IGNORED.'              @PQA 01021900
&LTWARN  SETB  1                        ISSUE WARNING ONCE ONLY    @PQA 01022000
.ETEXTLB ANOP                                                      @PQA 01022100
         AIF   ('&VALH'(1,1) NE '(').ETEXTR4  BRANCH NOT REGISTER  @PQA 01022200
.REGTXT   ANOP                          Text is a register         @PQA 01022300
         ST    &VALH1,4(0,1)            STORE TEXT ADDRESS         @L5A 01022400
         AGO   .SETREG                  SET UP POINTER TO PARMLIST @L5A 01022500
.ETEXTR4 ANOP                                                      @L5A 01022600
         LA    15,&VALH1                LOAD ADDR OF TEXT FIELD    @P8C 01022700
         ST    15,4(0,1)                STORE TEXT ADDR INTO PLIST @P8A 01022800
         AGO   .SETREG                  SET UP POINTER TO PARMLIST @L5A 01022900
.********************************************************************** 01023000
.*       IF ANY OTHER RUN-TIME WPX KEYWORDS WERE SPECIFIED,        @L5C 01023300
.*       SET REGISTER 14 TO POINT TO THE FIRST BYTE AFTER          @L2A 01024900
.*       THE MESSAGE TEXT FIELD.                                   @L2A 01031100
.********************************************************************** 01037500
.SETTEST ANOP                                                      @L5A 01054500
         AIF   ('&PRTY'    NE '^' OR  '&CONSID'  NE '^' OR             X01071500
                '&JOBID'   NE '^' OR  '&JOBNAME' NE '^' OR             X01105500
                '&KEY'     NE '^' OR  '&TOKEN'   NE '^').SETREG    @P4C 01139500
         AIF   ('&SYSNAME' NE '^' OR                                   X01159300
                '&CONNECT' NE '^').SETREG                          @01C 01179100
         AIF   ('&WSPARM'  NE '^' OR  '&SYNCH(1)' NE '^').SETREG   @PAC 01189000
         AIF   ('&CONSNAME' EQ '^' AND '&CART' EQ '^').CHEKQID         X01198900
                              IF NO RUN-TIME WPX KEYWORDS SPECIFIED,   X01218700
                               SKIP RIGHT TO SVC                   @L4C 01238500
.SETREG  ANOP                                                      @P4A 01258500
         LR    14,1                     FIRST BYTE OF PARM LIST    @L2A 01275500
         SR    15,15                    CLEAR REGISTER 15          @L2A 01309500
         AH    15,0(1,0)                ADD LENGTH OF TEXT + 4     @L2A 01343500
         AR    14,15                    FIRST BYTE AFTER TEXT      @L2A 01377500
.********************************************************************** 01412500
.*       IF THE PRTY KEYWORD IS SPECIFIED, INSERT IT INTO THE      @L2A 01420800
.*       PARAMETER LIST                                            @L2A 01429100
.********************************************************************** 01437500
         AIF   ('&PRTY' EQ '^').ECONS   SKIP DOWN IF NO PRTY       @L2A 01438300
         AIF   ('&PRTY' NE '').EPRTYDT    VERIFY DATA SPECIFIED    @L2A 01439100
         MNOTE 4,'''PRTY'' KEYWORD IGNORED. NO VALUE SPECIFIED.'   @L2A 01439900
         AGO   .ECONS                   GO CHECK CONSID            @L2A 01440700
.EPRTYDT ANOP                           DATA SPECIFIED             @L2A 01441500
&EMCS(6) SETB  1                        INDICATE IN EXT MCSFLAGS   @L2A 01442300
         AIF   ('&PRTY'(1,1) EQ '(').EPRTYRG BRANCH IF IN REG      @L2A 01443100
         MVC   42(2,14),&PRTY(1)        INSERT PRTY INTO PLIST     @L2A 01443900
         AGO   .ECONS                   GO CHECK CONSID            @L2A 01444700
.EPRTYRG STH   &PRTY(1),42(0,14)        INSERT PRTY INTO PLIST     @L2A 01445500
.********************************************************************** 01446300
.*       IF THE CONSID IS SPECIFIED, INSERT IT INTO THE            @L2A 01447100
.*       PARAMETER LIST                                            @L2A 01447900
.********************************************************************** 01448700
.ECONS   AIF   ('&CONSID' EQ '^').ECART   SKIP DOWN IF NO CONSID   @L4C 01449500
         AIF   ('&CONSID' NE '').ECONSDT  VERIFY DATA SPECIFIED    @L2A 01450300
         MNOTE 4,'''CONSID'' KEYWORD IGNORED. NO VALUE SPECIFIED.' @L2A 01451100
         AGO   .ECART                   GO CHECK CART              @L4C 01451900
.ECONSDT ANOP                           DATA SPECIFIED             @L2A 01452700
&EMCS(2) SETB  1                        INDICATE IN EXT MCSFLAGS   @L2A 01453500
         AIF   ('&CONSID'(1,1) EQ '(').ECONSRG  BRANCH IF IN REG   @L2A 01454300
         L     15,&CONSID(1)            LOAD CONSID                @L2A 01455100
         ST    15,72(0,14)              INSERT CONSID INTO PLIST   @L2A 01455900
         AGO   .ECART                   GO CHECK CART              @L4C 01456700
.ECONSRG ST    &CONSID(1),72(0,14)      INSERT CONSID INTO PLIST   @L2A 01457500
.********************************************************************** 01458300
.*       IF THE CART IS SPECIFIED, INSERT IT'S ADDRESS INTO THE    @L4A 01458400
.*       PARAMETER LIST                                            @L4A 01458500
.********************************************************************** 01458600
.ECART   AIF   ('&CART' EQ '^').ECNNAM    SKIP DOWN IF NO CART     @L4A 01458700
         AIF   ('&CART' NE '').ECARTDT    VERIFY DATA SPECIFIED    @L4A 01458800
         MNOTE 4,'''CART'' KEYWORD IGNORED. NO VALUE SPECIFIED.'   @L4A 01458900
         AGO   .ECNNAM                  GO CHECK CONSNAME          @L4A 01459000
.ECARTDT ANOP                           DATA SPECIFIED             @L4A 01459100
         AIF   ('&CART'(1,1) EQ '(').ECARTRG    BRANCH IF IN REG   @L4A 01459300
         LA    15,&CART(1)              LOAD CART ADDRESS          @L4A 01459400
         ST    15,96(0,14)              INSERT CART ADR INTO PLIST @L4A 01459500
         AGO   .ECNNAM                  GO CHECK CONSNAME          @L4A 01459600
.ECARTRG ST    &CART(1),96(0,14)        INSERT CART ADR INTO PLIST @L4A 01459700
.********************************************************************** 01459800
.*       IF THE CONSNAME IS SPECIFIED, INSERT IT INTO THE          @L3A 01459900
.*       PARAMETER LIST                                            @L3A 01460000
.********************************************************************** 01460100
.ECNNAM  AIF   ('&CONSNAME' EQ '^').EJOBID SKIP DOWN IF NO CONSNAME    X01460200
                                                                   @L3A 01460300
         AIF   ('&CONSNAME' NE '').ECNNADT VERIFY DATA SPECIFIED   @L3A 01460400
         MNOTE 4,'''CONSNAME'' KEYWORD IGNORED. NO VALUE SPECIFIED.'   X01460500
                                                                   @L3A 01460600
         AGO   .EJOBID                  GO CHECK KEY               @L3A 01460700
.ECNNADT ANOP                           DATA SPECIFIED             @L3A 01460800
&EMCS(7) SETB  1                                                   @L3A 01460900
         AIF   ('&CONSNAME'(1,1) EQ '(').ECNNARG BRANCH IF IN REG  @L3A 01461000
         MVC   84(8,14),&CONSNAME(1)    INSERT CONSNAME INTO PLIST @L3A 01461100
         AGO   .EJOBID                  GO CHECK KEY               @L3A 01461200
.ECNNARG MVC   84(8,14),0(&CONSNAME(1)) INSERT CONSNAME INTO PLIST @L3A 01461300
.********************************************************************** 01461400
.*       IF THE JOBID IS SPECIFIED, INSERT IT INTO THE             @L2A 01461500
.*       PARAMETER LIST                                            @L2A 01461600
.********************************************************************** 01461700
.EJOBID  AIF   ('&JOBID' EQ '^').EJOBN   SKIP DOWN IF NO JOBID     @L2A 01461800
         AIF   ('&JOBID' NE '').EJOBIDT  VERIFY DATA SPECIFIED     @L2A 01462300
         MNOTE 4,'''JOBID'' KEYWORD IGNORED. NO VALUE SPECIFIED.'  @L2A 01463100
         AGO   .EJOBN                   GO CHECK JOBNAME           @L2A 01463900
.EJOBIDT ANOP                           DATA SPECIFIED             @L2A 01464700
         AIF   ('&JOBID'(1,1) EQ '(').EJOBIRG  BRANCH IF IN REG    @L2A 01465500
         MVC   44(8,14),&JOBID(1)       INSERT JOBID INTO PLIST    @L2A 01466300
         AGO   .EJOBN                   GO CHECK JOBNAME           @L2A 01467100
.EJOBIRG MVC   44(8,14),0(&JOBID(1))    INSERT JOBID INTO PLIST    @L2A 01467900
.********************************************************************** 01468700
.*       IF THE JOBNAME IS SPECIFIED, INSERT IT INTO THE           @L2A 01469500
.*       PARAMETER LIST                                            @L2A 01470300
.********************************************************************** 01471100
.EJOBN   AIF   ('&JOBNAME' EQ '^').EKEY    SKIP DOWN IF NO JOBNAME @L2A 01471900
         AIF   ('&JOBNAME' NE '').EJOBNDT VERIFY DATA SPECIFIED    @L2A 01472700
         MNOTE 4,'''JOBNAME'' KEYWORD IGNORED. NO VALUE SPECIFIED.'    X01473500
                                                                   @L2A 01474300
         AGO   .EKEY                    GO CHECK KEY               @L2A 01475100
.EJOBNDT ANOP                           DATA SPECIFIED             @L2A 01475900
         AIF   ('&JOBNAME'(1,1) EQ '(').EJOBNRG  BRANCH IF IN REG  @L2A 01476700
         MVC   52(8,14),&JOBNAME(1)     INSERT JOBNAME INTO PLIST  @L2A 01477500
         AGO   .EKEY                    GO CHECK KEY               @L2A 01478300
.EJOBNRG MVC   52(8,14),0(&JOBNAME(1))  INSERT JOBNAME INTO PLIST  @L2A 01479100
.********************************************************************** 01479900
.*       IF THE KEY IS SPECIFIED, INSERT IT INTO THE               @L2A 01480700
.*       PARAMETER LIST                                            @L2A 01481500
.********************************************************************** 01482300
.EKEY    AIF   ('&KEY' EQ '^').ETOKEN   SKIP DOWN IF NO KEY        @L2A 01483100
         AIF   ('&KEY' NE '').EKEYDT    VERIFY DATA SPECIFIED      @L2A 01483900
         MNOTE 4,'''KEY'' KEYWORD IGNORED. NO VALUE SPECIFIED.'    @L2A 01484700
         AGO   .ETOKEN                  GO CHECK TOKEN             @L2A 01485500
.EKEYDT  ANOP                           DATA SPECIFIED             @L2A 01486300
         AIF   ('&KEY'(1,1) EQ '(').EKEYRG KEY IN REG?             @L2A 01487100
         MVC   60(8,14),&KEY(1)         INSERT KEY INTO PLIST      @L2A 01487900
         AGO   .ETOKEN                  GO ISSUE SVC               @L2A 01488700
.EKEYRG  MVC   60(8,14),0(&KEY(1))      INSERT KEY INTO PLIST      @L2A 01489500
.********************************************************************** 01490300
.*       IF THE TOKEN IS SPECIFIED, INSERT IT INTO THE             @L2A 01491100
.*       PARAMETER LIST                                            @L2A 01491900
.********************************************************************** 01492700
.ETOKEN  AIF   ('&TOKEN' EQ '^').ESYSN   SKIP DOWN IF NO TOKEN     @L2A 01493500
         AIF   ('&TOKEN' NE '').ETOKNDT VERIFY DATA SPECIFIED      @L2A 01494300
         MNOTE 4,'''TOKEN'' KEYWORD IGNORED. NO VALUE SPECIFIED.'  @L2A 01495100
         AGO   .ESYSN                   GO CHECK SYSNAME           @L2A 01495900
.ETOKNDT ANOP                           DATA SPECIFIED             @L2A 01496700
         AIF   ('&TOKEN'(1,1) EQ '(').ETOKNRG BRANCH IF IN REG     @L2A 01497500
         L     15,&TOKEN(1)             LOAD TOKEN                 @L2A 01498300
         ST    15,68(0,14)              INSERT TOKEN INTO PLIST    @L2A 01499100
         AGO   .ESYSN                   GO CHECK SYSNAME           @L2A 01499900
.ETOKNRG ST    &TOKEN(1),68(0,14)       INSERT TOKEN INTO PLIST    @L2A 01500700
.********************************************************************** 01501500
.*       IF THE SYSNAME IS SPECIFIED, INSERT IT INTO THE           @L2A 01502300
.*       PARAMETER LIST                                            @L2A 01503100
.********************************************************************** 01503900
.ESYSN   AIF   ('&SYSNAME' EQ '^').ECONN   SKIP DOWN IF NO SYSNAME @L2A 01504700
         AIF   ('&SYSNAME' NE '').ESYSNDT VERIFY DATA SPECIFIED    @L2A 01505500
         MNOTE 4,'''SYSNAME'' KEYWORD IGNORED. NO VALUE SPECIFIED.'    X01506300
                                                                   @L2A 01507100
         AGO   .ECONN                   GO CHECK CONNECT           @01C 01507900
.ESYSNDT ANOP                           DATA SPECIFIED             @L2A 01508700
         AIF   ('&SYSNAME'(1,1) EQ '(').ESYSNRG BRANCH IF IN REG   @L2A 01509500
         MVC   76(8,14),&SYSNAME(1)     INSERT SYSNAME INTO PLIST  @L2A 01510300
         AGO   .ECONN                   GO CHECK CONNECT           @01C 01511100
.ESYSNRG MVC   76(8,14),0(&SYSNAME(1))  INSERT SYSNAME INTO PLIST  @L2A 01511900
.********************************************************************** 01516500
.*       IF THE CONNECT ID IS SPECIFIED, INSERT IT INTO THE        @L2A 01516800
.*       PARAMETER LIST                                            @L2A 01517500
.********************************************************************** 01518300
.ECONN   ANOP                                                      @L6C 01522800
         AIF   ('&CONNECT' EQ '^').ESNCHY  SKIP DOWN IF NO CONNECT @L6A 01527300
         AIF   ('&CONNECT' NE '').ECONNDT  VERIFY DATA SPECIFIED   @L2A 01531900
         MNOTE 4,'''CONNECT'' KEYWORD IGNORED. NO VALUE SPECIFIED.'    X01532400
                                                                   @L2A 01532900
         AGO   .ESNCHY                  GO CHECK SYNCH KEYWORD     @L6C 01533500
.ECONNDT ANOP                           DATA SPECIFIED             @L2A 01534300
&EMCS(4) SETB  1                        INDICATE IN EXT MCSFLAGS   @L2A 01535100
         AIF   ('&CONNECT'(1,1) EQ '(').ECONNRG BRANCH IF IN REG   @L2A 01535900
         L     15,&CONNECT(1)           LOAD CONNECT ID            @L2A 01536700
         ST    15,16(0,14)              INSERT CONNECT INTO PLIST  @L2A 01537500
         AGO   .ESNCHY                  GO CHECK SYNCH KEYWORD     @L6C 01538300
.ECONNRG ST    &CONNECT(1),16(0,14)     INSERT CONNECT INTO PLIST  @L2A 01539100
.********************************************************************** 01539900
.*       IF SYNCH WAS SPECIFIED CHECK IT AND SET BIT IN THE        @PAC 01540000
.*       EXTENDED MCS FLAG FIELD                                   @L6A 01540100
.********************************************************************** 01540200
.ESNCHY  ANOP                                                      @PAA 01540300
         AIF   ('&SYNCH' EQ '^').EWSPRM    SKIP DOWN IF NO SYNCH   @PAA 01540400
         AIF   ('&SYNCH' NE '').ESYNCDT    VERIFY DATA SPECIFIED   @PAA 01540500
         MNOTE 4,'''SYNCH'' KEYWORD IGNORED. NO VALUE SPECIFIED.'  @PAA 01540600
         AGO   .EWSPRM                                             @PAA 01540700
.ESYNCDT ANOP                                                      @PAA 01540800
&SYNN    SETB  ('&SYNCH(1)' EQ 'NO')    SYNCH MUST BE ZEROED       @PAC 01540900
&EMCS(14) SETB  ('&SYNCH(1)' EQ 'YES')  INDICATE IN EXT MCSFLAGS   @PAC 01541000
.********************************************************************** 01541100
.*       IF THE WAIT STATE PARAMETER LIST ADDRESS WAS SPECIFIED    @L6A 01541200
.*       INSERT IT INTO THE PARAMETER LIST.  IF WSPARM=0,          @P9C 01541300
.*       PLACE ZERO IN THE PARAMETER LIST.                         @P9C 01541400
.********************************************************************** 01541500
.EWSPRM  ANOP                                                      @L6A 01541600
         AIF   ('&WSPARM' EQ '^').WPXEMCS  SKIP DOWN IF NO WSPARM  @PAC 01541700
         AIF   ('&WSPARM(1)' EQ '0').EWSNOWS                       @P9C 01541800
         AIF   ('&WSPARM(1)' NE '').EWSDT                          @P9C 01541900
         MNOTE 4,'''WSPARM'' KEYWORD IGNORED. NO VALUE SPECIFIED.' @PAA 01542000
         AGO   .WPXEMCS                                            @PAA 01542100
.EWSDT   ANOP                                                      @PAA 01542200
         AIF   ('&WSPARM'(1,1) EQ '(').EWSPMRG  BRANCH IF IN REG   @L6A 01542300
.EWSPMDT ANOP                           ADDRESS SPECIFIED          @L6A 01542400
         LA    15,&WSPARM(1)            LOAD WSPARM ADDRESS        @P9C 01542500
         ST    15,100(0,14)             INSERT WSPARM INTO PLIST   @L6A 01542600
         AGO   .WPXEMCS                 GENERATE MCS EXT FLAGS     @L6A 01542700
.EWSNOWS ANOP                           WAIT STATE TO BE ZEROED    @P9C 01542800
         SR    15,15                    NO ASSOCIATED WAIT STATE   @P9C 01542900
         ST    15,100(0,14)             ZERO WSPARM FIELD          @P9C 01543000
         AGO   .WPXEMCS                 GENERATE MCS EXT FLAGS     @L6A 01543100
.EWSPMRG ANOP                           REGISTER SPECIFIED         @L6A 01543200
         ST    &WSPARM(1),100(0,14)     INSERT WSPARM  INTO PLIST  @L6A 01543300
.********************************************************************** 01543400
.*       CHECK TO SEE IF ANY OF THE EXTENDED MCSFLAGS NEEDS TO     @L2C 01543500
.*       BE SET. THE FLAGS MUST BE UPDATED IF ANY OF THE           @01C 01543600
.*       CONSID, CONNECT, CONSNAME OR PRTY KEYWORDS WERE           @L4C 01543700
.*       SPECIFIED, OR SYNCH=YES. IF SYNCH=NO WAS SPECIFIED,       @PAC 01543800
.*       TURN THE SYNCH FLAG OFF.                                  @PAA 01543900
.********************************************************************** 01544000
.WPXEMCS ANOP                           SET NEW EXTENDED MCSFLAGS  @L2C 01544100
         AIF   (&EMCS(2) OR &EMCS(3) OR &EMCS(4) OR                    X01544200
                &EMCS(6) OR &EMCS(7) OR &EMCS(14) OR                   +01544300
                &EMCS(9)).WPXEMFS   SET EXTENDED MCS FLAGS, IF ON  @L6C 01544400
         AIF    (&SYNN).WPXSYN      SYNCH MUST BE TURNED OFF       @PAA 01544500
         AGO   .EXECUTE             IF NONE, ISSUE SVC OR BRANCH ENTRY +01544600
                                    WTO                            @L6C 01544700
.********************************************************************** 01547900
.*       TURN ON THE EXTENDED MCSFLAGS WHICH MAY NEED TO BE        @L2A 01548700
.*       SET FOR THE EXECUTE FORM OF THE MACRO                     @L2A 01549500
.********************************************************************** 01550300
.WPXEMFS ANOP                       SET THE EXTENDED MCS FLAGS     @L5A 01550700
         OI    4(14),B'&EMCS(1)&EMCS(2)&EMCS(3)&EMCS(4)&EMCS(5)&EMCS(6)X01551100
               &EMCS(7)&EMCS(8)'        UPDATE EXTENDED MCS FLAGS  @L2A 01551900
         OI    5(14),B'&EMCS(9)&EMCS(10)&EMCS(11)&EMCS(12)&EMCS(13)&EMCX01552400
               S(14)&EMCS(15)&EMCS(16)' UPDATE EXTENDED MCS FLAGS2 @L5A 01552900
.WPXSYN  ANOP                        TURN SYNCH OFF IF NECESSARY   @PAA 01553000
         AIF   (NOT(&SYNN)).WPXETXT     NOT SYNCH=NO               @PAA 01553100
         NI    5(14),B'11111011'        SET SYNCH FLAG OFF         @PAA 01553200
.********************************************************************** 01553500
.*       IF THIS IS A MULTILINE WTO, CHECK TO SEE IF THE TEXT      @L5A 01553600
.*       KEYWORD WAS SPECIFIED. IF SO, STORE THE ADDRESS OF EACH   @L5A 01553700
.*       LINE OF TEXT IN THE PARAMETER LIST.                       @L5A 01553800
.********************************************************************** 01553900
.WPXETXT ANOP                           CHECK FOR TEXT ON MLWTO    @L5A 01554000
         AIF   ('&TEXT' EQ '^' OR NOT &MLW).EXECUTE  SKIP IF NOT A     +01563700
                                        MULTILINE W/TEXT KEYWORD   @L6C 01573400
.********************************************************************** 01583100
.*       MOVE THE TEXT ADDRESSES INTO THE PARAMETER LIST           @L5A 01592800
.********************************************************************** 01602500
&MLTTIND SETA  2                        LINE TYPE INDEX            @L5A 01612200
&MLINDX  SETA  4                        OFFSET TO TEXT ADDRESS     @L5A 01621900
&H       SETA  2                        PROCESSED MAJOR            @L5A 01631600
         AIF   (&H GT &NUMML).EXECUTE   ISSUE SVC OR BRANCH ENTRY WTO  +01641300
                                        WHEN COMPLETE              @PQC 01651000
         XR    15,15                    CLEAR INDEX FOR INSERTS    @L5A 01660700
         IC    15,3(14)                 SET LENGTH OF WPX          @L5A 01670400
         LA    14,4(15,14)              POINT TO MULTILINE ENTRIES @L5A 01680100
.EMLW00  ANOP                           BEGIN LOOP FOR MINORS      @L5A 01689800
         AIF   (&H GT &NUMML).EXECUTE   ISSUE SVC OR BRANCH ENTRY WTO  +01699500
                                        WHEN COMPLETE              @PQC 01709200
&VALH    SETC  '&TEXT(&H)'              EXTRACT CURRENT VALUE      @L5A 01718900
&VALH1   SETC  '&TEXT(&H,1)'            EXTRACT TEXT ADDRESS       @L5A 01728600
&VALH2   SETC  '&TEXT(&H,2)'            EXTRACT LINE TYPE          @PKA 01729900
         AIF   ('&VALH2' EQ '').ETEXTL2       LINE TYPE NOT SPEC.  @04C 01731200
         AIF   (&LTWARN).ETEXTL2        WARNING ALREADY ISSUED     @PKA 01732500
         MNOTE 0,'LINE TYPE ON EXECUTE FORM IGNORED.'              @PKA 01733800
&LTWARN  SETB  1                        ISSUE WARNING ONCE ONLY    @PKA 01735100
.ETEXTL2 ANOP                                                      @PKA 01736400
         AIF   ('&VALH1'  EQ     '').EMLW02 BRANCH IF NULL LINE    @L5A 01738300
         AIF   ('&VALH1'(1,1) EQ '(').EMLW01 BRANCH IF SPECIFIED       X01748000
                                        IN REGISTER                @L5A 01757700
         LA    15,&VALH1                LOAD ADDR OF TEXT FIELD    @P8C 01767400
         ST    15,&MLINDX.(14)          STORE TEXT ADDR INTO PLIST @P8A 01777100
         AGO   .EMLW02                  CONTINUE PROCESSING        @L5A 01786800
.EMLW01  ANOP                           TEXT IN REGISTER           @L5A 01796500
&K       SETA  K'&VALH1                                                 01806200
&VALH1   SETC  '&VALH1'(2,&K-2)                                         01815900
         ST    &VALH1,&MLINDX.(14)      STORE TEXT ADDRESS         @L5A 01825600
.EMLW02  ANOP                           UPDATE POINTERS            @L5A 01835300
&H       SETA  &H+1                     UPDATE NUMBER OF LINES     @L5A 01845000
&MLINDX  SETA  &MLINDX+8                INDEX TO NEXT PLIST ENTRY  @L5A 01854700
         AGO   .EMLW00                  CONTINUE                   @L5A 01864400
.********************************************************************** 01874100
.*       NO WPX KEYWORDS SPECIFIED. CHECK FOR QID              @G860PSS 01883800
.********************************************************************** 01893500
.CHEKQID ANOP                           CHECK FOR QID KEYWORD      @L2A 01903200
         AIF   (T'&QID EQ 'O').EXECUTE  QID SPECIFIED?             @L6C 01912900
         LR    14,1                     REG 14 GETS PLIST ADDR   X02050 01922600
         AH    14,0(1,0)                UPDATE TO QID ADDRESS    YM1995 01932300
         AIF   ('&QID'(1,1) EQ '(').QIDREG  BRANCH IF IN A REG     @L2C 01942000
         MVC   6(2,14),&QID(1)          INSERT QID IN PARM LIST  X02050 01951700
         AGO   .EXECUTE                 GO TO GENERATE SVC 35 OR BRANCH+01961400
                                        ENTRY WTO                  @L6C 01971100
.QIDREG  ANOP                           QID IS IN A REGISTER       @L2C 01980800
         MVC   6(2,14),0(&QID(1))       INSERT QID INTO PARM LIST  @L2C 01990500
.********************************************************************** 02000200
.*       ALL EXECUTE FORM PROCESSING COMPLETE. GENERATE SVC 35 OR  @L6C 02009900
.*       BRANCH ENTRY WTO                                          @L6A 02019600
.********************************************************************** 02029300
         AGO   .EXECUTE                 ISSUE SVC 35 OR BRANCH ENTRY   +02039000
                                        WTO                        @L6C 02048700
.********************************************************************** 02058400
.*                                                                 @L2A 02068100
.*       STANDARD OR LIST FORM SPECIFIED. DETERMINE IF SINGLE-     @L2A 02077800
.*       LINE OR MULTI-LINE WTO AND WHETHER PROPER AMOUNT OF       @L2A 02087500
.*       TEXT SPECIFIED AND CHECK FOR THE FOLLOWING ERROR:         @L5C 02097200
.*                                                                 @L2A 02106900
.*       - NEITHER INLINE TEXT NOR THE TEXT KEYWORD SPECIFIED      @L5A 02116600
.*         ON THE STANDARD OR LIST FORM OF WTO.                    @L5A 02126300
.*                                                                 @L5A 02136000
.********************************************************************** 02145700
.NUMCHK  ANOP                       EITHER STANDARD OR LIST FORM X02007 02155400
         AIF   ('&TEXT' NE '^' OR  '&MESG' NE '').TEXTOK BRANCH IF     X02165100
                                     SOME KIND OF TEXT SPECIFIED   @L5A 02174800
.*       AIF   ('&MF(1)' EQ 'E').TEXTK  NO TEXT VALUE REQUIRED ON THE   02184500
.*                                   EXECUTE FORM OF WTO           @L5A 02194200
         MNOTE 12,'NO TEXT GENERATED. ''TEXT'' OR INLINE TEXT MUST BE SX02203900
               PECIFIED.'                                          @L5A 02213600
&WTOERR  SETB  1                     A SEVERE MNOTE WAS ISSUED     @L5A 02223300
         AGO   .END                  TERMINATE MACRO PROCESSING    @L5A 02233000
.TEXTOK  ANOP                                                      @L5A 02242700
         AIF   ('&TEXT' NE '^').TXTNCHK   IF TEXT KEYWORD SPECIFIED,   X02252400
                                     USE IT FOR MLWTO CHECK        @L5A 02262100
.********************************************************************** 02271800
.*       TEXT KEYWORD NOT SPECIFIED. ASSUME INLINE TEXT, OR MF=L   @L5A 02281500
.*       TEXT KEYWORD NOT SPECIFIED. CHECK USING INLINE TEXT       @L5A 02291200
.********************************************************************** 02300900
         AIF   (&IHBWTOR).MLOK       IF THIS WAS FROM WTOR THE CHECKS  +02310600
                                     AND THE MLW FLAG BIT WAS SET IN   +02320300
                                     THE WTOR MACRO                @L6A 02330000
         AIF   (N'&SYSLIST EQ 0 OR N'&SYSLIST GT 255).NOTXT ERROR IF   X02339700
                   EITHER NO TEXT OR TOO MANY LINES SPECIFIED  @G64DPSS 02349400
         AIF   ('&SYNCH(1)' EQ 'YES' AND                               +02359100
                 N'&SYSLIST GT &MAXLINS).ERROR2     TOO MANY LINES FOR +02368800
                                                    SYNCH=YES      @L6A 02378500
&MLW     SETB  (N'&SYSLIST NE 1 OR N'&SYSLIST(1) NE 1) INDICATE IF     X02388200
                                     THIS IS A MULTI-LINE WTO    X02007 02397900
         AGO   .CONNCHK              CHECK FOR CONNECT WITH SLWTO  @L5A 02407600
.********************************************************************** 02417300
.*       TEXT KEYWORD SPECIFIED. CHECK USING TEXT KEYWORD DATA     @L5A 02427000
.********************************************************************** 02436700
.TXTNCHK ANOP                                                      @L5A 02446400
         AIF   (N'&TEXT EQ 0 AND '&MF' NE 'L').NOTXT  ERROR IF         X02452200
                   ZERO LINES SPECIFIED AND NOT LIST FORM OF MACRO @PIA 02458000
         AIF   (N'&TEXT GT 255).NOTXT   ERROR IF TOO MANY LINES        X02463800
                   SPECIFIED                                       @PIC 02469600
         AIF   ('&SYNCH(1)' EQ 'YES' AND                               +02475500
                 N'&TEXT GT &MAXLINS).ERROR2        TOO MANY LINES FOR +02485200
                                                    SYNCH=YES      @L6A 02494900
.********************************************************************** 02504600
.*                                                                 @L2A 02514300
.*       CHECK FOR THE FOLLOWING TERMINATING ERROR SITUATION:      @L2A 02524000
.*       - CONNECT KEYWORD MUTUALLY EXCLUSIVE WITH SINGLE-LINE WTO @L2A 02533700
.*                                                                 @L2A 02543400
.********************************************************************** 02553100
.CONNCHK ANOP                                                      @L5A 02562800
         AIF   ('&CONNECT' EQ '^' OR &MLW).MLOK  ERROR IF CONNECT      X02572500
                                      USED ON SINGLE-LINE WTO      @L2A 02582200
         MNOTE 12,'NO TEXT GENERATED. ''CONNECT'' IS MUTUALLY EXCLUSIVEX02591900
                WITH SINGLE LINE WTO.'                             @L2A 02601600
&WTOERR  SETB  1                        A SEVERE MNOTE WAS ISSUED  @L2A 02611300
         AGO   .END                  TERMINATE MACRO PROCESSING    @L2A 02621000
.MLOK    ANOP                        NO CONNECT/SINGLE-LINE ERROR  @L2A 02630700
         AIF   ('&MF' EQ 'I').IROUT  CHECK FOR STANDARD FORM            02640400
.********************************************************************** 02650100
.*                                                             @G860PSS 02659800
.*       LIST FORM SPECIFIED                                   @G860PSS 02669500
.*                                                             @G860PSS 02679200
.********************************************************************** 02688900
         AIF   (&IHBWTOR).WPXCHK    BRANCH FOR WTOR                     02698600
&NAME    DS    0F                                                       02708300
         AGO   .WPXCHK                                                  02718000
.*********************************************************************  02727700
.*                                                             @G860PSS 02737400
.*       INLINE FORM WAS SPECIFIED                             @G860PSS 02747100
.*                                                             @G860PSS 02756800
.********************************************************************** 02766500
.IROUT   AIF   (&IHBWTOR).WPXCHK    FOR A WTOR, THE WTOR MACRO HAS     X02776200
                                    ALREADY DONE THE CNOP AND BAL  @L2C 02785900
         CNOP  0,4                                                      02795600
&NAME    BAL   1,&GNAME.A               BRANCH AROUND MESSAGE           02805300
.WPXCHK  ANOP                       DETERMINE WHETHER TO BUILD WPX      02815000
&J       SETA  0                    INITIALIZE INDEX               @L2A 02824700
.TRYLOOP ANOP                                                      @L5A 02834400
         AIF   (&J GE N'&MCSFLAG OR T'&MCSFLAG EQ 'O').TRYKEYS     @L2A 02844100
&J       SETA  &J+1                 MORE MCSFLAG VALUES TO CHECK   @L2A 02853800
         AIF   ('&MCSFLAG(&J)' NE 'BUSYEXIT').TRYLOOP  IF NOT BUSYEXIT X02863500
                                    SPECIFIED, THEN CHECK NEXT MCSFLAG X02873200
                                    PARAMETER                      @L2A 02882900
         AIF   (NOT &IHBWTOR).BUSYOK BUSYEXIT NOT ALLOWED ON WTOR  @L2A 02892600
         MNOTE 4,'MCSFLAG=BUSYEXIT IGNORED. NOT VALID ON WTOR.'    @L2A 02902300
         AGO   .TRYKEYS             TEST OTHER KEYWORDS            @L2A 02912000
.BUSYOK  ANOP                       BUSYEXIT VALIDLY SPECIFIED     @L2A 02921700
&IWPXBIT SETB 1                     INDICATE WPX IS TO BE BUILT    @L2A 02931400
&EMCS(1) SETB 1                     INDICATE BUSYEXIT SPECIFIED VIA    X02941100
                                    EXTENDED MCSFLAG               @L2A 02950800
         AGO .SETWPX                GO SET WPX VERSION             @05A 02955600
.TRYKEYS ANOP                       TEST FOR OTHER WPX KEYWORDS    @L2A 02960500
.********************************************************************** 02970200
.*                                                                 @P4A 02979900
.*       THE FOLLOWING WPX CHECKS ARE SEPARATED SO THIS MACRO      @P4A 02989600
.*       RUNS IN ASSEMBLER F.                                      @P4A 02999300
.*                                                                 @P4A 03009000
.********************************************************************** 03018700
         AIF   ('&JOBID'   NE '^' OR  '&JOBNAME' NE '^' OR             X03047800
                '&SYSNAME' NE '^' OR  '&KEY'     NE '^' OR             X03057500
                '&TOKEN'   NE '^').SETWPX                          @01C 03067200
         AIF   ('&CONSID'  NE '^' OR  '&PRTY'    NE '^' OR             X03076900
                '&SUBSMOD' NE ''  OR                                   X03086600
                '&CONNECT' NE '^' OR  '&CONSNAME' NE '^' ).SETWPX  @D2C 03096300
         AIF   ('&CART'    NE '^' OR  '&TEXT'    NE '^').SETWPX    @PCC 03106000
         AIF   ('&WSPARM'  NE '^' AND '&MF'  NE 'I').SETWPX        @PCA 03115700
         AIF   ('&WSPARM'  NE '^' AND '&WSPARM' NE '0').SETWPX     @PCA 03125400
         AIF   ('&SYNCH'   NE '^' AND '&MF'  NE 'I').SETWPX        @PCA 03135100
         AIF   ('&SYNCH'   NE '^' AND '&SYNCH' NE 'NO').SETWPX     @PCA 03144800
         AIF   (NOT &RCNSPEC).CHEKMCS                              @L3C 03154500
.SETWPX  ANOP                       WPX IS TO BE BUILT             @P4A 03164200
.*  THE FOLLOWING KEYWORDS ARE NEW IN HBB4410. IF ANY OF THEM      @PJA 03165000
.*  IS SPECIFIED, WE BUILD A VERSION 2 WPX. OTHERWISE,             @PJA 03165800
.*  A VERSION 1 WPX WILL BE BUILT.                                 @PJA 03166600
         AIF   ('&CONSNAME' NE '^' OR                                  X03167400
                '&CART'    NE '^' OR  '&TEXT'    NE '^' OR             X03168200
                '&SYNCH'   NE '^' OR  '&WSPARM'  NE '^').SETVER2   @01C 03169000
         AIF   (&RCNSPEC).SETVER2   RPLYISUR WAS SPECIFIED (WTOR)  @PJA 03169800
         AGO    .SETVER1            SET VERSION 1 LEVEL WPX        @PJA 03170600
.SETVER2 ANOP                                                      @PJA 03171400
&IWPXVER SETC '2'                   INDICATE VERSION 2 WPX              03172200
.SETVER1 ANOP                                                      @PJA 03173000
&IWPXBIT SETB 1                     INDICATE WPX IS TO BE BUILT    @L2A 03173900
.CHEKMCS ANOP                       CHECK WHETHER TO SET MCSFLAGS  @L2A 03183600
.*    THE MCS BIT INDICATES WHETHER MCS FLAGS WILL BE SET        X02050 03193300
.*    (ON IF EITHER ROUTING CODES, DESCRIPTOR CODES, MESSAGE TYPE       03203000
.*    OR QID INFORMATION IS SPECIFIED)                                  03212700
&IHBMCS  SETB  (T'&ROUTCDE NE 'O' OR T'&MSGTYP NE 'O' OR               X03222400
               T'&DESC NE 'O')                                 @YA17152 03232100
&IHBMCS  SETB  (&IHBMCS OR (T'&QID NE 'O' AND NOT &IWPXBIT))   @YA17152 03241800
.********************************************************************** 03251500
.*                                                                 @L2A 03261200
.*  DETERMINE WHICH ROUTING CODES HAVE BEEN SPECIFIED, IF ANY:     @L2A 03270900
.*    - ONLY ROUTING CODES 1-28 AND 41-128 MAY BE SET.         @YA10057 03280600
.*    - ROUTING CODES 29-40 ARE RESERVED AND IGNORED IF        @YA10057 03290300
.*        IF SPECIFIED.                                        @YA10057 03300000
.*    - IF ANY ROUTING CODES GREATER THAN 16 ARE SPECIFIED (WITHIN @L2A 03309700
.*        1-128 AND INCLUDING 29-40) AN EXTENDED FORMAT WPL    @YA10057 03319400
.*        (WPX) WILL BE BUILT.                                 @YA10057 03329100
.*    - IF NONE OF ROUTING CODES 1-28 OR 41-128 ARE SET,       @YA10057 03338800
.*        A DEFAULT SETTING OF ROUTING CODE 2 IS APPLIED.      @YA10057 03348500
.*    - IF THE ROUTCDE KEYWORD IS NOT SPECIFIED:                   @L2A 03358200
.*        .IF MCSFLAG=REG0, QREG0 OR CONSID KEYWORD IS SPECIFIED,  @L2A 03367900
.*           THEN NO ROUTING CODES ARE SET                         @L2A 03377600
.*        .IF REG0/QREG0/CONSID NOT USED, IF DESCRIPTOR CODE       @02C 03389700
.*           INFORMATION IS SPECIFIED, THEN THE DEFAULT IS SET.    @02C 03401800
.*           OTHERWISE, NO ROUTING CODES ARE SET.                  @02C 03413900
.*                                                                 @L2A 03426100
.********************************************************************** 03435800
         AIF   (T'&ROUTCDE NE 'O').YESROUT ROUTING CODES?          @L2M 03445500
         AIF   ('&CONSID'  NE '^' OR '&CONSNAME' NE '^').ENDROUT       X03455200
                                   IF CONSID OR CONSNAME SPECIFIED     X03464900
                                    THEN SET NO ROUTING CODES      @L3C 03474600
&J       SETA  0                    NO ROUTING CODES. SET UP INDEX @L2A 03484300
.DEFLAG  ANOP                       CHECK FOR MCSFLAG=REG0/QREG0   @L2M 03494000
         AIF   (&J EQ N'&MCSFLAG OR T'&MCSFLAG EQ 'O').NOREG0      @L2M 03503700
&J       SETA  &J+1                 MORE MCSFLAG VALUES TO CHECK   @L2M 03513400
         AIF   ('&MCSFLAG(&J)' EQ 'REG0' OR '&MCSFLAG(&J)' EQ 'QREG0').*03523100
               ENDROUT              IF MCSFLAG VALUE 'REG0' OR 'QREG0' X03532800
                                    SPECIFIED, IGNORE ALL ROUTING CODES 03542500
         AGO   .DEFLAG              CHECK NEXT MCSFLAG VALUE       @L2C 03552200
.NOREG0  ANOP                       MCSFLAG=REG0/QREG0 NOT USED    @L2C 03561900
         AIF   ('&MSGTYP' NE '').ENDROUT BYPASS SETTING OF ROUTE CODE  X03565100
                                    2 IF MSGTYP SPECIFIED          @02A 03568300
&RB(2)   SETB  (&IHBMCS)            SET DEFAULT ROUTING CODE   @YA17152 03571600
         AGO   .ENDROUT             DONE WITH ROUTING CODE CHECKS  @L2C 03581300
.YESROUT ANOP                                                           03591000
.*                                                                      03600700
.*    ROUTING CODES HAVE BEEN SPECIFIED. DETERMINE WHICH CODES     @L2C 03610400
.*    ARE TO BE USED AND SET THE APPROPRIATE BITS IN STRING 'RB'.  @L2A 03620100
.*    ROUTING CODE RANGES ARE ACCEPTED AS LONG AS:                 @L2A 03629800
.*      - THE SECOND NUMBER OF THE RANGE  >=  THE FIRST NUMBER     @L2A 03639500
.*      - BOTH NUMBERS ARE WITHIN THE RANGE 1-128                  @L2A 03649200
.*      - THE NUMBERS OF THE RANGE ARE SEPARATED BY A DASH (-)     @L2A 03658900
.*                                                                      03668600
&I       SETA  1                    INITIALIZE LIST INDEX          @L2A 03678300
.DOROUT  ANOP                                                           03688000
&I1      SETA  0                    INITIALIZE ELEMENT INDEX       @L2A 03697700
&RCLEN   SETA  K'&ROUTCDE(&I)       SET LENGTH OF CURRENT ELEMENT  @L2A 03707400
         AIF   (&RCLEN EQ 0).SINGLE IF ELEMENT IS NULL, GO TO SINGLE   X03717100
                                    ROUTING CODE CHECK - IT WILL BE    X03726800
                                    DETERMINED TO ISSUE AN MNOTE   @L2A 03736500
         AIF   (T'&ROUTCDE(&I) EQ 'N').SINGLE IF SINGLE ELEMENT    @L2A 03746200
.*                                                                 @L2A 03755900
.*    A ROUTING CODE RANGE HAS BEEN SPECIFIED.                     @L2A 03765600
.*                                                                 @L2A 03775300
.CHKDASH ANOP                       NOT SINGLE CODE. CHECK RANGE   @L2A 03785000
&I1      SETA  &I1+1                INCREMENT ELEMENT INDEX        @L2A 03794700
         AIF   ('&ROUTCDE(&I)'(&I1,1) EQ '-').GOTDASH              @L2A 03804400
         AIF   (&I1+1 GE &RCLEN).BADRNGE  CHECK INDEX POSITION     @L2A 03814100
         AGO   .CHKDASH             CHECK NEXT CHARACTER           @L2A 03823800
.GOTDASH ANOP                       FOUND A DASH (DELIMITER)       @L2A 03833500
         AIF   (&I1 EQ 1).BADRNGE   IF NO LOWER LIMIT, ISSUE MNOTE @L2A 03843200
&LOW     SETC  '&ROUTCDE(&I)'(1,&I1-1) SET FIRST NUMBER OF RANGE   @L2A 03852900
&HIGH    SETC  '&ROUTCDE(&I)'(&I1+1,&RCLEN-&I1) 2nd number         @07C 03862600
         AIF   ('&LOW' GT '&HIGH').BADRNGE IF FIRST NUMBER GREATER THANX03872300
                                    SECOND NUMBER, ISSUE MNOTE     @L2A 03882000
         AIF   ('&LOW' LT '1' OR '&LOW' GT '128' OR                    X03891700
               '&HIGH' LT '1' OR '&HIGH' GT '128').BADRNGE IF EITHER   X03901400
                                    NUMBER IS NOT WITHIN 1-128     @L2A 03911100
&IWPXBIT SETB  (&IWPXBIT OR '&LOW' GT '16' OR '&HIGH' GT '16') BUILD   X03920800
                                    WPX FOR RCS GREATER THAN 16    @L2A 03930500
&RSVDMNT SETB  (&RSVDMNT OR                                            X03940200
               ('&LOW' LE '40' AND '&HIGH' GE '29')) IF RESERVED       X03949900
                          CODES, SET UP TO ISSUE WARNING MNOTE @YA10057 03959600
&NODFLT  SETB  (&NODFLT OR '&LOW' LT '29' OR '&LOW' GT '40' OR         X03969300
               '&HIGH' LT '29' OR '&HIGH' GT '40') DO NOT USE DEFAULT  X03979000
                                SETTING IF ANY ARE GOOD CODES  @YA10057 03988700
&J       SETA  &LOW                 INITIALIZE INDEX               @L2A 03998400
&K       SETA  &HIGH                SET END OF RANGE               @L2A 04008100
.SETLOOP ANOP                       LOOP TO SET ON ROUTING CODES       X04017800
                                    (RESERVED CODES ALSO SET HERE, BUT X04027500
                                    CLEARED BELOW)                 @L2A 04037200
&RB(&J)  SETB  1                    ROUTING CODE N SPECIFIED       @L2A 04046900
&J       SETA  &J+1                 INCREMENT LOOP INDEX           @L2A 04056600
         AIF   (&J LE &K).SETLOOP   IF MORE CODES TO SET           @L2A 04066300
         AGO   .NEXTRC              DETERMINE NEXT ROUTING CODE    @L2A 04076000
.*                                                                 @L2A 04085700
.*    AN INVALID ROUTING CODE RANGE HAS BEEN SPECIFIED. ISSUE AN   @L2A 04095400
.*    MNOTE AND SKIP TO THE NEXT ROUTING CODE.                     @L2A 04105100
.*                                                                 @L2A 04114800
.BADRNGE ANOP                       INVALID ROUTING CODE RANGE     @L2A 04124500
         MNOTE 4,'INVALID RANGE OF ROUTING CODES IGNORED.'         @L2A 04134200
         AGO   .NEXTRC              CHECK NEXT ROUTING CODE        @L2A 04143900
.*                                                                 @L2A 04153600
.*    A SINGLE ROUTING CODE HAS BEEN SPECIFIED. VERIFY THAT IT IS  @L2A 04163300
.*    WITHIN THE PROPER RANGE AND, IF SO, SET THE CORRECT BIT      @L2A 04173000
.*                                                                 @L2A 04182700
.SINGLE  ANOP                                                      @L2A 04192400
&N       SETA  &ROUTCDE(&I)         GET NEXT ROUTING CODE          @L2C 04202100
         AIF   (&N  GE 1 AND &N  LE 128).SETSNGL VALID CODE?       @L2C 04211800
         MNOTE 4,'ROUTCDE &N  IS AN INVALID ROUTING CODE. IT IS IGNOREDX04221500
               .'                                                  @L2C 04231200
         AGO   .NEXTRC              INVALID ROUTING CODE SPECIFIED.    X04240900
                                    CHECK THE NEXT ONE             @L2A 04250600
.SETSNGL ANOP                       VALID ROUTING CODE SPECIFIED        04260300
&IWPXBIT SETB  (&IWPXBIT OR &N  GT 16) BUILD WPX FOR RC > 16       @L2A 04270000
&RSVDMNT SETB  (&RSVDMNT OR (&N  GE 29 AND &N  LE 40)) IF RC 29-40,    X04279700
                                SET UP TO ISSUE WARNING MNOTE  @YA10057 04289400
&NODFLT  SETB  (&NODFLT OR &N  LT 29 OR &N  GT 40) DO NOT USE DEFAULT  X04299100
                                SETTING FOR ACCEPTABLE CODES   @YA10057 04308800
&RB(&N)  SETB  1                    ROUTING CODE N SPECIFIED            04318500
.NEXTRC  ANOP                       DETERMINE IF MORE CODES        @L2C 04328200
&I       SETA  &I+1                 INCREMENT INDEX                     04337900
         AIF   (&I LE N'&ROUTCDE).DOROUT IF MORE CODES, CHECK NEXT ONE  04347600
         AIF   ('&MSGTYP' NE '').ENDROUT BYPASS SETTING OF ROUTE CODE  X04350800
                                    2 IF MSGTYP SPECIFIED          @02A 04354000
&RB(2)   SETB  (&RB(2) OR NOT &NODFLT) VERIFY THAT DEFAULT IS SET       04357300
.ENDROUT ANOP                       DONE WITH ROUTING CODES        @L2C 04367000
.*                                                                 @L2A 04376700
.*    SET UP ROUTING CODE DC FIELD FOR AN OLD-FORMAT WPL           @L2A 04386400
.*                                                                 @L2A 04396100
&CD(3)   SETC  '&RB(1)&RB(2)&RB(3)&RB(4)&RB(5)&RB(6)&RB(7)&RB(8)'  @L2A 04405800
&CD(4)   SETC  '&RB(9)&RB(10)&RB(11)&RB(12)&RB(13)&RB(14)&RB(15)&RB(16)X04415500
               '                                                   @L2A 04425200
.*                                                                 @L2A 04434900
.*    ROUTING CODES 29-40 ARE RESERVED. IF ANY OF THESE HAVE   @YA10057 04444600
.*    BEEN SPECIFIED, ISSUE A WARNING MNOTE AND CLEAR THESE BITS   @L2A 04454300
.*                                                                 @L2A 04464000
         AIF   (NOT &RSVDMNT).WPXDONE  IF ANY RESERVED ROUTING CODES   X04473700
                                    SPECIFIED, ISSUE MNOTE         @L2A 04483400
         MNOTE 4,'RESERVED ROUTING CODE(S) 29-40 IGNORED.'     @YA10057 04493100
&I       SETA  29                   INITIALIZE ROUTING CODE INDEX  @L2A 04502800
.NULLIFY ANOP                       VERIFY RCS 29-40 ARE NOT SET       X04512500
                                                               @YA10057 04522200
&RB(&I)  SETB  0                    NULLIFY ROUTING CODE           @L2A 04531900
&I       SETA  &I+1                 INCREMENT INDEX                @L2A 04541600
         AIF   (&I LE 40).NULLIFY   GO TO TURN OFF THE OTHER CODES     X04551300
                                                               @YA10057 04561000
.********************************************************************** 04570700
.*                                                                 @L2A 04580400
.*  CHECK ALL OTHER CONDITIONS RESULTING IN A WPX.                 @L2A 04590100
.*  A WPX WILL BE BUILT IF ANY OF THE FOLLOWING KEYWORDS HAS       @L2A 04599800
.*  BEEN SPECIFIED (EVEN IF WITH INVALID DATA):                    @L2A 04609500
.*    - CONNECT (ALLOWED ON MULTI-LINE WTO ONLY)                   @L2A 04619200
.*    - JOBNAME                                                    @L2A 04628900
.*    - JOBID                                                      @L2A 04638600
.*    - SYSNAME                                                    @L2A 04648300
.*    - KEY                                                        @L2A 04658000
.*    - TOKEN                                                      @L2A 04667700
.*    - CONSNAME                                                   @L3A 04687100
.*    - CONSID                                                     @L2A 04696800
.*    - PRTY                                                       @L2A 04706500
.*    - SUBSMOD                                                    @L2A 04716200
.*    - CART                                                       @L4A 04725900
.*    - TEXT                                                       @L5A 04735600
.*    - SYNCH                                                      @L6A 04745300
.*    - WSPARM                                                     @L6A 04755000
.*                                                                 @L2A 04764700
.********************************************************************** 04774400
.WPXDONE ANOP                       DONE WITH WPX DETERMINATION    @L2A 04784100
&I       SETA  1                    INITIALIZE INDEX                    04793800
&B(3)    SETB  0                                                   MCS  04803500
         AIF   (T'&DESC EQ 'O').SETNCLR     IF NO DESCRIPTOR CODES     X04813200
                        SPECIFIED, THEN SKIP DESCRIPTOR CODE SECTION    04822900
.********************************************************************** 04832600
.*  DETERMINE WHICH DESCRIPTOR CODES WERE SPECIFIED                     04842300
.********************************************************************** 04852000
.DCHK    ANOP                       DESCRIPTOR CODES SPECIFIED          04861700
&N       SETA  &DESC(&I)            GET THE NEXT DESCRIPTOR CODE        04871400
&I       SETA  &I+1                 INCREMENT THE INDEX                 04881100
         AIF   (&N GE 1 AND &N LE 16).ASSIGND VALID DESCRIPTOR CODE?    04890800
         MNOTE 4,'DESC &N  IS AN INVALID DESCRIPTOR CODE. IT IS IGNOREDX04900500
               .'                                                  @L2C 04910200
         AGO   .NXTD                INVALID DESCRIPTOR CODE. ISSUE     X04919900
                                    MNOTE AND CHECK FOR NEXT CODE       04929600
.ASSIGND ANOP                       YES. VALID DESCRIPTOR CODE          04939300
&B(&N)   SETB  1                    VALID DESCRIPTOR CODE N SPECIFIED   04949000
.NXTD    AIF   (&I LE N'&DESC).DCHK IF MORE CODES, CHECK NEXT ONE       04958700
&I       SETA  1                    SET INDEX TO INDICATE DESC CODE     04968400
.********************************************************************** 04978100
.*  SET OUTPUT AREAS AND CLEAR BINARY FLAGS                             04987800
.********************************************************************** 04997500
.SETNCLR ANOP                                                           05007200
&CD(&I)  SETC  '&B(1)&B(2)&B(3)&B(4)&B(5)&B(6)&B(7)&B(8)'               05016900
&CD(&I+1) SETC '&B(9)&B(10)&B(11)&B(12)&B(13)&B(14)&B(15)&B(16)'        05026600
&N       SETA  1                                                        05036300
.CLR     ANOP                       CLEAR 2 BYTES OF BINARY FLAGS       05046000
&B(&N)   SETB  0                    CLEAR PARTICULAR BIT                05055700
&N       SETA  &N+1                 INCREMENT FLAGS INDEX               05065400
         AIF   (&N LT 17).CLR       IF ALL FLAGS CLEARED, GO ON         05075100
         AIF   (&I EQ 5).FLGCHK0    IF JUST FINISHED SETTING MESSAGE   X05084800
                                    TYPE, THEN SET MCS FLAGS            05094500
         AIF   (&I EQ 7).GENDCS     IF JUST FINISHED SETTING MCS FLAGS X05104200
                                    THEN GENERATE DCS            X02007 05113900
.********************************************************************** 05123600
.*  DETERMINE WHICH MESSAGE TYPE FLAGS WERE SPECIFIED                   05133300
.********************************************************************** 05143000
.TYPCHK  ANOP                                                    X02050 05152700
&SWM     SETB  0                    INITIALIZE MSGTYPE INDICATOR   @L2A 05162400
&I       SETA  5                    SET INDEX TO INDICATE MSGTYPE       05172100
         AIF   (T'&QID EQ 'O' OR '&QID(1)' EQ 'N').TYPCHK1  IS NO QID  X05181800
                                    INFORMATION AVAILABLE?       X02050 05191500
         AIF   (&IWPXBIT).TYPCHK1   IGNORE QID IF BUILDING WPX     @L2A 05201200
&B(4)    SETB  1                    SET THE QID MSG TYPE FLAG    X02050 05210900
&SWM     SETB  1                    INDICATE MSG TYPE SPECIFIED  X02050 05220600
         AGO   .TYPCHK2                                          X02050 05230300
.TYPCHK1 ANOP                       QID WAS NOT SPECIFIED        X02050 05240000
         AIF   (T'&MSGTYP EQ 'O').SETNCLR  IF MSGTYP KEYWORD NOT USED  X05249700
                                                                 X02050 05259400
         AIF   ('&MSGTYP(1)' EQ 'N').SETNCLR  OR MSGTYP=N SPECIFIED,   X05269100
                                    THEN SKIP MSGTYPE PROCESSING        05278800
.TYPCHK2 ANOP                       CHECK ALL MSGTYPE INFO       X02050 05288500
&SWM     SETB  1                    INDICATE MSGTYPE SPECIFIED   X02007 05298200
&N       SETA  1                                                        05307900
         AIF   ('&MSGTYP(1)' EQ 'Y' OR '&MSGTYP(1)' EQ 'N').SETNCLR IF X05317600
                                    MSGTYPE=Y OR N SPECIFIED, THEN WE  X05327300
                                    ARE DONE WITH MSGTYPE PROCESSING    05337000
&I       SETA  1                    INITIALIZE INDEX COUNTER            05346700
.* THE FOLLOWING TABLE CONTAINS VALID MESSAGE TYPE VALUES BESIDE Y OR N 05356400
&CFLG(1) SETC  'JOBNAMES'                                               05366100
&CFLG(2) SETC  'STATUS'                                                 05375800
&CFLG(3) SETC  'ACTIVE'                                          X02007 05385500
&CFLG(4) SETC  ''                                                       05395200
&CFLG(5) SETC  'SHOW'                                              CRJE 05404900
&CFLG(6) SETC  'SESS'                                            20034  05414600
.*   DETERMINE WHICH MESSAGE TYPE VALUES WERE SPECIFIED BY COMPARING    05424300
.*   THEM WITH THE TABLE OF VALID VALUES DECLARED ABOVE AND SETTING     05434000
.*   THE VALUES IN BIT STRING B. IF AN INVALID MSGTYPE VALUE IS         05443700
.*   SPECIFIED, AN MNOTE IS ISSUED AND MSGTYPE=N (NO MESSAGE TYPE)      05453400
.*   IS ASSUMED.                                                        05463100
.TCHK    AIF   ('&MSGTYP(&I)' EQ '&CFLG(&N)').SETTYP  COMPARE AGAINST  X05472800
                                  THE NEXT TABLE ENTRY. IF A MATCH,    X05482500
                                  SET MSGTYPE VALUE IN BITSTRING        05492200
&N       SETA  &N+1               INCREMENT TABLE INDEX                 05501900
         AIF   (&N LE 8).TCHK     TEST AGAINST NEXT VALUE IN TABLE      05511600
         MNOTE 4,'MSGTYP FIELD INVALID. N IS ASSUMED'                   05521300
&N       SETA  1                  INITIALIZE MSGTYPE TABLE INDEX X02007 05531000
&I       SETA  5                  SET INDEX TO INDICATE MSGTYPE  X02007 05540700
&SWM     SETB  0                  INDICATE NO MESSAGE TYPE       X02007 05550400
         AGO   .CLR               CLEAR OUT BIT STRING B         X02007 05560100
.SETTYP  AIF   ('&CFLG(&N)' EQ '').ADDIT  IF THIS MSGTYPE VALUE WAS    X05569800
                                  NULL, DONT SET ANY INDICATOR          05579500
&B(&N)   SETB 1                   INDICATE WHICH MSGTYPE VALUE GIVEN    05589200
.ADDIT   ANOP                     SET UP TO CHECK NEXT MSGTYPE VALUE    05598900
&I       SETA  &I+1               INCREMENT MSGTYPE LIST COUNTER        05608600
&N       SETA  1                  RESET MSGTYPE VALUE TABLE INDEX       05618300
         AIF   (&I LE N'&MSGTYP).TCHK IF MORE MSGTYPE PARAMETERS TO    X05628000
                                  CHECK, GO TO CHECK WHAT NEXT ONE IS   05637700
&I       SETA  5                  DONE WITH MSGTYPE. SET FIELD INDEX    05647400
         AGO   .SETNCLR           SET IN MSGTYPE SAVE FIELD             05657100
.********************************************************************** 05666800
.*  DETERMINE WHICH MCSFLAG PARAMETERS WERE SPECIFIED                   05676500
.********************************************************************** 05686200
.FLGCHK0 ANOP                     FIRST SET MCSFLAG BITS THAT WERE NOT X05695900
                                  DETERMINED VIA THE MCSFLAG KEYWORD    05705600
&B(1)    SETB  (&IHBMCS)          MCSFLAG FOR ROUT/DESC CODES  @YA17152 05715300
&B(4)    SETB  (&SWM)             MCSFLAG FOR MESSAGE TYPE FLAGS        05725000
&B(10)   SETB  (&MLW)             MCSFLAG FOR MULTI-LINE         X02007 05734700
&B(12)   SETB  (&IWPXBIT)         MCSFLAG FOR WPX EXISTENCE        @L2A 05744400
&I       SETA  7                  SET INDEX TO INDICATE MCSFLAG FIELD   05754100
.********************************************************************** 05763800
.*  NOW DETERMINE WHICH MCSFLAG KEYWORD VALUES WERE SPECIFIED           05773500
.********************************************************************** 05783200
         AIF   (T'&MCSFLAG EQ 'O').SETNCLR IF NO OTHER MCSFLAG         X05792900
                                  PROCESSING TO PERFORM, THEN SET BITS X05802600
                                  THAT ARE ALREADY INDICATED            05812300
&I       SETA  1                                                        05822000
&N       SETA  1                                                        05831700
.* THE FOLLOWING TABLE CONTAINS ALL VALID MCSFLAG VALUES                05841400
&CFLG(1) SETC  'REG0'                                                   05851100
&CFLG(2) SETC  'RESP'                                                   05860800
&CFLG(3) SETC  ''                                                       05870500
&CFLG(4) SETC  'REPLY'                                                  05880200
&CFLG(5) SETC  'BRDCST'                                                 05889900
&CFLG(6) SETC  'HRDCPY'                                                 05899600
&CFLG(7) SETC  'QREG0'                                                  05909300
&CFLG(8) SETC  'NOTIME'                                                 05919000
&CFLG(12) SETC 'CMD'                                               @L1A 05928700
&CFLG(13) SETC 'NOCPY'                                                  05938400
&CFLG(16) SETC 'BUSYEXIT'                                          @L2A 05948100
.*   DETERMINE WHICH MCSFLAG VALUES WERE SPECIFIED BY COMPARING         05957800
.*   THEM WITH THE TABLE OF VALID VALUES DECLARED ABOVE AND SETTING     05967500
.*   THE VALUES IN BIT STRING B. IF AN INVALID MCSFLAG VALUE IS         05977200
.*   SPECIFIED, AN MNOTE IS ISSUED AND THAT VALUE IS IGNORED.           05986900
.FLGCHK  AIF   ('&MCSFLAG(&I)' EQ '&CFLG(&N)').SETFLG  TABLE MATCH?     05996600
&N       SETA  &N+1                    NO MATCH. INCREMENT INDEX        06006300
         AIF   (&N LE 17).FLGCHK       CHECK AGAINST NEXT VALUE    @L4C 06016000
         MNOTE 4,'MCSFLAG= &MCSFLAG(&I) IS INVALID. IT IS IGNORED.'     06025700
         AGO   .ADDI                   INVALID MCSFLAG VALUE. IGNORE   X06035400
                                       AND CHECK NEXT VALUE.            06045100
.SETFLG  AIF   ('&CFLG(&N)' EQ '' OR                                   X06054800
                '&CFLG(&N)' EQ 'BUSYEXIT').ADDI IF EITHER NULL OR      X06064500
                                       BUSYEXIT, DONT SET ANY BIT  @D2C 06074200
&B(&N+1) SETB  1                       INDICATE WHICH MCSFLAG SPECIFIED 06083900
.ADDI    ANOP                          SET UP TO CHECK NEXT VALUE       06093600
&I       SETA  &I+1                    INCREMENT COUNTER                06103300
&N       SETA  1                       RESET MCSFLAG TABLE INDEX        06113000
         AIF   (&I LE N'&MCSFLAG).FLGCHK CHECK NEXT MCSFLAG VALUE IF   X06122700
                                       THERE ARE MORE TO CHECK          06132400
         AIF   (&B(7) AND '&SYNCH(1)' EQ 'YES').ERROR6  CHECK FOR      +06142100
                                       MUTUALLY EXCLUSIVE SITUATION    +06151800
                                       SYNCH=YES/MCSFLAG=HRDCPY    @L6A 06161500
         AIF   (&B(7) AND &B(14)).MUTEXC  IF MUTUALLY EXCLUSIVE        X06171200
                                       MCSFLAGS SPECIFIED, ISSUE MNOTE  06180900
         AGO   .SETTER                 NO MUTUALLY EXCLUSIVE PROBLEM    06190600
.MUTEXC  ANOP                          MUTUALLY EXCLUSIVE MCSFLAGS      06200300
&B(14)   SETB  0                       NULLIFY THE 'NOCPY' BIT          06210000
         MNOTE 4,'HRDCPY AND NOCPY MUTUALLY EXCLUSIVE. MCSFLAG=HRDCPY AX06219700
               SSUMED.'                                            @L2C 06229400
.SETTER  ANOP                          DONE WITH MCSFLAG PROCESSING     06239100
&I       SETA  7                       SET INDEX TO INDICATE MCSFLAG    06248800
         AGO   .SETNCLR                SET SPECIFIED MCSFLAGS           06258500
.********************************************************************** 06268200
.*                                                                 @L2A 06277900
.*   PERFORM THE FOLLOWING PROCESSING FOR A MULTI-LINE WTO              06287600
.*                                                                 @L2A 06297300
.********************************************************************** 06307000
.GENDCS  AIF   (NOT &MLW).NOTMLW1  IF NOT MULTI-LINE, SKIP DOWN  X02007 06316700
         AIF   ('&TEXT' NE '^').MLWT00                   CHECK LINE    X06326400
                                   TYPE AS SPECIFIED FOR TEXT KWD  @L5A 06336100
&H       SETA  1                   THIS IS A MULTI-LINE WTO      X02007 06345800
.********************************************************************** 06355500
.*                                                                 @L2A 06365200
.*   CHECK THE LINE TYPE FOR EACH LINE OF THE MULTI-LINE WTO            06374900
.*                                                                 @L2A 06384600
.********************************************************************** 06394300
         AIF   (&IHBWTOR).MLW01A1  COPY VALUES INTO VARIABLES      @L6A 06404000
&ILMEQU  SETC  '&SYSLIST(1,1)'     FIRST LINE TEXT OF WTO          @L6A 06413700
&ILTEQU  SETC  '&SYSLIST(1,2)'     FIRST LINE LINE TYPE            @L6A 06423400
&NUMML   SETA  N'&SYSLIST          TOTAL NUMBER OF LINES           @L6A 06433100
&NUMARG  SETA  N'&SYSLIST(1)       NUMBER OF ARGUMENTS             @L6A 06442800
         AGO   .MLW01A2            BYPASS WTOR SETTING             @L6A 06452500
.MLW01A1 ANOP                      COPIES FOR WTOR INVOCATION      @L6A 06462200
&ILMEQU  SETC  '&SYSLIST(1,1,1)'   FIRST LINE TEXT OF WTOR         @L6A 06471900
&ILTEQU  SETC  '&SYSLIST(1,1,2)'   FIRST LINE LINE TYPE            @L6A 06481600
&NUMML   SETA  N'&SYSLIST(1)       TOTAL NUMBER OF LINES           @L6A 06491300
&NUMARG  SETA  N'&SYSLIST(1,1)     NUMBER OF ARGUMENTS             @L6A 06501000
.MLW01A2 ANOP                                                      @L6A 06510700
         AIF   ('&ILMEQU' EQ '').MLW04 IF FIRST LINE NULL          @L6C 06520400
         AIF   (&NUMARG GT 2).MLW05    INVALID LINE TYPE?          @L6C 06530100
         AIF   ('&ILTEQU' NE 'C').MLW02  NOT CONTROL LINE?         @L6C 06539800
&LT(1)   SETA  80                  INDICATE CONTROL LINE         X02007 06549500
.MLW01   AIF   (&NUMML  LE &H).MLW11   ANY MORE LINES?             @L6C 06559200
&H       SETA  &H+1                MORE LINES TO PROCESS         X02007 06568900
         AIF   (&IHBWTOR).MLW01A3  RESET FOR NEXT WTO LINE         @L6A 06578600
&ILMEQU  SETC  '&SYSLIST(&H,1)'    LINE OF TEXT                    @L6A 06588300
&ILTEQU  SETC  '&SYSLIST(&H,2)'    LINE TYPE FOR LINE              @L6A 06598000
&NUMARG  SETA  N'&SYSLIST(&H)      NUMBER OF ARGUMENTS             @L6A 06607700
         AGO   .MLW01A4                                            @L6A 06617400
.MLW01A3 ANOP                      RESET FOR NEXT WTOR LINE        @L6A 06627100
&ILMEQU  SETC  '&SYSLIST(1,&H,1)'  LINE OF TEXT                    @L6A 06636800
&ILTEQU  SETC  '&SYSLIST(1,&H,2)'  LINE TYPE FOR LINE              @L6A 06646500
&NUMARG  SETA  N'&SYSLIST(1,&H)    NUMBER OF ARGUMENTS             @L6A 06656200
.MLW01A4 ANOP                                                      @L6A 06665900
         AIF   (&NUMARG GT 2).MLW05  ERROR IF INVALID MULTI-           +06675600
                                   LINE TEXT STRUCTURE IS USED     @L6C 06685300
.MLW02   AIF   ('&ILTEQU' NE 'L' OR '&ILMEQU' EQ '').MLW04             +06695000
                                   JUMP IF THIS IS NOT A LABEL LINE    +06704700
                                   THAT HAS TEXT WITH IT           @L6C 06714400
&LT(&H)  SETA  40                  INDICATE VALID LABEL LINE     X02007 06724100
         AIF   (&SECONDL).MLW03    JUMP IF FIRST LINE PROCESSED  X02007 06733800
&SECONDL SETB  1                   INDICATE FIRST LINE PROCESSED X02007 06743500
         AGO   .MLW01              CHECK FOR MORE LINES          X02007 06753200
.MLW03   AIF   (&NUMML LE &H).MLW11 THIS IS AT LEAST LINE 2        @L6C 06762900
&H       SETA  &H+1                INCREMENT LINE INDEX          X02007 06772600
         AIF   (&IHBWTOR).MLW01A5  RESET FOR NEXT WTO LINE         @L6A 06782300
&ILMEQU  SETC  '&SYSLIST(&H,1)'    COPY LINE OF TEXT               @L6A 06792000
&ILTEQU  SETC  '&SYSLIST(&H,2)'    COPY LINE TYPE                  @L6A 06801700
&NUMARG  SETA  N'&SYSLIST(&H)      DETERMINE NUMBER OF ARGUMENTS   @L6A 06811400
         AGO   .MLW01A6                                            @L6A 06821100
.MLW01A5 ANOP                      RESET FOR NEXT WTOR LINE        @L6A 06830800
&ILMEQU  SETC  '&SYSLIST(1,&H,1)'  COPY LINE OF TEXT               @L6A 06840500
&ILTEQU  SETC  '&SYSLIST(1,&H,2)'  COPY LINE TYPE                  @L6A 06850200
&NUMARG  SETA  N'&SYSLIST(1,&H)    DETERMINE NUMBER OF ARGUMENTS   @L6A 06859900
.MLW01A6 ANOP                                                      @L6A 06869600
         AIF   (&NUMARG GT 2).MLW05  ERROR IF INVALID MULTI-LINE       +06879300
                                   TEXT STRUCTURE IS USED          @L6C 06889000
.MLW04   AIF   ('&ILTEQU' EQ 'E').MLW06  IF THIS IS AN END             +06898700
                                   LINE, JUMP AND SET INDICATOR    @L6C 06908400
         AIF   ('&ILMEQU' EQ '').MLW05   NOT AN END LINE. ERROR IF     +06918100
                                   TEXT FIELD IS NULL              @L6C 06927800
         AIF   ('&ILTEQU' EQ 'DE').MLW08   TEXT EXISTS. CHECK          +06937500
                                   FOR DATA-END LINE TYPE          @L6C 06947200
         AIF   ('&ILTEQU' EQ 'L' OR '&ILTEQU' EQ 'C').MLW09        @03C+06956900
                                   NOT DATA-END OR END. ERROR IF THIS  +06966600
                                   IS CONTROL OR LABEL LINE        @L6C 06976300
         AIF   ('&ILTEQU' NE 'D' AND '&ILTEQU' NE '').MLW10            +06986000
                                   ERROR IF INVALID LINE TYPE      @L6C 06995700
&LT(&H)  SETA  20                  INDICATE DATA LINE            X02007 07005400
         AGO   .MLW03              CHECK FOR MORE LINES          X02007 07015100
.MLW05   ANOP                      INVALID LINE TYPE SPECIFIED   X02007 07024800
&E5      SETB  1                   SET INVALID LINE TYPE FLAG    X02007 07034500
&LT(&H)  SETA  10                  ASSUME THIS IS AN END LINE    X02007 07044200
         AGO   .MLW11              DONE WITH ML PROCESSING       X02007 07053900
.MLW06   ANOP                      END LINE SPECIFIED            X02007 07063600
&LT(&H)  SETA  10                  INDICATE END LINE             X02007 07073300
.MLW07   ANOP                      END OR DATA-END INDICATED     X02007 07083000
&E4      SETB  (&H NE &NUMML)      ERROR IF NOT LAST LINE          @L6C 07092700
         AGO   .MLW11              DONE WITH MULTI-LINE CHECKS   X02007 07102400
.MLW08   ANOP                      DATA-END LINE SPECIFIED       X02007 07112100
&LT(&H)  SETA  30                  INDICATE DATA-END LINE        X02007 07121800
         AGO   .MLW07              CHECK IF THIS IS LAST LINE    X02007 07131500
.MLW09   ANOP                      INVALID C OR L LINETYPE       X02007 07141200
&E3      SETB  1                   SET ERROR INDICATOR           X02007 07150900
&LT(&H)  SETA  30                  ASSUME DATA-END LINE          X02007 07160600
         AGO   .MLW11              DO NO MORE MULTI-LINE CHECKS  X02007 07170300
.MLW10   ANOP                      INVALID LINE TYPE SPECIFIED   X02007 07180000
&E5      SETB  1                   SET ERROR INDICATOR           X02007 07189700
&LT(&H)  SETA  30                  ASSUME DATA-END LINE          X02007 07199400
.MLW11   ANOP                      END OF MULTI-LINE PROCESSING  X02007 07209100
&LLCNT   SETA  &H                  SET NUMBER OF LINES PROCESSED X02007 07218800
&H       SETA  1                   SET LINE COUNTER INDEX        X02007 07228500
         AGO   .NOTMLW1            CONTINUE                        @L5A 07238200
.MLWT00  ANOP                                                      @L5A 07247900
.********************************************************************** 07257600
.*                                                                 @L5A 07267300
.*   CHECK THE LINE TYPE FOR EACH LINE OF THE MULTI-LINE WTO       @L5A 07277000
.*   SPECIFIED WITH THE TEXT KEYWORD.                              @L5A 07286700
.*                                                                 @L5A 07296400
.********************************************************************** 07306100
&H       SETA  1                       FIRST MINOR LINE OF TEXT    @L5A 07315800
&VALH    SETC  '&TEXT'                 Get TEXT value              @06A 07319000
         AIF   ('&VALH'(2,1) NE '(').MLWT99 Only line paren group  @06A 07322200
&VALH    SETC  '&TEXT(1)'              EXTRACT FIRST LINE          @L5A 07325500
&VALH1   SETC  '&TEXT(&H,1)'           EXTRACT TEXT ADDRESS        @L5A 07335200
&VALH2   SETC  '&TEXT(&H,2)'           EXTRACT LINE TYPE           @L5A 07344900
&NUMML   SETA  N'&TEXT                 Total number of lines       @06A 07345600
         AGO   .MLWT98                                             @06A 07346300
.MLWT99  ANOP                          TEXT=(line,lt) specified    @06A 07347000
&VALH    SETC  '&TEXT'                 Extract line                @06A 07347700
&VALH1   SETC  '&TEXT(1)'              Extract text address        @06A 07348400
&VALH2   SETC  '&TEXT(2)'              Extract line type           @06A 07349100
&NUMML   SETA  1                       Total number of lines       @06A 07349800
.MLWT98  ANOP                                                      @06A 07350500
         AIF   ('&VALH1' EQ '' AND '&MF' NE 'L').MLWT04 BRANCH IF      X07351300
                              FIRST LINE NULL AND NOT LIST FORM    @PIC 07357700
         AIF   (N'&VALH GT 2).MLWT05   BRANCH IF INVALID LINE TYPE @L5A 07364300
         AIF   ('&VALH2' NE 'C').MLWT02 BRANCH IF NOT CONTROL LINE @L5A 07374000
&LT(1)   SETA  80                      INDICATE CONTROL LINE       @L5A 07383700
.MLWT01  AIF   (&NUMML LE &H).MLWT11 ANY MORE LINES?               @06C 07433700
&H       SETA  &H+1                MORE LINES TO PROCESS           @L5A 07490400
&VALH1   SETC  '&TEXT(&H,1)'           EXTRACT TEXT ADDRESS        @L5A 07500100
&VALH2   SETC  '&TEXT(&H,2)'           EXTRACT LINE TYPE           @L5A 07509800
         AIF   (N'&TEXT(&H)    GT 2).MLWT05 ERROR IF INVALID MULTI-    X07519500
                                   LINE TEXT STRUCTURE IS USED     @L5A 07529200
.MLWT02  AIF   ('&VALH2' NE 'L').MLWT04  JUMP IF THIS IS NOT A LABEL   X07534700
                                       LINE                        @PIA 07540200
         AIF   ('&VALH1' EQ '' AND '&MF' NE 'L').MLWT04                X07545700
                                   JUMP IF A NULL VALUE WAS SPECIFIED  X07551200
                                   FOR TEXT ADDRESS AND THIS IS NOT    X07556700
                                   A LIST FORM INVOCATION OF MACRO @PIC 07562200
&LT(&H)  SETA  40                  INDICATE VALID LABEL LINE       @L5A 07568000
         AIF   (&SECONDL).MLWT03   JUMP IF FIRST LINE PROCESSED    @L5A 07577700
&SECONDL SETB  1                   INDICATE FIRST LINE PROCESSED   @L5A 07587400
         AGO   .MLWT01             CHECK FOR MORE LINES            @L5A 07597100
.MLWT03  AIF   (&NUMML     LE &H).MLWT11 THIS IS AT LEAST LINE 2   @PQC 07606800
&H       SETA  &H+1                INCREMENT LINE INDEX            @L5A 07616500
&VALH1   SETC  '&TEXT(&H,1)'           EXTRACT TEXT ADDRESS        @L5A 07626200
&VALH2   SETC  '&TEXT(&H,2)'           EXTRACT LINE TYPE           @L5A 07635900
         AIF   (N'&TEXT(&H) GT 2).MLWT05 ERROR IF INVALID MULTI-       X07645600
                                   LINE TEXT STRUCTURE IS USED     @L5A 07655300
.MLWT04  AIF   ('&VALH2'         EQ 'E').MLWT06 IF THIS IS AN END      X07665000
                                   LINE, JUMP AND SET INDICATOR    @L5A 07674700
         AIF   ('&VALH1' EQ '' AND '&MF' NE 'L').MLWT05 ERROR IF TEXT  X07681900
                                   FIELD IS NULL AND NOT A LIST FORM   X07689100
                                   INVOCATION OF MACRO             @PIC 07696300
         AIF   ('&VALH2'         EQ 'DE').MLWT08  TEXT EXISTS. CHECK   X07703800
                                   FOR DATA-END LINE TYPE          @L5A 07713500
         AIF   ('&VALH2'   EQ 'L' OR '&VALH2'         EQ 'C').MLWT09   X07723200
                                   NOT DATA-END OR END. ERROR IF THIS  X07732900
                                   IS CONTROL OR LABEL LINE        @L5A 07742600
         AIF   ('&VALH2'   NE 'D' AND '&VALH2'         NE '').MLWT10   *07752300
                                   ERROR IF INVALID LINE TYPE      @L5A 07762000
&LT(&H)  SETA  20                  INDICATE DATA LINE              @L5A 07771700
         AGO   .MLWT03             CHECK FOR MORE LINES            @L5A 07781400
.MLWT05  ANOP                      INVALID LINE TYPE SPECIFIED     @L5A 07791100
&E5      SETB  1                   SET INVALID LINE TYPE FLAG      @L5A 07800800
&LT(&H)  SETA  10                  ASSUME THIS IS AN END LINE      @L5A 07810500
         AGO   .MLWT11             DONE WITH ML PROCESSING         @L5A 07820200
.MLWT06  ANOP                      END LINE SPECIFIED              @L5A 07829900
&LT(&H)  SETA  10                  INDICATE END LINE               @L5A 07839600
.MLWT07  ANOP                      END OR DATA-END INDICATED       @L5A 07849300
&E4      SETB  (&H NE &NUMML)      ERROR IF NOT LAST LINE          @PQC 07859000
         AGO   .MLWT11             DONE WITH MULTI-LINE CHECKS     @L5A 07868700
.MLWT08  ANOP                      DATA-END LINE SPECIFIED         @L5A 07878400
&LT(&H)  SETA  30                  INDICATE DATA-END LINE          @L5A 07888100
         AGO   .MLWT07             CHECK IF THIS IS LAST LINE      @L5A 07897800
.MLWT09  ANOP                      INVALID C OR L LINETYPE         @L5A 07907500
&E3      SETB  1                   SET ERROR INDICATOR             @L5A 07917200
&LT(&H)  SETA  30                  ASSUME DATA-END LINE            @L5A 07926900
         AGO   .MLWT11             DO NO MORE MULTI-LINE CHECKS    @L5A 07936600
.MLWT10  ANOP                      INVALID LINE TYPE SPECIFIED     @L5A 07946300
&E5      SETB  1                   SET ERROR INDICATOR             @L5A 07956000
&LT(&H)  SETA  30                  ASSUME DATA-END LINE            @L5A 07965700
.MLWT11  ANOP                      END OF MULTI-LINE PROCESSING    @L5A 07975400
&LLCNT   SETA  &H                  SET NUMBER OF LINES PROCESSED   @L5A 07985100
&H       SETA  1                   SET LINE COUNTER INDEX          @L5A 07994800
.********************************************************************** 08004500
.*                                                                 @L5A 08014200
.*   IF INLINE MESSAGE TEXT WAS SPECIFIED,                         @L5A 08023900
.*   CHECK FOR DOUBLE QUOTES OR AMPERSANDS (FOR SINGLE AND MULTI-  @L5A 08033600
.*   LINE WTO) AND ADJUST THE MESSAGE LENGTH FOR EACH PAIR FOUND   @L5A 08043300
.*                                                                 @L5A 08053000
.********************************************************************** 08062700
.NOTMLW1 ANOP                      TARGET FOR SINGLE-LINE WTO    X02007 08072400
         AIF   ('&TEXT' NE '^').QDONE0 BRANCH IF TEXT KEYWORD      @L5A 08082100
&I       SETA  1                   INITIALIZE INDEX              X02007 08091800
         AIF   (&IHBWTOR).NOTMLA1  IF WTOR CALL BYPASS WTO COPY    @L6A 08101500
&ILMEQU  SETC  '&SYSLIST(1,1)'     FIRST LINE OF WTO TEXT          @L6A 08111200
         AGO   .NOTMLA2            BYPASS WTOR COPY                @L6A 08120900
.NOTMLA1 ANOP                      WTOR, MAKE COPY OF LINE OF TEXT @L6A 08130600
&ILMEQU  SETC  '&SYSLIST(1,1,1)'   FIRST LINE OF WTOR TEXT         @L6A 08140300
.NOTMLA2 ANOP                                                      @L6A 08150000
&IHBLEN  SETA  K'&ILMEQU-2         SET MESSAGE TEXT LENGTH         @L6C 08159700
&PAIR    SETB  0                   INITIALIZE DOUBLE CHAR. BIT   X02007 08169400
.QLOOP1  ANOP                                                    X02007 08179100
&I       SETA  &I+1+&PAIR          INCREMENT TEXT INDEX          X02007 08188800
         AIF   (&I GE K'&ILMEQU).QDONE1 IF END OF TEXT             @L6C 08198500
&PAIR    SETB  ('&ILMEQU'(&I,2) EQ '''''' OR '&ILMEQU'(&I,2) EQ '&&')  +08208200
                                   CHECK FOR DOUBLE QUOTES OR          +08217900
                                   AMPERSANDS                      @L6C 08227600
&IHBLEN  SETA  &IHBLEN-&PAIR       IF FOUND, DECREMENT TEXT LENGTH     X08237300
                                   BY 1                        @YA17152 08247000
         AGO   .QLOOP1             CHECK REST OF TEXT            X02007 08256700
.QDONE0  ANOP                      TEXT KEYWORD INSTEAD OF INLINE  @L5A 08266400
&AD      SETB  (&LT(1) NE 10)      0 IF E-TYPE LINE, 1 IF NOT      @L5A 08276100
&IHBLEN  SETA  8                   LENGTH OF ADDR PLUS PREFIX      @PLC 08285800
         AGO   .PARMGEN            BEGIN PARMLIST GENERATION       @L5A 08295500
.QDONE1  ANOP                      SEARCHED ENTIRE TEXT FIELD    X02007 08305200
&AD      SETB  (&LT(1) NE 10)      0 IF E-TYPE LINE, 1 IF NOT    X02007 08314900
&IHBLEN  SETA  4+&IHBLEN*&AD                                   @YA17152 08324600
.********************************************************************** 08334300
.*                                                                 @PGA 08334500
.*  CHECK IF INLINE TEXT LENGTH EXCEEDS THE DOCUMENTED MAXIMUM:    @PGA 08334700
.* - MULTI-LINE: CONTROL LINE CAN BE UP TO 35 CHARS                @PGA 08334900
.* - MULTI-LINE: OTHER LINE TYPES CAN BE UP TO 71 CHARS            @PGA 08335100
.* - SINGLE-LINE WTO: CAN BE UP TO 125 CHARS                       @PGA 08335300
.* - SINGLE-LINE WTOR: CAN BE UP TO 122 CHARS                      @PGA 08335500
.*  IF LINE IS TOO LONG, ISSUE INFORMATIONAL MNOTE AND TRUNCATE    @PMC 08335600
.*    LINE                                                         @PMA 08335700
.*                                                                 @PGA 08335900
.********************************************************************** 08336100
.CHKCL   AIF   (&MLW AND &LT(1) EQ 80 AND                              X08336300
                &IHBLEN GT &MAXCLLN+4).BADCL  CHECK CONTROL LINE   @PGA 08336500
.CHKML   AIF   (&MLW AND &LT(1) NE 80 AND                              X08336700
                &IHBLEN GT &MAXMLLN+4).BADML  CHECK OTHER ML LINES @PGA 08336900
.CHKSL   AIF   (NOT &MLW AND NOT &IHBWTOR AND                          X08337100
                &IHBLEN GT &MAXSLLN+4).BADSL  CHECK SL WTO         @PGA 08337300
.CHKSR   AIF   (&MLW OR NOT &IHBWTOR OR                                X08337500
                &IHBLEN LE &MAXSRLN+4).PARMGEN  CHECK SL WTOR      @PGA 08337700
&IHBLEN  SETA  &MAXSRLN+4             TRUNCATE SL WTOR LENGTH      @PGA 08337900
         AGO   .LNGTSL1               GO ISSUE MNOTE               @PGA 08338100
.BADCL   ANOP                         CONTROL LINE TOO LONG        @PGA 08338300
&IHBLEN  SETA  &MAXCLLN+4             TRUNCATE CONTROL LINE LENGTH @PGA 08338500
         AGO   .LNGTML1               GO ISSUE MNOTE               @PGA 08338700
.BADML   ANOP                         MULTI-LINE TOO LONG          @PGA 08338900
&IHBLEN  SETA  &MAXMLLN+4             TRUNCATE MULTI-LINE LENGTH   @PGA 08339100
         AGO   .LNGTML1               GO ISSUE MNOTE               @PGA 08339300
.BADSL   ANOP                         SL WTO TOO LONG              @PGA 08339500
&IHBLEN  SETA  &MAXSLLN+4             TRUNCATE SL WTO LENGTH       @PGA 08339700
.LNGTSL1 ANOP                         ISSUE SINGLE-LINE MNOTE      @PGA 08339900
         MNOTE 0,'INLINE TEXT EXCEEDS ALLOWED MAXIMUM. TEXT LINE HAS BEX08340100
               EN TRUNCATED.'                                      @PMC 08340300
         AGO   .CHOPIT                GO TRUNCATE THE ACTUAL TEXT  @PGA 08340500
.LNGTML1 ANOP                         ISSUE MULTI-LINE MNOTE       @PGA 08340700
         MNOTE 0,'INLINE TEXT EXCEEDS ALLOWED MAXIMUM. TEXT LINE NUMBERX08340900
                1 HAS BEEN TRUNCATED.'                             @PMC 08341100
.CHOPIT  ANOP                          TRUNCATE THE TEXT           @PGA 08341300
&ILMEQU  SETC  '&ILMEQU'(1,&IHBLEN-3)  CHOP DOWN TO MAX LENGTH     @PGA 08341500
&ILMEQU  SETC  '&ILMEQU'.''''          PUT BACK THE ENDING QUOTE   @PGA 08341700
.********************************************************************** 08341900
.*   BEGIN PARAMETER LIST GENERATION UNLESS THIS IS A WTOR         @L2A 08344000
.*   WHERE A WPX DOES NOT EXIST. IN THIS SITUATION, THE WTOR       @L2A 08353700
.*   MACRO WILL GENERATE THE PARAMETER LIST.                       @L2A 08363400
.********************************************************************** 08373100
.PARMGEN ANOP                      PARAMETER LIST GENERATION       @L5C 08382800
         AIF   (&IHBWTOR AND NOT &IWPXBIT).END    DONE IF WTOR WITHOUT X08392500
                                                  A WPX            @L2C 08402200
         DC    AL2(&IHBLEN)             TEXT LENGTH            @YA17152 08411900
         DC    B'&CD(7)&CD(8)'          MCSFLAGS                        08421600
         AIF   ('&MESG' NE '').DCTEXT   INLINE TEXT IN PARMLIST    @L5A 08431300
.********************************************************************** 08441000
.*       INLINE TEXT NOT SPECIFIED. DECLARE TEXT ADDRESS FIELD     @L5A 08450700
.********************************************************************** 08460400
         DC    AL4(0)                   MESSAGE TEXT ADDRESS       @L5A 08470100
         AGO   .SKIPDC             CHECK FOR WPX BUILD             @L5A 08479800
.DCTEXT  ANOP                      PLACE INLINE TEXT IN PARMLIST   @L5A 08489500
         AIF   (&IHBLEN EQ 4).SKIPDC NO TEXT, SKIP THE TEXT DC @YA17152 08499200
         DC    C&ILMEQU                 MESSAGE TEXT               @L6C 08508900
.SKIPDC  AIF   (&IWPXBIT).WPXKEYS  IF WPX IS TO BE BUILT, THEN         X08518600
                                   GENERATE THAT RATHER THAN THE REST  X08528300
                                   OF THE OLD-FORMAT WPL           @L2A 08538000
.********************************************************************** 08547700
.*   GENERATING AN OLD-FORMAT WPL. DETERMINE WHETHER TO            @L2A 08557400
.*   GENERATE MORE FIELDS                                          @L2A 08567100
.********************************************************************** 08576800
         AIF   (NOT &IHBMCS).GENML                             @YA17152 08586500
         DC    B'&CD(1)&CD(2)'          DESCRIPTOR CODES                08596200
         DC    B'&CD(3)&CD(4)'          ROUTING CODES                   08605900
         AIF   ('&MSGTYP(1)' NE 'Y' AND NOT &SWM).GENML            @L2C 08615600
         DC    B'&CD(5)&CD(6)'          MESSAGE TYPE                    08625300
         AIF   (T'&QID EQ 'O' OR '&QID(1)' EQ 'N').GENML           @L2C 08635000
         AIF   (T'&QID EQ 'N').GENDCS1                           X02050 08644700
         AIF   ('&QID(1)' EQ 'Y').GENDCS0                        X02050 08654400
         MNOTE 4,'QID FIELD IS INVALID. ZERO ASSUMED.'                  08664100
.GENDCS0 ANOP                                                    X02050 08673800
         DC    AL2(0)                   QID FIELD                X02050 08683500
         AGO   .GENML                                              @L2C 08693200
.GENDCS1 ANOP                                                    X02050 08702900
         DC    AL2(&QID)                QID FIELD                X02050 08712600
         AGO   .GENML                   GO TO MULTI-LINE SECTION   @L2A 08722300
.WPXKEYS ANOP                           GENERATE A WPX             @L2A 08732000
.********************************************************************** 08741700
.*  A WPX IS TO BE GENERATED. FIRST CONVERT THE OBTAINED           @L2A 08751400
.*  ROUTING CODES TO HEXADECIMAL                                   @L2A 08761100
.********************************************************************** 08770800
&DCRC    SETC  ''                   INITIALIZE ROUTING CODE FIELD  @L2A 08780500
&I       SETA  -3                   INITIALIZE ROUTING CODE INDEX  @L2A 08790200
.CNVLOOP ANOP                       TOP OF CONVERSION LOOP         @L2A 08799900
&I       SETA  &I+4                 INCREMENT INDEX TO NEXT ROUTING    X08809600
                                    CODE NIBBLE (GROUP OF 4 BITS)  @L2A 08819300
         AIF   (&I GT 125).ENDCNV   IF DONE CONVERTING, SET EXTENDED   X08829000
                                    MCSFLAGS                       @L2A 08838700
&RNIBBLE SETC  '&RB(&I)&RB(&I+1)&RB(&I+2)&RB(&I+3)'  DEFINE ROUTING    X08848400
                                    CODE NIBBLE (4 BITS)           @L2A 08858100
         AIF   ('&RNIBBLE' NE '0000').TRY1  TEST FOR '0000'        @L2A 08867800
&DCRC    SETC  '&DCRC'.'0'                  APPEND '0' ONTO FIELD  @L2A 08877500
         AGO   .CNVLOOP                                            @L2A 08887200
.TRY1    AIF   ('&RNIBBLE' NE '0001').TRY2  TEST FOR '0001'        @L2A 08896900
&DCRC    SETC  '&DCRC'.'1'                  APPEND '1' ONTO FIELD  @L2A 08906600
         AGO   .CNVLOOP                                            @L2A 08916300
.TRY2    AIF   ('&RNIBBLE' NE '0010').TRY3  TEST FOR '0010'        @L2A 08926000
&DCRC    SETC  '&DCRC'.'2'                  APPEND '2' ONTO FIELD  @L2A 08935700
         AGO   .CNVLOOP                                            @L2A 08945400
.TRY3    AIF   ('&RNIBBLE' NE '0011').TRY4  TEST FOR '0011'        @L2A 08955100
&DCRC    SETC  '&DCRC'.'3'                  APPEND '3' ONTO FIELD  @L2A 08964800
         AGO   .CNVLOOP                                            @L2A 08974500
.TRY4    AIF   ('&RNIBBLE' NE '0100').TRY5  TEST FOR '0100'        @L2A 08984200
&DCRC    SETC  '&DCRC'.'4'                  APPEND '4' ONTO FIELD  @L2A 08993900
         AGO   .CNVLOOP                                            @L2A 09003600
.TRY5    AIF   ('&RNIBBLE' NE '0101').TRY6  TEST FOR '0101'        @L2A 09013300
&DCRC    SETC  '&DCRC'.'5'                  APPEND '5' ONTO FIELD  @L2A 09023000
         AGO   .CNVLOOP                                            @L2A 09032700
.TRY6    AIF   ('&RNIBBLE' NE '0110').TRY7  TEST FOR '0110'        @L2A 09042400
&DCRC    SETC  '&DCRC'.'6'                  APPEND '6' ONTO FIELD  @L2A 09052100
         AGO   .CNVLOOP                                            @L2A 09061800
.TRY7    AIF   ('&RNIBBLE' NE '0111').TRY8  TEST FOR '0111'        @L2A 09071500
&DCRC    SETC  '&DCRC'.'7'                  APPEND '7' ONTO FIELD  @L2A 09081200
         AGO   .CNVLOOP                                            @L2A 09090900
.TRY8    AIF   ('&RNIBBLE' NE '1000').TRY9  TEST FOR '1000'        @L2A 09100600
&DCRC    SETC  '&DCRC'.'8'                  APPEND '8' ONTO FIELD  @L2A 09110300
         AGO   .CNVLOOP                                            @L2A 09120000
.TRY9    AIF   ('&RNIBBLE' NE '1001').TRYA  TEST FOR '1001'        @L2A 09129700
&DCRC    SETC  '&DCRC'.'9'                  APPEND '9' ONTO FIELD  @L2A 09139400
         AGO   .CNVLOOP                                            @L2A 09149100
.TRYA    AIF   ('&RNIBBLE' NE '1010').TRYB  TEST FOR '1010'        @L2A 09158800
&DCRC    SETC  '&DCRC'.'A'                  APPEND 'A' ONTO FIELD  @L2A 09168500
         AGO   .CNVLOOP                                            @L2A 09178200
.TRYB    AIF   ('&RNIBBLE' NE '1011').TRYC  TEST FOR '1011'        @L2A 09187900
&DCRC    SETC  '&DCRC'.'B'                  APPEND 'B' ONTO FIELD  @L2A 09197600
         AGO   .CNVLOOP                                            @L2A 09207300
.TRYC    AIF   ('&RNIBBLE' NE '1100').TRYD  TEST FOR '1100'        @L2A 09217000
&DCRC    SETC  '&DCRC'.'C'                  APPEND 'C' ONTO FIELD  @L2A 09226700
         AGO   .CNVLOOP                                            @L2A 09236400
.TRYD    AIF   ('&RNIBBLE' NE '1101').TRYE  TEST FOR '1101'        @L2A 09246100
&DCRC    SETC  '&DCRC'.'D'                  APPEND 'D' ONTO FIELD  @L2A 09255800
         AGO   .CNVLOOP                                            @L2A 09265500
.TRYE    AIF   ('&RNIBBLE' NE '1110').SETFOX TEST FOR '1110'       @L2A 09275200
&DCRC    SETC  '&DCRC'.'E'                  APPEND 'E' ONTO FIELD  @L2A 09284900
         AGO   .CNVLOOP                                            @L2A 09294600
.SETFOX  ANOP                               MUST BE '1111'         @L2A 09304300
&DCRC    SETC  '&DCRC'.'F'                  APPEND 'F' ONTO FIELD  @L2A 09314000
         AGO   .CNVLOOP                                            @L2A 09323700
.ENDCNV  ANOP                       DONE WITH CONVERSION OF ROUTING    X09333400
                                    CODES                          @L2A 09343100
.********************************************************************** 09352800
.*  SET ON ANY EXTENDED MCSFLAGS THAT DO NOT CORRESPOND            @L2A 09362500
.*  TO THE SPECIFICATION OF A CERTAIN KEYWORD:                     @L2A 09372200
.********************************************************************** 09381900
&EMCS(5) SETB  (&IHBWTOR)               INDICATE WHETHER THIS IS A     X09391600
                                        WTOR WITH EXTENDED PLIST   @L2A 09401300
.********************************************************************** 09411000
.*  PROCESSING FOR THE MISCELLANEOUS FLAGS BYTE IS AS FOLLOWS:     @L2A 09420700
.*    - THE KEYWORDS ARE TO BE USED ON WTO INVOCATIONS ONLY        @L2A 09430400
.*    - ACCEPTABLE SUBSMOD VALUES ARE YES AND NO.                  @L2A 09440100
.*    - THE DEFAULT SUBSMOD VALUE IS NO.                           @L2A 09449800
.********************************************************************** 09459500
         AIF   (&IHBWTOR).ENDFLGS       IGNORE DATA IF WTOR        @L2A 09469200
.CHKSUBS ANOP                           CHECK SUBSMOD KEYWORD      @L2A 09478900
         AIF   ('&SUBSMOD' EQ '').ENDFLGS  IF NO DATA SPECIFIED,       X09488600
                                        DONE WITH KEYWORD          @L2A 09498300
&I       SETA  3                        DATA SPECIFIED. SET INDEX  @L2A 09508000
         AIF   ('&SUBSMOD' NE 'NO').SUBSYES  IF SUBSMOD=NO SPECIFIED,  X09517700
                                        SET APPROPRIATE BIT        @L2A 09527400
&MISCFLG(3) SETB 1                      INDICATE SUBSMOD=NO        @L2A 09537100
         AGO   .ENDFLGS                 DONE WITH MISCELLANEOUS FLAGS  X09546800
                                        BYTE                       @L2A 09556500
.SUBSYES ANOP                           CHECK FOR SUBSMOD=YES      @L2A 09566200
         AIF   ('&SUBSMOD' EQ 'YES').ENDFLGS IF SUBSMOD=YES SPECIFIED, X09575900
                                        SET NOTHING.               @L2A 09585600
         MNOTE 4,'SUBSMOD=YES ASSUMED. SPECIFIED SUBSMOD VALUE WAS NOT X09595300
               YES OR NO.'                                         @L2A 09605000
.ENDFLGS ANOP                           DONE WITH MISCELLANEOUS FLAGS  X09614700
                                        BYTE                       @L2A 09624400
&DCFLGS  SETC  '&MISCFLG(1)&MISCFLG(2)&MISCFLG(3)&MISCFLG(4)&MISCFLG(5)X09634100
               &MISCFLG(6)&MISCFLG(7)&MISCFLG(8)'                  @L2A 09643800
.********************************************************************** 09653500
.*  SET THE FOLLOWING EXTENDED MCS FLAGS:                          @L2A 09663200
.*   FLAG BYTE 1:                                                  @L5A 09672900
.*    - X'40': CONSID KEYWORD SPECIFIED                            @L2A 09682600
.*    - X'10': CONNECT KEYWORD SPECIFIED                           @L2A 09702000
.*    - X'04': PRTY KEYWORD SPECIFIED                              @L2A 09711700
.*    - X'02': CONSNAME KEYWORD SPECIFIED                          @L3A 09721400
.*   FLAG BYTE 2:                                                  @L5A 09731100
.*    - X'80': TEXT KEYWORD SPECIFIED                              @L5A 09740800
.*    - X'04': SYNCH=YES SPECIFIED                                 @L6A 09750500
.********************************************************************** 09760200
&EMCS(2) SETB  ('&CONSID'  NE '^')      IF CONSID KEYWORD SPECIFIED,   X09769900
                                        SET EXTENDED MCSFLAG       @L2A 09779600
&EMCS(4) SETB  ('&CONNECT' NE '^')      IF CONNECT KEYWORD SPECIFIED,  X09808700
                                        SET EXTENDED MCSFLAG       @L2A 09818400
&EMCS(6) SETB  ('&PRTY'    NE '^')      IF PRTY KEYWORD SPECIFIED,     X09828100
                                        SET EXTENDED MCSFLAG       @L2A 09837800
&EMCS(7) SETB  ('&CONSNAME' NE '^')     IF CONSNAME KEYWORD SPECIFIED, X09847500
                                        SET EXTENDED MCSFLAG       @L3A 09857200
&EMCS(9) SETB  ('&TEXT'    NE '^')      IF TEXT KEYWORD SPECIFIED,     X09866900
                                        SET EXTENDED MCSFLAG       @L5A 09876600
&EMCS(14) SETB ('&SYNCH(1)' EQ 'YES')   IF SYNCH=YES SPECIFIED,        +09886300
                                        SET EXTENDED MCSFLAG       @L6A 09896000
.********************************************************************** 09905700
.*                                                                 @L2A 09915400
.*      CHECK FOR INFORMATIONAL OR WARNING MNOTE SITUATIONS        @L2A 09925100
.*      CONCERNING RUN-TIME KEYWORDS.                              @L2A 09934800
.*                                                                 @L2A 09944500
.*      FOR A LIST FORM INVOCATION, IF ANY RUN-TIME WPX KEYWORDS   @L2A 09954200
.*      EXCEPT FOR THE TEXT KEYWORD                                @L5A 09963900
.*      ARE SPECIFIED WITH DATA, ISSUE AN INFORMATIONAL MNOTE:     @L2A 09973600
.*                                                                 @L2A 09983300
.*        'KKKKKKKK' DATA IGNORED ON THE LIST FORM OF WTO.         @L2A 09993000
.*                                                                 @L2A 10002700
.*            WHERE 'KKKKKKKK' MAY BE  CONNECT, CONSID, JOBNAME,   @L2A 10012400
.*            JOBID, PRTY, KEY, TOKEN, SYSNAME, CONSNAME,          @01C 10022100
.*            OR CART                                              @L4A 10031800
.*                                                                 @L2A 10041500
.********************************************************************** 10051200
         AIF   ('&MF' EQ 'I').SMNOTES   IF STANDARD FORM SPECIFIED,    X10060900
                                        CHECK FOR KEYWORD MNOTES   @L2A 10070600
         AIF   ('&CONNECT' EQ '^' OR                                   X10080300
                '&CONNECT' EQ '').LPRTY NO MNOTE IF NO DATA        @01C 10090000
         MNOTE 0,'''CONNECT'' DATA IGNORED ON THE LIST FORM OF WTO.'   X10099700
                                                                   @L2A 10148200
.LPRTY   AIF   ('&PRTY'    EQ '^' OR                                   X10157900
                '&PRTY'    EQ '').LJOBI NO MNOTE IF NO DATA        @L2A 10167600
         MNOTE 0,'''PRTY'' DATA IGNORED ON THE LIST FORM OF WTO.'      X10177300
                                                                   @L2A 10187000
.LJOBI   AIF   ('&JOBID'   EQ '^' OR                                   X10196700
                '&JOBID'   EQ '').LJOBN NO MNOTE IF NO DATA        @L2A 10206400
         MNOTE 0,'''JOBID'' DATA IGNORED ON THE LIST FORM OF WTO.'     X10216100
                                                                   @L2A 10225800
.LJOBN   AIF   ('&JOBNAME' EQ '^' OR                                   X10235500
                '&JOBNAME' EQ '').LKEY  NO MNOTE IF NO DATA        @L2A 10245200
         MNOTE 0,'''JOBNAME'' DATA IGNORED ON THE LIST FORM OF WTO.'   X10254900
                                                                   @L2A 10264600
.LKEY    AIF   ('&KEY'     EQ '^' OR                                   X10274300
                '&KEY'     EQ '').LTOKN NO MNOTE IF NO DATA        @L2A 10284000
         MNOTE 0,'''KEY'' DATA IGNORED ON THE LIST FORM OF WTO.'       X10293700
                                                                   @L2A 10303400
.LTOKN   AIF   ('&TOKEN'   EQ '^' OR                                   X10313100
                '&TOKEN'   EQ '').LCONS NO MNOTE IF NO DATA        @L2A 10322800
         MNOTE 0,'''TOKEN'' DATA IGNORED ON THE LIST FORM OF WTO.'     X10332500
                                                                   @L2A 10342200
.LCONS   AIF   ('&CONSID'  EQ '^' OR                                   X10351900
                '&CONSID'  EQ '').LCNAM NO MNOTE IF NO DATA        @L3C 10361600
         MNOTE 0,'''CONSID'' DATA IGNORED ON THE LIST FORM OF WTO.'    X10371300
                                                                   @L3A 10381000
.LCNAM   AIF   ('&CONSNAME'  EQ '^' OR                                 X10390700
                '&CONSNAME'  EQ '').LRCNA NO MNOTE IF NO DATA      @L3A 10400400
         MNOTE 0,'''CONSNAME'' DATA IGNORED ON THE LIST FORM OF WTO.'  X10410100
                                                                   @L3A 10419800
.LRCNA   AIF   ( NOT &IHBWTOR OR NOT &RCNSPEC  OR                      X10429500
                '&WTORCN'  EQ '').LSYSN NO MNOTE IF NO DATA        @L3A 10439200
         MNOTE 0,'''RPLYISUR'' DATA IGNORED ON THE LIST FORM OF WTO.'  X10448900
                                                                   @L3A 10458600
.LSYSN   AIF   ('&SYSNAME' EQ '^' OR                                   X10468300
                '&SYSNAME' EQ '').LCART  NO MNOTE IF NO DATA       @L4C 10478000
         MNOTE 0,'''SYSNAME'' DATA IGNORED ON THE LIST FORM OF WTO.'   X10487700
                                                                   @L2A 10497400
.LCART   AIF   ('&CART' EQ '^' OR                                      X10507100
                '&CART' EQ '').LLINK  NO MNOTE IF NO DATA          @P9C 10516800
         MNOTE 0,'''CART'' DATA IGNORED ON THE LIST FORM OF WTO.'      X10526500
                                                                   @L4A 10536200
.LLINK   ANOP                                                      @L6A 10545900
         AIF   ('&LINKAGE' EQ '^' OR                                   +10555600
                '&LINKAGE' EQ '').LWSPM     NO MNOTE IF NO DATA    @P9A 10565300
         MNOTE 0,'''LINKAGE'' DATA IGNORED ON THE LIST FORM OF WTO.'   +10575000
                                                                   @P9A 10584700
.LWSPM   ANOP                                                      @L6A 10594400
         AIF   ('&WSPARM'  EQ '^' OR                                   +10604100
                '&WSPARM(1)' EQ '0' OR                                 +10613800
                '&WSPARM'  EQ '').GENWPX    NO MNOTE IF NO DATA    @PAC 10623500
         MNOTE 0,'''WSPARM'' DATA IGNORED ON THE LIST FORM OF WTO.'    +10633200
                                                                   @L6A 10642900
         AGO   .GENWPX                                             @L2A 10652600
.********************************************************************** 10662300
.*                                                                 @L2A 10672000
.*      FOR A STANDARD FORM INVOCATION, IF ANY RUN-TIME KEYWORDS   @L2A 10681700
.*      ARE SPECIFIED WITHOUT DATA, ISSUE A WARNING MNOTE:         @L2A 10691400
.*                                                                 @L2A 10701100
.*        'KKKKKKKK' KEYWORD IGNORED. NO VALUE SPECIFIED.          @L2A 10710800
.*                                                                 @L2A 10720500
.*         WHERE 'KKKKKKKK' MAY BE  CONNECT, CONSID, JOBNAME,      @L2A 10730200
.*            JOBID, PRTY, KEY, TOKEN, SYSNAME, CONSNAME,          @01C 10739900
.*            WSPARM, OR CART.                                     @L6C 10749600
.*                                                                 @L2A 10759300
.********************************************************************** 10769000
.SMNOTES ANOP                                                      @L2A 10778700
         AIF   ('&CONNECT' NE '').SPRTY NO MNOTE IF DATA SPECIFIED @01C 10788400
         MNOTE 4,'''CONNECT'' KEYWORD IGNORED. NO VALUE SPECIFIED.'    X10798100
                                                                   @L2A 10807800
&EMCS(4) SETB  0                        TURN EXT MCSFLAG BACK OFF  @L2A 10817500
.SPRTY   AIF   ('&PRTY' NE '').SCART    NO MNOTE IF DATA SPECIFIED @L4C 10866000
         MNOTE 4,'''PRTY'' KEYWORD IGNORED. NO VALUE SPECIFIED.'       X10875700
                                                                   @L2A 10885400
&EMCS(6) SETB  0                        TURN EXT MCSFLAG BACK OFF  @L2A 10895100
.SCART   AIF   ('&CART' NE '').SJOBI    NO MNOTE IF DATA SPECIFIED @L4A 10904800
         MNOTE 4,'''CART'' KEYWORD IGNORED. NO VALUE SPECIFIED.'       X10914500
                                                                   @L4A 10924200
.SJOBI   AIF   ('&JOBID' NE '').SJOBN   NO MNOTE IF DATA SPECIFIED @L2A 10933900
         MNOTE 4,'''JOBID'' KEYWORD IGNORED. NO VALUE SPECIFIED.'      X10943600
                                                                   @L2A 10953300
.SJOBN   AIF   ('&JOBNAME' NE '').SKEY  NO MNOTE IF DATA SPECIFIED @L2A 10963000
         MNOTE 4,'''JOBNAME'' KEYWORD IGNORED. NO VALUE SPECIFIED.'    X10972700
                                                                   @L2A 10982400
.SKEY    AIF   ('&KEY' NE '').STOKN     NO MNOTE IF DATA SPECIFIED @L2A 10992100
         MNOTE 4,'''KEY'' KEYWORD IGNORED. NO VALUE SPECIFIED.'        X11001800
                                                                   @L2A 11011500
.STOKN   AIF   ('&TOKEN' NE '').SCONS   NO MNOTE IF DATA SPECIFIED @L2A 11021200
         MNOTE 4,'''TOKEN'' KEYWORD IGNORED. NO VALUE SPECIFIED.'      X11030900
                                                                   @L2A 11040600
.SCONS   AIF   ('&CONSID' NE '').SCNAM  NO MNOTE IF DATA SPECIFIED @L3C 11050300
         MNOTE 4,'''CONSID'' KEYWORD IGNORED. NO VALUE SPECIFIED.'     X11060000
                                                                   @L2A 11069700
&EMCS(2) SETB  0                        TURN EXT MCSFLAG BACK OFF  @L2A 11079400
.SCNAM   AIF   ('&CONSNAME' NE '').SRCNA  NO MNOTE IF DATA SPECIFIED   X11089100
                                                                   @L3A 11098800
         MNOTE 4,'''CONSNAME'' KEYWORD IGNORED. NO VALUE SPECIFIED.'   X11108500
                                                                   @L3A 11118200
&EMCS(7) SETB  0                        TURN EXT MCSFLAG BACK OFF  @L2A 11127900
.SRCNA   AIF   (NOT &IHBWTOR OR NOT &RCNSPEC OR                        X11137600
                '&WTORCN' NE '').SSYSN  NO MNOTE IF DATA SPECIFIED @L3A 11147300
         MNOTE 4,'''RPLYISUR'' KEYWORD IGNORED. NO VALUE SPECIFIED.'   X11157000
                                                                   @L3A 11166700
.SSYSN   AIF   ('&SYSNAME' NE '').SWSPRM NO MNOTE IF DATA GIVEN    @L6C 11176400
         MNOTE 4,'''SYSNAME'' KEYWORD IGNORED. NO VALUE SPECIFIED.'    X11186100
                                                                   @L2A 11195800
.SWSPRM  ANOP                                                      @L6A 11205500
         AIF   ('&WSPARM' NE '').SSYNC   NO MNOTE IF DATA GIVEN    @L6A 11215200
         MNOTE 4,'''WSPARM'' KEYWORD IGNORED. NO VALUE SPECIFIED.'     +11224900
                                                                   @L6A 11234600
.SSYNC   ANOP                                                      @L6A 11244300
         AIF   ('&SYNCH' NE '').GENWPX   NO MNOTE IF DATA GIVEN    @L6A 11254000
         MNOTE 4,'''SYNCH'' KEYWORD IGNORED. NO VALUE SPECIFIED.'  @L6A 11263700
&EMCS(14) SETB  0                       TURN EXT MCSFLAG BACK OFF  @L6A 11273400
.********************************************************************** 11283100
.*                                                                 @L2A 11292800
.*   BEGIN GENERATION OF THE WPX SECTION OF THE PARAMETER LIST     @L2A 11302500
.*                                                                 @L2A 11312200
.********************************************************************** 11321900
.GENWPX  ANOP                           GENERATE THE WPX           @L2A 11331600
         DC    AL1(&IWPXVER)            VERSION LEVEL              @PJC 11341300
         DC    B'&DCFLGS'               MISCELLANEOUS FLAGS        @L2A 11351000
.********************************************************************** 11360700
.*   PROCESSING FOR REPLY LENGTH (WTOR) IS AS FOLLOWS:             @L2A 11370400
.*     .WHEN LIST FORM IS SPECIFIED:                               @L2A 11380100
.*       - IF NO DATA SPECIFIED, GENERATE A VALUE OF 0             @L2A 11389800
.*       - IF DATA IS IN A REGISTER, ISSUE AN ERROR MESSAGE        @L2A 11399500
.*                 (THIS IS DONE BY THE WTOR MACRO)                @L2A 11409200
.*       - OTHERWISE, GENERATE WITH THE DATA SPECIFIED             @L2A 11418900
.*     .WHEN STANDARD FORM IS SPECIFIED:                           @L2A 11428600
.*       - IF NO DATA SPECIFIED, ISSUE AN ERROR MESSAGE            @L2A 11438300
.*                 (THIS IS DONE BY THE WTOR MACRO)                @L2A 11448000
.*       - IF DATA IS IN A REGISTER, GENERATE A VALUE OF 0. (THE   @L2A 11457700
.*            ACTUAL DATA WILL BE INSERTED LATER IN THE MACRO)     @L2A 11467400
.*       - OTHERWISE, GENERATE WITH THE DATA SPECIFIED             @L2A 11477100
.********************************************************************** 11486800
         AIF   (NOT &IHBWTOR).DCRL0     GEN ZERO IF NOT A WTOR     @L2A 11496500
         AIF   ('&MF' NE 'L').RLIFORM   BRANCH IF NOT LIST FORM    @L2A 11506200
         AIF   ('&WTOLENR' EQ '').DCRL0  LIST FORM GEN 0 IF NO         X11515900
                                         DATA                  @YA17152 11525600
         AGO   .DCRL                    NOT REG. GEN WITH THE DATA @L2A 11535300
.RLIFORM AIF   (&RLREG).DCRL0           GEN 0 IF DATA IN REG       @L2A 11545000
.DCRL    DC    AL1(&WTOLENR)            REPLY LENGTH           @YA17152 11554700
         AGO   .AFTERRL                 BUILD REST OF PARM LIST    @L2A 11564400
.DCRL0   DC    AL1(0)                   REPLY LENGTH               @L2A 11574100
.AFTERRL ANOP                           DONE WITH REPLY LENGTH     @L2A 11583800
.********************************************************************** 11593500
.*       THE FOLLOWING FIELD MUST BE UPDATED EACH TIME THE LENGTH  @L5A 11603200
.*       OF THE WPX CHANGES.                                       @L5A 11612900
.********************************************************************** 11622600
         AIF   ('&IWPXVER' EQ '2').WPXLEN2   DCL LENGTH, VER2 WPX  @PJA 11624500
         DC    AL1(0)                   RESERVED                   @PJA 11626400
         AGO   .WPXLENE                                            @PJA 11628300
.WPXLEN2 ANOP                                                      @PJA 11630200
         DC    AL1(104)                 LENGTH OF WPX              @L5C 11632300
.WPXLENE ANOP                           FINISHED WPX LENGTH DCL    @PJA 11637100
.********************************************************************** 11642000
.*   DEFINE DC FIELDS FOR EXTENDED MCSFLAGS                        @L2A 11651700
.********************************************************************** 11661400
&EM(1)   SETC  '&EMCS(1)&EMCS(2)&EMCS(3)&EMCS(4)&EMCS(5)&EMCS(6)&EMCS(7X11671100
               )&EMCS(8)'                                          @L2A 11680800
&EM(2)   SETC  '&EMCS(9)&EMCS(10)&EMCS(11)&EMCS(12)&EMCS(13)&EMCS(14)&EX11690500
               MCS(15)&EMCS(16)'                                   @L2A 11700200
         DC    B'&EM(1)&EM(2)'          EXTENDED MCS FLAGS         @L2A 11709900
         DC    AL2(0)                   RESERVED                   @L2A 11719600
.********************************************************************** 11729300
.*   PROCESSING FOR REPLY BUFFER ADDRESS (WTOR) IS AS FOLLOWS:     @P7A 11739000
.*   .WHEN LIST FORM IS SPECIFIED:                                 @P7A 11748700
.*     - IF NO DATA SPECIFIED, GENERATE A VALUE OF 0               @P7A 11758400
.*     - IF DATA IS IN A REGISTER, ISSUE AN ERROR MESSAGE          @P7A 11768100
.*               (THIS IS DONE BY THE WTOR MACRO)                  @P7A 11777800
.*     - OTHERWISE, GENERATE WITH THE DATA SPECIFIED               @P7A 11787500
.*   .WHEN STANDARD FORM IS SPECIFIED                              @P7A 11797200
.*     - IF NO DATA SPECIFIED, ISSUE AN ERROR MESSAGE              @P7A 11806900
.*               (THIS IS DONE BY THE WTOR MACRO)                  @P7A 11816600
.*     - IF DATA IS IN A REGISTER, GENERATE A VALUE OF 0. (THE     @P7A 11826300
.*          ACTUAL DATA WILL BE INSERTED LATER IN THE MACRO)       @P7A 11836000
.*     - OTHERWISE, GENERATE WITH THE DATA SPECIFIED               @P7A 11845700
.********************************************************************** 11855400
         AIF   (NOT &IHBWTOR).DCRA0     GEN ZERO IF NOT A WTOR     @P7A 11865100
         AIF   ('&MF' NE 'L').RAIFORM   BRANCH IF NOT LIST FORM    @P7A 11874800
         AIF   ('&WTORYA' EQ '').DCRA0  LIST FORM. GEN 0 IF NO DATA@P7A 11884500
         AGO   .DCRA                    NOT REG. GEN WITH THE DATA @P7A 11894200
.RAIFORM AIF   (&RAREG).DCRA0           GEN 0 IF DATA IN REG       @P7A 11903900
.DCRA    DC    AL4(&WTORYA)             REPLY BUFFER ADDRESS       @P7A 11913600
         AGO   .AFTERRA                 BUILD REST OF PARM LIST    @P7A 11923300
.DCRA0   DC    AL4(0)                   REPLY BUFFER ADDRESS       @P7C 11933000
.AFTERRA ANOP                           DONE WITH REPLY ADDRESS    @P7A 11942700
.********************************************************************** 11952400
.*   PROCESSING FOR REPLY ECB ADDRESS (WTOR) IS AS FOLLOWS:        @P7A 11962100
.*   .WHEN LIST FORM IS SPECIFIED:                                 @P7A 11971800
.*     - IF NO DATA SPECIFIED, GENERATE A VALUE OF 0               @P7A 11981500
.*     - IF DATA IS IN A REGISTER, ISSUE AN ERROR MESSAGE          @P7A 11991200
.*               (THIS IS DONE BY THE WTOR MACRO)                  @P7A 12000900
.*     - OTHERWISE, GENERATE WITH THE DATA SPECIFIED               @P7A 12010600
.*   .WHEN STANDARD FORM IS SPECIFIED                              @P7A 12020300
.*     - IF NO DATA SPECIFIED, ISSUE AN ERROR MESSAGE              @P7A 12030000
.*               (THIS IS DONE BY THE WTOR MACRO)                  @P7A 12039700
.*     - IF DATA IS IN A REGISTER, GENERATE A VALUE OF 0. (THE     @P7A 12049400
.*          ACTUAL DATA WILL BE INSERTED LATER IN THE MACRO)       @P7A 12059100
.*     - OTHERWISE, GENERATE WITH THE DATA SPECIFIED               @P7A 12068800
.********************************************************************** 12078500
         AIF   (NOT &IHBWTOR).DCEA0     GEN ZERO IF NOT A WTOR     @P7A 12088200
         AIF   ('&MF' NE 'L').EAIFORM   BRANCH IF NOT LIST FORM    @P7A 12097900
         AIF   ('&WTOECB' EQ '').DCEA0  LIST FORM. GEN 0 IF NO DATA@P7A 12107600
         AGO   .DCEA                    NOT REG. GEN WITH THE DATA @P7A 12117300
.EAIFORM AIF   (&EAREG).DCEA0           GEN 0 IF DATA IN REG       @P7A 12127000
.DCEA    DC    AL4(&WTOECB)             REPLY ECB ADDRESS          @P7A 12136700
         AGO   .AFTEREA                 BUILD REST OF PARM LIST    @P7A 12146400
.DCEA0   DC    AL4(0)                   REPLY ECB ADDRESS          @P7C 12156100
.AFTEREA ANOP                           DONE WITH ECB ADDRESS      @P7A 12165800
         DC    AL4(0)                   CONNECT ID                 @01C 12194900
         DC    B'&CD(1)&CD(2)'          DESCRIPTOR CODES           @L2A 12224000
         DC    AL2(0)                   RESERVED                   @L2A 12233700
         DC    XL16'&DCRC'              EXTENDED ROUTING CODES     @L2A 12243400
         DC    B'&CD(5)&CD(6)'          MESSAGE TYPE               @L2A 12253100
         DC    AL2(0)                   MESSAGE'S PRIORITY         @L2A 12262800
         DC    CL8'        '            JOB ID                     @L2A 12272500
         DC    CL8'        '            JOB NAME                   @L2A 12282200
         DC    CL8'        '            RETRIEVAL KEY              @L2A 12291900
         DC    AL4(0)                   TOKEN FOR DOM              @P1C 12301600
         DC    AL4(0)                   CONSOLE ID                 @P1C 12311300
         DC    CL8'        '            SYSTEM NAME                @L2A 12321000
         AIF   ('&IWPXVER' NE '1').GENWPX2                         @PJA 12322600
         DC    AL4(0)                   RESERVED                   @PJA 12324200
         DC    AL4(0)                   RESERVED                   @PJA 12325800
         AGO   .GENML                   FINISHED VER1 WPX          @PJA 12327400
.GENWPX2 ANOP                           VERSION 2 WPX FIELDS       @PJA 12329000
         DC    CL8'        '            CONSOLE NAME               @L3A 12330700
         DC    AL4(0)                   REPLY CONSOLE NAME/ID ADDR @L3A 12340400
         DC    AL4(0)                   CART ADDRESS               @L4C 12350100
.********************************************************************** 12359800
.*   WSPARM IS GENERATED AS ZERO UNLESS IT IS INLINE FORM          @PBA 12369500
.*   WITH A NON-NULL, NONZERO, NON-REGISTER VALUE.                 @PBA 12379200
.*   IT IS INITIALIZED IF INLINE FORM, NOT A REGISTER.             @PBA 12388900
.********************************************************************** 12398600
         AIF   ('&WSPARM' EQ '^' OR '&WSPARM(1)' EQ '').GENWS      @PBA 12408300
         AIF   ('&WSPARM(1)' EQ '0').GENWS                         @PBA 12418000
         AIF   ('&MF(1)' EQ 'L').GENWS                             @PBA 12427700
         AIF   ('&WSPARM'(1,1) EQ '(').GENWS                       @PBA 12437400
         DC    AL4(&WSPARM(1))          WSPARM ADDRESS             @PBA 12447100
         AGO   .GENML                                              @PBA 12456800
.GENWS   ANOP                                                      @PBA 12466500
         DC    AL4(0)                   WSPARM ADDRESS             @L6C 12476200
.********************************************************************** 12485900
.*   DONE WITH COMMON WPL OR WPX GENERATION.  IF THIS IS A         @L2A 12495600
.*   MULTI-LINE WTO, GENERATE THE MULTI-LINE INFORMATION SECTION   @L2A 12505300
.*   OF THE PARAMETER LIST.                                        @L2A 12515000
.********************************************************************** 12524700
.GENML   AIF   (NOT &MLW).NOTMLW2       SKIP THIS SECTION IF NOT A     X12534400
                                        MULTI-LINE WTO             @L2C 12544100
         AIF   ('&TEXT' NE '^').GENMLT  BRANCH IF TEXT KEYWORD USED    X12553800
                                                                   @L5A 12563500
         DC    XL2'&LT(1)00'            LINE TYPE                       12573200
         AIF   ('&AREAID' EQ '').ID0    GEN 0 IF NO AREA ID      X02007 12582900
         DC    CL1'&AREAID'             AREA ID                  X02007 12592600
         AGO   .IDA                     GO GENERATE LINE COUNT   X02007 12602300
.ID0     DC    X'00'                    AREA ID                         12612000
.IDA     ANOP                           GENERATE LINE COUNT      X02007 12621700
         DC    AL1(&LLCNT)              TOTAL NUMBER OF LINES    X02007 12631400
.MLW12   AIF   (&H GE &LLCNT).MLW14     DONE IF ALL LINES GENNED X02007 12641100
&H       SETA  &H+1                     INCREMENT LINE COUNTER   X02007 12650800
         AIF   (&IHBWTOR).MLW12A1       IF WTOR BYPASS WTO SETTING @L6A 12660500
&ILMEQU  SETC  '&SYSLIST(&H,1)'         SET TO NEXT LINE OF WTO    @L6A 12670200
         AGO   .MLW12A2                 BYPASS WTOR SETTING        @L6A 12679900
.MLW12A1 ANOP                           WTOR, SET VARIABLE         @L6A 12689600
&ILMEQU  SETC  '&SYSLIST(1,&H,1)'       SET TO NEXT LINE OF WTOR   @L6A 12699300
.MLW12A2 ANOP                                                      @L6A 12709000
&I       SETA  1                        INITIALIZE CHAR COUNTER  X02007 12718700
&IHBLEN  SETA  K'&ILMEQU-2              LENGTH OF CURRENT LINE     @L6C 12728400
&PAIR    SETB  0                        INITIALIZE NO PAIR FOUND X02007 12738100
.QLOOPH  ANOP                                                    X02007 12747800
&I       SETA  &I+1+&PAIR               INCREMENT CHAR COUNTER   X02007 12757500
         AIF   (&I GE K'&ILMEQU).QDONEH IF DONE WITH THIS LINE     @L6C 12767200
&PAIR    SETB  ('&ILMEQU'(&I,2) EQ '''''' OR '&ILMEQU'(&I,2) EQ '&&')  +12776900
                                        CHECK FOR DOUBLE QUOTE OR      +12786600
                                        DOUBLE AMPERSAND           @L6C 12796300
&IHBLEN  SETA  &IHBLEN-&PAIR            IF A PAIR FOUND, ADJUST LINE   X12806000
                                        LENGTH                 @YA17152 12815700
         AGO   .QLOOPH                  LOOK FOR MORE PAIRS      X02007 12825400
.QDONEH  ANOP                           DONE WITH CURRENT LINE   X02007 12835100
&AD      SETB  (&LT(&H) NE 10)          0 IF A NULL END LINE, 1 IF NOT X12844800
                                                                 X02007 12854500
&IHBLEN  SETA  4+&IHBLEN*&AD            SET TEXT LENGTH        @YA17152 12864200
.********************************************************************** 12864800
.*                                                                 @PGA 12865400
.*  CHECK IF INLINE TEXT LENGTH EXCEEDS THE DOCUMENTED MAXIMUM:    @PGA 12866000
.* - AT THIS POINT, WE MUST BE DEALING WITH A MULTI-LINE AND       @PGA 12866600
.* - NOT A CONTROL LINE, SO THE MAXIMUM LENGTH IS 71 CHARS.        @PGA 12867200
.*  IF LINE IS TOO LONG, ISSUE WARNING MNOTE AND TRUNCATE LINE     @PGA 12867800
.*                                                                 @PGA 12868400
.********************************************************************** 12869000
         AIF   (&IHBLEN LE &MAXMLLN+4).GENMORE  CHECK IF TOO LONG  @PGA 12869600
         MNOTE 0,'INLINE TEXT EXCEEDS ALLOWED MAXIMUM. TEXT LINE NUMBERX12870200
                &H HAS BEEN TRUNCATED.'                            @PNC 12870800
&IHBLEN  SETA  &MAXMLLN+4              SET NEW MAXIMUM LENGTH      @PGA 12871400
&ILMEQU  SETC  '&ILMEQU'(1,&IHBLEN-3)  TRUNCATE THE TEXT           @PGA 12872000
&ILMEQU  SETC  '&ILMEQU'.''''          PUT BACK ENDING QUOTE       @PGA 12872600
.GENMORE ANOP                          GENERATE NEXT LINE OF DCLS  @PGA 12873200
         DC    AL2(&IHBLEN)             MESSAGE LENGTH         @YA17152 12873900
         DC    XL2'&LT(&H)00'           LINE TYPE                       12883600
         AIF   (&IHBLEN EQ 4).MLW12     IF NO TEXT,DONT GEN IT @YA17152 12893300
         DC    C&ILMEQU                 MESSAGE TEXT               @L6C 12903000
         AGO   .MLW12                   CHECK NEXT LINE OF TEXT  X02007 12912700
.MLW14   AIF   (NOT &E4).MLW15                                   X02007 12922400
.********************************************************************** 12932100
.*       ISSUE ERROR MESSAGE:                                  @G860PSS 12941800
.* *,GENERATION TERMINATED BY E OR DE LINE TYPE                @G860PSS 12951500
.********************************************************************** 12961200
         IHBERMAC 242                                                   12970900
.MLW15   AIF   (NOT &E5).MLW17                                   X02007 12980600
.********************************************************************** 12990300
.*       ISSUE ERROR MESSAGE:                                  @G860PSS 13000000
.* 4,INVALID LINE TYPE, E OR DE ASSUMED                        @G860PSS 13009700
.********************************************************************** 13019400
         IHBERMAC 243                                                   13029100
.MLW17   AIF   (NOT &E3).NOTMLW2                                 X02007 13038800
.********************************************************************** 13048500
.*       ISSUE ERROR MESSAGE:                                  @G860PSS 13058200
.* 12,INVALID C OR L LINETYPE, DE ASSUMED--GENERATION TERMINATED        13067900
.********************************************************************** 13077600
         IHBERMAC 244                                                   13087300
         AGO   .NOTMLW2                 CONTINUE                   @L5A 13097000
.********************************************************************** 13106700
.*       GENERATE THE MULTILINE INFORMATION FOR THE PARAMETER LIST @L5A 13116400
.*       WHEN THE TEXT KEYWORD IS SPECIFIED                        @L5A 13126100
.********************************************************************** 13135800
.GENMLT  ANOP                                                      @L5A 13145500
&H       SETA  1                        INITIALIZE COUNTER         @L5A 13155200
         DC    XL2'&LT(1)00'            LINE TYPE                  @L5A 13164900
         AIF   ('&AREAID' EQ '').ID2    GEN 0 IF NO AREA ID        @L5A 13174600
         DC    CL1'&AREAID'             AREA ID                    @L5A 13184300
         AGO   .IDB                     GO GENERATE LINE COUNT     @L5A 13194000
.ID2     DC    X'00'                    AREA ID                    @L5A 13203700
.IDB     ANOP                           GENERATE LINE COUNT        @L5A 13213400
         DC    AL1(&LLCNT)              TOTAL NUMBER OF LINES      @L5A 13223100
.MLWT12  AIF   (&H GE &LLCNT).MLWT14    DONE IF ALL LINES GENNED   @L5A 13232800
&H       SETA  &H+1                     INCREMENT LINE COUNTER     @L5A 13242500
&AD      SETB  (&LT(&H) NE 10)          0 IF A NULL END LINE, 1 IF NOT X13252200
                                                                   @L5A 13261900
&IHBLEN  SETA  8                        SET TEXT LENGTH            @PLC 13271600
         DC    AL2(&IHBLEN)             MESSAGE LENGTH         @YA17152 13281300
         DC    XL2'&LT(&H)00'           LINE TYPE                  @L5A 13291000
         DC    AL4(0)                   TEXT ADDRESS               @L5A 13300700
         AGO   .MLWT12                  CHECK NEXT LINE OF TEXT    @L5A 13310400
.MLWT14  AIF   (NOT &E4).MLWT15                                    @L5A 13320100
.********************************************************************** 13329800
.*       ISSUE ERROR MESSAGE:                                      @L5A 13339500
.* *,GENERATION TERMINATED BY E OR DE LINE TYPE                    @L5A 13349200
.********************************************************************** 13358900
         IHBERMAC 242                                              @L5A 13368600
.MLWT15  AIF   (NOT &E5).MLWT17                                    @L5A 13378300
.********************************************************************** 13388000
.*       ISSUE ERROR MESSAGE:                                      @L5A 13397700
.* 4,INVALID LINE TYPE, E OR DE ASSUMED                            @L5A 13407400
.********************************************************************** 13417100
         IHBERMAC 243                                              @L5A 13426800
.MLWT17  AIF   (NOT &E3).NOTMLW2                                   @L5A 13436500
.********************************************************************** 13446200
.*       ISSUE ERROR MESSAGE:                                      @L5A 13455900
.* 12,INVALID C OR L LINETYPE, DE ASSUMED--GENERATION TERMINATED   @L5A 13465600
.********************************************************************** 13475300
         IHBERMAC 244                                              @L5A 13485000
.********************************************************************** 13494700
.*       THE DS INSTRUCTION THAT FOLLOWS IS NOT EXECUTED FOR       @L2A 13504400
.*       EITHER A LIST FORM WTO OR WTOR, OR A STANDARD             @L2A 13514100
.*       FORM WTOR WITHOUT A WPX. IN THIS CASE, THE WTOR           @L2A 13523800
.*       MACRO WILL GENERATE THE PARAMETER LIST AND WILL           @L2A 13533500
.*       THEN PERFORM THE DS INSTRUCTION.                          @L2A 13543200
.********************************************************************** 13552900
.NOTMLW2 ANOP                                                      @L5A 13562600
         AIF   ('&MF' EQ 'L' OR                                        X13572300
               (&IHBWTOR AND NOT &IWPXBIT)).END                    @L2C 13582000
&GNAME.A DS    0H                                                       13591700
         AIF   (NOT &IWPXBIT).SKIPMOD                              @L2A 13601400
.********************************************************************** 13611100
.*       A WPX EXISTS FOR THIS STANDARD FORM INVOCATION.           @L2A 13620800
.*       SET REGISTER 14 TO POINT TO THE FIRST BYTE AFTER          @L2A 13630500
.*       THE MESSAGE TEXT FIELD.                                   @L2A 13640200
.********************************************************************** 13649900
         LR    14,1                     FIRST BYTE OF PARM LIST    @L2A 13659600
         SR    15,15                    CLEAR REGISTER 15          @L2A 13669300
         AH    15,0(1,0)                ADD LENGTH OF TEXT + 4     @L2A 13679000
         AR    14,15                    FIRST BYTE AFTER TEXT      @L2A 13688700
.********************************************************************** 13698400
.*       IF THE TEXT KEYWORD IS SPECIFIED, INSERT THE KEYWORD      @L5A 13708100
.*       VALUE INTO THE PARAMETER LIST IN PLACE OF INLINE          @L5A 13717800
.*       MESSAGE TEXT.                                             @L5A 13727500
.********************************************************************** 13737200
.ITEXTID ANOP                           CHECK FOR TEXT                  13746900
         AIF   ('&TEXT' EQ '^').IWTOR   SKIP DOWN IF NO TEXT       @L5A 13756600
         AIF   (&MLW).ITEXTR2           BRANCH IF MULTILINE        @L5A 13766300
         AIF   ('&TEXT'(1,1) EQ '(').ITEXTRG BRANCH IF IN REGISTER @L5A 13776000
         LA    15,&TEXT(1)              LOAD TEXT VALUE            @L5A 13785700
         ST    15,4(0,1)                STORE TEXT ADDR INTO PLIST @L5A 13795400
         AGO   .IWTOR                   CHECK FOR WTOR             @L5A 13805100
.ITEXTRG ANOP                           TEXT ADDRESS IN REGISTER   @L5A 13814800
         AIF   (NOT &IHBWTOR).ITEXTNO   IF NOT WTOR, USE TEXT FLD  @L5A 13824500
&K       SETA  K'&TEXT                  GET LENGTH OF VALUE        @L5A 13834200
&VALH1   SETC  '&TEXT'(2,&K-2)          TAKE STUFF BETWEEN PARENS  @L5A 13843900
         ST    &VALH1,4(0,1)            STORE TEXT ADDRESS         @L5A 13853600
         AGO   .IWTOR                   CHECK FOR WTOR             @L5A 13863300
.ITEXTNO ANOP                           TEXT ADDRESS IN REGISTER   @L5A 13873000
         ST    &TEXT(1),4(0,1)          STORE TEXT ADDR INTO PLIST @L5A 13882700
         AGO   .IWTOR                   CHECK FOR WTOR             @L5A 13892400
.ITEXTR2 ANOP                           MULTILINE W/VALUE IN REG   @L5A 13902100
&VALH1   SETC  '&TEXT(1,1)'             EXTRACT FIRST LINE'S ADDR  @L5A 13911800
         AIF   ('&VALH1' EQ '').IWTOR   BRANCH IF NULL ENTRY       @L5A 13921500
         AIF   (&NUMML EQ 1).LN1        If there is only one line of   X13923600
                                        text, go and do special        X13925700
                                        checks for a register      @PQA 13927800
         AIF   ('&VALH'(1,2) NE  '((').ITEXTR4 For more than one line  X13929900
                                        of text, VALH is equal to      X13932000
                                        (textaddr,linetype) or         X13934100
                                        ((regnum),linetype). Check for X13936200
                                        2 parens to indicate a         X13938300
                                        register is being used     @PQA 13940400
         AGO   .REGTXT1                                            @PQA 13942500
.LN1     ANOP                           1 line of text - do the        X13944600
                                        register check             @PQA 13946700
         AIF   ('&VALH1'(1,1) NE '(').ITEXTR4 VALH1 is the textaddr    X13948800
                                        piece of the TEXT value    @PQC 13950900
.REGTXT1 ANOP                           Text is a register         @PQA 13951900
&VALH1   SETC  '&TEXT(1,1,1)'           Strip the parens off the       X13953000
                                        register specification     @PQA 13955100
         ST    &VALH1,4(0,1)            STORE TEXT ADDRESS         @L5A 13960300
         AGO   .IWTOR                   CHECK FOR WTOR             @L5A 13970000
.ITEXTR4 ANOP                                                      @L5A 13979700
         LA    15,&VALH1                LOAD ADDR OF TEXT FIELD    @P8C 13989400
         ST    15,4(0,1)                STORE TEXT ADDR INTO PLIST @P8A 13999100
.IWTOR   ANOP                                                           14008800
         AIF   (NOT &IHBWTOR).ENDWTOR IF NOT WTOR, BRANCH          @L2A 14018500
.********************************************************************** 14028200
.*       IF THE REPLY ADDRESS IS IN A REGISTER, STORE IT IN        @L2A 14037900
.*       THE PARAMETER LIST                                        @L2A 14047600
.********************************************************************** 14057300
         AIF   ('&WTORYA' EQ '').IECB   BR IF NO DATA SPECIFIED    @L2A 14067000
         AIF   (NOT &RAREG).IECB        BR IF NOT IN REG           @P6C 14076700
         ST    &WTORYA,8(0,14)          STORE REPLY ADDRESS        @L2A 14086400
.********************************************************************** 14096100
.*       IF ECB ADDRESS IS IN A REGISTER, SAVE ITS ADDRESS IN      @L2A 14105800
.*       THE PARAMETER LIST                                        @L2A 14115500
.********************************************************************** 14125200
.IECB    AIF   ('&WTOECB' EQ '').ILEN   BR IF NO DATA SPECIFIED    @L2A 14134900
         AIF   (NOT &EAREG).ILEN        BR IF NOT IN REG           @P6C 14144600
         ST    &WTOECB,12(0,14)         STORE ECB ADDRESS          @L2A 14154300
.********************************************************************** 14164000
.*       IF THE LENGTH IS IN A REGISTER, SAVE ITS ADDRESS IN       @L2A 14173700
.*       THE PARAMETER LIST                                        @L2A 14183400
.********************************************************************** 14193100
.ILEN    AIF   ('&WTOLENR' EQ '').ENDWTOR BR IN NO DATA SPEC.  @YA17152 14202800
         AIF   (NOT &RLREG).ENDWTOR     BR IN NOT IN REG           @L2A 14212500
         STC   &WTOLENR,2(0,14)         STORE REPLY LENGTH     @YA17152 14222200
.ENDWTOR ANOP                           END OF 'WTOR ONLY' INFO    @L2A 14231900
.********************************************************************** 14241600
.*       IF THE PRTY KEYWORD IS SPECIFIED, (FIELD OR REGISTER)     @L2A 14251300
.*       INSERT IT INTO THE PARAMETER LIST                         @L2A 14261000
.********************************************************************** 14270700
         AIF   ('&PRTY' EQ '^' OR                                      X14280400
                '&PRTY' EQ '').IRCON      VERIFY DATA SPECIFIED    @L3C 14290100
         AIF   ('&PRTY'(1,1) EQ '(').IPRTYRG BRANCH IF IN REG      @L2A 14299800
         MVC   42(2,14),&PRTY(1)        INSERT PRTY INTO PLIST     @L2A 14309500
         AGO   .IRCON                   GO CHECK RPLYISUR          @L3C 14319200
.IPRTYRG STH   &PRTY(1),42(0,14)        INSERT PRTY INTO PLIST     @L2A 14328900
.********************************************************************** 14338600
.*       IF THIS IS A WTOR AND THE REPLY CONSOLE NAME/ID ADDRESS   @L3A 14348300
.*       IS SPECIFIED, (FIELD OR REGISTER) INSERT IT INTO          @L3A 14358000
.*       THE PARAMETER LIST                                        @L3A 14367700
.********************************************************************** 14377400
.IRCON   AIF   (NOT &IHBWTOR OR '&WTORCN' EQ '').ICONS INVOKED BY      X14387100
                                          WTOR AND DATA SPECIFIED       14396800
         AIF   (&RCNREG).IRCONRG        BRANCH IF IN A REG         @L3C 14406500
         LA    15,&WTORCN               LOAD REPLY CONSOLE NAME/ID     X14416200
                                        ADDRESS                    @L3A 14425900
         ST    15,92(0,14)              INSERT REPLY CONSOLE NAME/ID   X14435600
                                        ADDRESS IN PLIST           @L3A 14445300
         AGO   .ICONS                   GO CHECK CONSID            @L3A 14455000
.IRCONRG ST    &WTORCN,92(0,14)         INSERT REPLY CONSOLE NAME/ID   X14464700
                                        ADDRESS IN PLIST           @L3A 14474400
.********************************************************************** 14484100
.*       IF THE CONSID KEYWORD IS SPECIFIED, (FIELD OR REGISTER)   @L2A 14493800
.*       INSERT IT INTO THE PARAMETER LIST                         @L2A 14503500
.********************************************************************** 14513200
.ICONS   AIF   ('&CONSID' EQ '^' OR                                    X14522900
                '&CONSID' EQ '').ICNNAM   VERIFY DATA SPECIFIED    @L3C 14532600
         AIF   ('&CONSID'(1,1) EQ '(').ICONSRG  BRANCH IF IN REG   @L2A 14542300
         L     15,&CONSID(1)            LOAD CONSID                @L2A 14552000
         ST    15,72(0,14)              INSERT CONSID INTO PLIST   @L2A 14561700
         AGO   .ICNNAM                  GO CHECK CONSNAME          @L3C 14571400
.ICONSRG ST    &CONSID(1),72(0,14)      INSERT CONSID INTO PLIST   @L2A 14581100
.********************************************************************** 14590800
.*       IF THE CONSNAME KEYWORD IS SPECIFIED, (FIELD OR REGISTER) @L3A 14600500
.*       INSERT IT INTO THE PARAMETER LIST                         @L3A 14610200
.********************************************************************** 14619900
.ICNNAM  AIF   ('&CONSNAME' EQ '^' OR                                  X14629600
                '&CONSNAME' EQ '').IJOBID VERIFY DATA SPECIFIED    @L3A 14639300
         AIF   ('&CONSNAME'(1,1) EQ '(').ICNNARG BRANCH IF IN REG  @L3A 14649000
         MVC   84(8,14),&CONSNAME(1)    INSERT CONSNAME INTO PLIST @POC 14658700
         AGO   .IJOBID                  GO CHECK JOBID             @L3A 14668400
.ICNNARG MVC   84(8,14),0(&CONSNAME(1)) INSERT CONSNAME INTO PLIST @L3A 14678100
.********************************************************************** 14687800
.*       IF THE JOBID KEYWORD IS SPECIFIED, (FIELD OR REGISTER)    @L2A 14697500
.*       INSERT IT INTO THE PARAMETER LIST                         @L2A 14707200
.********************************************************************** 14716900
.IJOBID  AIF   ('&JOBID' EQ '^' OR                                     X14726600
                '&JOBID' EQ '').IJOBN    VERIFY DATA SPECIFIED     @L2A 14736300
         AIF   ('&JOBID'(1,1) EQ '(').IJOBIRG  BRANCH IF IN REG    @L2A 14746000
         MVC   44(8,14),&JOBID(1)       INSERT JOBID INTO PLIST    @L2A 14755700
         AGO   .IJOBN                   GO CHECK JOBNAME           @L2A 14765400
.IJOBIRG MVC   44(8,14),0(&JOBID(1))    INSERT JOBID INTO PLIST    @L2A 14775100
.********************************************************************** 14784800
.*       IF THE JOBNAME KEYWORD IS SPECIFIED, (FIELD OR REGISTER)  @L2A 14794500
.*       INSERT IT INTO THE PARAMETER LIST                         @L2A 14804200
.********************************************************************** 14813900
.IJOBN   AIF   ('&JOBNAME' EQ '^' OR                                   X14823600
                '&JOBNAME' EQ '').IKEY    VERIFY DATA SPECIFIED    @L2A 14833300
         AIF   ('&JOBNAME'(1,1) EQ '(').IJOBNRG  BRANCH IF IN REG  @L2A 14843000
         MVC   52(8,14),&JOBNAME(1)     INSERT JOBNAME INTO PLIST  @L2A 14852700
         AGO   .IKEY                    GO CHECK KEY               @L2A 14862400
.IJOBNRG MVC   52(8,14),0(&JOBNAME(1))  INSERT JOBNAME INTO PLIST  @L2A 14872100
.********************************************************************** 14881800
.*       IF THE KEY KEYWORD IS SPECIFIED, (FIELD OR REGISTER)      @L2A 14891500
.*       INSERT IT INTO THE PARAMETER LIST                         @L2A 14901200
.********************************************************************** 14910900
.IKEY    AIF   ('&KEY' EQ '^' OR                                       X14920600
                '&KEY' EQ '').ITOKEN    VERIFY DATA SPECIFIED      @L2A 14930300
         AIF   ('&KEY'(1,1) EQ '(').IKEYRG KEY IN REG?             @L2A 14940000
         MVC   60(8,14),&KEY(1)         INSERT KEY INTO PLIST      @L2A 14949700
         AGO   .ITOKEN                  GO ISSUE SVC               @L2A 14959400
.IKEYRG  MVC   60(8,14),0(&KEY(1))      INSERT KEY INTO PLIST      @L2A 14969100
.********************************************************************** 14978800
.*       IF THE TOKEN KEYWORD IS SPECIFIED, (FIELD OR REGISTER)    @L2A 14988500
.*       INSERT IT INTO THE PARAMETER LIST                         @L2A 14998200
.********************************************************************** 15007900
.ITOKEN  AIF   ('&TOKEN' EQ '^' OR                                     X15017600
                '&TOKEN' EQ '').ISYSN   VERIFY DATA SPECIFIED      @L2A 15027300
         AIF   ('&TOKEN'(1,1) EQ '(').ITOKNRG BRANCH IF IN REG     @L2A 15037000
         L     15,&TOKEN(1)             LOAD TOKEN                 @L2A 15046700
         ST    15,68(0,14)              INSERT TOKEN INTO PLIST    @L2A 15056400
         AGO   .ISYSN                   GO CHECK SYSNAME           @L2A 15066100
.ITOKNRG ST    &TOKEN(1),68(0,14)       INSERT TOKEN INTO PLIST    @L2A 15075800
.********************************************************************** 15085500
.*       IF THE SYSNAME KEYWORD IS SPECIFIED, (FIELD OR REGISTER)  @L2A 15095200
.*       INSERT IT INTO THE PARAMETER LIST                         @L2A 15104900
.********************************************************************** 15114600
.ISYSN   AIF   ('&SYSNAME' EQ '^' OR                                   X15124300
                '&SYSNAME' EQ '').ICONN   VERIFY DATA SPECIFIED    @01C 15134000
         AIF   ('&SYSNAME'(1,1) EQ '(').ISYSNRG BRANCH IF IN REG   @L2A 15143700
         MVC   76(8,14),&SYSNAME(1)     INSERT SYSNAME INTO PLIST  @L2A 15153400
         AGO   .ICONN                   GO CHECK CONNECT           @01C 15163100
.ISYSNRG MVC   76(8,14),0(&SYSNAME(1))  INSERT SYSNAME INTO PLIST  @L2A 15172800
.********************************************************************** 15328000
.*       IF THE CONNECT KEYWORD IS SPECIFIED, (FIELD OR REGISTER)  @L2A 15337700
.*       INSERT IT INTO THE PARAMETER LIST                         @L2A 15347400
.********************************************************************** 15357100
.ICONN   AIF   ('&CONNECT' EQ '^' OR                                   X15366800
                '&CONNECT' EQ '').ISNCHY   VERIFY DATA SPECIFIED   @L6C 15376500
         AIF   ('&CONNECT'(1,1) EQ '(').ICONNRG BRANCH IF IN REG   @L2A 15386200
         L     15,&CONNECT(1)           LOAD CONNECT ID            @L2A 15395900
         ST    15,16(0,14)              INSERT CONNECT INTO PLIST  @L2A 15405600
         AGO   .ISNCHY                  GO CHECK SYNCH             @L6C 15415300
.ICONNRG ST    &CONNECT(1),16(0,14)     INSERT CONNECT INTO PLIST  @L2A 15425000
.********************************************************************** 15434700
.*       IF THE SYNCH=YES WAS SPECIFIED SET THE BIT IN THE         @L6A 15444400
.*       EXTENDED MCS FLAG FIELD                                   @L6A 15454100
.********************************************************************** 15463800
.ISNCHY  ANOP                                                      @L6A 15473500
&SYNN    SETB  ('&SYNCH(1)' EQ 'NO')    SYNCH MUST BE UPDATED      @PAC 15483200
&EMCS(14) SETB  ('&SYNCH(1)' EQ 'YES')  INDICATE IN EXT MCSFLAGS   @PAC 15492900
.********************************************************************** 15502600
.*       IF THE WAIT STATE PARAMETER LIST ADDRESS WAS SPECIFIED    @L6A 15512300
.*       AS A REGISTER, PUT IT IN THE PARAMETER LIST               @PBC 15522000
.*       IF IT WAS NOT A REGISTER, IT IS ALREADY INITIALIZED.      @PBA 15531700
.********************************************************************** 15541400
.IWSPRM  ANOP                                                      @L6A 15551100
         AIF   ('&WSPARM' EQ '^' OR '&WSPARM(1)' EQ '').ICART      @P9C 15560800
         AIF   ('&WSPARM(1)' EQ '0').ICART                         @PBC 15570500
         AIF   ('&WSPARM'(1,1) NE '(').ICART                       @PBC 15580200
.IWSPMRG ANOP                           REGISTER SPECIFIED         @L6A 15589900
         ST    &WSPARM(1),100(0,14)     INSERT WSPARM  INTO PLIST  @L6A 15599600
.********************************************************************** 15609300
.*       IF THE CART   KEYWORD IS SPECIFIED, (FIELD OR REGISTER)   @L4A 15619000
.*       INSERT IT INTO THE PARAMETER LIST                         @L4A 15628700
.********************************************************************** 15638400
.ICART   AIF   ('&CART' EQ '^' OR                                      X15648100
                '&CART' EQ '').ITEXT    BRANCH IF NO CART          @L5A 15657800
         AIF   ('&CART'(1,1) EQ '(').ICARTRG  BRANCH IF IN REG     @L4A 15667500
         LA    15,&CART(1)              LOAD CART ADDRESS          @L4A 15677200
         ST    15,96(0,14)              INSERT CART ADR INTO PLIST @L4A 15686900
         AGO   .ITEXT                   GO CHECK FOR TEXT KWD      @L5A 15696600
.ICARTRG ST    &CART(1),96(0,14)        INSERT CART ADR INTO PLIST @L4A 15706300
.********************************************************************** 15716000
.*       IF THIS IS A MULTILINE WTO, CHECK TO SEE IF THE TEXT      @L5A 15725700
.*       KEYWORD WAS SPECIFIED. IF SO, STORE THE ADDRESS OF EACH   @L5A 15735400
.*       LINE OF TEXT IN THE PARAMETER LIST.                       @L5A 15745100
.********************************************************************** 15754800
.ITEXT   ANOP                           CHECK FOR TEXT ON MLWTO    @L5A 15764500
         AIF   ('&TEXT' EQ '^' OR NOT &MLW).SKIPMOD  SKIP IF NOT A     X15774200
                                        MULTILINE W/TEXT KEYWORD   @L5A 15783900
.********************************************************************** 15793600
.*       MOVE THE TEXT ADDRESSES INTO THE PARAMETER LIST           @L5A 15803300
.********************************************************************** 15813000
&MLTTIND SETA  2                        LINE TYPE INDEX            @L5A 15822700
&MLINDX  SETA  4                        OFFSET TO TEXT ADDRESS     @L5A 15832400
&H       SETA  2                        PROCESSED MAJOR            @L5A 15842100
         AIF   (&H GT &LLCNT).SKIPMOD   ISSUE SVC WHEN COMPLETE    @L5A 15895700
         XR    15,15                    CLEAR INDEX FOR INSERTS    @L5A 15895800
         IC    15,3(14)                 SET LENGTH OF WPX          @L5A 15895900
         LA    14,4(15,14)              POINT TO MULTILINE ENTRIES @L5A 15896000
.IMLW00  ANOP                           BEGIN LOOP FOR MINORS      @L5A 15896100
         AIF   (&H GT &LLCNT).SKIPMOD   ISSUE SVC WHEN COMPLETE    @L5A 15896200
&VALH    SETC  '&TEXT(&H)'              EXTRACT CURRENT VALUE      @L5A 15896300
&VALH1   SETC  '&TEXT(&H,1)'            EXTRACT TEXT ADDRESS       @L5A 15896400
         AIF   ('&VALH1'  EQ     '').IMLW02 BRANCH IF NULL LINE    @L5A 15896700
         AIF   ('&VALH1'(1,1) EQ '(').IMLW01 BRANCH IF SPECIFIED       X15896800
                                        IN REGISTER                @L5A 15896900
         LA    15,&VALH1                LOAD ADDR OF TEXT FIELD    @P8C 15897000
         ST    15,&MLINDX.(14)          STORE TEXT ADDR INTO PLIST @P8A 15897100
         AGO   .IMLW02                  CONTINUE PROCESSING        @L5A 15897200
.IMLW01  ANOP                           TEXT IN REGISTER           @L5A 15897300
&K       SETA  K'&VALH1                                                 15897400
&VALH1   SETC  '&VALH1'(2,&K-2)                                         15897500
         ST    &VALH1,&MLINDX.(14)      STORE TEXT ADDRESS         @L5A 15897600
.IMLW02  ANOP                           UPDATE POINTERS            @L5A 15897700
&H       SETA  &H+1                     UPDATE NUMBER OF LINES     @L5A 15897800
&MLINDX  SETA  &MLINDX+8                INDEX TO NEXT PLIST ENTRY  @L5A 15897900
         AGO   .IMLW00                  CONTINUE                   @L5A 15898000
.********************************************************************** 15898100
.*       PARAMETER LIST GENERATION AND INSERTS ARE COMPLETE.       @L2A 15898200
.*       IF ANY OTHER ERRORS WERE FOUND DURING PROCESSING,         @L2A 15898300
.*       ISSUE AN ERROR MESSAGE VIA IHBERMAC.                      @L2A 15898400
.********************************************************************** 15898500
.SKIPMOD ANOP                                                      @L2A 15898600
         AIF   ('&MF' EQ 'L').END   IF ENTERED DUE TO FILLING IN TEXT  X15898700
                                    ADDRESSES ON LIST FORM, BRANCH @L5A 15898800
         AIF   (&E6 OR &E3 OR &IHBWTL).END                       X02007 15900002
.EXECUTE ANOP                                                      @L6C 15904200
         AIF   ('&MF' EQ 'L').END       LIST FORM DOES NOT ISSUE SVC OR+15908400
                                        BRANCH ENTRY WTO           @L6C 15912600
         AIF   ('&LINKAGE(1)' EQ 'BRANCH').WTOBALR                 @L6A 15916800
         SVC   35                       ISSUE SVC 35               @L6A 15921000
         AGO   .END                     BRANCH TO EXIT             @L6A 15925200
.WTOBALR ANOP                           BRANCH ENTRY WTO FIND ADDR @L6A 15929400
         L     15,16(0,0)               ADDRESS OF CVT             @L6A 15933600
         L     15,200(0,15)             ADDRESS OF SCVT            @L6A 15937800
         L     15,20(0,15)              WTO BRANCH ENTRY POINT     @L6A 15942000
         BALR  14,15                    ISSUE BRANCH ENTRY WTO     @L6A 15946200
         AGO   .END                     BRANCH TO EXIT             @L6A 15950400
.********************************************************************** 15954600
.*                                                                      15958800
.*  BEGIN THE LIST OF SEVERITY 12 ERROR MESSAGES                        15963000
.*                                                                      15967200
.********************************************************************** 15971400
.ERROR1  ANOP              INVALID LINKAGE VALUE SPECIFIED         @L6A 15975600
         MNOTE 12,'NO TEXT GENERATED.  SPECIFIED LINKAGE VALUE'    @L6A 15979800
         MNOTE '       WAS NOT SVC OR BRANCH.'                     @L6A 15984000
&WTOERR  SETB  1                        A SEVERE MNOTE WAS ISSUED  @L6A 15988200
         MEXIT                                                     @L6A 15992400
.ERROR2  ANOP              NUMBER OF LINES OF TEXT EXCEEDS MAXIMUM @L6A 15996600
         MNOTE 12,'TOO MANY LINES OF TEXT.  MAX=&MAXLINS WHEN'     @L6A 16000800
         MNOTE '        SYNCH=YES.'                                @L6A 16005000
&WTOERR  SETB  1                        A SEVERE MNOTE WAS ISSUED  @L6A 16009200
         MEXIT                                                     @L6A 16013400
.ERROR3  ANOP              INVALID SYNCH VALUE SPECIFIED           @L6A 16017600
         MNOTE 12,'NO TEXT GENERATED.  SPECIFIED SYNCH VALUE'      @L6A 16021800
         MNOTE '      WAS NOT YES OR NO.'                          @L6A 16026000
&WTOERR  SETB  1                        A SEVERE MNOTE WAS ISSUED  @L6A 16030200
         MEXIT                                                     @L6A 16034400
.ERROR4  ANOP              REQUIRED KEYWORD VALUE MISSING          @L6A 16038600
         MNOTE 12,'NO TEXT GENERATED.  ''SYNCH=YES'' REQUIRES'     @L6A 16042800
         MNOTE '       ''LINKAGE=BRANCH''.'                        @L6A 16047000
&WTOERR  SETB  1                        A SEVERE MNOTE WAS ISSUED  @L6A 16051200
         MEXIT                                                     @L6A 16055400
.ERROR5  ANOP              MUTUAL EXCLUSIVITY ERROR                @L6A 16059600
         MNOTE 12,'NO TEXT GENERATED.  ''SYNCH=YES'' IS MUTUALLY'  @L6A 16063800
         MNOTE '   EXCLUSIVE WITH THE CONNECT AND AREAID KEYWORDS.'    +16068000
                                                                   @L6A 16072200
&WTOERR  SETB  1                        A SEVERE MNOTE WAS ISSUED  @L6A 16076400
         MEXIT                                                     @L6A 16080600
.ERROR6  ANOP              MUTUAL EXCLUSIVITY ERROR                @L6A 16084800
         MNOTE 12,'NO TEXT GENERATED.  ''SYNCH=YES'' IS MUTUALLY'  @L6A 16089000
         MNOTE '    EXCLUSIVE WITH ''MCSFLAG=HDRCPY''.'            @L6A 16093200
&WTOERR  SETB  1                        A SEVERE MNOTE WAS ISSUED  @L6A 16097400
         MEXIT                                                     @L6A 16101600
.ERROR7  ANOP              INVALID WSPARM VALUE SPECIFIED          @L6A 16105800
         MNOTE 12,'NO TEXT GENERATED.  SPECIFIED WSPARM VALUE WAS' @L6A 16110000
         MNOTE '   NOT 0, A REGISTER, OR AN ADDRESS.'              @L6A 16114200
&WTOERR  SETB  1                        A SEVERE MNOTE WAS ISSUED  @L6A 16118400
         MEXIT                                                     @L6A 16122600
.ERROR8  ANOP              REQUIRED KEYWORD VALUE MISSING          @L6A 16126800
         MNOTE 12,'NO TEXT GENERATED.  ''WSPARM ^= 0'' REQUIRES'   @L6A 16131000
         MNOTE '  ''LINKAGE=BRANCH'' AND ''SYNCH=YES''.'           @L6A 16135200
&WTOERR  SETB  1                        A SEVERE MNOTE WAS ISSUED  @L6A 16139400
         MEXIT                                                     @L6A 16143600
.NOTXT   ANOP                                                    X02007 16150002
         MNOTE 12,'NUMBER OF LINES REQUESTED IS 0 OR GREATER THAN 255 -X16200064
                GENERATION TERMINATED'                         @G64DPSS 16210064
&WTOERR  SETB  1                        A SEVERE MNOTE WAS ISSUED  @L2A 16230000
.END     MEND                                                           16250002
**/                                                                     16300002
*  WTO: MACRO KEYS(                                                     16580002
*                   ROUTCDE,      /*ROUTING CODES FOR MESSAGE        */ 16650002
*                   DESC,         /*MESSAGE DESCRIPTOR CODES         */ 16720002
*                   MSGTYP,       /*ROUTE TO MESSAGE CONSOLES        */ 16790002
*                   MCSFLAG,      /*MESSAGE ATTRIBUTES               */ 16860002
*                   AREAID,       /*DISPLAY AREA                     */ 16930002
*                   WQEBLK,       /*ADDRESS OF WQE               @L2A*/ 16935300
*                   CONNECT,      /*CONNECT ID FOR MESSAGE       @L2A*/ 16940600
*                   CONSID,       /*CONSOLE ID FOR MESSAGE       @L2A*/ 16945900
*                   CONSNAME,     /*CONSOLE NAME FOR MESSAGE     @L3A*/ 16947600
*                   RPLYISUR,     /*CONSOLE NAME/ID FOR MESSAGE  @L3A*/ 16949300
*                   JOBID,        /*MESSAGE JOB IDENTIFIER       @L2A*/ 16951200
*                   JOBNAME,      /*MESSAGE JOB NAME             @L2A*/ 16956500
*                   SUBSMOD,      /*MODIFICATION CHARACTERISTICS @L2A*/ 16967100
*                   PRTY,         /*MESSAGE PRIORITY             @L2A*/ 16972400
*                   KEY,          /*KEY FOR MESSAGE              @L2A*/ 16977700
*                   TOKEN,        /*TOKEN FOR MESSAGE            @L2A*/ 16983000
*                   SYSNAME,      /*SYSTEM NAME                  @L2A*/ 16988300
*                   RTCD,         /*SVC RETURN CODE                  */ 17000002
*                   CART,         /*COMMAND AND RESPONSE TOKEN   @L4A*/ 17023300
*                   TEXT,         /*ADDRESS OF MESSAGE TEXT      @L5A*/ 17046600
*                   LINKAGE,      /*HOW CONTROL IS PASSED        @L6A*/ 17051200
*                   SYNCH,        /*PROCESS SYNCHRONOUSLY        @L6A*/ 17055800
*                   WSPARM,       /*ASSOCIATED WAIT STATE        @L6A*/ 17060400
*                   CPFLG,        /*CONTROL PROGRAM ONLY FLAGS   @D3A*/ 17065000
*                   ASCB,         /*ASCB                         @PPA*/ 17067500
*                   MF            /*LIST FORMAT                      */ 17070002
*                          );                                           17140002
*    ANS('?'||MACLABEL||'WTOP '||MACLIST||MACKEYS||';');                17190002
*%END WTO;                                                              94980002
