*/**** START OF SPECIFICATIONS **************************************** 00000100
*                                                                     * 00000200
*                                                                     * 00000300
*01* MACRO NAME:  IEAMPDQ                               -04/22/96-<0> * 00000400
*                                                                     * 00000500
*                                                                     * 00000600
*01* DESCRIPTIVE NAME:  Enhanced PurgeDQ Services                     * 00000700
*                                                                     * 00000800
*01* PROPRIETARY STATEMENT:                                           * 00000900
*                                                                     * 00001000
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 00001100
*     THIS MACRO IS "RESTRICTED MATERIALS OF IBM"                     * 00001200
*     5645-001 (C) COPYRIGHT IBM CORP. 1997                           * 00001300
*                                                                     * 00001400
* STATUS= HBB6603                                                     * 00001500
*                                                                     * 00001600
*                                                                     * 00001700
*                                                                     * 00001800
*01* FUNCTION:                                                        * 00001900
*                                                                     * 00002000
*                                                                     * 00002100
*      The IEAMPDQ macro processes a request to purge SRB activity.   * 00002200
*      It differs from the PURGEDQ interface in that cross memory     * 00002300
*      purges are full function purges.  Full function means that the * 00002400
*      caller is suspended waiting for all SRB activity in target     * 00002500
*      address space matching the caller's purge parameters are       * 00002600
*      complete (assuming the caller has specified the SYNCH(YES)     * 00002700
*      option) AND all SRBs that are SUSPENDed with Token whose home  * 00002800
*      is the target address space and matching the caller's purge    * 00002900
*      parameters are awoken via '47B'x ABEND.                        * 00003000
*                                                                     * 00003100
*      Another difference is that this interface also supports SRB    * 00003200
*      mode and cross memory environment (PASN^=HASN) mode callers.   * 00003300
*                                                                     * 00003400
*      REGISTER INFORMATION:                                          * 00003500
*                                                                     * 00003600
*                                                                     * 00003700
*      o   Registers on Entry to IEAMPDQ macro:                       * 00003800
*                                                                     * 00003900
*                                                                     * 00004000
*          -   General Purpose Registers                              * 00004100
*                                                                     * 00004200
*                                                                     * 00004300
*              Reg  0-15   Irrelevent                                 * 00004400
*                                                                     * 00004500
*                                                                     * 00004600
*                                                                     * 00004700
*          -   Access Registers                                       * 00004800
*                                                                     * 00004900
*                                                                     * 00005000
*              Reg  0-15   Irrelevant                                 * 00005100
*                                                                     * 00005200
*                                                                     * 00005300
*                                                                     * 00005400
*                                                                     * 00005500
*                                                                     * 00005600
*      o   Registers on Return From IEAMPDQ macro:                    * 00005700
*                                                                     * 00005800
*                                                                     * 00005900
*          -   General Purpose Registers                              * 00006000
*                                                                     * 00006100
*                                                                     * 00006200
*              Reg  0-1    Unpredictable                              * 00006300
*                                                                     * 00006400
*              Reg  2-13   Preserved                                  * 00006500
*                                                                     * 00006600
*              Reg 15      Unpredictable                              * 00006700
*                                                                     * 00006800
*              Reg 15      Return code                                * 00006900
*                                                                     * 00007000
*                                                                     * 00007100
*                                                                     * 00007200
*          -   Access Registers                                       * 00007300
*                                                                     * 00007400
*                                                                     * 00007500
*              Reg  0-1    Unpredictable                              * 00007600
*                                                                     * 00007700
*              Reg  2-13   Preserved                                  * 00007800
*                                                                     * 00007900
*              Reg  14-15  Unpredictable                              * 00008000
*                                                                     * 00008100
*                                                                     * 00008200
*                                                                     * 00008300
*                                                                     * 00008400
*                                                                     * 00008500
*                                                                     * 00008600
*          -   Registers on Entry to RMTR routine:                    * 00008700
*                                                                     * 00008800
*                                                                     * 00008900
*              --  General Purpose Registers                          * 00009000
*                                                                     * 00009100
*                                                                     * 00009200
*                  Reg 0       If RMTRPRMADDR keyword specified, then * 00009300
*                              the value at the address specified via * 00009400
*                              the RMTRPRMADDR keyword.   If          * 00009500
*                              RMTRPRMADDR is not specified,          * 00009600
*                              X'FFFFFFFF'.                           * 00009700
*                                                                     * 00009800
*                  Reg 1       If SRB was scheduled via SCHEDULE      * 00009900
*                              macro, the SRB address.  If the SRB    * 00010000
*                              was scheduled via IEAMSCHD macro,      * 00010100
*                              X'00000000'.                           * 00010200
*                                                                     * 00010300
*                  Reg 2       If SRB was scheduled via SCHEDULE      * 00010400
*                              macro, the value contained in the SRB  * 00010500
*                              field SRBPARM.  If the SRB was         * 00010600
*                              scheduled via IEAMSCHD macro, the      * 00010700
*                              value specified via the PARM field.    * 00010800
*                                                                     * 00010900
*                  Regs 3-13   Unpredictable                          * 00011000
*                                                                     * 00011100
*                  Reg 14      Return Address                         * 00011200
*                                                                     * 00011300
*                  Reg 15      Entry Point Address                    * 00011400
*                                                                     * 00011500
*                                                                     * 00011600
*                                                                     * 00011700
*              --  Access Registers                                   * 00011800
*                                                                     * 00011900
*                                                                     * 00012000
*                  Reg 0       If RMTRPRMALETADDR keyword specified,  * 00012100
*                              then the value at the address          * 00012200
*                              specified via the RMTRPRMALETADDR      * 00012300
*                              keyword.  If RMTRPRMALETADDR is not    * 00012400
*                              specified, X'00000000'.                * 00012500
*                                                                     * 00012600
*                  Regs 1-15   Unpredictable                          * 00012700
*                                                                     * 00012800
*                                                                     * 00012900
*                                                                     * 00013000
*                                                                     * 00013100
*                                                                     * 00013200
*              NOTE:  General Purpose Register 0 and Access Register  * 00013300
*              0 will be X'00000000' if the SRB Routine was purged by * 00013400
*              the system.                                            * 00013500
*                                                                     * 00013600
*                                                                     * 00013700
*                                                                     * 00013800
*                                                                     * 00013900
*                                                                     * 00014000
*01* EXTERNAL CLASSIFICATION:  NONE                                   * 00014100
*                                                                     * 00014200
*01* END OF EXTERNAL CLASSIFICATION:                                  * 00014300
*                                                                     * 00014400
*01* ENVIRONMENT:                                                     * 00014500
*                                                                     * 00014600
*                                                                     * 00014700
*      Dispatchable unit mode: Task or SRB mode.                      * 00014800
*                                                                     * 00014900
*      Minimum authorization: Problem or Supervisor state.  System    * 00015000
*                        PSW key.                                     * 00015100
*                                                                     * 00015200
*      AMODE:            31-bit.                                      * 00015300
*                                                                     * 00015400
*      ASC mode:         Primary or Access Register.                  * 00015500
*                                                                     * 00015600
*      Interrupt status: Enabled for I/O and external interrupts.     * 00015700
*                                                                     * 00015800
*      Locks:            No locks held.                               * 00015900
*                                                                     * 00016000
*      Control parameters: Control parameters must be in the primary  * 00016100
*                        address space.                               * 00016200
*                                                                     * 00016300
*      Cross Memory Mode: Any PASN, any HASN, any SASN.               * 00016400
*                                                                     * 00016500
*                                                                     * 00016600
*                                                                     * 00016700
*01* SYNTAX:                                                          * 00016800
*                                                                     * 00016900
*[xlabel]  IEAMPDQ     TARGETSTOKEN                                   * 00017000
*                                   =xtargetstoken                    * 00017100
*                   [,MATCHOPTION=ALL                                * 00017200
*                   |     ,RMTRADDR=xrmtraddr                         * 00017300
*                   |     ,PURGESTOKEN=xpurgestoken                   * 00017400
*                   |     ,PTCBADDR=xptcbaddr]                        * 00017500
*                   [,MATCHOPTION=STOKENANDTCB                       * 00017600
*                         ,PURGESTOKEN=xpurgestoken                   * 00017700
*                         ,PTCBADDR=xptcbaddr]                        * 00017800
*                   [,SYNCH=YES]                                     * 00017900
*                   [,SYNCH=NO]                                      * 00018000
*                    [,RMTRPRMADDR=xrmtrprmaddr|NORMTRP             * 00018100
*                        [,RMTRPRMALETADDR                            * 00018200
*                                          =xrmtrprmaletaddr|NORMTRP * 00018300
*                                          ALET]]                    * 00018400
*                    [,PLISTVER=xplistver|IMPLIED_VERSION]          * 00018500
*                   [,MF=S]                                          * 00018600
*                   [,MF=(L,xmfctrl,xmfattr|0D)]                   * 00018700
*                   [,MF=(E,xmfctrl,COMPLETE)]                     * 00018800
*                                                                     * 00018900
*                                                                     * 00019000
*      Where:                                                         * 00019100
*                                                                     * 00019200
*                                                                     * 00019300
*      [xlabel]                                                       * 00019400
*          is an optional symbol, starting in column 1, that is the   * 00019500
*          name on the IEAMPDQ macro invocation.  The name must       * 00019600
*          conform to the rules for an ordinary assembler language    * 00019700
*          symbol.                                                    * 00019800
*          DEFAULT: No name.                                          * 00019900
*                                                                     * 00020000
*                                                                     * 00020100
*                                                                     * 00020200
*                                                                     * 00020300
*      TARGETSTOKEN=xtargetstoken                                     * 00020400
*          is the name (RS-type) of a required 64 bit input           * 00020500
*          containing the STOKEN of the target address space of the   * 00020600
*          PurgeDQ.                                                   * 00020700
*                                                                     * 00020800
*                                                                     * 00020900
*                                                                     * 00021000
*                                                                     * 00021100
*      [MATCHOPTION=ALL|STOKENANDTCB]                               * 00021200
*          is an optional keyword input that specifies the matching   * 00021300
*          options that will be used to control which SRB(s) to purge * 00021400
*          for this request.                                          * 00021500
*          DEFAULT: ALL                                               * 00021600
*                                                                     * 00021700
*                                                                     * 00021800
*          [MATCHOPTION=ALL                                           * 00021900
*              specifies that the purge parameters which will be used * 00022000
*              for SRB(s) selection will be the RMTR, Purge ASCB and  * 00022100
*              Purge TCB addresses.                                   * 00022200
*                                                                     * 00022300
*                                                                     * 00022400
*              RMTRADDR=xrmtraddr                                     * 00022500
*                  is the name (RS-type) of a required 4 byte input   * 00022600
*                  that contains the address of the address of the    * 00022700
*                  RMTR.  If the program scheduled the SRB using      * 00022800
*                  SCHEDULE, this is the address that was placed in   * 00022900
*                  the SRBRMTR field (mapped by IHASRB).  If the      * 00023000
*                  program scheduled the SRB using IEAMSCHD, this is  * 00023100
*                  the address specified on the RMTRADDR parameter.   * 00023200
*                  It limits the purge to SRBs that are protected by  * 00023300
*                  the same RMTR--that is, where the SRBs have the    * 00023400
*                  same address.                                      * 00023500
*                                                                     * 00023600
*              PURGESTOKEN=xpurgestoken                               * 00023700
*                  is the name (RS-type) of a required 64 bit input   * 00023800
*                  that specifies the the Purge Stoken identifier.    * 00023900
*                  If the program that scheduled the SRB which is the * 00024000
*                  target of the purge using SCHEDULE, this field     * 00024100
*                  represents the STOKEN of the address space whose   * 00024200
*                  ASID was obtained and stored in the SRBASID field  * 00024300
*                  (mapped by IHASRB).  If the program scheduled the  * 00024400
*                  SRB using IEAMSCHD, this is the address that       * 00024500
*                  specified on theted by the PURGESTOKEN parameter.  * 00024600
*                  It limits the purge to SRBs that are protected by  * 00024700
*                  the same PURGESTOKEN, that is, where the SRBs have * 00024800
*                  the same purge address space.                      * 00024900
*                                                                     * 00025000
*                  NOTE:  This field is validity checked just prior   * 00025100
*                  to attempting the PurgeDQ request in the target    * 00025200
*                  address space.  If the STOKEN is valid at that     * 00025300
*                  time, the PurgeDQ request is attempted.  It is     * 00025400
*                  possible that the STOKEN passed via the            * 00025500
*                  PURGESTOKEN parameter can become invalid while the * 00025600
*                  PurgeDQ request is being processed.                * 00025700
*                                                                     * 00025800
*              PTCBADDR=xptcbaddr]                                    * 00025900
*                  is the name (RS-type) of a required 4 byte input   * 00026000
*                  that contains the address of address the Purge     * 00026100
*                  TCB.  If the program scheduled the SRB using       * 00026200
*                  before using SCHEDULE, this is the address that    * 00026300
*                  was placed in the SRBPTCB field (mapped by         * 00026400
*                  IHASRB).  If the program scheduled the SRB using   * 00026500
*                  IEAMSCHD, this is the address specified on the     * 00026600
*                  PTCBADDR parameter.  It limits the purge to SRBs   * 00026700
*                  that are protected by the same PTCBADDR--that is,  * 00026800
*                  where the SRBs have the same address.              * 00026900
*                                                                     * 00027000
*                                                                     * 00027100
*                                                                     * 00027200
*          [MATCHOPTION=STOKENANDTCB                                  * 00027300
*              specifies that the purge parameters which will be used * 00027400
*              for SRB(s) selection will be the Purge STOKEN and      * 00027500
*              Purge TCB addresses.                                   * 00027600
*                                                                     * 00027700
*                                                                     * 00027800
*              PURGESTOKEN=xpurgestoken                               * 00027900
*                  is the name (RS-type) of a required 64 bit input   * 00028000
*                  that specifies the the Purge Stoken identifier.    * 00028100
*                  If the program that scheduled the SRB which is the * 00028200
*                  target of the purge using SCHEDULE, this field     * 00028300
*                  represents the STOKEN of the address space whose   * 00028400
*                  ASID was obtained and stored in the SRBASID field  * 00028500
*                  (mapped by IHASRB).  If the program scheduled the  * 00028600
*                  SRB using IEAMSCHD, this is the address that       * 00028700
*                  specified on theted by the PURGESTOKEN parameter.  * 00028800
*                  It limits the purge to SRBs that are protected by  * 00028900
*                  the same PURGESTOKEN, that is, where the SRBs have * 00029000
*                  the same purge address space.                      * 00029100
*                                                                     * 00029200
*                  NOTE:  This field is validity checked just prior   * 00029300
*                  to attempting the PurgeDQ request in the target    * 00029400
*                  address space.  If the STOKEN is valid at that     * 00029500
*                  time, the PurgeDQ request is attempted.  It is     * 00029600
*                  possible that the STOKEN passed via the            * 00029700
*                  PURGESTOKEN parameter can become invalid while the * 00029800
*                  PurgeDQ request is being processed.                * 00029900
*                                                                     * 00030000
*              PTCBADDR=xptcbaddr]                                    * 00030100
*                  is the name (RS-type) of a required 4 byte input   * 00030200
*                  that contains the address of address the Purge     * 00030300
*                  TCB.  If the program scheduled the SRB using       * 00030400
*                  before using SCHEDULE, this is the address that    * 00030500
*                  was placed in the SRBPTCB field (mapped by         * 00030600
*                  IHASRB).  If the program scheduled the SRB using   * 00030700
*                  IEAMSCHD, this is the address specified on the     * 00030800
*                  PTCBADDR parameter.  It limits the purge to SRBs   * 00030900
*                  that are protected by the same PTCBADDR--that is,  * 00031000
*                  where the SRBs have the same address.              * 00031100
*                                                                     * 00031200
*                                                                     * 00031300
*                                                                     * 00031400
*                                                                     * 00031500
*                                                                     * 00031600
*                                                                     * 00031700
*                                                                     * 00031800
*                                                                     * 00031900
*      [SYNCH=YES|NO]                                               * 00032000
*          is an optional keyword input                               * 00032100
*          DEFAULT: YES                                               * 00032200
*                                                                     * 00032300
*                                                                     * 00032400
*          [SYNCH=YES]                                                * 00032500
*              specifies the caller should be suspended awaiting the  * 00032600
*              completion of the PurgeDQ request to complete.         * 00032700
*                                                                     * 00032800
*          [SYNCH=NO]                                                 * 00032900
*              specifies the caller should be not wait and the        * 00033000
*              PurgeDQ request should be completed asynchronously.    * 00033100
*                                                                     * 00033200
*                                                                     * 00033300
*                                                                     * 00033400
*                                                                     * 00033500
*                                                                     * 00033600
*                                                                     * 00033700
*      [RMTRPRMADDR=xrmtrprmaddr|NORMTRP                            * 00033800
*          is the name (RS-type) of an optional 4 byte input that     * 00033900
*          contains the address of the fullword address of the        * 00034000
*          parameter list to be presented to any RMTRs that are given * 00034100
*          control via this issuance of the PurgeDQ request, in       * 00034200
*          general purpose register 0.                                * 00034300
*          DEFAULT: NORMTRP                                           * 00034400
*                                                                     * 00034500
*                                                                     * 00034600
*          [RMTRPRMALETADDR=xrmtrprmaletaddr|NORMTRPALET]]          * 00034700
*              is the name (RS-type) of an optional 4 byte input that * 00034800
*              contains the address of the fullword ALET of the       * 00034900
*              parameter list to be presented to any RMTRs that are   * 00035000
*              given control via this issuance of the PurgeDQ         * 00035100
*              request, in access register 0.                         * 00035200
*              DEFAULT: NORMTRPALET                                   * 00035300
*                                                                     * 00035400
*                                                                     * 00035500
*                                                                     * 00035600
*                                                                     * 00035700
*                                                                     * 00035800
*                                                                     * 00035900
*      [PLISTVER=xplistver|IMPLIED_VERSION]                         * 00036000
*          is an optional byte input decimal value in the "0-0" range * 00036100
*          that specifies the macro version.  PLISTVER is the only    * 00036200
*          key allowed on the list form of MF and determines which    * 00036300
*          parameter list is generated.  Note that MAX may be         * 00036400
*          specified instead of a number, and the parameter list will * 00036500
*          be of the largest size currently supported. This size may  * 00036600
*          grow from release to release (thus possibly affecting the  * 00036700
*          amount of storage needed by your program).  If your        * 00036800
*          program can tolerate this, IBM recommends that you always  * 00036900
*          specify MAX when creating the list form parameter list as  * 00037000
*          that will ensure that the list form parameter list is      * 00037100
*          always long enough to hold whatever parameters might be    * 00037200
*          specified on the execute form.                             * 00037300
*          DEFAULT: IMPLIED_VERSION.  When PLISTVER is omitted, the   * 00037400
*          default is the lowest version which allows all of the      * 00037500
*          parameters specified on the invocation to be processed.    * 00037600
*                                                                     * 00037700
*                                                                     * 00037800
*                                                                     * 00037900
*                                                                     * 00038000
*      [MF=S|L|E]                                                   * 00038100
*          is an optional keyword input which specifies the macro     * 00038200
*          form.                                                      * 00038300
*          DEFAULT: S                                                 * 00038400
*                                                                     * 00038500
*                                                                     * 00038600
*          [MF=S]                                                     * 00038700
*              specifies the standard form of the macro.  The "S"     * 00038800
*              form generates code to put the parameters into an      * 00038900
*              in-line parameter list and invoke the desired service. * 00039000
*              Full checking for required macro keys is done along    * 00039100
*              with supplying defaults for omitted optional           * 00039200
*              parameters.                                            * 00039300
*                                                                     * 00039400
*          [MF=(L,xmfctrl,xmfattr|0D)]                              * 00039500
*              specifies the list form of the macro.  The "L" form    * 00039600
*              defines an area to be used for the parameter list.     * 00039700
*              Only the PLISTVER key may be specified on the          * 00039800
*              invocation.  All other macro parameters are flagged as * 00039900
*              errors.  If PLISTVER is not specified, the original    * 00040000
*              parameter list definition is used.                     * 00040100
*                                                                     * 00040200
*            ,xmfctrl                                                 * 00040300
*              is a required input.  It is the name of a storage area * 00040400
*              for the parameter list.                                * 00040500
*                                                                     * 00040600
*            ,xmfattr|0D                                            * 00040700
*              is an optional 60 character input string that varies   * 00040800
*              from 1 to 60 characters. It can contain any value that * 00040900
*              is valid on an assembler DS pseudo-op. You can use     * 00041000
*              this parameter to force boundary alignment of the      * 00041100
*              parameter list.                                        * 00041200
*              DEFAULT: 0D which forces the parameter list to a       * 00041300
*              doubleword boundary.                                   * 00041400
*                                                                     * 00041500
*          [MF=(E,xmfctrl,COMPLETE)]                                * 00041600
*              specifies the execute form of the macro.  The "E" form * 00041700
*              generates code to put the parameters into the          * 00041800
*              parameter list specified by xmfctrl and provides full  * 00041900
*              syntax checking with default setting.                  * 00042000
*                                                                     * 00042100
*            ,xmfctrl                                                 * 00042200
*              is a required input.  It is the name (RS-type), or     * 00042300
*              address in register (1)-(12), of a storage area for    * 00042400
*              the parameter list.                                    * 00042500
*                                                                     * 00042600
*            ,COMPLETE                                              * 00042700
*              is an optional keyword input which specifies the       * 00042800
*              degree of macro parameter syntax checking.             * 00042900
*              DEFAULT: COMPLETE                                      * 00043000
*                                                                     * 00043100
*                                                                     * 00043200
*              COMPLETE                                               * 00043300
*                  Checking for required macro keys is done and       * 00043400
*                  defaults are supplied for omitted optional         * 00043500
*                  parameters.                                        * 00043600
*                                                                     * 00043700
*                                                                     * 00043800
*                                                                     * 00043900
*                                                                     * 00044000
*                                                                     * 00044100
*                                                                     * 00044200
*                                                                     * 00044300
*01* RETURN CODES:                                                    * 00044400
*                                                                     * 00044500
*                                                                     * 00044600
*       00        Purge Request was successful.                       * 00044700
*                                                                     * 00044800
*       08        Attempt to schedule full function cross memory      * 00044900
*                 PurgeDQ failed because the target address space was * 00045000
*                 terminating or had already terminated.  A regular   * 00045100
*                 PurgeDQ was issued to purge any SRB activity that   * 00045200
*                 had been scheduled, matching the purge parameters,  * 00045300
*                 that has yet to be dispatched.                      * 00045400
*                                                                     * 00045500
*                                                                     * 00045600
*                                                                     * 00045700
*01* REASON CODES:  None.                                             * 00045800
*                                                                     * 00045900
*01* ABEND CODES:                                                     * 00046000
*                                                                     * 00046100
*                                                                     * 00046200
*       AC7       The IEAMPDQ service routine has detected            * 00046300
*                 environmental errors.                               * 00046400
*                                                                     * 00046500
*                                                                     * 00046600
*                                                                     * 00046700
*01* ABEND REASON CODES:                                              * 00046800
*                                                                     * 00046900
*       REASON    ABEND                                               * 00047000
*       CODE      CODE      DESCRIPTION                               * 00047100
*                                          * 00047200
*                                                                     * 00047300
*                                                                     * 00047400
*       00400000  AC7       The  parameter  list is not in the user's * 00047500
*                           primary address space.                    * 00047600
*                                                                     * 00047700
*       00400001  AC7       The  parameters  passed by the caller are * 00047800
*                           not addressable.                          * 00047900
*                                                                     * 00048000
*       00400002  AC7       The caller held locks.                    * 00048100
*                                                                     * 00048200
*       00400003  AC7       The  space  token (STOKEN) passed via the * 00048300
*                           TARGETSTOKEN parameter is not valid.      * 00048400
*                                                                     * 00048500
*       00400004  AC7       The  space  token (STOKEN) passed via the * 00048600
*                           PURGESTOKEN parameter is not valid.       * 00048700
*                                                                     * 00048800
*                                                                     * 00048900
*                                                                     * 00049000
*01* MODULE TYPE:  ASSEM MACRO                                        * 00049100
*                                                                     * 00049200
*02*   PROCESSOR:  ASSEM                                              * 00049300
*                                                                     * 00049400
*01* COMPONENT:  SC1C5                                                * 00049500
*                                                                     * 00049600
*01* DISTRIBUTION LIBRARY: AMACLIB                                    * 00049700
*                                                                     * 00049800
*01* MACRO USAGE NOTES:                                               * 00049900
*                                                                     * 00050000
*                                                                     * 00050100
*    1.  Printing of the macro expansion is controlled by the ZPRINT  * 00050200
*        global macro variable.  Any value other than 'NO' will       * 00050300
*        result in the macro expansion being printed.  The default is * 00050400
*        'YES'.  The following examples illustrate how the ZPRINT     * 00050500
*        variable should be set.                                      * 00050600
*                                                                     * 00050700
*                    GBLC &ZPRINT                                     * 00050800
*            &ZPRINT SETC 'YES'          &ZPRINT SETC 'NO'            * 00050900
*                                                                     * 00051000
*                                                                     * 00051100
*    2.  All keys currently contained in the IEAMPDQ macro correspond * 00051200
*        to  version 0.  If you specify PLISTVER, use a value of 0 or * 00051300
*        MAX.                                                         * 00051400
*                                                                     * 00051500
*                                                                     * 00051600
*                                                                     * 00051700
*                                                                     * 00051800
*01* CHANGE ACTIVITY:                                                 * 00051900
*                                                                     * 00052000
*   Flag LineItem  FMID    Date   ID    Comment                       * 00052100
*                                                                     * 00052200
*    $L0=RRSCS    HBB6603 960329 B7HGEJ:  Resource Recovery Services  * 00052300
****** END OF SPECIFICATIONS *****************************************/ 00052400
*/********************************************************************* 00052500
         MACRO                                                          00052600
&XLABEL  IEAMPDQ &TARGETSTOKEN=,&MATCHOPTION=,&RMTRADDR=,&PURGESTOKEN=,*00052700
               &PTCBADDR=,&SYNCH=,&RMTRPRMADDR=,&RMTRPRMALETADDR=,     *00052800
               &PLISTVER=,&MF=                                          00052900
.*                                                                      00053000
*                     MACDATE -04/22/96-<0>                             00053100
.*                                                                      00053200
.*******************************************************************    00053300
.***AB.02  GLOBAL VARIABLES TO CONTROL PRINT AND CODE GENERATION        00053400
.*******************************************************************    00053500
                     GBLC  &ZPRINT     YES=PRINT NO=NO PRINT            00053600
                     GBLC  &ZTEST      YES=TEST NO=NO TEST              00053700
                     GBLC  &ZSYSTEM    PCCODE10, MVS, SAK, VM, XAX      00053800
.*                                                                      00053900
                     GBLC  &ZIEAMPDQ   YES=MACRO USED AT LEAST ONCE     00054000
.*******************************************************************    00054100
.***AB.03  COMMONLY USED LOCAL MACRO VARIABLES                          00054200
.*******************************************************************    00054300
                     LCLC  &ZMS        ERROR MESSAGE WORK AREA          00054400
                     LCLC  &ZCNDX      LAST THREE SYSNDX CHARACTERS     00054500
                     LCLC  &ZCLNG      USED WHEN LENGTH IS NEEDED       00054600
                     LCLC  &ZCGPR      USED WHEN VALUE IS IN A GPR      00054700
                     LCLC  &ZCVAL      USED TO CONTAIN FIXED VALUE      00054800
                     LCLA  &ZAWRK      USED AS A WORK AREA              00054900
                     LCLA  &ZASIZ      USED FOR SIZE OF VALUE           00055000
                     LCLA  &ZN         NUMERIC WORK VARIABLE            00055100
                     LCLC  &ZC         CHARACTER WORK VARIABLE          00055200
                     LCLC  &ZTLC       CHARACTER TOO LONG VARIABLE      00055300
                     LCLA  &ZTLA       VALUE TOO LONG VARIABLE          00055400
                     LCLA  &ZMACRET    MACRO RETURN CODE                00055500
&ZMACRET             SETA  0           ASSUME NO ERRORS                 00055600
.*                                                                      00055700
                     LCLC  &ZCSYSLIST(255)      NONXKEY, POS ARRAY      00055800
                     LCLA  &ZASYSLNDX  WORK INDEX FOR ZCSYSLIST()       00055900
                     LCLA  &ZPLLEN     PARAMETER LIST LENGTH            00056000
                     LCLC  &ZENDBASEPL          End of base PL          00056100
                     LCLA  &ZPLWORKA   PARAMETER LIST LENGTH            00056200
.*******************************************************************    00056300
.***AB.04  MACRO VARIABLES FOR RANGES AND SETS OF ARGUMENTS             00056400
.*******************************************************************    00056500
                     LCLA  &ZI         INDEX FOR ARRAY                  00056600
                     LCLA  &ZJ         INDEX FOR PARMS                  00056700
                     LCLA  &ZK         INDEX FOR PARSE                  00056800
                     LCLA  &ZLO        LOW RANGE VALUE                  00056900
                     LCLA  &ZHI        HIGH RANGE VALUE                 00057000
                     LCLC  &ZW         WORK AREA FOR PARM               00057100
.********************************************************************   00057200
.***AB.05  INVOKE MVS MACROS TO CONTROL CODE GENERATION                 00057300
.********************************************************************   00057400
                     GBLC  &SYSSPLV    SP LEVEL 1,2,3 -SPLEVEL          00057500
                     GBLC  &SYSASCE    SYSTEM STATE P ANY AR-SYSSTATE   00057600
.*                                                                      00057700
                     AIF   (K'&SYSASCE GT 0).ZSYS4  SYS STATE DEFINED   00057800
                     AIF   (K'&SYSSPLV GT 0).ZSYS2  SP LEVEL DEFINED    00057900
                     SPLEVEL  TEST                                      00058000
.ZSYS2               ANOP  ,                                            00058100
                     AIF   ('&SYSSPLV' EQ '1').ZSYS3  PRE SP 3.1        00058200
                     AIF   ('&SYSSPLV' EQ '2').ZSYS3  PRE SP 3.1        00058300
                     SYSSTATE TEST                                      00058400
                     AGO   .ZSYS4                                       00058500
.ZSYS3               ANOP  ,                                            00058600
&SYSASCE             SETC  'P'         ASSUME SYSSTATE PRIMARY          00058700
.ZSYS4               ANOP  ,                                            00058800
.*******************************************************************    00058900
.***AB.07  DEFINE ALL MACRO VARIABLES                                   00059000
.*******************************************************************    00059100
                     LCLC  &XTARGETSTOKEN       ++ NAME                 00059200
                     LCLC  &XMATCHOPTION        ++ VALUE                00059300
                     LCLC  &XRMTRADDR  ++ NAME                          00059400
                     LCLC  &XPURGESTOKEN        ++ NAME                 00059500
                     LCLC  &XPTCBADDR  ++ NAME                          00059600
                     LCLC  &XSYNCH     ++ VALUE                         00059700
                     LCLC  &XRMTRPRMADDR        ++ NAME                 00059800
                     LCLC  &XRMTRPRMALETADDR    ++ NAME                 00059900
                     LCLA  &XPLISTVER  ++ VALUE                         00060000
                     LCLC  &XMF        ++ VALUE                         00060100
                     LCLC  &XMFCTRL    ++ NAME                          00060200
                     LCLC  &XMFATTR    ++ VALUE                         00060300
                     LCLC  &XMFSCK     ++ VALUE                         00060400
.*******************************************************************    00060500
.***AB.13  DEFINE MACRO VARIABLES FOR INPUT/OUTPUT PROCESSING           00060600
.*******************************************************************    00060700
                     LCLC  &ZXTARGETSTOKEN      ++ INPUT NAME           00060800
                     LCLC  &ZXMATCHOPTION       ++ INPUT VALUE          00060900
                     LCLC  &ZXRMTRADDR          ++ INPUT NAME           00061000
                     LCLC  &ZXPURGESTOKEN       ++ INPUT NAME           00061100
                     LCLC  &ZXPTCBADDR          ++ INPUT NAME           00061200
                     LCLC  &ZXSYNCH    ++ INPUT VALUE                   00061300
                     LCLC  &ZXRMTRPRMADDR       ++ INPUT NAME           00061400
                     LCLC  &ZXRMTRPRMALETADDR   ++ INPUT NAME           00061500
                     LCLC  &ZXPLISTVER          ++ INPUT VALUE          00061600
                     LCLC  &ZXMF       ++ INPUT VALUE                   00061700
                     LCLC  &ZXMFCTRL   ++ INPUT NAME                    00061800
                     LCLC  &ZXMFATTR   ++ INPUT VALUE                   00061900
                     LCLC  &ZXMFSCK    ++ INPUT VALUE                   00062000
.********************************************************************   00062100
.***AC.PLV01  PROCESS PLISTVER                                      *   00062200
.********************************************************************   00062300
&XPLISTVER      SETA  0                                                 00062400
                AIF   (K'&PLISTVER(1) LE 0).ZPLV0                       00062500
                AIF   ('&PLISTVER(1)' NE 'MAX').ZPLV0                   00062600
&XPLISTVER      SETA  0                                                 00062700
.ZPLV0          ANOP  ,                                                 00062800
.*                                                                      00062900
                AIF   (K'&PLISTVER(1) LE 0).ZPVCKE                      00063000
                AIF   ('&PLISTVER(1)' EQ 'IMPLIED_VERSION').ZPVCKE      00063100
                AIF   ('&PLISTVER(1)' EQ 'MAX').ZPVCKE                  00063200
.*-------------------------------------------------------------------   00063300
                AIF   (N'&PLISTVER LE 1).ZPVCK3  CK NUM                 00063400
&ZMS            SETC  '"PLISTVER='         *KPOSA* MNOTE                00063500
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00063600
&ZMS            SETC  '&ZMS "PLISTVER"'                                 00063700
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00063800
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00063900
                AGO   .ZPVCK2                                           00064000
.ZPVCK3         ANOP  ,                                                 00064100
.*-------------------------------------------------------------------   00064200
                AIF   ('&PLISTVER'(1,1) NE '(').ZPVCK2                  00064300
&ZMS            SETC  '"PLISTVER='         *KGPRA* MNOTE                00064400
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00064500
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         00064600
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'                 00064700
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00064800
                AGO   .ZPVCKE                                           00064900
.ZPVCK2         ANOP  ,                                                 00065000
.*-------------------------------------------------------------------   00065100
&ZN             SETA   &PLISTVER(1)        CONVERT TO ARITHMETIC        00065200
                AIF   (&ZN GE &XPLISTVER).ZPVCK4                        00065300
&ZMS            SETC  'PLISTVER='          *KVALA* MNOTE                00065400
&ZMS            SETC  '&ZMS.&PLISTVER(1)'                               00065500
&ZMS            SETC  '&ZMS., BUT PLISTVER OF'                          00065600
&ZMS            SETC  '&ZMS &XPLISTVER'                                 00065700
                MNOTE 8,' &ZMS IS REQUIRED.'                            00065800
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00065900
                AGO   .ZPVCK5                                           00066000
.ZPVCK4         ANOP  ,                                                 00066100
&XPLISTVER      SETA  &PLISTVER(1)                                      00066200
.ZPVCK5         ANOP  ,                                                 00066300
.*-------------------------------------------------------------------   00066400
&ZCVAL          SETC  '&PLISTVER(1)'                                    00066500
                AIF   ('&ZCVAL'(1,1) EQ '(').ZPVCKE  IN GPR             00066600
                AIF   (T'&ZCVAL NE 'N').ZPVCK6  NUMERIC ERR             00066700
                AIF   (&XPLISTVER LT 0).ZPVCK6  TOO LOW                 00066800
                AIF   (&XPLISTVER LE 0).ZPVCKE  NOT HIGH                00066900
.ZPVCK6         ANOP   ,                                                00067000
&ZMS            SETC  '"PLISTVER='         *KRNGA* MNOTE                00067100
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00067200
&ZMS            SETC  '&ZMS THE RANGE IS "0-0"'                         00067300
                MNOTE 8,' &ZMS FOR ARGUMENT 1.'                         00067400
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00067500
.ZPVCKE         ANOP   ,                                                00067600
.********************************************************************   00067700
.***AG.MF01 PROCESS MF MACRO FORMS                                      00067800
.********************************************************************   00067900
                     ACTR  10000                                        00068000
.*------------------------------------------------------------------    00068100
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00068200
&XMF                 SETC  ''          INITIALIZE XVARIABLE             00068300
.*-------------------------------------------------------------------   00068400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00068500
.ZG34                ANOP  ,                                            00068600
&ZTLC                SETC 'S'                                           00068700
                     AIF   ('&MF(1)' NE '&ZTLC').ZG35                   00068800
&XMF                 SETC  'S'         SET KEYWORD                      00068900
                     AIF   (N'&MF LE 1).ZG34A   CK NUM                  00069000
&ZMS                 SETC  '"MF='      *KPOSA* MNOTE                    00069100
&ZMS                 SETC  '&ZMS.&MF"'                                  00069200
&ZMS                 SETC  '&ZMS "MF"'                                  00069300
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00069400
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00069500
.ZG34A               ANOP  ,                                            00069600
.*-------------------------------------------------------------------   00069700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00069800
.ZG35                ANOP  ,                                            00069900
&ZTLC                SETC 'L'                                           00070000
                     AIF   ('&MF(1)' NE '&ZTLC').ZG42                   00070100
&XMF                 SETC  'L'         SET KEYWORD                      00070200
                     AIF   (N'&MF LE 3).ZG35A   CK NUM                  00070300
&ZMS                 SETC  '"MF='      *KPOSA* MNOTE                    00070400
&ZMS                 SETC  '&ZMS.&MF"'                                  00070500
&ZMS                 SETC  '&ZMS "MF"'                                  00070600
                     MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'         00070700
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00070800
.ZG35A               ANOP  ,                                            00070900
.*-------------------------------------------------------------------   00071000
.***AG.KKCTL08 -MF(L) SPECIAL CHECK                                     00071100
                     AIF   (N'&SYSLIST NE 0).ZG35B  POSITIONALS?        00071200
                     AIF   ('&TARGETSTOKEN' NE '').ZG35B  KEYS?         00071300
                     AIF   ('&MATCHOPTION' NE '').ZG35B  KEYS?          00071400
                     AIF   ('&RMTRADDR' NE '').ZG35B  KEYS?             00071500
                     AIF   ('&PURGESTOKEN' NE '').ZG35B  KEYS?          00071600
                     AIF   ('&PTCBADDR' NE '').ZG35B  KEYS?             00071700
                     AIF   ('&SYNCH' NE '').ZG35B  KEYS?                00071800
                     AIF   ('&RMTRPRMADDR' NE '').ZG35B  KEYS?          00071900
                     AIF   ('&RMTRPRMALETADDR' NE '').ZG35B  KEYS?      00072000
                     AGO    .ZG35C     INVOCATION OKAY                  00072100
.ZG35B               ANOP  ,                                            00072200
&ZMS                 SETC  'THE "L" FORM OF "MF"'  *MFLA* MNOTE         00072300
&ZMS                 SETC  '&ZMS CAN ONLY HAVE'                         00072400
&ZMS                 SETC  '&ZMS THE "PLISTVER" KEY'                    00072500
                     MNOTE 8,' &ZMS SPECIFIED ON THE INVOCATION.'       00072600
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00072700
.ZG35C               ANOP  ,                                            00072800
.*-------------------------------------------------------------------   00072900
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00073000
&ZXMFCTRL            SETC  'INPUT'     SET IN/OUTPUT                    00073100
&XMFCTRL             SETC  '&MF(2,1)'  SET XVARIABLE                    00073200
                     AIF   (N'&MF(2) GT 1).ZG37B  MULTI PARMS           00073300
&XMFCTRL             SETC  '&MF(2)'    SET XVARIABLE                    00073400
.ZG37B               AIF   (K'&MF(2) GT 0).ZG37C                        00073500
&ZXMFCTRL            SETC  ''          RESET IN/OUTPUT                  00073600
&ZMS                 SETC  'WHEN "L" IS SPECIFIED'  *KRQDA*             00073700
&ZMS                 SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'          00073800
                     MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                 00073900
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00074000
.ZG37C               ANOP  ,                                            00074100
.*-------------------------------------------------------------------   00074200
.***AG.KCK01 NAME, OPT RQD INPUT, POS(2) -GPR NOT ALLOWED               00074300
                     AIF   (K'&ZXMFCTRL LE 0).ZG37P  NOT I/O            00074400
                     AIF   ('&XMFCTRL'(1,1) NE '(').ZG37P               00074500
&ZXMFCTRL            SETC  ''          RESET IN/OUTPUT                  00074600
&ZMS                 SETC  '"MF='      *KGPRA* MNOTE                    00074700
&ZMS                 SETC  '&ZMS.&MF"'                                  00074800
&ZMS                 SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'    00074900
                     MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 2.'            00075000
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00075100
.ZG37P               ANOP  ,                                            00075200
.*-------------------------------------------------------------------   00075300
.***AG.KXVAR13 VALUE, OPT INPUT, POS(3) -XVARIABLE                      00075400
&ZXMFATTR            SETC  'INPUT'     SET IN/OUTPUT                    00075500
&XMFATTR             SETC  '0D'                                         00075600
                     AIF   (K'&MF(3) LE 0).ZG40B  PARM                  00075700
&XMFATTR             SETC  '&MF(3,1)'  SET XVARIABLE                    00075800
                     AIF   (N'&MF(3) GT 1).ZG40B  MULTI PARMS           00075900
&XMFATTR             SETC  '&MF(3)'    SET XVARIABLE                    00076000
.ZG40B               ANOP  ,                                            00076100
.*-------------------------------------------------------------------   00076200
.***AG.KCK01 VALUE, OPT INPUT, POS(3) -GPR NOT ALLOWED                  00076300
                     AIF   (K'&ZXMFATTR LE 0).ZG40P  NOT I/O            00076400
                     AIF   ('&XMFATTR'(1,1) NE '(').ZG40P               00076500
&ZXMFATTR            SETC  ''          RESET IN/OUTPUT                  00076600
&ZMS                 SETC  '"MF='      *KGPRA* MNOTE                    00076700
&ZMS                 SETC  '&ZMS.&MF"'                                  00076800
&ZMS                 SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'    00076900
                     MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 3.'            00077000
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00077100
.ZG40P               ANOP  ,                                            00077200
.*-------------------------------------------------------------------   00077300
.***AG.KCK03 VALUE, OPT INPUT, POS(3) -CHARACTER LENGTH                 00077400
                     AIF   (K'&ZXMFATTR LE 0).ZG40S  NOT I/O            00077500
                     AIF   (K'&XMFATTR LE 60).ZG40S  LNG OK             00077600
&ZXMFATTR            SETC  ''          RESET IN/OUTPUT                  00077700
&ZMS                 SETC  '"MF='      *KLNGA* MNOTE                    00077800
&ZMS                 SETC  '&ZMS.&MF"'                                  00077900
&ZMS                 SETC  '&ZMS ARGUMENT 3 EXCEEDS THE MAXIMUM'        00078000
                     MNOTE 8,' &ZMS LENGTH OF 60 CHARACTERS.'           00078100
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00078200
.ZG40S               ANOP  ,                                            00078300
.*-------------------------------------------------------------------   00078400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00078500
.ZG42                ANOP  ,                                            00078600
&ZTLC                SETC 'E'                                           00078700
                     AIF   ('&MF(1)' NE '&ZTLC').ZG50                   00078800
&XMF                 SETC  'E'         SET KEYWORD                      00078900
                     AIF   (N'&MF LE 3).ZG42A   CK NUM                  00079000
&ZMS                 SETC  '"MF='      *KPOSA* MNOTE                    00079100
&ZMS                 SETC  '&ZMS.&MF"'                                  00079200
&ZMS                 SETC  '&ZMS "MF"'                                  00079300
                     MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'         00079400
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00079500
.ZG42A               ANOP  ,                                            00079600
.*-------------------------------------------------------------------   00079700
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00079800
&ZXMFCTRL            SETC  'INPUT'     SET IN/OUTPUT                    00079900
&XMFCTRL             SETC  '&MF(2,1)'  SET XVARIABLE                    00080000
                     AIF   (N'&MF(2) GT 1).ZG44B  MULTI PARMS           00080100
&XMFCTRL             SETC  '&MF(2)'    SET XVARIABLE                    00080200
.ZG44B               AIF   (K'&MF(2) GT 0).ZG44C                        00080300
&ZXMFCTRL            SETC  ''          RESET IN/OUTPUT                  00080400
&ZMS                 SETC  'WHEN "E" IS SPECIFIED'  *KRQDA*             00080500
&ZMS                 SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'          00080600
                     MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                 00080700
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00080800
.ZG44C               ANOP  ,                                            00080900
.*-------------------------------------------------------------------   00081000
.***AG.KCK02 NAME, OPT RQD INPUT, POS(2) -GPR OUT OF RANGE              00081100
                     AIF   (K'&ZXMFCTRL LE 0).ZG44R  NOT I/O            00081200
                     AIF   ('&XMFCTRL'(1,1) NE '(').ZG44R               00081300
&ZCGPR               SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)                   00081400
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG44P                 00081500
                     AIF   (K'&ZCGPR GT 2).ZG44Q                        00081600
                     AIF   ('&ZCGPR' EQ '0').ZG44Q                      00081700
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00081800
                     AIF   (T'&ZCGPR NE 'N').ZG44Q  INVALID REG NAME    00081900
.ZG44P               ANOP  ,                                            00082000
                     AIF   (T'&ZCGPR NE 'N').ZG44R  NON NUMERIC         00082100
                     AIF   ('&ZCGPR' LT '1').ZG44Q                      00082200
                     AIF   ('&ZCGPR' LE '12').ZG44R                     00082300
.ZG44Q               ANOP  ,                                            00082400
&ZMS                 SETC  '"MF='      *KGPRA* MNOTE                    00082500
&ZMS                 SETC  '&ZMS.&MF"'                                  00082600
&ZMS                 SETC  '&ZMS ARGUMENT 2 MUST SPECIFY A REGISTER'    00082700
                     MNOTE 8,' &ZMS IN THE RANGE (1)-(12).'             00082800
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00082900
.ZG44R               ANOP  ,                                            00083000
.*-------------------------------------------------------------------   00083100
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00083200
&XMFSCK              SETC  ''          INITIALIZE XVARIABLE             00083300
.ZG48A   AIF   ('&MF(3)' NE 'COMPLETE').ZG49A                           00083400
&XMFSCK              SETC  'COMPLETE'  SET KEYWORD                      00083500
.*-------------------------------------------------------------------   00083600
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00083700
.ZG49A               AIF   (K'&XMFSCK GT 0).ZG49C  KEYWORD              00083800
                     AIF   (K'&MF(3) LE 0).ZG49B                        00083900
&ZMS                 SETC  '"MF='      *KUKWA* MNOTE                    00084000
&ZMS                 SETC  '&ZMS.&MF"'                                  00084100
&ZMS                 SETC  '&ZMS ARGUMENT 3 IS AN UNKNOWN KEYWORD. '    00084200
&ZMS                 SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'          00084300
&ZMS                 SETC  '&ZMS "COMPLETE".'   VALID KEYWORD           00084400
                     MNOTE 8,' &ZMS '                                   00084500
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00084600
.ZG49B               ANOP  ,                                            00084700
&XMFSCK              SETC  'COMPLETE'  SET DEFAULT KEYWORD              00084800
.ZG49C               ANOP  ,                                            00084900
&ZXMFSCK             SETC  'INPUT'     SET IN/OUTPUT                    00085000
.*------------------------------------------------------------------    00085100
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00085200
.ZG50                ANOP  ,                                            00085300
&ZXMF                SETC  'INPUT'     SET IN/OUTPUT                    00085400
                     AIF   (K'&XMF GT 0).ZG50E  VALID ARG               00085500
                     AIF   (T'&MF EQ 'O').ZG50D  OMITTED                00085600
&ZASYSLNDX           SETA  0                                            00085700
.ZG50A               ANOP  ,           POSITIONAL MACRO KEY             00085800
&ZASYSLNDX           SETA  &ZASYSLNDX+1                                 00085900
                     AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG50C             00086000
&ZTLC                SETC 'MF'                                          00086100
                     AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG50A    00086200
.ZG50B               ANOP  ,                                            00086300
&ZXMF                SETC  ''          RESET IN/OUTPUT                  00086400
&ZMS                 SETC  'THE "MF" KEY'       *KOPTA* MNOTE           00086500
&ZMS                 SETC  '&ZMS MUST CONTAIN ONE'                      00086600
                     MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'             00086700
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00086800
                     AGO   .ZG50E                                       00086900
.ZG50C               ANOP  ,                                            00087000
&ZXMF                SETC  ''          RESET IN/OUTPUT                  00087100
&ZMS                 SETC  '"MF='      *KUKWA* MNOTE                    00087200
&ZMS                 SETC  '&ZMS.&MF"'                                  00087300
&ZMS                 SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '    00087400
&ZMS                 SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'          00087500
&ZMS                 SETC  '&ZMS "S",'          VALID KEYWORD           00087600
&ZMS                 SETC  '&ZMS "L",'          VALID KEYWORD           00087700
&ZMS                 SETC  '&ZMS OR "E".'       VALID KEYWORD           00087800
                     MNOTE 8,' &ZMS '                                   00087900
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00088000
                     AGO   .ZG50E                                       00088100
.ZG50D               ANOP  ,                                            00088200
&XMF                 SETC  'S'         SET DEFAULT KEYWORD              00088300
&XMFSCK              SETC  'COMPLETE'  COMPLETE CHECKING                00088400
.ZG50E               ANOP  ,                                            00088500
.********************************************************************   00088600
.***AG.MF02  FULL MACRO SYNTAX CHECKING                                 00088700
.********************************************************************   00088800
                     ACTR  10000                                        00088900
.*-------------------------------------------------------------------   00089000
.***AG.MF03 MF=(SLE)                                                    00089100
                     AIF   ('&XMF' EQ 'L').ZGMFX                        00089200
.*----------------------------------------------------------------***   00089300
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00089400
                     AIF   (N'&TARGETSTOKEN LE 1).ZG2A  CK NUM          00089500
&ZMS                 SETC  '"TARGETSTOKEN='     *KPOSA* MNOTE           00089600
&ZMS                 SETC  '&ZMS.&TARGETSTOKEN"'                        00089700
&ZMS                 SETC  '&ZMS "TARGETSTOKEN"'                        00089800
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00089900
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00090000
.ZG2A                ANOP  ,                                            00090100
.*-------------------------------------------------------------------   00090200
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00090300
&ZXTARGETSTOKEN      SETC  'INPUT'     SET IN/OUTPUT                    00090400
&XTARGETSTOKEN       SETC  '&TARGETSTOKEN(1)'   SET XVARIABLE           00090500
                     AIF   (N'&TARGETSTOKEN GT 1).ZG2B  MULTI PARMS     00090600
&XTARGETSTOKEN       SETC  '&TARGETSTOKEN'      SET XVARIABLE           00090700
.ZG2B                AIF   (K'&TARGETSTOKEN(1) GT 0).ZG2C               00090800
&ZXTARGETSTOKEN      SETC  ''          RESET IN/OUTPUT                  00090900
&ZMS                 SETC  ' '         *KRQDA*                          00091000
&ZMS                 SETC  '&ZMS "TARGETSTOKEN" KEY AND ITS ARGUMENT'   00091100
                     MNOTE 8,' &ZMS ARE REQUIRED.'                      00091200
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00091300
.ZG2C                ANOP  ,                                            00091400
.*-------------------------------------------------------------------   00091500
.***AG.KCK01 NAME, RQD INPUT, KEYS -GPR NOT ALLOWED                     00091600
                     AIF   (K'&ZXTARGETSTOKEN LE 0).ZG2P  NOT I/O       00091700
                     AIF   ('&XTARGETSTOKEN'(1,1) NE '(').ZG2P          00091800
&ZXTARGETSTOKEN      SETC  ''          RESET IN/OUTPUT                  00091900
&ZMS                 SETC  '"TARGETSTOKEN='     *KGPRA* MNOTE           00092000
&ZMS                 SETC  '&ZMS.&TARGETSTOKEN"'                        00092100
&ZMS                 SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'    00092200
                     MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'            00092300
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00092400
.ZG2P                ANOP  ,                                            00092500
.*------------------------------------------------------------------    00092600
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00092700
&XMATCHOPTION        SETC  ''          INITIALIZE XVARIABLE             00092800
.*-------------------------------------------------------------------   00092900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00093000
.ZG6                 ANOP  ,                                            00093100
                     AIF   (K'&MATCHOPTION(1) LE 0).ZG6A                00093200
&ZTLC                SETC 'ALL'                                         00093300
                     AIF   ('&MATCHOPTION(1)' NE '&ZTLC').ZG12          00093400
&XMATCHOPTION        SETC  'ALL'       SET KEYWORD                      00093500
                     AIF   (N'&MATCHOPTION LE 1).ZG6A  CK NUM           00093600
&ZMS                 SETC  '"MATCHOPTION='      *KPOSA* MNOTE           00093700
&ZMS                 SETC  '&ZMS.&MATCHOPTION"'                         00093800
&ZMS                 SETC  '&ZMS "MATCHOPTION"'                         00093900
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00094000
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00094100
.ZG6A                ANOP  ,                                            00094200
.*----------------------------------------------------------------***   00094300
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00094400
                     AIF   (N'&RMTRADDR LE 1).ZG8A  CK NUM              00094500
&ZMS                 SETC  '"RMTRADDR='         *KPOSA* MNOTE           00094600
&ZMS                 SETC  '&ZMS.&RMTRADDR"'                            00094700
&ZMS                 SETC  '&ZMS "RMTRADDR"'                            00094800
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00094900
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00095000
.ZG8A                ANOP  ,                                            00095100
.*-------------------------------------------------------------------   00095200
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00095300
&ZXRMTRADDR          SETC  'INPUT'     SET IN/OUTPUT                    00095400
&XRMTRADDR           SETC  '&RMTRADDR(1)'       SET XVARIABLE           00095500
                     AIF   (N'&RMTRADDR GT 1).ZG8B  MULTI PARMS         00095600
&XRMTRADDR           SETC  '&RMTRADDR'          SET XVARIABLE           00095700
.ZG8B                AIF   (K'&RMTRADDR(1) GT 0).ZG8C                   00095800
&ZXRMTRADDR          SETC  ''          RESET IN/OUTPUT                  00095900
&ZMS                 SETC  ' '         *KRQDA*                          00096000
&ZMS                 SETC  '&ZMS "RMTRADDR" KEY AND ITS ARGUMENT'       00096100
                     MNOTE 8,' &ZMS ARE REQUIRED.'                      00096200
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00096300
.ZG8C                ANOP  ,                                            00096400
.*-------------------------------------------------------------------   00096500
.***AG.KCK01 NAME, OPT RQD INPUT, KEYS -GPR NOT ALLOWED                 00096600
                     AIF   (K'&ZXRMTRADDR LE 0).ZG8P  NOT I/O           00096700
                     AIF   ('&XRMTRADDR'(1,1) NE '(').ZG8P              00096800
&ZXRMTRADDR          SETC  ''          RESET IN/OUTPUT                  00096900
&ZMS                 SETC  '"RMTRADDR='         *KGPRA* MNOTE           00097000
&ZMS                 SETC  '&ZMS.&RMTRADDR"'                            00097100
&ZMS                 SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'    00097200
                     MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'            00097300
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00097400
.ZG8P                ANOP  ,                                            00097500
.*----------------------------------------------------------------***   00097600
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00097700
                     AIF   (N'&PURGESTOKEN LE 1).ZG9A  CK NUM           00097800
&ZMS                 SETC  '"PURGESTOKEN='      *KPOSA* MNOTE           00097900
&ZMS                 SETC  '&ZMS.&PURGESTOKEN"'                         00098000
&ZMS                 SETC  '&ZMS "PURGESTOKEN"'                         00098100
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00098200
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00098300
.ZG9A                ANOP  ,                                            00098400
.*-------------------------------------------------------------------   00098500
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00098600
&ZXPURGESTOKEN       SETC  'INPUT'     SET IN/OUTPUT                    00098700
&XPURGESTOKEN        SETC  '&PURGESTOKEN(1)'    SET XVARIABLE           00098800
                     AIF   (N'&PURGESTOKEN GT 1).ZG9B  MULTI PARMS      00098900
&XPURGESTOKEN        SETC  '&PURGESTOKEN'       SET XVARIABLE           00099000
.ZG9B                AIF   (K'&PURGESTOKEN(1) GT 0).ZG9C                00099100
&ZXPURGESTOKEN       SETC  ''          RESET IN/OUTPUT                  00099200
&ZMS                 SETC  ' '         *KRQDA*                          00099300
&ZMS                 SETC  '&ZMS "PURGESTOKEN" KEY AND ITS ARGUMENT'    00099400
                     MNOTE 8,' &ZMS ARE REQUIRED.'                      00099500
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00099600
.ZG9C                ANOP  ,                                            00099700
.*-------------------------------------------------------------------   00099800
.***AG.KCK01 NAME, OPT RQD INPUT, KEYS -GPR NOT ALLOWED                 00099900
                     AIF   (K'&ZXPURGESTOKEN LE 0).ZG9P  NOT I/O        00100000
                     AIF   ('&XPURGESTOKEN'(1,1) NE '(').ZG9P           00100100
&ZXPURGESTOKEN       SETC  ''          RESET IN/OUTPUT                  00100200
&ZMS                 SETC  '"PURGESTOKEN='      *KGPRA* MNOTE           00100300
&ZMS                 SETC  '&ZMS.&PURGESTOKEN"'                         00100400
&ZMS                 SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'    00100500
                     MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'            00100600
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00100700
.ZG9P                ANOP  ,                                            00100800
.*----------------------------------------------------------------***   00100900
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00101000
                     AIF   (N'&PTCBADDR LE 1).ZG10A  CK NUM             00101100
&ZMS                 SETC  '"PTCBADDR='         *KPOSA* MNOTE           00101200
&ZMS                 SETC  '&ZMS.&PTCBADDR"'                            00101300
&ZMS                 SETC  '&ZMS "PTCBADDR"'                            00101400
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00101500
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00101600
.ZG10A               ANOP  ,                                            00101700
.*-------------------------------------------------------------------   00101800
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00101900
&ZXPTCBADDR          SETC  'INPUT'     SET IN/OUTPUT                    00102000
&XPTCBADDR           SETC  '&PTCBADDR(1)'       SET XVARIABLE           00102100
                     AIF   (N'&PTCBADDR GT 1).ZG10B  MULTI PARMS        00102200
&XPTCBADDR           SETC  '&PTCBADDR'          SET XVARIABLE           00102300
.ZG10B               AIF   (K'&PTCBADDR(1) GT 0).ZG10C                  00102400
&ZXPTCBADDR          SETC  ''          RESET IN/OUTPUT                  00102500
&ZMS                 SETC  ' '         *KRQDA*                          00102600
&ZMS                 SETC  '&ZMS "PTCBADDR" KEY AND ITS ARGUMENT'       00102700
                     MNOTE 8,' &ZMS ARE REQUIRED.'                      00102800
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00102900
.ZG10C               ANOP  ,                                            00103000
.*-------------------------------------------------------------------   00103100
.***AG.KCK01 NAME, OPT RQD INPUT, KEYS -GPR NOT ALLOWED                 00103200
                     AIF   (K'&ZXPTCBADDR LE 0).ZG10P  NOT I/O          00103300
                     AIF   ('&XPTCBADDR'(1,1) NE '(').ZG10P             00103400
&ZXPTCBADDR          SETC  ''          RESET IN/OUTPUT                  00103500
&ZMS                 SETC  '"PTCBADDR='         *KGPRA* MNOTE           00103600
&ZMS                 SETC  '&ZMS.&PTCBADDR"'                            00103700
&ZMS                 SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'    00103800
                     MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'            00103900
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00104000
.ZG10P               ANOP  ,                                            00104100
.*-------------------------------------------------------------------   00104200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00104300
.ZG12                ANOP  ,                                            00104400
&ZTLC                SETC 'STOKENANDTCB'                                00104500
                     AIF   ('&MATCHOPTION(1)' NE '&ZTLC').ZG17          00104600
&XMATCHOPTION        SETC  'STOKENANDTCB'       SET KEYWORD             00104700
                     AIF   (N'&MATCHOPTION LE 1).ZG12A  CK NUM          00104800
&ZMS                 SETC  '"MATCHOPTION='      *KPOSA* MNOTE           00104900
&ZMS                 SETC  '&ZMS.&MATCHOPTION"'                         00105000
&ZMS                 SETC  '&ZMS "MATCHOPTION"'                         00105100
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00105200
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00105300
.ZG12A               ANOP  ,                                            00105400
.*------------------------------------------------------------------    00105500
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00105600
&ZCVAL               SETC ''           CLEAR ERROR KEY ACCUMULATOR      00105700
.ZG12A0              AIF   (K'&RMTRADDR LE 0).ZG12A1  OK                00105800
&ZCVAL               SETC '&ZCVAL RMTRADDR'     INCORRECT KEY USED      00105900
.ZG12A1              AIF   (K'&ZCVAL LE 0).ZG12A2  OK                   00106000
&ZCVAL               SETC '&ZCVAL'(2,K'&ZCVAL-1)                        00106100
&ZMS                 SETC  '"MATCHOPTION'       *KMEIA* MNOTE           00106200
&ZMS                 SETC  '&ZMS.=&MATCHOPTION"'                        00106300
&ZMS                 SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'         00106400
                     MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'         00106500
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00106600
.ZG12A2              ANOP  ,                                            00106700
.*----------------------------------------------------------------***   00106800
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00106900
                     AIF   (N'&PURGESTOKEN LE 1).ZG14A  CK NUM          00107000
&ZMS                 SETC  '"PURGESTOKEN='      *KPOSA* MNOTE           00107100
&ZMS                 SETC  '&ZMS.&PURGESTOKEN"'                         00107200
&ZMS                 SETC  '&ZMS "PURGESTOKEN"'                         00107300
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00107400
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00107500
.ZG14A               ANOP  ,                                            00107600
.*-------------------------------------------------------------------   00107700
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00107800
&ZXPURGESTOKEN       SETC  'INPUT'     SET IN/OUTPUT                    00107900
&XPURGESTOKEN        SETC  '&PURGESTOKEN(1)'    SET XVARIABLE           00108000
                     AIF   (N'&PURGESTOKEN GT 1).ZG14B  MULTI PARMS     00108100
&XPURGESTOKEN        SETC  '&PURGESTOKEN'       SET XVARIABLE           00108200
.ZG14B               AIF   (K'&PURGESTOKEN(1) GT 0).ZG14C               00108300
&ZXPURGESTOKEN       SETC  ''          RESET IN/OUTPUT                  00108400
&ZMS                 SETC  'WHEN "STOKENANDTCB" IS SPECIFIED'  *KRQDA*  00108500
&ZMS                 SETC  '&ZMS , "PURGESTOKEN" KEY AND ITS ARGUMENT'  00108600
                     MNOTE 8,' &ZMS ARE REQUIRED.'                      00108700
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00108800
.ZG14C               ANOP  ,                                            00108900
.*-------------------------------------------------------------------   00109000
.***AG.KCK01 NAME, OPT RQD INPUT, KEYS -GPR NOT ALLOWED                 00109100
                     AIF   (K'&ZXPURGESTOKEN LE 0).ZG14P  NOT I/O       00109200
                     AIF   ('&XPURGESTOKEN'(1,1) NE '(').ZG14P          00109300
&ZXPURGESTOKEN       SETC  ''          RESET IN/OUTPUT                  00109400
&ZMS                 SETC  '"PURGESTOKEN='      *KGPRA* MNOTE           00109500
&ZMS                 SETC  '&ZMS.&PURGESTOKEN"'                         00109600
&ZMS                 SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'    00109700
                     MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'            00109800
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00109900
.ZG14P               ANOP  ,                                            00110000
.*----------------------------------------------------------------***   00110100
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00110200
                     AIF   (N'&PTCBADDR LE 1).ZG15A  CK NUM             00110300
&ZMS                 SETC  '"PTCBADDR='         *KPOSA* MNOTE           00110400
&ZMS                 SETC  '&ZMS.&PTCBADDR"'                            00110500
&ZMS                 SETC  '&ZMS "PTCBADDR"'                            00110600
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00110700
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00110800
.ZG15A               ANOP  ,                                            00110900
.*-------------------------------------------------------------------   00111000
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00111100
&ZXPTCBADDR          SETC  'INPUT'     SET IN/OUTPUT                    00111200
&XPTCBADDR           SETC  '&PTCBADDR(1)'       SET XVARIABLE           00111300
                     AIF   (N'&PTCBADDR GT 1).ZG15B  MULTI PARMS        00111400
&XPTCBADDR           SETC  '&PTCBADDR'          SET XVARIABLE           00111500
.ZG15B               AIF   (K'&PTCBADDR(1) GT 0).ZG15C                  00111600
&ZXPTCBADDR          SETC  ''          RESET IN/OUTPUT                  00111700
&ZMS                 SETC  'WHEN "STOKENANDTCB" IS SPECIFIED'  *KRQDA*  00111800
&ZMS                 SETC  '&ZMS , "PTCBADDR" KEY AND ITS ARGUMENT'     00111900
                     MNOTE 8,' &ZMS ARE REQUIRED.'                      00112000
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00112100
.ZG15C               ANOP  ,                                            00112200
.*-------------------------------------------------------------------   00112300
.***AG.KCK01 NAME, OPT RQD INPUT, KEYS -GPR NOT ALLOWED                 00112400
                     AIF   (K'&ZXPTCBADDR LE 0).ZG15P  NOT I/O          00112500
                     AIF   ('&XPTCBADDR'(1,1) NE '(').ZG15P             00112600
&ZXPTCBADDR          SETC  ''          RESET IN/OUTPUT                  00112700
&ZMS                 SETC  '"PTCBADDR='         *KGPRA* MNOTE           00112800
&ZMS                 SETC  '&ZMS.&PTCBADDR"'                            00112900
&ZMS                 SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'    00113000
                     MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'            00113100
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00113200
.ZG15P               ANOP  ,                                            00113300
.*------------------------------------------------------------------    00113400
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00113500
.ZG17                ANOP  ,                                            00113600
&ZXMATCHOPTION       SETC  'INPUT'     SET IN/OUTPUT                    00113700
                     AIF   (K'&XMATCHOPTION GT 0).ZG17E  VALID ARG      00113800
                     AIF   (T'&MATCHOPTION EQ 'O').ZG17D  OMITTED       00113900
&ZASYSLNDX           SETA  0                                            00114000
.ZG17A               ANOP  ,           POSITIONAL MACRO KEY             00114100
&ZASYSLNDX           SETA  &ZASYSLNDX+1                                 00114200
                     AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG17C             00114300
&ZTLC                SETC 'MATCHOPTION'                                 00114400
                     AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG17A    00114500
.ZG17B               ANOP  ,                                            00114600
&ZXMATCHOPTION       SETC  ''          RESET IN/OUTPUT                  00114700
&ZMS                 SETC  'THE "MATCHOPTION" KEY'  *KOPTA* MNOTE       00114800
&ZMS                 SETC  '&ZMS MUST CONTAIN ONE'                      00114900
                     MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'             00115000
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00115100
                     AGO   .ZG17E                                       00115200
.ZG17C               ANOP  ,                                            00115300
&ZXMATCHOPTION       SETC  ''          RESET IN/OUTPUT                  00115400
&ZMS                 SETC  '"MATCHOPTION='      *KUKWA* MNOTE           00115500
&ZMS                 SETC  '&ZMS.&MATCHOPTION"'                         00115600
&ZMS                 SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '    00115700
&ZMS                 SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'          00115800
&ZMS                 SETC  '&ZMS "ALL"'         VALID KEYWORD           00115900
&ZMS                 SETC  '&ZMS OR "STOKENANDTCB".'  VALID KEYWORD     00116000
                     MNOTE 8,' &ZMS '                                   00116100
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00116200
                     AGO   .ZG17E                                       00116300
.ZG17D               ANOP  ,                                            00116400
&XMATCHOPTION        SETC  'ALL'       SET DEFAULT KEYWORD              00116500
.ZG17E               ANOP  ,                                            00116600
.*------------------------------------------------------------------    00116700
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00116800
&XSYNCH              SETC  ''          INITIALIZE XVARIABLE             00116900
.*-------------------------------------------------------------------   00117000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00117100
.ZG20                ANOP  ,                                            00117200
                     AIF   (K'&SYNCH(1) LE 0).ZG20A                     00117300
&ZTLC                SETC 'YES'                                         00117400
                     AIF   ('&SYNCH(1)' NE '&ZTLC').ZG21                00117500
&XSYNCH              SETC  'YES'       SET KEYWORD                      00117600
                     AIF   (N'&SYNCH LE 1).ZG20A  CK NUM                00117700
&ZMS                 SETC  '"SYNCH='   *KPOSA* MNOTE                    00117800
&ZMS                 SETC  '&ZMS.&SYNCH"'                               00117900
&ZMS                 SETC  '&ZMS "SYNCH"'                               00118000
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00118100
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00118200
.ZG20A               ANOP  ,                                            00118300
.*-------------------------------------------------------------------   00118400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00118500
.ZG21                ANOP  ,                                            00118600
&ZTLC                SETC 'NO'                                          00118700
                     AIF   ('&SYNCH(1)' NE '&ZTLC').ZG22                00118800
&XSYNCH              SETC  'NO'        SET KEYWORD                      00118900
                     AIF   (N'&SYNCH LE 1).ZG21A  CK NUM                00119000
&ZMS                 SETC  '"SYNCH='   *KPOSA* MNOTE                    00119100
&ZMS                 SETC  '&ZMS.&SYNCH"'                               00119200
&ZMS                 SETC  '&ZMS "SYNCH"'                               00119300
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00119400
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00119500
.ZG21A               ANOP  ,                                            00119600
.*------------------------------------------------------------------    00119700
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00119800
.ZG22                ANOP  ,                                            00119900
&ZXSYNCH             SETC  'INPUT'     SET IN/OUTPUT                    00120000
                     AIF   (K'&XSYNCH GT 0).ZG22E  VALID ARG            00120100
                     AIF   (T'&SYNCH EQ 'O').ZG22D  OMITTED             00120200
&ZASYSLNDX           SETA  0                                            00120300
.ZG22A               ANOP  ,           POSITIONAL MACRO KEY             00120400
&ZASYSLNDX           SETA  &ZASYSLNDX+1                                 00120500
                     AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG22C             00120600
&ZTLC                SETC 'SYNCH'                                       00120700
                     AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG22A    00120800
.ZG22B               ANOP  ,                                            00120900
&ZXSYNCH             SETC  ''          RESET IN/OUTPUT                  00121000
&ZMS                 SETC  'THE "SYNCH" KEY'    *KOPTA* MNOTE           00121100
&ZMS                 SETC  '&ZMS MUST CONTAIN ONE'                      00121200
                     MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'             00121300
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00121400
                     AGO   .ZG22E                                       00121500
.ZG22C               ANOP  ,                                            00121600
&ZXSYNCH             SETC  ''          RESET IN/OUTPUT                  00121700
&ZMS                 SETC  '"SYNCH='   *KUKWA* MNOTE                    00121800
&ZMS                 SETC  '&ZMS.&SYNCH"'                               00121900
&ZMS                 SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '    00122000
&ZMS                 SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'          00122100
&ZMS                 SETC  '&ZMS "YES"'         VALID KEYWORD           00122200
&ZMS                 SETC  '&ZMS OR "NO".'      VALID KEYWORD           00122300
                     MNOTE 8,' &ZMS '                                   00122400
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00122500
                     AGO   .ZG22E                                       00122600
.ZG22D               ANOP  ,                                            00122700
&XSYNCH              SETC  'YES'       SET DEFAULT KEYWORD              00122800
.ZG22E               ANOP  ,                                            00122900
.*----------------------------------------------------------------***   00123000
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00123100
                     AIF   (N'&RMTRPRMADDR LE 1).ZG24A  CK NUM          00123200
&ZMS                 SETC  '"RMTRPRMADDR='      *KPOSA* MNOTE           00123300
&ZMS                 SETC  '&ZMS.&RMTRPRMADDR"'                         00123400
&ZMS                 SETC  '&ZMS "RMTRPRMADDR"'                         00123500
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00123600
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00123700
.ZG24A               ANOP  ,                                            00123800
.*-------------------------------------------------------------------   00123900
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00124000
&ZXRMTRPRMADDR       SETC  'INPUT'     SET IN/OUTPUT                    00124100
&XRMTRPRMADDR        SETC  'NORMTRP'                                    00124200
                     AIF   (K'&RMTRPRMADDR(1) LE 0).ZG24B  PARM         00124300
&XRMTRPRMADDR        SETC  '&RMTRPRMADDR(1)'    SET XVARIABLE           00124400
                     AIF   (N'&RMTRPRMADDR GT 1).ZG24B  MULTI PARMS     00124500
&XRMTRPRMADDR        SETC  '&RMTRPRMADDR'       SET XVARIABLE           00124600
.ZG24B               ANOP  ,                                            00124700
.*-------------------------------------------------------------------   00124800
.***AG.KCK01 NAME, OPT INPUT, KEYS -GPR NOT ALLOWED                     00124900
                     AIF   (K'&ZXRMTRPRMADDR LE 0).ZG24P  NOT I/O       00125000
                     AIF   ('&XRMTRPRMADDR' EQ 'NORMTRP').ZG24P         00125100
                     AIF   ('&XRMTRPRMADDR'(1,1) NE '(').ZG24P          00125200
&ZXRMTRPRMADDR       SETC  ''          RESET IN/OUTPUT                  00125300
&ZMS                 SETC  '"RMTRPRMADDR='      *KGPRA* MNOTE           00125400
&ZMS                 SETC  '&ZMS.&RMTRPRMADDR"'                         00125500
&ZMS                 SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'    00125600
                     MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'            00125700
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00125800
.ZG24P               ANOP  ,                                            00125900
.*----------------------------------------------------------------***   00126000
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00126100
                     AIF   (N'&RMTRPRMALETADDR LE 1).ZG26A  CK NUM      00126200
&ZMS                 SETC  '"RMTRPRMALETADDR='  *KPOSA* MNOTE           00126300
&ZMS                 SETC  '&ZMS.&RMTRPRMALETADDR"'                     00126400
&ZMS                 SETC  '&ZMS "RMTRPRMALETADDR"'                     00126500
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00126600
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00126700
.ZG26A               ANOP  ,                                            00126800
.*-------------------------------------------------------------------   00126900
.***AG.KXVAR17 NAME, OPT INPUT, KEYS -XVARIABLE                         00127000
&XRMTRPRMALETADDR    SETC  'NORMTRPALET'        SET DEFAULT             00127100
                     AIF   (K'&RMTRPRMALETADDR(1) LE 0).ZG26C  PARM     00127200
&XRMTRPRMALETADDR    SETC  '&RMTRPRMALETADDR(1)'  SET XVARIABLE         00127300
                     AIF   (N'&RMTRPRMALETADDR GT 1).ZG26B  MULTI PARMS 00127400
&XRMTRPRMALETADDR    SETC  '&RMTRPRMALETADDR'   SET XVARIABLE           00127500
.ZG26B               AIF   (K'&RMTRPRMADDR(1) GT 0).ZG26C  KEY          00127600
&ZMS                 SETC  '"RMTRPRMALETADDR'   *KDEPA* MNOTE           00127700
&ZMS                 SETC  '&ZMS.=&RMTRPRMALETADDR"'                    00127800
&ZMS                 SETC  '&ZMS CAN ONLY BE SPECIFIED IF'              00127900
&ZMS                 SETC  '&ZMS '                                      00128000
&ZMS                 SETC  '&ZMS "RMTRPRMADDR"'                         00128100
                     MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                 00128200
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00128300
.ZG26C               ANOP  ,                                            00128400
&ZXRMTRPRMALETADDR   SETC  'INPUT'     SET IN/OUTPUT                    00128500
.*-------------------------------------------------------------------   00128600
.***AG.KCK01 NAME, OPT INPUT, KEYS -GPR NOT ALLOWED                     00128700
                     AIF   (K'&ZXRMTRPRMALETADDR LE 0).ZG26P  NOT I/O   00128800
                     AIF   ('&XRMTRPRMALETADDR' EQ 'NORMTRPALET').ZG26P 00128900
                     AIF   ('&XRMTRPRMALETADDR'(1,1) NE '(').ZG26P      00129000
&ZXRMTRPRMALETADDR   SETC  ''          RESET IN/OUTPUT                  00129100
&ZMS                 SETC  '"RMTRPRMALETADDR='  *KGPRA* MNOTE           00129200
&ZMS                 SETC  '&ZMS.&RMTRPRMALETADDR"'                     00129300
&ZMS                 SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'    00129400
                     MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'            00129500
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00129600
.ZG26P               ANOP  ,                                            00129700
.******************************************************************     00129800
.***AH.P00 CHECK STANDALONE POSITIONAL VARIABLES                        00129900
.******************************************************************     00130000
                     ACTR  10000                                        00130100
.*----------------------------------------------------------------***   00130200
.***AH.P02 EXTRA POSITIONALS                                            00130300
                     AIF   (N'&SYSLIST LE 0).ZGLISTX  NO EXTRAS         00130400
                     AIF   (N'&SYSLIST NE 2).ZGLISTX1  NOT NULL         00130500
                     AIF   ('&SYSLIST(1)' NE '').ZGLISTX1  NOT NULL     00130600
                     AIF   ('&SYSLIST(2)' EQ '').ZGLISTX  NOT NULL      00130700
.ZGLISTX1            ANOP  ,                                            00130800
&ZCVAL               SETC  ''          ERROR FIELD                      00130900
&ZAWRK               SETA  0           POSITIONAL NUMBER                00131000
.ZGLIST2             ANOP  ,                                            00131100
&ZAWRK               SETA  &ZAWRK+1    NEXT POSITIONAL                  00131200
                     AIF   (&ZAWRK GT N'&SYSLIST).ZGLIST3  DONE         00131300
&ZCVAL               SETC '&ZCVAL,&SYSLIST(&ZAWRK)'  EXTRA              00131400
                     AGO   .ZGLIST2                                     00131500
.*                                                                      00131600
.ZGLIST3             ANOP  ,                                            00131700
&ZCVAL               SETC '&ZCVAL'(2,K'&ZCVAL-1)  STRIP COMMA           00131800
&ZMS                 SETC  'POSITIONAL ARGUMENT(S),'  *PPOSA* MNOTE     00131900
&ZMS                 SETC  '&ZMS "&ZCVAL"'                              00132000
&ZMS                 SETC  '&ZMS CANNOT BE USED.'                       00132100
&ZMS                 SETC  '&ZMS NO POSITIONAL ARGUMENTS'               00132200
                     MNOTE 8,' &ZMS ARE ALLOWED.'                       00132300
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00132400
.ZGLISTX             ANOP  ,                                            00132500
&ZASYSLNDX           SETA  0                                            00132600
.*-------------------------------------------------------------------   00132700
.***AG.MF04 MF=(SLE)                                                    00132800
.ZGMFX               ANOP  ,           END OF FULL SYNTAX CHECK         00132900
.*******************************************************************    00133000
.***AE.ZMR01 NO CODE GENERATED IF ERRORS DETECTED                       00133100
.*******************************************************************    00133200
                     AIF   (&ZMACRET NE 0).ZLX2  ERROR DETECTED         00133300
.*******************************************************************    00133400
.***AE.01  START OF IEAMPDQ MACRO CODE                                  00133500
.*******************************************************************    00133600
                     LCLC  &M0M0001                 NAME                00133700
&M0M0001             SETC  '&XLABEL'                SET NAME            00133800
                     AIF   (K'&XLABEL NE 0).XLAB2                       00133900
&M0M0001             SETC  'M00M&SYSNDX'            DEFAULT NAME        00134000
.*                                                                      00134100
.XLAB2               ANOP  ,                                            00134200
&M0M0001 DS    0H                             IEAMPDQ-0                 00134300
.*******************************************************************    00134400
.***AE.PR01 PRINT CONTROLS, DEFAULT IS YES                              00134500
.*******************************************************************    00134600
              PUSH  PRINT                                               00134700
                     AIF   ('&ZPRINT' NE 'NO').ZPRINTX  TURN PRINT ON   00134800
                     PRINT OFF         ++ PR01                          00134900
                     AGO   .ZPRNTXX                                     00135000
.ZPRINTX             PRINT ON                                           00135100
.ZPRNTXX             ANOP  ,                                            00135200
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00135300
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00135400
.********************************************************************   00135500
.***AL.L01 INTERNAL ARRAY TO PRODUCE FORMATTED CODE                     00135600
.********************************************************************   00135700
                      LCLA  &ZOPN          LIST INSTRUCTION INDEX       00135800
                      LCLA  &ZOPN1         INVOCATION INDEX             00135900
                      LCLC  &ZOPL(4095)    LABEL                        00136000
                      LCLC  &ZOPO(4095)    OPERATION                    00136100
                      LCLC  &ZOPV(4095)    VALUE                        00136200
                      LCLC  &ZOPD(4095)    DESCRIPTION                  00136300
.*                                                                      00136400
&ZOPN                 SETA  0              INITIAL INST INDEX VALUE     00136500
.******************************************************************     00136600
.***AL.L10 IEAMPDQ FMT=LIST MF=S|L PARAMETERS                           00136700
.******************************************************************     00136800
                      AIF   ('&XMF' EQ 'L').ZLMFSL2                     00136900
                      AIF   ('&XMF' NE 'S').ZLMFSLX                     00137000
&XMFCTRL              SETC  '#Z'.'&SYSNDX'(1,4).'A'                     00137100
&XMFATTR              SETC  '0D'                                        00137200
.*                                                                      00137300
&ZOPN                 SETA  &ZOPN+1                                     00137400
&ZOPL(&ZOPN)          SETC  ' '                                         00137500
&ZOPO(&ZOPN)          SETC  'B'                                         00137600
&ZOPV(&ZOPN)          SETC  '&XMFCTRL.S'                                00137700
&ZOPD(&ZOPN)          SETC  '++ IEAMPDQ ARG PARMS'                      00137800
.*                                                                      00137900
&ZOPN                 SETA  &ZOPN+1                                     00138000
&ZOPL(&ZOPN)          SETC  ' '                                         00138100
&ZOPO(&ZOPN)          SETC  'SPACE'                                     00138200
&ZOPV(&ZOPN)          SETC  '1'                                         00138300
&ZOPD(&ZOPN)          SETC  ' '                                         00138400
.*                                                                      00138500
.ZLMFSL2              ANOP  ,                                           00138600
.*-------------------------------------------------------------------   00138700
.***AM.L01  IEAMPDQ FMT=LIST PARAMETERS                                 00138800
&ZOPN                 SETA &ZOPN+1                                      00138900
&ZOPL(&ZOPN)          SETC '&XMFCTRL'                                   00139000
&ZOPO(&ZOPN)          SETC 'DS'                                         00139100
&ZOPV(&ZOPN)          SETC '&XMFATTR'                                   00139200
&ZOPD(&ZOPN)          SETC '++ IEAMPDQ PARM LIST'                       00139300
.*-------------------------------------------------------------------   00139400
.***AM.L02 XVERSION XL1                                                 00139500
&ZOPN                 SETA &ZOPN+1                                      00139600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XVERSION'                         00139700
&ZOPO(&ZOPN)          SETC 'DS'                                         00139800
&ZOPV(&ZOPN)          SETC 'XL1'                                        00139900
&ZOPD(&ZOPN)          SETC '++ INPUT XVERSION'                          00140000
.*-------------------------------------------------------------------   00140100
.***AM.L03 XMATCHFLAGS BL.8                                             00140200
&ZOPN                 SETA &ZOPN+1                                      00140300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMATCHFLAGS'                      00140400
&ZOPO(&ZOPN)          SETC 'DS'                                         00140500
&ZOPV(&ZOPN)          SETC 'BL.8'                                       00140600
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             00140700
.*                                                                      00140800
&ZOPN                 SETA  &ZOPN+1                                     00140900
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XMATCHOPTION_STOKENANDTCB'       00141000
&ZOPO(&ZOPN)          SETC  'EQU'                                       00141100
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             00141200
&ZOPD(&ZOPN)          SETC  '++ XMATCHOPTION.'                          00141300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).STOKENANDTCB'                 00141400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00141500
.*                                                                      00141600
&ZOPN                 SETA  &ZOPN+1                                     00141700
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XMATCHOPTION_ALL'                00141800
&ZOPO(&ZOPN)          SETC  'EQU'                                       00141900
&ZOPV(&ZOPN)          SETC  'B''01000000'''                             00142000
&ZOPD(&ZOPN)          SETC  '++ XMATCHOPTION.'                          00142100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).ALL'                          00142200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00142300
.*-------------------------------------------------------------------   00142400
.***AM.L03 XOPTIONS BL.8                                                00142500
&ZOPN                 SETA &ZOPN+1                                      00142600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XOPTIONS'                         00142700
&ZOPO(&ZOPN)          SETC 'DS'                                         00142800
&ZOPV(&ZOPN)          SETC 'BL.8'                                       00142900
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             00143000
.*                                                                      00143100
&ZOPN                 SETA  &ZOPN+1                                     00143200
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XSYNCH_YES'                      00143300
&ZOPO(&ZOPN)          SETC  'EQU'                                       00143400
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             00143500
&ZOPD(&ZOPN)          SETC  '++ XSYNCH.'                                00143600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).YES'                          00143700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00143800
.*-------------------------------------------------------------------   00143900
.***AM.L09  XRSV0003 CL1                                                00144000
&ZOPN                 SETA &ZOPN+1                                      00144100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0003'                         00144200
&ZOPO(&ZOPN)          SETC 'DS'                                         00144300
&ZOPV(&ZOPN)          SETC 'CL1'                                        00144400
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV0003'                      00144500
.*-------------------------------------------------------------------   00144600
.***AM.L09  XTARGETSTOKEN BL.64                                         00144700
&ZOPN                 SETA &ZOPN+1                                      00144800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XTARGETSTOKEN'                    00144900
&ZOPO(&ZOPN)          SETC 'DS'                                         00145000
&ZOPV(&ZOPN)          SETC 'BL.64'                                      00145100
&ZOPD(&ZOPN)          SETC '++ &ZXTARGETSTOKEN  XTARGETSTOKEN'          00145200
.*-------------------------------------------------------------------   00145300
.***AM.L09  XRMTRADDR A                                                 00145400
&ZOPN                 SETA &ZOPN+1                                      00145500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRMTRADDR'                        00145600
&ZOPO(&ZOPN)          SETC 'DS'                                         00145700
&ZOPV(&ZOPN)          SETC 'A'                                          00145800
&ZOPD(&ZOPN)          SETC '++ &ZXRMTRADDR  XRMTRADDR'                  00145900
.*-------------------------------------------------------------------   00146000
.***AM.L09  XPURGESTOKEN BL.64                                          00146100
&ZOPN                 SETA &ZOPN+1                                      00146200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XPURGESTOKEN'                     00146300
&ZOPO(&ZOPN)          SETC 'DS'                                         00146400
&ZOPV(&ZOPN)          SETC 'BL.64'                                      00146500
&ZOPD(&ZOPN)          SETC '++ &ZXPURGESTOKEN  XPURGESTOKEN'            00146600
.*-------------------------------------------------------------------   00146700
.***AM.L09  XPTCBADDR A                                                 00146800
&ZOPN                 SETA &ZOPN+1                                      00146900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XPTCBADDR'                        00147000
&ZOPO(&ZOPN)          SETC 'DS'                                         00147100
&ZOPV(&ZOPN)          SETC 'A'                                          00147200
&ZOPD(&ZOPN)          SETC '++ &ZXPTCBADDR  XPTCBADDR'                  00147300
.*-------------------------------------------------------------------   00147400
.***AM.L09  XRMTRPRMADDR A                                              00147500
&ZOPN                 SETA &ZOPN+1                                      00147600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRMTRPRMADDR'                     00147700
&ZOPO(&ZOPN)          SETC 'DS'                                         00147800
&ZOPV(&ZOPN)          SETC 'A'                                          00147900
&ZOPD(&ZOPN)          SETC '++ &ZXRMTRPRMADDR  XRMTRPRMADDR'            00148000
.*-------------------------------------------------------------------   00148100
.***AM.L09  XRMTRPRMALETADDR A                                          00148200
&ZOPN                 SETA &ZOPN+1                                      00148300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRMTRPRMALETADDR'                 00148400
&ZOPO(&ZOPN)          SETC 'DS'                                         00148500
&ZOPV(&ZOPN)          SETC 'A'                                          00148600
&ZOPD(&ZOPN)          SETC '++ &ZXRMTRPRMALETADDR  XRMTRPRMALETADDR'    00148700
.*-------------------------------------------------------------------   00148800
.***AM.L10 END OF IEAMPDQ LIST PARAMETERS                               00148900
&ZOPN                 SETA &ZOPN+1                                      00149000
&ZOPL(&ZOPN)          SETC '&XMFCTRL.L'                                 00149100
&ZOPO(&ZOPN)          SETC 'EQU'                                        00149200
&ZOPV(&ZOPN)          SETC '*-&XMFCTRL'                                 00149300
&ZOPD(&ZOPN)          SETC '++ LENGTH OF PLIST'                         00149400
.*                                                                      00149500
&ZOPN                 SETA &ZOPN+1                                      00149600
&ZOPL(&ZOPN)          SETC ' '                                          00149700
&ZOPO(&ZOPN)          SETC 'SPACE'                                      00149800
&ZOPV(&ZOPN)          SETC '1'                                          00149900
&ZOPD(&ZOPN)          SETC ' '                                          00150000
.*-------------------------------------------------------------------   00150100
.***AL.L12 IEAMPDQ FMT=LIST MF=S|L PARAMETERS                           00150200
                      AIF   ('&XMF' EQ 'L').ZMFLX  DONE IF MF=L         00150300
.*                                                                      00150400
&ZOPN                 SETA  &ZOPN+1                                     00150500
&ZOPL(&ZOPN)          SETC  '&XMFCTRL.S'                                00150600
&ZOPO(&ZOPN)          SETC  'DC'                                        00150700
&ZOPV(&ZOPN)          SETC  '0H''0'''                                   00150800
&ZOPD(&ZOPN)          SETC  '++ IEAMPDQ ARG PARMS'                      00150900
.*                                                                      00151000
.ZLMFSLX              ANOP  ,                                           00151100
.*-------------------------------------------------------------------   00151200
.***AL.L13 SET ZPLLEN TO ITS APPROPRIATE VALUE                          00151300
&ZPLLEN               SETA 36                                           00151400
.*                                                                      00151500
.******************************************************************     00151600
.***AI.L01 IEAMPDQ FMT=LIST FILL IN PARAMETER AREA                      00151700
.******************************************************************     00151800
                      ACTR  10000                                       00151900
&ZCVAL                SETC  'LA'           ASSUME XA MODE               00152000
                      AIF   ('&SYSASCE' EQ 'P').ZIMFXA  SYSSTATE PRI    00152100
&ZCVAL                SETC  'LAE'          XAX MODE                     00152200
.ZIMFXA               ANOP ,                                            00152300
.*                                                                      00152400
                      AIF   ('&XMFCTRL'(1,1) NE '(').ZIMFN2  NOT GPR    00152500
&ZCGPR                SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)  GET GPR         00152600
                      AIF   ('&ZCGPR' EQ 'GPR1').ZIMFNX                 00152700
                      AIF   ('&ZCGPR' EQ 'GPR01').ZIMFNX                00152800
                      AIF   ('&ZCGPR' EQ 'REG1').ZIMFNX                 00152900
                      AIF   ('&ZCGPR' EQ 'REG01').ZIMFNX                00153000
                      AIF   ('&ZCGPR' EQ 'R1').ZIMFNX                   00153100
                      AIF   ('&ZCGPR' EQ '1').ZIMFNX                    00153200
                      AIF   ('&ZCGPR' EQ '01').ZIMFNX                   00153300
&ZOPN                 SETA  &ZOPN+1                                     00153400
&ZOPL(&ZOPN)          SETC  ' '                                         00153500
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00153600
&ZOPV(&ZOPN)          SETC  '1,0(,&ZCGPR)'                              00153700
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00153800
                      AGO   .ZIMFNX                                     00153900
.*                                                                      00154000
.ZIMFN2               ANOP ,                                            00154100
&ZOPN                 SETA  &ZOPN+1                                     00154200
&ZOPL(&ZOPN)          SETC  ' '                                         00154300
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00154400
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL'                                00154500
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00154600
.ZIMFNX               ANOP ,                                            00154700
.********************************************************************   00154800
.***AI.L02 IEAMPDQ FMT=LIST INITIALIZE PARAMETER AREA                   00154900
.********************************************************************   00155000
.***AI.L03 MF=(SLE)                                                     00155100
                      AIF   ('&XMF' EQ 'L').ZIMFLX                      00155200
.*                                                                      00155300
&ZOPN                 SETA  &ZOPN+1                                     00155400
&ZOPL(&ZOPN)          SETC  ' '                                         00155500
&ZOPO(&ZOPN)          SETC  'XC'                                        00155600
&ZOPV(&ZOPN)          SETC  '0(&ZPLLEN,1),0(1)'                         00155700
&ZOPD(&ZOPN)          SETC  '++ INITIALIZE'                             00155800
.ZIMFLX               ANOP  ,                                           00155900
.*-------------------------------------------------------------------   00156000
.***AI.L05 XMATCHFLAGS BL1                                              00156100
&ZW                   SETC  ''                                          00156200
&ZCLNG                SETC  ''             RESET BIT ON FLAG            00156300
.*-------------------------------------------------------------------   00156400
.***AI.L08 XMATCHFLAGS "STOKENANDTCB"                                   00156500
.***      BL1'1XXXXXXX'                                                 00156600
         AIF   ('&XMATCHOPTION' NE 'STOKENANDTCB').ZI3A                 00156700
&ZW                   SETC  '&ZW.1'                                     00156800
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00156900
                      AGO   .ZI3C                                       00157000
.*                                                                      00157100
.ZI3A                 ANOP  ,                                           00157200
&ZW                   SETC  '&ZW.0'                                     00157300
.ZI3C                 ANOP  ,                                           00157400
.*-------------------------------------------------------------------   00157500
.***AI.L08 XMATCHFLAGS "ALL"                                            00157600
.***      BL1'X1XXXXXX'                                                 00157700
         AIF   ('&XMATCHOPTION' NE 'ALL').ZI4A                          00157800
&ZW                   SETC  '&ZW.1000000'                               00157900
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00158000
                      AGO   .ZI4C                                       00158100
.*                                                                      00158200
.ZI4A                 ANOP  ,                                           00158300
&ZW                   SETC  '&ZW.0000000'                               00158400
.ZI4C                 ANOP  ,                                           00158500
.*-------------------------------------------------------------------   00158600
.***AI.L11 XMATCHFLAGS BL1                                              00158700
                      AIF   ('&ZCLNG' NE 'YES').ZI4E  ALL ZERO BITS     00158800
&ZOPN                 SETA  &ZOPN+1                                     00158900
&ZOPL(&ZOPN)          SETC  ' '                                         00159000
&ZOPO(&ZOPN)          SETC  'OI'                                        00159100
&ZOPV(&ZOPN)          SETC  '1(1),B''&ZW'''                             00159200
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              00159300
.ZI4E                 ANOP  ,                                           00159400
.*-------------------------------------------------------------------   00159500
.***AI.L05 XOPTIONS BL1                                                 00159600
&ZW                   SETC  ''                                          00159700
&ZCLNG                SETC  ''             RESET BIT ON FLAG            00159800
.*-------------------------------------------------------------------   00159900
.***AI.L08 XOPTIONS "YES"                                               00160000
.***      BL1'1XXXXXXX'                                                 00160100
         AIF   ('&XSYNCH' NE 'YES').ZI6A                                00160200
&ZW                   SETC  '&ZW.10000000'                              00160300
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00160400
                      AGO   .ZI6C                                       00160500
.*                                                                      00160600
.ZI6A                 ANOP  ,                                           00160700
&ZW                   SETC  '&ZW.00000000'                              00160800
.ZI6C                 ANOP  ,                                           00160900
.*-------------------------------------------------------------------   00161000
.***AI.L11 XOPTIONS BL1                                                 00161100
                      AIF   ('&ZCLNG' NE 'YES').ZI6E  ALL ZERO BITS     00161200
&ZOPN                 SETA  &ZOPN+1                                     00161300
&ZOPL(&ZOPN)          SETC  ' '                                         00161400
&ZOPO(&ZOPN)          SETC  'OI'                                        00161500
&ZOPV(&ZOPN)          SETC  '2(1),B''&ZW'''                             00161600
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              00161700
.ZI6E                 ANOP  ,                                           00161800
.*-------------------------------------------------------------------   00161900
.***AI.L25  XTARGETSTOKEN XL8                                           00162000
                      AIF   ('&ZXTARGETSTOKEN' EQ '').ZI8E              00162100
                      AIF   ('&ZXTARGETSTOKEN' EQ 'OUTPUT').ZI8E        00162200
&ZCGPR                SETC  '&XTARGETSTOKEN'                            00162300
.*                                                                      00162400
&ZC                   SETC  '&XTARGETSTOKEN'(1,1)                       00162500
                      AIF   (T'&ZC NE 'N').ZI8D                         00162600
&ZC                   SETC  '&XTARGETSTOKEN'                            00162700
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI8D                00162800
&ZCGPR                SETC  '=BL8''&XTARGETSTOKEN'''                    00162900
.*                                                                      00163000
.ZI8D                 ANOP  ,                                           00163100
.*                                                                      00163200
&ZOPN                 SETA  &ZOPN+1                                     00163300
&ZOPL(&ZOPN)          SETC  ' '                                         00163400
&ZOPO(&ZOPN)          SETC  'MVC'                                       00163500
&ZOPV(&ZOPN)          SETC  '4(8,1),&ZCGPR'                             00163600
&ZOPD(&ZOPN)          SETC  '++ &ZXTARGETSTOKEN XTARGETSTOKEN'          00163700
.*                                                                      00163800
.ZI8E                 ANOP  ,                                           00163900
.*-------------------------------------------------------------------   00164000
.***AI.L25  XRMTRADDR AL4                                               00164100
                      AIF   ('&ZXRMTRADDR' EQ '').ZI9E                  00164200
                      AIF   ('&ZXRMTRADDR' EQ 'OUTPUT').ZI9E            00164300
&ZCGPR                SETC  '&XRMTRADDR'                                00164400
.*                                                                      00164500
&ZC                   SETC  '&XRMTRADDR'(1,1)                           00164600
                      AIF   (T'&ZC NE 'N').ZI9D                         00164700
&ZC                   SETC  '&XRMTRADDR'                                00164800
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI9D                00164900
&ZCGPR                SETC  '=AL4(&XRMTRADDR)'                          00165000
.*                                                                      00165100
.ZI9D                 ANOP  ,                                           00165200
.*                                                                      00165300
&ZOPN                 SETA  &ZOPN+1                                     00165400
&ZOPL(&ZOPN)          SETC  ' '                                         00165500
&ZOPO(&ZOPN)          SETC  'MVC'                                       00165600
&ZOPV(&ZOPN)          SETC  '12(4,1),&ZCGPR'                            00165700
&ZOPD(&ZOPN)          SETC  '++ &ZXRMTRADDR XRMTRADDR'                  00165800
.*                                                                      00165900
.ZI9E                 ANOP  ,                                           00166000
.*-------------------------------------------------------------------   00166100
.***AI.L25  XPURGESTOKEN XL8                                            00166200
                      AIF   ('&ZXPURGESTOKEN' EQ '').ZI10E              00166300
                      AIF   ('&ZXPURGESTOKEN' EQ 'OUTPUT').ZI10E        00166400
&ZCGPR                SETC  '&XPURGESTOKEN'                             00166500
.*                                                                      00166600
&ZC                   SETC  '&XPURGESTOKEN'(1,1)                        00166700
                      AIF   (T'&ZC NE 'N').ZI10D                        00166800
&ZC                   SETC  '&XPURGESTOKEN'                             00166900
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI10D               00167000
&ZCGPR                SETC  '=BL8''&XPURGESTOKEN'''                     00167100
.*                                                                      00167200
.ZI10D                ANOP  ,                                           00167300
.*                                                                      00167400
&ZOPN                 SETA  &ZOPN+1                                     00167500
&ZOPL(&ZOPN)          SETC  ' '                                         00167600
&ZOPO(&ZOPN)          SETC  'MVC'                                       00167700
&ZOPV(&ZOPN)          SETC  '16(8,1),&ZCGPR'                            00167800
&ZOPD(&ZOPN)          SETC  '++ &ZXPURGESTOKEN XPURGESTOKEN'            00167900
.*                                                                      00168000
.ZI10E                ANOP  ,                                           00168100
.*-------------------------------------------------------------------   00168200
.***AI.L25  XPTCBADDR AL4                                               00168300
                      AIF   ('&ZXPTCBADDR' EQ '').ZI11E                 00168400
                      AIF   ('&ZXPTCBADDR' EQ 'OUTPUT').ZI11E           00168500
&ZCGPR                SETC  '&XPTCBADDR'                                00168600
.*                                                                      00168700
&ZC                   SETC  '&XPTCBADDR'(1,1)                           00168800
                      AIF   (T'&ZC NE 'N').ZI11D                        00168900
&ZC                   SETC  '&XPTCBADDR'                                00169000
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI11D               00169100
&ZCGPR                SETC  '=AL4(&XPTCBADDR)'                          00169200
.*                                                                      00169300
.ZI11D                ANOP  ,                                           00169400
.*                                                                      00169500
&ZOPN                 SETA  &ZOPN+1                                     00169600
&ZOPL(&ZOPN)          SETC  ' '                                         00169700
&ZOPO(&ZOPN)          SETC  'MVC'                                       00169800
&ZOPV(&ZOPN)          SETC  '24(4,1),&ZCGPR'                            00169900
&ZOPD(&ZOPN)          SETC  '++ &ZXPTCBADDR XPTCBADDR'                  00170000
.*                                                                      00170100
.ZI11E                ANOP  ,                                           00170200
.*-------------------------------------------------------------------   00170300
.***AI.L18  XRMTRPRMADDR AL4                                            00170400
         AIF   ('&XRMTRPRMADDR' NE 'NORMTRP').ZI12                      00170500
&ZXRMTRPRMADDR        SETC  ''             RESET INPUT/OUTPUT           00170600
.ZI12                 ANOP  ,                                           00170700
.*-------------------------------------------------------------------   00170800
.***AI.L25  XRMTRPRMADDR AL4                                            00170900
                      AIF   ('&ZXRMTRPRMADDR' EQ '').ZI12E              00171000
                      AIF   ('&ZXRMTRPRMADDR' EQ 'OUTPUT').ZI12E        00171100
&ZCGPR                SETC  '&XRMTRPRMADDR'                             00171200
.*                                                                      00171300
&ZC                   SETC  '&XRMTRPRMADDR'(1,1)                        00171400
                      AIF   (T'&ZC NE 'N').ZI12D                        00171500
&ZC                   SETC  '&XRMTRPRMADDR'                             00171600
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI12D               00171700
&ZCGPR                SETC  '=AL4(&XRMTRPRMADDR)'                       00171800
.*                                                                      00171900
.ZI12D                ANOP  ,                                           00172000
.*                                                                      00172100
&ZOPN                 SETA  &ZOPN+1                                     00172200
&ZOPL(&ZOPN)          SETC  ' '                                         00172300
&ZOPO(&ZOPN)          SETC  'MVC'                                       00172400
&ZOPV(&ZOPN)          SETC  '28(4,1),&ZCGPR'                            00172500
&ZOPD(&ZOPN)          SETC  '++ &ZXRMTRPRMADDR XRMTRPRMADDR'            00172600
.*                                                                      00172700
.ZI12E                ANOP  ,                                           00172800
.*-------------------------------------------------------------------   00172900
.***AI.L18  XRMTRPRMALETADDR AL4                                        00173000
         AIF   ('&XRMTRPRMALETADDR' NE 'NORMTRPALET').ZI13              00173100
&ZXRMTRPRMALETADDR    SETC  ''             RESET INPUT/OUTPUT           00173200
.ZI13                 ANOP  ,                                           00173300
.*-------------------------------------------------------------------   00173400
.***AI.L25  XRMTRPRMALETADDR AL4                                        00173500
                      AIF   ('&ZXRMTRPRMALETADDR' EQ '').ZI13E          00173600
                      AIF   ('&ZXRMTRPRMALETADDR' EQ 'OUTPUT').ZI13E    00173700
&ZCGPR                SETC  '&XRMTRPRMALETADDR'                         00173800
.*                                                                      00173900
&ZC                   SETC  '&XRMTRPRMALETADDR'(1,1)                    00174000
                      AIF   (T'&ZC NE 'N').ZI13D                        00174100
&ZC                   SETC  '&XRMTRPRMALETADDR'                         00174200
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI13D               00174300
&ZCGPR                SETC  '=AL4(&XRMTRPRMALETADDR)'                   00174400
.*                                                                      00174500
.ZI13D                ANOP  ,                                           00174600
.*                                                                      00174700
&ZOPN                 SETA  &ZOPN+1                                     00174800
&ZOPL(&ZOPN)          SETC  ' '                                         00174900
&ZOPO(&ZOPN)          SETC  'MVC'                                       00175000
&ZOPV(&ZOPN)          SETC  '32(4,1),&ZCGPR'                            00175100
&ZOPD(&ZOPN)          SETC  '++ &ZXRMTRPRMALETADDR XRMTRPRMALETADDR'    00175200
.*                                                                      00175300
.ZI13E                ANOP  ,                                           00175400
.*-------------------------------------------------------------------   00175500
&ZOPN1                SETA &ZOPN                                        00175600
.*******************************************************************    00175700
.***  PROCESS IEAMPDQ OUTPUT PARAMETERS                                 00175800
.*******************************************************************    00175900
                      ACTR  10000                                       00176000
.*******************************************************************    00176100
.***AO.X04  LABEL FOR MF=L PROCESSING                                   00176200
.*******************************************************************    00176300
.ZMFLX                ANOP  ,              MF=L PROCESSING              00176400
.*******************************************************************    00176500
.***AO.X05  FORMAT GENERATED INSTRUCTIONS                               00176600
.*******************************************************************    00176700
                      ACTR  10000                                       00176800
.*                                                                      00176900
                      LCLA  &ZLC           COLUMN POSITION              00177000
                      LCLA  &ZOPX          LIST TABLE INDEX             00177100
                      LCLC  &ZLL           LABEL                        00177200
                      LCLC  &ZLOP          OPERATION                    00177300
                      LCLC  &ZLV           VALUE                        00177400
                      LCLC  &ZLD           DESCRIPTION                  00177500
.*                                                                      00177600
&ZOPX                 SETA  1                                           00177700
.ZL2                  AIF   (&ZOPX GT &ZOPN1).ZLX  B IF DONE            00177800
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00177900
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00178000
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00178100
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00178200
                      AIF   (K'&ZLD LE 0).ZL5                           00178300
&ZLC                  SETA  35             COMMENT COLUMN               00178400
                      AIF   ('&ZLD'(1,1) NE '*').ZL3                    00178500
&ZLC                  SETA  33             COMMMENT COLUMN              00178600
.ZL3                  AIF   (K'&ZLV GE &ZLC-16-1).ZL4                   00178700
&ZLV                  SETC  '&ZLV'.' '                                  00178800
                      AGO   .ZL3                                        00178900
.*                                                                      00179000
.ZL4                  ANOP  ,                                           00179100
&ZLV                  SETC  '&ZLV'.' '                                  00179200
.ZL5                  ANOP  ,                                           00179300
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00179400
.*                                                                      00179500
&ZLL     &ZLOP &ZLV                                                     00179600
.*                                                                      00179700
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00179800
                      AGO   .ZL2           CONTINUE LOOPING             00179900
.*                                                                      00180000
.ZLX                  ANOP  ,                                           00180100
                      AIF   ('&XMF' EQ 'L').ZLINKX  MF=L                00180200
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00180300
         L     14,16(0,0)              GET CVT ADDRESS                  00180400
         L     14,772(14,0)            GET SFT ADDRESS                  00180500
         L     14,480(14,0)            GET LX FOR SERVICE ROUTINE       00180600
         PC    0(14)                                                    00180700
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00180800
.ZLINKX               ANOP  ,                                           00180900
.*******************************************************************    00181000
.***AP.X01  FORMAT GENERATED CODE                                       00181100
.ZL21                 AIF   (&ZOPX GT &ZOPN).ZLX1  B IF DONE            00181200
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00181300
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00181400
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00181500
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00181600
                      AIF   (K'&ZLD LE 0).ZL51                          00181700
&ZLC                  SETA  35             COMMENT COLUMN               00181800
                      AIF   ('&ZLD'(1,1) NE '*').ZL31                   00181900
&ZLC                  SETA  33             COMMENT COLUMN               00182000
.ZL31                 AIF   (K'&ZLV GE &ZLC-16-1).ZL41                  00182100
&ZLV                  SETC  '&ZLV'.' '                                  00182200
                      AGO   .ZL31                                       00182300
.*                                                                      00182400
.ZL41                 ANOP  ,                                           00182500
&ZLV                  SETC  '&ZLV'.' '                                  00182600
.ZL51                 ANOP  ,                                           00182700
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00182800
.*                                                                      00182900
&ZLL     &ZLOP &ZLV                                                     00183000
.*                                                                      00183100
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00183200
                      AGO   .ZL21          CONTINUE LOOPING             00183300
.*                                                                      00183400
.ZLX1                 ANOP  ,                                           00183500
.*******************************************************************    00183600
.***AP.X02  END OF IEAMPDQ MACRO                                        00183700
&ZIEAMPDQ             SETC  'YES'          SET IEAMPDQ USED             00183800
         POP   PRINT                                                    00183900
*                                            IEAMPDQ-0                  00184000
         SPACE 1                                                        00184100
.ZLX2                 ANOP  ,                                           00184200
         MEND                                                           00184300
**********************************************************************/ 00184400
*/*PB.OC01 INVOKE MACRO---------------------------------------------*/  00184500
*%IEAMPDQ: MACRO KEYS(TARGETSTOKEN,MATCHOPTION,RMTRADDR,PURGESTOKEN,    00184600
*                 PTCBADDR,SYNCH,RMTRPRMADDR,RMTRPRMALETADDR,PLISTVER,  00184700
*                 MF);                                                  00184800
*  ANS('?'||MACLABEL||' '||'IEAMPDQP '||MACLIST||                       00184900
*         ' '||MACKEYS||';') COL(MACLMAR);                              00185000
*%END IEAMPDQ;                                                          00185100
