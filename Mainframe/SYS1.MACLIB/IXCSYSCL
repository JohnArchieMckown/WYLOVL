*/**** START OF SPECIFICATIONS **************************************** 00000100
*                                                                     * 00000200
*                                                                     * 00000300
*01* MACRO NAME:  IXCSYSCL                              -10/19/94-<0> * 00000400
*                                                                     * 00000500
*                                                                     * 00000600
*01* DESCRIPTIVE NAME:  System Cleanup Notification                   * 00000700
*                                                                     * 00000800
*01* PROPRIETARY STATEMENT:                                           * 00000900
*                                                                     * 00001000
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 00001100
*     THIS MACRO IS "RESTRICTED MATERIALS OF IBM"                     * 00001200
*     5655-068 (C) COPYRIGHT IBM CORP. 1994                           * 00001300
*     SEE COPYRIGHT INSTRUCTIONS                                      * 00001400
*                                                                     * 00001500
* STATUS= HBB5520                                                     * 00001600
*                                                                     * 00001700
*                                                                     * 00001800
*                                                                     * 00001900
*01* FUNCTION:                                                        * 00002000
*                                                                     * 00002100
*                                                                     * 00002200
*      This macro is invoked to notify XCF that cleanup for a failed  * 00002300
*      system (identified by the FAILEDSYS keyword) has been          * 00002400
*      completed by an XCF member (identified by the MEMTOKEN         * 00002500
*      keyword).  The member must be active on the current system and * 00002600
*      must have invoked IXCJOIN with the SYSCLEANUPMEM=YES option.   * 00002700
*      Note that any member who IXCJOINED with the SYSCLEANUPMEM=YES  * 00002800
*      option is required to invoke IXCSYSCL in response to a system  * 00002900
*      termination event even when no cleanup needed to be performed. * 00003000
*                                                                     * 00003100
*      When a system has terminated, all group exits of active        * 00003200
*      members on all systems are driven with a system reported gone  * 00003300
*      (GEPLTYPE=GESYSGON) or system detected gone (GEPLTYPE=GESYSDG) * 00003400
*      notification event.  A system identifier or token of the       * 00003500
*      failed system is provided to the group exit in the GEPLSID     * 00003600
*      field of the group exit parameter list.  This is the token     * 00003700
*      that should be provided in the IXCSYSCL FAILEDSYS keyword.     * 00003800
*      See the IXCYGEPL mapping macro for a description of the        * 00003900
*      parameter list that is passed to the group exit.  The system   * 00004000
*      reported gone and system detected gone notification events are * 00004100
*      system related (GEPLMEME is off) and are not member related    * 00004200
*      (GEPLMEME is on) events.  System related events do not provide * 00004300
*      member specific information.                                   * 00004400
*                                                                     * 00004500
*      Please note that IXCSYSCL can only be invoked after the        * 00004600
*      issuing member has been notified of the system termination via * 00004700
*      the group exit and it should not be invoked just because       * 00004800
*      cleanup for any specific member on the terminated system has   * 00004900
*      been performed.  XCF will discard the IXCSYSCL cleanup has     * 00005000
*      completed notification if the issuing member has not yet been  * 00005100
*      notified of the system having terminated.                      * 00005200
*                                                                     * 00005300
*                                                                     * 00005400
*                                                                     * 00005500
*      INPUT REGISTERS:                                               * 00005600
*                                                                     * 00005700
*                                                                     * 00005800
*                          GR0-GR1     reserved                       * 00005900
*                                                                     * 00006000
*                          GR2-GR13    undefined                      * 00006100
*                                                                     * 00006200
*                          GR14-GR15   reserved                       * 00006300
*                                                                     * 00006400
*                          AR0-AR1     reserved                       * 00006500
*                                                                     * 00006600
*                          AR2-AR13    undefined                      * 00006700
*                                                                     * 00006800
*                          AR14-AR15   reserved                       * 00006900
*                                                                     * 00007000
*                                                                     * 00007100
*                                                                     * 00007200
*      OUTPUT ENVIRONMENT: Same as on entry                           * 00007300
*                                                                     * 00007400
*      OUTPUT REGISTERS:                                              * 00007500
*                                                                     * 00007600
*                                                                     * 00007700
*                          GR0         reason code based on GR15 or 0 * 00007800
*                                                                     * 00007900
*                          GR1         unpredictable                  * 00008000
*                                                                     * 00008100
*                          GR2-GR13    unchanged                      * 00008200
*                                                                     * 00008300
*                          GR14        unpredictable                  * 00008400
*                                                                     * 00008500
*                          GR15        return code                    * 00008600
*                                                                     * 00008700
*                          AR0-AR1     unpredictable                  * 00008800
*                                                                     * 00008900
*                          AR2-AR13    unchanged                      * 00009000
*                                                                     * 00009100
*                          AR14-AR15   unpredictable                  * 00009200
*                                                                     * 00009300
*                                                                     * 00009400
*                                                                     * 00009500
*                                                                     * 00009600
*                                                                     * 00009700
*01* EXTERNAL CLASSIFICATION:  GUPI                                   * 00009800
*                                                                     * 00009900
*01* END OF EXTERNAL CLASSIFICATION:                                  * 00010000
*                                                                     * 00010100
*01* ENVIRONMENT:                                                     * 00010200
*                                                                     * 00010300
*                                                                     * 00010400
*      Dispatchable unit mode: Task or SRB mode.                      * 00010500
*                                                                     * 00010600
*      Minimum authorization: Supervisor state or PKM allowing keys   * 00010700
*                        0-7.                                         * 00010800
*                                                                     * 00010900
*      AMODE:            31-bit.                                      * 00011000
*                                                                     * 00011100
*      ASC mode:         Primary or Access Register.                  * 00011200
*                                                                     * 00011300
*                        If in Access Register ASC mode, specify      * 00011400
*                        SYSSTATE ASCENV=AR before invoking this      * 00011500
*                        macro.                                       * 00011600
*                                                                     * 00011700
*                        Primary address space must be equal to the   * 00011800
*                        home address space and this can be any home  * 00011900
*                        address space.  There is no restriction on   * 00012000
*                        the secondary address space.                 * 00012100
*                                                                     * 00012200
*                        The primary address space can be either      * 00012300
*                        swappable or non-swappable.                  * 00012400
*                                                                     * 00012500
*      Serialization:                                                 * 00012600
*                                                                     * 00012700
*                        Enabled for I/O and external interrupts      * 00012800
*                                                                     * 00012900
*                        No locks held                                * 00013000
*                                                                     * 00013100
*                                                                     * 00013200
*                                                                     * 00013300
*01* SYNTAX:                                                          * 00013400
*                                                                     * 00013500
*[xlabel]  IXCSYSCL   [ PLISTVER                                      * 00013600
*                                =xplistver|IMPLIED_VERSION]        * 00013700
*                      ,MEMTOKEN=xmemtoken                            * 00013800
*                      ,FAILEDSYS=xfailedsys                          * 00013900
*                     [,RETCODE=xretcode]                             * 00014000
*                     [,RSNCODE=xrsncode]                             * 00014100
*                    [,MF=S]                                         * 00014200
*                    [,MF=(L,xmfctrl,xmfattr|0D)]                  * 00014300
*                    [,MF=(E,xmfctrl,COMPLETE)]                    * 00014400
*                                                                     * 00014500
*                                                                     * 00014600
*      Where:                                                         * 00014700
*                                                                     * 00014800
*                                                                     * 00014900
*      [xlabel]                                                       * 00015000
*          is an optional symbol, starting in column 1, that is the   * 00015100
*          name on the IXCSYSCL macro invocation.  The name must      * 00015200
*          conform to the rules for an ordinary assembler language    * 00015300
*          symbol.                                                    * 00015400
*          DEFAULT: No name.                                          * 00015500
*                                                                     * 00015600
*                                                                     * 00015700
*                                                                     * 00015800
*                                                                     * 00015900
*      [PLISTVER=xplistver|IMPLIED_VERSION]                         * 00016000
*          is an optional byte input decimal value in the "0-0" range * 00016100
*          that specifies the macro version.  PLISTVER is the only    * 00016200
*          key allowed on the list form of MF and determines which    * 00016300
*          parameter list is generated.  Note that MAX may be         * 00016400
*          specified instead of a number, and the parameter list will * 00016500
*          be of the largest size currently supported. This size may  * 00016600
*          grow from release to release (thus possibly affecting the  * 00016700
*          amount of storage needed by your program).  If your        * 00016800
*          program can tolerate this, IBM recommends that you always  * 00016900
*          specify MAX when creating the list form parameter list as  * 00017000
*          that will ensure that the list form parameter list is      * 00017100
*          always long enough to hold whatever parameters might be    * 00017200
*          specified on the execute form.                             * 00017300
*          DEFAULT: IMPLIED_VERSION.  When PLISTVER is omitted, the   * 00017400
*          default is the lowest version which allows all of the      * 00017500
*          parameters specified on the invocation to be processed.    * 00017600
*                                                                     * 00017700
*                                                                     * 00017800
*                                                                     * 00017900
*                                                                     * 00018000
*      MEMTOKEN=xmemtoken                                             * 00018100
*          is the name (RS-type), or address in register (2)-(12), of * 00018200
*          a required 64 bit input variable containing the token of   * 00018300
*          the member (as returned by IXCJOIN) on the current system  * 00018400
*          that has completed cleanup for the failed system. The      * 00018500
*          failed system is identified by the FAILEDSYS keyword.  The * 00018600
*          member must be active on the current system and must have  * 00018700
*          invoked IXCJOIN with the SYSCLEANUPMEM=YES option.  The    * 00018800
*          cleanup is performed for the system that has terminated    * 00018900
*          and not for any single member that may have been on the    * 00019000
*          system that has terminated. The member token is needed so  * 00019100
*          XCF knows which (SYSCLEANUPMEM=YES) member on the current  * 00019200
*          system has completed cleanup for the failed system. XCF    * 00019300
*          does not need to know anything about the members that may  * 00019400
*          have been active on the failed system when it failed.      * 00019500
*                                                                     * 00019600
*                                                                     * 00019700
*                                                                     * 00019800
*                                                                     * 00019900
*      FAILEDSYS=xfailedsys                                           * 00020000
*          is the name (RS-type), or address in register (2)-(12), of * 00020100
*          a required fullword input variable containing the system   * 00020200
*          token of the system for which the cleanup has been         * 00020300
*          completed.  The system token is provided to a member's     * 00020400
*          group exit on a system report gone (GEPLTYPE=GESYSGON)  or * 00020500
*          system detected gone (GEPLTYPE=GESYSDG)  notification      * 00020600
*          event in the field GEPLSID of the group exit parameter     * 00020700
*          list. See the IXCYGEPL mapping macro for a description of  * 00020800
*          the parameter list that is passed to the group exit.       * 00020900
*          Please note the system reported gone and system detected   * 00021000
*          gone notification events are system related (GEPLMEME is   * 00021100
*          off) and are not member related (GEPLMEME is on).  System  * 00021200
*          related events do not provide member specific information. * 00021300
*                                                                     * 00021400
*                                                                     * 00021500
*                                                                     * 00021600
*                                                                     * 00021700
*      [RETCODE=xretcode]                                             * 00021800
*          is the name (RS-type) of an optional fullword output       * 00021900
*          variable, or register (2)-(12), into which the return code * 00022000
*          is to be copied from GPR 15.                               * 00022100
*                                                                     * 00022200
*                                                                     * 00022300
*                                                                     * 00022400
*                                                                     * 00022500
*      [RSNCODE=xrsncode]                                             * 00022600
*          is the name (RS-type) of an optional fullword output       * 00022700
*          variable, or register (2)-(12), into which the reason code * 00022800
*          is to be copied from GPR 0.                                * 00022900
*                                                                     * 00023000
*                                                                     * 00023100
*                                                                     * 00023200
*                                                                     * 00023300
*      [MF=S|L|E]                                                   * 00023400
*          is an optional keyword input which specifies the macro     * 00023500
*          form.                                                      * 00023600
*          DEFAULT: S                                                 * 00023700
*                                                                     * 00023800
*                                                                     * 00023900
*          [MF=S]                                                     * 00024000
*              specifies the standard form of the macro.  The "S"     * 00024100
*              form generates code to put the parameters into an      * 00024200
*              in-line parameter list and invoke the desired service. * 00024300
*              Full checking for required macro keys is done along    * 00024400
*              with supplying defaults for omitted optional           * 00024500
*              parameters.                                            * 00024600
*                                                                     * 00024700
*          [MF=(L,xmfctrl,xmfattr|0D)]                              * 00024800
*              specifies the list form of the macro.  The "L" form    * 00024900
*              defines an area to be used for the parameter list.     * 00025000
*              Only the PLISTVER key may be specified on the          * 00025100
*              invocation.  All other macro parameters are flagged as * 00025200
*              errors.  If PLISTVER is not specified, the original    * 00025300
*              parameter list definition is used.                     * 00025400
*                                                                     * 00025500
*            ,xmfctrl                                                 * 00025600
*              is a required input.  It is the name of a storage area * 00025700
*              for the parameter list.                                * 00025800
*                                                                     * 00025900
*            ,xmfattr|0D                                            * 00026000
*              is an optional 60 character input string that varies   * 00026100
*              from 1 to 60 characters. It can contain any value that * 00026200
*              is valid on an assembler DS pseudo-op. You can use     * 00026300
*              this parameter to force boundary alignment of the      * 00026400
*              parameter list.                                        * 00026500
*              DEFAULT: 0D which forces the parameter list to a       * 00026600
*              doubleword boundary.                                   * 00026700
*                                                                     * 00026800
*          [MF=(E,xmfctrl,COMPLETE)]                                * 00026900
*              specifies the execute form of the macro.  The "E" form * 00027000
*              generates code to put the parameters into the          * 00027100
*              parameter list specified by xmfctrl and provides full  * 00027200
*              syntax checking with default setting.                  * 00027300
*                                                                     * 00027400
*            ,xmfctrl                                                 * 00027500
*              is a required input.  It is the name (RS-type), or     * 00027600
*              address in register (1)-(12), of a storage area for    * 00027700
*              the parameter list.                                    * 00027800
*                                                                     * 00027900
*            ,COMPLETE                                              * 00028000
*              is an optional keyword input which specifies the       * 00028100
*              degree of macro parameter syntax checking.             * 00028200
*              DEFAULT: COMPLETE                                      * 00028300
*                                                                     * 00028400
*                                                                     * 00028500
*              COMPLETE   Checking for required macro keys is done    * 00028600
*                        and defaults are supplied for omitted        * 00028700
*                        optional parameters.                         * 00028800
*                                                                     * 00028900
*                                                                     * 00029000
*                                                                     * 00029100
*                                                                     * 00029200
*                                                                     * 00029300
*                                                                     * 00029400
*                                                                     * 00029500
*01* RETURN CODES:                                                    * 00029600
*                                                                     * 00029700
*                                                                     * 00029800
*                                                                     * 00029900
*                 0         Request accepted for processing.  The     * 00030000
*                           request will be processed asynchronously. * 00030100
*                           Requests issued prior to the target       * 00030200
*                           system having terminated will be          * 00030300
*                           discarded and another IXCSYSCL request    * 00030400
*                           will be expected when group exits are     * 00030500
*                           driven for the system termination.        * 00030600
*                                                                     * 00030700
*                                                                     * 00030800
*                                                                     * 00030900
*                 8          invalid parameters, reason code in R0    * 00031000
*                                                                     * 00031100
*                           HEX REASON  MEANING                       * 00031200
*                           CODE                                      * 00031300
*                                                                     * 00031400
*                                                                     * 00031500
*                           004         The MEMTOKEN does not         * 00031600
*                                       represent an active member    * 00031700
*                                       associated with the primary   * 00031800
*                                       address space.                * 00031900
*                                                                     * 00032000
*                           008         Caller's STOKEN does not      * 00032100
*                                       match the STOKEN from the     * 00032200
*                                       IXCJOIN request.              * 00032300
*                                                                     * 00032400
*                           00C         The MEMTOKEN does not         * 00032500
*                                       represent a member who        * 00032600
*                                       IXCJOINed with the            * 00032700
*                                       SYSCLEANUPMEM(YES) attribute  * 00032800
*                                                                     * 00032900
*                           010         The FAILEDSYS is not a valid  * 00033000
*                                       system token.                 * 00033100
*                                                                     * 00033200
*                           040         Reserved field in parameter   * 00033300
*                                       list not 0                    * 00033400
*                                                                     * 00033500
*                           100         ALET invalid for parameter    * 00033600
*                                       list                          * 00033700
*                                                                     * 00033800
*                           104         Invalid version in the        * 00033900
*                                       parameter list.               * 00034000
*                                                                     * 00034100
*                           108         Invalid Function Code in      * 00034200
*                                       parameter list                * 00034300
*                                                                     * 00034400
*                           10C         Error accessing parameter     * 00034500
*                                       list                          * 00034600
*                                                                     * 00034700
*                           11C         Not enabled                   * 00034800
*                                                                     * 00034900
*                           12C         Caller is holding a lock      * 00035000
*                                                                     * 00035100
*                                                                     * 00035200
*                                                                     * 00035300
*                                                                     * 00035400
*                 10        Failure in XCF processing.                * 00035500
*                                                                     * 00035600
*                                                                     * 00035700
*                                                                     * 00035800
*                                                                     * 00035900
*                                                                     * 00036000
*01* REASON CODES:                                                    * 00036100
*                                                                     * 00036200
*       In all cases except the return code '10'X, a unique reason    * 00036300
*       code will be returned whenever the return code is non-zero.   * 00036400
*                                                                     * 00036500
*01* MODULE TYPE:  ASSEM MACRO                                        * 00036600
*                                                                     * 00036700
*02*   PROCESSOR:  ASSEM                                              * 00036800
*                                                                     * 00036900
*01* COMPONENT:  SCXCF                                                * 00037000
*                                                                     * 00037100
*01* DISTRIBUTION LIBRARY: AMACLIB                                    * 00037200
*                                                                     * 00037300
*01* MACRO USAGE NOTES:                                               * 00037400
*                                                                     * 00037500
*                                                                     * 00037600
*    1.  Printing of the macro expansion is controlled by the ZPRINT  * 00037700
*        global macro variable.  Any value other than 'NO' will       * 00037800
*        result in the macro expansion being printed.  The default is * 00037900
*        'YES'.  The following examples illustrate how the ZPRINT     * 00038000
*        variable should be set.                                      * 00038100
*                                                                     * 00038200
*                    GBLC &ZPRINT                                     * 00038300
*            &ZPRINT SETC 'YES'          &ZPRINT SETC 'NO'            * 00038400
*                                                                     * 00038500
*                                                                     * 00038600
*    2.  All   keys   currently   contained  in  the  IXCSYSCL  macro * 00038700
*        correspond  to  version  0.   If you specify PLISTVER, use a * 00038800
*        value of 0 or MAX.                                           * 00038900
*                                                                     * 00039000
*                                                                     * 00039100
*                                                                     * 00039200
*                                                                     * 00039300
*01* CHANGE ACTIVITY:                                                 * 00039400
*                                                                     * 00039500
*   Flag LineItem  FMID    Date   ID    Comment                       * 00039600
*                                                                     * 00039700
*    $L0=ARM      HBB5520 940120 PDCJ:                                * 00039800
*    $D1=DN70019  HBB5520 940310 PDCJ:                                * 00039900
*    $L1=ARM      HBB5520 940505 PDCJ:  Remove the constant names for * 00040000
*                                         return/reason codes         * 00040100
*    $P1=PN71470  HBB5520 940922 PDCJ:  Update the function           * 00040200
*                                         statement, MEMTOKEN, and    * 00040300
*                                         FAILEDSYS keyword'          * 00040400
*                                         descriptions.               * 00040500
****** END OF SPECIFICATIONS *****************************************/ 00040600
*/********************************************************************* 00040700
         MACRO                                                          00040800
&XLABEL  IXCSYSCL &PLISTVER=,&MEMTOKEN=,&FAILEDSYS=,&RETCODE=,         *00040900
               &RSNCODE=,&MF=                                           00041000
.*                                                                      00041100
*               MACDATE -10/19/94-<0>                                   00041200
.*                                                                      00041300
.*******************************************************************    00041400
.***AB.02  GLOBAL VARIABLES TO CONTROL PRINT AND CODE GENERATION        00041500
.*******************************************************************    00041600
               GBLC  &ZPRINT     YES=PRINT NO=NO PRINT                  00041700
               GBLC  &ZTEST      YES=TEST NO=NO TEST                    00041800
               GBLC  &ZSYSTEM    PCCODE10, MVS, SAK, VM, XAX            00041900
.*                                                                      00042000
               GBLC  &ZIXCSYSCL  YES=MACRO USED AT LEAST ONCE           00042100
.*******************************************************************    00042200
.***AB.03  COMMONLY USED LOCAL MACRO VARIABLES                          00042300
.*******************************************************************    00042400
               LCLC  &ZMS        ERROR MESSAGE WORK AREA                00042500
               LCLC  &ZCNDX      LAST THREE SYSNDX CHARACTERS           00042600
               LCLC  &ZCLNG      USED WHEN LENGTH IS NEEDED             00042700
               LCLC  &ZCGPR      USED WHEN VALUE IS IN A GPR            00042800
               LCLC  &ZCVAL      USED TO CONTAIN FIXED VALUE            00042900
               LCLA  &ZAWRK      USED AS A WORK AREA                    00043000
               LCLA  &ZASIZ      USED FOR SIZE OF VALUE                 00043100
               LCLA  &ZN         NUMERIC WORK VARIABLE                  00043200
               LCLC  &ZC         CHARACTER WORK VARIABLE                00043300
               LCLC  &ZTLC       CHARACTER TOO LONG VARIABLE            00043400
               LCLA  &ZTLA       VALUE TOO LONG VARIABLE                00043500
               LCLA  &ZMACRET    MACRO RETURN CODE                      00043600
&ZMACRET       SETA  0           ASSUME NO ERRORS                       00043700
.*                                                                      00043800
               LCLC  &ZCSYSLIST(255)            NONXKEY, POS ARRAY      00043900
               LCLA  &ZASYSLNDX  WORK INDEX FOR ZCSYSLIST()             00044000
               LCLA  &ZPLLEN     PARAMETER LIST LENGTH                  00044100
               LCLC  &ZENDBASEPL                End of base PL          00044200
               LCLA  &ZPLWORKA   PARAMETER LIST LENGTH                  00044300
.*******************************************************************    00044400
.***AB.04  MACRO VARIABLES FOR RANGES AND SETS OF ARGUMENTS             00044500
.*******************************************************************    00044600
               LCLA  &ZI         INDEX FOR ARRAY                        00044700
               LCLA  &ZJ         INDEX FOR PARMS                        00044800
               LCLA  &ZK         INDEX FOR PARSE                        00044900
               LCLA  &ZLO        LOW RANGE VALUE                        00045000
               LCLA  &ZHI        HIGH RANGE VALUE                       00045100
               LCLC  &ZW         WORK AREA FOR PARM                     00045200
.********************************************************************   00045300
.***AB.05  INVOKE MVS MACROS TO CONTROL CODE GENERATION                 00045400
.********************************************************************   00045500
               GBLC  &SYSSPLV    SP LEVEL 1,2,3 -SPLEVEL                00045600
               GBLC  &SYSASCE    SYSTEM STATE P ANY AR-SYSSTATE         00045700
.*                                                                      00045800
               AIF   (K'&SYSASCE GT 0).ZSYS4    SYS STATE DEFINED       00045900
               AIF   (K'&SYSSPLV GT 0).ZSYS2    SP LEVEL DEFINED        00046000
               SPLEVEL  TEST                                            00046100
.ZSYS2         ANOP  ,                                                  00046200
               AIF   ('&SYSSPLV' EQ '1').ZSYS3  PRE SP 3.1              00046300
               AIF   ('&SYSSPLV' EQ '2').ZSYS3  PRE SP 3.1              00046400
               SYSSTATE TEST                                            00046500
               AGO   .ZSYS4                                             00046600
.ZSYS3         ANOP  ,                                                  00046700
&SYSASCE       SETC  'P'         ASSUME SYSSTATE PRIMARY                00046800
.ZSYS4         ANOP  ,                                                  00046900
.*******************************************************************    00047000
.***AB.07  DEFINE ALL MACRO VARIABLES                                   00047100
.*******************************************************************    00047200
               LCLA  &XPLISTVER  ++ VALUE                               00047300
               LCLC  &XMEMTOKEN  ++ NAME                                00047400
               LCLC  &XFAILEDSYS                ++ NAME                 00047500
               LCLC  &XRETCODE   ++ NAME                                00047600
               LCLC  &XRSNCODE   ++ NAME                                00047700
               LCLC  &XMF        ++ VALUE                               00047800
               LCLC  &XMFCTRL    ++ NAME                                00047900
               LCLC  &XMFATTR    ++ VALUE                               00048000
               LCLC  &XMFSCK     ++ VALUE                               00048100
.*******************************************************************    00048200
.***AB.13  DEFINE MACRO VARIABLES FOR INPUT/OUTPUT PROCESSING           00048300
.*******************************************************************    00048400
               LCLC  &ZXPLISTVER                ++ INPUT VALUE          00048500
               LCLC  &ZXMEMTOKEN                ++ INPUT NAME           00048600
               LCLC  &ZXFAILEDSYS               ++ INPUT NAME           00048700
               LCLC  &ZXRETCODE  ++ OUTPUT NAME                         00048800
               LCLC  &ZXRSNCODE  ++ OUTPUT NAME                         00048900
               LCLC  &ZXMF       ++ INPUT VALUE                         00049000
               LCLC  &ZXMFCTRL   ++ INPUT NAME                          00049100
               LCLC  &ZXMFATTR   ++ INPUT VALUE                         00049200
               LCLC  &ZXMFSCK    ++ INPUT VALUE                         00049300
.********************************************************************   00049400
.***AC.PLV01  PROCESS PLISTVER                                      *   00049500
.********************************************************************   00049600
&XPLISTVER      SETA  0                                                 00049700
                AIF   (K'&PLISTVER(1) LE 0).ZPLV0                       00049800
                AIF   ('&PLISTVER(1)' NE 'MAX').ZPLV0                   00049900
&XPLISTVER      SETA  0                                                 00050000
.ZPLV0          ANOP  ,                                                 00050100
.*                                                                      00050200
                AIF   (K'&PLISTVER(1) LE 0).ZPVCKE                      00050300
                AIF   ('&PLISTVER(1)' EQ 'IMPLIED_VERSION').ZPVCKE      00050400
                AIF   ('&PLISTVER(1)' EQ 'MAX').ZPVCKE                  00050500
.*-------------------------------------------------------------------   00050600
                AIF   (N'&PLISTVER LE 1).ZPVCK3  CK NUM                 00050700
&ZMS            SETC  '"PLISTVER='         *KPOSA* MNOTE                00050800
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00050900
&ZMS            SETC  '&ZMS "PLISTVER"'                                 00051000
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00051100
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00051200
                AGO   .ZPVCK2                                           00051300
.ZPVCK3         ANOP  ,                                                 00051400
.*-------------------------------------------------------------------   00051500
                AIF   ('&PLISTVER'(1,1) NE '(').ZPVCK2                  00051600
&ZMS            SETC  '"PLISTVER='         *KGPRA* MNOTE                00051700
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00051800
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         00051900
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'                 00052000
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00052100
                AGO   .ZPVCKE                                           00052200
.ZPVCK2         ANOP  ,                                                 00052300
.*-------------------------------------------------------------------   00052400
&ZN             SETA   &PLISTVER(1)        CONVERT TO ARITHMETIC        00052500
                AIF   (&ZN GE &XPLISTVER).ZPVCK4                        00052600
&ZMS            SETC  'PLISTVER='          *KVALA* MNOTE                00052700
&ZMS            SETC  '&ZMS.&PLISTVER(1)'                               00052800
&ZMS            SETC  '&ZMS., BUT PLISTVER OF'                          00052900
&ZMS            SETC  '&ZMS &XPLISTVER'                                 00053000
                MNOTE 8,' &ZMS IS REQUIRED.'                            00053100
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00053200
                AGO   .ZPVCK5                                           00053300
.ZPVCK4         ANOP  ,                                                 00053400
&XPLISTVER      SETA  &PLISTVER(1)                                      00053500
.ZPVCK5         ANOP  ,                                                 00053600
.*-------------------------------------------------------------------   00053700
&ZCVAL          SETC  '&PLISTVER(1)'                                    00053800
                AIF   ('&ZCVAL'(1,1) EQ '(').ZPVCKE  IN GPR             00053900
                AIF   (T'&ZCVAL NE 'N').ZPVCK6  NUMERIC ERR             00054000
                AIF   (&XPLISTVER LT 0).ZPVCK6  TOO LOW                 00054100
                AIF   (&XPLISTVER LE 0).ZPVCKE  NOT HIGH                00054200
.ZPVCK6         ANOP   ,                                                00054300
&ZMS            SETC  '"PLISTVER='         *KRNGA* MNOTE                00054400
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00054500
&ZMS            SETC  '&ZMS THE RANGE IS "0-0"'                         00054600
                MNOTE 8,' &ZMS FOR ARGUMENT 1.'                         00054700
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00054800
.ZPVCKE         ANOP   ,                                                00054900
.********************************************************************   00055000
.***AG.MF01 PROCESS MF MACRO FORMS                                      00055100
.********************************************************************   00055200
               ACTR  10000                                              00055300
.*------------------------------------------------------------------    00055400
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00055500
&XMF           SETC  ''          INITIALIZE XVARIABLE                   00055600
.*-------------------------------------------------------------------   00055700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00055800
.ZG18          ANOP  ,                                                  00055900
&ZTLC          SETC 'S'                                                 00056000
               AIF   ('&MF(1)' NE '&ZTLC').ZG19                         00056100
&XMF           SETC  'S'         SET KEYWORD                            00056200
               AIF   (N'&MF LE 1).ZG18A         CK NUM                  00056300
&ZMS           SETC  '"MF='      *KPOSA* MNOTE                          00056400
&ZMS           SETC  '&ZMS.&MF"'                                        00056500
&ZMS           SETC  '&ZMS "MF"'                                        00056600
               MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                00056700
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00056800
.ZG18A         ANOP  ,                                                  00056900
.*-------------------------------------------------------------------   00057000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00057100
.ZG19          ANOP  ,                                                  00057200
&ZTLC          SETC 'L'                                                 00057300
               AIF   ('&MF(1)' NE '&ZTLC').ZG26                         00057400
&XMF           SETC  'L'         SET KEYWORD                            00057500
               AIF   (N'&MF LE 3).ZG19A         CK NUM                  00057600
&ZMS           SETC  '"MF='      *KPOSA* MNOTE                          00057700
&ZMS           SETC  '&ZMS.&MF"'                                        00057800
&ZMS           SETC  '&ZMS "MF"'                                        00057900
               MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'               00058000
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00058100
.ZG19A         ANOP  ,                                                  00058200
.*-------------------------------------------------------------------   00058300
.***AG.KKCTL08 -MF(L) SPECIAL CHECK                                     00058400
               AIF   (N'&SYSLIST NE 0).ZG19B    POSITIONALS?            00058500
               AIF   ('&MEMTOKEN' NE '').ZG19B  KEYS?                   00058600
               AIF   ('&FAILEDSYS' NE '').ZG19B  KEYS?                  00058700
               AIF   ('&RETCODE' NE '').ZG19B   KEYS?                   00058800
               AIF   ('&RSNCODE' NE '').ZG19B   KEYS?                   00058900
               AGO    .ZG19C     INVOCATION OKAY                        00059000
.ZG19B         ANOP  ,                                                  00059100
&ZMS           SETC  'THE "L" FORM OF "MF"'     *MFLA* MNOTE            00059200
&ZMS           SETC  '&ZMS CAN ONLY HAVE'                               00059300
&ZMS           SETC  '&ZMS THE "PLISTVER" KEY'                          00059400
               MNOTE 8,' &ZMS SPECIFIED ON THE INVOCATION.'             00059500
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00059600
.ZG19C         ANOP  ,                                                  00059700
.*-------------------------------------------------------------------   00059800
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00059900
&ZXMFCTRL      SETC  'INPUT'     SET IN/OUTPUT                          00060000
&XMFCTRL       SETC  '&MF(2,1)'  SET XVARIABLE                          00060100
               AIF   (N'&MF(2) GT 1).ZG21B      MULTI PARMS             00060200
&XMFCTRL       SETC  '&MF(2)'    SET XVARIABLE                          00060300
.ZG21B         AIF   (K'&MF(2) GT 0).ZG21C                              00060400
&ZXMFCTRL      SETC  ''          RESET IN/OUTPUT                        00060500
&ZMS           SETC  'WHEN "L" IS SPECIFIED'    *KRQDA*                 00060600
&ZMS           SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'                00060700
               MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                       00060800
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00060900
.ZG21C         ANOP  ,                                                  00061000
.*-------------------------------------------------------------------   00061100
.***AG.KCK01 NAME, OPT RQD INPUT, POS(2) -GPR NOT ALLOWED               00061200
               AIF   (K'&ZXMFCTRL LE 0).ZG21P   NOT I/O                 00061300
               AIF   ('&XMFCTRL'(1,1) NE '(').ZG21P                     00061400
&ZXMFCTRL      SETC  ''          RESET IN/OUTPUT                        00061500
&ZMS           SETC  '"MF='      *KGPRA* MNOTE                          00061600
&ZMS           SETC  '&ZMS.&MF"'                                        00061700
&ZMS           SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'          00061800
               MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 2.'                  00061900
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00062000
.ZG21P         ANOP  ,                                                  00062100
.*-------------------------------------------------------------------   00062200
.***AG.KXVAR13 VALUE, OPT INPUT, POS(3) -XVARIABLE                      00062300
&ZXMFATTR      SETC  'INPUT'     SET IN/OUTPUT                          00062400
&XMFATTR       SETC  '0D'                                               00062500
               AIF   (K'&MF(3) LE 0).ZG24B      PARM                    00062600
&XMFATTR       SETC  '&MF(3,1)'  SET XVARIABLE                          00062700
               AIF   (N'&MF(3) GT 1).ZG24B      MULTI PARMS             00062800
&XMFATTR       SETC  '&MF(3)'    SET XVARIABLE                          00062900
.ZG24B         ANOP  ,                                                  00063000
.*-------------------------------------------------------------------   00063100
.***AG.KCK01 VALUE, OPT INPUT, POS(3) -GPR NOT ALLOWED                  00063200
               AIF   (K'&ZXMFATTR LE 0).ZG24P   NOT I/O                 00063300
               AIF   ('&XMFATTR'(1,1) NE '(').ZG24P                     00063400
&ZXMFATTR      SETC  ''          RESET IN/OUTPUT                        00063500
&ZMS           SETC  '"MF='      *KGPRA* MNOTE                          00063600
&ZMS           SETC  '&ZMS.&MF"'                                        00063700
&ZMS           SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'          00063800
               MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 3.'                  00063900
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00064000
.ZG24P         ANOP  ,                                                  00064100
.*-------------------------------------------------------------------   00064200
.***AG.KCK03 VALUE, OPT INPUT, POS(3) -CHARACTER LENGTH                 00064300
               AIF   (K'&ZXMFATTR LE 0).ZG24S   NOT I/O                 00064400
               AIF   (K'&XMFATTR LE 60).ZG24S   LNG OK                  00064500
&ZXMFATTR      SETC  ''          RESET IN/OUTPUT                        00064600
&ZMS           SETC  '"MF='      *KLNGA* MNOTE                          00064700
&ZMS           SETC  '&ZMS.&MF"'                                        00064800
&ZMS           SETC  '&ZMS ARGUMENT 3 EXCEEDS THE MAXIMUM'              00064900
               MNOTE 8,' &ZMS LENGTH OF 60 CHARACTERS.'                 00065000
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00065100
.ZG24S         ANOP  ,                                                  00065200
.*-------------------------------------------------------------------   00065300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00065400
.ZG26          ANOP  ,                                                  00065500
&ZTLC          SETC 'E'                                                 00065600
               AIF   ('&MF(1)' NE '&ZTLC').ZG34                         00065700
&XMF           SETC  'E'         SET KEYWORD                            00065800
               AIF   (N'&MF LE 3).ZG26A         CK NUM                  00065900
&ZMS           SETC  '"MF='      *KPOSA* MNOTE                          00066000
&ZMS           SETC  '&ZMS.&MF"'                                        00066100
&ZMS           SETC  '&ZMS "MF"'                                        00066200
               MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'               00066300
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00066400
.ZG26A         ANOP  ,                                                  00066500
.*-------------------------------------------------------------------   00066600
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00066700
&ZXMFCTRL      SETC  'INPUT'     SET IN/OUTPUT                          00066800
&XMFCTRL       SETC  '&MF(2,1)'  SET XVARIABLE                          00066900
               AIF   (N'&MF(2) GT 1).ZG28B      MULTI PARMS             00067000
&XMFCTRL       SETC  '&MF(2)'    SET XVARIABLE                          00067100
.ZG28B         AIF   (K'&MF(2) GT 0).ZG28C                              00067200
&ZXMFCTRL      SETC  ''          RESET IN/OUTPUT                        00067300
&ZMS           SETC  'WHEN "E" IS SPECIFIED'    *KRQDA*                 00067400
&ZMS           SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'                00067500
               MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                       00067600
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00067700
.ZG28C         ANOP  ,                                                  00067800
.*-------------------------------------------------------------------   00067900
.***AG.KCK02 NAME, OPT RQD INPUT, POS(2) -GPR OUT OF RANGE              00068000
               AIF   (K'&ZXMFCTRL LE 0).ZG28R   NOT I/O                 00068100
               AIF   ('&XMFCTRL'(1,1) NE '(').ZG28R                     00068200
&ZCGPR         SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)                         00068300
               AIF   ('&ZCGPR'(1,1) NE '0').ZG28P                       00068400
               AIF   (K'&ZCGPR GT 2).ZG28Q                              00068500
               AIF   ('&ZCGPR' EQ '0').ZG28Q                            00068600
&ZCGPR         SETC  '&ZCGPR'(2,1)                                      00068700
               AIF   (T'&ZCGPR NE 'N').ZG28Q    INVALID REG NAME        00068800
.ZG28P         ANOP  ,                                                  00068900
               AIF   (T'&ZCGPR NE 'N').ZG28R    NON NUMERIC             00069000
               AIF   ('&ZCGPR' LT '1').ZG28Q                            00069100
               AIF   ('&ZCGPR' LE '12').ZG28R                           00069200
.ZG28Q         ANOP  ,                                                  00069300
&ZMS           SETC  '"MF='      *KGPRA* MNOTE                          00069400
&ZMS           SETC  '&ZMS.&MF"'                                        00069500
&ZMS           SETC  '&ZMS ARGUMENT 2 MUST SPECIFY A REGISTER'          00069600
               MNOTE 8,' &ZMS IN THE RANGE (1)-(12).'                   00069700
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00069800
.ZG28R         ANOP  ,                                                  00069900
.*-------------------------------------------------------------------   00070000
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00070100
&XMFSCK        SETC  ''          INITIALIZE XVARIABLE                   00070200
.ZG32A   AIF   ('&MF(3)' NE 'COMPLETE').ZG33A                           00070300
&XMFSCK        SETC  'COMPLETE'  SET KEYWORD                            00070400
.*-------------------------------------------------------------------   00070500
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00070600
.ZG33A         AIF   (K'&XMFSCK GT 0).ZG33C     KEYWORD                 00070700
               AIF   (K'&MF(3) LE 0).ZG33B                              00070800
&ZMS           SETC  '"MF='      *KUKWA* MNOTE                          00070900
&ZMS           SETC  '&ZMS.&MF"'                                        00071000
&ZMS           SETC  '&ZMS ARGUMENT 3 IS AN UNKNOWN KEYWORD. '          00071100
&ZMS           SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                00071200
&ZMS           SETC  '&ZMS "COMPLETE".'         VALID KEYWORD           00071300
               MNOTE 8,' &ZMS '                                         00071400
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00071500
.ZG33B         ANOP  ,                                                  00071600
&XMFSCK        SETC  'COMPLETE'  SET DEFAULT KEYWORD                    00071700
.ZG33C         ANOP  ,                                                  00071800
&ZXMFSCK       SETC  'INPUT'     SET IN/OUTPUT                          00071900
.*------------------------------------------------------------------    00072000
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00072100
.ZG34          ANOP  ,                                                  00072200
&ZXMF          SETC  'INPUT'     SET IN/OUTPUT                          00072300
               AIF   (K'&XMF GT 0).ZG34E        VALID ARG               00072400
               AIF   (T'&MF EQ 'O').ZG34D       OMITTED                 00072500
&ZASYSLNDX     SETA  0                                                  00072600
.ZG34A         ANOP  ,           POSITIONAL MACRO KEY                   00072700
&ZASYSLNDX     SETA  &ZASYSLNDX+1                                       00072800
               AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG34C                   00072900
&ZTLC          SETC 'MF'                                                00073000
               AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG34A          00073100
.ZG34B         ANOP  ,                                                  00073200
&ZXMF          SETC  ''          RESET IN/OUTPUT                        00073300
&ZMS           SETC  'THE "MF" KEY'             *KOPTA* MNOTE           00073400
&ZMS           SETC  '&ZMS MUST CONTAIN ONE'                            00073500
               MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                   00073600
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00073700
               AGO   .ZG34E                                             00073800
.ZG34C         ANOP  ,                                                  00073900
&ZXMF          SETC  ''          RESET IN/OUTPUT                        00074000
&ZMS           SETC  '"MF='      *KUKWA* MNOTE                          00074100
&ZMS           SETC  '&ZMS.&MF"'                                        00074200
&ZMS           SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '          00074300
&ZMS           SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                00074400
&ZMS           SETC  '&ZMS "S",'                VALID KEYWORD           00074500
&ZMS           SETC  '&ZMS "L",'                VALID KEYWORD           00074600
&ZMS           SETC  '&ZMS OR "E".'             VALID KEYWORD           00074700
               MNOTE 8,' &ZMS '                                         00074800
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00074900
               AGO   .ZG34E                                             00075000
.ZG34D         ANOP  ,                                                  00075100
&XMF           SETC  'S'         SET DEFAULT KEYWORD                    00075200
&XMFSCK        SETC  'COMPLETE'  COMPLETE CHECKING                      00075300
.ZG34E         ANOP  ,                                                  00075400
.********************************************************************   00075500
.***AG.MF02  FULL MACRO SYNTAX CHECKING                                 00075600
.********************************************************************   00075700
               ACTR  10000                                              00075800
.*-------------------------------------------------------------------   00075900
.***AG.MF03 MF=(SLE)                                                    00076000
               AIF   ('&XMF' EQ 'L').ZGMFX                              00076100
.*----------------------------------------------------------------***   00076200
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00076300
               AIF   (N'&MEMTOKEN LE 1).ZG5A    CK NUM                  00076400
&ZMS           SETC  '"MEMTOKEN='               *KPOSA* MNOTE           00076500
&ZMS           SETC  '&ZMS.&MEMTOKEN"'                                  00076600
&ZMS           SETC  '&ZMS "MEMTOKEN"'                                  00076700
               MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                00076800
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00076900
.ZG5A          ANOP  ,                                                  00077000
.*-------------------------------------------------------------------   00077100
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00077200
&ZXMEMTOKEN    SETC  'INPUT'     SET IN/OUTPUT                          00077300
&XMEMTOKEN     SETC  '&MEMTOKEN(1)'             SET XVARIABLE           00077400
               AIF   (N'&MEMTOKEN GT 1).ZG5B    MULTI PARMS             00077500
&XMEMTOKEN     SETC  '&MEMTOKEN'                SET XVARIABLE           00077600
.ZG5B          AIF   (K'&MEMTOKEN(1) GT 0).ZG5C                         00077700
&ZXMEMTOKEN    SETC  ''          RESET IN/OUTPUT                        00077800
&ZMS           SETC  ' '         *KRQDA*                                00077900
&ZMS           SETC  '&ZMS "MEMTOKEN" KEY AND ITS ARGUMENT'             00078000
               MNOTE 8,' &ZMS ARE REQUIRED.'                            00078100
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00078200
.ZG5C          ANOP  ,                                                  00078300
.*-------------------------------------------------------------------   00078400
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00078500
               AIF   (K'&ZXMEMTOKEN LE 0).ZG5R  NOT I/O                 00078600
               AIF   ('&XMEMTOKEN'(1,1) NE '(').ZG5R                    00078700
&ZCGPR         SETC  '&XMEMTOKEN'(2,K'&XMEMTOKEN-2)                     00078800
               AIF   ('&ZCGPR'(1,1) NE '0').ZG5P                        00078900
               AIF   (K'&ZCGPR GT 2).ZG5Q                               00079000
               AIF   ('&ZCGPR' EQ '0').ZG5Q                             00079100
&ZCGPR         SETC  '&ZCGPR'(2,1)                                      00079200
               AIF   (T'&ZCGPR NE 'N').ZG5Q     INVALID REG NAME        00079300
.ZG5P          ANOP  ,                                                  00079400
               AIF   (T'&ZCGPR NE 'N').ZG5R     NON NUMERIC             00079500
               AIF   ('&ZCGPR' LT '2').ZG5Q                             00079600
               AIF   ('&ZCGPR' LE '12').ZG5R                            00079700
.ZG5Q          ANOP  ,                                                  00079800
&ZMS           SETC  '"MEMTOKEN='               *KGPRA* MNOTE           00079900
&ZMS           SETC  '&ZMS.&MEMTOKEN"'                                  00080000
&ZMS           SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'          00080100
               MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                   00080200
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00080300
.ZG5R          ANOP  ,                                                  00080400
.*----------------------------------------------------------------***   00080500
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00080600
               AIF   (N'&FAILEDSYS LE 1).ZG8A   CK NUM                  00080700
&ZMS           SETC  '"FAILEDSYS='              *KPOSA* MNOTE           00080800
&ZMS           SETC  '&ZMS.&FAILEDSYS"'                                 00080900
&ZMS           SETC  '&ZMS "FAILEDSYS"'                                 00081000
               MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                00081100
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00081200
.ZG8A          ANOP  ,                                                  00081300
.*-------------------------------------------------------------------   00081400
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00081500
&ZXFAILEDSYS   SETC  'INPUT'     SET IN/OUTPUT                          00081600
&XFAILEDSYS    SETC  '&FAILEDSYS(1)'            SET XVARIABLE           00081700
               AIF   (N'&FAILEDSYS GT 1).ZG8B   MULTI PARMS             00081800
&XFAILEDSYS    SETC  '&FAILEDSYS'               SET XVARIABLE           00081900
.ZG8B          AIF   (K'&FAILEDSYS(1) GT 0).ZG8C                        00082000
&ZXFAILEDSYS   SETC  ''          RESET IN/OUTPUT                        00082100
&ZMS           SETC  ' '         *KRQDA*                                00082200
&ZMS           SETC  '&ZMS "FAILEDSYS" KEY AND ITS ARGUMENT'            00082300
               MNOTE 8,' &ZMS ARE REQUIRED.'                            00082400
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00082500
.ZG8C          ANOP  ,                                                  00082600
.*-------------------------------------------------------------------   00082700
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00082800
               AIF   (K'&ZXFAILEDSYS LE 0).ZG8R  NOT I/O                00082900
               AIF   ('&XFAILEDSYS'(1,1) NE '(').ZG8R                   00083000
&ZCGPR         SETC  '&XFAILEDSYS'(2,K'&XFAILEDSYS-2)                   00083100
               AIF   ('&ZCGPR'(1,1) NE '0').ZG8P                        00083200
               AIF   (K'&ZCGPR GT 2).ZG8Q                               00083300
               AIF   ('&ZCGPR' EQ '0').ZG8Q                             00083400
&ZCGPR         SETC  '&ZCGPR'(2,1)                                      00083500
               AIF   (T'&ZCGPR NE 'N').ZG8Q     INVALID REG NAME        00083600
.ZG8P          ANOP  ,                                                  00083700
               AIF   (T'&ZCGPR NE 'N').ZG8R     NON NUMERIC             00083800
               AIF   ('&ZCGPR' LT '2').ZG8Q                             00083900
               AIF   ('&ZCGPR' LE '12').ZG8R                            00084000
.ZG8Q          ANOP  ,                                                  00084100
&ZMS           SETC  '"FAILEDSYS='              *KGPRA* MNOTE           00084200
&ZMS           SETC  '&ZMS.&FAILEDSYS"'                                 00084300
&ZMS           SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'          00084400
               MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                   00084500
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00084600
.ZG8R          ANOP  ,                                                  00084700
.*----------------------------------------------------------------***   00084800
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00084900
               AIF   (N'&RETCODE LE 1).ZG11A    CK NUM                  00085000
&ZMS           SETC  '"RETCODE='                *KPOSA* MNOTE           00085100
&ZMS           SETC  '&ZMS.&RETCODE"'                                   00085200
&ZMS           SETC  '&ZMS "RETCODE"'                                   00085300
               MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                00085400
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00085500
.ZG11A         ANOP  ,                                                  00085600
.*-------------------------------------------------------------------   00085700
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00085800
               AIF   (K'&RETCODE(1) LE 0).ZG11C  NO PARM                00085900
&ZXRETCODE     SETC  'OUTPUT'    SET OUTPUT                             00086000
&XRETCODE      SETC  '&RETCODE(1)'              SET XVARIABLE           00086100
               AIF   (N'&RETCODE GT 1).ZG11C                            00086200
&XRETCODE      SETC  '&RETCODE'  SET XVARIABLE                          00086300
.ZG11C         ANOP  ,                                                  00086400
.*-------------------------------------------------------------------   00086500
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00086600
               AIF   (K'&ZXRETCODE LE 0).ZG11R  NOT I/O                 00086700
               AIF   ('&XRETCODE'(1,1) NE '(').ZG11R                    00086800
&ZCGPR         SETC  '&XRETCODE'(2,K'&XRETCODE-2)                       00086900
               AIF   ('&ZCGPR'(1,1) NE '0').ZG11P                       00087000
               AIF   (K'&ZCGPR GT 2).ZG11Q                              00087100
               AIF   ('&ZCGPR' EQ '0').ZG11Q                            00087200
&ZCGPR         SETC  '&ZCGPR'(2,1)                                      00087300
               AIF   (T'&ZCGPR NE 'N').ZG11Q    INVALID REG NAME        00087400
.ZG11P         ANOP  ,                                                  00087500
               AIF   (T'&ZCGPR NE 'N').ZG11R    NON NUMERIC             00087600
               AIF   ('&ZCGPR' LT '2').ZG11Q                            00087700
               AIF   ('&ZCGPR' LE '12').ZG11R                           00087800
.ZG11Q         ANOP  ,                                                  00087900
&ZMS           SETC  '"RETCODE='                *KGPRA* MNOTE           00088000
&ZMS           SETC  '&ZMS.&RETCODE"'                                   00088100
&ZMS           SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'          00088200
               MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                   00088300
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00088400
.ZG11R         ANOP  ,                                                  00088500
.*----------------------------------------------------------------***   00088600
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00088700
               AIF   (N'&RSNCODE LE 1).ZG14A    CK NUM                  00088800
&ZMS           SETC  '"RSNCODE='                *KPOSA* MNOTE           00088900
&ZMS           SETC  '&ZMS.&RSNCODE"'                                   00089000
&ZMS           SETC  '&ZMS "RSNCODE"'                                   00089100
               MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                00089200
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00089300
.ZG14A         ANOP  ,                                                  00089400
.*-------------------------------------------------------------------   00089500
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00089600
               AIF   (K'&RSNCODE(1) LE 0).ZG14C  NO PARM                00089700
&ZXRSNCODE     SETC  'OUTPUT'    SET OUTPUT                             00089800
&XRSNCODE      SETC  '&RSNCODE(1)'              SET XVARIABLE           00089900
               AIF   (N'&RSNCODE GT 1).ZG14C                            00090000
&XRSNCODE      SETC  '&RSNCODE'  SET XVARIABLE                          00090100
.ZG14C         ANOP  ,                                                  00090200
.*-------------------------------------------------------------------   00090300
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00090400
               AIF   (K'&ZXRSNCODE LE 0).ZG14R  NOT I/O                 00090500
               AIF   ('&XRSNCODE'(1,1) NE '(').ZG14R                    00090600
&ZCGPR         SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                       00090700
               AIF   ('&ZCGPR'(1,1) NE '0').ZG14P                       00090800
               AIF   (K'&ZCGPR GT 2).ZG14Q                              00090900
               AIF   ('&ZCGPR' EQ '0').ZG14Q                            00091000
&ZCGPR         SETC  '&ZCGPR'(2,1)                                      00091100
               AIF   (T'&ZCGPR NE 'N').ZG14Q    INVALID REG NAME        00091200
.ZG14P         ANOP  ,                                                  00091300
               AIF   (T'&ZCGPR NE 'N').ZG14R    NON NUMERIC             00091400
               AIF   ('&ZCGPR' LT '2').ZG14Q                            00091500
               AIF   ('&ZCGPR' LE '12').ZG14R                           00091600
.ZG14Q         ANOP  ,                                                  00091700
&ZMS           SETC  '"RSNCODE='                *KGPRA* MNOTE           00091800
&ZMS           SETC  '&ZMS.&RSNCODE"'                                   00091900
&ZMS           SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'          00092000
               MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                   00092100
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00092200
.ZG14R         ANOP  ,                                                  00092300
.******************************************************************     00092400
.***AH.P00 CHECK STANDALONE POSITIONAL VARIABLES                        00092500
.******************************************************************     00092600
               ACTR  10000                                              00092700
.*----------------------------------------------------------------***   00092800
.***AH.P02 EXTRA POSITIONALS                                            00092900
               AIF   (N'&SYSLIST LE 0).ZGLISTX  NO EXTRAS               00093000
&ZCVAL         SETC  ''          ERROR FIELD                            00093100
&ZAWRK         SETA  0           POSITIONAL NUMBER                      00093200
.ZGLIST2       ANOP  ,                                                  00093300
&ZAWRK         SETA  &ZAWRK+1    NEXT POSITIONAL                        00093400
               AIF   (&ZAWRK GT N'&SYSLIST).ZGLIST3  DONE               00093500
&ZCVAL         SETC '&ZCVAL,&SYSLIST(&ZAWRK)'   EXTRA                   00093600
               AGO   .ZGLIST2                                           00093700
.*                                                                      00093800
.ZGLIST3       ANOP  ,                                                  00093900
&ZCVAL         SETC '&ZCVAL'(2,K'&ZCVAL-1)      STRIP COMMA             00094000
&ZMS           SETC  'POSITIONAL ARGUMENT(S),'  *PPOSA* MNOTE           00094100
&ZMS           SETC  '&ZMS "&ZCVAL"'                                    00094200
&ZMS           SETC  '&ZMS CANNOT BE USED.'                             00094300
&ZMS           SETC  '&ZMS NO POSITIONAL ARGUMENTS'                     00094400
               MNOTE 8,' &ZMS ARE ALLOWED.'                             00094500
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00094600
.ZGLISTX       ANOP  ,                                                  00094700
&ZASYSLNDX     SETA  0                                                  00094800
.*-------------------------------------------------------------------   00094900
.***AG.MF04 MF=(SLE)                                                    00095000
.ZGMFX         ANOP  ,           END OF FULL SYNTAX CHECK               00095100
.*******************************************************************    00095200
.***AE.ZMR01 NO CODE GENERATED IF ERRORS DETECTED                       00095300
.*******************************************************************    00095400
               AIF   (&ZMACRET NE 0).ZLX2       ERROR DETECTED          00095500
.*******************************************************************    00095600
.***AE.01  START OF IXCSYSCL MACRO CODE                                 00095700
.*******************************************************************    00095800
               LCLC  &M0M0001                 NAME                      00095900
&M0M0001       SETC  '&XLABEL'                SET NAME                  00096000
               AIF   (K'&XLABEL NE 0).XLAB2                             00096100
&M0M0001       SETC  'M00M&SYSNDX'            DEFAULT NAME              00096200
.*                                                                      00096300
.XLAB2         ANOP  ,                                                  00096400
&M0M0001 DS    0H                             IXCSYSCL-0                00096500
.*******************************************************************    00096600
.***AE.PR01 PRINT CONTROLS, DEFAULT IS YES                              00096700
.*******************************************************************    00096800
              PUSH  PRINT                                               00096900
               AIF   ('&ZPRINT' NE 'NO').ZPRINTX  TURN PRINT ON         00097000
               PRINT OFF         ++ PR01                                00097100
               AGO   .ZPRNTXX                                           00097200
.ZPRINTX       PRINT ON                                                 00097300
.ZPRNTXX       ANOP  ,                                                  00097400
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00097500
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00097600
.********************************************************************   00097700
.***AL.L01 INTERNAL ARRAY TO PRODUCE FORMATTED CODE                     00097800
.********************************************************************   00097900
                      LCLA  &ZOPN          LIST INSTRUCTION INDEX       00098000
                      LCLA  &ZOPN1         INVOCATION INDEX             00098100
                      LCLC  &ZOPL(4095)    LABEL                        00098200
                      LCLC  &ZOPO(4095)    OPERATION                    00098300
                      LCLC  &ZOPV(4095)    VALUE                        00098400
                      LCLC  &ZOPD(4095)    DESCRIPTION                  00098500
.*                                                                      00098600
&ZOPN                 SETA  0              INITIAL INST INDEX VALUE     00098700
.******************************************************************     00098800
.***AL.L10 IXCSYSCL FMT=LIST MF=S|L PARAMETERS                          00098900
.******************************************************************     00099000
                      AIF   ('&XMF' EQ 'L').ZLMFSL2                     00099100
                      AIF   ('&XMF' NE 'S').ZLMFSLX                     00099200
&XMFCTRL              SETC  '#Z'.'&SYSNDX'(1,4).'A'                     00099300
&XMFATTR              SETC  '0D'                                        00099400
.*                                                                      00099500
&ZOPN                 SETA  &ZOPN+1                                     00099600
&ZOPL(&ZOPN)          SETC  ' '                                         00099700
&ZOPO(&ZOPN)          SETC  'B'                                         00099800
&ZOPV(&ZOPN)          SETC  '&XMFCTRL.S'                                00099900
&ZOPD(&ZOPN)          SETC  '++ IXCSYSCL ARG PARMS'                     00100000
.*                                                                      00100100
&ZOPN                 SETA  &ZOPN+1                                     00100200
&ZOPL(&ZOPN)          SETC  ' '                                         00100300
&ZOPO(&ZOPN)          SETC  'SPACE'                                     00100400
&ZOPV(&ZOPN)          SETC  '1'                                         00100500
&ZOPD(&ZOPN)          SETC  ' '                                         00100600
.*                                                                      00100700
.ZLMFSL2              ANOP  ,                                           00100800
.*-------------------------------------------------------------------   00100900
.***AM.L01  IXCSYSCL FMT=LIST PARAMETERS                                00101000
&ZOPN                 SETA &ZOPN+1                                      00101100
&ZOPL(&ZOPN)          SETC '&XMFCTRL'                                   00101200
&ZOPO(&ZOPN)          SETC 'DS'                                         00101300
&ZOPV(&ZOPN)          SETC '&XMFATTR'                                   00101400
&ZOPD(&ZOPN)          SETC '++ IXCSYSCL PARM LIST'                      00101500
.*-------------------------------------------------------------------   00101600
.***AM.L02 XVERSION XL1                                                 00101700
&ZOPN                 SETA &ZOPN+1                                      00101800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XVERSION'                         00101900
&ZOPO(&ZOPN)          SETC 'DS'                                         00102000
&ZOPV(&ZOPN)          SETC 'XL1'                                        00102100
&ZOPD(&ZOPN)          SETC '++ INPUT XVERSION'                          00102200
.*-------------------------------------------------------------------   00102300
.***AM.L09  XSERVICE XL1                                                00102400
&ZOPN                 SETA &ZOPN+1                                      00102500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSERVICE'                         00102600
&ZOPO(&ZOPN)          SETC 'DS'                                         00102700
&ZOPV(&ZOPN)          SETC 'XL1'                                        00102800
&ZOPD(&ZOPN)          SETC '++ CONSTANT  XSERVICE'                      00102900
.*-------------------------------------------------------------------   00103000
.***AM.L09  XRSV0002 CL2                                                00103100
&ZOPN                 SETA &ZOPN+1                                      00103200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0002'                         00103300
&ZOPO(&ZOPN)          SETC 'DS'                                         00103400
&ZOPV(&ZOPN)          SETC 'CL2'                                        00103500
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV0002'                      00103600
.*-------------------------------------------------------------------   00103700
.***AM.L09  XMEMTOKEN BL.64                                             00103800
&ZOPN                 SETA &ZOPN+1                                      00103900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMEMTOKEN'                        00104000
&ZOPO(&ZOPN)          SETC 'DS'                                         00104100
&ZOPV(&ZOPN)          SETC 'BL.64'                                      00104200
&ZOPD(&ZOPN)          SETC '++ &ZXMEMTOKEN  XMEMTOKEN'                  00104300
.*-------------------------------------------------------------------   00104400
.***AM.L09  XFAILEDSYS F                                                00104500
&ZOPN                 SETA &ZOPN+1                                      00104600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XFAILEDSYS'                       00104700
&ZOPO(&ZOPN)          SETC 'DS'                                         00104800
&ZOPV(&ZOPN)          SETC 'F'                                          00104900
&ZOPD(&ZOPN)          SETC '++ &ZXFAILEDSYS  XFAILEDSYS'                00105000
.*-------------------------------------------------------------------   00105100
.***AM.L10 END OF IXCSYSCL LIST PARAMETERS                              00105200
&ZOPN                 SETA &ZOPN+1                                      00105300
&ZOPL(&ZOPN)          SETC '&XMFCTRL.L'                                 00105400
&ZOPO(&ZOPN)          SETC 'EQU'                                        00105500
&ZOPV(&ZOPN)          SETC '*-&XMFCTRL'                                 00105600
&ZOPD(&ZOPN)          SETC '++ LENGTH OF PLIST'                         00105700
.*                                                                      00105800
&ZOPN                 SETA &ZOPN+1                                      00105900
&ZOPL(&ZOPN)          SETC ' '                                          00106000
&ZOPO(&ZOPN)          SETC 'SPACE'                                      00106100
&ZOPV(&ZOPN)          SETC '1'                                          00106200
&ZOPD(&ZOPN)          SETC ' '                                          00106300
.*-------------------------------------------------------------------   00106400
.***AL.L12 IXCSYSCL FMT=LIST MF=S|L PARAMETERS                          00106500
                      AIF   ('&XMF' EQ 'L').ZMFLX  DONE IF MF=L         00106600
.*                                                                      00106700
&ZOPN                 SETA  &ZOPN+1                                     00106800
&ZOPL(&ZOPN)          SETC  '&XMFCTRL.S'                                00106900
&ZOPO(&ZOPN)          SETC  'DC'                                        00107000
&ZOPV(&ZOPN)          SETC  '0H''0'''                                   00107100
&ZOPD(&ZOPN)          SETC  '++ IXCSYSCL ARG PARMS'                     00107200
.*                                                                      00107300
.ZLMFSLX              ANOP  ,                                           00107400
.*-------------------------------------------------------------------   00107500
.***AL.L13 SET ZPLLEN TO ITS APPROPRIATE VALUE                          00107600
&ZPLLEN               SETA 16                                           00107700
.*                                                                      00107800
.******************************************************************     00107900
.***AI.L01 IXCSYSCL FMT=LIST FILL IN PARAMETER AREA                     00108000
.******************************************************************     00108100
                      ACTR  10000                                       00108200
&ZCVAL                SETC  'LA'           ASSUME XA MODE               00108300
                      AIF   ('&SYSASCE' EQ 'P').ZIMFXA  SYSSTATE PRI    00108400
&ZCVAL                SETC  'LAE'          XAX MODE                     00108500
.ZIMFXA               ANOP ,                                            00108600
.*                                                                      00108700
                      AIF   ('&XMFCTRL'(1,1) NE '(').ZIMFN2  NOT GPR    00108800
&ZCGPR                SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)  GET GPR         00108900
                      AIF   ('&ZCGPR' EQ 'GPR1').ZIMFNX                 00109000
                      AIF   ('&ZCGPR' EQ 'GPR01').ZIMFNX                00109100
                      AIF   ('&ZCGPR' EQ 'REG1').ZIMFNX                 00109200
                      AIF   ('&ZCGPR' EQ 'REG01').ZIMFNX                00109300
                      AIF   ('&ZCGPR' EQ 'R1').ZIMFNX                   00109400
                      AIF   ('&ZCGPR' EQ '1').ZIMFNX                    00109500
                      AIF   ('&ZCGPR' EQ '01').ZIMFNX                   00109600
&ZOPN                 SETA  &ZOPN+1                                     00109700
&ZOPL(&ZOPN)          SETC  ' '                                         00109800
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00109900
&ZOPV(&ZOPN)          SETC  '1,0(,&ZCGPR)'                              00110000
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00110100
                      AGO   .ZIMFNX                                     00110200
.*                                                                      00110300
.ZIMFN2               ANOP ,                                            00110400
&ZOPN                 SETA  &ZOPN+1                                     00110500
&ZOPL(&ZOPN)          SETC  ' '                                         00110600
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00110700
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL'                                00110800
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00110900
.ZIMFNX               ANOP ,                                            00111000
.********************************************************************   00111100
.***AI.L02 IXCSYSCL FMT=LIST INITIALIZE PARAMETER AREA                  00111200
.********************************************************************   00111300
.***AI.L03 MF=(SLE)                                                     00111400
                      AIF   ('&XMF' EQ 'L').ZIMFLX                      00111500
.*                                                                      00111600
&ZOPN                 SETA  &ZOPN+1                                     00111700
&ZOPL(&ZOPN)          SETC  ' '                                         00111800
&ZOPO(&ZOPN)          SETC  'XC'                                        00111900
&ZOPV(&ZOPN)          SETC  '0(&ZPLLEN,1),0(1)'                         00112000
&ZOPD(&ZOPN)          SETC  '++ INITIALIZE'                             00112100
.ZIMFLX               ANOP  ,                                           00112200
.*-------------------------------------------------------------------   00112300
.***AI.L53 XSERVICE XL1                                                 00112400
&ZOPN                 SETA  &ZOPN+1                                     00112500
&ZOPL(&ZOPN)          SETC  ' '                                         00112600
&ZOPO(&ZOPN)          SETC  'MVI'                                       00112700
&ZOPV(&ZOPN)          SETC  '1(1),23'                                   00112800
&ZOPD(&ZOPN)          SETC  '++ XL1 CONSTANT'                           00112900
.*-------------------------------------------------------------------   00113000
.***AI.L25  XMEMTOKEN XL8                                               00113100
                      AIF   ('&ZXMEMTOKEN' EQ '').ZI4E  NOT USED        00113200
                      AIF   ('&ZXMEMTOKEN' EQ 'OUTPUT').ZI4E            00113300
&ZCGPR                SETC  '&XMEMTOKEN'                                00113400
.*                                                                      00113500
                      AIF   ('&XMEMTOKEN'(1,1) NE '(').ZI4B             00113600
&ZCGPR   SETC  '0('.'&XMEMTOKEN'(2,K'&XMEMTOKEN-2).')'                  00113700
                      AGO   .ZI4D                                       00113800
.ZI4B                 ANOP  ,                                           00113900
.*                                                                      00114000
&ZC                   SETC  '&XMEMTOKEN'(1,1)                           00114100
                      AIF   (T'&ZC NE 'N').ZI4D                         00114200
&ZC                   SETC  '&XMEMTOKEN'                                00114300
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI4D                00114400
&ZCGPR                SETC  '=BL8''&XMEMTOKEN'''                        00114500
.*                                                                      00114600
.ZI4D                 ANOP  ,                                           00114700
.*                                                                      00114800
&ZOPN                 SETA  &ZOPN+1                                     00114900
&ZOPL(&ZOPN)          SETC  ' '                                         00115000
&ZOPO(&ZOPN)          SETC  'MVC'                                       00115100
&ZOPV(&ZOPN)          SETC  '4(8,1),&ZCGPR'                             00115200
&ZOPD(&ZOPN)          SETC  '++ &ZXMEMTOKEN XMEMTOKEN XL8'              00115300
.*                                                                      00115400
.ZI4E                 ANOP  ,                                           00115500
.*-------------------------------------------------------------------   00115600
.***AI.L25  XFAILEDSYS F                                                00115700
                      AIF   ('&ZXFAILEDSYS' EQ '').ZI5E  NOT USED       00115800
                      AIF   ('&ZXFAILEDSYS' EQ 'OUTPUT').ZI5E           00115900
&ZCGPR                SETC  '&XFAILEDSYS'                               00116000
.*                                                                      00116100
                      AIF   ('&XFAILEDSYS'(1,1) NE '(').ZI5B            00116200
&ZCGPR   SETC  '0('.'&XFAILEDSYS'(2,K'&XFAILEDSYS-2).')'                00116300
                      AGO   .ZI5D                                       00116400
.ZI5B                 ANOP  ,                                           00116500
.*                                                                      00116600
&ZC                   SETC  '&XFAILEDSYS'(1,1)                          00116700
                      AIF   (T'&ZC NE 'N').ZI5D                         00116800
&ZC                   SETC  '&XFAILEDSYS'                               00116900
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI5D                00117000
&ZCGPR                SETC  '=FL4''&XFAILEDSYS'''                       00117100
.*                                                                      00117200
.ZI5D                 ANOP  ,                                           00117300
.*                                                                      00117400
&ZOPN                 SETA  &ZOPN+1                                     00117500
&ZOPL(&ZOPN)          SETC  ' '                                         00117600
&ZOPO(&ZOPN)          SETC  'MVC'                                       00117700
&ZOPV(&ZOPN)          SETC  '12(4,1),&ZCGPR'                            00117800
&ZOPD(&ZOPN)          SETC  '++ &ZXFAILEDSYS XFAILEDSYS F'              00117900
.*                                                                      00118000
.ZI5E                 ANOP  ,                                           00118100
.*-------------------------------------------------------------------   00118200
&ZOPN1                SETA &ZOPN                                        00118300
.*******************************************************************    00118400
.***  PROCESS IXCSYSCL OUTPUT PARAMETERS                                00118500
.*******************************************************************    00118600
                      ACTR  10000                                       00118700
.*******************************************************************    00118800
.***AO.X02  RETURN CODE PROCESSING                                      00118900
.*******************************************************************    00119000
                      AIF   (N'&RETCODE LE 0).ZMRETX                    00119100
                      AIF   ('&XRETCODE'(1,1) EQ '(').ZMRET2            00119200
                      AIF   ('&XRETCODE' EQ 'GPR15').ZMRETX             00119300
                      AIF   ('&XRETCODE' EQ 'REG15').ZMRETX             00119400
                      AIF   ('&XRETCODE' EQ 'R15').ZMRETX               00119500
                      AIF   ('&XRETCODE' EQ '15').ZMRETX                00119600
&ZOPN                 SETA  &ZOPN+1                                     00119700
&ZOPL(&ZOPN)          SETC  ' '                                         00119800
&ZOPO(&ZOPN)          SETC  'ST'                                        00119900
&ZOPV(&ZOPN)          SETC  '15,&XRETCODE'                              00120000
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00120100
                      AGO   .ZMRETX                                     00120200
.*                                                                      00120300
.ZMRET2               ANOP  ,                                           00120400
&ZCGPR                SETC  '&XRETCODE'(2,K'&XRETCODE-2)                00120500
                      AIF   ('&ZCGPR' EQ 'GPR15').ZMRETX                00120600
                      AIF   ('&ZCGPR' EQ 'REG15').ZMRETX                00120700
                      AIF   ('&ZCGPR' EQ 'R15').ZMRETX                  00120800
                      AIF   ('&ZCGPR' EQ '15').ZMRETX                   00120900
&ZOPN                 SETA  &ZOPN+1                                     00121000
&ZOPL(&ZOPN)          SETC  ' '                                         00121100
&ZOPO(&ZOPN)          SETC  'LR'                                        00121200
&ZOPV(&ZOPN)          SETC  '&ZCGPR,15'                                 00121300
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00121400
.ZMRETX               ANOP  ,                                           00121500
.*******************************************************************    00121600
.***AO.X03  REASON CODE PROCESSING                                      00121700
.*******************************************************************    00121800
                      AIF   (N'&RSNCODE LE 0).ZMRSNX                    00121900
                      AIF   ('&XRSNCODE'(1,1) EQ '(').ZMRSN2            00122000
                      AIF   ('&XRSNCODE' EQ 'GPR0').ZMRSNX              00122100
                      AIF   ('&XRSNCODE' EQ 'GPR00').ZMRSNX             00122200
                      AIF   ('&XRSNCODE' EQ 'REG0').ZMRSNX              00122300
                      AIF   ('&XRSNCODE' EQ 'REG00').ZMRSNX             00122400
                      AIF   ('&XRSNCODE' EQ 'R0').ZMRSNX                00122500
                      AIF   ('&XRSNCODE' EQ '0').ZMRSNX                 00122600
                      AIF   ('&XRSNCODE' EQ '00').ZMRSNX                00122700
&ZOPN                 SETA  &ZOPN+1                                     00122800
&ZOPL(&ZOPN)          SETC  ' '                                         00122900
&ZOPO(&ZOPN)          SETC  'ST'                                        00123000
&ZOPV(&ZOPN)          SETC  '0,&XRSNCODE'                               00123100
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00123200
                      AGO   .ZMRSNX                                     00123300
.*                                                                      00123400
.ZMRSN2               ANOP  ,                                           00123500
&ZCGPR                SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                00123600
                      AIF   ('&ZCGPR' EQ 'GPR0').ZMRSNX                 00123700
                      AIF   ('&ZCGPR' EQ 'GPR00').ZMRSNX                00123800
                      AIF   ('&ZCGPR' EQ 'REG0').ZMRSNX                 00123900
                      AIF   ('&ZCGPR' EQ 'REG00').ZMRSNX                00124000
                      AIF   ('&ZCGPR' EQ 'R0').ZMRSNX                   00124100
                      AIF   ('&ZCGPR' EQ '0').ZMRSNX                    00124200
                      AIF   ('&ZCGPR' EQ '00').ZMRSNX                   00124300
&ZOPN                 SETA  &ZOPN+1                                     00124400
&ZOPL(&ZOPN)          SETC  ' '                                         00124500
&ZOPO(&ZOPN)          SETC  'LR'                                        00124600
&ZOPV(&ZOPN)          SETC  '&ZCGPR,0'                                  00124700
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00124800
.ZMRSNX               ANOP  ,                                           00124900
.*******************************************************************    00125000
.***AO.X04  LABEL FOR MF=L PROCESSING                                   00125100
.*******************************************************************    00125200
.ZMFLX                ANOP  ,              MF=L PROCESSING              00125300
.*******************************************************************    00125400
.***AO.X05  FORMAT GENERATED INSTRUCTIONS                               00125500
.*******************************************************************    00125600
                      ACTR  10000                                       00125700
.*                                                                      00125800
                      LCLA  &ZLC           COLUMN POSITION              00125900
                      LCLA  &ZOPX          LIST TABLE INDEX             00126000
                      LCLC  &ZLL           LABEL                        00126100
                      LCLC  &ZLOP          OPERATION                    00126200
                      LCLC  &ZLV           VALUE                        00126300
                      LCLC  &ZLD           DESCRIPTION                  00126400
.*                                                                      00126500
&ZOPX                 SETA  1                                           00126600
.ZL2                  AIF   (&ZOPX GT &ZOPN1).ZLX  B IF DONE            00126700
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00126800
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00126900
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00127000
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00127100
                      AIF   (K'&ZLD LE 0).ZL5                           00127200
&ZLC                  SETA  35             COMMENT COLUMN               00127300
                      AIF   ('&ZLD'(1,1) NE '*').ZL3                    00127400
&ZLC                  SETA  33             COMMMENT COLUMN              00127500
.ZL3                  AIF   (K'&ZLV GE &ZLC-16-1).ZL4                   00127600
&ZLV                  SETC  '&ZLV'.' '                                  00127700
                      AGO   .ZL3                                        00127800
.*                                                                      00127900
.ZL4                  ANOP  ,                                           00128000
&ZLV                  SETC  '&ZLV'.' '                                  00128100
.ZL5                  ANOP  ,                                           00128200
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00128300
.*                                                                      00128400
&ZLL     &ZLOP &ZLV                                                     00128500
.*                                                                      00128600
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00128700
                      AGO   .ZL2           CONTINUE LOOPING             00128800
.*                                                                      00128900
.ZLX                  ANOP  ,                                           00129000
                      AIF   ('&XMF' EQ 'L').ZLINKX  MF=L                00129100
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00129200
         L     14,16(0,0)              GET CVT ADDRESS                  00129300
         L     14,772(14,0)            GET SFT ADDRESS                  00129400
         L     14,220(14,0)            GET LX FOR SERVICE ROUTINE       00129500
         LA    15,7                    GET EX FOR SERVICE ROUTINE       00129600
         OR    14,15                   GET PC NUMBER                    00129700
         PC    0(14)                                                    00129800
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00129900
.ZLINKX               ANOP  ,                                           00130000
.*******************************************************************    00130100
.***AP.X01  FORMAT GENERATED CODE                                       00130200
.ZL21                 AIF   (&ZOPX GT &ZOPN).ZLX1  B IF DONE            00130300
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00130400
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00130500
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00130600
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00130700
                      AIF   (K'&ZLD LE 0).ZL51                          00130800
&ZLC                  SETA  35             COMMENT COLUMN               00130900
                      AIF   ('&ZLD'(1,1) NE '*').ZL31                   00131000
&ZLC                  SETA  33             COMMENT COLUMN               00131100
.ZL31                 AIF   (K'&ZLV GE &ZLC-16-1).ZL41                  00131200
&ZLV                  SETC  '&ZLV'.' '                                  00131300
                      AGO   .ZL31                                       00131400
.*                                                                      00131500
.ZL41                 ANOP  ,                                           00131600
&ZLV                  SETC  '&ZLV'.' '                                  00131700
.ZL51                 ANOP  ,                                           00131800
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00131900
.*                                                                      00132000
&ZLL     &ZLOP &ZLV                                                     00132100
.*                                                                      00132200
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00132300
                      AGO   .ZL21          CONTINUE LOOPING             00132400
.*                                                                      00132500
.ZLX1                 ANOP  ,                                           00132600
.*******************************************************************    00132700
.***AP.X02  END OF IXCSYSCL MACRO                                       00132800
&ZIXCSYSCL            SETC  'YES'          SET IXCSYSCL USED            00132900
         POP   PRINT                                                    00133000
*                                            IXCSYSCL-0                 00133100
         SPACE 1                                                        00133200
.ZLX2                 ANOP  ,                                           00133300
         MEND                                                           00133400
**********************************************************************/ 00133500
*/*PB.OC01 INVOKE MACRO---------------------------------------------*/  00133600
*%IXCSYSCL: MACRO KEYS(PLISTVER,MEMTOKEN,FAILEDSYS,RETCODE,RSNCODE,MF); 00133700
*  ANS('?'||MACLABEL||' '||'IXCSYSCP '||MACLIST||                       00133800
*         ' '||MACKEYS||';') COL(MACLMAR);                              00133900
*%END IXCSYSCL;                                                         00134000
