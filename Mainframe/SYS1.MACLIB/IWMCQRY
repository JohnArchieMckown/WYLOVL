*/**** START OF SPECIFICATIONS **************************************** 00000100
*                                                                     * 00000200
*                                                                     * 00000300
*01* MACRO NAME:  IWMCQRY                               -02/26/97-<0> * 00000400
*                                                                     * 00000500
*                                                                     * 00000600
*01* DESCRIPTIVE NAME:  WLM Query Active Classification Rules         * 00000700
*                                                                     * 00000800
*01* PROPRIETARY STATEMENT:                                           * 00000900
*                                                                     * 00001000
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 00001100
*     THIS MACRO IS "RESTRICTED MATERIALS OF IBM"                     * 00001200
*     5645-001 (C) COPYRIGHT IBM CORP. 1994, 1997                     * 00001300
*                                                                     * 00001400
* STATUS= JBB6604                                                     * 00001500
*                                                                     * 00001600
*                                                                     * 00001700
*                                                                     * 00001800
*01* FUNCTION:                                                        * 00001900
*                                                                     * 00002000
*                                                                     * 00002100
*      The Query Active Classification Rules routine is given control * 00002200
*      from the IWMCQRY macro.  The Query Active Classification Rules * 00002300
*      macro will complete the parameter list with caller provided    * 00002400
*      data and generate a stacking, space switching, program call to * 00002500
*      the query service.                                             * 00002600
*                                                                     * 00002700
*      The purpose of this routine is to return a representation of   * 00002800
*      the classification rules that are associated with the active   * 00002900
*      policy that is in effect for the sysplex.  The data returned   * 00003000
*      by this service describes the installation-defined rules that  * 00003100
*      determine how incoming work is assigned a service class and/or * 00003200
*      report class by MVS.                                           * 00003300
*                                                                     * 00003400
*      The classification rule data returned by this service is       * 00003500
*      mapped by macro IWMSVDCR.  This macro is also used to map the  * 00003600
*      classification rules associated with the WLM service           * 00003700
*      definition.  As a result, some data sections in this mapping   * 00003800
*      will not be available (filled in) when it is obtained via this * 00003900
*      service.  An example of some of the information that will not  * 00004000
*      be available, are the timestamps indicating when a             * 00004100
*      classification GROUP was last updated and by whom.  For a      * 00004200
*      complete list of fields that will not be available refer to    * 00004300
*      the field comments in macro IWMSVDCR.                          * 00004400
*                                                                     * 00004500
*      The classification rules can be used in conjunction with the   * 00004600
*      active service policy to determine what performance goals will * 00004700
*      be associated with incoming work.  The performance goals for a * 00004800
*      service class are contained within service policy mapping      * 00004900
*      returned by the IWMPQRY service.                               * 00005000
*                                                                     * 00005100
*      The information returned is not serialized upon return to the  * 00005200
*      caller, and so may be out-of-date if a modified service        * 00005300
*      definition was installed and a new policy activated.           * 00005400
*                                                                     * 00005500
*      The caller can optionally request that the identifier of the   * 00005600
*      active policy that these classification rules are part of, be  * 00005700
*      returned in an area specified by the POLICY_ID keyword.  The   * 00005800
*      caller can then compare the policy identification information  * 00005900
*      returned with the policy data returned by the IWMPQRY macro to * 00006000
*      ensure they are in synch.                                      * 00006100
*                                                                     * 00006200
*      The Query Active Classification Rules macro is provided in     * 00006300
*      list, execute, and standard form.  The list form accepts no    * 00006400
*      variable parameters and is used only to reserve space for the  * 00006500
*      query parameter list.  The standard form is provided for use   * 00006600
*      with routines which do not require reentrant code.  The        * 00006700
*      execute form is provided for use with the list format for      * 00006800
*      reentrant routines.  The query macro is provided in PL/AS and  * 00006900
*      assembler formats.                                             * 00007000
*                                                                     * 00007100
*      The parameter list must be in the caller's primary address     * 00007200
*      space or be addressable by the dispatchable unit access list.  * 00007300
*                                                                     * 00007400
*01* EXTERNAL CLASSIFICATION:  GUPI                                   * 00007500
*                                                                     * 00007600
*01* END OF EXTERNAL CLASSIFICATION:                                  * 00007700
*                                                                     * 00007800
*01* ENVIRONMENT:                                                     * 00007900
*                                                                     * 00008000
*                                                                     * 00008100
*      Dispatchable unit mode: Task mode.                             * 00008200
*                                                                     * 00008300
*      Minimum authorization: Supervisor state or program key mask    * 00008400
*                        (PKM) allowing keys 0-7.                     * 00008500
*                                                                     * 00008600
*      AMODE:            31-bit.                                      * 00008700
*                                                                     * 00008800
*      Cross Memory Mode: Any PASN, any HASN, any SASN.               * 00008900
*                                                                     * 00009000
*      ASC mode:         Primary or Access Register.  If in Access    * 00009100
*                        Register ASC mode, specify SYSSTATE          * 00009200
*                        ASCENV=AR before invoking this macro.        * 00009300
*                                                                     * 00009400
*      Interrupt status: Enabled for I/O and external interrupts.     * 00009500
*                                                                     * 00009600
*      Locks:            No locks held.                               * 00009700
*                                                                     * 00009800
*      Control parameters:     All parameter areas must reside in     * 00009900
*                        current primary or be addressable by the     * 00010000
*                        dispatchable unit access list.               * 00010100
*                                                                     * 00010200
*                                                                     * 00010300
*                                                                     * 00010400
*01* PROGRAMMING REQUIREMENTS:                                        * 00010500
*                                                                     * 00010600
*                                                                     * 00010700
*    1.  The macro CVT must be included to use this macro.            * 00010800
*                                                                     * 00010900
*    2.  This functions provided by this macro are only supported on  * 00011000
*        MVS/ESA SP5.2.0 or higher.  If code with this macro          * 00011100
*        expansion is executed on lower MVS/ESA releases (version 3   * 00011200
*        or higher) a return code of 4 and reason code of xxxx041A    * 00011300
*        (constant IwmRsnCodeNoPolMgt) will be returned indicating    * 00011400
*        that the service is not available.  This macro should NOT be * 00011500
*        executed on MVS versions 1 or 2.                             * 00011600
*                                                                     * 00011700
*    3.  The macro IWMYCON must be included to use this macro.        * 00011800
*                                                                     * 00011900
*    4.  The macro IWMPB must be in the library concatenation, since  * 00012000
*        it is included by IWMYCON.                                   * 00012100
*                                                                     * 00012200
*    5.  Note that the high order halfword of register 0, and the     * 00012300
*        reason code variable when specified, may be non-zero and     * 00012400
*        represents diagnostic data which is NOT part of the external * 00012500
*        interface.  The high order halfword should thus be excluded  * 00012600
*        from comparison with the reason code values described above. * 00012700
*        The constant, IWMRSNCODE_MASK_CONST defined in IWMYCON, may  * 00012800
*        be used for this purpose.                                    * 00012900
*                                                                     * 00013000
*                                                                     * 00013100
*                                                                     * 00013200
*01* RESTRICTIONS:                                                    * 00013300
*                                                                     * 00013400
*                                                                     * 00013500
*    1.  This macro may not be used prior to the completion of WLM    * 00013600
*        address space initialization                                 * 00013700
*                                                                     * 00013800
*    2.  The caller cannot have an EUT FRR established.               * 00013900
*                                                                     * 00014000
*                                                                     * 00014100
*                                                                     * 00014200
*01* INPUT REGISTER INFORMATION:                                      * 00014300
*                                                                     * 00014400
*    Before issuing the IWMCQRY macro, the caller does not have to    * 00014500
*    place any information into any register unless using it in       * 00014600
*    register notation for a particular parameter, or using it as a   * 00014700
*    base register.                                                   * 00014800
*                                                                     * 00014900
*01* OUTPUT REGISTER INFORMATION:                                     * 00015000
*                                                                     * 00015100
*    When control returns to the caller, the GPRs contain:            * 00015200
*                                                                     * 00015300
*                                                                     * 00015400
*    REGISTER  CONTENTS                                               * 00015500
*                                                                     * 00015600
*    0         Reason code if GR15 return code is non-zero            * 00015700
*                                                                     * 00015800
*    1         Used as work registers by the system                   * 00015900
*                                                                     * 00016000
*    2-13      Unchanged                                              * 00016100
*                                                                     * 00016200
*    14        Used as a work register by the system                  * 00016300
*                                                                     * 00016400
*    15        Return code                                            * 00016500
*                                                                     * 00016600
*                                                                     * 00016700
*                                                                     * 00016800
*    When control returns to the caller, the ARs contain:             * 00016900
*                                                                     * 00017000
*                                                                     * 00017100
*    REGISTER  CONTENTS                                               * 00017200
*                                                                     * 00017300
*    0-1       Used as work registers by the system                   * 00017400
*                                                                     * 00017500
*    2-13      Unchanged                                              * 00017600
*                                                                     * 00017700
*    14-15     Used as work registers by the system                   * 00017800
*                                                                     * 00017900
*                                                                     * 00018000
*                                                                     * 00018100
*    Some callers depend on register contents remaining the same      * 00018200
*    before and after issuing a service.  If the system changes the   * 00018300
*    contents of registers on which the caller depends, the caller    * 00018400
*    must save them before issuing the service, and restore them      * 00018500
*    after the system returns control.                                * 00018600
*                                                                     * 00018700
*01* PERFORMANCE IMPLICATIONS:                                        * 00018800
*                                                                     * 00018900
*    None                                                             * 00019000
*                                                                     * 00019100
*01* SYNTAX:                                                          * 00019200
*                                                                     * 00019300
*[xlabel]  IWMCQRY     ANSAREA=xansarea                               * 00019400
*                     ,ANSLEN=xanslen                                 * 00019500
*                     ,QUERYLEN=xquerylen                             * 00019600
*                    [,POLICY_ID=xpolicy_id]                          * 00019700
*                    [,RETCODE=xretcode]                              * 00019800
*                    [,RSNCODE=xrsncode]                              * 00019900
*                    [,PLISTVER=xplistver|IMPLIED_VERSION]          * 00020000
*                   [,MF=S]                                          * 00020100
*                   [,MF=(L,xmfctrl,xmfattr|0D)]                   * 00020200
*                   [,MF=(E,xmfctrl,COMPLETE)]                     * 00020300
*                                                                     * 00020400
*                                                                     * 00020500
*      Where:                                                         * 00020600
*                                                                     * 00020700
*                                                                     * 00020800
*      [xlabel]                                                       * 00020900
*          is an optional symbol, starting in column 1, that is the   * 00021000
*          name on the IWMCQRY macro invocation.  The name must       * 00021100
*          conform to the rules for an ordinary assembler language    * 00021200
*          symbol.                                                    * 00021300
*          DEFAULT: No name.                                          * 00021400
*                                                                     * 00021500
*                                                                     * 00021600
*                                                                     * 00021700
*                                                                     * 00021800
*      ANSAREA=xansarea                                               * 00021900
*          is the name (RS-type), or address in register (2)-(12), of * 00022000
*          a required character output variable specifying an area to * 00022100
*          contain the data being returned by IWMCQRY.  The answer    * 00022200
*          area is defined by the IWMSVDCR macro.                     * 00022300
*                                                                     * 00022400
*                                                                     * 00022500
*                                                                     * 00022600
*                                                                     * 00022700
*      ANSLEN=xanslen                                                 * 00022800
*          is the name (RS-type), or address in register (2)-(12), of * 00022900
*          a required fullword input variable which contains the      * 00023000
*          length of the area provided to contain the data being      * 00023100
*          returned by IWMCQRY.                                       * 00023200
*                                                                     * 00023300
*                                                                     * 00023400
*                                                                     * 00023500
*                                                                     * 00023600
*      QUERYLEN=xquerylen                                             * 00023700
*          is the name (RS-type), or address in register (2)-(12), of * 00023800
*          a required fullword output variable which contains the     * 00023900
*          number of bytes needed to contain the classification rule  * 00024000
*          information.                                               * 00024100
*                                                                     * 00024200
*                                                                     * 00024300
*                                                                     * 00024400
*                                                                     * 00024500
*      [POLICY_ID=xpolicy_id]                                         * 00024600
*          is the name (RS-type), or address in register (2)-(12), of * 00024700
*          an optional character output variable specifying an area   * 00024800
*          to contain the identifier of the active policy that these  * 00024900
*          classification rules are a part of.  This answer is mapped * 00025000
*          by the SVIDSSVP DSECT in the IWMSVIDS macro.               * 00025100
*                                                                     * 00025200
*                                                                     * 00025300
*                                                                     * 00025400
*                                                                     * 00025500
*      [RETCODE=xretcode]                                             * 00025600
*          is the name (RS-type) of an optional fullword output       * 00025700
*          variable, or register (2)-(12), into which the return code * 00025800
*          is to be copied from GPR 15.                               * 00025900
*                                                                     * 00026000
*                                                                     * 00026100
*                                                                     * 00026200
*                                                                     * 00026300
*      [RSNCODE=xrsncode]                                             * 00026400
*          is the name (RS-type) of an optional fullword output       * 00026500
*          variable, or register (2)-(12), into which the reason code * 00026600
*          is to be copied from GPR 0.                                * 00026700
*                                                                     * 00026800
*                                                                     * 00026900
*                                                                     * 00027000
*                                                                     * 00027100
*      [PLISTVER=xplistver|IMPLIED_VERSION]                         * 00027200
*          is an optional byte input decimal value in the "0-0" range * 00027300
*          that specifies the macro version.  PLISTVER is the only    * 00027400
*          key allowed on the list form of MF and determines which    * 00027500
*          parameter list is generated.  Note that MAX may be         * 00027600
*          specified instead of a number, and the parameter list will * 00027700
*          be of the largest size currently supported. This size may  * 00027800
*          grow from release to release (thus possibly affecting the  * 00027900
*          amount of storage needed by your program).  If your        * 00028000
*          program can tolerate this, IBM recommends that you always  * 00028100
*          specify MAX when creating the list form parameter list as  * 00028200
*          that will ensure that the list form parameter list is      * 00028300
*          always long enough to hold whatever parameters might be    * 00028400
*          specified on the execute form.                             * 00028500
*          DEFAULT: IMPLIED_VERSION.  When PLISTVER is omitted, the   * 00028600
*          default is the lowest version which allows all of the      * 00028700
*          parameters specified on the invocation to be processed.    * 00028800
*                                                                     * 00028900
*                                                                     * 00029000
*                                                                     * 00029100
*                                                                     * 00029200
*      [MF=S|L|E]                                                   * 00029300
*          is an optional keyword input which specifies the macro     * 00029400
*          form.                                                      * 00029500
*          DEFAULT: S                                                 * 00029600
*                                                                     * 00029700
*                                                                     * 00029800
*          [MF=S]                                                     * 00029900
*              specifies the standard form of the macro.  The "S"     * 00030000
*              form generates code to put the parameters into an      * 00030100
*              in-line parameter list and invoke the desired service. * 00030200
*              Full checking for required macro keys is done along    * 00030300
*              with supplying defaults for omitted optional           * 00030400
*              parameters.                                            * 00030500
*                                                                     * 00030600
*          [MF=(L,xmfctrl,xmfattr|0D)]                              * 00030700
*              specifies the list form of the macro.  The "L" form    * 00030800
*              defines an area to be used for the parameter list.     * 00030900
*              Only the PLISTVER key may be specified on the          * 00031000
*              invocation.  All other macro parameters are flagged as * 00031100
*              errors.  If PLISTVER is not specified, the original    * 00031200
*              parameter list definition is used.                     * 00031300
*                                                                     * 00031400
*            ,xmfctrl                                                 * 00031500
*              is a required input.  It is the name of a storage area * 00031600
*              for the parameter list.                                * 00031700
*                                                                     * 00031800
*            ,xmfattr|0D                                            * 00031900
*              is an optional 60 character input string that varies   * 00032000
*              from 1 to 60 characters. Use it to force boundary      * 00032100
*              alignment of the parameter list. Use any value that    * 00032200
*              represents a boundary and is valid on an assembler DS  * 00032300
*              pseudo op.                                             * 00032400
*              DEFAULT: 0D which forces the parameter list to a       * 00032500
*              doubleword boundary.                                   * 00032600
*                                                                     * 00032700
*          [MF=(E,xmfctrl,COMPLETE)]                                * 00032800
*              specifies the execute form of the macro.  The "E" form * 00032900
*              generates code to put the parameters into the          * 00033000
*              parameter list specified by xmfctrl and provides full  * 00033100
*              syntax checking with default setting.                  * 00033200
*                                                                     * 00033300
*            ,xmfctrl                                                 * 00033400
*              is a required input.  It is the name (RS-type), or     * 00033500
*              address in register (1)-(12), of a storage area for    * 00033600
*              the parameter list.                                    * 00033700
*                                                                     * 00033800
*            ,COMPLETE                                              * 00033900
*              is an optional keyword input which specifies the       * 00034000
*              degree of macro parameter syntax checking.             * 00034100
*              DEFAULT: COMPLETE                                      * 00034200
*                                                                     * 00034300
*                                                                     * 00034400
*              COMPLETE                                               * 00034500
*                  Checking for required macro keys is done and       * 00034600
*                  defaults are supplied for omitted optional         * 00034700
*                  parameters.                                        * 00034800
*                                                                     * 00034900
*                                                                     * 00035000
*                                                                     * 00035100
*                                                                     * 00035200
*                                                                     * 00035300
*                                                                     * 00035400
*                                                                     * 00035500
*01* RETURN CODES:                                                    * 00035600
*                                                                     * 00035700
*                                                                     * 00035800
*            0    Name: IwmRetCodeOk                                  * 00035900
*                                                                     * 00036000
*                 Meaning: Successful completion.                     * 00036100
*                                                                     * 00036200
*                 Action: None required.                              * 00036300
*                                                                     * 00036400
*            4    Name: IwmRetCodeWarning                             * 00036500
*                                                                     * 00036600
*                 Meaning: Successful completion, unusual conditions  * 00036700
*                 noted.                                              * 00036800
*                                                                     * 00036900
*                                                                     * 00037000
*                 HEX REASON  MEANING/ACTION                          * 00037100
*                 CODE                                                * 00037200
*                                                                     * 00037300
*                 xxxx040A    Name: IwmRsnCodeOutputAreaTooSmall      * 00037400
*                                                                     * 00037500
*                             Meaning:  The output area supplied is   * 00037600
*                             too small to receive all the available  * 00037700
*                             information. The variable specified in  * 00037800
*                             the QUERYLEN keyword will contain the   * 00037900
*                             size of the storage required to hold    * 00038000
*                             the returned data area.                 * 00038100
*                                                                     * 00038200
*                             Action: None required.  If necessary,   * 00038300
*                             reinvoke the service with an output     * 00038400
*                             area of sufficient size to receive all  * 00038500
*                             information.                            * 00038600
*                                                                     * 00038700
*                 xxxx041A    Name: IwmRsnCodeNoPolMgt                * 00038800
*                                                                     * 00038900
*                             Meaning:  System does not support       * 00039000
*                             policy management services.  This       * 00039100
*                             return code is only set when the MVS    * 00039200
*                             release is prior to MVS/ESA SP5.2.0.    * 00039300
*                                                                     * 00039400
*                             Action: None required.                  * 00039500
*                                                                     * 00039600
*                                                                     * 00039700
*                                                                     * 00039800
*            8    Name: IwmRetCodeInvocError                          * 00039900
*                                                                     * 00040000
*                 Meaning: Invalid invocation environment or          * 00040100
*                 parameters.                                         * 00040200
*                                                                     * 00040300
*                                                                     * 00040400
*                 HEX REASON  MEANING/ACTION                          * 00040500
*                 CODE                                                * 00040600
*                                                                     * 00040700
*                 xxxx0801    Name: IwmRsnCodeSrbMode                 * 00040800
*                                                                     * 00040900
*                             Meaning:  Caller is in SRB mode.        * 00041000
*                                                                     * 00041100
*                             Action: Avoid requesting this function  * 00041200
*                             while in SRB mode.                      * 00041300
*                                                                     * 00041400
*                 xxxx0803    Name: IwmRsnCodeDisabled                * 00041500
*                                                                     * 00041600
*                             Meaning: Caller is disabled.            * 00041700
*                                                                     * 00041800
*                             Action: Avoid requesting this function  * 00041900
*                             while disabled.                         * 00042000
*                                                                     * 00042100
*                 xxxx0804    Name: IwmRsnCodeLocked                  * 00042200
*                                                                     * 00042300
*                             Meaning: Caller is locked.              * 00042400
*                                                                     * 00042500
*                             Action: Avoid requesting this function  * 00042600
*                             while locked.                           * 00042700
*                                                                     * 00042800
*                 xxxx0810    Name: IwmRsnCodeEutFrr                  * 00042900
*                                                                     * 00043000
*                             Meaning:  Caller has EUT FRR            * 00043100
*                             established.                            * 00043200
*                                                                     * 00043300
*                             Action: Avoid requesting this function  * 00043400
*                             with an EUT FRR set.                    * 00043500
*                                                                     * 00043600
*                 xxxx0823    Name: IwmRsnCodeDatoff                  * 00043700
*                                                                     * 00043800
*                             Meaning: Caller invoked service while   * 00043900
*                             DATOFF                                  * 00044000
*                                                                     * 00044100
*                             Action: Avoid requesting this function  * 00044200
*                             in this environment.                    * 00044300
*                                                                     * 00044400
*                 xxxx0824    Name: IwmRsnCodeAmode24                 * 00044500
*                                                                     * 00044600
*                             Meaning: Caller invoked service but was * 00044700
*                             in 24 bit addressing mode.              * 00044800
*                                                                     * 00044900
*                             Action: Request this function only when * 00045000
*                             you are in 31 bit addressing mode.      * 00045100
*                                                                     * 00045200
*                 xxxx0827    Name: IwmRsnCodeRsvdNot0                * 00045300
*                                                                     * 00045400
*                             Meaning:  Reserved field in parameter   * 00045500
*                             list was non-zero.                      * 00045600
*                                                                     * 00045700
*                             Action: Check for possible storage      * 00045800
*                             overlay of the parameter list.          * 00045900
*                                                                     * 00046000
*                 xxxx0828    Name: IwmRsnCodeBadVersion              * 00046100
*                                                                     * 00046200
*                             Meaning: Version number in parameter    * 00046300
*                             list is not valid or the length         * 00046400
*                             specified is incorrect.                 * 00046500
*                                                                     * 00046600
*                             Action: Check for possible storage      * 00046700
*                             overlay of the parameter list.          * 00046800
*                                                                     * 00046900
*                 xxxx0830    Name: IwmRsnCodeBadAlet                 * 00047000
*                                                                     * 00047100
*                             Meaning:  Caller has passed an invalid  * 00047200
*                             ALET.                                   * 00047300
*                                                                     * 00047400
*                             Action: Check for possible storage      * 00047500
*                             overlay of the parameter list or        * 00047600
*                             variable.                               * 00047700
*                                                                     * 00047800
*                                                                     * 00047900
*                                                                     * 00048000
*            10   Name: IwmRetCodeCompError                           * 00048100
*                                                                     * 00048200
*                 Meaning: Component error.                           * 00048300
*                                                                     * 00048400
*                 Action: No action required.  The function may be    * 00048500
*                 successful if invoked again.                        * 00048600
*                                                                     * 00048700
*                                                                     * 00048800
*                                                                     * 00048900
*                                                                     * 00049000
*01* REASON CODES:                                                    * 00049100
*                                                                     * 00049200
*       A unique reason code will be returned whenever the return     * 00049300
*       code is non-zero.  Reason codes, as appropriate, are defined  * 00049400
*       under their corresponding return code.  Reason code and       * 00049500
*       return code constants are defined within IWMYCON.  Note that  * 00049600
*       the high order halfword of register 0, and the reason code    * 00049700
*       variable when specified, may be non-zero and represents       * 00049800
*       diagnostic data which is NOT part of the external interface.  * 00049900
*       The high order halfword should thus be excluded from          * 00050000
*       comparison with the reason code values described above.  The  * 00050100
*       constant, IWMRSNCODE_MASK_CONST defined in IWMYCON, may be    * 00050200
*       used for this purpose.                                        * 00050300
*                                                                     * 00050400
*01* ABEND CODES:                                                     * 00050500
*                                                                     * 00050600
*                                                                     * 00050700
*       1C7       WLM Abend                                           * 00050800
*                                                                     * 00050900
*                                                                     * 00051000
*                                                                     * 00051100
*01* ABEND REASON CODES:                                              * 00051200
*                                                                     * 00051300
*       REASON    ABEND                                               * 00051400
*       CODE      CODE      DESCRIPTION                               * 00051500
*                                          * 00051600
*                                                                     * 00051700
*                                                                     * 00051800
*       0Axx0005  1C7       An    attempt   to   reference   caller's * 00051900
*                           parameters caused an OC4 abend.           * 00052000
*                                                                     * 00052100
*                                                                     * 00052200
*                                                                     * 00052300
*01* MODULE TYPE:  ASSEM MACRO                                        * 00052400
*                                                                     * 00052500
*02*   PROCESSOR:  ASSEM                                              * 00052600
*                                                                     * 00052700
*01* COMPONENT:  SCWLM                                                * 00052800
*                                                                     * 00052900
*01* DISTRIBUTION LIBRARY: AMACLIB                                    * 00053000
*                                                                     * 00053100
*01* MACRO USAGE NOTES:                                               * 00053200
*                                                                     * 00053300
*                                                                     * 00053400
*    1.  Printing of the macro expansion is controlled by the ZPRINT  * 00053500
*        global macro variable.  Any value other than 'NO' will       * 00053600
*        result in the macro expansion being printed.  The default is * 00053700
*        'YES'.  The following examples illustrate how the ZPRINT     * 00053800
*        variable should be set.                                      * 00053900
*                                                                     * 00054000
*                    GBLC &ZPRINT                                     * 00054100
*            &ZPRINT SETC 'YES'          &ZPRINT SETC 'NO'            * 00054200
*                                                                     * 00054300
*                                                                     * 00054400
*    2.  All keys currently contained in the IWMCQRY macro correspond * 00054500
*        to  version 0.  If you specify PLISTVER, use a value of 0 or * 00054600
*        MAX.                                                         * 00054700
*                                                                     * 00054800
*                                                                     * 00054900
*                                                                     * 00055000
*                                                                     * 00055100
*01* CHANGE ACTIVITY:                                                 * 00055200
*                                                                     * 00055300
*   Flag LineItem  FMID    Date   ID    Comment                       * 00055400
*                                                                     * 00055500
*    $L0=WLMRM    HBB5520 940310 PDCT:  WLM RM                        * 00055600
*    $P1=PSY0321  JBB6604 970225 PDB9RK:  Document abend code - 1C7   * 00055700
****** END OF SPECIFICATIONS *****************************************/ 00055800
*/* TLINE 1 *********************************************************** 00055900
         MACRO                                                          00056000
&XLABEL  IWMCQRY &ANSAREA=,&ANSLEN=,&QUERYLEN=,&POLICY_ID=,&RETCODE=,  *00056100
               &RSNCODE=,&PLISTVER=,&MF=                                00056200
.*                                                                      00056300
*               MACDATE -02/26/97-<0>                                   00056400
.*                                                                      00056500
.*******************************************************************    00056600
.***AB.02  GLOBAL VARIABLES TO CONTROL PRINT AND CODE GENERATION        00056700
.*******************************************************************    00056800
               GBLC  &ZPRINT     YES=PRINT NO=NO PRINT                  00056900
               GBLC  &ZTEST      YES=TEST NO=NO TEST                    00057000
               GBLC  &ZSYSTEM    PCCODE10, MVS, SAK, VM, XAX            00057100
.*                                                                      00057200
               GBLC  &ZIWMCQRY   YES=MACRO USED AT LEAST ONCE           00057300
.*******************************************************************    00057400
.***AB.03  COMMONLY USED LOCAL MACRO VARIABLES                          00057500
.*******************************************************************    00057600
               LCLC  &ZMS        ERROR MESSAGE WORK AREA                00057700
               LCLC  &ZCNDX      LAST THREE SYSNDX CHARACTERS           00057800
               LCLC  &ZCLNG      USED WHEN LENGTH IS NEEDED             00057900
               LCLC  &ZCGPR      USED WHEN VALUE IS IN A GPR            00058000
               LCLC  &ZCVAL      USED TO CONTAIN FIXED VALUE            00058100
               LCLA  &ZAWRK      USED AS A WORK AREA                    00058200
               LCLA  &ZASIZ      USED FOR SIZE OF VALUE                 00058300
               LCLA  &ZN         NUMERIC WORK VARIABLE                  00058400
               LCLC  &ZC         CHARACTER WORK VARIABLE                00058500
               LCLC  &ZTLC       CHARACTER TOO LONG VARIABLE            00058600
               LCLA  &ZTLA       VALUE TOO LONG VARIABLE                00058700
               LCLA  &ZMACRET    MACRO RETURN CODE                      00058800
&ZMACRET       SETA  0           ASSUME NO ERRORS                       00058900
.*                                                                      00059000
               LCLC  &ZCSYSLIST(255)            NONXKEY, POS ARRAY      00059100
               LCLA  &ZASYSLNDX  WORK INDEX FOR ZCSYSLIST()             00059200
               LCLA  &ZPLLEN     PARAMETER LIST LENGTH                  00059300
               LCLC  &ZENDBASEPL                End of base PL          00059400
               LCLA  &ZPLWORKA   PARAMETER LIST LENGTH                  00059500
.*******************************************************************    00059600
.***AB.04  MACRO VARIABLES FOR RANGES AND SETS OF ARGUMENTS             00059700
.*******************************************************************    00059800
               LCLA  &ZI         INDEX FOR ARRAY                        00059900
               LCLA  &ZJ         INDEX FOR PARMS                        00060000
               LCLA  &ZK         INDEX FOR PARSE                        00060100
               LCLA  &ZLO        LOW RANGE VALUE                        00060200
               LCLA  &ZHI        HIGH RANGE VALUE                       00060300
               LCLC  &ZW         WORK AREA FOR PARM                     00060400
.********************************************************************   00060500
.***AB.05  INVOKE MVS MACROS TO CONTROL CODE GENERATION                 00060600
.********************************************************************   00060700
               GBLC  &SYSSPLV    SP LEVEL 1,2,3 -SPLEVEL                00060800
               GBLC  &SYSASCE    SYSTEM STATE P ANY AR-SYSSTATE         00060900
.*                                                                      00061000
               AIF   (K'&SYSASCE GT 0).ZSYS4    SYS STATE DEFINED       00061100
               AIF   (K'&SYSSPLV GT 0).ZSYS2    SP LEVEL DEFINED        00061200
               SPLEVEL  TEST                                            00061300
.ZSYS2         ANOP  ,                                                  00061400
               AIF   ('&SYSSPLV' EQ '1').ZSYS3  PRE SP 3.1              00061500
               AIF   ('&SYSSPLV' EQ '2').ZSYS3  PRE SP 3.1              00061600
               SYSSTATE TEST                                            00061700
               AGO   .ZSYS4                                             00061800
.ZSYS3         ANOP  ,                                                  00061900
&SYSASCE       SETC  'P'         ASSUME SYSSTATE PRIMARY                00062000
.ZSYS4         ANOP  ,                                                  00062100
.*******************************************************************    00062200
.***AB.07  DEFINE ALL MACRO VARIABLES                                   00062300
.*******************************************************************    00062400
               LCLC  &XANSAREA   ++ NAME                                00062500
               LCLC  &XANSLEN    ++ NAME                                00062600
               LCLC  &XQUERYLEN  ++ NAME                                00062700
               LCLC  &XPOLICY_ID                ++ NAME                 00062800
               LCLC  &XRETCODE   ++ NAME                                00062900
               LCLC  &XRSNCODE   ++ NAME                                00063000
               LCLA  &XPLISTVER  ++ VALUE                               00063100
               LCLC  &XMF        ++ VALUE                               00063200
               LCLC  &XMFCTRL    ++ NAME                                00063300
               LCLC  &XMFATTR    ++ VALUE                               00063400
               LCLC  &XMFSCK     ++ VALUE                               00063500
.*******************************************************************    00063600
.***AB.13  DEFINE MACRO VARIABLES FOR INPUT/OUTPUT PROCESSING           00063700
.*******************************************************************    00063800
               LCLC  &ZXANSAREA  ++ OUTPUT NAME                         00063900
               LCLC  &ZXANSLEN   ++ INPUT NAME                          00064000
               LCLC  &ZXQUERYLEN                ++ OUTPUT NAME          00064100
               LCLC  &ZXPOLICY_ID               ++ OUTPUT NAME          00064200
               LCLC  &ZXRETCODE  ++ OUTPUT NAME                         00064300
               LCLC  &ZXRSNCODE  ++ OUTPUT NAME                         00064400
               LCLC  &ZXPLISTVER                ++ INPUT VALUE          00064500
               LCLC  &ZXMF       ++ INPUT VALUE                         00064600
               LCLC  &ZXMFCTRL   ++ INPUT NAME                          00064700
               LCLC  &ZXMFATTR   ++ INPUT VALUE                         00064800
               LCLC  &ZXMFSCK    ++ INPUT VALUE                         00064900
.********************************************************************   00065000
.***AC.PLV01  PROCESS PLISTVER                                      *   00065100
.********************************************************************   00065200
&XPLISTVER      SETA  0                                                 00065300
                AIF   (K'&PLISTVER(1) LE 0).ZPLV0                       00065400
                AIF   ('&PLISTVER(1)' NE 'MAX').ZPLV0                   00065500
&XPLISTVER      SETA  0                                                 00065600
.ZPLV0          ANOP  ,                                                 00065700
.*                                                                      00065800
                AIF   (K'&PLISTVER(1) LE 0).ZPVCKE                      00065900
                AIF   ('&PLISTVER(1)' EQ 'IMPLIED_VERSION').ZPVCKE      00066000
                AIF   ('&PLISTVER(1)' EQ 'MAX').ZPVCKE                  00066100
.*-------------------------------------------------------------------   00066200
                AIF   (N'&PLISTVER LE 1).ZPVCK3  CK NUM                 00066300
&ZMS            SETC  '"PLISTVER='         *KPOSA* MNOTE                00066400
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00066500
&ZMS            SETC  '&ZMS "PLISTVER"'                                 00066600
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00066700
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00066800
                AGO   .ZPVCK2                                           00066900
.ZPVCK3         ANOP  ,                                                 00067000
.*-------------------------------------------------------------------   00067100
                AIF   ('&PLISTVER'(1,1) NE '(').ZPVCK2                  00067200
&ZMS            SETC  '"PLISTVER='         *KGPRA* MNOTE                00067300
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00067400
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         00067500
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'                 00067600
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00067700
                AGO   .ZPVCKE                                           00067800
.ZPVCK2         ANOP  ,                                                 00067900
.*-------------------------------------------------------------------   00068000
&ZCVAL          SETC  '&PLISTVER(1)'                                    00068100
                AIF   ('&ZCVAL'(1,1) EQ '(').ZPVCKE  IN GPR             00068200
                AIF   (T'&ZCVAL NE 'N').ZPVCK6  NUMERIC ERR             00068300
&ZN             SETA   &PLISTVER(1)        CONVERT TO ARITHMETIC        00068400
                AIF   (&ZN LT 0).ZPVCK6    TOO LOW                      00068500
                AIF   (&ZN LE 0).ZPVCK4A   NOT HIGH                     00068600
.ZPVCK6         ANOP  ,                                                 00068700
&ZMS            SETC  '"PLISTVER='         *KRNGA* MNOTE                00068800
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00068900
&ZMS            SETC  '&ZMS THE RANGE IS "0-0"'                         00069000
                MNOTE 8,' &ZMS FOR ARGUMENT 1.'                         00069100
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00069200
&XPLISTVER      SETA  0                                                 00069300
                AGO   .ZPVCKE                                           00069400
.*-------------------------------------------------------------------   00069500
.ZPVCK4A        ANOP  ,                                                 00069600
                AIF   (&ZN GE &XPLISTVER).ZPVCK4                        00069700
&ZMS            SETC  'PLISTVER='          *KVALA* MNOTE                00069800
&ZMS            SETC  '&ZMS.&PLISTVER(1)'                               00069900
&ZMS            SETC  '&ZMS., BUT PLISTVER OF'                          00070000
&ZMS            SETC  '&ZMS &XPLISTVER'                                 00070100
                MNOTE 8,' &ZMS IS REQUIRED.'                            00070200
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00070300
                AGO   .ZPVCK5                                           00070400
.ZPVCK4         ANOP  ,                                                 00070500
&XPLISTVER      SETA  &PLISTVER(1)                                      00070600
.ZPVCK5         ANOP  ,                                                 00070700
.ZPVCKE         ANOP  ,                                                 00070800
.********************************************************************   00070900
.***AG.MF01 PROCESS MF MACRO FORMS                                      00071000
.********************************************************************   00071100
               ACTR  10000                                              00071200
.*------------------------------------------------------------------    00071300
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00071400
&XMF           SETC  ''          INITIALIZE XVARIABLE                   00071500
.*-------------------------------------------------------------------   00071600
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00071700
.ZG24          ANOP  ,                                                  00071800
&ZTLC          SETC 'S'                                                 00071900
               AIF   ('&MF(1)' NE '&ZTLC').ZG25                         00072000
&XMF           SETC  'S'         SET KEYWORD                            00072100
               AIF   (N'&MF LE 1).ZG24A         CK NUM                  00072200
&ZMS           SETC  '"MF='      *KPOSA* MNOTE                          00072300
&ZMS           SETC  '&ZMS.&MF"'                                        00072400
&ZMS           SETC  '&ZMS "MF"'                                        00072500
               MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                00072600
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00072700
.ZG24A         ANOP  ,                                                  00072800
.*-------------------------------------------------------------------   00072900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00073000
.ZG25          ANOP  ,                                                  00073100
&ZTLC          SETC 'L'                                                 00073200
               AIF   ('&MF(1)' NE '&ZTLC').ZG32                         00073300
&XMF           SETC  'L'         SET KEYWORD                            00073400
               AIF   (N'&MF LE 3).ZG25A         CK NUM                  00073500
&ZMS           SETC  '"MF='      *KPOSA* MNOTE                          00073600
&ZMS           SETC  '&ZMS.&MF"'                                        00073700
&ZMS           SETC  '&ZMS "MF"'                                        00073800
               MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'               00073900
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00074000
.ZG25A         ANOP  ,                                                  00074100
.*-------------------------------------------------------------------   00074200
.***AG.KKCTL08 -MF(L) SPECIAL CHECK                                     00074300
               AIF   (N'&SYSLIST NE 0).ZG25B    POSITIONALS?            00074400
               AIF   ('&ANSAREA' NE '').ZG25B   KEYS?                   00074500
               AIF   ('&ANSLEN' NE '').ZG25B    KEYS?                   00074600
               AIF   ('&QUERYLEN' NE '').ZG25B  KEYS?                   00074700
               AIF   ('&POLICY_ID' NE '').ZG25B  KEYS?                  00074800
               AIF   ('&RETCODE' NE '').ZG25B   KEYS?                   00074900
               AIF   ('&RSNCODE' NE '').ZG25B   KEYS?                   00075000
               AGO    .ZG25C     INVOCATION OKAY                        00075100
.ZG25B         ANOP  ,                                                  00075200
&ZMS           SETC  'THE "L" FORM OF "MF"'     *MFLA* MNOTE            00075300
&ZMS           SETC  '&ZMS CAN ONLY HAVE'                               00075400
&ZMS           SETC  '&ZMS THE "PLISTVER" KEY'                          00075500
               MNOTE 8,' &ZMS SPECIFIED ON THE INVOCATION.'             00075600
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00075700
.ZG25C         ANOP  ,                                                  00075800
.*-------------------------------------------------------------------   00075900
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00076000
&ZXMFCTRL      SETC  'INPUT'     SET IN/OUTPUT                          00076100
&XMFCTRL       SETC  '&MF(2,1)'  SET XVARIABLE                          00076200
               AIF   (N'&MF(2) GT 1).ZG27B      MULTI PARMS             00076300
&XMFCTRL       SETC  '&MF(2)'    SET XVARIABLE                          00076400
.ZG27B         AIF   (K'&MF(2) GT 0).ZG27C                              00076500
&ZXMFCTRL      SETC  ''          RESET IN/OUTPUT                        00076600
&ZMS           SETC  'WHEN "L" IS SPECIFIED'    *KRQDA*                 00076700
&ZMS           SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'                00076800
               MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                       00076900
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00077000
.ZG27C         ANOP  ,                                                  00077100
.*-------------------------------------------------------------------   00077200
.***AG.KCK01 NAME, OPT RQD INPUT, POS(2) -GPR NOT ALLOWED               00077300
               AIF   (K'&ZXMFCTRL LE 0).ZG27P   NOT I/O                 00077400
               AIF   ('&XMFCTRL'(1,1) NE '(').ZG27P                     00077500
&ZXMFCTRL      SETC  ''          RESET IN/OUTPUT                        00077600
&ZMS           SETC  '"MF='      *KGPRA* MNOTE                          00077700
&ZMS           SETC  '&ZMS.&MF"'                                        00077800
&ZMS           SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'          00077900
               MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 2.'                  00078000
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00078100
.ZG27P         ANOP  ,                                                  00078200
.*-------------------------------------------------------------------   00078300
.***AG.KXVAR13 VALUE, OPT INPUT, POS(3) -XVARIABLE                      00078400
&ZXMFATTR      SETC  'INPUT'     SET IN/OUTPUT                          00078500
&XMFATTR       SETC  '0D'                                               00078600
               AIF   (K'&MF(3) LE 0).ZG30B      PARM                    00078700
&XMFATTR       SETC  '&MF(3,1)'  SET XVARIABLE                          00078800
               AIF   (N'&MF(3) GT 1).ZG30B      MULTI PARMS             00078900
&XMFATTR       SETC  '&MF(3)'    SET XVARIABLE                          00079000
.ZG30B         ANOP  ,                                                  00079100
.*-------------------------------------------------------------------   00079200
.***AG.KCK01 VALUE, OPT INPUT, POS(3) -GPR NOT ALLOWED                  00079300
               AIF   (K'&ZXMFATTR LE 0).ZG30P   NOT I/O                 00079400
               AIF   ('&XMFATTR'(1,1) NE '(').ZG30P                     00079500
&ZXMFATTR      SETC  ''          RESET IN/OUTPUT                        00079600
&ZMS           SETC  '"MF='      *KGPRA* MNOTE                          00079700
&ZMS           SETC  '&ZMS.&MF"'                                        00079800
&ZMS           SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'          00079900
               MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 3.'                  00080000
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00080100
.ZG30P         ANOP  ,                                                  00080200
.*-------------------------------------------------------------------   00080300
.***AG.KCK03 VALUE, OPT INPUT, POS(3) -CHARACTER LENGTH                 00080400
               AIF   (K'&ZXMFATTR LE 0).ZG30S   NOT I/O                 00080500
               AIF   (K'&XMFATTR LE 60).ZG30S   LNG OK                  00080600
&ZXMFATTR      SETC  ''          RESET IN/OUTPUT                        00080700
&ZMS           SETC  '"MF='      *KLNGA* MNOTE                          00080800
&ZMS           SETC  '&ZMS.&MF"'                                        00080900
&ZMS           SETC  '&ZMS ARGUMENT 3 EXCEEDS THE MAXIMUM'              00081000
               MNOTE 8,' &ZMS LENGTH OF 60 CHARACTERS.'                 00081100
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00081200
.ZG30S         ANOP  ,                                                  00081300
.*-------------------------------------------------------------------   00081400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00081500
.ZG32          ANOP  ,                                                  00081600
&ZTLC          SETC 'E'                                                 00081700
               AIF   ('&MF(1)' NE '&ZTLC').ZG40                         00081800
&XMF           SETC  'E'         SET KEYWORD                            00081900
               AIF   (N'&MF LE 3).ZG32A         CK NUM                  00082000
&ZMS           SETC  '"MF='      *KPOSA* MNOTE                          00082100
&ZMS           SETC  '&ZMS.&MF"'                                        00082200
&ZMS           SETC  '&ZMS "MF"'                                        00082300
               MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'               00082400
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00082500
.ZG32A         ANOP  ,                                                  00082600
.*-------------------------------------------------------------------   00082700
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00082800
&ZXMFCTRL      SETC  'INPUT'     SET IN/OUTPUT                          00082900
&XMFCTRL       SETC  '&MF(2,1)'  SET XVARIABLE                          00083000
               AIF   (N'&MF(2) GT 1).ZG34B      MULTI PARMS             00083100
&XMFCTRL       SETC  '&MF(2)'    SET XVARIABLE                          00083200
.ZG34B         AIF   (K'&MF(2) GT 0).ZG34C                              00083300
&ZXMFCTRL      SETC  ''          RESET IN/OUTPUT                        00083400
&ZMS           SETC  'WHEN "E" IS SPECIFIED'    *KRQDA*                 00083500
&ZMS           SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'                00083600
               MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                       00083700
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00083800
.ZG34C         ANOP  ,                                                  00083900
.*-------------------------------------------------------------------   00084000
.***AG.KCK02 NAME, OPT RQD INPUT, POS(2) -GPR OUT OF RANGE              00084100
               AIF   (K'&ZXMFCTRL LE 0).ZG34R   NOT I/O                 00084200
               AIF   ('&XMFCTRL'(1,1) NE '(').ZG34R                     00084300
&ZCGPR         SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)                         00084400
               AIF   ('&ZCGPR'(1,1) NE '0').ZG34P                       00084500
               AIF   (K'&ZCGPR GT 2).ZG34Q                              00084600
               AIF   ('&ZCGPR' EQ '0').ZG34Q                            00084700
&ZCGPR         SETC  '&ZCGPR'(2,1)                                      00084800
               AIF   (T'&ZCGPR NE 'N').ZG34Q    INVALID REG NAME        00084900
.ZG34P         ANOP  ,                                                  00085000
               AIF   (T'&ZCGPR NE 'N').ZG34R    NON NUMERIC             00085100
               AIF   ('&ZCGPR' LT '1').ZG34Q                            00085200
               AIF   ('&ZCGPR' LE '12').ZG34R                           00085300
.ZG34Q         ANOP  ,                                                  00085400
&ZMS           SETC  '"MF='      *KGPRA* MNOTE                          00085500
&ZMS           SETC  '&ZMS.&MF"'                                        00085600
&ZMS           SETC  '&ZMS ARGUMENT 2 MUST SPECIFY A REGISTER'          00085700
               MNOTE 8,' &ZMS IN THE RANGE (1)-(12).'                   00085800
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00085900
.ZG34R         ANOP  ,                                                  00086000
.*-------------------------------------------------------------------   00086100
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00086200
&XMFSCK        SETC  ''          INITIALIZE XVARIABLE                   00086300
.ZG38A   AIF   ('&MF(3)' NE 'COMPLETE').ZG39A                           00086400
&XMFSCK        SETC  'COMPLETE'  SET KEYWORD                            00086500
.*-------------------------------------------------------------------   00086600
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00086700
.ZG39A         AIF   (K'&XMFSCK GT 0).ZG39C     KEYWORD                 00086800
               AIF   (K'&MF(3) LE 0).ZG39B                              00086900
&ZMS           SETC  '"MF='      *KUKWA* MNOTE                          00087000
&ZMS           SETC  '&ZMS.&MF"'                                        00087100
&ZMS           SETC  '&ZMS ARGUMENT 3 IS AN UNKNOWN KEYWORD. '          00087200
&ZMS           SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                00087300
&ZMS           SETC  '&ZMS "COMPLETE".'         VALID KEYWORD           00087400
               MNOTE 8,' &ZMS '                                         00087500
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00087600
.ZG39B         ANOP  ,                                                  00087700
&XMFSCK        SETC  'COMPLETE'  SET DEFAULT KEYWORD                    00087800
.ZG39C         ANOP  ,                                                  00087900
&ZXMFSCK       SETC  'INPUT'     SET IN/OUTPUT                          00088000
.*------------------------------------------------------------------    00088100
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00088200
.ZG40          ANOP  ,                                                  00088300
&ZXMF          SETC  'INPUT'     SET IN/OUTPUT                          00088400
               AIF   (K'&XMF GT 0).ZG40E        VALID ARG               00088500
               AIF   (T'&MF EQ 'O').ZG40D       OMITTED                 00088600
&ZASYSLNDX     SETA  0                                                  00088700
.ZG40A         ANOP  ,           POSITIONAL MACRO KEY                   00088800
&ZASYSLNDX     SETA  &ZASYSLNDX+1                                       00088900
               AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG40C                   00089000
&ZTLC          SETC 'MF'                                                00089100
               AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG40A          00089200
.ZG40B         ANOP  ,                                                  00089300
&ZXMF          SETC  ''          RESET IN/OUTPUT                        00089400
&ZMS           SETC  'THE "MF" KEY'             *KOPTA* MNOTE           00089500
&ZMS           SETC  '&ZMS MUST CONTAIN ONE'                            00089600
               MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                   00089700
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00089800
               AGO   .ZG40E                                             00089900
.ZG40C         ANOP  ,                                                  00090000
&ZXMF          SETC  ''          RESET IN/OUTPUT                        00090100
&ZMS           SETC  '"MF='      *KUKWA* MNOTE                          00090200
&ZMS           SETC  '&ZMS.&MF"'                                        00090300
&ZMS           SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '          00090400
&ZMS           SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                00090500
&ZMS           SETC  '&ZMS "S",'                VALID KEYWORD           00090600
&ZMS           SETC  '&ZMS "L",'                VALID KEYWORD           00090700
&ZMS           SETC  '&ZMS OR "E".'             VALID KEYWORD           00090800
               MNOTE 8,' &ZMS '                                         00090900
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00091000
               AGO   .ZG40E                                             00091100
.ZG40D         ANOP  ,                                                  00091200
&XMF           SETC  'S'         SET DEFAULT KEYWORD                    00091300
&XMFSCK        SETC  'COMPLETE'  COMPLETE CHECKING                      00091400
.ZG40E         ANOP  ,                                                  00091500
.********************************************************************   00091600
.***AG.MF02  FULL MACRO SYNTAX CHECKING                                 00091700
.********************************************************************   00091800
               ACTR  10000                                              00091900
.*-------------------------------------------------------------------   00092000
.***AG.MF03 MF=(SLE)                                                    00092100
               AIF   ('&XMF' EQ 'L').ZGMFX                              00092200
.*----------------------------------------------------------------***   00092300
.***AG.KXVAR05 NAME, RQD OUTPUT, KEYS -XVARIABLE KEY                    00092400
               AIF   (N'&ANSAREA LE 1).ZG2A     CK NUM                  00092500
&ZMS           SETC  '"ANSAREA='                *KPOSA* MNOTE           00092600
&ZMS           SETC  '&ZMS.&ANSAREA"'                                   00092700
&ZMS           SETC  '&ZMS "ANSAREA"'                                   00092800
               MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                00092900
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00093000
.ZG2A          ANOP  ,                                                  00093100
.*-------------------------------------------------------------------   00093200
.***AG.KXVAR06 NAME, RQD OUTPUT, KEYS -XVARIABLE                        00093300
&ZXANSAREA     SETC  'OUTPUT'    SET IN/OUTPUT                          00093400
&XANSAREA      SETC  '&ANSAREA(1)'              SET XVARIABLE           00093500
               AIF   (N'&ANSAREA GT 1).ZG2B     MULTI PARMS             00093600
&XANSAREA      SETC  '&ANSAREA'  SET XVARIABLE                          00093700
.ZG2B          AIF   (K'&ANSAREA(1) GT 0).ZG2C                          00093800
&ZXANSAREA     SETC  ''          RESET IN/OUTPUT                        00093900
&ZMS           SETC  ' '         *KRQDA*                                00094000
&ZMS           SETC  '&ZMS "ANSAREA" KEY AND ITS ARGUMENT'              00094100
               MNOTE 8,' &ZMS ARE REQUIRED.'                            00094200
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00094300
.ZG2C          ANOP  ,                                                  00094400
.*-------------------------------------------------------------------   00094500
.***AG.KCK02 NAME, RQD OUTPUT, KEYS -GPR OUT OF RANGE                   00094600
               AIF   (K'&ZXANSAREA LE 0).ZG2R   NOT I/O                 00094700
               AIF   ('&XANSAREA'(1,1) NE '(').ZG2R                     00094800
&ZCGPR         SETC  '&XANSAREA'(2,K'&XANSAREA-2)                       00094900
               AIF   ('&ZCGPR'(1,1) NE '0').ZG2P                        00095000
               AIF   (K'&ZCGPR GT 2).ZG2Q                               00095100
               AIF   ('&ZCGPR' EQ '0').ZG2Q                             00095200
&ZCGPR         SETC  '&ZCGPR'(2,1)                                      00095300
               AIF   (T'&ZCGPR NE 'N').ZG2Q     INVALID REG NAME        00095400
.ZG2P          ANOP  ,                                                  00095500
               AIF   (T'&ZCGPR NE 'N').ZG2R     NON NUMERIC             00095600
               AIF   ('&ZCGPR' LT '2').ZG2Q                             00095700
               AIF   ('&ZCGPR' LE '12').ZG2R                            00095800
.ZG2Q          ANOP  ,                                                  00095900
&ZMS           SETC  '"ANSAREA='                *KGPRA* MNOTE           00096000
&ZMS           SETC  '&ZMS.&ANSAREA"'                                   00096100
&ZMS           SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'          00096200
               MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                   00096300
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00096400
.ZG2R          ANOP  ,                                                  00096500
.*----------------------------------------------------------------***   00096600
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00096700
               AIF   (N'&ANSLEN LE 1).ZG5A      CK NUM                  00096800
&ZMS           SETC  '"ANSLEN='  *KPOSA* MNOTE                          00096900
&ZMS           SETC  '&ZMS.&ANSLEN"'                                    00097000
&ZMS           SETC  '&ZMS "ANSLEN"'                                    00097100
               MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                00097200
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00097300
.ZG5A          ANOP  ,                                                  00097400
.*-------------------------------------------------------------------   00097500
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00097600
&ZXANSLEN      SETC  'INPUT'     SET IN/OUTPUT                          00097700
&XANSLEN       SETC  '&ANSLEN(1)'               SET XVARIABLE           00097800
               AIF   (N'&ANSLEN GT 1).ZG5B      MULTI PARMS             00097900
&XANSLEN       SETC  '&ANSLEN'   SET XVARIABLE                          00098000
.ZG5B          AIF   (K'&ANSLEN(1) GT 0).ZG5C                           00098100
&ZXANSLEN      SETC  ''          RESET IN/OUTPUT                        00098200
&ZMS           SETC  ' '         *KRQDA*                                00098300
&ZMS           SETC  '&ZMS "ANSLEN" KEY AND ITS ARGUMENT'               00098400
               MNOTE 8,' &ZMS ARE REQUIRED.'                            00098500
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00098600
.ZG5C          ANOP  ,                                                  00098700
.*-------------------------------------------------------------------   00098800
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00098900
               AIF   (K'&ZXANSLEN LE 0).ZG5R    NOT I/O                 00099000
               AIF   ('&XANSLEN'(1,1) NE '(').ZG5R                      00099100
&ZCGPR         SETC  '&XANSLEN'(2,K'&XANSLEN-2)                         00099200
               AIF   ('&ZCGPR'(1,1) NE '0').ZG5P                        00099300
               AIF   (K'&ZCGPR GT 2).ZG5Q                               00099400
               AIF   ('&ZCGPR' EQ '0').ZG5Q                             00099500
&ZCGPR         SETC  '&ZCGPR'(2,1)                                      00099600
               AIF   (T'&ZCGPR NE 'N').ZG5Q     INVALID REG NAME        00099700
.ZG5P          ANOP  ,                                                  00099800
               AIF   (T'&ZCGPR NE 'N').ZG5R     NON NUMERIC             00099900
               AIF   ('&ZCGPR' LT '2').ZG5Q                             00100000
               AIF   ('&ZCGPR' LE '12').ZG5R                            00100100
.ZG5Q          ANOP  ,                                                  00100200
&ZMS           SETC  '"ANSLEN='  *KGPRA* MNOTE                          00100300
&ZMS           SETC  '&ZMS.&ANSLEN"'                                    00100400
&ZMS           SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'          00100500
               MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                   00100600
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00100700
.ZG5R          ANOP  ,                                                  00100800
.*----------------------------------------------------------------***   00100900
.***AG.KXVAR05 NAME, RQD OUTPUT, KEYS -XVARIABLE KEY                    00101000
               AIF   (N'&QUERYLEN LE 1).ZG8A    CK NUM                  00101100
&ZMS           SETC  '"QUERYLEN='               *KPOSA* MNOTE           00101200
&ZMS           SETC  '&ZMS.&QUERYLEN"'                                  00101300
&ZMS           SETC  '&ZMS "QUERYLEN"'                                  00101400
               MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                00101500
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00101600
.ZG8A          ANOP  ,                                                  00101700
.*-------------------------------------------------------------------   00101800
.***AG.KXVAR06 NAME, RQD OUTPUT, KEYS -XVARIABLE                        00101900
&ZXQUERYLEN    SETC  'OUTPUT'    SET IN/OUTPUT                          00102000
&XQUERYLEN     SETC  '&QUERYLEN(1)'             SET XVARIABLE           00102100
               AIF   (N'&QUERYLEN GT 1).ZG8B    MULTI PARMS             00102200
&XQUERYLEN     SETC  '&QUERYLEN'                SET XVARIABLE           00102300
.ZG8B          AIF   (K'&QUERYLEN(1) GT 0).ZG8C                         00102400
&ZXQUERYLEN    SETC  ''          RESET IN/OUTPUT                        00102500
&ZMS           SETC  ' '         *KRQDA*                                00102600
&ZMS           SETC  '&ZMS "QUERYLEN" KEY AND ITS ARGUMENT'             00102700
               MNOTE 8,' &ZMS ARE REQUIRED.'                            00102800
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00102900
.ZG8C          ANOP  ,                                                  00103000
.*-------------------------------------------------------------------   00103100
.***AG.KCK02 NAME, RQD OUTPUT, KEYS -GPR OUT OF RANGE                   00103200
               AIF   (K'&ZXQUERYLEN LE 0).ZG8R  NOT I/O                 00103300
               AIF   ('&XQUERYLEN'(1,1) NE '(').ZG8R                    00103400
&ZCGPR         SETC  '&XQUERYLEN'(2,K'&XQUERYLEN-2)                     00103500
               AIF   ('&ZCGPR'(1,1) NE '0').ZG8P                        00103600
               AIF   (K'&ZCGPR GT 2).ZG8Q                               00103700
               AIF   ('&ZCGPR' EQ '0').ZG8Q                             00103800
&ZCGPR         SETC  '&ZCGPR'(2,1)                                      00103900
               AIF   (T'&ZCGPR NE 'N').ZG8Q     INVALID REG NAME        00104000
.ZG8P          ANOP  ,                                                  00104100
               AIF   (T'&ZCGPR NE 'N').ZG8R     NON NUMERIC             00104200
               AIF   ('&ZCGPR' LT '2').ZG8Q                             00104300
               AIF   ('&ZCGPR' LE '12').ZG8R                            00104400
.ZG8Q          ANOP  ,                                                  00104500
&ZMS           SETC  '"QUERYLEN='               *KGPRA* MNOTE           00104600
&ZMS           SETC  '&ZMS.&QUERYLEN"'                                  00104700
&ZMS           SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'          00104800
               MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                   00104900
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00105000
.ZG8R          ANOP  ,                                                  00105100
.*----------------------------------------------------------------***   00105200
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00105300
               AIF   (N'&POLICY_ID LE 1).ZG11A  CK NUM                  00105400
&ZMS           SETC  '"POLICY_ID='              *KPOSA* MNOTE           00105500
&ZMS           SETC  '&ZMS.&POLICY_ID"'                                 00105600
&ZMS           SETC  '&ZMS "POLICY_ID"'                                 00105700
               MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                00105800
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00105900
.ZG11A         ANOP  ,                                                  00106000
.*-------------------------------------------------------------------   00106100
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00106200
               AIF   (K'&POLICY_ID(1) LE 0).ZG11C  NO PARM              00106300
&ZXPOLICY_ID   SETC  'OUTPUT'    SET OUTPUT                             00106400
&XPOLICY_ID    SETC  '&POLICY_ID(1)'            SET XVARIABLE           00106500
               AIF   (N'&POLICY_ID GT 1).ZG11C                          00106600
&XPOLICY_ID    SETC  '&POLICY_ID'               SET XVARIABLE           00106700
.ZG11C         ANOP  ,                                                  00106800
.*-------------------------------------------------------------------   00106900
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00107000
               AIF   (K'&ZXPOLICY_ID LE 0).ZG11R  NOT I/O               00107100
               AIF   ('&XPOLICY_ID'(1,1) NE '(').ZG11R                  00107200
&ZCGPR         SETC  '&XPOLICY_ID'(2,K'&XPOLICY_ID-2)                   00107300
               AIF   ('&ZCGPR'(1,1) NE '0').ZG11P                       00107400
               AIF   (K'&ZCGPR GT 2).ZG11Q                              00107500
               AIF   ('&ZCGPR' EQ '0').ZG11Q                            00107600
&ZCGPR         SETC  '&ZCGPR'(2,1)                                      00107700
               AIF   (T'&ZCGPR NE 'N').ZG11Q    INVALID REG NAME        00107800
.ZG11P         ANOP  ,                                                  00107900
               AIF   (T'&ZCGPR NE 'N').ZG11R    NON NUMERIC             00108000
               AIF   ('&ZCGPR' LT '2').ZG11Q                            00108100
               AIF   ('&ZCGPR' LE '12').ZG11R                           00108200
.ZG11Q         ANOP  ,                                                  00108300
&ZMS           SETC  '"POLICY_ID='              *KGPRA* MNOTE           00108400
&ZMS           SETC  '&ZMS.&POLICY_ID"'                                 00108500
&ZMS           SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'          00108600
               MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                   00108700
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00108800
.ZG11R         ANOP  ,                                                  00108900
.*----------------------------------------------------------------***   00109000
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00109100
               AIF   (N'&RETCODE LE 1).ZG14A    CK NUM                  00109200
&ZMS           SETC  '"RETCODE='                *KPOSA* MNOTE           00109300
&ZMS           SETC  '&ZMS.&RETCODE"'                                   00109400
&ZMS           SETC  '&ZMS "RETCODE"'                                   00109500
               MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                00109600
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00109700
.ZG14A         ANOP  ,                                                  00109800
.*-------------------------------------------------------------------   00109900
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00110000
               AIF   (K'&RETCODE(1) LE 0).ZG14C  NO PARM                00110100
&ZXRETCODE     SETC  'OUTPUT'    SET OUTPUT                             00110200
&XRETCODE      SETC  '&RETCODE(1)'              SET XVARIABLE           00110300
               AIF   (N'&RETCODE GT 1).ZG14C                            00110400
&XRETCODE      SETC  '&RETCODE'  SET XVARIABLE                          00110500
.ZG14C         ANOP  ,                                                  00110600
.*-------------------------------------------------------------------   00110700
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00110800
               AIF   (K'&ZXRETCODE LE 0).ZG14R  NOT I/O                 00110900
               AIF   ('&XRETCODE'(1,1) NE '(').ZG14R                    00111000
&ZCGPR         SETC  '&XRETCODE'(2,K'&XRETCODE-2)                       00111100
               AIF   ('&ZCGPR'(1,1) NE '0').ZG14P                       00111200
               AIF   (K'&ZCGPR GT 2).ZG14Q                              00111300
               AIF   ('&ZCGPR' EQ '0').ZG14Q                            00111400
&ZCGPR         SETC  '&ZCGPR'(2,1)                                      00111500
               AIF   (T'&ZCGPR NE 'N').ZG14Q    INVALID REG NAME        00111600
.ZG14P         ANOP  ,                                                  00111700
               AIF   (T'&ZCGPR NE 'N').ZG14R    NON NUMERIC             00111800
               AIF   ('&ZCGPR' LT '2').ZG14Q                            00111900
               AIF   ('&ZCGPR' LE '12').ZG14R                           00112000
.ZG14Q         ANOP  ,                                                  00112100
&ZMS           SETC  '"RETCODE='                *KGPRA* MNOTE           00112200
&ZMS           SETC  '&ZMS.&RETCODE"'                                   00112300
&ZMS           SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'          00112400
               MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                   00112500
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00112600
.ZG14R         ANOP  ,                                                  00112700
.*----------------------------------------------------------------***   00112800
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00112900
               AIF   (N'&RSNCODE LE 1).ZG17A    CK NUM                  00113000
&ZMS           SETC  '"RSNCODE='                *KPOSA* MNOTE           00113100
&ZMS           SETC  '&ZMS.&RSNCODE"'                                   00113200
&ZMS           SETC  '&ZMS "RSNCODE"'                                   00113300
               MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                00113400
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00113500
.ZG17A         ANOP  ,                                                  00113600
.*-------------------------------------------------------------------   00113700
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00113800
               AIF   (K'&RSNCODE(1) LE 0).ZG17C  NO PARM                00113900
&ZXRSNCODE     SETC  'OUTPUT'    SET OUTPUT                             00114000
&XRSNCODE      SETC  '&RSNCODE(1)'              SET XVARIABLE           00114100
               AIF   (N'&RSNCODE GT 1).ZG17C                            00114200
&XRSNCODE      SETC  '&RSNCODE'  SET XVARIABLE                          00114300
.ZG17C         ANOP  ,                                                  00114400
.*-------------------------------------------------------------------   00114500
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00114600
               AIF   (K'&ZXRSNCODE LE 0).ZG17R  NOT I/O                 00114700
               AIF   ('&XRSNCODE'(1,1) NE '(').ZG17R                    00114800
&ZCGPR         SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                       00114900
               AIF   ('&ZCGPR'(1,1) NE '0').ZG17P                       00115000
               AIF   (K'&ZCGPR GT 2).ZG17Q                              00115100
               AIF   ('&ZCGPR' EQ '0').ZG17Q                            00115200
&ZCGPR         SETC  '&ZCGPR'(2,1)                                      00115300
               AIF   (T'&ZCGPR NE 'N').ZG17Q    INVALID REG NAME        00115400
.ZG17P         ANOP  ,                                                  00115500
               AIF   (T'&ZCGPR NE 'N').ZG17R    NON NUMERIC             00115600
               AIF   ('&ZCGPR' LT '2').ZG17Q                            00115700
               AIF   ('&ZCGPR' LE '12').ZG17R                           00115800
.ZG17Q         ANOP  ,                                                  00115900
&ZMS           SETC  '"RSNCODE='                *KGPRA* MNOTE           00116000
&ZMS           SETC  '&ZMS.&RSNCODE"'                                   00116100
&ZMS           SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'          00116200
               MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                   00116300
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00116400
.ZG17R         ANOP  ,                                                  00116500
.******************************************************************     00116600
.***AH.P00 CHECK STANDALONE POSITIONAL VARIABLES                        00116700
.******************************************************************     00116800
               ACTR  10000                                              00116900
.*----------------------------------------------------------------***   00117000
.***AH.P02 EXTRA POSITIONALS                                            00117100
               AIF   (N'&SYSLIST LE 0).ZGLISTX  NO EXTRAS               00117200
               AIF   (N'&SYSLIST NE 2).ZGLISTX1  NOT NULL               00117300
               AIF   ('&SYSLIST(1)' NE '').ZGLISTX1  NOT NULL           00117400
               AIF   ('&SYSLIST(2)' EQ '').ZGLISTX  NOT NULL            00117500
.ZGLISTX1      ANOP  ,                                                  00117600
&ZCVAL         SETC  ''          ERROR FIELD                            00117700
&ZAWRK         SETA  0           POSITIONAL NUMBER                      00117800
.ZGLIST2       ANOP  ,                                                  00117900
&ZAWRK         SETA  &ZAWRK+1    NEXT POSITIONAL                        00118000
               AIF   (&ZAWRK GT N'&SYSLIST).ZGLIST3  DONE               00118100
&ZCVAL         SETC '&ZCVAL,&SYSLIST(&ZAWRK)'   EXTRA                   00118200
               AGO   .ZGLIST2                                           00118300
.*                                                                      00118400
.ZGLIST3       ANOP  ,                                                  00118500
&ZCVAL         SETC '&ZCVAL'(2,K'&ZCVAL-1)      STRIP COMMA             00118600
&ZMS           SETC  'POSITIONAL ARGUMENT(S),'  *PPOSA* MNOTE           00118700
&ZMS           SETC  '&ZMS "&ZCVAL"'                                    00118800
&ZMS           SETC  '&ZMS CANNOT BE USED.'                             00118900
&ZMS           SETC  '&ZMS NO POSITIONAL ARGUMENTS'                     00119000
               MNOTE 8,' &ZMS ARE ALLOWED.'                             00119100
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00119200
.ZGLISTX       ANOP  ,                                                  00119300
&ZASYSLNDX     SETA  0                                                  00119400
.*-------------------------------------------------------------------   00119500
.***AG.MF04 MF=(SLE)                                                    00119600
.ZGMFX         ANOP  ,           END OF FULL SYNTAX CHECK               00119700
.*******************************************************************    00119800
.***AE.ZMR01 NO CODE GENERATED IF ERRORS DETECTED                       00119900
.*******************************************************************    00120000
               AIF   (&ZMACRET NE 0).ZLX2       ERROR DETECTED          00120100
.*******************************************************************    00120200
.***AE.01  START OF IWMCQRY MACRO CODE                                  00120300
.*******************************************************************    00120400
               LCLC  &M0M0001                 NAME                      00120500
&M0M0001       SETC  '&XLABEL'                SET NAME                  00120600
               AIF   (K'&XLABEL NE 0).XLAB2                             00120700
&M0M0001       SETC  'M00M&SYSNDX'            DEFAULT NAME              00120800
.*                                                                      00120900
.XLAB2         ANOP  ,                                                  00121000
               AIF   ('&XMF' EQ 'L').XLAB3                              00121100
&M0M0001 DS    0H                             IWMCQRY-0                 00121200
.XLAB3         ANOP  ,                                                  00121300
.*******************************************************************    00121400
.***AE.PR01 PRINT CONTROLS, DEFAULT IS YES                              00121500
.*******************************************************************    00121600
              PUSH  PRINT                                               00121700
               AIF   ('&ZPRINT' NE 'NO').ZPRINTX  TURN PRINT ON         00121800
               PRINT OFF         ++ PR01                                00121900
               AGO   .ZPRNTXX                                           00122000
.ZPRINTX       PRINT ON                                                 00122100
.ZPRNTXX       ANOP  ,                                                  00122200
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00122300
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00122400
.********************************************************************   00122500
.***AL.L01 INTERNAL ARRAY TO PRODUCE FORMATTED CODE                     00122600
.********************************************************************   00122700
                      LCLA  &ZOPN          LIST INSTRUCTION INDEX       00122800
                      LCLA  &ZOPN1         INVOCATION INDEX             00122900
                      LCLC  &ZOPL(4095)    LABEL                        00123000
                      LCLC  &ZOPO(4095)    OPERATION                    00123100
                      LCLC  &ZOPV(4095)    VALUE                        00123200
                      LCLC  &ZOPD(4095)    DESCRIPTION                  00123300
.*                                                                      00123400
&ZOPN                 SETA  0              INITIAL INST INDEX VALUE     00123500
.******************************************************************     00123600
.***AL.L10 IWMCQRY FMT=LIST MF=S|L PARAMETERS                           00123700
.******************************************************************     00123800
                      AIF   ('&XMF' EQ 'L').ZLMFSL2                     00123900
                      AIF   ('&XMF' NE 'S').ZLMFSLX                     00124000
&XMFCTRL              SETC  '#Z'.'&SYSNDX'(1,4).'A'                     00124100
&XMFATTR              SETC  '0D'                                        00124200
.*                                                                      00124300
&ZOPN                 SETA  &ZOPN+1                                     00124400
&ZOPL(&ZOPN)          SETC  ' '                                         00124500
&ZOPO(&ZOPN)          SETC  'B'                                         00124600
&ZOPV(&ZOPN)          SETC  '&XMFCTRL.S'                                00124700
&ZOPD(&ZOPN)          SETC  '++ IWMCQRY ARG PARMS'                      00124800
.*                                                                      00124900
&ZOPN                 SETA  &ZOPN+1                                     00125000
&ZOPL(&ZOPN)          SETC  ' '                                         00125100
&ZOPO(&ZOPN)          SETC  'SPACE'                                     00125200
&ZOPV(&ZOPN)          SETC  '1'                                         00125300
&ZOPD(&ZOPN)          SETC  ' '                                         00125400
.*                                                                      00125500
.ZLMFSL2              ANOP  ,                                           00125600
.*-------------------------------------------------------------------   00125700
.***AM.L00  IWMCQRY FMT=LIST name                                       00125800
                      AIF   ('&XMF' NE 'L').ZLMFSL2M                    00125900
&ZOPN                 SETA &ZOPN+1                                      00126000
&ZOPL(&ZOPN)          SETC '&M0M0001'                                   00126100
&ZOPO(&ZOPN)          SETC 'EQU'                                        00126200
&ZOPV(&ZOPN)          SETC '&XMFCTRL'                                   00126300
&ZOPD(&ZOPN)          SETC '++ IWMCQRY NAME'                            00126400
.ZLMFSL2M             ANOP  ,                                           00126500
.*-------------------------------------------------------------------   00126600
.***AM.L01  IWMCQRY FMT=LIST PARAMETERS                                 00126700
&ZOPN                 SETA &ZOPN+1                                      00126800
&ZOPL(&ZOPN)          SETC '&XMFCTRL'                                   00126900
&ZOPO(&ZOPN)          SETC 'DS'                                         00127000
&ZOPV(&ZOPN)          SETC '&XMFATTR'                                   00127100
&ZOPD(&ZOPN)          SETC '++ IWMCQRY PARM LIST'                       00127200
.*-------------------------------------------------------------------   00127300
.***AM.L02 XVERSION XL1                                                 00127400
&ZOPN                 SETA &ZOPN+1                                      00127500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XVERSION'                         00127600
&ZOPO(&ZOPN)          SETC 'DS'                                         00127700
&ZOPV(&ZOPN)          SETC 'XL1'                                        00127800
&ZOPD(&ZOPN)          SETC '++ INPUT XVERSION'                          00127900
.*-------------------------------------------------------------------   00128000
.***AM.L09  XRSV0001 CL3                                                00128100
&ZOPN                 SETA &ZOPN+1                                      00128200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0001'                         00128300
&ZOPO(&ZOPN)          SETC 'DS'                                         00128400
&ZOPV(&ZOPN)          SETC 'CL3'                                        00128500
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV0001'                      00128600
.*-------------------------------------------------------------------   00128700
.***AM.L09 ADDR XANSAREA A                                              00128800
&ZOPN                 SETA &ZOPN+1                                      00128900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XANSAREA_ADDR'                    00129000
&ZOPO(&ZOPN)          SETC 'DS'                                         00129100
&ZOPV(&ZOPN)          SETC 'A'                                          00129200
&ZOPD(&ZOPN)          SETC '++ &ZXANSAREA ADDR XANSAREA'                00129300
.*-------------------------------------------------------------------   00129400
.***AM.L09 ALET XANSAREA F                                              00129500
&ZOPN                 SETA &ZOPN+1                                      00129600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XANSAREA_ALET'                    00129700
&ZOPO(&ZOPN)          SETC 'DS'                                         00129800
&ZOPV(&ZOPN)          SETC 'F'                                          00129900
&ZOPD(&ZOPN)          SETC '++ &ZXANSAREA ALET XANSAREA'                00130000
.*-------------------------------------------------------------------   00130100
.***AM.L09  XANSLEN F                                                   00130200
&ZOPN                 SETA &ZOPN+1                                      00130300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XANSLEN'                          00130400
&ZOPO(&ZOPN)          SETC 'DS'                                         00130500
&ZOPV(&ZOPN)          SETC 'F'                                          00130600
&ZOPD(&ZOPN)          SETC '++ &ZXANSLEN  XANSLEN'                      00130700
.*-------------------------------------------------------------------   00130800
.***AM.L09  XQUERYLEN F                                                 00130900
&ZOPN                 SETA &ZOPN+1                                      00131000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XQUERYLEN'                        00131100
&ZOPO(&ZOPN)          SETC 'DS'                                         00131200
&ZOPV(&ZOPN)          SETC 'F'                                          00131300
&ZOPD(&ZOPN)          SETC '++ &ZXQUERYLEN  XQUERYLEN'                  00131400
.*-------------------------------------------------------------------   00131500
.***AM.L09 ADDR XPOLICY_ID A                                            00131600
&ZOPN                 SETA &ZOPN+1                                      00131700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XPOLICY_ID_ADDR'                  00131800
&ZOPO(&ZOPN)          SETC 'DS'                                         00131900
&ZOPV(&ZOPN)          SETC 'A'                                          00132000
&ZOPD(&ZOPN)          SETC '++ &ZXPOLICY_ID ADDR XPOLICY_ID'            00132100
.*-------------------------------------------------------------------   00132200
.***AM.L09  XRSV0018 CL4                                                00132300
&ZOPN                 SETA &ZOPN+1                                      00132400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0018'                         00132500
&ZOPO(&ZOPN)          SETC 'DS'                                         00132600
&ZOPV(&ZOPN)          SETC 'CL4'                                        00132700
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV0018'                      00132800
.*-------------------------------------------------------------------   00132900
.***AM.L10 END OF IWMCQRY LIST PARAMETERS                               00133000
&ZOPN                 SETA &ZOPN+1                                      00133100
&ZOPL(&ZOPN)          SETC '&XMFCTRL.L'                                 00133200
&ZOPO(&ZOPN)          SETC 'EQU'                                        00133300
&ZOPV(&ZOPN)          SETC '*-&XMFCTRL'                                 00133400
&ZOPD(&ZOPN)          SETC '++ LENGTH OF PLIST'                         00133500
.*                                                                      00133600
&ZOPN                 SETA &ZOPN+1                                      00133700
&ZOPL(&ZOPN)          SETC ' '                                          00133800
&ZOPO(&ZOPN)          SETC 'SPACE'                                      00133900
&ZOPV(&ZOPN)          SETC '1'                                          00134000
&ZOPD(&ZOPN)          SETC ' '                                          00134100
.*-------------------------------------------------------------------   00134200
.***AL.L12 IWMCQRY FMT=LIST MF=S|L PARAMETERS                           00134300
                      AIF   ('&XMF' EQ 'L').ZMFLX  DONE IF MF=L         00134400
.*                                                                      00134500
&ZOPN                 SETA  &ZOPN+1                                     00134600
&ZOPL(&ZOPN)          SETC  '&XMFCTRL.S'                                00134700
&ZOPO(&ZOPN)          SETC  'DC'                                        00134800
&ZOPV(&ZOPN)          SETC  '0H''0'''                                   00134900
&ZOPD(&ZOPN)          SETC  '++ IWMCQRY ARG PARMS'                      00135000
.*                                                                      00135100
.ZLMFSLX              ANOP  ,                                           00135200
.*-------------------------------------------------------------------   00135300
.***AL.L13 SET ZPLLEN TO ITS APPROPRIATE VALUE                          00135400
&ZPLLEN               SETA 28                                           00135500
.*                                                                      00135600
.******************************************************************     00135700
.***AI.L01 IWMCQRY FMT=LIST FILL IN PARAMETER AREA                      00135800
.******************************************************************     00135900
                      ACTR  10000                                       00136000
&ZCVAL                SETC  'LA'           ASSUME XA MODE               00136100
                      AIF   ('&SYSASCE' EQ 'P').ZIMFXA  SYSSTATE PRI    00136200
&ZCVAL                SETC  'LAE'          XAX MODE                     00136300
.ZIMFXA               ANOP ,                                            00136400
.*                                                                      00136500
                      AIF   ('&XMFCTRL'(1,1) NE '(').ZIMFN2  NOT GPR    00136600
&ZCGPR                SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)  GET GPR         00136700
                      AIF   ('&ZCGPR' EQ 'GPR1').ZIMFNX                 00136800
                      AIF   ('&ZCGPR' EQ 'GPR01').ZIMFNX                00136900
                      AIF   ('&ZCGPR' EQ 'REG1').ZIMFNX                 00137000
                      AIF   ('&ZCGPR' EQ 'REG01').ZIMFNX                00137100
                      AIF   ('&ZCGPR' EQ 'R1').ZIMFNX                   00137200
                      AIF   ('&ZCGPR' EQ '1').ZIMFNX                    00137300
                      AIF   ('&ZCGPR' EQ '01').ZIMFNX                   00137400
&ZOPN                 SETA  &ZOPN+1                                     00137500
&ZOPL(&ZOPN)          SETC  ' '                                         00137600
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00137700
&ZOPV(&ZOPN)          SETC  '1,0(,&ZCGPR)'                              00137800
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00137900
                      AGO   .ZIMFNX                                     00138000
.*                                                                      00138100
.ZIMFN2               ANOP ,                                            00138200
&ZOPN                 SETA  &ZOPN+1                                     00138300
&ZOPL(&ZOPN)          SETC  ' '                                         00138400
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00138500
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL'                                00138600
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00138700
.ZIMFNX               ANOP ,                                            00138800
.********************************************************************   00138900
.***AI.L02 IWMCQRY FMT=LIST INITIALIZE PARAMETER AREA                   00139000
.********************************************************************   00139100
.***AI.L03 MF=(SLE)                                                     00139200
                      AIF   ('&XMF' EQ 'L').ZIMFLX                      00139300
.*                                                                      00139400
&ZOPN                 SETA  &ZOPN+1                                     00139500
&ZOPL(&ZOPN)          SETC  ' '                                         00139600
&ZOPO(&ZOPN)          SETC  'XC'                                        00139700
&ZOPV(&ZOPN)          SETC  '0(&ZPLLEN,1),0(1)'                         00139800
&ZOPD(&ZOPN)          SETC  '++ INITIALIZE'                             00139900
.ZIMFLX               ANOP  ,                                           00140000
.*-------------------------------------------------------------------   00140100
.***AI.L19 ADDR XANSAREA A                                              00140200
                      AIF   ('&ZXANSAREA' EQ '').ZI3H                   00140300
&ZCLNG                SETC  '&XANSAREA'                                 00140400
&ZCGPR                SETC  '14'                                        00140500
         AIF   ('&XANSAREA'(1,1) EQ '(').ZI3F  IN GPR                   00140600
.*                                                                      00140700
&ZOPN                 SETA  &ZOPN+1                                     00140800
&ZOPL(&ZOPN)          SETC  ' '                                         00140900
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00141000
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00141100
&ZOPD(&ZOPN)          SETC  '++ &ZXANSAREA XANSAREA'                    00141200
.*                                                                      00141300
                      AGO   .ZI3G                                       00141400
.*                                                                      00141500
.ZI3F                 ANOP  ,                                           00141600
&ZCGPR   SETC  '&XANSAREA'(2,K'&XANSAREA-2)                             00141700
.*                                                                      00141800
.ZI3G                 ANOP  ,                                           00141900
.*                                                                      00142000
&ZOPN                 SETA  &ZOPN+1                                     00142100
&ZOPL(&ZOPN)          SETC  ' '                                         00142200
&ZOPO(&ZOPN)          SETC  'ST'                                        00142300
&ZOPV(&ZOPN)          SETC  '&ZCGPR,4(,1)'                              00142400
&ZOPD(&ZOPN)          SETC  '++ &ZXANSAREA XANSAREA'                    00142500
.*                                                                      00142600
.ZI3H                 ANOP  ,                                           00142700
.*-------------------------------------------------------------------   00142800
.***AI.L23 ALET XANSAREA F                                              00142900
         AIF   ('&ZXANSAREA' EQ '').ZI4G                                00143000
         AIF   ('&SYSASCE' EQ 'P').ZI4G    SYSSTATE PRIMARY             00143100
&ZCLNG                SETC  '&XANSAREA'                                 00143200
         AIF   ('&XANSAREA'(1,1) EQ '(').ZI4E  IN AR                    00143300
.*                                                                      00143400
&ZCGPR                SETC  '14'                                        00143500
                      AGO   .ZI4F                                       00143600
.*                                                                      00143700
.ZI4E                 ANOP  ,                                           00143800
&ZCGPR   SETC  '&XANSAREA'(2,K'&XANSAREA-2)                             00143900
.*                                                                      00144000
.ZI4F                 ANOP  ,                                           00144100
.*                                                                      00144200
&ZOPN                 SETA  &ZOPN+1                                     00144300
&ZOPL(&ZOPN)          SETC  ' '                                         00144400
&ZOPO(&ZOPN)          SETC  'STAM'                                      00144500
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCGPR,8(1)'                        00144600
&ZOPD(&ZOPN)          SETC  '++ &ZXANSAREA XANSAREA'                    00144700
.*                                                                      00144800
.ZI4G                 ANOP  ,                                           00144900
.*-------------------------------------------------------------------   00145000
.***AI.L25  XANSLEN F                                                   00145100
                      AIF   ('&ZXANSLEN' EQ '').ZI5E                    00145200
                      AIF   ('&ZXANSLEN' EQ 'OUTPUT').ZI5E              00145300
&ZCGPR                SETC  '&XANSLEN'                                  00145400
.*                                                                      00145500
                      AIF   ('&XANSLEN'(1,1) NE '(').ZI5B               00145600
&ZCGPR   SETC  '0('.'&XANSLEN'(2,K'&XANSLEN-2).')'                      00145700
                      AGO   .ZI5D                                       00145800
.ZI5B                 ANOP  ,                                           00145900
.*                                                                      00146000
&ZC                   SETC  '&XANSLEN'(1,1)                             00146100
                      AIF   (T'&ZC NE 'N').ZI5D                         00146200
&ZC                   SETC  '&XANSLEN'                                  00146300
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI5D                00146400
&ZCGPR                SETC  '=FL4''&XANSLEN'''                          00146500
.*                                                                      00146600
.ZI5D                 ANOP  ,                                           00146700
.*                                                                      00146800
&ZOPN                 SETA  &ZOPN+1                                     00146900
&ZOPL(&ZOPN)          SETC  ' '                                         00147000
&ZOPO(&ZOPN)          SETC  'MVC'                                       00147100
&ZOPV(&ZOPN)          SETC  '12(4,1),&ZCGPR'                            00147200
&ZOPD(&ZOPN)          SETC  '++ &ZXANSLEN XANSLEN'                      00147300
.*                                                                      00147400
.ZI5E                 ANOP  ,                                           00147500
.*-------------------------------------------------------------------   00147600
.***AI.L19 ADDR XPOLICY_ID A                                            00147700
                      AIF   ('&ZXPOLICY_ID' EQ '').ZI7H                 00147800
&ZCLNG                SETC  '&XPOLICY_ID'                               00147900
&ZCGPR                SETC  '14'                                        00148000
         AIF   ('&XPOLICY_ID'(1,1) EQ '(').ZI7F  IN GPR                 00148100
.*                                                                      00148200
&ZOPN                 SETA  &ZOPN+1                                     00148300
&ZOPL(&ZOPN)          SETC  ' '                                         00148400
&ZOPO(&ZOPN)          SETC  'LA'                                        00148500
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00148600
&ZOPD(&ZOPN)          SETC  '++ &ZXPOLICY_ID XPOLICY_ID'                00148700
.*                                                                      00148800
                      AGO   .ZI7G                                       00148900
.*                                                                      00149000
.ZI7F                 ANOP  ,                                           00149100
&ZCGPR   SETC  '&XPOLICY_ID'(2,K'&XPOLICY_ID-2)                         00149200
.*                                                                      00149300
.ZI7G                 ANOP  ,                                           00149400
.*                                                                      00149500
&ZOPN                 SETA  &ZOPN+1                                     00149600
&ZOPL(&ZOPN)          SETC  ' '                                         00149700
&ZOPO(&ZOPN)          SETC  'ST'                                        00149800
&ZOPV(&ZOPN)          SETC  '&ZCGPR,20(,1)'                             00149900
&ZOPD(&ZOPN)          SETC  '++ &ZXPOLICY_ID XPOLICY_ID'                00150000
.*                                                                      00150100
.ZI7H                 ANOP  ,                                           00150200
.*-------------------------------------------------------------------   00150300
&ZOPN1                SETA &ZOPN                                        00150400
.*******************************************************************    00150500
.***  PROCESS IWMCQRY OUTPUT PARAMETERS                                 00150600
.*******************************************************************    00150700
                      ACTR  10000                                       00150800
.*------------------------------------------------------------------    00150900
.***AO.L02 XQUERYLEN F                                                  00151000
         AIF   ('&ZXQUERYLEN' EQ 'OUTPUT').ZO6A  OUTPUT                 00151100
         AIF   ('&ZXQUERYLEN' NE 'INOUT').ZO6C  INOUT                   00151200
.ZO6A    AIF   ('&XQUERYLEN'(1,1) NE '(').ZO6B  ADDR IN GPR             00151300
&ZCGPR   SETC  '&XQUERYLEN'(2,K'&XQUERYLEN-2)                           00151400
&ZOPN                 SETA  &ZOPN+1                                     00151500
&ZOPL(&ZOPN)          SETC  ' '                                         00151600
&ZOPO(&ZOPN)          SETC  'MVC'                                       00151700
&ZOPV(&ZOPN)          SETC  '0(4,&ZCGPR),16(1)'                         00151800
&ZOPD(&ZOPN)          SETC  '++ XQUERYLEN F'                            00151900
                      AGO   .ZO6C                                       00152000
.*                                                                      00152100
.ZO6B                 ANOP  ,                                           00152200
&ZAWRK   SETA  K'&XQUERYLEN                                             00152300
         AIF   ('&XQUERYLEN'(&ZAWRK,1) NE ')').ZO6G                     00152400
&ZN      SETA  2                                                        00152500
.ZO6H    ANOP                                                           00152600
         AIF   (&ZN GE &ZAWRK).ZO6G                                     00152700
         AIF   ('&XQUERYLEN'(&ZN,1) NE '(').ZO6I                        00152800
&ZC      SETC  '&XQUERYLEN'(1,&ZN).'4'.','                              00152900
&ZC      SETC  '&ZC'.'&XQUERYLEN'(&ZN+1,&ZAWRK-&ZN).',16(1)'            00153000
         AGO   .ZO6J                                                    00153100
.ZO6I    ANOP                                                           00153200
&ZN      SETA  &ZN+1                                                    00153300
         AGO   .ZO6H                                                    00153400
.ZO6G    ANOP                                                           00153500
&ZC      SETC  '&XQUERYLEN.(4),16(1)'                                   00153600
.ZO6J    ANOP                                                           00153700
&ZOPN                 SETA  &ZOPN+1                                     00153800
&ZOPL(&ZOPN)          SETC  ' '                                         00153900
&ZOPO(&ZOPN)          SETC  'MVC'                                       00154000
&ZOPV(&ZOPN)          SETC  '&ZC'                                       00154100
&ZOPD(&ZOPN)          SETC  '++ XQUERYLEN F'                            00154200
.ZO6C                 ANOP  ,                                           00154300
.*******************************************************************    00154400
.***AO.X02  RETURN CODE PROCESSING                                      00154500
.*******************************************************************    00154600
                      AIF   (N'&RETCODE LE 0).ZMRETX                    00154700
                      AIF   ('&XRETCODE'(1,1) EQ '(').ZMRET2            00154800
                      AIF   ('&XRETCODE' EQ 'GPR15').ZMRETX             00154900
                      AIF   ('&XRETCODE' EQ 'REG15').ZMRETX             00155000
                      AIF   ('&XRETCODE' EQ 'R15').ZMRETX               00155100
                      AIF   ('&XRETCODE' EQ '15').ZMRETX                00155200
&ZOPN                 SETA  &ZOPN+1                                     00155300
&ZOPL(&ZOPN)          SETC  ' '                                         00155400
&ZOPO(&ZOPN)          SETC  'ST'                                        00155500
&ZOPV(&ZOPN)          SETC  '15,&XRETCODE'                              00155600
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00155700
                      AGO   .ZMRETX                                     00155800
.*                                                                      00155900
.ZMRET2               ANOP  ,                                           00156000
&ZCGPR                SETC  '&XRETCODE'(2,K'&XRETCODE-2)                00156100
                      AIF   ('&ZCGPR' EQ 'GPR15').ZMRETX                00156200
                      AIF   ('&ZCGPR' EQ 'REG15').ZMRETX                00156300
                      AIF   ('&ZCGPR' EQ 'R15').ZMRETX                  00156400
                      AIF   ('&ZCGPR' EQ '15').ZMRETX                   00156500
&ZOPN                 SETA  &ZOPN+1                                     00156600
&ZOPL(&ZOPN)          SETC  ' '                                         00156700
&ZOPO(&ZOPN)          SETC  'LR'                                        00156800
&ZOPV(&ZOPN)          SETC  '&ZCGPR,15'                                 00156900
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00157000
.ZMRETX               ANOP  ,                                           00157100
.*******************************************************************    00157200
.***AO.X03  REASON CODE PROCESSING                                      00157300
.*******************************************************************    00157400
                      AIF   (N'&RSNCODE LE 0).ZMRSNX                    00157500
                      AIF   ('&XRSNCODE'(1,1) EQ '(').ZMRSN2            00157600
                      AIF   ('&XRSNCODE' EQ 'GPR0').ZMRSNX              00157700
                      AIF   ('&XRSNCODE' EQ 'GPR00').ZMRSNX             00157800
                      AIF   ('&XRSNCODE' EQ 'REG0').ZMRSNX              00157900
                      AIF   ('&XRSNCODE' EQ 'REG00').ZMRSNX             00158000
                      AIF   ('&XRSNCODE' EQ 'R0').ZMRSNX                00158100
                      AIF   ('&XRSNCODE' EQ '0').ZMRSNX                 00158200
                      AIF   ('&XRSNCODE' EQ '00').ZMRSNX                00158300
&ZOPN                 SETA  &ZOPN+1                                     00158400
&ZOPL(&ZOPN)          SETC  ' '                                         00158500
&ZOPO(&ZOPN)          SETC  'ST'                                        00158600
&ZOPV(&ZOPN)          SETC  '0,&XRSNCODE'                               00158700
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00158800
                      AGO   .ZMRSNX                                     00158900
.*                                                                      00159000
.ZMRSN2               ANOP  ,                                           00159100
&ZCGPR                SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                00159200
                      AIF   ('&ZCGPR' EQ 'GPR0').ZMRSNX                 00159300
                      AIF   ('&ZCGPR' EQ 'GPR00').ZMRSNX                00159400
                      AIF   ('&ZCGPR' EQ 'REG0').ZMRSNX                 00159500
                      AIF   ('&ZCGPR' EQ 'REG00').ZMRSNX                00159600
                      AIF   ('&ZCGPR' EQ 'R0').ZMRSNX                   00159700
                      AIF   ('&ZCGPR' EQ '0').ZMRSNX                    00159800
                      AIF   ('&ZCGPR' EQ '00').ZMRSNX                   00159900
&ZOPN                 SETA  &ZOPN+1                                     00160000
&ZOPL(&ZOPN)          SETC  ' '                                         00160100
&ZOPO(&ZOPN)          SETC  'LR'                                        00160200
&ZOPV(&ZOPN)          SETC  '&ZCGPR,0'                                  00160300
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00160400
.ZMRSNX               ANOP  ,                                           00160500
.*******************************************************************    00160600
.***AO.X04  LABEL FOR MF=L PROCESSING                                   00160700
.*******************************************************************    00160800
.ZMFLX                ANOP  ,              MF=L PROCESSING              00160900
.*******************************************************************    00161000
.***AO.X05  FORMAT GENERATED INSTRUCTIONS                               00161100
.*******************************************************************    00161200
                      ACTR  10000                                       00161300
.*                                                                      00161400
                      LCLA  &ZLC           COLUMN POSITION              00161500
                      LCLA  &ZOPX          LIST TABLE INDEX             00161600
                      LCLC  &ZLL           LABEL                        00161700
                      LCLC  &ZLOP          OPERATION                    00161800
                      LCLC  &ZLV           VALUE                        00161900
                      LCLC  &ZLD           DESCRIPTION                  00162000
.*                                                                      00162100
&ZOPX                 SETA  1                                           00162200
.ZL2                  AIF   (&ZOPX GT &ZOPN1).ZLX  B IF DONE            00162300
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00162400
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00162500
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00162600
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00162700
                      AIF   (K'&ZLD LE 0).ZL5                           00162800
&ZLC                  SETA  35             COMMENT COLUMN               00162900
                      AIF   ('&ZLD'(1,1) NE '*').ZL3                    00163000
&ZLC                  SETA  33             COMMMENT COLUMN              00163100
.ZL3                  AIF   (K'&ZLV GE &ZLC-16-1).ZL4                   00163200
&ZLV                  SETC  '&ZLV'.' '                                  00163300
                      AGO   .ZL3                                        00163400
.*                                                                      00163500
.ZL4                  ANOP  ,                                           00163600
&ZLV                  SETC  '&ZLV'.' '                                  00163700
.ZL5                  ANOP  ,                                           00163800
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00163900
.*                                                                      00164000
&ZLL     &ZLOP &ZLV                                                     00164100
.*                                                                      00164200
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00164300
                      AGO   .ZL2           CONTINUE LOOPING             00164400
.*                                                                      00164500
.ZLX                  ANOP  ,                                           00164600
                      AIF   ('&XMF' EQ 'L').ZLINKX  MF=L                00164700
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00164800
         L     14,16(0,0)              GET CVT ADDRESS                  00164900
         AIF   ('&SYSASCE' EQ 'P').NOAR    CHECK FOR AR MODE CALLERS    00165000
         LAE   14,0(14,0)              CLEAR AR 14                      00165100
.NOAR    ANOP                                                           00165200
         TM    CVTOSLV1-CVT(14),X'10'      TEST FOR SP520 RELEASE       00165300
         BO    WLM&SYSNDX              BRANCH WHEN WLM IS PRESENT       00165400
         LA    0,IWMRSNCODENOPOLMGT    SET REASON CODE = NO WLM         00165500
         LA    15,IWMRETCODEWARNING    SET WARNING RETURN CODE          00165600
         B     END&SYSNDX              BRANCH TO END LABEL              00165700
WLM&SYSNDX DS    0H                    BRANCH LABEL FOR WLM PRESENT     00165800
         L     14,772(14,0)            GET SFT ADDRESS                  00165900
         L     14,380(14,0)            GET LX FOR SERVICE ROUTINE       00166000
         LA    15,33                   GET EX FOR SERVICE ROUTINE       00166100
         OR    14,15                   GET PC NUMBER                    00166200
         PC    0(14)                                                    00166300
END&SYSNDX DS    0H                    END LABEL                        00166400
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00166500
.ZLINKX               ANOP  ,                                           00166600
.*******************************************************************    00166700
.***AP.X01  FORMAT GENERATED CODE                                       00166800
.ZL21                 AIF   (&ZOPX GT &ZOPN).ZLX1  B IF DONE            00166900
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00167000
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00167100
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00167200
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00167300
                      AIF   (K'&ZLD LE 0).ZL51                          00167400
&ZLC                  SETA  35             COMMENT COLUMN               00167500
                      AIF   ('&ZLD'(1,1) NE '*').ZL31                   00167600
&ZLC                  SETA  33             COMMENT COLUMN               00167700
.ZL31                 AIF   (K'&ZLV GE &ZLC-16-1).ZL41                  00167800
&ZLV                  SETC  '&ZLV'.' '                                  00167900
                      AGO   .ZL31                                       00168000
.*                                                                      00168100
.ZL41                 ANOP  ,                                           00168200
&ZLV                  SETC  '&ZLV'.' '                                  00168300
.ZL51                 ANOP  ,                                           00168400
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00168500
.*                                                                      00168600
&ZLL     &ZLOP &ZLV                                                     00168700
.*                                                                      00168800
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00168900
                      AGO   .ZL21          CONTINUE LOOPING             00169000
.*                                                                      00169100
.ZLX1                 ANOP  ,                                           00169200
.*******************************************************************    00169300
.***AP.X02  END OF IWMCQRY MACRO                                        00169400
&ZIWMCQRY             SETC  'YES'          SET IWMCQRY USED             00169500
         POP   PRINT                                                    00169600
*                                            IWMCQRY-0                  00169700
         SPACE 1                                                        00169800
.ZLX2                 ANOP  ,                                           00169900
         MEND                                                           00170000
**********************************************************************/ 00170100
*/*PB.OC01 INVOKE MACRO---------------------------------------------*/  00170200
*%IWMCQRY: MACRO KEYS(ANSAREA,ANSLEN,QUERYLEN,POLICY_ID,RETCODE,        00170300
*                 RSNCODE,PLISTVER,MF);                                 00170400
*  ANS('?'||MACLABEL||' '||'IWMCQRYP '||MACLIST||                       00170500
*         ' '||MACKEYS||';') COL(MACLMAR);                              00170600
*%END IWMCQRY;                                                          00170700
