*/**** START OF SPECIFICATIONS **************************************** 00000100
*                                                                     * 00000200
*                                                                     * 00000300
*01* MACRO NAME:  IXZXIXMB                              -93/05/10-<1> * 00000400
*                                                                     * 00000500
*                                                                     * 00000600
*01* DESCRIPTIVE NAME:  Create JES XCF Mailbox                        * 00000700
*                                                                     * 00000800
*01* PROPRIETARY STATEMENT:                                           * 00000900
*                                                                     * 00001000
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 00001100
*     THIS MACRO IS "RESTRICTED MATERIALS OF IBM"                     * 00001200
*     5645-001 (C) COPYRIGHT IBM CORP. 1996, 1997                     * 00001300
*                                                                     * 00001400
* STATUS= HBB6603                                                     * 00001500
*                                                                     * 00001600
*                                                                     * 00001700
*                                                                     * 00001800
*01* FUNCTION:                                                        * 00001900
*                                                                     * 00002000
*                                                                     * 00002100
*      Purpose:  IXZXIXMB creates an association between a JES        * 00002200
*      Dispatchable Unit (JES2 PCE or JES3 FCT) and the JES Common    * 00002300
*      XCF task. This association provides the JES Common XCF task    * 00002400
*      with a location to hold messages until the JDU (JES            * 00002500
*      Dispatchable Unit) is ready to receive them. The association   * 00002600
*      indicates, to the JES XCF Task, what control information this  * 00002700
*      JDU wishes to receive.  This control information contains the  * 00002800
*      status of other members or systems in the JESPlex.             * 00002900
*                                                                     * 00003000
*      IBM use of the interface:  IBM uses this macro to define       * 00003100
*      receivers of information and control records gathered by JES   * 00003200
*      software components. The receivers use this information to     * 00003300
*      initiate actions, or record the effects that the message       * 00003400
*      represents.                                                    * 00003500
*                                                                     * 00003600
*      Customer use of the interface:  Installation modifications     * 00003700
*      that have software components that are active on multiple JES  * 00003800
*      members have the requirement to communicate. The macro service * 00003900
*      provides the installation the ability to define a listener to  * 00004000
*      messages or control information, which allows the installation * 00004100
*      modifications to react to events occurring on other members.   * 00004200
*                                                                     * 00004300
*      CDPI Implications:                                             * 00004400
*                                                                     * 00004500
*      This macro is a General Use Programming Interface.  It is      * 00004600
*      intended to be used as part of JES exits and JES3 dynamic      * 00004700
*      support programs. The macro is only used in JES environments.  * 00004800
*                                                                     * 00004900
*      EEC Implications:  This macro is not an EEC interface.         * 00005000
*                                                                     * 00005100
*      Related Macros:  The following macros are required in order to * 00005200
*      use this macro service:                                        * 00005300
*                                                                     * 00005400
*                                                                     * 00005500
*      o   JES2:                                                      * 00005600
*                                                                     * 00005700
*                                                                     * 00005800
*          -   $MODULE - must be included in the module and must have * 00005900
*              been invoked before the IXZXIXMB macro service.        * 00006000
*                                                                     * 00006100
*                                                                     * 00006200
*                                                                     * 00006300
*      o   JES3:                                                      * 00006400
*                                                                     * 00006500
*                                                                     * 00006600
*          -   IATYMOD - must be included in the module and must have * 00006700
*              been invoked before the IXZXIXMB macro service.        * 00006800
*                                                                     * 00006900
*                                                                     * 00007000
*                                                                     * 00007100
*                                                                     * 00007200
*                                                                     * 00007300
*      The following macros are used with this macro to manage the    * 00007400
*      transport of data and monitoring of system events:             * 00007500
*                                                                     * 00007600
*                                                                     * 00007700
*      o   IXZXIXMC - Clear a mailbox                                 * 00007800
*                                                                     * 00007900
*      o   IXZXIXMD - Delete XCF Mailbox                              * 00008000
*                                                                     * 00008100
*      o   IXZXIXSM - Send a message to a mailbox                     * 00008200
*                                                                     * 00008300
*      o   IXZXIXRM - Receive a message from a mailbox                * 00008400
*                                                                     * 00008500
*      o   IXZXIXAC - Acknowledge receive of a message                * 00008600
*                                                                     * 00008700
*      o   IXZXIXAT - Attach to XCF subcomponent                      * 00008800
*                                                                     * 00008900
*      o   IXZXIXDT - Detach from XCF subcomponent                    * 00009000
*                                                                     * 00009100
*      o   IXZXIXIF - Obtain information about the XCF group          * 00009200
*                                                                     * 00009300
*                                                                     * 00009400
*                                                                     * 00009500
*      Requirements                                                   * 00009600
*                                                                     * 00009700
*                                                                     * 00009800
*      o   Authorization: Supervisor state - key 0 or 1               * 00009900
*                                                                     * 00010000
*      o   Dispatchable unit mode: Task                               * 00010100
*                                                                     * 00010200
*      o   Cross memory mode: PASN = HASN = SASN                      * 00010300
*                                                                     * 00010400
*      o   AMODE: 31                                                  * 00010500
*                                                                     * 00010600
*      o   ASC mode: Primary                                          * 00010700
*                                                                     * 00010800
*      o   Serialization: Enabled for interrupts                      * 00010900
*                                                                     * 00011000
*      o   Locks:  This service assumes no locks are held by the      * 00011100
*          user.                                                      * 00011200
*                                                                     * 00011300
*      o   Control Parameters:  None                                  * 00011400
*                                                                     * 00011500
*      o   JES Environments:                                          * 00011600
*                                                                     * 00011700
*                                                                     * 00011800
*          -   JES2 Main Task                                         * 00011900
*                                                                     * 00012000
*          -   JES3 Main Task                                         * 00012100
*                                                                     * 00012200
*          -   JES2 Subtasks                                          * 00012300
*                                                                     * 00012400
*          -   JES3 Subtasks                                          * 00012500
*                                                                     * 00012600
*          -   JES3 FSS                                               * 00012700
*                                                                     * 00012800
*                                                                     * 00012900
*                                                                     * 00013000
*                                                                     * 00013100
*                                                                     * 00013200
*      Register Information                                           * 00013300
*                                                                     * 00013400
*                                                                     * 00013500
*      o   Input registers                                            * 00013600
*                                                                     * 00013700
*                                                                     * 00013800
*          -   R0-R15 - Undefined                                     * 00013900
*                                                                     * 00014000
*                                                                     * 00014100
*                                                                     * 00014200
*      o   Output registers                                           * 00014300
*                                                                     * 00014400
*                                                                     * 00014500
*          -   R0 - Reason code                                       * 00014600
*                                                                     * 00014700
*          -   R1 - Unpredictable                                     * 00014800
*                                                                     * 00014900
*          -   R2-R13 - Unchanged                                     * 00015000
*                                                                     * 00015100
*          -   R14 - Unpredictable                                    * 00015200
*                                                                     * 00015300
*          -   R15 - Return code                                      * 00015400
*                                                                     * 00015500
*                                                                     * 00015600
*                                                                     * 00015700
*                                                                     * 00015800
*                                                                     * 00015900
*      Programming Notes/Requirements                                 * 00016000
*                                                                     * 00016100
*      IBM programming notes                                          * 00016200
*                                                                     * 00016300
*                                                                     * 00016400
*      1.  The programmer must supply a mailbox name. A mailbox name  * 00016500
*          is a 1 to 16 byte identifier that is used to identify      * 00016600
*          where data is to be sent. This identifier is used to       * 00016700
*          inform the JES XCF common subcomponent where to deliver    * 00016800
*          messages and whom to notify of the delivery.               * 00016900
*                                                                     * 00017000
*      2.  The programmer must also determine if system events are to * 00017100
*          be monitored. If so, the specification of "SYSEVENT=YES"   * 00017200
*          will cause Event records to be placed in the mailbox when  * 00017300
*          system events occur.                                       * 00017400
*                                                                     * 00017500
*                                                                     * 00017600
*                                                                     * 00017700
*      Customer Programming notes                                     * 00017800
*                                                                     * 00017900
*                                                                     * 00018000
*      1.  The programmer must supply a mailbox name. A mailbox name  * 00018100
*          is a 1 to 16 byte identifier that is used to identify      * 00018200
*          where data is to send.                                     * 00018300
*                                                                     * 00018400
*          RECOMMENDATION:  Use a two part mailbox name, the first 8  * 00018500
*          bytes should represent the installation or product that is * 00018600
*          using the mailbox function. The second 8 bytes should      * 00018700
*          represent the function that is being provided.  IBM will   * 00018800
*          use mailbox names begining with SYSJES.                    * 00018900
*                                                                     * 00019000
*          Example:                                                   * 00019100
*                                                                     * 00019200
*          Assume that company XYZ is producing a modification to     * 00019300
*          provide an accounting function. The function creates a     * 00019400
*          mailbox on a single system in the JESPlex, all the other   * 00019500
*          systems send data to the central system where it gets      * 00019600
*          logged. The recommended mailbox name that the installation * 00019700
*          should create should be:                                   * 00019800
*                                                                     * 00019900
*                  XYZ_____ACCOUNT                                    * 00020000
*                                                                     * 00020100
*                                                                     * 00020200
*      2.  The programmer must determine if system events are to be   * 00020300
*          monitored. This is desirable if an installation            * 00020400
*          modification takes action upon the restart or failure of   * 00020500
*          the JES component on another member of the Sysplex.. If    * 00020600
*          monitoring is required then specify SYSEVENT=YES.          * 00020700
*                                                                     * 00020800
*          RECOMMENDATION:  Only request event notification when      * 00020900
*          necessary. It is not necessary when only sending and       * 00021000
*          receiving messages.                                        * 00021100
*                                                                     * 00021200
*      3.  Once the mailbox is created, it is available to receive    * 00021300
*          mail until one of the following is done.                   * 00021400
*                                                                     * 00021500
*                                                                     * 00021600
*          a.  The system on which the JES member resides is IPLed.   * 00021700
*                                                                     * 00021800
*          b.  The member that is associated with the mailbox, breaks * 00021900
*              its association with the XCF group, via IXZXIXDT macro * 00022000
*              service.                                               * 00022100
*                                                                     * 00022200
*          c.  The mailbox is deleted, via the IXZXIXMD macro         * 00022300
*              service.                                               * 00022400
*                                                                     * 00022500
*                                                                     * 00022600
*                                                                     * 00022700
*          If the mailbox being created is associated with the JES    * 00022800
*          XCF group, the IXZXIXDT is not issued as part of the JES   * 00022900
*          recycle. Each JDU decides whether to process messages from * 00023000
*          the previous JES instance, or whether to clear the mailbox * 00023100
*          before beginning (via the IXZXIXMC macro service). So if   * 00023200
*          an installation modification is using the JES XCF group,   * 00023300
*          they need to be aware of whether JES has been recycled and * 00023400
*          take the appropriate action.                               * 00023500
*                                                                     * 00023600
*                                                                     * 00023700
*                                                                     * 00023800
*      Restrictions                                                   * 00023900
*                                                                     * 00024000
*                                                                     * 00024100
*      o   Cannot be issued until JES initialization has attached and * 00024200
*          initializes the JES XCF common subcomponent.               * 00024300
*                                                                     * 00024400
*                                                                     * 00024500
*                                                                     * 00024600
*      Performance Implications:  This macro has minimal performance  * 00024700
*      impact, the service routine causes a subtasked function to be  * 00024800
*      performed.                                                     * 00024900
*                                                                     * 00025000
*01* EXTERNAL CLASSIFICATION:   GUPI                                  * 00025100
*                                                                     * 00025200
*01* END OF EXTERNAL CLASSIFICATION:                                  * 00025300
*                                                                     * 00025400
*01* SYNTAX:                                                          * 00025500
*                                                                     * 00025600
*[xlabel]  IXZXIXMB     MBOXNAME=xmboxname                            * 00025700
*                      ,POSTXIT=xpostxit                              * 00025800
*                      ,POSTDATA=xpostdata                            * 00025900
*                     [,POSTALET=xpostalet|NULL]                    * 00026000
*                      ,GROUPTOKEN=xgrouptoken                        * 00026100
*                     [,SYSEVENT=NO|YES]                            * 00026200
*                     [,RTNCODE=xrtncode]                             * 00026300
*                     [,RSNCODE=xrsncode]                             * 00026400
*                     [,PLISTVER=xplistver|IMPLIED_VERSION]         * 00026500
*                    [,MF=S]                                         * 00026600
*                    [,MF=(L,xmfctrl,xmfattr|0D)]                  * 00026700
*                    [,MF=(E,xmfctrl,COMPLETE)]                    * 00026800
*                                                                     * 00026900
*                                                                     * 00027000
*      Where:                                                         * 00027100
*                                                                     * 00027200
*                                                                     * 00027300
*      [xlabel]                                                       * 00027400
*          is an optional symbol, starting in column 1, that is the   * 00027500
*          name on the IXZXIXMB macro invocation.  The name must      * 00027600
*          conform to the rules for an ordinary assembler language    * 00027700
*          symbol.                                                    * 00027800
*          DEFAULT: No name.                                          * 00027900
*                                                                     * 00028000
*                                                                     * 00028100
*                                                                     * 00028200
*                                                                     * 00028300
*      MBOXNAME=xmboxname                                             * 00028400
*          is the name (RS-type), or address in register (2)-(12), of * 00028500
*          a required 16 character input that contains a mailbox      * 00028600
*          name. A mailbox is an anchor that is used by the JES       * 00028700
*          Common XCF Task to save messages that are being sent to or * 00028800
*          received from another member in the JES XCF Group. The     * 00028900
*          name provided is used as an identification token for       * 00029000
*          gaining access to the anchor.  The name must be unique on  * 00029100
*          the XCF member where the IXZXIXMB is issued.               * 00029200
*                                                                     * 00029300
*                                                                     * 00029400
*                                                                     * 00029500
*                                                                     * 00029600
*      POSTXIT=xpostxit                                               * 00029700
*          is the name (RS-type), or address in register (2)-(12), of * 00029800
*          a required 4 byte input that contains the address of the   * 00029900
*          POST exit routine. A POST exit routine is a piece of code  * 00030000
*          provided by the caller that gets control whenever a        * 00030100
*          message is placed in the mailbox. This allows the caller   * 00030200
*          to post a routine to retrieve the message from the mailbox * 00030300
*          and process its contents. The POST routine should be used  * 00030400
*          only to post the necessary routine.  The exit routine will * 00030500
*          get control, running under the JES XCF TASK.  The JES XCF  * 00030600
*          TASK does not have access to any of the JES main task      * 00030700
*          services.                                                  * 00030800
*                                                                     * 00030900
*                                                                     * 00031000
*                                                                     * 00031100
*                                                                     * 00031200
*      POSTDATA=xpostdata                                             * 00031300
*          is the name (RS-type), or address in register (2)-(12), of * 00031400
*          a required 4 byte input that contains the address that     * 00031500
*          points to data that the post exit needs to process post    * 00031600
*          requests.  The data is created by the creator of the       * 00031700
*          mailbox and a pointer is returned in the parameter list    * 00031800
*          passed to the POSTEXIT. The data maybe in a data space or  * 00031900
*          another address space by providing an ALET via the         * 00032000
*          POSTALET parameter.                                        * 00032100
*                                                                     * 00032200
*                                                                     * 00032300
*                                                                     * 00032400
*                                                                     * 00032500
*      [POSTALET=xpostalet|NULL]                                    * 00032600
*          is the name (RS-type), or address in register (2)-(12), of * 00032700
*          an optional fullword input that contains the ALET which    * 00032800
*          qualifies the POSTDATA keyword.                            * 00032900
*          DEFAULT: NULL the data resides the primary address space.  * 00033000
*                                                                     * 00033100
*                                                                     * 00033200
*                                                                     * 00033300
*                                                                     * 00033400
*      GROUPTOKEN=xgrouptoken                                         * 00033500
*          is the name (RS-type), or address in register (2)-(12), of * 00033600
*          a required fullword input that contains the JES XCF group  * 00033700
*          token.                                                     * 00033800
*                                                                     * 00033900
*                                                                     * 00034000
*                                                                     * 00034100
*                                                                     * 00034200
*      [SYSEVENT=NO|YES]                                            * 00034300
*          is an optional keyword input that indicates whether the    * 00034400
*          JDU wishes to be notified of Sysplex.  events.             * 00034500
*          DEFAULT: NO                                                * 00034600
*                                                                     * 00034700
*                                                                     * 00034800
*          SYSEVENT=NO                                                * 00034900
*              No monitoring is being done by this JDU, therefore     * 00035000
*              there is no need to notify the JDU of Sysplex. events. * 00035100
*                                                                     * 00035200
*          SYSEVENT=YES                                               * 00035300
*              The JDU should receive notification of Sysplex.        * 00035400
*              events.                                                * 00035500
*                                                                     * 00035600
*                                                                     * 00035700
*                                                                     * 00035800
*                                                                     * 00035900
*                                                                     * 00036000
*                                                                     * 00036100
*      [RTNCODE=xrtncode]                                             * 00036200
*          is the name (RS-type) of an optional fullword output       * 00036300
*          variable, or register (2)-(12), into which the return code * 00036400
*          is to be copied from GPR 15.                               * 00036500
*                                                                     * 00036600
*                                                                     * 00036700
*                                                                     * 00036800
*                                                                     * 00036900
*      [RSNCODE=xrsncode]                                             * 00037000
*          is the name (RS-type) of an optional fullword output       * 00037100
*          variable, or register (2)-(12), into which the reason code * 00037200
*          is to be copied from GPR 0.                                * 00037300
*                                                                     * 00037400
*                                                                     * 00037500
*                                                                     * 00037600
*                                                                     * 00037700
*      [PLISTVER=xplistver|IMPLIED_VERSION]                         * 00037800
*          is an optional byte input decimal value in the "1-1" range * 00037900
*          that specifies the macro version.  PLISTVER is the only    * 00038000
*          key allowed on the list form of MF and determines which    * 00038100
*          parameter list is generated.  Note that MAX may be         * 00038200
*          specified instead of a number, and the parameter list will * 00038300
*          be of the largest size currently supported. This size may  * 00038400
*          grow from release to release (thus possibly affecting the  * 00038500
*          amount of storage needed by your program).  If your        * 00038600
*          program can tolerate this, IBM recommends that you always  * 00038700
*          specify MAX when creating the list form parameter list as  * 00038800
*          that will ensure that the list form parameter list is      * 00038900
*          always long enough to hold whatever parameters might be    * 00039000
*          specified on the execute form.                             * 00039100
*          DEFAULT: IMPLIED_VERSION.  When PLISTVER is omitted, the   * 00039200
*          default is the lowest version which allows all of the      * 00039300
*          parameters specified on the invocation to be processed.    * 00039400
*                                                                     * 00039500
*                                                                     * 00039600
*                                                                     * 00039700
*                                                                     * 00039800
*      [MF=S|L|E]                                                   * 00039900
*          is an optional keyword input which specifies the macro     * 00040000
*          form.                                                      * 00040100
*          DEFAULT: S                                                 * 00040200
*                                                                     * 00040300
*                                                                     * 00040400
*          [MF=S]                                                     * 00040500
*              specifies the standard form of the macro.  The "S"     * 00040600
*              form generates code to put the parameters into an      * 00040700
*              in-line parameter list and invoke the desired service. * 00040800
*              Full checking for required macro keys is done along    * 00040900
*              with supplying defaults for omitted optional           * 00041000
*              parameters.                                            * 00041100
*                                                                     * 00041200
*          [MF=(L,xmfctrl,xmfattr|0D)]                              * 00041300
*              specifies the list form of the macro.  The "L" form    * 00041400
*              defines an area to be used for the parameter list.     * 00041500
*              Only the PLISTVER key may be specified on the          * 00041600
*              invocation.  All other macro parameters are flagged as * 00041700
*              errors.  If PLISTVER is not specified, the original    * 00041800
*              parameter list definition is used.                     * 00041900
*                                                                     * 00042000
*            ,xmfctrl                                                 * 00042100
*              is a required input.  It is the name of a storage area * 00042200
*              for the parameter list.                                * 00042300
*                                                                     * 00042400
*            ,xmfattr|0D                                            * 00042500
*              is an optional 60 character input string that varies   * 00042600
*              from 1 to 60 characters. It can contain any value that * 00042700
*              is valid on an assembler DS pseudo-op. You can use     * 00042800
*              this parameter to force boundary alignment of the      * 00042900
*              parameter list.                                        * 00043000
*              DEFAULT: 0D which forces the parameter list to a       * 00043100
*              doubleword boundary.                                   * 00043200
*                                                                     * 00043300
*          [MF=(E,xmfctrl,COMPLETE)]                                * 00043400
*              specifies the execute form of the macro.  The "E" form * 00043500
*              generates code to put the parameters into the          * 00043600
*              parameter list specified by xmfctrl and provides full  * 00043700
*              syntax checking with default setting.                  * 00043800
*                                                                     * 00043900
*            ,xmfctrl                                                 * 00044000
*              is a required input.  It is the name (RS-type), or     * 00044100
*              address in register (1)-(12), of a storage area for    * 00044200
*              the parameter list.                                    * 00044300
*                                                                     * 00044400
*            ,COMPLETE                                              * 00044500
*              is an optional keyword input which specifies the       * 00044600
*              degree of macro parameter syntax checking.             * 00044700
*              DEFAULT: COMPLETE                                      * 00044800
*                                                                     * 00044900
*                                                                     * 00045000
*              COMPLETE                                               * 00045100
*                  Checking for required macro keys is done and       * 00045200
*                  defaults are supplied for omitted optional         * 00045300
*                  parameters.                                        * 00045400
*                                                                     * 00045500
*                                                                     * 00045600
*                                                                     * 00045700
*                                                                     * 00045800
*                                                                     * 00045900
*                                                                     * 00046000
*                                                                     * 00046100
*01* RETURN CODES:                                                    * 00046200
*                                                                     * 00046300
*                                                                     * 00046400
*            0    Mailbox sucessfully created.                        * 00046500
*                                                                     * 00046600
*            4    Mailbox was not created due to user error.          * 00046700
*                                                                     * 00046800
*            C    Mailbox was not created due to system abend.        * 00046900
*                                                                     * 00047000
*                                                                     * 00047100
*                                                                     * 00047200
*01* REASON CODES:                                                    * 00047300
*                                                                     * 00047400
*       REASON    RETURN                                              * 00047500
*       CODE      CODE      DESCRIPTION                               * 00047600
*                                          * 00047700
*                                                                     * 00047800
*                                                                     * 00047900
*              0  0         Processing was sucessful, the mailbox was * 00048000
*                           sucessfully built.                        * 00048100
*                                                                     * 00048200
*              4  4         Processing  failed  because the parameter * 00048300
*                           list  passed  to  the  IXZXIXMB   service * 00048400
*                           routine does not have a valid eyecatcher. * 00048500
*                                                                     * 00048600
*              8  4         Processing  failed because, the parameter * 00048700
*                           list  passed  to  the  IXZXIXMB   service * 00048800
*                           routine had an invalid version indicator. * 00048900
*                           The caller may need to be recompiled.     * 00049000
*                                                                     * 00049100
*              C  4         Processing  failed  because  the POSTEXIT * 00049200
*                           value  passed  to  the  IXZIXMB   service * 00049300
*                           routine  is  zero.      Use  POSTEXIT  to * 00049400
*                           specify  the  address  of a routine to be * 00049500
*                           called,  when  a message is placed in the * 00049600
*                           mailbox.                                  * 00049700
*                                                                     * 00049800
*             10  4         Processing  failed  because  the POSTDATA * 00049900
*                           value  passed  to  the  IXZIXMB   service * 00050000
*                           routine  is  zero.      Use  POSTDATA  to * 00050100
*                           specify  an  address of data to be passed * 00050200
*                           to the postexit.                          * 00050300
*                                                                     * 00050400
*             14  4         Processing  failed because the grouptoken * 00050500
*                           passed to the IXZIXMB service routine was * 00050600
*                           not valid.                                * 00050700
*                                                                     * 00050800
*             18  4         Processing   failed  because,the  IXZIXMB * 00050900
*                           service routine was called  on  a  member * 00051000
*                           that is detaching.                        * 00051100
*                                                                     * 00051200
*             1C  4         Processing  failed because, the parameter * 00051300
*                           list  passed  to  the  IXZXIXMB   service * 00051400
*                           routine  had  an  invalid  mailbox  name. * 00051500
*                           Only A-Z, 0-9 and $ @ # are valid.        * 00051600
*                                                                     * 00051700
*             20  4         Processing  failed  because,  the mailbox * 00051800
*                           specified is already defined.             * 00051900
*                                                                     * 00052000
*              0  C         Processing  failed  because, the IXZXIXMB * 00052100
*                           macro service abended.                    * 00052200
*                                                                     * 00052300
*                                                                     * 00052400
*                                                                     * 00052500
*01* MODULE TYPE:  ASSEM MACRO                                        * 00052600
*                                                                     * 00052700
*02*   PROCESSOR:  ASSEM                                              * 00052800
*                                                                     * 00052900
*01* COMPONENT:  SCJSC                                                * 00053000
*                                                                     * 00053100
*01* MACRO USAGE NOTES:                                               * 00053200
*                                                                     * 00053300
*                                                                     * 00053400
*    1.  Printing of the macro expansion is controlled by the ZPRINT  * 00053500
*        global macro variable.  Any value other than 'NO' will       * 00053600
*        result in the macro expansion being printed.  The default is * 00053700
*        'YES'.  The following examples illustrate how the ZPRINT     * 00053800
*        variable should be set.                                      * 00053900
*                                                                     * 00054000
*                    GBLC &ZPRINT                                     * 00054100
*            &ZPRINT SETC 'YES'          &ZPRINT SETC 'NO'            * 00054200
*                                                                     * 00054300
*                                                                     * 00054400
*    2.  All   keys   currently   contained  in  the  IXZXIXMB  macro * 00054500
*        correspond  to  version  1.   If you specify PLISTVER, use a * 00054600
*        value of 1 or MAX.                                           * 00054700
*                                                                     * 00054800
*                                                                     * 00054900
*                                                                     * 00055000
*                                                                     * 00055100
*01* CHANGE ACTIVITY:                                                 * 00055200
*                                                                     * 00055300
*   Flag LineItem  FMID    Date   ID    Comment                       * 00055400
*                                                                     * 00055500
*    $N0=JESXCF   HBB5510 921128 PD0AL:                               * 00055600
****** END OF SPECIFICATIONS *****************************************/ 00055700
*/********************************************************************* 00055800
         MACRO                                                          00055900
&XLABEL  IXZXIXMB &MBOXNAME=,&POSTXIT=,&POSTDATA=,&POSTALET=,          *00056000
               &GROUPTOKEN=,&SYSEVENT=,&RTNCODE=,&RSNCODE=,&PLISTVER=, *00056100
               &MF=                                                     00056200
.*                                                                      00056300
*                MACDATE -93/05/10-<1>                                  00056400
.*                                                                      00056500
.*******************************************************************    00056600
.***AB.02  GLOBAL VARIABLES TO CONTROL PRINT AND CODE GENERATION        00056700
.*******************************************************************    00056800
                GBLC  &ZPRINT     YES=PRINT NO=NO PRINT                 00056900
                GBLC  &ZTEST      YES=TEST NO=NO TEST                   00057000
                GBLC  &ZSYSTEM    PCCODE10, MVS, SAK, VM, XAX           00057100
.*                                                                      00057200
                GBLC  &ZIXZXIXMB  YES=MACRO USED AT LEAST ONCE          00057300
.*******************************************************************    00057400
.***AB.03  COMMONLY USED LOCAL MACRO VARIABLES                          00057500
.*******************************************************************    00057600
                LCLC  &ZMS        ERROR MESSAGE WORK AREA               00057700
                LCLC  &ZCNDX      LAST THREE SYSNDX CHARACTERS          00057800
                LCLC  &ZCLNG      USED WHEN LENGTH IS NEEDED            00057900
                LCLC  &ZCGPR      USED WHEN VALUE IS IN A GPR           00058000
                LCLC  &ZCVAL      USED TO CONTAIN FIXED VALUE           00058100
                LCLA  &ZAWRK      USED AS A WORK AREA                   00058200
                LCLA  &ZASIZ      USED FOR SIZE OF VALUE                00058300
                LCLA  &ZN         NUMERIC WORK VARIABLE                 00058400
                LCLC  &ZC         CHARACTER WORK VARIABLE               00058500
                LCLC  &ZTLC       CHARACTER TOO LONG VARIABLE           00058600
                LCLA  &ZTLA       VALUE TOO LONG VARIABLE               00058700
                LCLA  &ZMACRET    MACRO RETURN CODE                     00058800
&ZMACRET        SETA  0           ASSUME NO ERRORS                      00058900
.*                                                                      00059000
                LCLC  &ZCSYSLIST(255)           NONXKEY, POS ARRAY      00059100
                LCLA  &ZASYSLNDX  WORK INDEX FOR ZCSYSLIST()            00059200
                LCLA  &ZPLLEN     PARAMETER LIST LENGTH                 00059300
                LCLC  &ZENDBASEPL               End of base PL          00059400
                LCLA  &ZPLWORKA   PARAMETER LIST LENGTH                 00059500
.*******************************************************************    00059600
.***AB.04  MACRO VARIABLES FOR RANGES AND SETS OF ARGUMENTS             00059700
.*******************************************************************    00059800
                LCLA  &ZI         INDEX FOR ARRAY                       00059900
                LCLA  &ZJ         INDEX FOR PARMS                       00060000
                LCLA  &ZK         INDEX FOR PARSE                       00060100
                LCLA  &ZLO        LOW RANGE VALUE                       00060200
                LCLA  &ZHI        HIGH RANGE VALUE                      00060300
                LCLC  &ZW         WORK AREA FOR PARM                    00060400
.********************************************************************   00060500
.***AB.05  INVOKE MVS MACROS TO CONTROL CODE GENERATION                 00060600
.********************************************************************   00060700
                GBLC  &SYSSPLV    SP LEVEL 1,2,3 -SPLEVEL               00060800
                GBLC  &SYSASCE    SYSTEM STATE P ANY AR-SYSSTATE        00060900
.*                                                                      00061000
                AIF   (K'&SYSASCE GT 0).ZSYS4   SYS STATE DEFINED       00061100
                AIF   (K'&SYSSPLV GT 0).ZSYS2   SP LEVEL DEFINED        00061200
                SPLEVEL  TEST                                           00061300
.ZSYS2          ANOP  ,                                                 00061400
                AIF   ('&SYSSPLV' EQ '1').ZSYS3  PRE SP 3.1             00061500
                AIF   ('&SYSSPLV' EQ '2').ZSYS3  PRE SP 3.1             00061600
                SYSSTATE TEST                                           00061700
                AGO   .ZSYS4                                            00061800
.ZSYS3          ANOP  ,                                                 00061900
&SYSASCE        SETC  'P'         ASSUME SYSSTATE PRIMARY               00062000
.ZSYS4          ANOP  ,                                                 00062100
.*******************************************************************    00062200
.***AB.07  DEFINE ALL MACRO VARIABLES                                   00062300
.*******************************************************************    00062400
                LCLC  &XMBOXNAME  ++ NAME                               00062500
                LCLC  &XPOSTXIT   ++ NAME                               00062600
                LCLC  &XPOSTDATA  ++ NAME                               00062700
                LCLC  &XPOSTALET  ++ NAME                               00062800
                LCLC  &XGROUPTOKEN              ++ NAME                 00062900
                LCLC  &XSYSEVENT  ++ VALUE                              00063000
                LCLC  &XRTNCODE   ++ NAME                               00063100
                LCLC  &XRSNCODE   ++ NAME                               00063200
                LCLA  &XPLISTVER  ++ VALUE                              00063300
                LCLC  &XMF        ++ VALUE                              00063400
                LCLC  &XMFCTRL    ++ NAME                               00063500
                LCLC  &XMFATTR    ++ VALUE                              00063600
                LCLC  &XMFSCK     ++ VALUE                              00063700
.*******************************************************************    00063800
.***AB.13  DEFINE MACRO VARIABLES FOR INPUT/OUTPUT PROCESSING           00063900
.*******************************************************************    00064000
                LCLC  &ZXMBOXNAME               ++ INPUT NAME           00064100
                LCLC  &ZXPOSTXIT  ++ INPUT NAME                         00064200
                LCLC  &ZXPOSTDATA               ++ INPUT NAME           00064300
                LCLC  &ZXPOSTALET               ++ INPUT NAME           00064400
                LCLC  &ZXGROUPTOKEN             ++ INPUT NAME           00064500
                LCLC  &ZXSYSEVENT               ++ INPUT VALUE          00064600
                LCLC  &ZXRTNCODE  ++ OUTPUT NAME                        00064700
                LCLC  &ZXRSNCODE  ++ OUTPUT NAME                        00064800
                LCLC  &ZXPLISTVER               ++ INPUT VALUE          00064900
                LCLC  &ZXMF       ++ INPUT VALUE                        00065000
                LCLC  &ZXMFCTRL   ++ INPUT NAME                         00065100
                LCLC  &ZXMFATTR   ++ INPUT VALUE                        00065200
                LCLC  &ZXMFSCK    ++ INPUT VALUE                        00065300
.********************************************************************   00065400
.***AC.PLV01  PROCESS PLISTVER                                      *   00065500
.********************************************************************   00065600
&XPLISTVER      SETA  1                                                 00065700
                AIF   (K'&PLISTVER(1) LE 0).ZPLV0                       00065800
                AIF   ('&PLISTVER(1)' NE 'MAX').ZPLV0                   00065900
&XPLISTVER      SETA  1                                                 00066000
.ZPLV0          ANOP  ,                                                 00066100
.*                                                                      00066200
                AIF   (K'&PLISTVER(1) LE 0).ZPVCKE                      00066300
                AIF   ('&PLISTVER(1)' EQ 'IMPLIED_VERSION').ZPVCKE      00066400
                AIF   ('&PLISTVER(1)' EQ 'MAX').ZPVCKE                  00066500
.*-------------------------------------------------------------------   00066600
                AIF   (N'&PLISTVER LE 1).ZPVCK3  CK NUM                 00066700
&ZMS            SETC  '"PLISTVER='         *KPOSA* MNOTE                00066800
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00066900
&ZMS            SETC  '&ZMS "PLISTVER"'                                 00067000
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00067100
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00067200
                AGO   .ZPVCK2                                           00067300
.ZPVCK3         ANOP  ,                                                 00067400
.*-------------------------------------------------------------------   00067500
                AIF   ('&PLISTVER'(1,1) NE '(').ZPVCK2                  00067600
&ZMS            SETC  '"PLISTVER='         *KGPRA* MNOTE                00067700
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00067800
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         00067900
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'                 00068000
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00068100
                AGO   .ZPVCKE                                           00068200
.ZPVCK2         ANOP  ,                                                 00068300
.*-------------------------------------------------------------------   00068400
&ZN             SETA   &PLISTVER(1)        CONVERT TO ARITHMETIC        00068500
                AIF   (&ZN GE &XPLISTVER).ZPVCK4                        00068600
&ZMS            SETC  'PLISTVER='          *KVALA* MNOTE                00068700
&ZMS            SETC  '&ZMS.&PLISTVER(1)'                               00068800
&ZMS            SETC  '&ZMS., BUT PLISTVER OF'                          00068900
&ZMS            SETC  '&ZMS &XPLISTVER'                                 00069000
                MNOTE 8,' &ZMS IS REQUIRED.'                            00069100
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00069200
                AGO   .ZPVCK5                                           00069300
.ZPVCK4         ANOP  ,                                                 00069400
&XPLISTVER      SETA  &PLISTVER(1)                                      00069500
.ZPVCK5         ANOP  ,                                                 00069600
.*-------------------------------------------------------------------   00069700
&ZCVAL          SETC  '&PLISTVER(1)'                                    00069800
                AIF   ('&ZCVAL'(1,1) EQ '(').ZPVCKE  IN GPR             00069900
                AIF   (T'&ZCVAL NE 'N').ZPVCK6  NUMERIC ERR             00070000
                AIF   (&XPLISTVER LT 1).ZPVCK6  TOO LOW                 00070100
                AIF   (&XPLISTVER LE 1).ZPVCKE  NOT HIGH                00070200
.ZPVCK6         ANOP   ,                                                00070300
&ZMS            SETC  '"PLISTVER='         *KRNGA* MNOTE                00070400
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00070500
&ZMS            SETC  '&ZMS THE RANGE IS "1-1"'                         00070600
                MNOTE 8,' &ZMS FOR ARGUMENT 1.'                         00070700
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00070800
.ZPVCKE         ANOP   ,                                                00070900
.********************************************************************   00071000
.***AG.MF01 PROCESS MF MACRO FORMS                                      00071100
.********************************************************************   00071200
                ACTR  10000                                             00071300
.*------------------------------------------------------------------    00071400
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00071500
&XMF            SETC  ''          INITIALIZE XVARIABLE                  00071600
.*-------------------------------------------------------------------   00071700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00071800
.ZG32           ANOP  ,                                                 00071900
&ZTLC           SETC 'S'                                                00072000
                AIF   ('&MF(1)' NE '&ZTLC').ZG33                        00072100
&XMF            SETC  'S'         SET KEYWORD                           00072200
                AIF   (N'&MF LE 1).ZG32A        CK NUM                  00072300
&ZMS            SETC  '"MF='      *KPOSA* MNOTE                         00072400
&ZMS            SETC  '&ZMS.&MF"'                                       00072500
&ZMS            SETC  '&ZMS "MF"'                                       00072600
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00072700
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00072800
.ZG32A          ANOP  ,                                                 00072900
.*-------------------------------------------------------------------   00073000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00073100
.ZG33           ANOP  ,                                                 00073200
&ZTLC           SETC 'L'                                                00073300
                AIF   ('&MF(1)' NE '&ZTLC').ZG40                        00073400
&XMF            SETC  'L'         SET KEYWORD                           00073500
                AIF   (N'&MF LE 3).ZG33A        CK NUM                  00073600
&ZMS            SETC  '"MF='      *KPOSA* MNOTE                         00073700
&ZMS            SETC  '&ZMS.&MF"'                                       00073800
&ZMS            SETC  '&ZMS "MF"'                                       00073900
                MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'              00074000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00074100
.ZG33A          ANOP  ,                                                 00074200
.*-------------------------------------------------------------------   00074300
.***AG.KKCTL08 -MF(L) SPECIAL CHECK                                     00074400
                AIF   (N'&SYSLIST NE 0).ZG33B   POSITIONALS?            00074500
                AIF   ('&MBOXNAME' NE '').ZG33B  KEYS?                  00074600
                AIF   ('&POSTXIT' NE '').ZG33B  KEYS?                   00074700
                AIF   ('&POSTDATA' NE '').ZG33B  KEYS?                  00074800
                AIF   ('&POSTALET' NE '').ZG33B  KEYS?                  00074900
                AIF   ('&GROUPTOKEN' NE '').ZG33B  KEYS?                00075000
                AIF   ('&SYSEVENT' NE '').ZG33B  KEYS?                  00075100
                AIF   ('&RTNCODE' NE '').ZG33B  KEYS?                   00075200
                AIF   ('&RSNCODE' NE '').ZG33B  KEYS?                   00075300
                AGO    .ZG33C     INVOCATION OKAY                       00075400
.ZG33B          ANOP  ,                                                 00075500
&ZMS            SETC  'THE "L" FORM OF "MF"'    *MFLA* MNOTE            00075600
&ZMS            SETC  '&ZMS CAN ONLY HAVE'                              00075700
&ZMS            SETC  '&ZMS THE "PLISTVER" KEY'                         00075800
                MNOTE 8,' &ZMS SPECIFIED ON THE INVOCATION.'            00075900
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00076000
.ZG33C          ANOP  ,                                                 00076100
.*-------------------------------------------------------------------   00076200
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00076300
&ZXMFCTRL       SETC  'INPUT'     SET IN/OUTPUT                         00076400
&XMFCTRL        SETC  '&MF(2,1)'  SET XVARIABLE                         00076500
                AIF   (N'&MF(2) GT 1).ZG35B     MULTI PARMS             00076600
&XMFCTRL        SETC  '&MF(2)'    SET XVARIABLE                         00076700
.ZG35B          AIF   (K'&MF(2) GT 0).ZG35C                             00076800
&ZXMFCTRL       SETC  ''          RESET IN/OUTPUT                       00076900
&ZMS            SETC  'WHEN "L" IS SPECIFIED'   *KRQDA*                 00077000
&ZMS            SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'               00077100
                MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                      00077200
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00077300
.ZG35C          ANOP  ,                                                 00077400
.*-------------------------------------------------------------------   00077500
.***AG.KCK01 NAME, OPT RQD INPUT, POS(2) -GPR NOT ALLOWED               00077600
                AIF   (K'&ZXMFCTRL LE 0).ZG35P  NOT I/O                 00077700
                AIF   ('&XMFCTRL'(1,1) NE '(').ZG35P                    00077800
&ZXMFCTRL       SETC  ''          RESET IN/OUTPUT                       00077900
&ZMS            SETC  '"MF='      *KGPRA* MNOTE                         00078000
&ZMS            SETC  '&ZMS.&MF"'                                       00078100
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         00078200
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 2.'                 00078300
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00078400
.ZG35P          ANOP  ,                                                 00078500
.*-------------------------------------------------------------------   00078600
.***AG.KXVAR13 VALUE, OPT INPUT, POS(3) -XVARIABLE                      00078700
&ZXMFATTR       SETC  'INPUT'     SET IN/OUTPUT                         00078800
&XMFATTR        SETC  '0D'                                              00078900
                AIF   (K'&MF(3) LE 0).ZG38B     PARM                    00079000
&XMFATTR        SETC  '&MF(3,1)'  SET XVARIABLE                         00079100
                AIF   (N'&MF(3) GT 1).ZG38B     MULTI PARMS             00079200
&XMFATTR        SETC  '&MF(3)'    SET XVARIABLE                         00079300
.ZG38B          ANOP  ,                                                 00079400
.*-------------------------------------------------------------------   00079500
.***AG.KCK01 VALUE, OPT INPUT, POS(3) -GPR NOT ALLOWED                  00079600
                AIF   (K'&ZXMFATTR LE 0).ZG38P  NOT I/O                 00079700
                AIF   ('&XMFATTR'(1,1) NE '(').ZG38P                    00079800
&ZXMFATTR       SETC  ''          RESET IN/OUTPUT                       00079900
&ZMS            SETC  '"MF='      *KGPRA* MNOTE                         00080000
&ZMS            SETC  '&ZMS.&MF"'                                       00080100
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         00080200
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 3.'                 00080300
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00080400
.ZG38P          ANOP  ,                                                 00080500
.*-------------------------------------------------------------------   00080600
.***AG.KCK03 VALUE, OPT INPUT, POS(3) -CHARACTER LENGTH                 00080700
                AIF   (K'&ZXMFATTR LE 0).ZG38S  NOT I/O                 00080800
                AIF   (K'&XMFATTR LE 60).ZG38S  LNG OK                  00080900
&ZXMFATTR       SETC  ''          RESET IN/OUTPUT                       00081000
&ZMS            SETC  '"MF='      *KLNGA* MNOTE                         00081100
&ZMS            SETC  '&ZMS.&MF"'                                       00081200
&ZMS            SETC  '&ZMS ARGUMENT 3 EXCEEDS THE MAXIMUM'             00081300
                MNOTE 8,' &ZMS LENGTH OF 60 CHARACTERS.'                00081400
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00081500
.ZG38S          ANOP  ,                                                 00081600
.*-------------------------------------------------------------------   00081700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00081800
.ZG40           ANOP  ,                                                 00081900
&ZTLC           SETC 'E'                                                00082000
                AIF   ('&MF(1)' NE '&ZTLC').ZG48                        00082100
&XMF            SETC  'E'         SET KEYWORD                           00082200
                AIF   (N'&MF LE 3).ZG40A        CK NUM                  00082300
&ZMS            SETC  '"MF='      *KPOSA* MNOTE                         00082400
&ZMS            SETC  '&ZMS.&MF"'                                       00082500
&ZMS            SETC  '&ZMS "MF"'                                       00082600
                MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'              00082700
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00082800
.ZG40A          ANOP  ,                                                 00082900
.*-------------------------------------------------------------------   00083000
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00083100
&ZXMFCTRL       SETC  'INPUT'     SET IN/OUTPUT                         00083200
&XMFCTRL        SETC  '&MF(2,1)'  SET XVARIABLE                         00083300
                AIF   (N'&MF(2) GT 1).ZG42B     MULTI PARMS             00083400
&XMFCTRL        SETC  '&MF(2)'    SET XVARIABLE                         00083500
.ZG42B          AIF   (K'&MF(2) GT 0).ZG42C                             00083600
&ZXMFCTRL       SETC  ''          RESET IN/OUTPUT                       00083700
&ZMS            SETC  'WHEN "E" IS SPECIFIED'   *KRQDA*                 00083800
&ZMS            SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'               00083900
                MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                      00084000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00084100
.ZG42C          ANOP  ,                                                 00084200
.*-------------------------------------------------------------------   00084300
.***AG.KCK02 NAME, OPT RQD INPUT, POS(2) -GPR OUT OF RANGE              00084400
                AIF   (K'&ZXMFCTRL LE 0).ZG42R  NOT I/O                 00084500
                AIF   ('&XMFCTRL'(1,1) NE '(').ZG42R                    00084600
&ZCGPR          SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)                        00084700
                AIF   ('&ZCGPR'(1,1) NE '0').ZG42P                      00084800
                AIF   (K'&ZCGPR GT 2).ZG42Q                             00084900
                AIF   ('&ZCGPR' EQ '0').ZG42Q                           00085000
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00085100
                AIF   (T'&ZCGPR NE 'N').ZG42Q   INVALID REG NAME        00085200
.ZG42P          ANOP  ,                                                 00085300
                AIF   (T'&ZCGPR NE 'N').ZG42R   NON NUMERIC             00085400
                AIF   ('&ZCGPR' LT '1').ZG42Q                           00085500
                AIF   ('&ZCGPR' LE '12').ZG42R                          00085600
.ZG42Q          ANOP  ,                                                 00085700
&ZMS            SETC  '"MF='      *KGPRA* MNOTE                         00085800
&ZMS            SETC  '&ZMS.&MF"'                                       00085900
&ZMS            SETC  '&ZMS ARGUMENT 2 MUST SPECIFY A REGISTER'         00086000
                MNOTE 8,' &ZMS IN THE RANGE (1)-(12).'                  00086100
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00086200
.ZG42R          ANOP  ,                                                 00086300
.*-------------------------------------------------------------------   00086400
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00086500
&XMFSCK         SETC  ''          INITIALIZE XVARIABLE                  00086600
.ZG46A   AIF   ('&MF(3)' NE 'COMPLETE').ZG47A                           00086700
&XMFSCK         SETC  'COMPLETE'  SET KEYWORD                           00086800
.*-------------------------------------------------------------------   00086900
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00087000
.ZG47A          AIF   (K'&XMFSCK GT 0).ZG47C    KEYWORD                 00087100
                AIF   (K'&MF(3) LE 0).ZG47B                             00087200
&ZMS            SETC  '"MF='      *KUKWA* MNOTE                         00087300
&ZMS            SETC  '&ZMS.&MF"'                                       00087400
&ZMS            SETC  '&ZMS ARGUMENT 3 IS AN UNKNOWN KEYWORD. '         00087500
&ZMS            SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'               00087600
&ZMS            SETC  '&ZMS "COMPLETE".'        VALID KEYWORD           00087700
                MNOTE 8,' &ZMS '                                        00087800
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00087900
.ZG47B          ANOP  ,                                                 00088000
&XMFSCK         SETC  'COMPLETE'  SET DEFAULT KEYWORD                   00088100
.ZG47C          ANOP  ,                                                 00088200
&ZXMFSCK        SETC  'INPUT'     SET IN/OUTPUT                         00088300
.*------------------------------------------------------------------    00088400
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00088500
.ZG48           ANOP  ,                                                 00088600
&ZXMF           SETC  'INPUT'     SET IN/OUTPUT                         00088700
                AIF   (K'&XMF GT 0).ZG48E       VALID ARG               00088800
                AIF   (T'&MF EQ 'O').ZG48D      OMITTED                 00088900
&ZASYSLNDX      SETA  0                                                 00089000
.ZG48A          ANOP  ,           POSITIONAL MACRO KEY                  00089100
&ZASYSLNDX      SETA  &ZASYSLNDX+1                                      00089200
                AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG48C                  00089300
&ZTLC           SETC 'MF'                                               00089400
                AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG48A         00089500
.ZG48B          ANOP  ,                                                 00089600
&ZXMF           SETC  ''          RESET IN/OUTPUT                       00089700
&ZMS            SETC  'THE "MF" KEY'            *KOPTA* MNOTE           00089800
&ZMS            SETC  '&ZMS MUST CONTAIN ONE'                           00089900
                MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                  00090000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00090100
                AGO   .ZG48E                                            00090200
.ZG48C          ANOP  ,                                                 00090300
&ZXMF           SETC  ''          RESET IN/OUTPUT                       00090400
&ZMS            SETC  '"MF='      *KUKWA* MNOTE                         00090500
&ZMS            SETC  '&ZMS.&MF"'                                       00090600
&ZMS            SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '         00090700
&ZMS            SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'               00090800
&ZMS            SETC  '&ZMS "S",'               VALID KEYWORD           00090900
&ZMS            SETC  '&ZMS "L",'               VALID KEYWORD           00091000
&ZMS            SETC  '&ZMS OR "E".'            VALID KEYWORD           00091100
                MNOTE 8,' &ZMS '                                        00091200
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00091300
                AGO   .ZG48E                                            00091400
.ZG48D          ANOP  ,                                                 00091500
&XMF            SETC  'S'         SET DEFAULT KEYWORD                   00091600
&XMFSCK         SETC  'COMPLETE'  COMPLETE CHECKING                     00091700
.ZG48E          ANOP  ,                                                 00091800
.********************************************************************   00091900
.***AG.MF02  FULL MACRO SYNTAX CHECKING                                 00092000
.********************************************************************   00092100
                ACTR  10000                                             00092200
.*-------------------------------------------------------------------   00092300
.***AG.MF03 MF=(SLE)                                                    00092400
                AIF   ('&XMF' EQ 'L').ZGMFX                             00092500
.*----------------------------------------------------------------***   00092600
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00092700
                AIF   (N'&MBOXNAME LE 1).ZG2A   CK NUM                  00092800
&ZMS            SETC  '"MBOXNAME='              *KPOSA* MNOTE           00092900
&ZMS            SETC  '&ZMS.&MBOXNAME"'                                 00093000
&ZMS            SETC  '&ZMS "MBOXNAME"'                                 00093100
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00093200
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00093300
.ZG2A           ANOP  ,                                                 00093400
.*-------------------------------------------------------------------   00093500
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00093600
&ZXMBOXNAME     SETC  'INPUT'     SET IN/OUTPUT                         00093700
&XMBOXNAME      SETC  '&MBOXNAME(1)'            SET XVARIABLE           00093800
                AIF   (N'&MBOXNAME GT 1).ZG2B   MULTI PARMS             00093900
&XMBOXNAME      SETC  '&MBOXNAME'               SET XVARIABLE           00094000
.ZG2B           AIF   (K'&MBOXNAME(1) GT 0).ZG2C                        00094100
&ZXMBOXNAME     SETC  ''          RESET IN/OUTPUT                       00094200
&ZMS            SETC  ' '         *KRQDA*                               00094300
&ZMS            SETC  '&ZMS "MBOXNAME" KEY AND ITS ARGUMENT'            00094400
                MNOTE 8,' &ZMS ARE REQUIRED.'                           00094500
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00094600
.ZG2C           ANOP  ,                                                 00094700
.*-------------------------------------------------------------------   00094800
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00094900
                AIF   (K'&ZXMBOXNAME LE 0).ZG2R  NOT I/O                00095000
                AIF   ('&XMBOXNAME'(1,1) NE '(').ZG2R                   00095100
&ZCGPR          SETC  '&XMBOXNAME'(2,K'&XMBOXNAME-2)                    00095200
                AIF   ('&ZCGPR'(1,1) NE '0').ZG2P                       00095300
                AIF   (K'&ZCGPR GT 2).ZG2Q                              00095400
                AIF   ('&ZCGPR' EQ '0').ZG2Q                            00095500
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00095600
                AIF   (T'&ZCGPR NE 'N').ZG2Q    INVALID REG NAME        00095700
.ZG2P           ANOP  ,                                                 00095800
                AIF   (T'&ZCGPR NE 'N').ZG2R    NON NUMERIC             00095900
                AIF   ('&ZCGPR' LT '2').ZG2Q                            00096000
                AIF   ('&ZCGPR' LE '12').ZG2R                           00096100
.ZG2Q           ANOP  ,                                                 00096200
&ZMS            SETC  '"MBOXNAME='              *KGPRA* MNOTE           00096300
&ZMS            SETC  '&ZMS.&MBOXNAME"'                                 00096400
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00096500
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  00096600
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00096700
.ZG2R           ANOP  ,                                                 00096800
.*----------------------------------------------------------------***   00096900
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00097000
                AIF   (N'&POSTXIT LE 1).ZG5A    CK NUM                  00097100
&ZMS            SETC  '"POSTXIT='               *KPOSA* MNOTE           00097200
&ZMS            SETC  '&ZMS.&POSTXIT"'                                  00097300
&ZMS            SETC  '&ZMS "POSTXIT"'                                  00097400
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00097500
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00097600
.ZG5A           ANOP  ,                                                 00097700
.*-------------------------------------------------------------------   00097800
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00097900
&ZXPOSTXIT      SETC  'INPUT'     SET IN/OUTPUT                         00098000
&XPOSTXIT       SETC  '&POSTXIT(1)'             SET XVARIABLE           00098100
                AIF   (N'&POSTXIT GT 1).ZG5B    MULTI PARMS             00098200
&XPOSTXIT       SETC  '&POSTXIT'  SET XVARIABLE                         00098300
.ZG5B           AIF   (K'&POSTXIT(1) GT 0).ZG5C                         00098400
&ZXPOSTXIT      SETC  ''          RESET IN/OUTPUT                       00098500
&ZMS            SETC  ' '         *KRQDA*                               00098600
&ZMS            SETC  '&ZMS "POSTXIT" KEY AND ITS ARGUMENT'             00098700
                MNOTE 8,' &ZMS ARE REQUIRED.'                           00098800
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00098900
.ZG5C           ANOP  ,                                                 00099000
.*-------------------------------------------------------------------   00099100
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00099200
                AIF   (K'&ZXPOSTXIT LE 0).ZG5R  NOT I/O                 00099300
                AIF   ('&XPOSTXIT'(1,1) NE '(').ZG5R                    00099400
&ZCGPR          SETC  '&XPOSTXIT'(2,K'&XPOSTXIT-2)                      00099500
                AIF   ('&ZCGPR'(1,1) NE '0').ZG5P                       00099600
                AIF   (K'&ZCGPR GT 2).ZG5Q                              00099700
                AIF   ('&ZCGPR' EQ '0').ZG5Q                            00099800
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00099900
                AIF   (T'&ZCGPR NE 'N').ZG5Q    INVALID REG NAME        00100000
.ZG5P           ANOP  ,                                                 00100100
                AIF   (T'&ZCGPR NE 'N').ZG5R    NON NUMERIC             00100200
                AIF   ('&ZCGPR' LT '2').ZG5Q                            00100300
                AIF   ('&ZCGPR' LE '12').ZG5R                           00100400
.ZG5Q           ANOP  ,                                                 00100500
&ZMS            SETC  '"POSTXIT='               *KGPRA* MNOTE           00100600
&ZMS            SETC  '&ZMS.&POSTXIT"'                                  00100700
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00100800
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  00100900
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00101000
.ZG5R           ANOP  ,                                                 00101100
.*----------------------------------------------------------------***   00101200
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00101300
                AIF   (N'&POSTDATA LE 1).ZG8A   CK NUM                  00101400
&ZMS            SETC  '"POSTDATA='              *KPOSA* MNOTE           00101500
&ZMS            SETC  '&ZMS.&POSTDATA"'                                 00101600
&ZMS            SETC  '&ZMS "POSTDATA"'                                 00101700
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00101800
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00101900
.ZG8A           ANOP  ,                                                 00102000
.*-------------------------------------------------------------------   00102100
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00102200
&ZXPOSTDATA     SETC  'INPUT'     SET IN/OUTPUT                         00102300
&XPOSTDATA      SETC  '&POSTDATA(1)'            SET XVARIABLE           00102400
                AIF   (N'&POSTDATA GT 1).ZG8B   MULTI PARMS             00102500
&XPOSTDATA      SETC  '&POSTDATA'               SET XVARIABLE           00102600
.ZG8B           AIF   (K'&POSTDATA(1) GT 0).ZG8C                        00102700
&ZXPOSTDATA     SETC  ''          RESET IN/OUTPUT                       00102800
&ZMS            SETC  ' '         *KRQDA*                               00102900
&ZMS            SETC  '&ZMS "POSTDATA" KEY AND ITS ARGUMENT'            00103000
                MNOTE 8,' &ZMS ARE REQUIRED.'                           00103100
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00103200
.ZG8C           ANOP  ,                                                 00103300
.*-------------------------------------------------------------------   00103400
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00103500
                AIF   (K'&ZXPOSTDATA LE 0).ZG8R  NOT I/O                00103600
                AIF   ('&XPOSTDATA'(1,1) NE '(').ZG8R                   00103700
&ZCGPR          SETC  '&XPOSTDATA'(2,K'&XPOSTDATA-2)                    00103800
                AIF   ('&ZCGPR'(1,1) NE '0').ZG8P                       00103900
                AIF   (K'&ZCGPR GT 2).ZG8Q                              00104000
                AIF   ('&ZCGPR' EQ '0').ZG8Q                            00104100
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00104200
                AIF   (T'&ZCGPR NE 'N').ZG8Q    INVALID REG NAME        00104300
.ZG8P           ANOP  ,                                                 00104400
                AIF   (T'&ZCGPR NE 'N').ZG8R    NON NUMERIC             00104500
                AIF   ('&ZCGPR' LT '2').ZG8Q                            00104600
                AIF   ('&ZCGPR' LE '12').ZG8R                           00104700
.ZG8Q           ANOP  ,                                                 00104800
&ZMS            SETC  '"POSTDATA='              *KGPRA* MNOTE           00104900
&ZMS            SETC  '&ZMS.&POSTDATA"'                                 00105000
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00105100
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  00105200
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00105300
.ZG8R           ANOP  ,                                                 00105400
.*----------------------------------------------------------------***   00105500
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00105600
                AIF   (N'&POSTALET LE 1).ZG11A  CK NUM                  00105700
&ZMS            SETC  '"POSTALET='              *KPOSA* MNOTE           00105800
&ZMS            SETC  '&ZMS.&POSTALET"'                                 00105900
&ZMS            SETC  '&ZMS "POSTALET"'                                 00106000
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00106100
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00106200
.ZG11A          ANOP  ,                                                 00106300
.*-------------------------------------------------------------------   00106400
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00106500
&ZXPOSTALET     SETC  'INPUT'     SET IN/OUTPUT                         00106600
&XPOSTALET      SETC  'NULL'                                            00106700
                AIF   (K'&POSTALET(1) LE 0).ZG11B  PARM                 00106800
&XPOSTALET      SETC  '&POSTALET(1)'            SET XVARIABLE           00106900
                AIF   (N'&POSTALET GT 1).ZG11B  MULTI PARMS             00107000
&XPOSTALET      SETC  '&POSTALET'               SET XVARIABLE           00107100
.ZG11B          ANOP  ,                                                 00107200
.*-------------------------------------------------------------------   00107300
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00107400
                AIF   (K'&ZXPOSTALET LE 0).ZG11R  NOT I/O               00107500
                AIF   ('&XPOSTALET' EQ 'NULL').ZG11R                    00107600
                AIF   ('&XPOSTALET'(1,1) NE '(').ZG11R                  00107700
&ZCGPR          SETC  '&XPOSTALET'(2,K'&XPOSTALET-2)                    00107800
                AIF   ('&ZCGPR'(1,1) NE '0').ZG11P                      00107900
                AIF   (K'&ZCGPR GT 2).ZG11Q                             00108000
                AIF   ('&ZCGPR' EQ '0').ZG11Q                           00108100
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00108200
                AIF   (T'&ZCGPR NE 'N').ZG11Q   INVALID REG NAME        00108300
.ZG11P          ANOP  ,                                                 00108400
                AIF   (T'&ZCGPR NE 'N').ZG11R   NON NUMERIC             00108500
                AIF   ('&ZCGPR' LT '2').ZG11Q                           00108600
                AIF   ('&ZCGPR' LE '12').ZG11R                          00108700
.ZG11Q          ANOP  ,                                                 00108800
&ZMS            SETC  '"POSTALET='              *KGPRA* MNOTE           00108900
&ZMS            SETC  '&ZMS.&POSTALET"'                                 00109000
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00109100
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  00109200
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00109300
.ZG11R          ANOP  ,                                                 00109400
.*----------------------------------------------------------------***   00109500
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00109600
                AIF   (N'&GROUPTOKEN LE 1).ZG14A  CK NUM                00109700
&ZMS            SETC  '"GROUPTOKEN='            *KPOSA* MNOTE           00109800
&ZMS            SETC  '&ZMS.&GROUPTOKEN"'                               00109900
&ZMS            SETC  '&ZMS "GROUPTOKEN"'                               00110000
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00110100
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00110200
.ZG14A          ANOP  ,                                                 00110300
.*-------------------------------------------------------------------   00110400
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00110500
&ZXGROUPTOKEN   SETC  'INPUT'     SET IN/OUTPUT                         00110600
&XGROUPTOKEN    SETC  '&GROUPTOKEN(1)'          SET XVARIABLE           00110700
                AIF   (N'&GROUPTOKEN GT 1).ZG14B  MULTI PARMS           00110800
&XGROUPTOKEN    SETC  '&GROUPTOKEN'             SET XVARIABLE           00110900
.ZG14B          AIF   (K'&GROUPTOKEN(1) GT 0).ZG14C                     00111000
&ZXGROUPTOKEN   SETC  ''          RESET IN/OUTPUT                       00111100
&ZMS            SETC  ' '         *KRQDA*                               00111200
&ZMS            SETC  '&ZMS "GROUPTOKEN" KEY AND ITS ARGUMENT'          00111300
                MNOTE 8,' &ZMS ARE REQUIRED.'                           00111400
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00111500
.ZG14C          ANOP  ,                                                 00111600
.*-------------------------------------------------------------------   00111700
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00111800
                AIF   (K'&ZXGROUPTOKEN LE 0).ZG14R  NOT I/O             00111900
                AIF   ('&XGROUPTOKEN'(1,1) NE '(').ZG14R                00112000
&ZCGPR          SETC  '&XGROUPTOKEN'(2,K'&XGROUPTOKEN-2)                00112100
                AIF   ('&ZCGPR'(1,1) NE '0').ZG14P                      00112200
                AIF   (K'&ZCGPR GT 2).ZG14Q                             00112300
                AIF   ('&ZCGPR' EQ '0').ZG14Q                           00112400
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00112500
                AIF   (T'&ZCGPR NE 'N').ZG14Q   INVALID REG NAME        00112600
.ZG14P          ANOP  ,                                                 00112700
                AIF   (T'&ZCGPR NE 'N').ZG14R   NON NUMERIC             00112800
                AIF   ('&ZCGPR' LT '2').ZG14Q                           00112900
                AIF   ('&ZCGPR' LE '12').ZG14R                          00113000
.ZG14Q          ANOP  ,                                                 00113100
&ZMS            SETC  '"GROUPTOKEN='            *KGPRA* MNOTE           00113200
&ZMS            SETC  '&ZMS.&GROUPTOKEN"'                               00113300
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00113400
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  00113500
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00113600
.ZG14R          ANOP  ,                                                 00113700
.*----------------------------------------------------------------***   00113800
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00113900
                AIF   (N'&SYSEVENT LE 1).ZG17A  CK NUM                  00114000
&ZMS            SETC  '"SYSEVENT='              *KPOSA* MNOTE           00114100
&ZMS            SETC  '&ZMS.&SYSEVENT"'                                 00114200
&ZMS            SETC  '&ZMS "SYSEVENT"'                                 00114300
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00114400
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00114500
.ZG17A          ANOP  ,                                                 00114600
.*-------------------------------------------------------------------   00114700
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00114800
&XSYSEVENT      SETC  ''          INITIALIZE XVARIABLE                  00114900
.ZG18A   AIF   ('&SYSEVENT(1)' NE 'NO').ZG19A                           00115000
&XSYSEVENT      SETC  'NO'        SET KEYWORD                           00115100
.*-------------------------------------------------------------------   00115200
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00115300
.ZG19A   AIF   ('&SYSEVENT(1)' NE 'YES').ZG20A                          00115400
&XSYSEVENT      SETC  'YES'       SET KEYWORD                           00115500
.*-------------------------------------------------------------------   00115600
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00115700
.ZG20A          AIF   (K'&XSYSEVENT GT 0).ZG20C  KEYWORD                00115800
                AIF   (K'&SYSEVENT(1) LE 0).ZG20B                       00115900
&ZMS            SETC  '"SYSEVENT='              *KUKWA* MNOTE           00116000
&ZMS            SETC  '&ZMS.&SYSEVENT"'                                 00116100
&ZMS            SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '         00116200
&ZMS            SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'               00116300
&ZMS            SETC  '&ZMS "NO"'               VALID KEYWORD           00116400
&ZMS            SETC  '&ZMS OR "YES".'          VALID KEYWORD           00116500
                MNOTE 8,' &ZMS '                                        00116600
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00116700
.ZG20B          ANOP  ,                                                 00116800
&XSYSEVENT      SETC  'NO'        SET DEFAULT KEYWORD                   00116900
.ZG20C          ANOP  ,                                                 00117000
&ZXSYSEVENT     SETC  'INPUT'     SET IN/OUTPUT                         00117100
.*----------------------------------------------------------------***   00117200
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00117300
                AIF   (N'&RTNCODE LE 1).ZG22A   CK NUM                  00117400
&ZMS            SETC  '"RTNCODE='               *KPOSA* MNOTE           00117500
&ZMS            SETC  '&ZMS.&RTNCODE"'                                  00117600
&ZMS            SETC  '&ZMS "RTNCODE"'                                  00117700
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00117800
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00117900
.ZG22A          ANOP  ,                                                 00118000
.*-------------------------------------------------------------------   00118100
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00118200
                AIF   (K'&RTNCODE(1) LE 0).ZG22C  NO PARM               00118300
&ZXRTNCODE      SETC  'OUTPUT'    SET OUTPUT                            00118400
&XRTNCODE       SETC  '&RTNCODE(1)'             SET XVARIABLE           00118500
                AIF   (N'&RTNCODE GT 1).ZG22C                           00118600
&XRTNCODE       SETC  '&RTNCODE'  SET XVARIABLE                         00118700
.ZG22C          ANOP  ,                                                 00118800
.*-------------------------------------------------------------------   00118900
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00119000
                AIF   (K'&ZXRTNCODE LE 0).ZG22R  NOT I/O                00119100
                AIF   ('&XRTNCODE'(1,1) NE '(').ZG22R                   00119200
&ZCGPR          SETC  '&XRTNCODE'(2,K'&XRTNCODE-2)                      00119300
                AIF   ('&ZCGPR'(1,1) NE '0').ZG22P                      00119400
                AIF   (K'&ZCGPR GT 2).ZG22Q                             00119500
                AIF   ('&ZCGPR' EQ '0').ZG22Q                           00119600
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00119700
                AIF   (T'&ZCGPR NE 'N').ZG22Q   INVALID REG NAME        00119800
.ZG22P          ANOP  ,                                                 00119900
                AIF   (T'&ZCGPR NE 'N').ZG22R   NON NUMERIC             00120000
                AIF   ('&ZCGPR' LT '2').ZG22Q                           00120100
                AIF   ('&ZCGPR' LE '12').ZG22R                          00120200
.ZG22Q          ANOP  ,                                                 00120300
&ZMS            SETC  '"RTNCODE='               *KGPRA* MNOTE           00120400
&ZMS            SETC  '&ZMS.&RTNCODE"'                                  00120500
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00120600
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  00120700
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00120800
.ZG22R          ANOP  ,                                                 00120900
.*----------------------------------------------------------------***   00121000
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00121100
                AIF   (N'&RSNCODE LE 1).ZG25A   CK NUM                  00121200
&ZMS            SETC  '"RSNCODE='               *KPOSA* MNOTE           00121300
&ZMS            SETC  '&ZMS.&RSNCODE"'                                  00121400
&ZMS            SETC  '&ZMS "RSNCODE"'                                  00121500
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00121600
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00121700
.ZG25A          ANOP  ,                                                 00121800
.*-------------------------------------------------------------------   00121900
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00122000
                AIF   (K'&RSNCODE(1) LE 0).ZG25C  NO PARM               00122100
&ZXRSNCODE      SETC  'OUTPUT'    SET OUTPUT                            00122200
&XRSNCODE       SETC  '&RSNCODE(1)'             SET XVARIABLE           00122300
                AIF   (N'&RSNCODE GT 1).ZG25C                           00122400
&XRSNCODE       SETC  '&RSNCODE'  SET XVARIABLE                         00122500
.ZG25C          ANOP  ,                                                 00122600
.*-------------------------------------------------------------------   00122700
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00122800
                AIF   (K'&ZXRSNCODE LE 0).ZG25R  NOT I/O                00122900
                AIF   ('&XRSNCODE'(1,1) NE '(').ZG25R                   00123000
&ZCGPR          SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                      00123100
                AIF   ('&ZCGPR'(1,1) NE '0').ZG25P                      00123200
                AIF   (K'&ZCGPR GT 2).ZG25Q                             00123300
                AIF   ('&ZCGPR' EQ '0').ZG25Q                           00123400
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00123500
                AIF   (T'&ZCGPR NE 'N').ZG25Q   INVALID REG NAME        00123600
.ZG25P          ANOP  ,                                                 00123700
                AIF   (T'&ZCGPR NE 'N').ZG25R   NON NUMERIC             00123800
                AIF   ('&ZCGPR' LT '2').ZG25Q                           00123900
                AIF   ('&ZCGPR' LE '12').ZG25R                          00124000
.ZG25Q          ANOP  ,                                                 00124100
&ZMS            SETC  '"RSNCODE='               *KGPRA* MNOTE           00124200
&ZMS            SETC  '&ZMS.&RSNCODE"'                                  00124300
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00124400
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  00124500
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00124600
.ZG25R          ANOP  ,                                                 00124700
.******************************************************************     00124800
.***AH.P00 CHECK STANDALONE POSITIONAL VARIABLES                        00124900
.******************************************************************     00125000
                ACTR  10000                                             00125100
.*----------------------------------------------------------------***   00125200
.***AH.P02 EXTRA POSITIONALS                                            00125300
                AIF   (N'&SYSLIST LE 0).ZGLISTX  NO EXTRAS              00125400
                AIF   (N'&SYSLIST NE 2).ZGLISTX1  NOT NULL              00125500
                AIF   ('&SYSLIST(1)' NE '').ZGLISTX1  NOT NULL          00125600
                AIF   ('&SYSLIST(2)' EQ '').ZGLISTX  NOT NULL           00125700
.ZGLISTX1       ANOP  ,                                                 00125800
&ZCVAL          SETC  ''          ERROR FIELD                           00125900
&ZAWRK          SETA  0           POSITIONAL NUMBER                     00126000
.ZGLIST2        ANOP  ,                                                 00126100
&ZAWRK          SETA  &ZAWRK+1    NEXT POSITIONAL                       00126200
                AIF   (&ZAWRK GT N'&SYSLIST).ZGLIST3  DONE              00126300
&ZCVAL          SETC '&ZCVAL,&SYSLIST(&ZAWRK)'  EXTRA                   00126400
                AGO   .ZGLIST2                                          00126500
.*                                                                      00126600
.ZGLIST3        ANOP  ,                                                 00126700
&ZCVAL          SETC '&ZCVAL'(2,K'&ZCVAL-1)     STRIP COMMA             00126800
&ZMS            SETC  'POSITIONAL ARGUMENT(S),'  *PPOSA* MNOTE          00126900
&ZMS            SETC  '&ZMS "&ZCVAL"'                                   00127000
&ZMS            SETC  '&ZMS CANNOT BE USED.'                            00127100
&ZMS            SETC  '&ZMS NO POSITIONAL ARGUMENTS'                    00127200
                MNOTE 8,' &ZMS ARE ALLOWED.'                            00127300
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00127400
.ZGLISTX        ANOP  ,                                                 00127500
&ZASYSLNDX      SETA  0                                                 00127600
.*-------------------------------------------------------------------   00127700
.***AG.MF04 MF=(SLE)                                                    00127800
.ZGMFX          ANOP  ,           END OF FULL SYNTAX CHECK              00127900
.*******************************************************************    00128000
.***AE.ZMR01 NO CODE GENERATED IF ERRORS DETECTED                       00128100
.*******************************************************************    00128200
                AIF   (&ZMACRET NE 0).ZLX2      ERROR DETECTED          00128300
.*******************************************************************    00128400
.***AE.01  START OF IXZXIXMB MACRO CODE                                 00128500
.*******************************************************************    00128600
                LCLC  &M0M0001                 NAME                     00128700
&M0M0001        SETC  '&XLABEL'                SET NAME                 00128800
                AIF   (K'&XLABEL NE 0).XLAB2                            00128900
&M0M0001        SETC  'M00M&SYSNDX'            DEFAULT NAME             00129000
.*                                                                      00129100
.XLAB2          ANOP  ,                                                 00129200
&M0M0001 DS    0H                             IXZXIXMB-1                00129300
.*******************************************************************    00129400
.***AE.PR01 PRINT CONTROLS, DEFAULT IS YES                              00129500
.*******************************************************************    00129600
              PUSH  PRINT                                               00129700
                AIF   ('&ZPRINT' NE 'NO').ZPRINTX  TURN PRINT ON        00129800
                PRINT OFF         ++ PR01                               00129900
                AGO   .ZPRNTXX                                          00130000
.ZPRINTX        PRINT ON                                                00130100
.ZPRNTXX        ANOP  ,                                                 00130200
.********************************************************************   00130300
.***AL.L01 INTERNAL ARRAY TO PRODUCE FORMATTED CODE                     00130400
.********************************************************************   00130500
                      LCLA  &ZOPN          LIST INSTRUCTION INDEX       00130600
                      LCLA  &ZOPN1         INVOCATION INDEX             00130700
                      LCLC  &ZOPL(4095)    LABEL                        00130800
                      LCLC  &ZOPO(4095)    OPERATION                    00130900
                      LCLC  &ZOPV(4095)    VALUE                        00131000
                      LCLC  &ZOPD(4095)    DESCRIPTION                  00131100
.*                                                                      00131200
&ZOPN                 SETA  0              INITIAL INST INDEX VALUE     00131300
.******************************************************************     00131400
.***AL.L10 IXZXIXMB FMT=LIST MF=S|L PARAMETERS                          00131500
.******************************************************************     00131600
                      AIF   ('&XMF' EQ 'L').ZLMFSL2                     00131700
                      AIF   ('&XMF' NE 'S').ZLMFSLX                     00131800
&XMFCTRL              SETC  '#Z'.'&SYSNDX'(1,4).'A'                     00131900
&XMFATTR              SETC  '0D'                                        00132000
.*                                                                      00132100
&ZOPN                 SETA  &ZOPN+1                                     00132200
&ZOPL(&ZOPN)          SETC  ' '                                         00132300
&ZOPO(&ZOPN)          SETC  'B'                                         00132400
&ZOPV(&ZOPN)          SETC  '&XMFCTRL.S'                                00132500
&ZOPD(&ZOPN)          SETC  '++ IXZXIXMB ARG PARMS'                     00132600
.*                                                                      00132700
&ZOPN                 SETA  &ZOPN+1                                     00132800
&ZOPL(&ZOPN)          SETC  ' '                                         00132900
&ZOPO(&ZOPN)          SETC  'SPACE'                                     00133000
&ZOPV(&ZOPN)          SETC  '1'                                         00133100
&ZOPD(&ZOPN)          SETC  ' '                                         00133200
.*                                                                      00133300
.ZLMFSL2              ANOP  ,                                           00133400
.*-------------------------------------------------------------------   00133500
.***AM.L01  IXZXIXMB FMT=LIST PARAMETERS                                00133600
&ZOPN                 SETA &ZOPN+1                                      00133700
&ZOPL(&ZOPN)          SETC '&XMFCTRL'                                   00133800
&ZOPO(&ZOPN)          SETC 'DS'                                         00133900
&ZOPV(&ZOPN)          SETC '&XMFATTR'                                   00134000
&ZOPD(&ZOPN)          SETC '++ IXZXIXMB PARM LIST'                      00134100
.*-------------------------------------------------------------------   00134200
.***AM.L02 XVERSION XL1                                                 00134300
&ZOPN                 SETA &ZOPN+1                                      00134400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XVERSION'                         00134500
&ZOPO(&ZOPN)          SETC 'DS'                                         00134600
&ZOPV(&ZOPN)          SETC 'XL1'                                        00134700
&ZOPD(&ZOPN)          SETC '++ INPUT XVERSION'                          00134800
.*-------------------------------------------------------------------   00134900
.***AM.L09  XEYECATCH CL6                                               00135000
&ZOPN                 SETA &ZOPN+1                                      00135100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XEYECATCH'                        00135200
&ZOPO(&ZOPN)          SETC 'DS'                                         00135300
&ZOPV(&ZOPN)          SETC 'CL6'                                        00135400
&ZOPD(&ZOPN)          SETC '++ CONSTANT  XEYECATCH'                     00135500
.*-------------------------------------------------------------------   00135600
.***AM.L09  XRSV0001 CL1                                                00135700
&ZOPN                 SETA &ZOPN+1                                      00135800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0001'                         00135900
&ZOPO(&ZOPN)          SETC 'DS'                                         00136000
&ZOPV(&ZOPN)          SETC 'CL1'                                        00136100
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV0001'                      00136200
.*-------------------------------------------------------------------   00136300
.***AM.L09  XMBOXNAME CL16                                              00136400
&ZOPN                 SETA &ZOPN+1                                      00136500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMBOXNAME'                        00136600
&ZOPO(&ZOPN)          SETC 'DS'                                         00136700
&ZOPV(&ZOPN)          SETC 'CL16'                                       00136800
&ZOPD(&ZOPN)          SETC '++ &ZXMBOXNAME  XMBOXNAME'                  00136900
.*-------------------------------------------------------------------   00137000
.***AM.L09  XPOSTXIT A                                                  00137100
&ZOPN                 SETA &ZOPN+1                                      00137200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XPOSTXIT'                         00137300
&ZOPO(&ZOPN)          SETC 'DS'                                         00137400
&ZOPV(&ZOPN)          SETC 'A'                                          00137500
&ZOPD(&ZOPN)          SETC '++ &ZXPOSTXIT  XPOSTXIT'                    00137600
.*-------------------------------------------------------------------   00137700
.***AM.L09  XPOSTDATA A                                                 00137800
&ZOPN                 SETA &ZOPN+1                                      00137900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XPOSTDATA'                        00138000
&ZOPO(&ZOPN)          SETC 'DS'                                         00138100
&ZOPV(&ZOPN)          SETC 'A'                                          00138200
&ZOPD(&ZOPN)          SETC '++ &ZXPOSTDATA  XPOSTDATA'                  00138300
.*-------------------------------------------------------------------   00138400
.***AM.L09  XPOSTALET F                                                 00138500
&ZOPN                 SETA &ZOPN+1                                      00138600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XPOSTALET'                        00138700
&ZOPO(&ZOPN)          SETC 'DS'                                         00138800
&ZOPV(&ZOPN)          SETC 'F'                                          00138900
&ZOPD(&ZOPN)          SETC '++ &ZXPOSTALET  XPOSTALET'                  00139000
.*-------------------------------------------------------------------   00139100
.***AM.L09  XGROUPTOKEN F                                               00139200
&ZOPN                 SETA &ZOPN+1                                      00139300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XGROUPTOKEN'                      00139400
&ZOPO(&ZOPN)          SETC 'DS'                                         00139500
&ZOPV(&ZOPN)          SETC 'F'                                          00139600
&ZOPD(&ZOPN)          SETC '++ &ZXGROUPTOKEN  XGROUPTOKEN'              00139700
.*-------------------------------------------------------------------   00139800
.***AM.L03 XSYSEVENTS BL.8                                              00139900
&ZOPN                 SETA &ZOPN+1                                      00140000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSYSEVENTS'                       00140100
&ZOPO(&ZOPN)          SETC 'DS'                                         00140200
&ZOPV(&ZOPN)          SETC 'BL.8'                                       00140300
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             00140400
.*                                                                      00140500
&ZOPN                 SETA  &ZOPN+1                                     00140600
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XSYSEVENT_YES'                   00140700
&ZOPO(&ZOPN)          SETC  'EQU'                                       00140800
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             00140900
&ZOPD(&ZOPN)          SETC  '++ XSYSEVENT.'                             00141000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).YES'                          00141100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00141200
.*                                                                      00141300
&ZOPN                 SETA  &ZOPN+1                                     00141400
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XSYSEVENT_NO'                    00141500
&ZOPO(&ZOPN)          SETC  'EQU'                                       00141600
&ZOPV(&ZOPN)          SETC  'B''01000000'''                             00141700
&ZOPD(&ZOPN)          SETC  '++ XSYSEVENT.'                             00141800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).NO'                           00141900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00142000
.*-------------------------------------------------------------------   00142100
.***AM.L10 END OF IXZXIXMB LIST PARAMETERS                              00142200
&ZOPN                 SETA &ZOPN+1                                      00142300
&ZOPL(&ZOPN)          SETC '&XMFCTRL.L'                                 00142400
&ZOPO(&ZOPN)          SETC 'EQU'                                        00142500
&ZOPV(&ZOPN)          SETC '*-&XMFCTRL'                                 00142600
&ZOPD(&ZOPN)          SETC '++ LENGTH OF PLIST'                         00142700
.*                                                                      00142800
&ZOPN                 SETA &ZOPN+1                                      00142900
&ZOPL(&ZOPN)          SETC ' '                                          00143000
&ZOPO(&ZOPN)          SETC 'SPACE'                                      00143100
&ZOPV(&ZOPN)          SETC '1'                                          00143200
&ZOPD(&ZOPN)          SETC ' '                                          00143300
.*-------------------------------------------------------------------   00143400
.***AL.L12 IXZXIXMB FMT=LIST MF=S|L PARAMETERS                          00143500
                      AIF   ('&XMF' EQ 'L').ZMFLX  DONE IF MF=L         00143600
.*                                                                      00143700
&ZOPN                 SETA  &ZOPN+1                                     00143800
&ZOPL(&ZOPN)          SETC  '&XMFCTRL.S'                                00143900
&ZOPO(&ZOPN)          SETC  'DC'                                        00144000
&ZOPV(&ZOPN)          SETC  '0H''0'''                                   00144100
&ZOPD(&ZOPN)          SETC  '++ IXZXIXMB ARG PARMS'                     00144200
.*                                                                      00144300
.ZLMFSLX              ANOP  ,                                           00144400
.*-------------------------------------------------------------------   00144500
.***AL.L13 SET ZPLLEN TO ITS APPROPRIATE VALUE                          00144600
&ZPLLEN               SETA 41                                           00144700
.*                                                                      00144800
.******************************************************************     00144900
.***AI.L01 IXZXIXMB FMT=LIST FILL IN PARAMETER AREA                     00145000
.******************************************************************     00145100
                      ACTR  10000                                       00145200
&ZCVAL                SETC  'LA'           ASSUME XA MODE               00145300
                      AIF   ('&SYSASCE' EQ 'P').ZIMFXA  SYSSTATE PRI    00145400
&ZCVAL                SETC  'LAE'          XAX MODE                     00145500
.ZIMFXA               ANOP ,                                            00145600
.*                                                                      00145700
                      AIF   ('&XMFCTRL'(1,1) NE '(').ZIMFN2  NOT GPR    00145800
&ZCGPR                SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)  GET GPR         00145900
                      AIF   ('&ZCGPR' EQ 'GPR1').ZIMFNX                 00146000
                      AIF   ('&ZCGPR' EQ 'GPR01').ZIMFNX                00146100
                      AIF   ('&ZCGPR' EQ 'REG1').ZIMFNX                 00146200
                      AIF   ('&ZCGPR' EQ 'REG01').ZIMFNX                00146300
                      AIF   ('&ZCGPR' EQ 'R1').ZIMFNX                   00146400
                      AIF   ('&ZCGPR' EQ '1').ZIMFNX                    00146500
                      AIF   ('&ZCGPR' EQ '01').ZIMFNX                   00146600
&ZOPN                 SETA  &ZOPN+1                                     00146700
&ZOPL(&ZOPN)          SETC  ' '                                         00146800
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00146900
&ZOPV(&ZOPN)          SETC  '1,0(,&ZCGPR)'                              00147000
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00147100
                      AGO   .ZIMFNX                                     00147200
.*                                                                      00147300
.ZIMFN2               ANOP ,                                            00147400
&ZOPN                 SETA  &ZOPN+1                                     00147500
&ZOPL(&ZOPN)          SETC  ' '                                         00147600
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00147700
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL'                                00147800
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00147900
.ZIMFNX               ANOP ,                                            00148000
.********************************************************************   00148100
.***AI.L02 IXZXIXMB FMT=LIST INITIALIZE PARAMETER AREA                  00148200
.********************************************************************   00148300
.***AI.L03 MF=(SLE)                                                     00148400
                      AIF   ('&XMF' EQ 'L').ZIMFLX                      00148500
.*                                                                      00148600
&ZOPN                 SETA  &ZOPN+1                                     00148700
&ZOPL(&ZOPN)          SETC  ' '                                         00148800
&ZOPO(&ZOPN)          SETC  'XC'                                        00148900
&ZOPV(&ZOPN)          SETC  '0(&ZPLLEN,1),0(1)'                         00149000
&ZOPD(&ZOPN)          SETC  '++ INITIALIZE'                             00149100
.ZIMFLX               ANOP  ,                                           00149200
.*-------------------------------------------------------------------   00149300
.***AI.L04B XVERSION XL1                                                00149400
                      AIF   (&XPLISTVER EQ 0).ZIMFVX                    00149500
&ZOPN                 SETA  &ZOPN+1                                     00149600
&ZOPL(&ZOPN)          SETC  ' '                                         00149700
&ZOPO(&ZOPN)          SETC  'MVI'                                       00149800
&ZOPV(&ZOPN)          SETC  '0(1),&XPLISTVER'                           00149900
&ZOPD(&ZOPN)          SETC  '++ INPUT XVERSION XL1'                     00150000
.ZIMFVX               ANOP  ,                                           00150100
.*-------------------------------------------------------------------   00150200
.***AI.L60 XEYECATCH CL6                                                00150300
&ZOPN                 SETA  &ZOPN+1                                     00150400
&ZOPL(&ZOPN)          SETC  ' '                                         00150500
&ZOPO(&ZOPN)          SETC  'MVC'                                       00150600
&ZOPV(&ZOPN)          SETC  '1(6,1),=CL6''YIXMB '''                     00150700
&ZOPD(&ZOPN)          SETC  '++ CL6 CONSTANT'                           00150800
.*-------------------------------------------------------------------   00150900
.***AI.L25  XMBOXNAME CL16                                              00151000
                      AIF   ('&ZXMBOXNAME' EQ '').ZI4E                  00151100
                      AIF   ('&ZXMBOXNAME' EQ 'OUTPUT').ZI4E            00151200
&ZCGPR                SETC  '&XMBOXNAME'                                00151300
.*                                                                      00151400
                      AIF   ('&XMBOXNAME'(1,1) NE '(').ZI4B             00151500
&ZCGPR   SETC  '0('.'&XMBOXNAME'(2,K'&XMBOXNAME-2).')'                  00151600
.ZI4B                 ANOP  ,                                           00151700
.*                                                                      00151800
&ZOPN                 SETA  &ZOPN+1                                     00151900
&ZOPL(&ZOPN)          SETC  ' '                                         00152000
&ZOPO(&ZOPN)          SETC  'MVC'                                       00152100
&ZOPV(&ZOPN)          SETC  '8(16,1),&ZCGPR'                            00152200
&ZOPD(&ZOPN)          SETC  '++ &ZXMBOXNAME XMBOXNAME'                  00152300
.*                                                                      00152400
.ZI4E                 ANOP  ,                                           00152500
.*-------------------------------------------------------------------   00152600
.***AI.L25  XPOSTXIT AL4                                                00152700
                      AIF   ('&ZXPOSTXIT' EQ '').ZI5E                   00152800
                      AIF   ('&ZXPOSTXIT' EQ 'OUTPUT').ZI5E             00152900
&ZCGPR                SETC  '&XPOSTXIT'                                 00153000
.*                                                                      00153100
                      AIF   ('&XPOSTXIT'(1,1) NE '(').ZI5B              00153200
&ZCGPR   SETC  '0('.'&XPOSTXIT'(2,K'&XPOSTXIT-2).')'                    00153300
                      AGO   .ZI5D                                       00153400
.ZI5B                 ANOP  ,                                           00153500
.*                                                                      00153600
&ZC                   SETC  '&XPOSTXIT'(1,1)                            00153700
                      AIF   (T'&ZC NE 'N').ZI5D                         00153800
&ZC                   SETC  '&XPOSTXIT'                                 00153900
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI5D                00154000
&ZCGPR                SETC  '=AL4(&XPOSTXIT)'                           00154100
.*                                                                      00154200
.ZI5D                 ANOP  ,                                           00154300
.*                                                                      00154400
&ZOPN                 SETA  &ZOPN+1                                     00154500
&ZOPL(&ZOPN)          SETC  ' '                                         00154600
&ZOPO(&ZOPN)          SETC  'MVC'                                       00154700
&ZOPV(&ZOPN)          SETC  '24(4,1),&ZCGPR'                            00154800
&ZOPD(&ZOPN)          SETC  '++ &ZXPOSTXIT XPOSTXIT'                    00154900
.*                                                                      00155000
.ZI5E                 ANOP  ,                                           00155100
.*-------------------------------------------------------------------   00155200
.***AI.L25  XPOSTDATA AL4                                               00155300
                      AIF   ('&ZXPOSTDATA' EQ '').ZI6E                  00155400
                      AIF   ('&ZXPOSTDATA' EQ 'OUTPUT').ZI6E            00155500
&ZCGPR                SETC  '&XPOSTDATA'                                00155600
.*                                                                      00155700
                      AIF   ('&XPOSTDATA'(1,1) NE '(').ZI6B             00155800
&ZCGPR   SETC  '0('.'&XPOSTDATA'(2,K'&XPOSTDATA-2).')'                  00155900
                      AGO   .ZI6D                                       00156000
.ZI6B                 ANOP  ,                                           00156100
.*                                                                      00156200
&ZC                   SETC  '&XPOSTDATA'(1,1)                           00156300
                      AIF   (T'&ZC NE 'N').ZI6D                         00156400
&ZC                   SETC  '&XPOSTDATA'                                00156500
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI6D                00156600
&ZCGPR                SETC  '=AL4(&XPOSTDATA)'                          00156700
.*                                                                      00156800
.ZI6D                 ANOP  ,                                           00156900
.*                                                                      00157000
&ZOPN                 SETA  &ZOPN+1                                     00157100
&ZOPL(&ZOPN)          SETC  ' '                                         00157200
&ZOPO(&ZOPN)          SETC  'MVC'                                       00157300
&ZOPV(&ZOPN)          SETC  '28(4,1),&ZCGPR'                            00157400
&ZOPD(&ZOPN)          SETC  '++ &ZXPOSTDATA XPOSTDATA'                  00157500
.*                                                                      00157600
.ZI6E                 ANOP  ,                                           00157700
.*-------------------------------------------------------------------   00157800
.***AI.L18  XPOSTALET F                                                 00157900
         AIF   ('&XPOSTALET' NE 'NULL').ZI7                             00158000
&ZXPOSTALET           SETC  ''             RESET INPUT/OUTPUT           00158100
.ZI7                  ANOP  ,                                           00158200
.*-------------------------------------------------------------------   00158300
.***AI.L25  XPOSTALET F                                                 00158400
                      AIF   ('&ZXPOSTALET' EQ '').ZI7E                  00158500
                      AIF   ('&ZXPOSTALET' EQ 'OUTPUT').ZI7E            00158600
&ZCGPR                SETC  '&XPOSTALET'                                00158700
.*                                                                      00158800
                      AIF   ('&XPOSTALET'(1,1) NE '(').ZI7B             00158900
&ZCGPR   SETC  '0('.'&XPOSTALET'(2,K'&XPOSTALET-2).')'                  00159000
                      AGO   .ZI7D                                       00159100
.ZI7B                 ANOP  ,                                           00159200
.*                                                                      00159300
&ZC                   SETC  '&XPOSTALET'(1,1)                           00159400
                      AIF   (T'&ZC NE 'N').ZI7D                         00159500
&ZC                   SETC  '&XPOSTALET'                                00159600
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI7D                00159700
&ZCGPR                SETC  '=FL4''&XPOSTALET'''                        00159800
.*                                                                      00159900
.ZI7D                 ANOP  ,                                           00160000
.*                                                                      00160100
&ZOPN                 SETA  &ZOPN+1                                     00160200
&ZOPL(&ZOPN)          SETC  ' '                                         00160300
&ZOPO(&ZOPN)          SETC  'MVC'                                       00160400
&ZOPV(&ZOPN)          SETC  '32(4,1),&ZCGPR'                            00160500
&ZOPD(&ZOPN)          SETC  '++ &ZXPOSTALET XPOSTALET'                  00160600
.*                                                                      00160700
.ZI7E                 ANOP  ,                                           00160800
.*-------------------------------------------------------------------   00160900
.***AI.L25  XGROUPTOKEN F                                               00161000
                      AIF   ('&ZXGROUPTOKEN' EQ '').ZI8E                00161100
                      AIF   ('&ZXGROUPTOKEN' EQ 'OUTPUT').ZI8E          00161200
&ZCGPR                SETC  '&XGROUPTOKEN'                              00161300
.*                                                                      00161400
                      AIF   ('&XGROUPTOKEN'(1,1) NE '(').ZI8B           00161500
&ZCGPR   SETC  '0('.'&XGROUPTOKEN'(2,K'&XGROUPTOKEN-2).')'              00161600
                      AGO   .ZI8D                                       00161700
.ZI8B                 ANOP  ,                                           00161800
.*                                                                      00161900
&ZC                   SETC  '&XGROUPTOKEN'(1,1)                         00162000
                      AIF   (T'&ZC NE 'N').ZI8D                         00162100
&ZC                   SETC  '&XGROUPTOKEN'                              00162200
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI8D                00162300
&ZCGPR                SETC  '=FL4''&XGROUPTOKEN'''                      00162400
.*                                                                      00162500
.ZI8D                 ANOP  ,                                           00162600
.*                                                                      00162700
&ZOPN                 SETA  &ZOPN+1                                     00162800
&ZOPL(&ZOPN)          SETC  ' '                                         00162900
&ZOPO(&ZOPN)          SETC  'MVC'                                       00163000
&ZOPV(&ZOPN)          SETC  '36(4,1),&ZCGPR'                            00163100
&ZOPD(&ZOPN)          SETC  '++ &ZXGROUPTOKEN XGROUPTOKEN'              00163200
.*                                                                      00163300
.ZI8E                 ANOP  ,                                           00163400
.*-------------------------------------------------------------------   00163500
.***AI.L05 XSYSEVENTS BL1                                               00163600
&ZW                   SETC  ''                                          00163700
&ZCLNG                SETC  ''             RESET BIT ON FLAG            00163800
.*-------------------------------------------------------------------   00163900
.***AI.L08 XSYSEVENTS "YES"                                             00164000
.***      BL1'1XXXXXXX'                                                 00164100
         AIF   ('&XSYSEVENT' NE 'YES').ZI10A                            00164200
&ZW                   SETC  '&ZW.1'                                     00164300
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00164400
                      AGO   .ZI10C                                      00164500
.*                                                                      00164600
.ZI10A                ANOP  ,                                           00164700
&ZW                   SETC  '&ZW.0'                                     00164800
.ZI10C                ANOP  ,                                           00164900
.*-------------------------------------------------------------------   00165000
.***AI.L08 XSYSEVENTS "NO"                                              00165100
.***      BL1'X1XXXXXX'                                                 00165200
         AIF   ('&XSYSEVENT' NE 'NO').ZI11A                             00165300
&ZW                   SETC  '&ZW.1000000'                               00165400
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00165500
                      AGO   .ZI11C                                      00165600
.*                                                                      00165700
.ZI11A                ANOP  ,                                           00165800
&ZW                   SETC  '&ZW.0000000'                               00165900
.ZI11C                ANOP  ,                                           00166000
.*-------------------------------------------------------------------   00166100
.***AI.L11 XSYSEVENTS BL1                                               00166200
                      AIF   ('&ZCLNG' NE 'YES').ZI11E  ALL ZERO BITS    00166300
&ZOPN                 SETA  &ZOPN+1                                     00166400
&ZOPL(&ZOPN)          SETC  ' '                                         00166500
&ZOPO(&ZOPN)          SETC  'OI'                                        00166600
&ZOPV(&ZOPN)          SETC  '40(1),B''&ZW'''                            00166700
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              00166800
.ZI11E                ANOP  ,                                           00166900
.*-------------------------------------------------------------------   00167000
&ZOPN1                SETA &ZOPN                                        00167100
.*******************************************************************    00167200
.***  PROCESS IXZXIXMB OUTPUT PARAMETERS                                00167300
.*******************************************************************    00167400
                      ACTR  10000                                       00167500
.*******************************************************************    00167600
.***AO.X01  LABEL TO BYPASS INVOCATION                                  00167700
.*******************************************************************    00167800
&ZOPN                 SETA  &ZOPN+1                                     00167900
&ZOPL(&ZOPN)          SETC  'AMGE&SYSNDX'                               00168000
&ZOPO(&ZOPN)          SETC  'DS'                                        00168100
&ZOPV(&ZOPN)          SETC  '0H'                                        00168200
&ZOPD(&ZOPN)          SETC  '++ BYPASS INVOCATION'                      00168300
.*******************************************************************    00168400
.***AO.X02  RETURN CODE PROCESSING                                      00168500
.*******************************************************************    00168600
                      AIF   (N'&RTNCODE LE 0).ZMRETX                    00168700
                      AIF   ('&XRTNCODE'(1,1) EQ '(').ZMRET2            00168800
                      AIF   ('&XRTNCODE' EQ 'GPR15').ZMRETX             00168900
                      AIF   ('&XRTNCODE' EQ 'REG15').ZMRETX             00169000
                      AIF   ('&XRTNCODE' EQ 'R15').ZMRETX               00169100
                      AIF   ('&XRTNCODE' EQ '15').ZMRETX                00169200
&ZOPN                 SETA  &ZOPN+1                                     00169300
&ZOPL(&ZOPN)          SETC  ' '                                         00169400
&ZOPO(&ZOPN)          SETC  'ST'                                        00169500
&ZOPV(&ZOPN)          SETC  '15,&XRTNCODE'                              00169600
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00169700
                      AGO   .ZMRETX                                     00169800
.*                                                                      00169900
.ZMRET2               ANOP  ,                                           00170000
&ZCGPR                SETC  '&XRTNCODE'(2,K'&XRTNCODE-2)                00170100
                      AIF   ('&ZCGPR' EQ 'GPR15').ZMRETX                00170200
                      AIF   ('&ZCGPR' EQ 'REG15').ZMRETX                00170300
                      AIF   ('&ZCGPR' EQ 'R15').ZMRETX                  00170400
                      AIF   ('&ZCGPR' EQ '15').ZMRETX                   00170500
&ZOPN                 SETA  &ZOPN+1                                     00170600
&ZOPL(&ZOPN)          SETC  ' '                                         00170700
&ZOPO(&ZOPN)          SETC  'LR'                                        00170800
&ZOPV(&ZOPN)          SETC  '&ZCGPR,15'                                 00170900
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00171000
.ZMRETX               ANOP  ,                                           00171100
.*******************************************************************    00171200
.***AO.X03  REASON CODE PROCESSING                                      00171300
.*******************************************************************    00171400
                      AIF   (N'&RSNCODE LE 0).ZMRSNX                    00171500
                      AIF   ('&XRSNCODE'(1,1) EQ '(').ZMRSN2            00171600
                      AIF   ('&XRSNCODE' EQ 'GPR0').ZMRSNX              00171700
                      AIF   ('&XRSNCODE' EQ 'GPR00').ZMRSNX             00171800
                      AIF   ('&XRSNCODE' EQ 'REG0').ZMRSNX              00171900
                      AIF   ('&XRSNCODE' EQ 'REG00').ZMRSNX             00172000
                      AIF   ('&XRSNCODE' EQ 'R0').ZMRSNX                00172100
                      AIF   ('&XRSNCODE' EQ '0').ZMRSNX                 00172200
                      AIF   ('&XRSNCODE' EQ '00').ZMRSNX                00172300
&ZOPN                 SETA  &ZOPN+1                                     00172400
&ZOPL(&ZOPN)          SETC  ' '                                         00172500
&ZOPO(&ZOPN)          SETC  'ST'                                        00172600
&ZOPV(&ZOPN)          SETC  '0,&XRSNCODE'                               00172700
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00172800
                      AGO   .ZMRSNX                                     00172900
.*                                                                      00173000
.ZMRSN2               ANOP  ,                                           00173100
&ZCGPR                SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                00173200
                      AIF   ('&ZCGPR' EQ 'GPR0').ZMRSNX                 00173300
                      AIF   ('&ZCGPR' EQ 'GPR00').ZMRSNX                00173400
                      AIF   ('&ZCGPR' EQ 'REG0').ZMRSNX                 00173500
                      AIF   ('&ZCGPR' EQ 'REG00').ZMRSNX                00173600
                      AIF   ('&ZCGPR' EQ 'R0').ZMRSNX                   00173700
                      AIF   ('&ZCGPR' EQ '0').ZMRSNX                    00173800
                      AIF   ('&ZCGPR' EQ '00').ZMRSNX                   00173900
&ZOPN                 SETA  &ZOPN+1                                     00174000
&ZOPL(&ZOPN)          SETC  ' '                                         00174100
&ZOPO(&ZOPN)          SETC  'LR'                                        00174200
&ZOPV(&ZOPN)          SETC  '&ZCGPR,0'                                  00174300
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00174400
.ZMRSNX               ANOP  ,                                           00174500
.*******************************************************************    00174600
.***AO.X04  LABEL FOR MF=L PROCESSING                                   00174700
.*******************************************************************    00174800
.ZMFLX                ANOP  ,              MF=L PROCESSING              00174900
.*******************************************************************    00175000
.***AO.X05  FORMAT GENERATED INSTRUCTIONS                               00175100
.*******************************************************************    00175200
                      ACTR  10000                                       00175300
.*                                                                      00175400
                      LCLA  &ZLC           COLUMN POSITION              00175500
                      LCLA  &ZOPX          LIST TABLE INDEX             00175600
                      LCLC  &ZLL           LABEL                        00175700
                      LCLC  &ZLOP          OPERATION                    00175800
                      LCLC  &ZLV           VALUE                        00175900
                      LCLC  &ZLD           DESCRIPTION                  00176000
.*                                                                      00176100
&ZOPX                 SETA  1                                           00176200
.ZL2                  AIF   (&ZOPX GT &ZOPN1).ZLX  B IF DONE            00176300
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00176400
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00176500
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00176600
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00176700
                      AIF   (K'&ZLD LE 0).ZL5                           00176800
&ZLC                  SETA  35             COMMENT COLUMN               00176900
                      AIF   ('&ZLD'(1,1) NE '*').ZL3                    00177000
&ZLC                  SETA  33             COMMMENT COLUMN              00177100
.ZL3                  AIF   (K'&ZLV GE &ZLC-16-1).ZL4                   00177200
&ZLV                  SETC  '&ZLV'.' '                                  00177300
                      AGO   .ZL3                                        00177400
.*                                                                      00177500
.ZL4                  ANOP  ,                                           00177600
&ZLV                  SETC  '&ZLV'.' '                                  00177700
.ZL5                  ANOP  ,                                           00177800
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00177900
.*                                                                      00178000
&ZLL     &ZLOP &ZLV                                                     00178100
.*                                                                      00178200
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00178300
                      AGO   .ZL2           CONTINUE LOOPING             00178400
.*                                                                      00178500
.ZLX                  ANOP  ,                                           00178600
                      AIF   ('&XMF' EQ 'L').ZLINKX  MF=L                00178700
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00178800
         GBLC  &ANVIRON           JES2 environment variable             00178900
         GBLB  &J3MN              JES3 Main Task environment            00179000
         GBLB  &J3ST              JES3 Subtask environment              00179100
         GBLB  &J3FSS             JES3 FSS environment                  00179200
         GBLB  &J3USR             JES3 User environment                 00179300
         GBLB  &JSXCF             JESXCF environment                    00179400
         AIF   ('&ANVIRON' EQ 'JES2').IXMB050  JES2 Main task           00179500
         AIF   ('&ANVIRON' EQ 'SUBTASK').IXMB050 JES2 Subtask           00179600
         AIF   (&J3MN).IXMB050    Are we running under JES3 Main task   00179700
         AIF   (&J3ST).IXMB050    Are we running under JES3 Sub task    00179800
         AIF   (&J3FSS).IXMB050   Are we running under JES3 FSS         00179900
         MNOTE 8,'IXZ0001 Running in an invalid environment'            00180000
.IXMB050 ANOP                                                           00180100
         AIF   ('&GROUPTOKEN'(1,1) NE '(').IXMB100                      00180200
         LR    14,&GROUPTOKEN     Load the address of the group token   00180300
         L     14,0(14)           Load the group token                  00180400
         AGO   .IXMB150                                                 00180500
.IXMB100 ANOP                                                           00180600
         L     14,&GROUPTOKEN     Load the group token                  00180700
.IXMB150 ANOP                                                           00180800
         L     14,40(14)          Load the PC number of the             00180900
*                                 routine to be called                  00181000
         PC    0(14)              Call the mailbox build routine        00181100
         AIF   ('&XMFCTRL'(1,1) NE '(').IXMB200                         00181200
         LR    1,&XMFCTRL         Restore the parameter list address    00181300
         AGO   .IXMB250                                                 00181400
.IXMB200 ANOP                                                           00181500
         LA    1,&XMFCTRL         Restore the parameter list address    00181600
.IXMB250 ANOP                                                           00181700
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00181800
.ZLINKX               ANOP  ,                                           00181900
.*******************************************************************    00182000
.***AP.X01  FORMAT GENERATED CODE                                       00182100
.ZL21                 AIF   (&ZOPX GT &ZOPN).ZLX1  B IF DONE            00182200
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00182300
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00182400
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00182500
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00182600
                      AIF   (K'&ZLD LE 0).ZL51                          00182700
&ZLC                  SETA  35             COMMENT COLUMN               00182800
                      AIF   ('&ZLD'(1,1) NE '*').ZL31                   00182900
&ZLC                  SETA  33             COMMENT COLUMN               00183000
.ZL31                 AIF   (K'&ZLV GE &ZLC-16-1).ZL41                  00183100
&ZLV                  SETC  '&ZLV'.' '                                  00183200
                      AGO   .ZL31                                       00183300
.*                                                                      00183400
.ZL41                 ANOP  ,                                           00183500
&ZLV                  SETC  '&ZLV'.' '                                  00183600
.ZL51                 ANOP  ,                                           00183700
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00183800
.*                                                                      00183900
&ZLL     &ZLOP &ZLV                                                     00184000
.*                                                                      00184100
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00184200
                      AGO   .ZL21          CONTINUE LOOPING             00184300
.*                                                                      00184400
.ZLX1                 ANOP  ,                                           00184500
.*******************************************************************    00184600
.***AP.X02  END OF IXZXIXMB MACRO                                       00184700
&ZIXZXIXMB            SETC  'YES'          SET IXZXIXMB USED            00184800
         POP   PRINT                                                    00184900
*                                            IXZXIXMB-1                 00185000
         SPACE 1                                                        00185100
.ZLX2                 ANOP  ,                                           00185200
         MEND                                                           00185300
**********************************************************************/ 00185400
*/*PB.OC01 INVOKE MACRO---------------------------------------------*/  00185500
*%IXZXIXMB: MACRO KEYS(MBOXNAME,POSTXIT,POSTDATA,POSTALET,GROUPTOKEN,   00185600
*                 SYSEVENT,RTNCODE,RSNCODE,PLISTVER,MF);                00185700
*  ANS('?'||MACLABEL||' '||'IXZPIXMB '||MACLIST||                       00185800
*         ' '||MACKEYS||';') COL(MACLMAR);                              00185900
*%END IXZXIXMB;                                                         00186000
