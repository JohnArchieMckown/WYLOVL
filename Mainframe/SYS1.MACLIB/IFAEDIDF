*                                                                       00050000
* %DCL IFAEDIDF_INCLUDED CHAR EXT;                                      00100000
* %DEACTIVATE IFAEDIDF_INCLUDED;                                        00150000
* %IF IFAEDIDF_INCLUDED = '' %THEN                                      00200000
* %DO;                                                                  00250000
*/* Macro made bi-lingual on 95243. CBGEN compile date 95227         */ 00300000
*% /*                                                                   00350000
         MACRO                                                          00400000
         IFAEDIDF &DSECT=YES,&LIST=YES,&EDOI=YES,&EDAAHDR=COND,        *00450000
               &EDAAE=COND                                              00500000
         GBLC  &IFAEDIDF_INCLUDED                                       00550000
         GBLC  &ZCBPRINT                                                00600000
&IFAEDIDF_INCLUDED SETC 'YES'                                           00650000
 TITLE   'IFAEDIDF  - IFAEDxxx IDF (return codes and output areas)   '  00700000
**/ IFAEDIDF_1:;                                                        00750000
*/* START OF SPECIFICATIONS ******************************************* 00800000
*                                                                       00850000
*  **PROPRIETARY_STATEMENT********************************************  00900000
***01* PROPRIETARY STATEMENT=                                        *  00950000
*                                                                    *  01000000
*                                                                    *  01050000
*   LICENSED MATERIALS - PROPERTY OF IBM                             *  01100000
*   THIS MACRO IS "RESTRICTED MATERIALS OF IBM"                      *  01150000
*   5645-001 (C) COPYRIGHT IBM CORP. 1996                            *  01200000
*   SEE COPYRIGHT INSTRUCTIONS                                       *  01250000
*                                                                    *  01300000
*   STATUS= HBB6601                                                  *  01350000
*                                                                    *  01400000
*  **END_OF_PROPRIETARY_STATEMENT*************************************  01450000
*                                                                       01500000
*01* DESCRIPTIVE NAME:  IFAEDxxx IDF (return codes and output areas)    01550000
*02*  ACRONYM:  EDOI                                                    01600000
*                                                                       01650000
*01* MACRO NAME:  IFAEDIDF                                              01700000
*                                                                       01750000
*01* EXTERNAL CLASSIFICATION: GUPI                                      01800000
*01* END OF EXTERNAL CLASSIFICATION:                                    01850000
*                                                                       01900000
*01* DSECT NAME:                                                        01950000
*     EDOI                                                              02000000
*     EDAAHDR                                                           02050000
*     EDAAE                                                             02100000
*                                                                       02150000
*01* COMPONENT:  SMF (SC100)                                            02200000
*                                                                       02250000
*01* EYE-CATCHER:  NONE                                                 02300000
*                                                                       02350000
*01* STORAGE ATTRIBUTES:                                                02400000
*02*  SUBPOOL:  Caller-supplied                                         02450000
*02*  KEY:  Caller-supplied                                             02500000
*02*  RESIDENCY:  Caller-supplied                                       02550000
*                                                                       02600000
*01* SIZE:  Variable                                                    02650000
*                EDOI    -- X'0010' bytes                               02700000
*                EDAAE   -- X'0048' bytes                               02750000
*                EDAAHDR -- X'0020' bytes                               02800000
*                                                                       02850000
*01* CONTROL BLOCK CHANGES:                                             02900000
*02*  IFAEDIDF                                                          02950000
*02*   5.3                                                              03000000
*03*    New                                                             03050000
*03*    Migration Considerations: NONE                                  03100000
*01* END CONTROL BLOCK CHANGES                                          03150000
*                                                                       03200000
*01* CREATED BY:                                                        03250000
*     Caller and passed as parameter on ANSAREA parameter               03300000
*      on call to IFAEDLIS                                              03350000
*     Caller and passed as parameter on OUTPUTINFO parameter            03400000
*      on call to IFAEDSTA                                              03450000
*                                                                       03500000
*01* POINTED TO BY:                                                     03550000
*     IFAEDLIS parameter list                                           03600000
*     IFAEDSTA parameter list                                           03650000
*                                                                       03700000
*01* SERIALIZATION:                                                     03750000
*     None required                                                     03800000
*                                                                       03850000
*01* FUNCTION:                                                          03900000
*02* Provides return code equates for the IFAEDxxx services.            03950000
*02* Maps the ansarea data returned by the IFAEDLIS service.            04000000
*02* Maps the outputinfo data returned by the IFAEDSTA service.         04050000
*                                                                       04100000
*02* For IFAEDSTA, the EDOI DSECT maps the outputinfo area.             04150000
*                                                                       04200000
*02* For IFAEDLIS,                                                      04250000
*    the returned information consists of a header (EDAAHDR)            04300000
*    which indicates how many Registered entries                        04350000
*    (EdaahNumR, first address in EdaahFirstRAddr) and State entries    04400000
*    (EdaahNumS, first address in EdaahFirstSAddr) follow.              04450000
*    There is also 0 or 1 Status entry (address in EdaahStatusAddr, or  04500000
*    0) to indicate the policy entry that would be used to determine    04550000
*    the state of the given product.                                    04600000
*                                                                       04650000
*02* Registered, state, and status entries are all mapped by Edaae.     04700000
*    Certain fields apply only to one or the other, and are             04750000
*    commented appropriately.                                           04800000
*                                                                       04850000
*01* METHOD OF ACCESS:                                                  04900000
*02*  ASM:                                                              04950000
*      IFAEDIDF                                                         05000000
*           DSECT=YES|NO  -- Request DSECT definition                   05050000
*           EDOI=YES|NO|COND -- Request exit record mapping             05100000
*                            USING on EDOI                              05150000
*           EDAAHDR=YES|NO|COND -- Request Header record mapping        05200000
*                            USING on EdaahDR                           05250000
*           EDAAE=YES|NO|COND -- Request exit record mapping            05300000
*                            USING on Edaae                             05350000
*     Default: DSECT=YES,EDOI=YES,EDAAHDR=COND,EDAAE=COND               05400000
*     Notes: name=YES  => expand                                        05450000
*            name=NO   => do not expand                                 05500000
*            name=COND => expand only if DSECT=YES                      05550000
*                                                                       05600000
*02*  PL/X:                                                             05650000
*      %INCLUDE SYSLIB(IFAEDIDF)                                        05700000
*                                                                       05750000
*01* DELETED BY:  Caller                                                05800000
*                                                                       05850000
*01* FREQUENCY:  Created for response to IFAEDLIS service               05900000
*                Created for response to IFAEDSTA service               05950000
*                                                                       06000000
*01* DEPENDENCIES:  None                                                06050000
*                                                                       06100000
*01* DISTRIBUTION LIBRARY:  AMACLIB                                     06150000
*                                                                       06200000
*01* CHANGE ACTIVITY:                                                   06250000
*   $L0=PRDEDCBG ,HBB6601,950601,PD00XB: Product Enable/Disable         06300000
*   $L1=PRDEDCBG ,HBB6601,950601,PD00XB: Product Enable/Disable         06350000
*                                                                       06400000
* END OF SPECIFICATIONS *********************************************/  06450000
*% /*                                                                   06500000
         AIF   ('&ZCBPRINT' EQ 'NO').P1                                 06550000
         AIF   ('&LIST' EQ 'YES').P2                                    06600000
.P1      ANOP                                                           06650000
         PUSH  PRINT                                                    06700000
         PRINT OFF                                                      06750000
.P2      ANOP                                                           06800000
         AIF   ('&EDOI' EQ 'NO').L0002                                  06850000
         AIF   ('&DSECT' EQ 'YES').L0003                                06900000
         AIF   ('&EDOI' NE 'YES').L0002                                 06950000
EDOI     DS    0F                                                       07000000
         AGO   .L0004                                                   07050000
.L0003   ANOP                                                           07100000
EDOI     DSECT                                                          07150000
.L0004   ANOP                                                           07200000
EDOIFLAGS DS   1BL1                                                     07250000
         ORG   EDOIFLAGS                                                07300000
EDOIREGISTERED EQU X'80' The product is registered                      07350000
EDOISTATUSNOTDEFINED EQU X'40' The product is not known to be enabled  *07400000
                         or disabled.                                   07450000
EDOISTATUSENABLED EQU X'20' The product is enabled.                     07500000
EDOINOTALLFEATURESRETURNED EQU X'10' The featureslen area was too      *07550000
                         small to hold the features provided at        *07600000
                         registration time. Field                      *07650000
                         EdoiNeededFeaturesLen contains the size       *07700000
                         provided at registration time.                 07750000
         ORG   EDOIFLAGS+X'00000001'                                    07800000
         DS    1CL0003                                                  07850000
EDOINEEDEDFEATURESLEN DS 1FL4 The featureslen size provided at         *07900000
                         registration time.                             07950000
EDOIPRODVERSRELMOD DS 1CL0006                                           08000000
         ORG   EDOIPRODVERSRELMOD                                       08050000
EDOIPRODVERS DS 1CL0002  The version information provided at           *08100000
                         registration time.                             08150000
EDOIPRODREL DS 1CL0002   The release information provided at           *08200000
                         registration time.                             08250000
EDOIPRODMOD DS 1CL0002   The mod level information provided at         *08300000
                         registration time.                             08350000
         DS    1CL0002                                                  08400000
*                                                                       08450000
* ********************************************************************  08500000
* *      Constants for Parameters and Return Codes                   *  08550000
* ********************************************************************  08600000
*   Product Enable/Disable Register Constants                           08650000
*                                                                       08700000
*                                                                       08750000
IFAEDREG_TYPE_STANDARD EQU 0                                            08800000
IFAEDREG_TYPE_REQUIRED EQU 2 The register request should complete even *08850000
                         if the policy indicates that the product is   *08900000
                         disabled. This would be used when registering *08950000
                         solely so your status can be queried.          09000000
IFAEDREG_TYPE_NOREPORT EQU 4 The register request should not be        *09050000
                         reported upon by display command and SMF      *09100000
                         report. This might be used when registering   *09150000
                         solely so the status can be queried.           09200000
IFAEDREG_TYPE_LICENSEDUNDERPROD EQU 8 The registering feature is not   *09250000
                         separately licensed. Rather, the license is   *09300000
                         associated with the product specified by the  *09350000
                         prodname parameter.                            09400000
IFAEDREG_TYPE_DISABLEDMESSAGE EQU 16 If the product is found to be     *09450000
                         disabled, have the system issue the           *09500000
                         appropriate message, rather than the caller   *09550000
                         having to do it.                               09600000
IFAEDREG_TYPE_NOTFOUNDDISABLED EQU 32 If no enable/disable policy      *09610000
                         entry matches this product, treat the product *09620000
                         as disabled, rather than treating it as       *09630000
                         enabled.                                       09640000
*                                                                       09650000
*   Product Enable/Disable Register Return Codes                        09700000
*   Note: 0C4 abend if bad address provided in parmlist or user data    09750000
*                                                                       09800000
*                                                                       09850000
IFAEDREG_SUCCESS EQU 0   Register service completed successfully        09900000
IFAEDREG_DISABLED EQU 4  Register service found that the product is    *09950000
                         disabled and therefore the register service   *10000000
                         was not accepted.                              10050000
IFAEDREG_NOTAVAILABLE EQU 8 Register service is not available on this  *10100000
                         system.                                        10150000
IFAEDREG_LIMITEXCEEDED EQU 12 too many unauthorized registrations for  *10200000
                         this address space                             10250000
IFAEDREG_NOTTASKMODE EQU 16 Register service was not called in task    *10300000
                         mode.                                          10350000
IFAEDREG_XM EQU 20       Register service was not called with P=H=S     10400000
IFAEDREG_BADFEATURESLEN EQU 24 Features length exceeds 1024.            10450000
IFAEDREG_NOSTORAGE EQU 28 The system could not obtain needed storage.   10500000
IFAEDREG_BADTYPE EQU 32  The type parameter did not specify a word     *10550000
                         with a value formed from adding any           *10600000
                         combination of Ifaedreg_Type_Standard,        *10635700
                         Ifaedreg_Type_Required,                       *10671400
                         Ifaedreg_Type_NoReport, Ifaedreg              *10707100
                         _Type_LicensedUnderProd,                      *10742800
                         Ifaedreg_Type_DisabledMessage, and            *10778500
                         Ifaedreg_Type_NotFoundDisabled                 10814200
IFAEDREG_LOCKED EQU 36   Register service was called holding a system  *10850000
                         lock                                           10900000
IFAEDREG_FRR EQU 40      Register service was called having an FRR      10950000
*                                                                       11000000
*   Product Enable/Disable Deregister Return Codes                      11050000
*   Note: 0C4 abend if bad address provided in parmlist or user data    11100000
*                                                                       11150000
*                                                                       11200000
IFAEDDRG_SUCCESS EQU 0   Deregister service completed successfully      11250000
IFAEDDRG_NOTAVAILABLE EQU 8 Deregister service is not available on     *11300000
                         this system.                                   11350000
IFAEDDRG_NOTREGISTERED EQU 12 The product that was to be deregistered  *11400000
                         had not been registered                        11450000
IFAEDDRG_NOTTASKMODE EQU 16 deregister service was not called in task  *11500000
                         mode.                                          11550000
IFAEDDRG_XM EQU 20       Deregister service was not called with P=H=S   11600000
IFAEDDRG_NOTAUTH EQU 24  If not supervisor state, system key, or       *11650000
                         system PKM, the entry to be deregistered must *11700000
                         be registered from the same address space and *11750000
                         must have been registered by an equally       *11800000
                         non-authorized caller.                         11850000
IFAEDDRG_LOCKED EQU 36   Deregister service was called holding a       *11900000
                         system lock                                    11950000
IFAEDDRG_FRR EQU 40      Deregister service was called having an FRR    12000000
*                                                                       12050000
*   Product Enable/Disable Status Return Codes                          12100000
*   Note: 0C4 abend if bad address provided in parmlist or user data    12150000
*                                                                       12200000
*                                                                       12250000
IFAEDSTA_SUCCESS EQU 0   Status service completed successfully          12300000
IFAEDSTA_NOTDEFINED EQU 4 The status service found no entry            *12350000
                         corresponding to the input product.            12400000
IFAEDSTA_NOTAVAILABLE EQU 8 Status service is not available on this    *12450000
                         system.                                        12500000
IFAEDSTA_NOTTASKMODE EQU 16 Status service was not called in task      *12550000
                         mode.                                          12600000
IFAEDSTA_XM EQU 20       Status service was not called with P=H=S       12650000
IFAEDSTA_LOCKED EQU 36   Status service was called holding a system    *12700000
                         lock                                           12750000
IFAEDSTA_FRR EQU 40      Status service was called having an FRR        12800000
*                                                                       12850000
*   Product Enable/Disable List Constants                               12900000
*                                                                       12950000
*                                                                       13000000
IFAEDLIS_TYPE_REGISTERED EQU 1 Return the registration entry/entries   *13050000
                         corresponding to the input product.            13100000
IFAEDLIS_TYPE_STATE EQU 2 Return the state entry/entries corresponding *13150000
                         to the input product.                          13200000
IFAEDLIS_TYPE_STATUS EQU 4 Return the status entry corresponding to    *13250000
                         the input product.                             13300000
IFAEDLIS_TYPE_NOREPORT EQU 8 When returning registration entries,      *13350000
                         include those for which the IFAEDREG call     *13400000
                         specified Ifaedreg_Type_NoReport. If not      *13450000
                         requested, those entries are not returned.     13500000
*                                                                       13550000
*   Product Enable/Disable List Return Codes                            13600000
*   Note: 0C4 abend if bad address provided in parmlist or user data    13650000
*                                                                       13700000
*                                                                       13750000
IFAEDLIS_SUCCESS EQU 0   List service completed successfully            13800000
IFAEDLIS_NOTALLDATARETURNED EQU 4 List service had more data to return *13850000
                         that would fit in the provided answer area.   *13900000
                         All the complete entries that would fit were  *13950000
                         returned.                                      14000000
IFAEDLIS_NOTAVAILABLE EQU 8 List service is not available on this      *14050000
                         system.                                        14100000
IFAEDLIS_ANSAREATOOSMALL EQU 12 The answer area, indicated by the      *14150000
                         answer len parameter is not large enough to   *14200000
                         hold the answer area header (DSECT EdaahDR).   14250000
IFAEDLIS_NOTTASKMODE EQU 16 List service was not called in task mode.   14300000
IFAEDLIS_XM EQU 20       List service was not called with P=H=S         14350000
IFAEDLIS_BADTYPE EQU 32  The type parameter did not specify a word     *14400000
                         with a value formed from adding any           *14450000
                         combination of IFAEDLIS_TYPE_REGISTERED,      *14500000
                         IFAEDLIS_TYPE_STATE, IFAEDLIS_TYPE_STATUS,    *14550000
                         and IFAEDLIS_TYPE_NOREPORT.                    14600000
IFAEDLIS_LOCKED EQU 36   List service was called holding a system lock  14650000
IFAEDLIS_FRR EQU 40      List service was called having an FRR          14700000
EDOI_LEN EQU   *-EDOI                                                   14750000
.L0002   ANOP                                                           14800000
         AIF   ('&EDAAHDR' EQ 'NO').L0005                               14850000
         AIF   ('&DSECT' EQ 'YES').L0006                                14900000
         AIF   ('&EDAAHDR' NE 'YES').L0005                              14950000
EDAAHDR  DS    0F        Header section                                 15000000
         AGO   .L0007                                                   15050000
.L0006   ANOP                                                           15100000
EDAAHDR  DSECT           Header section                                 15150000
.L0007   ANOP                                                           15200000
EDAAHNUMR DS   1FL4      Number of Edaae entries which follow          *15250000
                         indicating registered entries. The first one  *15300000
                         is pointed to by EdaahFirstRAddr.              15350000
EDAAHNUMS DS   1FL4      Number of Edaae entries which follow          *15400000
                         indicating state entries. The first one is    *15450000
                         pointed to by EdaahFirstSAddr.                 15500000
EDAAHTLEN DS   1FL4      Total length of answer area needed to contain *15550000
                         all the requested information. This includes  *15600000
                         the area for the records that were returned   *15650000
                         on this call.                                  15700000
EDAAHFIRSTRADDR DS 1AL4  Address of first registered entry Edaae        15750000
EDAAHFIRSTSADDR DS 1AL4  Address of first state entry Edaae             15800000
EDAAHSTATUSADDR DS 1AL4  Address of the entry that represents the      *15850000
                         policy entry that would be used to determine  *15900000
                         if the input product was enabled. 0 if no     *15950000
                         such policy entry exists.                      16000000
         DS    1CL0008   Unused                                         16050000
EDAAHDR_LEN EQU *-EDAAHDR                                               16100000
.L0005   ANOP                                                           16150000
         AIF   ('&EDAAE' EQ 'NO').L0008                                 16200000
         AIF   ('&DSECT' EQ 'YES').L0009                                16250000
         AIF   ('&EDAAE' NE 'YES').L0008                                16300000
EDAAE    DS    0F        Edaae Record data format                       16350000
         AGO   .L000A                                                   16400000
.L0009   ANOP                                                           16450000
EDAAE    DSECT           Edaae Record data format                       16500000
.L000A   ANOP                                                           16550000
EDAAENEXTADDR DS 1AL4    Address of next Edaae. EdaahNumR (for the     *16600000
                         registered queue) or EdaahNumS (for the state *16650000
                         queue) must be used to determine how far      *16700000
                         along this chain to go. Not relevant for      *16750000
                         EdaahStatusAddr.                               16800000
EDAAEINFO DS   1CL0062                                                  16850000
         ORG   EDAAEINFO                                                16900000
EDAAEPRODOWNER DS 1CL0016 Product owner                                 16950000
EDAAEPRODNAME DS 1CL0016 Product name                                   17000000
EDAAEFEATURENAME DS 1CL0016 Feature name                                17050000
EDAAEPRODVERS DS 1CL0002 Product version                                17100000
EDAAEPRODREL DS 1CL0002  Product release                                17150000
EDAAEPRODMOD DS 1CL0002  Product mod level                              17200000
EDAAEPRODID DS 1CL0008   Product ID                                     17250000
EDAAEFLAGS DS  1BL1      Flags                                          17300000
         ORG   EDAAEFLAGS                                               17350000
EDAAESTATUSNOTDEFINED EQU X'80' This will never be on for entries on   *17400000
                         the state queue. If on, indicates that the    *17450000
                         state information does not have an entry that *17500000
                         matches this product.                          17550000
EDAAESTATUSENABLED EQU X'40' If on, indicates that the product is      *17600000
                         considered to be enabled                       17650000
EDAAENOREPORT EQU X'20'  If on, indicates that the product registered  *17700000
                         with Ifaedreg_Type_Noreport. This will never  *17733300
                         on for entries on the state queue.             17766600
EDAAELICENSEDUNDERPROD EQU X'10' If on, indicates that the product     *17800000
                         registered with Ifaedreg                      *17850000
                         _Type_LicensedUnderProd. This will never on   *17883300
                         for entries on the state queue.                17916600
         ORG   EDAAEFLAGS+X'00000001'                                   17950000
         DS    1CL0001   Unused                                         18000000
EDAAENUMINSTANCES DS 1FL4 Number of concurrent instances of this       *18050000
                         registration                                   18100000
EDAAE_LEN EQU  *-EDAAE                                                  18150000
.L0008   ANOP                                                           18200000
         AIF   ('&ZCBPRINT' EQ 'NO').P3                                 18250000
         AIF   ('&LIST' EQ 'YES').P4                                    18300000
.P3      ANOP                                                           18350000
         POP   PRINT                                                    18400000
.P4      ANOP                                                           18450000
.P_EXIT  ANOP                                                           18500000
         MEND                                                           18550000
**/ IFAEDIDF_2:;                                                        18600000
* %IFAEDIDF_INCLUDED = 'YES';                                           18650000
* %DCL ZCBPRINT CHAR EXT;                                               18700000
* %DEACTIVATE ZCBPRINT;                                                 18750000
* %DCL IFAEDIDF_LIST CHAR EXT;                                          18800000
* %DEACTIVATE IFAEDIDF_LIST;                                            18850000
* %IF IFAEDIDF_LIST ^= 'NO' &                                           18900000
*    ZCBPRINT ^= 'NO' %THEN                                             18950000
*   %GOTO IFAEDIDF_3;                                                   19000000
*   @LIST PUSH NOECHO;                                                  19050000
*   @LIST NOASSEMBLE NOECHO;                                            19100000
*   @LIST OFF C NOECHO;                                                 19150000
* %IFAEDIDF_3:;                                                         19200000
*/* Start of PL/X Source                                             */ 19250000
*DCL 1 EDOI CHAR(16) BDY(WORD) TYPE,                /*           @L1A*/ 19300000
*      3 EdoiFlags BIT(8),                /*                     @L1A*/ 19350000
*        5 EdoiRegistered BIT(1),             /* The product is         19400000
*                                      registered                @L1A*/ 19450000
*        5 EdoiStatusNotDefined BIT(1),          /* The product is not  19500000
*                        known to be enabled or disabled.               19550000
*                                                                @L1A*/ 19600000
*        5 EdoiStatusEnabled BIT(1),             /* The product is      19650000
*                                      enabled.                  @L1A*/ 19700000
*        5 EdoiNotAllFeaturesReturned BIT(1),    /* The featureslen     19750000
*                        area was too small to hold the features        19800000
*                        provided at registration time. Field           19850000
*                        EdoiNeededFeaturesLen contains the size        19900000
*                        provided at registration time.          @L1A*/ 19950000
*      3 * CHAR(3),                       /*                     @L1A*/ 20000000
*      3 EdoiNeededFeaturesLen Fixed,     /* The featureslen size       20050000
*                        provided at registration time.          @L1A*/ 20100000
*      3 EdoiProdVersRelMod,    /*                               @L1A*/ 20150000
*        5 EdoiProdVers Isa(IfaedProdVers), /* The version information  20200000
*                        provided at registration time.          @L1A*/ 20250000
*        5 EdoiProdRel Isa(IfaedProdRel), /* The release information    20300000
*                        provided at registration time.          @L1A*/ 20350000
*        5 EdoiProdMod Isa(IfaedProdMod), /* The mod level information  20400000
*                        provided at registration time.          @L1A*/ 20450000
*      3 * CHAR(2);                       /*                     @L1A*/ 20500000
*                                                                       20550000
*/********************************************************************  20600000
* *      Constants for Parameters and Return Codes                   *  20650000
* ********************************************************************/ 20700000
*                                                                       20750000
*/* Product Enable/Disable Register Constants                        */ 20800000
*                                                                       20850000
*DCL Ifaedreg_Type_Standard        FIXED(31) CONSTANT(0);  /*        */ 20900000
*DCL Ifaedreg_Type_Required        FIXED(31) CONSTANT(2);  /* The       20950000
*                 register request should complete even if the policy   21000000
*                 indicates that the product is disabled. This          21050000
*                 would be used when registering solely so your         21100000
*                 status can be queried.                             */ 21150000
*DCL Ifaedreg_Type_NoReport        FIXED(31) CONSTANT(4);  /* The       21200000
*                 register request should not be reported upon          21250000
*                 by display command and SMF report. This might be      21300000
*                 used when registering solely so the status can        21350000
*                 be queried.                                        */ 21400000
*DCL Ifaedreg_Type_LicensedUnderProd FIXED(31) CONSTANT(8);  /* The     21450000
*                 registering feature is not separately licensed.       21500000
*                 Rather, the license is associated with the            21550000
*                 product specified by the prodname parameter.       */ 21600000
*DCL Ifaedreg_Type_DisabledMessage FIXED(31) CONSTANT(16);  /* If the   21650000
*                 product is found to be disabled, have the system      21700000
*                 issue the appropriate message, rather than the        21750000
*                 caller having to do it.                            */ 21800000
*DCL Ifaedreg_Type_NotFoundDisabled FIXED(31) CONSTANT(32); /* If       21810000
*                 no enable/disable policy entry matches this product,  21820000
*                 treat the product as disabled, rather than            21830000
*                 treating it as enabled.                            */ 21840000
*                                                                       21850000
*/* Product Enable/Disable Register Return Codes                     */ 21900000
*/* Note: 0C4 abend if bad address provided in parmlist or user data */ 21950000
*                                                                       22000000
*DCL Ifaedreg_Success              FIXED(31) CONSTANT(0);  /*           22050000
*                 Register service completed successfully        @L1A*/ 22100000
*                                                                       22150000
*DCL Ifaedreg_Disabled             FIXED(31) CONSTANT(4);  /*           22200000
*                 Register service found that the product is disabled   22250000
*                 and therefore the register service was not            22300000
*                 accepted.                                      @L1A*/ 22350000
*                                                                       22400000
*DCL Ifaedreg_NotAvailable         FIXED(31) CONSTANT(8);  /*           22450000
*                 Register service is not available on this system.     22500000
*                                                                @L1A*/ 22550000
*                                                                       22600000
*DCL Ifaedreg_LimitExceeded        FIXED(31) CONSTANT(12); /* too many  22650000
*                 unauthorized registrations for this address space     22700000
*                                                                @L1A*/ 22750000
*                                                                       22800000
*DCL Ifaedreg_NotTaskMode          FIXED(31) CONSTANT(16); /* Register  22850000
*                 service was not called in task mode.           @L1A*/ 22900000
*                                                                       22950000
*DCL Ifaedreg_Xm                   FIXED(31) CONSTANT(20); /* Register  23000000
*                 service was not called with P=H=S              @L1A*/ 23050000
*                                                                       23100000
*DCL Ifaedreg_BadFeaturesLen       FIXED(31) CONSTANT(24);  /* Features 23150000
*                 length exceeds 1024.                           @L1A*/ 23200000
*DCL Ifaedreg_NoStorage            FIXED(31) CONSTANT(28);  /* The      23250000
*                 system could not obtain needed storage.        @L1A*/ 23300000
*DCL Ifaedreg_BadType              FIXED(31) CONSTANT(32);  /* The      23350000
*                 type parameter did not specify a word with a value    23400000
*                 formed from adding any combination of                 23450000
*                 Ifaedreg_Type_Standard,                               23481200
*                 Ifaedreg_Type_Required,                               23512400
*                 Ifaedreg_Type_NoReport,                               23543600
*                 Ifaedreg _Type_LicensedUnderProd,                     23574800
*                 Ifaedreg_Type_DisabledMessage, and                    23606000
*                 Ifaedreg_Type_NotFoundDisabled                        23637200
*                                                                @L1A*/ 23668400
*DCL Ifaedreg_Locked               FIXED(31) CONSTANT(36);  /* Register 23700000
*                 service was called holding a system lock       @L1A*/ 23750000
*DCL Ifaedreg_FRR                  FIXED(31) CONSTANT(40);  /* Register 23800000
*                 service was called having an FRR               @L1A*/ 23850000
*                                                                       23900000
*/* Product Enable/Disable Deregister Return Codes                   */ 23950000
*/* Note: 0C4 abend if bad address provided in parmlist or user data */ 24000000
*                                                                       24050000
*DCL Ifaeddrg_Success              FIXED(31) CONSTANT(0);  /*           24100000
*                 Deregister service completed successfully      @L1A*/ 24150000
*                                                                       24200000
*DCL Ifaeddrg_NotAvailable         FIXED(31) CONSTANT(8);  /*           24250000
*                 Deregister service is not available on this system.   24300000
*                                                                @L1A*/ 24350000
*                                                                       24400000
*DCL Ifaeddrg_NotRegistered        FIXED(31) CONSTANT(12);  /*          24450000
*                 The product that was to be deregistered had not been  24500000
*                 registered                                     @L1A*/ 24550000
*                                                                       24600000
*DCL Ifaeddrg_NotTaskMode          FIXED(31) CONSTANT(16); /*           24650000
*            deregister service was not called in task mode.     @L1A*/ 24700000
*                                                                       24750000
*DCL Ifaeddrg_Xm                 FIXED(31) CONSTANT(20); /* Deregister  24800000
*                 service was not called with P=H=S              @L1A*/ 24850000
*                                                                       24900000
*DCL Ifaeddrg_NotAuth              FIXED(31) CONSTANT(24);  /*          24950000
*            If not supervisor state, system key, or system PKM,        25000000
*            the entry to be deregistered must be registered from the   25050000
*            same address space and must have been registered by an     25100000
*            equally non-authorized caller.                      @L1A*/ 25150000
*DCL Ifaeddrg_Locked             FIXED(31) CONSTANT(36);  /* Deregister 25200000
*                 service was called holding a system lock       @L1A*/ 25250000
*DCL Ifaeddrg_FRR                FIXED(31) CONSTANT(40);  /* Deregister 25300000
*                 service was called having an FRR               @L1A*/ 25350000
*                                                                       25400000
*/* Product Enable/Disable Status Return Codes                       */ 25450000
*/* Note: 0C4 abend if bad address provided in parmlist or user data */ 25500000
*                                                                       25550000
*DCL Ifaedsta_Success              FIXED(31) CONSTANT(0);  /*           25600000
*                 Status service completed successfully          @L1A*/ 25650000
*                                                                       25700000
*DCL Ifaedsta_NotDefined           FIXED(31) CONSTANT(4);  /*           25750000
*                 The status service found no entry corresponding to    25800000
*                 the input product.                             @L1A*/ 25850000
*                                                                       25900000
*DCL Ifaedsta_NotAvailable         FIXED(31) CONSTANT(8); /*            25950000
*                 Status service is not available on this system.       26000000
*                                                                @L1A*/ 26050000
*DCL Ifaedsta_NotTaskMode          FIXED(31) CONSTANT(16); /* Status    26100000
*                 service was not called in task mode.           @L1A*/ 26150000
*                                                                       26200000
*DCL Ifaedsta_Xm                   FIXED(31) CONSTANT(20); /* Status    26250000
*                 service was not called with P=H=S              @L1A*/ 26300000
*DCL Ifaedsta_Locked               FIXED(31) CONSTANT(36);  /* Status   26350000
*                 service was called holding a system lock       @L1A*/ 26400000
*DCL Ifaedsta_FRR                  FIXED(31) CONSTANT(40);  /* Status   26450000
*                 service was called having an FRR               @L1A*/ 26500000
*                                                                       26550000
*/* Product Enable/Disable List Constants                            */ 26600000
*                                                                       26650000
*DCL Ifaedlis_Type_Registered      FIXED(31) CONSTANT(1);  /* Return    26700000
*                 the registration entry/entries corresponding to the   26750000
*                 input product.                                     */ 26800000
*DCL Ifaedlis_Type_State           FIXED(31) CONSTANT(2);  /* Return    26850000
*                 the state entry/entries corresponding to the          26900000
*                 input product.                                     */ 26950000
*DCL Ifaedlis_Type_Status          FIXED(31) CONSTANT(4);  /* Return    27000000
*                 the status entry corresponding to the                 27050000
*                 input product.                                     */ 27100000
*DCL Ifaedlis_Type_NoReport        FIXED(31) CONSTANT(8);  /* When      27150000
*                 returning registration entries, include those for     27200000
*                 which the IFAEDREG call specified                     27250000
*                 Ifaedreg_Type_NoReport. If not requested, those       27300000
*                 entries are not returned.                          */ 27350000
*                                                                       27400000
*/* Product Enable/Disable List Return Codes                         */ 27450000
*/* Note: 0C4 abend if bad address provided in parmlist or user data */ 27500000
*                                                                       27550000
*DCL Ifaedlis_Success              FIXED(31) CONSTANT(0);  /*           27600000
*                 List service completed successfully            @L1A*/ 27650000
*                                                                       27700000
*DCL Ifaedlis_NotAllDataReturned   FIXED(31) CONSTANT(4);  /*           27750000
*                 List service had more data to return that would fit   27800000
*                 in the provided answer area. All the complete         27850000
*                 entries that would fit were returned.          @L1A*/ 27900000
*                                                                       27950000
*DCL Ifaedlis_NotAvailable         FIXED(31) CONSTANT(8);  /*           28000000
*                 List service is not available on this system.         28050000
*                                                                @L1A*/ 28100000
*                                                                       28150000
*DCL Ifaedlis_AnsareaTooSmall      FIXED(31) CONSTANT(12);  /*          28200000
*                 The answer area, indicated by the answer len          28250000
*                 parameter is not large enough to hold the             28300000
*                 answer area header (DSECT EdaahDR).            @L1A*/ 28350000
*DCL Ifaedlis_NotTaskMode          FIXED(31) CONSTANT(16); /* List      28400000
*                 service was not called in task mode.           @L1A*/ 28450000
*DCL Ifaedlis_Xm                   FIXED(31) CONSTANT(20); /* List      28500000
*                 service was not called with P=H=S              @L1A*/ 28550000
*DCL Ifaedlis_BadType              FIXED(31) CONSTANT(32);  /* The      28600000
*                 type parameter did not specify a word with a value    28650000
*                 formed from adding any combination of                 28700000
*                 IFAEDLIS_TYPE_REGISTERED,                             28750000
*                 IFAEDLIS_TYPE_STATE,                                  28800000
*                 IFAEDLIS_TYPE_STATUS, and                             28850000
*                 IFAEDLIS_TYPE_NOREPORT.                        @L1A*/ 28900000
*DCL Ifaedlis_Locked               FIXED(31) CONSTANT(36);  /* List     28950000
*                 service was called holding a system lock       @L1A*/ 29000000
*DCL Ifaedlis_FRR                  FIXED(31) CONSTANT(40);  /* List     29050000
*                 service was called having an FRR               @L1A*/ 29100000
*                                                                       29150000
*                                                                       29200000
*DCL Ifaed_BadRequest              FIXED(31) CONSTANT(100);  /*         29250000
*                 An unknown request type was detected by the           29300000
*                 IFAEDxxx processor.                            @L1A*/ 29350000
*                                                                       29400000
*/* Service Entry Declarations                                      */  29450000
*                                                                       29500000
*%DCL EHAMAPS CHAR EXTERNAL;             /*                      @L1A*/ 29550000
*%IF INDEX(EHAMAPS,'XM@')=0 %THEN        /*                      @L1A*/ 29600000
*   %EHAMAPS = EHAMAPS || 'XM@';         /*                      @L1A*/ 29650000
*                                                                       29700000
*DCL IfaedType FIXED TYPE;               /*                      @L1A*/ 29750000
*DCL IfaedProdOwner CHAR(16) TYPE;       /*                      @L1A*/ 29800000
*DCL IfaedProdName     CHAR(16) TYPE;    /*                      @L1A*/ 29850000
*DCL IfaedFeatureName  CHAR(16) TYPE;    /*                      @L1A*/ 29900000
*DCL IfaedProdVers     CHAR(2)  TYPE;    /*                      @L1A*/ 29950000
*DCL IfaedProdRel      CHAR(2)  TYPE;    /*                      @L1A*/ 30000000
*DCL IfaedProdMod      CHAR(2)  TYPE;    /*                      @L1A*/ 30050000
*DCL IfaedProdID       CHAR(8)  TYPE;    /*                      @L1A*/ 30100000
*DCL IfaedProdToken CHAR(8) TYPE;        /*                      @L1A*/ 30150000
*DCL IfaedFeaturesLen FIXED TYPE;        /*                      @L1A*/ 30200000
*DCL IfaedFeatures CHAR(*) TYPE;         /* Note: this is limited       30250000
*                    to 1024 bytes.                              @L1A*/ 30300000
*DCL IfaedReturnCode Fixed(31) TYPE;     /*                      @L1A*/ 30350000
*                                                                       30400000
*DCL IFAEDREG ENTRY                                                     30450000
*     (Type:=Isa(IfaedType) INPUT        ! Register type                30500000
*     ,ProdOwner:=Isa(IfaedProdOwner) INPUT   ! Product Owner           30550000
*     ,ProdName:=Isa(IfaedProdName) INPUT  ! Product Name               30600000
*     ,FeatureName:=Isa(IfaedFeatureName) INPUT !Feature Name           30650000
*     ,ProdVers:=Isa(IfaedProdVers) INPUT ! Product Version             30700000
*     ,ProdRel:=Isa(IfaedProdRel) INPUT   ! Product Release             30750000
*     ,ProdMod:=Isa(IfaedProdMod) INPUT  ! Product Mod level            30800000
*     ,ProdID:=Isa(IfaedProdID) INPUT    ! Product ID                   30850000
*     ,FeaturesLen:=Isa(IfaedFeaturesLen) INPUT                         30900000
*     ,Features:=Isa(IfaedFeatures) INPUT                               30950000
*     ,ProdToken:=Isa(IfaedProdToken) OUTPUT ! Product Token            31000000
*     ,ReturnCode:=Isa(IfaedReturnCode) OUTPUT) ! return code           31050000
*    OPTIONS(AMODE(31) ENV(PRIMARY))                                    31100000
*    BASED (((((XM@CVT+8Cx)->I031P+1C0x)->I031P+4)->I031P+0)->I031P)    31150000
*    VALRG(*);                           /*                      @L1A*/ 31200000
*                                                                       31250000
*DCL IFAEDDRG ENTRY                                                     31300000
*     (ProdToken:=Isa(IfaedProdToken) INPUT ! Product Token             31350000
*     ,ReturnCode:=Isa(IfaedReturnCode) OUTPUT) ! return code           31400000
*    OPTIONS(AMODE(31) ENV(PRIMARY))                                    31450000
*    BASED (((((XM@CVT+8Cx)->I031P+1C0x)->I031P+4)->I031P+4)->I031P)    31500000
*    VALRG(*);                           /*                      @L1A*/ 31550000
*                                                                       31600000
*DCL IFAEDSTA ENTRY                                                     31650000
*     (ProdOwner:=Isa(IfaedProdOwner) INPUT                             31700000
*     ,ProdName:=Isa(IfaedProdName) INPUT                               31750000
*     ,FeatureName:=Isa(IfaedFeatureName) INPUT                         31800000
*     ,ProdID:=Isa(IfaedProdID) INPUT                                   31850000
*     ,OutputInfo:=Isa(EDOI) OUTPUT                                     31900000
*     ,FeaturesLen:=Isa(IfaedFeaturesLen) INPUT                         31950000
*     ,Features:=Isa(IfaedFeatures) OUTPUT                              32000000
*     ,ReturnCode:=Isa(IfaedReturnCode) OUTPUT) ! return code           32050000
*    OPTIONS(AMODE(31) ENV(PRIMARY))                                    32100000
*    BASED (((((XM@CVT+8Cx)->I031P+1C0x)->I031P+4)->I031P+8)->I031P)    32150000
*    VALRG(*);                           /*                      @L1A*/ 32200000
*                                                                       32250000
*DCL IFAEDLIS ENTRY                                                     32300000
*     (Type:=Isa(IfaedType) INPUT               !List type              32350000
*     ,ProdOwner:=Isa(IfaedProdOwner) INPUT                             32400000
*     ,ProdName:=Isa(IfaedProdName) INPUT                               32450000
*     ,FeatureName:=Isa(IfaedFeatureName) INPUT                         32500000
*     ,ProdID:=Isa(IfaedProdID) INPUT                                   32550000
*     ,AnsLen:=Fixed INPUT                                              32600000
*     ,AnsArea:=CHAR(*) OUTPUT                                          32650000
*     ,ReturnCode:=Isa(IfaedReturnCode) OUTPUT) ! return code           32700000
*    OPTIONS(AMODE(31) ENV(PRIMARY))                                    32750000
*    BASED (((((XM@CVT+8Cx)->I031P+1C0x)->I031P+4)->I031P+12)->I031P)   32800000
*    VALRG(*);                           /*                      @L1A*/ 32850000
*DCL 1 EDAAHDR TYPE,       /* Header section                     @L1A*/ 32900000
*     2 EdaahNumR FIXED(31), /* Number of Edaae entries which follow    32950000
*                indicating registered entries. The first one is        33000000
*                pointed to by EdaahFirstRAddr.                  @L1A*/ 33050000
*     2 EdaahNumS FIXED(31), /* Number of Edaae entries which follow    33100000
*                indicating state entries. The first one is             33150000
*                pointed to by EdaahFirstSAddr.                  @L1A*/ 33200000
*     2 EdaahTLEN FIXED(31),/* Total length of answer area needed to    33250000
*                             contain all the requested information.    33300000
*                             This includes the area for the records    33350000
*                             that were returned on this call.   @L1A*/ 33400000
*     2 EdaahFirstRAddr PTR(31), /* Address of first registered entry   33450000
*                Edaae                                           @L1A*/ 33500000
*     2 EdaahFirstSAddr PTR(31), /* Address of first state entry        33550000
*                Edaae                                           @L1A*/ 33600000
*     2 EdaahStatusAddr PTR(31), /* Address of the entry that           33650000
*                represents the policy entry that would be used to      33700000
*                determine if the input product was enabled. 0 if       33750000
*                no such policy entry exists.                    @L1A*/ 33800000
*     2 * CHAR(8),             /* Unused                         @L1A*/ 33850000
*     2 * CHAR(0) BDY(WORD);   /* Word-align the ending          @L1A*/ 33900000
*                                                                       33950000
*DCL 1 EDAAE TYPE            /* Edaae Record data format         @L1A*/ 34000000
*    ,2 EdaaeNextAddr PTR(31)  /* Address of next Edaae. EdaahNumR (for 34050000
*            the registered queue) or EdaahNumS (for the                34100000
*            state queue) must be used to determine how far along       34150000
*            this chain to go. Not relevant for EdaahStatusAddr. @L1A*/ 34200000
*    ,2 EdaaeInfo                                /*              @L1A*/ 34250000
*     ,3 EdaaeProdOwner CHAR(16)     /* Product owner            @L1A*/ 34300000
*     ,3 EdaaeProdName CHAR(16)      /* Product name             @L1A*/ 34350000
*     ,3 EdaaeFeatureName CHAR(16)   /* Feature name             @L1A*/ 34400000
*     ,3 EdaaeProdVers CHAR(2)       /* Product version          @L1A*/ 34450000
*     ,3 EdaaeProdRel  CHAR(2)       /* Product release          @L1A*/ 34500000
*     ,3 EdaaeProdMod  CHAR(2)       /* Product mod level        @L1A*/ 34550000
*     ,3 EdaaeProdID CHAR(8)         /* Product ID               @L1A*/ 34600000
*    ,2 EdaaeFlags BIT(8)            /* Flags                    @L1A*/ 34650000
*     ,3 EdaaeStatusNotDefined Bit(1) /* This will never be on for      34700000
*               entries on the state queue. If on, indicates that       34750000
*               the state information does not have an entry that       34800000
*               matches this product.                            @L1A*/ 34850000
*     ,3 EdaaeStatusEnabled Bit(1) /* If on, indicates that the         34900000
*               product is considered to be enabled              @L1A*/ 34950000
*     ,3 EdaaeNoReport Bit(1)      /* If on, indicates that the         35000000
*               product registered with Ifaedreg_Type_Noreport.         35025000
*               This will never on for entries on the state             35050000
*               queue.                                           @L1A*/ 35075000
*     ,3 EdaaeLicensedUnderProd BIT(1)  /* If on, indicates that the    35100000
*               product registered with                                 35150000
*               Ifaedreg _Type_LicensedUnderProd.                       35175000
*               This will never on for entries on the state             35200000
*               queue.                                           @L1A*/ 35225000
*    ,2 * CHAR(1)             /* Unused                          @L1A*/ 35250000
*    ,2 EdaaeNumInstances Fixed(31)  /* Number of concurrent instances  35300000
*                                       of this registration     @L1A*/ 35350000
*    ,2 * CHAR(0) Bdy(Word);   /* Word-align the ending          @L1A*/ 35400000
*                                                                       35450000
*/* End of Product Enable/Disable IDF                                */ 35500000
*                                                                       35550000
* @LOGIC;                                                               35600000
* #PRAGMA TOOL=CBGEN.                                                   35650000
* #USEORG.                                                              35700000
* #DELETE.Ifaed_BadRequest                                              35750000
* #EPRAGMA.                                                             35800000
* @ENDLOGIC;                                                            35850000
*/* End of PL/X Source                                               */ 35900000
* %IF IFAEDIDF_LIST ^= 'NO' &                                           35950000
*    ZCBPRINT ^= 'NO' %THEN                                             36000000
*   %GOTO IFAEDIDF_4;                                                   36050000
*   @LIST POP NOECHO;                                                   36100000
* %IFAEDIDF_4:;                                                         36150000
* %END;                                                                 36200000
