*%IWMWSYSQ: MACRO KEYS(SYSINFO_BLOCK,ANSLEN,QUERYLEN,RETCODE,RSNCODE,   00000100
*                 PLISTVER,MF);                                         00000200
*/**** START OF SPECIFICATIONS **************************************** 00000300
*                                                                     * 00000400
*                                                                     * 00000500
*01* MACRO NAME:  IWMWSYSQ                              -09/06/96-<2> * 00000600
*                                                                     * 00000700
*                                                                     * 00000800
*01* DESCRIPTIVE NAME:  Query System Information                      * 00000900
*                                                                     * 00001000
*01* PROPRIETARY STATEMENT:                                           * 00001100
*                                                                     * 00001200
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 00001300
*     THIS MACRO IS "RESTRICTED MATERIALS OF IBM"                     * 00001400
*     5645-001 (C) COPYRIGHT IBM CORP. 1994, 1997                     * 00001500
*                                                                     * 00001600
* STATUS= HBB6603                                                     * 00001700
*                                                                     * 00001800
*                                                                     * 00001900
*                                                                     * 00002000
*01* FUNCTION:                                                        * 00002100
*                                                                     * 00002200
*                                                                     * 00002300
*      The purpose of this service is to query information about the  * 00002400
*      systems in the sysplex that are in goal mode.  This service    * 00002500
*      returns a list of systems running in goal mode and information * 00002600
*      related to available CPU capacity and resource constraint      * 00002700
*      status.                                                        * 00002800
*                                                                     * 00002900
*      The caller of IWMWSYSQ must provide storage to contain all of  * 00003000
*      the system information. This storage area must reside in the   * 00003100
*      caller's primary address space.                                * 00003200
*                                                                     * 00003300
*      It is possible that the storage required by IWMWSYSQ may       * 00003400
*      change such that multiple IWMWSYSQ calls are required to       * 00003500
*      obtain data.  IWMWSYSQ users should take this into account     * 00003600
*      when obtaining the amount of storage that the IWMWSYSQ service * 00003700
*      can use.                                                       * 00003800
*                                                                     * 00003900
*      If the caller does not provide enough storage to contain all   * 00004000
*      of the system information, this service will return a          * 00004100
*      return/reason code pair indicating that the input              * 00004200
*      SYSINFO_BLOCK is too small. Output data about the amount of    * 00004300
*      storage required (QUERYLEN) will be set to reflect the         * 00004400
*      required SYSINFO_BLOCK size.  However, no system capacity      * 00004500
*      information is returned.                                       * 00004600
*                                                                     * 00004700
*      Applications that schedule work across multiple systems in an  * 00004800
*      MVS sysplex can use this service to                            * 00004900
*                                                                     * 00005000
*                                                                     * 00005100
*      o   Locate the "best" (fastest or most idle) system in a       * 00005200
*          sysplex for scheduling specific work                       * 00005300
*                                                                     * 00005400
*      o   Avoid scheduling additional work to systems already        * 00005500
*          critically overloaded                                      * 00005600
*                                                                     * 00005700
*      o   Factor WLM business importance level information into      * 00005800
*          scheduling decisions                                       * 00005900
*                                                                     * 00006000
*                                                                     * 00006100
*                                                                     * 00006200
*      The output of this service is a data area mapped by the        * 00006300
*      IWMWSYSI macro, that provides a point-in-time snapshot of each * 00006400
*      system WLM is managing in the sysplex.  A scheduling           * 00006500
*      application can interpret and use this information to schedule * 00006600
*      one or more types of work to systems with specific operating   * 00006700
*      characteristics.  Some examples of operating characteristics   * 00006800
*      you can identify with IWMWSYSQ are                             * 00006900
*                                                                     * 00007000
*                                                                     * 00007100
*      o   FASTEST CP SPEED - use the IWMWSYSI data area to identify  * 00007200
*          the system having the fastest single CP speed.             * 00007300
*                                                                     * 00007400
*      o   MULTI-PROCESSING CAPABILITY - use the IWMWSYSI data area   * 00007500
*          to identify the number of online CPs on each available     * 00007600
*          system.                                                    * 00007700
*                                                                     * 00007800
*      o   IDLE CAPACITY - use the IWMWSYSI data area to identify the * 00007900
*          system with the greatest idle capacity.                    * 00008000
*                                                                     * 00008100
*                                                                     * 00008200
*                                                                     * 00008300
*      If a scheduling application can identify the IMPORTANCE LEVEL  * 00008400
*      of the work it schedules the application can use IWMWSYSI to   * 00008500
*      select the most appropriate system.  IWMWSYSI provides a       * 00008600
*      vector containing the amount of capacity consumed at each      * 00008700
*      importance level on each system.  Thus, if an application is   * 00008800
*      scheduling importance level 3 work, it can use IWMWSYSI to     * 00008900
*      idenitfy the system that has the most capacity that is either  * 00009000
*      idle or is handling importance level 4 or lower work.          * 00009100
*                                                                     * 00009200
*      An important use of a scheduling application is to avoid       * 00009300
*      placing additional work on systems experiencing contention.    * 00009400
*      IWMWSYSI provides an indicator for each system that, if on,    * 00009500
*      signifies that the system should be avoided for scheduling     * 00009600
*      additional work.  This contention indicator is set if a        * 00009700
*      auxilliary storage, fixed storage, or SQA shortage exists.     * 00009800
*      Also, if work to be scheduled may consume large quantities of  * 00009900
*      CSA, you can use IWMWSYSI to determine the amount of CSA and   * 00010000
*      ECSA that is available on each system.                         * 00010100
*                                                                     * 00010200
*      Note that:                                                     * 00010300
*                                                                     * 00010400
*                                                                     * 00010500
*      o   Multiple applications may simultaneously use the same      * 00010600
*          IWMWSYSQ information to make work scheduling decisions.    * 00010700
*          These multiple applications will have no direct            * 00010800
*          cooperation and will compete for the available systems.    * 00010900
*          It is recommended that before an application schedules a   * 00011000
*          large amount of work it activate a small quantity of work, * 00011100
*          wait for a built-in delay, and then use IWMWSYSQ to        * 00011200
*          determine the effect of the added work before scheduling   * 00011300
*          the additional work.                                       * 00011400
*                                                                     * 00011500
*                                                                     * 00011600
*                                                                     * 00011700
*01* EXTERNAL CLASSIFICATION:  PSPI                                   * 00011800
*                                                                     * 00011900
*01* END OF EXTERNAL CLASSIFICATION:                                  * 00012000
*                                                                     * 00012100
*01* ENVIRONMENT:                                                     * 00012200
*                                                                     * 00012300
*                                                                     * 00012400
*      Dispatchable unit mode: Task mode.                             * 00012500
*                                                                     * 00012600
*      Minimum authorization: Problem state.  Any PSW key.            * 00012700
*                                                                     * 00012800
*      Cross Memory Mode: Any PASN, any HASN, any SASN.               * 00012900
*                                                                     * 00013000
*      AMODE:            31-bit.                                      * 00013100
*                                                                     * 00013200
*      ASC mode:         Primary or Access Register.                  * 00013300
*                                                                     * 00013400
*      Interrupt status: Enabled for I/O and external interrupts.     * 00013500
*                                                                     * 00013600
*      Locks:            No locks held.                               * 00013700
*                                                                     * 00013800
*      Control parameters: Control parameters must be in the primary  * 00013900
*                        address space.                               * 00014000
*                                                                     * 00014100
*                                                                     * 00014200
*                                                                     * 00014300
*01* PROGRAMMING REQUIREMENTS:                                        * 00014400
*                                                                     * 00014500
*                                                                     * 00014600
*    1.  The macro CVT must be included to use this macro.            * 00014700
*                                                                     * 00014800
*    2.  The macro IWMYCON must be included to use this macro.        * 00014900
*                                                                     * 00015000
*    3.  The macro IWMPB must be in the library concatenation, since  * 00015100
*        it is included by IWMYCON.                                   * 00015200
*                                                                     * 00015300
*    4.  Note that the high order halfword of register 0, and the     * 00015400
*        reason code variable when specified, may be non-zero and     * 00015500
*        represents diagnostic data which is NOT part of the external * 00015600
*        interface.  The high order halfword should thus be excluded  * 00015700
*        from comparison with the reason code values described above. * 00015800
*        The constant, IWMRSNCODE_MASK_CONST defined in IWMYCON, may  * 00015900
*        be used for this purpose.                                    * 00016000
*                                                                     * 00016100
*                                                                     * 00016200
*                                                                     * 00016300
*01* RESTRICTIONS:                                                    * 00016400
*                                                                     * 00016500
*                                                                     * 00016600
*    1.  This macro may not be used prior to the completion of WLM    * 00016700
*        address space initialization.                                * 00016800
*                                                                     * 00016900
*                                                                     * 00017000
*                                                                     * 00017100
*01* INPUT REGISTER INFORMATION:                                      * 00017200
*                                                                     * 00017300
*    Before issuing the IWMWSYSQ macro, the caller does not have to   * 00017400
*    place any information into any register unless using it in       * 00017500
*    register notation for a particular parameter, or using it as a   * 00017600
*    base register.                                                   * 00017700
*                                                                     * 00017800
*01* OUTPUT REGISTER INFORMATION:                                     * 00017900
*                                                                     * 00018000
*    When control returns to the caller, the GPRs contain:            * 00018100
*                                                                     * 00018200
*                                                                     * 00018300
*    REGISTER  CONTENTS                                               * 00018400
*                                                                     * 00018500
*    0         Reason code if GR15 return code is non-zero            * 00018600
*                                                                     * 00018700
*    1         Used as work register by the system                    * 00018800
*                                                                     * 00018900
*    2-13      Unchanged                                              * 00019000
*                                                                     * 00019100
*    14        Used as work registers by the system                   * 00019200
*                                                                     * 00019300
*    15        Return code                                            * 00019400
*                                                                     * 00019500
*                                                                     * 00019600
*                                                                     * 00019700
*    When control returns to the caller, the ARs contain:             * 00019800
*                                                                     * 00019900
*                                                                     * 00020000
*    REGISTER  CONTENTS                                               * 00020100
*                                                                     * 00020200
*    0-1       Used as work registers by the system                   * 00020300
*                                                                     * 00020400
*    2-13      Unchanged                                              * 00020500
*                                                                     * 00020600
*    14-15     Used as work registers by the system                   * 00020700
*                                                                     * 00020800
*                                                                     * 00020900
*                                                                     * 00021000
*    Some callers depend on register contents remaining the same      * 00021100
*    before and after issuing a service.  If the system changes the   * 00021200
*    contents of registers on which the caller depends, the caller    * 00021300
*    must save them before issuing the service, and restore them      * 00021400
*    after the system returns control.                                * 00021500
*                                                                     * 00021600
*01* PERFORMANCE IMPLICATIONS:                                        * 00021700
*                                                                     * 00021800
*    None                                                             * 00021900
*                                                                     * 00022000
*01* SYNTAX:                                                          * 00022100
*                                                                     * 00022200
*[xlabel]  IWMWSYSQ     SYSINFO_BLOCK                                 * 00022300
*                                     =xsysinfo_block                 * 00022400
*                      ,ANSLEN=xanslen                                * 00022500
*                      ,QUERYLEN=xquerylen                            * 00022600
*                     [,RETCODE=xretcode]                             * 00022700
*                     [,RSNCODE=xrsncode]                             * 00022800
*                     [,PLISTVER=xplistver|IMPLIED_VERSION]         * 00022900
*                    [,MF=S]                                         * 00023000
*                    [,MF=(L,xmfctrl,xmfattr|0D)]                  * 00023100
*                    [,MF=(E,xmfctrl,COMPLETE)]                    * 00023200
*                                                                     * 00023300
*                                                                     * 00023400
*      Where:                                                         * 00023500
*                                                                     * 00023600
*                                                                     * 00023700
*      [xlabel]                                                       * 00023800
*          is an optional symbol, starting in column 1, that is the   * 00023900
*          name on the IWMWSYSQ macro invocation.  The name must      * 00024000
*          conform to the rules for an ordinary assembler language    * 00024100
*          symbol.                                                    * 00024200
*          DEFAULT: No name.                                          * 00024300
*                                                                     * 00024400
*                                                                     * 00024500
*                                                                     * 00024600
*                                                                     * 00024700
*      SYSINFO_BLOCK(xsysinfo_block)                                  * 00024800
*          is the name (RS-type) (or address in register (2)-(12) ASM * 00024900
*          only) of a required  pointer input that contains the       * 00025000
*          address of an output area to contain information provided  * 00025100
*          by this service.  The format of this area is mapped by     * 00025200
*          IWMWSYSI and should only be considered valid upon return   * 00025300
*          code zero from this service.                               * 00025400
*                                                                     * 00025500
*                                                                     * 00025600
*                                                                     * 00025700
*                                                                     * 00025800
*      ANSLEN(xanslen)                                                * 00025900
*          is the name (RS-type) (or address in register (2)-(12) ASM * 00026000
*          only) of a required fullword input which contains the      * 00026100
*          length of the SYSINFO_BLOCK in bytes.                      * 00026200
*                                                                     * 00026300
*                                                                     * 00026400
*                                                                     * 00026500
*                                                                     * 00026600
*      QUERYLEN(xquerylen)                                            * 00026700
*          is the name (RS-type) (or address in register (2)-(12) ASM * 00026800
*          only) of a required fullword output variable which         * 00026900
*          contains the output area size that must be provided by the * 00027000
*          caller to contain all of the active systems in the sysplex * 00027100
*          that are in goal mode (i.e. the amount of data returned by * 00027200
*          the IWMWSYSQ service).                                     * 00027300
*                                                                     * 00027400
*                                                                     * 00027500
*                                                                     * 00027600
*                                                                     * 00027700
*      [RETCODE(xretcode)]                                            * 00027800
*          is the name (RS-type) of an optional fullword output       * 00027900
*          variable (or register (2)-(12) ASM only) into which the    * 00028000
*          return code is to be copied from GPR 15.                   * 00028100
*                                                                     * 00028200
*                                                                     * 00028300
*                                                                     * 00028400
*                                                                     * 00028500
*      [RSNCODE(xrsncode)]                                            * 00028600
*          is the name (RS-type) of an optional fullword output       * 00028700
*          variable (or register (2)-(12) ASM only) into which the    * 00028800
*          reason code is to be copied from GPR 0.                    * 00028900
*                                                                     * 00029000
*                                                                     * 00029100
*                                                                     * 00029200
*                                                                     * 00029300
*      [PLISTVER(xplistver|IMPLIED_VERSION)]                        * 00029400
*          is an optional byte input decimal value in the "2-2" range * 00029500
*          that specifies the macro version.  PLISTVER is the only    * 00029600
*          key allowed on the list form of MF and determines which    * 00029700
*          parameter list is generated.  Note that MAX may be         * 00029800
*          specified instead of a number, and the parameter list will * 00029900
*          be of the largest size currently supported. This size may  * 00030000
*          grow from release to release (thus possibly affecting the  * 00030100
*          amount of storage needed by your program).  If your        * 00030200
*          program can tolerate this, IBM recommends that you always  * 00030300
*          specify MAX when creating the list form parameter list as  * 00030400
*          that will ensure that the list form parameter list is      * 00030500
*          always long enough to hold whatever parameters might be    * 00030600
*          specified on the execute form.                             * 00030700
*          DEFAULT: IMPLIED_VERSION.  When PLISTVER is omitted, the   * 00030800
*          default is the lowest version which allows all of the      * 00030900
*          parameters specified on the invocation to be processed.    * 00031000
*                                                                     * 00031100
*                                                                     * 00031200
*                                                                     * 00031300
*                                                                     * 00031400
*      [MF(S|L|E)]                                                  * 00031500
*          is an optional keyword input which specifies the macro     * 00031600
*          form.                                                      * 00031700
*          DEFAULT: S                                                 * 00031800
*                                                                     * 00031900
*                                                                     * 00032000
*          [MF(S)]                                                    * 00032100
*              specifies the standard form of the macro.  The "S"     * 00032200
*              form generates code to put the parameters into the     * 00032300
*              parameter list and invoke the desired service.  Full   * 00032400
*              checking for required macro keys is done along with    * 00032500
*              supplying defaults for omitted optional parameters.    * 00032600
*              The ?EPILOG macro must be invoked at the end of the    * 00032700
*              module.                                                * 00032800
*                                                                     * 00032900
*              For assembly language code modules, the "S" form       * 00033000
*              generates code to put the parameters into an in-line   * 00033100
*              parameter list and invoke the desired service.  Full   * 00033200
*              checking for required macro keys is done along with    * 00033300
*              supplying defaults for omitted optional parameters.    * 00033400
*                                                                     * 00033500
*          [MF(L,xmfctrl,xmfattr|BDY(DWORD))]                       * 00033600
*              specifies the list form of the macro.  The "L" form    * 00033700
*              defines an area to be used for the parameter list.     * 00033800
*              Only the PLISTVER key may be specified on the          * 00033900
*              invocation.  All other macro parameters are flagged as * 00034000
*              errors.  If PLISTVER is not specified, the original    * 00034100
*              parameter list definition is used.                     * 00034200
*                                                                     * 00034300
*            ,xmfctrl                                                 * 00034400
*              is a required input.  It is the name of a storage area * 00034500
*              for the parameter list.                                * 00034600
*                                                                     * 00034700
*            ,xmfattr|BDY(DWORD)                                    * 00034800
*              is an optional 60 character input string that varies   * 00034900
*              from 1 to 60 characters. Use it to force boundary      * 00035000
*              alignment of the parameter list. Use any value that    * 00035100
*              represents a boundary and is valid on an assembler DS  * 00035200
*              pseudo op (assembler-only).                            * 00035300
*              DEFAULT: 0D for Assembler, BDY(DWORD) for PL/X, which  * 00035400
*              forces the parameter list to a doubleword boundary.    * 00035500
*                                                                     * 00035600
*          [MF(E,xmfctrl,COMPLETE)]                                 * 00035700
*              specifies the execute form of the macro.  The "E" form * 00035800
*              generates code to put the parameters into the          * 00035900
*              parameter list specified by xmfctrl and provides full  * 00036000
*              syntax checking with default setting.                  * 00036100
*                                                                     * 00036200
*            ,xmfctrl                                                 * 00036300
*              is a required input.  It is the name (RS-type) (or     * 00036400
*              address in register (1)-(12) ASM only) of a storage    * 00036500
*              area for the parameter list.                           * 00036600
*                                                                     * 00036700
*            ,COMPLETE                                              * 00036800
*              is an optional keyword input which specifies the       * 00036900
*              degree of macro parameter syntax checking.             * 00037000
*              DEFAULT: COMPLETE                                      * 00037100
*                                                                     * 00037200
*                                                                     * 00037300
*              COMPLETE                                               * 00037400
*                  Checking for required macro keys is done and       * 00037500
*                  defaults are supplied for omitted optional         * 00037600
*                  parameters.                                        * 00037700
*                                                                     * 00037800
*                                                                     * 00037900
*                                                                     * 00038000
*                                                                     * 00038100
*                                                                     * 00038200
*                                                                     * 00038300
*                                                                     * 00038400
*01* ABEND CODES:  None.                                              * 00038500
*                                                                     * 00038600
*01* RETURN CODES:                                                    * 00038700
*                                                                     * 00038800
*                                                                     * 00038900
*            0    Name: IwmRetCodeOk                                  * 00039000
*                                                                     * 00039100
*                 Meaning: Successful completion.                     * 00039200
*                                                                     * 00039300
*                 Action: None required.                              * 00039400
*                                                                     * 00039500
*            4    Name: IwmRetCodeWarning                             * 00039600
*                                                                     * 00039700
*                 Meaning: Successful completion, unusual conditions  * 00039800
*                 noted.                                              * 00039900
*                                                                     * 00040000
*                                                                     * 00040100
*                 HEX REASON  MEANING/ACTION                          * 00040200
*                 CODE                                                * 00040300
*                                                                     * 00040400
*                 xxxx040A    Name: IwmRsnCodeOutputAreaTooSmall      * 00040500
*                                                                     * 00040600
*                             Meaning:  The output area supplied is   * 00040700
*                             too small to receive all the available  * 00040800
*                             information.                            * 00040900
*                                                                     * 00041000
*                             Action: None required.  If necessary,   * 00041100
*                             reinvoke the service with an output     * 00041200
*                             area of sufficient size (returned in    * 00041300
*                             QUERYLEN) to receive all information.   * 00041400
*                                                                     * 00041500
*                 xxxx0420    Name: IwmRsnCodeSysInfoIncomplete       * 00041600
*                                                                     * 00041700
*                             Meaning:  System capacity data for one  * 00041800
*                             or more systems running in goal mode is * 00041900
*                             unavailable when the IWMWSYSQ service   * 00042000
*                             is invoked.                             * 00042100
*                                                                     * 00042200
*                             Action: None required.  If necessary,   * 00042300
*                             wait a few minutes and reinvoke the     * 00042400
*                             service to receive all information.     * 00042500
*                                                                     * 00042600
*                                                                     * 00042700
*                                                                     * 00042800
*            8    Name: IwmRetCodeInvocError                          * 00042900
*                                                                     * 00043000
*                 Meaning: Invalid invocation environment or          * 00043100
*                 parameters.                                         * 00043200
*                                                                     * 00043300
*                                                                     * 00043400
*                 HEX REASON  MEANING/ACTION                          * 00043500
*                 CODE                                                * 00043600
*                                                                     * 00043700
*                 xxxx0801    Name: IwmRsnCodeSrbMode                 * 00043800
*                                                                     * 00043900
*                             Meaning: Caller is in SRB mode.         * 00044000
*                                                                     * 00044100
*                             Action: Avoid requesting this function  * 00044200
*                             while in SRB mode.                      * 00044300
*                                                                     * 00044400
*                 xxxx0803    Name: IwmRsnCodeDisabled                * 00044500
*                                                                     * 00044600
*                             Meaning: Caller is disabled.            * 00044700
*                                                                     * 00044800
*                             Action: Avoid requesting this function  * 00044900
*                             while disabled.                         * 00045000
*                                                                     * 00045100
*                 xxxx0804    Name: IwmRsnCodeLocked                  * 00045200
*                                                                     * 00045300
*                             Meaning: Caller is locked.              * 00045400
*                                                                     * 00045500
*                             Action: Avoid requesting this function  * 00045600
*                             while locked.                           * 00045700
*                                                                     * 00045800
*                 xxxx080B    Name: IwmRsnCodeBadPl                   * 00045900
*                                                                     * 00046000
*                             Meaning:  Error accessing parameter     * 00046100
*                             list.                                   * 00046200
*                                                                     * 00046300
*                             Action: Check for possible storage      * 00046400
*                             overlay.                                * 00046500
*                                                                     * 00046600
*                 xxxx0823    Name: IwmRsnCodeDatoff                  * 00046700
*                                                                     * 00046800
*                             Meaning: Caller invoked service while   * 00046900
*                             DATOFF                                  * 00047000
*                                                                     * 00047100
*                             Action: Avoid requesting this function  * 00047200
*                             in this environment.                    * 00047300
*                                                                     * 00047400
*                 xxxx0824    Name: IwmRsnCodeAmode24                 * 00047500
*                                                                     * 00047600
*                             Meaning: Caller invoked service but was * 00047700
*                             in 24 bit addressing mode.              * 00047800
*                                                                     * 00047900
*                             Action: Request this function only when * 00048000
*                             you are in 31 bit addressing mode.      * 00048100
*                                                                     * 00048200
*                 xxxx0828    Name: IwmRsnCodeBadVersion              * 00048300
*                                                                     * 00048400
*                             Meaning: Version number in parameter    * 00048500
*                             list is not valid or the length         * 00048600
*                             specified is incorrect.                 * 00048700
*                                                                     * 00048800
*                             Action: Check for possible storage      * 00048900
*                             overlay of the parameter list.          * 00049000
*                                                                     * 00049100
*                 xxxx083C    Name: IwmRsnCodeMissingAcro             * 00049200
*                                                                     * 00049300
*                             Meaning:  Required parameter list       * 00049400
*                             acronym (eye catcher) not found or a    * 00049500
*                             zero SYSINFO_BLOCK pointer is found to  * 00049600
*                             be associated with a non-zero ANSLEN.   * 00049700
*                                                                     * 00049800
*                             Action: Check for possible storage      * 00049900
*                             overlay of the parameter list after     * 00050000
*                             ensuring that the acronym was correctly * 00050100
*                             set.                                    * 00050200
*                                                                     * 00050300
*                                                                     * 00050400
*                                                                     * 00050500
*            C    Name: IwmRetCodeEnvError                            * 00050600
*                                                                     * 00050700
*                 Meaning: Environmental error.                       * 00050800
*                                                                     * 00050900
*                                                                     * 00051000
*                 HEX REASON  MEANING/ACTION                          * 00051100
*                 CODE                                                * 00051200
*                                                                     * 00051300
*                 xxxx0C12    Name: IwmRsnNoGoalModeSystems           * 00051400
*                                                                     * 00051500
*                             Meaning: There are no goal mode systems * 00051600
*                             in the sysplex                          * 00051700
*                                                                     * 00051800
*                             Action: No action required.             * 00051900
*                                                                     * 00052000
*                                                                     * 00052100
*                                                                     * 00052200
*            10   Name: IwmRetCodeCompError                           * 00052300
*                                                                     * 00052400
*                 Meaning: Component error.                           * 00052500
*                                                                     * 00052600
*                 Action: No action required.  The function may be    * 00052700
*                 successful if invoked again.                        * 00052800
*                                                                     * 00052900
*                                                                     * 00053000
*                                                                     * 00053100
*01* REASON CODES:                                                    * 00053200
*                                                                     * 00053300
*       A unique reason code will be returned whenever the return     * 00053400
*       code is non-zero.  Reason codes, as appropriate, are defined  * 00053500
*       under their corresponding return code.  Reason code and       * 00053600
*       return code constants are defined within IWMYCON.  Note that  * 00053700
*       the high order halfword of register 0, and the reason code    * 00053800
*       variable when specified, may be non-zero and represents       * 00053900
*       diagnostic data which is NOT part of the external interface.  * 00054000
*       The high order halfword should thus be excluded from          * 00054100
*       comparison with the reason code values described above.  The  * 00054200
*       constant, IWMRSNCODE_MASK_CONST defined in IWMYCON, may be    * 00054300
*       used for this purpose.                                        * 00054400
*                                                                     * 00054500
*01* MODULE TYPE:  ASSEM-PL/AS MACRO                                  * 00054600
*                                                                     * 00054700
*02*   PROCESSOR:  ASSEM-PL/AS                                        * 00054800
*                                                                     * 00054900
*01* COMPONENT:  SCWLM                                                * 00055000
*                                                                     * 00055100
*01* DISTRIBUTION LIBRARY: AMACLIB                                    * 00055200
*                                                                     * 00055300
*01* EXAMPLES:                                                        * 00055400
*                                                                     * 00055500
*    To query system information:                                     * 00055600
*                                                                     * 00055700
*      IWMWSYSQ SYSINFO_BLOCK=SYSINFO,ANSLEN=ANSLEN,         X        * 00055800
*            QUERYLEN=QUERYLEN,RETCODE=RC,RSNCODE=RSN                 * 00055900
*                                                                     * 00056000
*    Where the following are declared:                                * 00056100
*                                                                     * 00056200
*      SYSINFO  DS    F             SYSINFO_BLOCK address             * 00056300
*      ANSLEN   DS    F             Length of the SYSINFO_BLOCK area  * 00056400
*      QUERYLEN DS    F             Query length                      * 00056500
*      RC       DS    F             Return code                       * 00056600
*      RSN      DS    F             Reason code                       * 00056700
*                                                                     * 00056800
*                                                                     * 00056900
*01* MACRO USAGE NOTES:                                               * 00057000
*                                                                     * 00057100
*                                                                     * 00057200
*    1.  Printing of the macro expansion is controlled by the ZPRINT  * 00057300
*        global macro variable.  Any value other than 'NO' will       * 00057400
*        result in the macro expansion being printed.  The default is * 00057500
*        'YES'.  The following examples illustrate how the ZPRINT     * 00057600
*        variable should be set.                                      * 00057700
*                                                                     * 00057800
*                    GBLC &ZPRINT                                     * 00057900
*            &ZPRINT SETC 'YES'          &ZPRINT SETC 'NO'            * 00058000
*                                                                     * 00058100
*                                                                     * 00058200
*    2.  All   keys   currently   contained  in  the  IWMWSYSQ  macro * 00058300
*        correspond  to  version  2.   If you specify PLISTVER, use a * 00058400
*        value of 2 or MAX.                                           * 00058500
*                                                                     * 00058600
*                                                                     * 00058700
*                                                                     * 00058800
*                                                                     * 00058900
*01* CHANGE ACTIVITY:                                                 * 00059000
*                                                                     * 00059100
*   Flag LineItem  FMID    Date   ID    Comment                       * 00059200
*                                                                     * 00059300
*    $L0=ARM      HBB5520 930310 PDV1:  Automatic Restart Manager.    * 00059400
*    $L1=WLMP     HBB6603 960510 PDB9RK:  Externalize IWMWSYSQ        * 00059500
*                                         service. Change version     * 00059600
*                                         level from 1 to 2 because   * 00059700
*                                         of incompatible changes.    * 00059800
****** END OF SPECIFICATIONS *****************************************/ 00059900
*/********************************************************************* 00060000
         MACRO                                                          00060100
&XLABEL  IWMWSYSQ &SYSINFO_BLOCK=,&ANSLEN=,&QUERYLEN=,&RETCODE=,       *00060200
               &RSNCODE=,&PLISTVER=,&MF=                                00060300
.*                                                                      00060400
*                   MACDATE -09/06/96-<2>                               00060500
.*                                                                      00060600
.*******************************************************************    00060700
.***AB.02  GLOBAL VARIABLES TO CONTROL PRINT AND CODE GENERATION        00060800
.*******************************************************************    00060900
                   GBLC  &ZPRINT     YES=PRINT NO=NO PRINT              00061000
                   GBLC  &ZTEST      YES=TEST NO=NO TEST                00061100
                   GBLC  &ZSYSTEM    PCCODE10, MVS, SAK, VM, XAX        00061200
.*                                                                      00061300
                   GBLC  &ZIWMWSYSQ  YES=MACRO USED AT LEAST ONCE       00061400
.*******************************************************************    00061500
.***AB.03  COMMONLY USED LOCAL MACRO VARIABLES                          00061600
.*******************************************************************    00061700
                   LCLC  &ZMS        ERROR MESSAGE WORK AREA            00061800
                   LCLC  &ZCNDX      LAST THREE SYSNDX CHARACTERS       00061900
                   LCLC  &ZCLNG      USED WHEN LENGTH IS NEEDED         00062000
                   LCLC  &ZCGPR      USED WHEN VALUE IS IN A GPR        00062100
                   LCLC  &ZCVAL      USED TO CONTAIN FIXED VALUE        00062200
                   LCLA  &ZAWRK      USED AS A WORK AREA                00062300
                   LCLA  &ZASIZ      USED FOR SIZE OF VALUE             00062400
                   LCLA  &ZN         NUMERIC WORK VARIABLE              00062500
                   LCLC  &ZC         CHARACTER WORK VARIABLE            00062600
                   LCLC  &ZTLC       CHARACTER TOO LONG VARIABLE        00062700
                   LCLA  &ZTLA       VALUE TOO LONG VARIABLE            00062800
                   LCLA  &ZMACRET    MACRO RETURN CODE                  00062900
&ZMACRET           SETA  0           ASSUME NO ERRORS                   00063000
.*                                                                      00063100
                   LCLC  &ZCSYSLIST(255)        NONXKEY, POS ARRAY      00063200
                   LCLA  &ZASYSLNDX  WORK INDEX FOR ZCSYSLIST()         00063300
                   LCLA  &ZPLLEN     PARAMETER LIST LENGTH              00063400
                   LCLC  &ZENDBASEPL            End of base PL          00063500
                   LCLA  &ZPLWORKA   PARAMETER LIST LENGTH              00063600
.*******************************************************************    00063700
.***AB.04  MACRO VARIABLES FOR RANGES AND SETS OF ARGUMENTS             00063800
.*******************************************************************    00063900
                   LCLA  &ZI         INDEX FOR ARRAY                    00064000
                   LCLA  &ZJ         INDEX FOR PARMS                    00064100
                   LCLA  &ZK         INDEX FOR PARSE                    00064200
                   LCLA  &ZLO        LOW RANGE VALUE                    00064300
                   LCLA  &ZHI        HIGH RANGE VALUE                   00064400
                   LCLC  &ZW         WORK AREA FOR PARM                 00064500
.********************************************************************   00064600
.***AB.05  INVOKE MVS MACROS TO CONTROL CODE GENERATION                 00064700
.********************************************************************   00064800
                   GBLC  &SYSSPLV    SP LEVEL 1,2,3 -SPLEVEL            00064900
                   GBLC  &SYSASCE    SYSTEM STATE P ANY AR-SYSSTATE     00065000
.*                                                                      00065100
                   AIF   (K'&SYSASCE GT 0).ZSYS4  SYS STATE DEFINED     00065200
                   AIF   (K'&SYSSPLV GT 0).ZSYS2  SP LEVEL DEFINED      00065300
                   SPLEVEL  TEST                                        00065400
.ZSYS2             ANOP  ,                                              00065500
                   AIF   ('&SYSSPLV' EQ '1').ZSYS3  PRE SP 3.1          00065600
                   AIF   ('&SYSSPLV' EQ '2').ZSYS3  PRE SP 3.1          00065700
                   SYSSTATE TEST                                        00065800
                   AGO   .ZSYS4                                         00065900
.ZSYS3             ANOP  ,                                              00066000
&SYSASCE           SETC  'P'         ASSUME SYSSTATE PRIMARY            00066100
.ZSYS4             ANOP  ,                                              00066200
.*******************************************************************    00066300
.***AB.07  DEFINE ALL MACRO VARIABLES                                   00066400
.*******************************************************************    00066500
                   LCLC  &XSYSINFO_BLOCK        ++ NAME                 00066600
                   LCLC  &XANSLEN    ++ NAME                            00066700
                   LCLC  &XQUERYLEN  ++ NAME                            00066800
                   LCLC  &XRETCODE   ++ NAME                            00066900
                   LCLC  &XRSNCODE   ++ NAME                            00067000
                   LCLA  &XPLISTVER  ++ VALUE                           00067100
                   LCLC  &XMF        ++ VALUE                           00067200
                   LCLC  &XMFCTRL    ++ NAME                            00067300
                   LCLC  &XMFATTR    ++ VALUE                           00067400
                   LCLC  &XMFSCK     ++ VALUE                           00067500
.*******************************************************************    00067600
.***AB.13  DEFINE MACRO VARIABLES FOR INPUT/OUTPUT PROCESSING           00067700
.*******************************************************************    00067800
                   LCLC  &ZXSYSINFO_BLOCK       ++ INPUT NAME           00067900
                   LCLC  &ZXANSLEN   ++ INPUT NAME                      00068000
                   LCLC  &ZXQUERYLEN            ++ OUTPUT NAME          00068100
                   LCLC  &ZXRETCODE  ++ OUTPUT NAME                     00068200
                   LCLC  &ZXRSNCODE  ++ OUTPUT NAME                     00068300
                   LCLC  &ZXPLISTVER            ++ INPUT VALUE          00068400
                   LCLC  &ZXMF       ++ INPUT VALUE                     00068500
                   LCLC  &ZXMFCTRL   ++ INPUT NAME                      00068600
                   LCLC  &ZXMFATTR   ++ INPUT VALUE                     00068700
                   LCLC  &ZXMFSCK    ++ INPUT VALUE                     00068800
.********************************************************************   00068900
.***AC.PLV01  PROCESS PLISTVER                                      *   00069000
.********************************************************************   00069100
&XPLISTVER      SETA  2                                                 00069200
                AIF   (K'&PLISTVER(1) LE 0).ZPLV0                       00069300
                AIF   ('&PLISTVER(1)' NE 'MAX').ZPLV0                   00069400
&XPLISTVER      SETA  2                                                 00069500
.ZPLV0          ANOP  ,                                                 00069600
.*                                                                      00069700
                AIF   (K'&PLISTVER(1) LE 0).ZPVCKE                      00069800
                AIF   ('&PLISTVER(1)' EQ 'IMPLIED_VERSION').ZPVCKE      00069900
                AIF   ('&PLISTVER(1)' EQ 'MAX').ZPVCKE                  00070000
.*-------------------------------------------------------------------   00070100
                AIF   (N'&PLISTVER LE 1).ZPVCK3  CK NUM                 00070200
&ZMS            SETC  '"PLISTVER='         *KPOSA* MNOTE                00070300
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00070400
&ZMS            SETC  '&ZMS "PLISTVER"'                                 00070500
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00070600
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00070700
                AGO   .ZPVCK2                                           00070800
.ZPVCK3         ANOP  ,                                                 00070900
.*-------------------------------------------------------------------   00071000
                AIF   ('&PLISTVER'(1,1) NE '(').ZPVCK2                  00071100
&ZMS            SETC  '"PLISTVER='         *KGPRA* MNOTE                00071200
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00071300
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         00071400
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'                 00071500
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00071600
                AGO   .ZPVCKE                                           00071700
.ZPVCK2         ANOP  ,                                                 00071800
.*-------------------------------------------------------------------   00071900
&ZCVAL          SETC  '&PLISTVER(1)'                                    00072000
                AIF   ('&ZCVAL'(1,1) EQ '(').ZPVCKE  IN GPR             00072100
                AIF   (T'&ZCVAL NE 'N').ZPVCK6  NUMERIC ERR             00072200
&ZN             SETA   &PLISTVER(1)        CONVERT TO ARITHMETIC        00072300
                AIF   (&ZN LT 2).ZPVCK6    TOO LOW                      00072400
                AIF   (&ZN LE 2).ZPVCK4A   NOT HIGH                     00072500
.ZPVCK6         ANOP  ,                                                 00072600
&ZMS            SETC  '"PLISTVER='         *KRNGA* MNOTE                00072700
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00072800
&ZMS            SETC  '&ZMS THE RANGE IS "2-2"'                         00072900
                MNOTE 8,' &ZMS FOR ARGUMENT 1.'                         00073000
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00073100
&XPLISTVER      SETA  2                                                 00073200
                AGO   .ZPVCKE                                           00073300
.*-------------------------------------------------------------------   00073400
.ZPVCK4A        ANOP  ,                                                 00073500
                AIF   (&ZN GE &XPLISTVER).ZPVCK4                        00073600
&ZMS            SETC  'PLISTVER='          *KVALA* MNOTE                00073700
&ZMS            SETC  '&ZMS.&PLISTVER(1)'                               00073800
&ZMS            SETC  '&ZMS., BUT PLISTVER OF'                          00073900
&ZMS            SETC  '&ZMS &XPLISTVER'                                 00074000
                MNOTE 8,' &ZMS IS REQUIRED.'                            00074100
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00074200
                AGO   .ZPVCK5                                           00074300
.ZPVCK4         ANOP  ,                                                 00074400
&XPLISTVER      SETA  &PLISTVER(1)                                      00074500
.ZPVCK5         ANOP  ,                                                 00074600
.ZPVCKE         ANOP  ,                                                 00074700
.********************************************************************   00074800
.***AG.MF01 PROCESS MF MACRO FORMS                                      00074900
.********************************************************************   00075000
                   ACTR  10000                                          00075100
.*------------------------------------------------------------------    00075200
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00075300
&XMF               SETC  ''          INITIALIZE XVARIABLE               00075400
.*-------------------------------------------------------------------   00075500
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00075600
.ZG21              ANOP  ,                                              00075700
&ZTLC              SETC 'S'                                             00075800
                   AIF   ('&MF(1)' NE '&ZTLC').ZG22                     00075900
&XMF               SETC  'S'         SET KEYWORD                        00076000
                   AIF   (N'&MF LE 1).ZG21A     CK NUM                  00076100
&ZMS               SETC  '"MF='      *KPOSA* MNOTE                      00076200
&ZMS               SETC  '&ZMS.&MF"'                                    00076300
&ZMS               SETC  '&ZMS "MF"'                                    00076400
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00076500
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00076600
.ZG21A             ANOP  ,                                              00076700
.*-------------------------------------------------------------------   00076800
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00076900
.ZG22              ANOP  ,                                              00077000
&ZTLC              SETC 'L'                                             00077100
                   AIF   ('&MF(1)' NE '&ZTLC').ZG29                     00077200
&XMF               SETC  'L'         SET KEYWORD                        00077300
                   AIF   (N'&MF LE 3).ZG22A     CK NUM                  00077400
&ZMS               SETC  '"MF='      *KPOSA* MNOTE                      00077500
&ZMS               SETC  '&ZMS.&MF"'                                    00077600
&ZMS               SETC  '&ZMS "MF"'                                    00077700
                   MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'           00077800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00077900
.ZG22A             ANOP  ,                                              00078000
.*-------------------------------------------------------------------   00078100
.***AG.KKCTL08 -MF(L) SPECIAL CHECK                                     00078200
                   AIF   (N'&SYSLIST NE 0).ZG22B  POSITIONALS?          00078300
                   AIF   ('&SYSINFO_BLOCK' NE '').ZG22B  KEYS?          00078400
                   AIF   ('&ANSLEN' NE '').ZG22B  KEYS?                 00078500
                   AIF   ('&QUERYLEN' NE '').ZG22B  KEYS?               00078600
                   AIF   ('&RETCODE' NE '').ZG22B  KEYS?                00078700
                   AIF   ('&RSNCODE' NE '').ZG22B  KEYS?                00078800
                   AGO    .ZG22C     INVOCATION OKAY                    00078900
.ZG22B             ANOP  ,                                              00079000
&ZMS               SETC  'THE "L" FORM OF "MF"'  *MFLA* MNOTE           00079100
&ZMS               SETC  '&ZMS CAN ONLY HAVE'                           00079200
&ZMS               SETC  '&ZMS THE "PLISTVER" KEY'                      00079300
                   MNOTE 8,' &ZMS SPECIFIED ON THE INVOCATION.'         00079400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00079500
.ZG22C             ANOP  ,                                              00079600
.*-------------------------------------------------------------------   00079700
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00079800
&ZXMFCTRL          SETC  'INPUT'     SET IN/OUTPUT                      00079900
&XMFCTRL           SETC  '&MF(2,1)'  SET XVARIABLE                      00080000
                   AIF   (N'&MF(2) GT 1).ZG24B  MULTI PARMS             00080100
&XMFCTRL           SETC  '&MF(2)'    SET XVARIABLE                      00080200
.ZG24B             AIF   (K'&MF(2) GT 0).ZG24C                          00080300
&ZXMFCTRL          SETC  ''          RESET IN/OUTPUT                    00080400
&ZMS               SETC  'WHEN "L" IS SPECIFIED'  *KRQDA*               00080500
&ZMS               SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'            00080600
                   MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                   00080700
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00080800
.ZG24C             ANOP  ,                                              00080900
.*-------------------------------------------------------------------   00081000
.***AG.KCK01 NAME, OPT RQD INPUT, POS(2) -GPR NOT ALLOWED               00081100
                   AIF   (K'&ZXMFCTRL LE 0).ZG24P  NOT I/O              00081200
                   AIF   ('&XMFCTRL'(1,1) NE '(').ZG24P                 00081300
&ZXMFCTRL          SETC  ''          RESET IN/OUTPUT                    00081400
&ZMS               SETC  '"MF='      *KGPRA* MNOTE                      00081500
&ZMS               SETC  '&ZMS.&MF"'                                    00081600
&ZMS               SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'      00081700
                   MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 2.'              00081800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00081900
.ZG24P             ANOP  ,                                              00082000
.*-------------------------------------------------------------------   00082100
.***AG.KXVAR13 VALUE, OPT INPUT, POS(3) -XVARIABLE                      00082200
&ZXMFATTR          SETC  'INPUT'     SET IN/OUTPUT                      00082300
&XMFATTR           SETC  '0D'                                           00082400
                   AIF   (K'&MF(3) LE 0).ZG27B  PARM                    00082500
&XMFATTR           SETC  '&MF(3,1)'  SET XVARIABLE                      00082600
                   AIF   (N'&MF(3) GT 1).ZG27B  MULTI PARMS             00082700
&XMFATTR           SETC  '&MF(3)'    SET XVARIABLE                      00082800
.ZG27B             ANOP  ,                                              00082900
.*-------------------------------------------------------------------   00083000
.***AG.KCK01 VALUE, OPT INPUT, POS(3) -GPR NOT ALLOWED                  00083100
                   AIF   (K'&ZXMFATTR LE 0).ZG27P  NOT I/O              00083200
                   AIF   ('&XMFATTR'(1,1) NE '(').ZG27P                 00083300
&ZXMFATTR          SETC  ''          RESET IN/OUTPUT                    00083400
&ZMS               SETC  '"MF='      *KGPRA* MNOTE                      00083500
&ZMS               SETC  '&ZMS.&MF"'                                    00083600
&ZMS               SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'      00083700
                   MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 3.'              00083800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00083900
.ZG27P             ANOP  ,                                              00084000
.*-------------------------------------------------------------------   00084100
.***AG.KCK03 VALUE, OPT INPUT, POS(3) -CHARACTER LENGTH                 00084200
                   AIF   (K'&ZXMFATTR LE 0).ZG27S  NOT I/O              00084300
                   AIF   (K'&XMFATTR LE 60).ZG27S  LNG OK               00084400
&ZXMFATTR          SETC  ''          RESET IN/OUTPUT                    00084500
&ZMS               SETC  '"MF='      *KLNGA* MNOTE                      00084600
&ZMS               SETC  '&ZMS.&MF"'                                    00084700
&ZMS               SETC  '&ZMS ARGUMENT 3 EXCEEDS THE MAXIMUM'          00084800
                   MNOTE 8,' &ZMS LENGTH OF 60 CHARACTERS.'             00084900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00085000
.ZG27S             ANOP  ,                                              00085100
.*-------------------------------------------------------------------   00085200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00085300
.ZG29              ANOP  ,                                              00085400
&ZTLC              SETC 'E'                                             00085500
                   AIF   ('&MF(1)' NE '&ZTLC').ZG37                     00085600
&XMF               SETC  'E'         SET KEYWORD                        00085700
                   AIF   (N'&MF LE 3).ZG29A     CK NUM                  00085800
&ZMS               SETC  '"MF='      *KPOSA* MNOTE                      00085900
&ZMS               SETC  '&ZMS.&MF"'                                    00086000
&ZMS               SETC  '&ZMS "MF"'                                    00086100
                   MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'           00086200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00086300
.ZG29A             ANOP  ,                                              00086400
.*-------------------------------------------------------------------   00086500
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00086600
&ZXMFCTRL          SETC  'INPUT'     SET IN/OUTPUT                      00086700
&XMFCTRL           SETC  '&MF(2,1)'  SET XVARIABLE                      00086800
                   AIF   (N'&MF(2) GT 1).ZG31B  MULTI PARMS             00086900
&XMFCTRL           SETC  '&MF(2)'    SET XVARIABLE                      00087000
.ZG31B             AIF   (K'&MF(2) GT 0).ZG31C                          00087100
&ZXMFCTRL          SETC  ''          RESET IN/OUTPUT                    00087200
&ZMS               SETC  'WHEN "E" IS SPECIFIED'  *KRQDA*               00087300
&ZMS               SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'            00087400
                   MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                   00087500
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00087600
.ZG31C             ANOP  ,                                              00087700
.*-------------------------------------------------------------------   00087800
.***AG.KCK02 NAME, OPT RQD INPUT, POS(2) -GPR OUT OF RANGE              00087900
                   AIF   (K'&ZXMFCTRL LE 0).ZG31R  NOT I/O              00088000
                   AIF   ('&XMFCTRL'(1,1) NE '(').ZG31R                 00088100
&ZCGPR             SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)                     00088200
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG31P                   00088300
                   AIF   (K'&ZCGPR GT 2).ZG31Q                          00088400
                   AIF   ('&ZCGPR' EQ '0').ZG31Q                        00088500
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00088600
                   AIF   (T'&ZCGPR NE 'N').ZG31Q  INVALID REG NAME      00088700
.ZG31P             ANOP  ,                                              00088800
                   AIF   (T'&ZCGPR NE 'N').ZG31R  NON NUMERIC           00088900
                   AIF   ('&ZCGPR' LT '1').ZG31Q                        00089000
                   AIF   ('&ZCGPR' LE '12').ZG31R                       00089100
.ZG31Q             ANOP  ,                                              00089200
&ZMS               SETC  '"MF='      *KGPRA* MNOTE                      00089300
&ZMS               SETC  '&ZMS.&MF"'                                    00089400
&ZMS               SETC  '&ZMS ARGUMENT 2 MUST SPECIFY A REGISTER'      00089500
                   MNOTE 8,' &ZMS IN THE RANGE (1)-(12).'               00089600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00089700
.ZG31R             ANOP  ,                                              00089800
.*-------------------------------------------------------------------   00089900
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00090000
&XMFSCK            SETC  ''          INITIALIZE XVARIABLE               00090100
.ZG35A   AIF   ('&MF(3)' NE 'COMPLETE').ZG36A                           00090200
&XMFSCK            SETC  'COMPLETE'  SET KEYWORD                        00090300
.*-------------------------------------------------------------------   00090400
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00090500
.ZG36A             AIF   (K'&XMFSCK GT 0).ZG36C  KEYWORD                00090600
                   AIF   (K'&MF(3) LE 0).ZG36B                          00090700
&ZMS               SETC  '"MF='      *KUKWA* MNOTE                      00090800
&ZMS               SETC  '&ZMS.&MF"'                                    00090900
&ZMS               SETC  '&ZMS ARGUMENT 3 IS AN UNKNOWN KEYWORD. '      00091000
&ZMS               SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'            00091100
&ZMS               SETC  '&ZMS "COMPLETE".'     VALID KEYWORD           00091200
                   MNOTE 8,' &ZMS '                                     00091300
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00091400
.ZG36B             ANOP  ,                                              00091500
&XMFSCK            SETC  'COMPLETE'  SET DEFAULT KEYWORD                00091600
.ZG36C             ANOP  ,                                              00091700
&ZXMFSCK           SETC  'INPUT'     SET IN/OUTPUT                      00091800
.*------------------------------------------------------------------    00091900
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00092000
.ZG37              ANOP  ,                                              00092100
&ZXMF              SETC  'INPUT'     SET IN/OUTPUT                      00092200
                   AIF   (K'&XMF GT 0).ZG37E    VALID ARG               00092300
                   AIF   (T'&MF EQ 'O').ZG37D   OMITTED                 00092400
&ZASYSLNDX         SETA  0                                              00092500
.ZG37A             ANOP  ,           POSITIONAL MACRO KEY               00092600
&ZASYSLNDX         SETA  &ZASYSLNDX+1                                   00092700
                   AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG37C               00092800
&ZTLC              SETC 'MF'                                            00092900
                   AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG37A      00093000
.ZG37B             ANOP  ,                                              00093100
&ZXMF              SETC  ''          RESET IN/OUTPUT                    00093200
&ZMS               SETC  'THE "MF" KEY'         *KOPTA* MNOTE           00093300
&ZMS               SETC  '&ZMS MUST CONTAIN ONE'                        00093400
                   MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'               00093500
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00093600
                   AGO   .ZG37E                                         00093700
.ZG37C             ANOP  ,                                              00093800
&ZXMF              SETC  ''          RESET IN/OUTPUT                    00093900
&ZMS               SETC  '"MF='      *KUKWA* MNOTE                      00094000
&ZMS               SETC  '&ZMS.&MF"'                                    00094100
&ZMS               SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '      00094200
&ZMS               SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'            00094300
&ZMS               SETC  '&ZMS "S",'            VALID KEYWORD           00094400
&ZMS               SETC  '&ZMS "L",'            VALID KEYWORD           00094500
&ZMS               SETC  '&ZMS OR "E".'         VALID KEYWORD           00094600
                   MNOTE 8,' &ZMS '                                     00094700
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00094800
                   AGO   .ZG37E                                         00094900
.ZG37D             ANOP  ,                                              00095000
&XMF               SETC  'S'         SET DEFAULT KEYWORD                00095100
&XMFSCK            SETC  'COMPLETE'  COMPLETE CHECKING                  00095200
.ZG37E             ANOP  ,                                              00095300
.********************************************************************   00095400
.***AG.MF02  FULL MACRO SYNTAX CHECKING                                 00095500
.********************************************************************   00095600
                   ACTR  10000                                          00095700
.*-------------------------------------------------------------------   00095800
.***AG.MF03 MF=(SLE)                                                    00095900
                   AIF   ('&XMF' EQ 'L').ZGMFX                          00096000
.*----------------------------------------------------------------***   00096100
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00096200
                   AIF   (N'&SYSINFO_BLOCK LE 1).ZG2A  CK NUM           00096300
&ZMS               SETC  '"SYSINFO_BLOCK='      *KPOSA* MNOTE           00096400
&ZMS               SETC  '&ZMS.&SYSINFO_BLOCK"'                         00096500
&ZMS               SETC  '&ZMS "SYSINFO_BLOCK"'                         00096600
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00096700
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00096800
.ZG2A              ANOP  ,                                              00096900
.*-------------------------------------------------------------------   00097000
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00097100
&ZXSYSINFO_BLOCK   SETC  'INPUT'     SET IN/OUTPUT                      00097200
&XSYSINFO_BLOCK    SETC  '&SYSINFO_BLOCK(1)'    SET XVARIABLE           00097300
                   AIF   (N'&SYSINFO_BLOCK GT 1).ZG2B  MULTI PARMS      00097400
&XSYSINFO_BLOCK    SETC  '&SYSINFO_BLOCK'       SET XVARIABLE           00097500
.ZG2B              AIF   (K'&SYSINFO_BLOCK(1) GT 0).ZG2C                00097600
&ZXSYSINFO_BLOCK   SETC  ''          RESET IN/OUTPUT                    00097700
&ZMS               SETC  ' '         *KRQDA*                            00097800
&ZMS               SETC  '&ZMS "SYSINFO_BLOCK" KEY AND ITS ARGUMENT'    00097900
                   MNOTE 8,' &ZMS ARE REQUIRED.'                        00098000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00098100
.ZG2C              ANOP  ,                                              00098200
.*-------------------------------------------------------------------   00098300
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00098400
                   AIF   (K'&ZXSYSINFO_BLOCK LE 0).ZG2R  NOT I/O        00098500
                   AIF   ('&XSYSINFO_BLOCK'(1,1) NE '(').ZG2R           00098600
&ZCGPR             SETC  '&XSYSINFO_BLOCK'(2,K'&XSYSINFO_BLOCK-2)       00098700
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG2P                    00098800
                   AIF   (K'&ZCGPR GT 2).ZG2Q                           00098900
                   AIF   ('&ZCGPR' EQ '0').ZG2Q                         00099000
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00099100
                   AIF   (T'&ZCGPR NE 'N').ZG2Q  INVALID REG NAME       00099200
.ZG2P              ANOP  ,                                              00099300
                   AIF   (T'&ZCGPR NE 'N').ZG2R  NON NUMERIC            00099400
                   AIF   ('&ZCGPR' LT '2').ZG2Q                         00099500
                   AIF   ('&ZCGPR' LE '12').ZG2R                        00099600
.ZG2Q              ANOP  ,                                              00099700
&ZMS               SETC  '"SYSINFO_BLOCK='      *KGPRA* MNOTE           00099800
&ZMS               SETC  '&ZMS.&SYSINFO_BLOCK"'                         00099900
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00100000
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00100100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00100200
.ZG2R              ANOP  ,                                              00100300
.*----------------------------------------------------------------***   00100400
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00100500
                   AIF   (N'&ANSLEN LE 1).ZG5A  CK NUM                  00100600
&ZMS               SETC  '"ANSLEN='  *KPOSA* MNOTE                      00100700
&ZMS               SETC  '&ZMS.&ANSLEN"'                                00100800
&ZMS               SETC  '&ZMS "ANSLEN"'                                00100900
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00101000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00101100
.ZG5A              ANOP  ,                                              00101200
.*-------------------------------------------------------------------   00101300
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00101400
&ZXANSLEN          SETC  'INPUT'     SET IN/OUTPUT                      00101500
&XANSLEN           SETC  '&ANSLEN(1)'           SET XVARIABLE           00101600
                   AIF   (N'&ANSLEN GT 1).ZG5B  MULTI PARMS             00101700
&XANSLEN           SETC  '&ANSLEN'   SET XVARIABLE                      00101800
.ZG5B              AIF   (K'&ANSLEN(1) GT 0).ZG5C                       00101900
&ZXANSLEN          SETC  ''          RESET IN/OUTPUT                    00102000
&ZMS               SETC  ' '         *KRQDA*                            00102100
&ZMS               SETC  '&ZMS "ANSLEN" KEY AND ITS ARGUMENT'           00102200
                   MNOTE 8,' &ZMS ARE REQUIRED.'                        00102300
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00102400
.ZG5C              ANOP  ,                                              00102500
.*-------------------------------------------------------------------   00102600
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00102700
                   AIF   (K'&ZXANSLEN LE 0).ZG5R  NOT I/O               00102800
                   AIF   ('&XANSLEN'(1,1) NE '(').ZG5R                  00102900
&ZCGPR             SETC  '&XANSLEN'(2,K'&XANSLEN-2)                     00103000
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG5P                    00103100
                   AIF   (K'&ZCGPR GT 2).ZG5Q                           00103200
                   AIF   ('&ZCGPR' EQ '0').ZG5Q                         00103300
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00103400
                   AIF   (T'&ZCGPR NE 'N').ZG5Q  INVALID REG NAME       00103500
.ZG5P              ANOP  ,                                              00103600
                   AIF   (T'&ZCGPR NE 'N').ZG5R  NON NUMERIC            00103700
                   AIF   ('&ZCGPR' LT '2').ZG5Q                         00103800
                   AIF   ('&ZCGPR' LE '12').ZG5R                        00103900
.ZG5Q              ANOP  ,                                              00104000
&ZMS               SETC  '"ANSLEN='  *KGPRA* MNOTE                      00104100
&ZMS               SETC  '&ZMS.&ANSLEN"'                                00104200
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00104300
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00104400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00104500
.ZG5R              ANOP  ,                                              00104600
.*----------------------------------------------------------------***   00104700
.***AG.KXVAR05 NAME, RQD OUTPUT, KEYS -XVARIABLE KEY                    00104800
                   AIF   (N'&QUERYLEN LE 1).ZG8A  CK NUM                00104900
&ZMS               SETC  '"QUERYLEN='           *KPOSA* MNOTE           00105000
&ZMS               SETC  '&ZMS.&QUERYLEN"'                              00105100
&ZMS               SETC  '&ZMS "QUERYLEN"'                              00105200
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00105300
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00105400
.ZG8A              ANOP  ,                                              00105500
.*-------------------------------------------------------------------   00105600
.***AG.KXVAR06 NAME, RQD OUTPUT, KEYS -XVARIABLE                        00105700
&ZXQUERYLEN        SETC  'OUTPUT'    SET IN/OUTPUT                      00105800
&XQUERYLEN         SETC  '&QUERYLEN(1)'         SET XVARIABLE           00105900
                   AIF   (N'&QUERYLEN GT 1).ZG8B  MULTI PARMS           00106000
&XQUERYLEN         SETC  '&QUERYLEN'            SET XVARIABLE           00106100
.ZG8B              AIF   (K'&QUERYLEN(1) GT 0).ZG8C                     00106200
&ZXQUERYLEN        SETC  ''          RESET IN/OUTPUT                    00106300
&ZMS               SETC  ' '         *KRQDA*                            00106400
&ZMS               SETC  '&ZMS "QUERYLEN" KEY AND ITS ARGUMENT'         00106500
                   MNOTE 8,' &ZMS ARE REQUIRED.'                        00106600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00106700
.ZG8C              ANOP  ,                                              00106800
.*-------------------------------------------------------------------   00106900
.***AG.KCK02 NAME, RQD OUTPUT, KEYS -GPR OUT OF RANGE                   00107000
                   AIF   (K'&ZXQUERYLEN LE 0).ZG8R  NOT I/O             00107100
                   AIF   ('&XQUERYLEN'(1,1) NE '(').ZG8R                00107200
&ZCGPR             SETC  '&XQUERYLEN'(2,K'&XQUERYLEN-2)                 00107300
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG8P                    00107400
                   AIF   (K'&ZCGPR GT 2).ZG8Q                           00107500
                   AIF   ('&ZCGPR' EQ '0').ZG8Q                         00107600
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00107700
                   AIF   (T'&ZCGPR NE 'N').ZG8Q  INVALID REG NAME       00107800
.ZG8P              ANOP  ,                                              00107900
                   AIF   (T'&ZCGPR NE 'N').ZG8R  NON NUMERIC            00108000
                   AIF   ('&ZCGPR' LT '2').ZG8Q                         00108100
                   AIF   ('&ZCGPR' LE '12').ZG8R                        00108200
.ZG8Q              ANOP  ,                                              00108300
&ZMS               SETC  '"QUERYLEN='           *KGPRA* MNOTE           00108400
&ZMS               SETC  '&ZMS.&QUERYLEN"'                              00108500
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00108600
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00108700
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00108800
.ZG8R              ANOP  ,                                              00108900
.*----------------------------------------------------------------***   00109000
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00109100
                   AIF   (N'&RETCODE LE 1).ZG11A  CK NUM                00109200
&ZMS               SETC  '"RETCODE='            *KPOSA* MNOTE           00109300
&ZMS               SETC  '&ZMS.&RETCODE"'                               00109400
&ZMS               SETC  '&ZMS "RETCODE"'                               00109500
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00109600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00109700
.ZG11A             ANOP  ,                                              00109800
.*-------------------------------------------------------------------   00109900
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00110000
                   AIF   (K'&RETCODE(1) LE 0).ZG11C  NO PARM            00110100
&ZXRETCODE         SETC  'OUTPUT'    SET OUTPUT                         00110200
&XRETCODE          SETC  '&RETCODE(1)'          SET XVARIABLE           00110300
                   AIF   (N'&RETCODE GT 1).ZG11C                        00110400
&XRETCODE          SETC  '&RETCODE'  SET XVARIABLE                      00110500
.ZG11C             ANOP  ,                                              00110600
.*-------------------------------------------------------------------   00110700
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00110800
                   AIF   (K'&ZXRETCODE LE 0).ZG11R  NOT I/O             00110900
                   AIF   ('&XRETCODE'(1,1) NE '(').ZG11R                00111000
&ZCGPR             SETC  '&XRETCODE'(2,K'&XRETCODE-2)                   00111100
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG11P                   00111200
                   AIF   (K'&ZCGPR GT 2).ZG11Q                          00111300
                   AIF   ('&ZCGPR' EQ '0').ZG11Q                        00111400
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00111500
                   AIF   (T'&ZCGPR NE 'N').ZG11Q  INVALID REG NAME      00111600
.ZG11P             ANOP  ,                                              00111700
                   AIF   (T'&ZCGPR NE 'N').ZG11R  NON NUMERIC           00111800
                   AIF   ('&ZCGPR' LT '2').ZG11Q                        00111900
                   AIF   ('&ZCGPR' LE '12').ZG11R                       00112000
.ZG11Q             ANOP  ,                                              00112100
&ZMS               SETC  '"RETCODE='            *KGPRA* MNOTE           00112200
&ZMS               SETC  '&ZMS.&RETCODE"'                               00112300
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00112400
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00112500
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00112600
.ZG11R             ANOP  ,                                              00112700
.*----------------------------------------------------------------***   00112800
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00112900
                   AIF   (N'&RSNCODE LE 1).ZG14A  CK NUM                00113000
&ZMS               SETC  '"RSNCODE='            *KPOSA* MNOTE           00113100
&ZMS               SETC  '&ZMS.&RSNCODE"'                               00113200
&ZMS               SETC  '&ZMS "RSNCODE"'                               00113300
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00113400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00113500
.ZG14A             ANOP  ,                                              00113600
.*-------------------------------------------------------------------   00113700
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00113800
                   AIF   (K'&RSNCODE(1) LE 0).ZG14C  NO PARM            00113900
&ZXRSNCODE         SETC  'OUTPUT'    SET OUTPUT                         00114000
&XRSNCODE          SETC  '&RSNCODE(1)'          SET XVARIABLE           00114100
                   AIF   (N'&RSNCODE GT 1).ZG14C                        00114200
&XRSNCODE          SETC  '&RSNCODE'  SET XVARIABLE                      00114300
.ZG14C             ANOP  ,                                              00114400
.*-------------------------------------------------------------------   00114500
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00114600
                   AIF   (K'&ZXRSNCODE LE 0).ZG14R  NOT I/O             00114700
                   AIF   ('&XRSNCODE'(1,1) NE '(').ZG14R                00114800
&ZCGPR             SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                   00114900
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG14P                   00115000
                   AIF   (K'&ZCGPR GT 2).ZG14Q                          00115100
                   AIF   ('&ZCGPR' EQ '0').ZG14Q                        00115200
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00115300
                   AIF   (T'&ZCGPR NE 'N').ZG14Q  INVALID REG NAME      00115400
.ZG14P             ANOP  ,                                              00115500
                   AIF   (T'&ZCGPR NE 'N').ZG14R  NON NUMERIC           00115600
                   AIF   ('&ZCGPR' LT '2').ZG14Q                        00115700
                   AIF   ('&ZCGPR' LE '12').ZG14R                       00115800
.ZG14Q             ANOP  ,                                              00115900
&ZMS               SETC  '"RSNCODE='            *KGPRA* MNOTE           00116000
&ZMS               SETC  '&ZMS.&RSNCODE"'                               00116100
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00116200
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00116300
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00116400
.ZG14R             ANOP  ,                                              00116500
.******************************************************************     00116600
.***AH.P00 CHECK STANDALONE POSITIONAL VARIABLES                        00116700
.******************************************************************     00116800
                   ACTR  10000                                          00116900
.*----------------------------------------------------------------***   00117000
.***AH.P02 EXTRA POSITIONALS                                            00117100
                   AIF   (N'&SYSLIST LE 0).ZGLISTX  NO EXTRAS           00117200
                   AIF   (N'&SYSLIST NE 2).ZGLISTX1  NOT NULL           00117300
                   AIF   ('&SYSLIST(1)' NE '').ZGLISTX1  NOT NULL       00117400
                   AIF   ('&SYSLIST(2)' EQ '').ZGLISTX  NOT NULL        00117500
.ZGLISTX1          ANOP  ,                                              00117600
&ZCVAL             SETC  ''          ERROR FIELD                        00117700
&ZAWRK             SETA  0           POSITIONAL NUMBER                  00117800
.ZGLIST2           ANOP  ,                                              00117900
&ZAWRK             SETA  &ZAWRK+1    NEXT POSITIONAL                    00118000
                   AIF   (&ZAWRK GT N'&SYSLIST).ZGLIST3  DONE           00118100
&ZCVAL             SETC '&ZCVAL,&SYSLIST(&ZAWRK)'  EXTRA                00118200
                   AGO   .ZGLIST2                                       00118300
.*                                                                      00118400
.ZGLIST3           ANOP  ,                                              00118500
&ZCVAL             SETC '&ZCVAL'(2,K'&ZCVAL-1)  STRIP COMMA             00118600
&ZMS               SETC  'POSITIONAL ARGUMENT(S),'  *PPOSA* MNOTE       00118700
&ZMS               SETC  '&ZMS "&ZCVAL"'                                00118800
&ZMS               SETC  '&ZMS CANNOT BE USED.'                         00118900
&ZMS               SETC  '&ZMS NO POSITIONAL ARGUMENTS'                 00119000
                   MNOTE 8,' &ZMS ARE ALLOWED.'                         00119100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00119200
.ZGLISTX           ANOP  ,                                              00119300
&ZASYSLNDX         SETA  0                                              00119400
.*-------------------------------------------------------------------   00119500
.***AG.MF04 MF=(SLE)                                                    00119600
.ZGMFX             ANOP  ,           END OF FULL SYNTAX CHECK           00119700
.*******************************************************************    00119800
.***AE.ZMR01 NO CODE GENERATED IF ERRORS DETECTED                       00119900
.*******************************************************************    00120000
                   AIF   (&ZMACRET NE 0).ZLX2   ERROR DETECTED          00120100
.*******************************************************************    00120200
.***AE.01  START OF IWMWSYSQ MACRO CODE                                 00120300
.*******************************************************************    00120400
                   LCLC  &M0M0001                 NAME                  00120500
&M0M0001           SETC  '&XLABEL'                SET NAME              00120600
                   AIF   (K'&XLABEL NE 0).XLAB2                         00120700
&M0M0001           SETC  'M00M&SYSNDX'            DEFAULT NAME          00120800
.*                                                                      00120900
.XLAB2             ANOP  ,                                              00121000
                   AIF   ('&XMF' EQ 'L').XLAB3                          00121100
&M0M0001 DS    0H                             IWMWSYSQ-2                00121200
.XLAB3             ANOP  ,                                              00121300
.*******************************************************************    00121400
.***AE.PR01 PRINT CONTROLS, DEFAULT IS YES                              00121500
.*******************************************************************    00121600
              PUSH  PRINT                                               00121700
                   AIF   ('&ZPRINT' NE 'NO').ZPRINTX  TURN PRINT ON     00121800
                   PRINT OFF         ++ PR01                            00121900
                   AGO   .ZPRNTXX                                       00122000
.ZPRINTX           PRINT ON                                             00122100
.ZPRNTXX           ANOP  ,                                              00122200
.********************************************************************   00122300
.***AL.L01 INTERNAL ARRAY TO PRODUCE FORMATTED CODE                     00122400
.********************************************************************   00122500
                      LCLA  &ZOPN          LIST INSTRUCTION INDEX       00122600
                      LCLA  &ZOPN1         INVOCATION INDEX             00122700
                      LCLC  &ZOPL(4095)    LABEL                        00122800
                      LCLC  &ZOPO(4095)    OPERATION                    00122900
                      LCLC  &ZOPV(4095)    VALUE                        00123000
                      LCLC  &ZOPD(4095)    DESCRIPTION                  00123100
.*                                                                      00123200
&ZOPN                 SETA  0              INITIAL INST INDEX VALUE     00123300
.******************************************************************     00123400
.***AL.L10 IWMWSYSQ FMT=LIST MF=S|L PARAMETERS                          00123500
.******************************************************************     00123600
                      AIF   ('&XMF' EQ 'L').ZLMFSL2                     00123700
                      AIF   ('&XMF' NE 'S').ZLMFSLX                     00123800
&XMFCTRL              SETC  '#Z'.'&SYSNDX'(1,4).'A'                     00123900
&XMFATTR              SETC  '0D'                                        00124000
.*                                                                      00124100
&ZOPN                 SETA  &ZOPN+1                                     00124200
&ZOPL(&ZOPN)          SETC  ' '                                         00124300
&ZOPO(&ZOPN)          SETC  'B'                                         00124400
&ZOPV(&ZOPN)          SETC  '&XMFCTRL.S'                                00124500
&ZOPD(&ZOPN)          SETC  '++ IWMWSYSQ ARG PARMS'                     00124600
.*                                                                      00124700
&ZOPN                 SETA  &ZOPN+1                                     00124800
&ZOPL(&ZOPN)          SETC  ' '                                         00124900
&ZOPO(&ZOPN)          SETC  'SPACE'                                     00125000
&ZOPV(&ZOPN)          SETC  '1'                                         00125100
&ZOPD(&ZOPN)          SETC  ' '                                         00125200
.*                                                                      00125300
.ZLMFSL2              ANOP  ,                                           00125400
.*-------------------------------------------------------------------   00125500
.***AM.L00  IWMWSYSQ FMT=LIST name                                      00125600
                      AIF   ('&XMF' NE 'L').ZLMFSL2M                    00125700
&ZOPN                 SETA &ZOPN+1                                      00125800
&ZOPL(&ZOPN)          SETC '&M0M0001'                                   00125900
&ZOPO(&ZOPN)          SETC 'EQU'                                        00126000
&ZOPV(&ZOPN)          SETC '&XMFCTRL'                                   00126100
&ZOPD(&ZOPN)          SETC '++ IWMWSYSQ NAME'                           00126200
.ZLMFSL2M             ANOP  ,                                           00126300
.*-------------------------------------------------------------------   00126400
.***AM.L01  IWMWSYSQ FMT=LIST PARAMETERS                                00126500
&ZOPN                 SETA &ZOPN+1                                      00126600
&ZOPL(&ZOPN)          SETC '&XMFCTRL'                                   00126700
&ZOPO(&ZOPN)          SETC 'DS'                                         00126800
&ZOPV(&ZOPN)          SETC '&XMFATTR'                                   00126900
&ZOPD(&ZOPN)          SETC '++ IWMWSYSQ PARM LIST'                      00127000
.*-------------------------------------------------------------------   00127100
.***AM.L09  XACRO CL4                                                   00127200
&ZOPN                 SETA &ZOPN+1                                      00127300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XACRO'                            00127400
&ZOPO(&ZOPN)          SETC 'DS'                                         00127500
&ZOPV(&ZOPN)          SETC 'CL4'                                        00127600
&ZOPD(&ZOPN)          SETC '++ CONSTANT  XACRO'                         00127700
.*-------------------------------------------------------------------   00127800
.***AM.L02 XVERSION XL1                                                 00127900
&ZOPN                 SETA &ZOPN+1                                      00128000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XVERSION'                         00128100
&ZOPO(&ZOPN)          SETC 'DS'                                         00128200
&ZOPV(&ZOPN)          SETC 'XL1'                                        00128300
&ZOPD(&ZOPN)          SETC '++ INPUT XVERSION'                          00128400
.*-------------------------------------------------------------------   00128500
.***AM.L09  XRSV001 CL1                                                 00128600
&ZOPN                 SETA &ZOPN+1                                      00128700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV001'                          00128800
&ZOPO(&ZOPN)          SETC 'DS'                                         00128900
&ZOPV(&ZOPN)          SETC 'CL1'                                        00129000
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV001'                       00129100
.*-------------------------------------------------------------------   00129200
.***AM.L09  XPLISTLEN XL2                                               00129300
&ZOPN                 SETA &ZOPN+1                                      00129400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XPLISTLEN'                        00129500
&ZOPO(&ZOPN)          SETC 'DS'                                         00129600
&ZOPV(&ZOPN)          SETC 'XL2'                                        00129700
&ZOPD(&ZOPN)          SETC '++ INPUT  XPLISTLEN'                        00129800
.*-------------------------------------------------------------------   00129900
.***AM.L09  XANSLEN F                                                   00130000
&ZOPN                 SETA &ZOPN+1                                      00130100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XANSLEN'                          00130200
&ZOPO(&ZOPN)          SETC 'DS'                                         00130300
&ZOPV(&ZOPN)          SETC 'F'                                          00130400
&ZOPD(&ZOPN)          SETC '++ &ZXANSLEN  XANSLEN'                      00130500
.*-------------------------------------------------------------------   00130600
.***AM.L09  XQUERYLEN F                                                 00130700
&ZOPN                 SETA &ZOPN+1                                      00130800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XQUERYLEN'                        00130900
&ZOPO(&ZOPN)          SETC 'DS'                                         00131000
&ZOPV(&ZOPN)          SETC 'F'                                          00131100
&ZOPD(&ZOPN)          SETC '++ &ZXQUERYLEN  XQUERYLEN'                  00131200
.*-------------------------------------------------------------------   00131300
.***AM.L09  XRSV002 CL4                                                 00131400
&ZOPN                 SETA &ZOPN+1                                      00131500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV002'                          00131600
&ZOPO(&ZOPN)          SETC 'DS'                                         00131700
&ZOPV(&ZOPN)          SETC 'CL4'                                        00131800
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV002'                       00131900
.*-------------------------------------------------------------------   00132000
.***AM.L09  XSYSINFO_BLOCK A                                            00132100
&ZOPN                 SETA &ZOPN+1                                      00132200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSYSINFO_BLOCK'                   00132300
&ZOPO(&ZOPN)          SETC 'DS'                                         00132400
&ZOPV(&ZOPN)          SETC 'A'                                          00132500
&ZOPD(&ZOPN)          SETC '++ &ZXSYSINFO_BLOCK  XSYSINFO_BLOCK'        00132600
.*-------------------------------------------------------------------   00132700
.***AM.L09  XRSV003 CL4                                                 00132800
&ZOPN                 SETA &ZOPN+1                                      00132900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV003'                          00133000
&ZOPO(&ZOPN)          SETC 'DS'                                         00133100
&ZOPV(&ZOPN)          SETC 'CL4'                                        00133200
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV003'                       00133300
.*-------------------------------------------------------------------   00133400
.***AM.L09  XRSV004 CL4                                                 00133500
&ZOPN                 SETA &ZOPN+1                                      00133600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV004'                          00133700
&ZOPO(&ZOPN)          SETC 'DS'                                         00133800
&ZOPV(&ZOPN)          SETC 'CL4'                                        00133900
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV004'                       00134000
.*-------------------------------------------------------------------   00134100
.***AM.L10 END OF IWMWSYSQ LIST PARAMETERS                              00134200
&ZOPN                 SETA &ZOPN+1                                      00134300
&ZOPL(&ZOPN)          SETC '&XMFCTRL.L'                                 00134400
&ZOPO(&ZOPN)          SETC 'EQU'                                        00134500
&ZOPV(&ZOPN)          SETC '*-&XMFCTRL'                                 00134600
&ZOPD(&ZOPN)          SETC '++ LENGTH OF PLIST'                         00134700
.*                                                                      00134800
&ZOPN                 SETA &ZOPN+1                                      00134900
&ZOPL(&ZOPN)          SETC ' '                                          00135000
&ZOPO(&ZOPN)          SETC 'SPACE'                                      00135100
&ZOPV(&ZOPN)          SETC '1'                                          00135200
&ZOPD(&ZOPN)          SETC ' '                                          00135300
.*-------------------------------------------------------------------   00135400
.***AL.L12 IWMWSYSQ FMT=LIST MF=S|L PARAMETERS                          00135500
                      AIF   ('&XMF' EQ 'L').ZMFLX  DONE IF MF=L         00135600
.*                                                                      00135700
&ZOPN                 SETA  &ZOPN+1                                     00135800
&ZOPL(&ZOPN)          SETC  '&XMFCTRL.S'                                00135900
&ZOPO(&ZOPN)          SETC  'DC'                                        00136000
&ZOPV(&ZOPN)          SETC  '0H''0'''                                   00136100
&ZOPD(&ZOPN)          SETC  '++ IWMWSYSQ ARG PARMS'                     00136200
.*                                                                      00136300
.ZLMFSLX              ANOP  ,                                           00136400
.*-------------------------------------------------------------------   00136500
.***AL.L13 SET ZPLLEN TO ITS APPROPRIATE VALUE                          00136600
&ZPLLEN               SETA 32                                           00136700
.*                                                                      00136800
.******************************************************************     00136900
.***AI.L01 IWMWSYSQ FMT=LIST FILL IN PARAMETER AREA                     00137000
.******************************************************************     00137100
                      ACTR  10000                                       00137200
&ZCVAL                SETC  'LA'           ASSUME XA MODE               00137300
                      AIF   ('&SYSASCE' EQ 'P').ZIMFXA  SYSSTATE PRI    00137400
&ZCVAL                SETC  'LAE'          XAX MODE                     00137500
.ZIMFXA               ANOP ,                                            00137600
.*                                                                      00137700
                      AIF   ('&XMFCTRL'(1,1) NE '(').ZIMFN2  NOT GPR    00137800
&ZCGPR                SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)  GET GPR         00137900
                      AIF   ('&ZCGPR' EQ 'GPR1').ZIMFNX                 00138000
                      AIF   ('&ZCGPR' EQ 'GPR01').ZIMFNX                00138100
                      AIF   ('&ZCGPR' EQ 'REG1').ZIMFNX                 00138200
                      AIF   ('&ZCGPR' EQ 'REG01').ZIMFNX                00138300
                      AIF   ('&ZCGPR' EQ 'R1').ZIMFNX                   00138400
                      AIF   ('&ZCGPR' EQ '1').ZIMFNX                    00138500
                      AIF   ('&ZCGPR' EQ '01').ZIMFNX                   00138600
&ZOPN                 SETA  &ZOPN+1                                     00138700
&ZOPL(&ZOPN)          SETC  ' '                                         00138800
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00138900
&ZOPV(&ZOPN)          SETC  '1,0(,&ZCGPR)'                              00139000
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00139100
                      AGO   .ZIMFNX                                     00139200
.*                                                                      00139300
.ZIMFN2               ANOP ,                                            00139400
&ZOPN                 SETA  &ZOPN+1                                     00139500
&ZOPL(&ZOPN)          SETC  ' '                                         00139600
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00139700
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL'                                00139800
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00139900
.ZIMFNX               ANOP ,                                            00140000
.********************************************************************   00140100
.***AI.L02 IWMWSYSQ FMT=LIST INITIALIZE PARAMETER AREA                  00140200
.********************************************************************   00140300
.***AI.L03 MF=(SLE)                                                     00140400
                      AIF   ('&XMF' EQ 'L').ZIMFLX                      00140500
.*                                                                      00140600
&ZOPN                 SETA  &ZOPN+1                                     00140700
&ZOPL(&ZOPN)          SETC  ' '                                         00140800
&ZOPO(&ZOPN)          SETC  'XC'                                        00140900
&ZOPV(&ZOPN)          SETC  '0(&ZPLLEN,1),0(1)'                         00141000
&ZOPD(&ZOPN)          SETC  '++ INITIALIZE'                             00141100
.ZIMFLX               ANOP  ,                                           00141200
.*-------------------------------------------------------------------   00141300
.***AI.L60 XACRO CL4                                                    00141400
&ZOPN                 SETA  &ZOPN+1                                     00141500
&ZOPL(&ZOPN)          SETC  ' '                                         00141600
&ZOPO(&ZOPN)          SETC  'MVC'                                       00141700
&ZOPV(&ZOPN)          SETC  '0(4,1),=CL4''SCQP'''                       00141800
&ZOPD(&ZOPN)          SETC  '++ CL4 CONSTANT'                           00141900
.*-------------------------------------------------------------------   00142000
.***AI.L04B XVERSION XL1                                                00142100
                      AIF   (&XPLISTVER EQ 0).ZIMFVZ                    00142200
&ZOPN                 SETA  &ZOPN+1                                     00142300
&ZOPL(&ZOPN)          SETC  ' '                                         00142400
&ZOPO(&ZOPN)          SETC  'MVI'                                       00142500
&ZOPV(&ZOPN)          SETC  '4(1),&XPLISTVER'                           00142600
&ZOPD(&ZOPN)          SETC  '++ INPUT XVERSION XL1'                     00142700
.ZIMFVZ               ANOP  ,                                           00142800
.*-------------------------------------------------------------------   00142900
.***AI.L04 XPLISTLEN XL2                                                00143000
&ZOPN                 SETA  &ZOPN+1                                     00143100
&ZOPL(&ZOPN)          SETC  ' '                                         00143200
&ZOPO(&ZOPN)          SETC  'MVC'                                       00143300
&ZOPV(&ZOPN)          SETC  '6(2,1),=AL2(&ZPLLEN)'                      00143400
&ZOPD(&ZOPN)          SETC  '++ INPUT XPLISTLEN XL2'                    00143500
.*-------------------------------------------------------------------   00143600
.***AI.L25  XANSLEN F                                                   00143700
                      AIF   ('&ZXANSLEN' EQ '').ZI5E                    00143800
                      AIF   ('&ZXANSLEN' EQ 'OUTPUT').ZI5E              00143900
&ZCGPR                SETC  '&XANSLEN'                                  00144000
.*                                                                      00144100
                      AIF   ('&XANSLEN'(1,1) NE '(').ZI5B               00144200
&ZCGPR   SETC  '0('.'&XANSLEN'(2,K'&XANSLEN-2).')'                      00144300
                      AGO   .ZI5D                                       00144400
.ZI5B                 ANOP  ,                                           00144500
.*                                                                      00144600
&ZC                   SETC  '&XANSLEN'(1,1)                             00144700
                      AIF   (T'&ZC NE 'N').ZI5D                         00144800
&ZC                   SETC  '&XANSLEN'                                  00144900
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI5D                00145000
&ZCGPR                SETC  '=FL4''&XANSLEN'''                          00145100
.*                                                                      00145200
.ZI5D                 ANOP  ,                                           00145300
.*                                                                      00145400
&ZOPN                 SETA  &ZOPN+1                                     00145500
&ZOPL(&ZOPN)          SETC  ' '                                         00145600
&ZOPO(&ZOPN)          SETC  'MVC'                                       00145700
&ZOPV(&ZOPN)          SETC  '8(4,1),&ZCGPR'                             00145800
&ZOPD(&ZOPN)          SETC  '++ &ZXANSLEN XANSLEN'                      00145900
.*                                                                      00146000
.ZI5E                 ANOP  ,                                           00146100
.*-------------------------------------------------------------------   00146200
.***AI.L25  XSYSINFO_BLOCK AL4                                          00146300
                      AIF   ('&ZXSYSINFO_BLOCK' EQ '').ZI8E             00146400
                      AIF   ('&ZXSYSINFO_BLOCK' EQ 'OUTPUT').ZI8E       00146500
&ZCGPR                SETC  '&XSYSINFO_BLOCK'                           00146600
.*                                                                      00146700
                      AIF   ('&XSYSINFO_BLOCK'(1,1) NE '(').ZI8B        00146800
&ZCGPR   SETC  '0('.'&XSYSINFO_BLOCK'(2,K'&XSYSINFO_BLOCK-2).')'        00146900
                      AGO   .ZI8D                                       00147000
.ZI8B                 ANOP  ,                                           00147100
.*                                                                      00147200
&ZC                   SETC  '&XSYSINFO_BLOCK'(1,1)                      00147300
                      AIF   (T'&ZC NE 'N').ZI8D                         00147400
&ZC                   SETC  '&XSYSINFO_BLOCK'                           00147500
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI8D                00147600
&ZCGPR                SETC  '=AL4(&XSYSINFO_BLOCK)'                     00147700
.*                                                                      00147800
.ZI8D                 ANOP  ,                                           00147900
.*                                                                      00148000
&ZOPN                 SETA  &ZOPN+1                                     00148100
&ZOPL(&ZOPN)          SETC  ' '                                         00148200
&ZOPO(&ZOPN)          SETC  'MVC'                                       00148300
&ZOPV(&ZOPN)          SETC  '20(4,1),&ZCGPR'                            00148400
&ZOPD(&ZOPN)          SETC  '++ &ZXSYSINFO_BLOCK XSYSINFO_BLOCK'        00148500
.*                                                                      00148600
.ZI8E                 ANOP  ,                                           00148700
.*-------------------------------------------------------------------   00148800
&ZOPN1                SETA &ZOPN                                        00148900
.*******************************************************************    00149000
.***  PROCESS IWMWSYSQ OUTPUT PARAMETERS                                00149100
.*******************************************************************    00149200
                      ACTR  10000                                       00149300
.*------------------------------------------------------------------    00149400
.***AO.LVER01                                                           00149500
                      AIF  (&XPLISTVER LT 2).ZO6Z  PLVER                00149600
.*------------------------------------------------------------------    00149700
.***AO.L02 XQUERYLEN F                                                  00149800
         AIF   ('&ZXQUERYLEN' EQ 'OUTPUT').ZO6A  OUTPUT                 00149900
         AIF   ('&ZXQUERYLEN' NE 'INOUT').ZO6C  INOUT                   00150000
.ZO6A    AIF   ('&XQUERYLEN'(1,1) NE '(').ZO6B  ADDR IN GPR             00150100
&ZCGPR   SETC  '&XQUERYLEN'(2,K'&XQUERYLEN-2)                           00150200
&ZOPN                 SETA  &ZOPN+1                                     00150300
&ZOPL(&ZOPN)          SETC  ' '                                         00150400
&ZOPO(&ZOPN)          SETC  'MVC'                                       00150500
&ZOPV(&ZOPN)          SETC  '0(4,&ZCGPR),12(1)'                         00150600
&ZOPD(&ZOPN)          SETC  '++ XQUERYLEN F'                            00150700
                      AGO   .ZO6C                                       00150800
.*                                                                      00150900
.ZO6B                 ANOP  ,                                           00151000
&ZAWRK   SETA  K'&XQUERYLEN                                             00151100
         AIF   ('&XQUERYLEN'(&ZAWRK,1) NE ')').ZO6G                     00151200
&ZN      SETA  2                                                        00151300
.ZO6H    ANOP                                                           00151400
         AIF   (&ZN GE &ZAWRK).ZO6G                                     00151500
         AIF   ('&XQUERYLEN'(&ZN,1) NE '(').ZO6I                        00151600
&ZC      SETC  '&XQUERYLEN'(1,&ZN).'4'.','                              00151700
&ZC      SETC  '&ZC'.'&XQUERYLEN'(&ZN+1,&ZAWRK-&ZN).',12(1)'            00151800
         AGO   .ZO6J                                                    00151900
.ZO6I    ANOP                                                           00152000
&ZN      SETA  &ZN+1                                                    00152100
         AGO   .ZO6H                                                    00152200
.ZO6G    ANOP                                                           00152300
&ZC      SETC  '&XQUERYLEN.(4),12(1)'                                   00152400
.ZO6J    ANOP                                                           00152500
&ZOPN                 SETA  &ZOPN+1                                     00152600
&ZOPL(&ZOPN)          SETC  ' '                                         00152700
&ZOPO(&ZOPN)          SETC  'MVC'                                       00152800
&ZOPV(&ZOPN)          SETC  '&ZC'                                       00152900
&ZOPD(&ZOPN)          SETC  '++ XQUERYLEN F'                            00153000
.ZO6C                 ANOP  ,                                           00153100
.*------------------------------------------------------------------    00153200
.***AO.LVER02                                                           00153300
.ZO6Z                 ANOP  ,                                           00153400
.*******************************************************************    00153500
.***AO.X02  RETURN CODE PROCESSING                                      00153600
.*******************************************************************    00153700
                      AIF   (N'&RETCODE LE 0).ZMRETX                    00153800
                      AIF   ('&XRETCODE'(1,1) EQ '(').ZMRET2            00153900
                      AIF   ('&XRETCODE' EQ 'GPR15').ZMRETX             00154000
                      AIF   ('&XRETCODE' EQ 'REG15').ZMRETX             00154100
                      AIF   ('&XRETCODE' EQ 'R15').ZMRETX               00154200
                      AIF   ('&XRETCODE' EQ '15').ZMRETX                00154300
&ZOPN                 SETA  &ZOPN+1                                     00154400
&ZOPL(&ZOPN)          SETC  ' '                                         00154500
&ZOPO(&ZOPN)          SETC  'ST'                                        00154600
&ZOPV(&ZOPN)          SETC  '15,&XRETCODE'                              00154700
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00154800
                      AGO   .ZMRETX                                     00154900
.*                                                                      00155000
.ZMRET2               ANOP  ,                                           00155100
&ZCGPR                SETC  '&XRETCODE'(2,K'&XRETCODE-2)                00155200
                      AIF   ('&ZCGPR' EQ 'GPR15').ZMRETX                00155300
                      AIF   ('&ZCGPR' EQ 'REG15').ZMRETX                00155400
                      AIF   ('&ZCGPR' EQ 'R15').ZMRETX                  00155500
                      AIF   ('&ZCGPR' EQ '15').ZMRETX                   00155600
&ZOPN                 SETA  &ZOPN+1                                     00155700
&ZOPL(&ZOPN)          SETC  ' '                                         00155800
&ZOPO(&ZOPN)          SETC  'LR'                                        00155900
&ZOPV(&ZOPN)          SETC  '&ZCGPR,15'                                 00156000
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00156100
.ZMRETX               ANOP  ,                                           00156200
.*******************************************************************    00156300
.***AO.X03  REASON CODE PROCESSING                                      00156400
.*******************************************************************    00156500
                      AIF   (N'&RSNCODE LE 0).ZMRSNX                    00156600
                      AIF   ('&XRSNCODE'(1,1) EQ '(').ZMRSN2            00156700
                      AIF   ('&XRSNCODE' EQ 'GPR0').ZMRSNX              00156800
                      AIF   ('&XRSNCODE' EQ 'GPR00').ZMRSNX             00156900
                      AIF   ('&XRSNCODE' EQ 'REG0').ZMRSNX              00157000
                      AIF   ('&XRSNCODE' EQ 'REG00').ZMRSNX             00157100
                      AIF   ('&XRSNCODE' EQ 'R0').ZMRSNX                00157200
                      AIF   ('&XRSNCODE' EQ '0').ZMRSNX                 00157300
                      AIF   ('&XRSNCODE' EQ '00').ZMRSNX                00157400
&ZOPN                 SETA  &ZOPN+1                                     00157500
&ZOPL(&ZOPN)          SETC  ' '                                         00157600
&ZOPO(&ZOPN)          SETC  'ST'                                        00157700
&ZOPV(&ZOPN)          SETC  '0,&XRSNCODE'                               00157800
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00157900
                      AGO   .ZMRSNX                                     00158000
.*                                                                      00158100
.ZMRSN2               ANOP  ,                                           00158200
&ZCGPR                SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                00158300
                      AIF   ('&ZCGPR' EQ 'GPR0').ZMRSNX                 00158400
                      AIF   ('&ZCGPR' EQ 'GPR00').ZMRSNX                00158500
                      AIF   ('&ZCGPR' EQ 'REG0').ZMRSNX                 00158600
                      AIF   ('&ZCGPR' EQ 'REG00').ZMRSNX                00158700
                      AIF   ('&ZCGPR' EQ 'R0').ZMRSNX                   00158800
                      AIF   ('&ZCGPR' EQ '0').ZMRSNX                    00158900
                      AIF   ('&ZCGPR' EQ '00').ZMRSNX                   00159000
&ZOPN                 SETA  &ZOPN+1                                     00159100
&ZOPL(&ZOPN)          SETC  ' '                                         00159200
&ZOPO(&ZOPN)          SETC  'LR'                                        00159300
&ZOPV(&ZOPN)          SETC  '&ZCGPR,0'                                  00159400
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00159500
.ZMRSNX               ANOP  ,                                           00159600
.*******************************************************************    00159700
.***AO.X04  LABEL FOR MF=L PROCESSING                                   00159800
.*******************************************************************    00159900
.ZMFLX                ANOP  ,              MF=L PROCESSING              00160000
.*******************************************************************    00160100
.***AO.X05  FORMAT GENERATED INSTRUCTIONS                               00160200
.*******************************************************************    00160300
                      ACTR  10000                                       00160400
.*                                                                      00160500
                      LCLA  &ZLC           COLUMN POSITION              00160600
                      LCLA  &ZOPX          LIST TABLE INDEX             00160700
                      LCLC  &ZLL           LABEL                        00160800
                      LCLC  &ZLOP          OPERATION                    00160900
                      LCLC  &ZLV           VALUE                        00161000
                      LCLC  &ZLD           DESCRIPTION                  00161100
.*                                                                      00161200
&ZOPX                 SETA  1                                           00161300
.ZL2                  AIF   (&ZOPX GT &ZOPN1).ZLX  B IF DONE            00161400
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00161500
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00161600
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00161700
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00161800
                      AIF   (K'&ZLD LE 0).ZL5                           00161900
&ZLC                  SETA  35             COMMENT COLUMN               00162000
                      AIF   ('&ZLD'(1,1) NE '*').ZL3                    00162100
&ZLC                  SETA  33             COMMMENT COLUMN              00162200
.ZL3                  AIF   (K'&ZLV GE &ZLC-16-1).ZL4                   00162300
&ZLV                  SETC  '&ZLV'.' '                                  00162400
                      AGO   .ZL3                                        00162500
.*                                                                      00162600
.ZL4                  ANOP  ,                                           00162700
&ZLV                  SETC  '&ZLV'.' '                                  00162800
.ZL5                  ANOP  ,                                           00162900
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00163000
.*                                                                      00163100
&ZLL     &ZLOP &ZLV                                                     00163200
.*                                                                      00163300
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00163400
                      AGO   .ZL2           CONTINUE LOOPING             00163500
.*                                                                      00163600
.ZLX                  ANOP  ,                                           00163700
                      AIF   ('&XMF' EQ 'L').ZLINKX  MF=L                00163800
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00163900
     L     14,16(0,0)              GET CVT ADDRESS                      00164000
     L     14,772(14,0)            GET SFT ADDRESS                      00164100
     L     14,380(14,0)            GET LX FOR SERVICE ROUTINE           00164200
     LA    15,27                   GET EX FOR SERVICE ROUTINE           00164300
     OR    14,15                   GET PC NUMBER                        00164400
     PC    0(14)                                                        00164500
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00164600
.ZLINKX               ANOP  ,                                           00164700
.*******************************************************************    00164800
.***AP.X01  FORMAT GENERATED CODE                                       00164900
.ZL21                 AIF   (&ZOPX GT &ZOPN).ZLX1  B IF DONE            00165000
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00165100
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00165200
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00165300
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00165400
                      AIF   (K'&ZLD LE 0).ZL51                          00165500
&ZLC                  SETA  35             COMMENT COLUMN               00165600
                      AIF   ('&ZLD'(1,1) NE '*').ZL31                   00165700
&ZLC                  SETA  33             COMMENT COLUMN               00165800
.ZL31                 AIF   (K'&ZLV GE &ZLC-16-1).ZL41                  00165900
&ZLV                  SETC  '&ZLV'.' '                                  00166000
                      AGO   .ZL31                                       00166100
.*                                                                      00166200
.ZL41                 ANOP  ,                                           00166300
&ZLV                  SETC  '&ZLV'.' '                                  00166400
.ZL51                 ANOP  ,                                           00166500
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00166600
.*                                                                      00166700
&ZLL     &ZLOP &ZLV                                                     00166800
.*                                                                      00166900
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00167000
                      AGO   .ZL21          CONTINUE LOOPING             00167100
.*                                                                      00167200
.ZLX1                 ANOP  ,                                           00167300
.*******************************************************************    00167400
.***AP.X02  END OF IWMWSYSQ MACRO                                       00167500
&ZIWMWSYSQ            SETC  'YES'          SET IWMWSYSQ USED            00167600
         POP   PRINT                                                    00167700
*                                            IWMWSYSQ-2                 00167800
         SPACE 1                                                        00167900
.ZLX2                 ANOP  ,                                           00168000
         MEND                                                           00168100
**********************************************************************/ 00168200
*/**** START OF SPECIFICATIONS **************************************** 00168300
*                                                                     * 00168400
*                                                                     * 00168500
*01* MACRO NAME:  IWMWSYSQ                              -09/06/96-<2> * 00168600
*                                                                     * 00168700
*                                                                     * 00168800
*01* DESCRIPTIVE NAME:  Query System Information                      * 00168900
*                                                                     * 00169000
*01* PROPRIETARY STATEMENT:                                           * 00169100
*                                                                     * 00169200
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 00169300
*     THIS MACRO IS "RESTRICTED MATERIALS OF IBM"                     * 00169400
*     5645-001 (C) COPYRIGHT IBM CORP. 1994, 1997                     * 00169500
*                                                                     * 00169600
* STATUS= HBB6603                                                     * 00169700
*                                                                     * 00169800
*                                                                     * 00169900
*                                                                     * 00170000
*01* FUNCTION:                                                        * 00170100
*       See the IWMWSYSQ macro prologue for details.                  * 00170200
*                                                                     * 00170300
*01* INPUT:                                                           * 00170400
*                                                                     * 00170500
*            ?IWMWSYSQ     SYSINFO_BLOCK                              * 00170600
*                                        (xsysinfo_block)             * 00170700
*                          ANSLEN(xanslen)                            * 00170800
*                          QUERYLEN(xquerylen)                        * 00170900
*                         [RETCODE(xretcode)]                         * 00171000
*                         [RSNCODE(xrsncode)]                         * 00171100
*                         [PLISTVER(xplistver|IMPLIED_VERSION)]     * 00171200
*                        [MF(S)]                                     * 00171300
*                        [MF(L,xmfctrl,xmfattr|BDY(DWORD))]        * 00171400
*                        [MF(E,xmfctrl,COMPLETE)]                  * 00171500
*                                                                     * 00171600
****** END OF SPECIFICATIONS *****************************************/ 00171700
*/*PB.ECHO01 MACRO INVOCATION ECHO-----------------------------------*/ 00171800
*  ANS('@SPACE;') NORESCAN COL(MACLMAR);                                00171900
*  ANS('/* ? IWMWSYSQ '||MACLIST||' ')                                  00172000
*      NORESCAN COL(MACLMAR+5);    /* START ECHO */                     00172100
*                                                                       00172200
*  DCL ZELO  FIXED;                                                     00172300
*  DCL ZECOL FIXED;                                                     00172400
*                                                                       00172500
*  ZELO=1;     /* STARTING COLUMN */                                    00172600
*  DO WHILE ZELO<=LENGTH(MACKEYS);  /* PARENTHSIS SCAN */               00172700
*    ZECOL=INDEX(MACKEYS(ZELO:LENGTH(MACKEYS)),')');                    00172800
*    IF ZECOL>0                                                         00172900
*      THEN                                                             00173000
*        DO;   /* PARENTHESIS FOUND */                                  00173100
*          ANS(MACKEYS(ZELO:ZELO+ZECOL-1)||' ')                         00173200
*             NORESCAN COL(MACLMAR+5);                                  00173300
*          ZELO=ZELO+ZECOL;        /* NEXT PORTION */                   00173400
*        END;                                                           00173500
*      ELSE                                                             00173600
*        DO;   /* REMAINING KEYS */                                     00173700
*          ANS(MACKEYS(ZELO:LENGTH(MACKEYS)))                           00173800
*             NORESCAN COL(MACLMAR+5);                                  00173900
*          ZELO=LENGTH(MACKEYS)+1;                                      00174000
*        END;                                                           00174100
*  END;                                                                 00174200
*  ANS(' -09/06/96-2- */')                                              00174300
*      NORESCAN COL(MACLMAR+5);    /* END ECHO */                       00174400
*/********************************************************************/ 00174500
*/*PV.DCL01 MACRO DECLARES AND CODE GENERATION CONTROLS              */ 00174600
*/********************************************************************/ 00174700
*  DCL ZPRINT  EXTERNAL; DEACT ZPRINT; /* YES=PRINT, NO=NO PRINT     */ 00174800
*  DCL ZTEST   EXTERNAL; DEACT ZTEST;  /* YES=TEST, NO=NO TEST       */ 00174900
*  DCL ZSYSTEM EXTERNAL; DEACT ZSYSTEM;/* PCCODE10, MVS, SAK, VM     */ 00175000
*                                                                       00175100
*  DCL   ZIWMWSYSQ CHAR EXTERNAL; /* YES=USED AT LEAST ONCE          */ 00175200
*  DEACT ZIWMWSYSQ;                                                     00175300
*                                                                       00175400
*  DCL ZMACRET FIXED; DEACT ZMACRET;                                    00175500
*  ZMACRET=0;                   /* MACRO COMPILE RETURN CODE         */ 00175600
*                                                                       00175700
*  DCL ZMS CHAR;   DEACT ZMS;   /* ERROR MESSAGE                     */ 00175800
*  DCL ZCVAL CHAR; DEACT ZCVAL; /* ERROR MESSAGE WORK AREA           */ 00175900
*                                                                       00176000
*  DCL ZI FIXED;  DEACT ZI;     /* INDEX FOR VARIABLE NUM OF PARMS   */ 00176100
*  DCL ZJ FIXED;  DEACT ZJ;     /* INDEX FOR VARIABLE NUM OF PARMS   */ 00176200
*  DCL ZK FIXED;  DEACT ZK;     /* INDEX FOR RANGE COLON (:)         */ 00176300
*  DCL ZL FIXED;  DEACT ZL;     /* INDEX FOR RANGE VALUE CHECKING    */ 00176400
*  DCL ZLO FIXED; DEACT ZLO;    /* LOW RANGE VALUE                   */ 00176500
*  DCL ZHI FIXED; DEACT ZHI;    /* HIGH RANGE VALUE                  */ 00176600
*  DCL ZW CHAR;   DEACT ZW;     /* WORK AREA FOR RANGE VALUE SUBLIST */ 00176700
*  DCL ZN FIXED;  DEACT ZN;     /* NUMERIC WORK VARIABLE             */ 00176800
*  DCL ZC CHAR;   DEACT ZC;     /* CHARACTER WORK VARIABLE           */ 00176900
*  DCL ZMAXINVOCLEN FIXED; DEACT ZMAXINVOCLEN;  /* INVOCATION LENGTH */ 00177000
*  DCL ZPLLEN FIXED; DEACT ZPLLEN;        /* PARAMETER LIST LENGTH   */ 00177100
*                                                                       00177200
*  DCL ZPRMMAX FIXED;           /* MAXIMUM PARM LIST SIZE            */ 00177300
*  DCL ZPRMNUM FIXED;           /* PARAMETER ARRAY INDEX             */ 00177400
*  DCL ZPRM(100);               /* PARAMETER ENTRY                   */ 00177500
*  DCL EHAMAXLEN FIXED EXTERNAL;   /* MAX ILIST SIZE FOR PARM LISTS  */ 00177600
*  DCL EHAREGS CHARACTER EXTERNAL; /* REG DCLS                       */ 00177700
*  DCL EHALIST CHARACTER EXTERNAL; /* STANDARD PARM LIST GENERATION  */ 00177800
*/*******************************************************************/  00177900
*/*PV.XVAR01 DECLARE ALL MACRO PARAMETER VARIABLES                  */  00178000
*/*******************************************************************/  00178100
*  DCL   XSYSINFO_BLOCK;           /***PV.XVAR03 INPUT NAME */          00178200
*  DEACT XSYSINFO_BLOCK;           /***PV.XVAR03 INPUT NAME */          00178300
*  DCL   ZXSYSINFO_BLOCK;          /***INPUT/OUTPUT CONTROL */          00178400
*  DEACT ZXSYSINFO_BLOCK;          /***INPUT/OUTPUT CONTROL */          00178500
*  DCL XANSLEN;  DEACT XANSLEN;    /***PV.XVAR02 INPUT NAME */          00178600
*  DCL ZXANSLEN; DEACT ZXANSLEN;   /***INPUT/OUTPUT CONTROL */          00178700
*  DCL XQUERYLEN;  DEACT XQUERYLEN;  /***PV.XVAR02 OUTPUT NAME */       00178800
*  DCL ZXQUERYLEN; DEACT ZXQUERYLEN;  /***INPUT/OUTPUT CONTROL */       00178900
*  DCL XRETCODE;  DEACT XRETCODE;  /***PV.XVAR02 OUTPUT NAME */         00179000
*  DCL ZXRETCODE; DEACT ZXRETCODE;  /***INPUT/OUTPUT CONTROL */         00179100
*  DCL XRSNCODE;  DEACT XRSNCODE;  /***PV.XVAR02 OUTPUT NAME */         00179200
*  DCL ZXRSNCODE; DEACT ZXRSNCODE;  /***INPUT/OUTPUT CONTROL */         00179300
*  DCL XPLISTVER FIXED;  DEACT XPLISTVER;  /***PV.XVAR02 INPUT VALUE */ 00179400
*  DCL ZXPLISTVER; DEACT ZXPLISTVER;  /***INPUT/OUTPUT CONTROL */       00179500
*  DCL XMF;  DEACT XMF;            /***PV.XVAR02 INPUT VALUE */         00179600
*  DCL ZXMF; DEACT ZXMF;           /***INPUT/OUTPUT CONTROL */          00179700
*  DCL XMFCTRL;  DEACT XMFCTRL;    /***PV.XVAR02 INPUT NAME */          00179800
*  DCL ZXMFCTRL; DEACT ZXMFCTRL;   /***INPUT/OUTPUT CONTROL */          00179900
*  DCL XMFATTR;  DEACT XMFATTR;    /***PV.XVAR02 INPUT VALUE */         00180000
*  DCL ZXMFATTR; DEACT ZXMFATTR;   /***INPUT/OUTPUT CONTROL */          00180100
*  DCL XMFSCK;  DEACT XMFSCK;      /***PV.XVAR02 INPUT VALUE */         00180200
*  DCL ZXMFSCK; DEACT ZXMFSCK;     /***INPUT/OUTPUT CONTROL */          00180300
*/********************************************************************/ 00180400
*/***PC.PLV01  PROCESS PLISTVER                                      */ 00180500
*/********************************************************************/ 00180600
*  IF TRANSLATE(PLISTVER(1)) = 'MAX' THEN                               00180700
*    XPLISTVER=2;                                                       00180800
*  ELSE                                                                 00180900
*    XPLISTVER=2;                                                       00181000
*  IF PLISTVER^=''                                                      00181100
*     & TRANSLATE(PLISTVER(1))^='IMPLIED_VERSION'                       00181200
*     & TRANSLATE(PLISTVER(1))^='MAX'                                   00181300
*    THEN                                                               00181400
*      DO;                                                              00181500
*                                                                       00181600
*        ZCVAL='';                           /* ERROR FLAG */           00181700
*        IF PLISTVER='PLISTVER' | PLISTVER='()'  /*CHECK ENTRY*/        00181800
*          THEN                                                         00181900
*            DO;                                                        00182000
*              ZMS=' 8, THE "PLISTVER" KEY'|| /**KOPTP* MSG*/           00182100
*                  ' MUST CONTAIN ONE'||                                00182200
*                  ' (OR MORE) ARGUMENT(S).';                           00182300
*              ANS MSG('?IWMWSYSQ ---> '||ZMS);                         00182400
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          00182500
*              ZMACRET=8;                    /* MACRO ERROR */          00182600
*              ZCVAL='NO_ARGUMENT';                                     00182700
*            END;                                                       00182800
*        IF NUMBER(PLISTVER)>1               /* CHECK POSITIONALS */    00182900
*          THEN                                                         00183000
*            DO;                                                        00183100
*              ZMS=' 8, "PLISTVER'||         /**KPOSP* MSG*/            00183200
*                  PLISTVER||                                           00183300
*                  '" "PLISTVER"'||                                     00183400
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        00183500
*              ANS MSG('?IWMWSYSQ ---> '||ZMS);                         00183600
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          00183700
*              ZMACRET=8;                    /* MACRO ERROR */          00183800
*            END;                                                       00183900
*                                                                       00184000
*        ZC=PLISTVER(1);                                                00184100
*        DO ZL=1 TO LENGTH(ZC);              /* MUST BE NUMBER */       00184200
*          IF ZC(ZL:ZL)<'0' |                /* MUST BE NUMERIC */      00184300
*             ZC(ZL:ZL)>'9'                  /* MUST BE NUMERIC */      00184400
*            THEN                                                       00184500
*              ZCVAL='NUMERIC';              /* NUMERIC ERROR */        00184600
*        END;                                                           00184700
*        IF ZCVAL=''                                                    00184800
*          THEN                                                         00184900
*            DO;                             /* CHECK RANGE LIMITS */   00185000
*            IF FIXED(PLISTVER(1))>=XPLISTVER                           00185100
*              THEN                                                     00185200
*                XPLISTVER=FIXED(PLISTVER(1));                          00185300
*              ELSE                                                     00185400
*                DO;                                                    00185500
*              ZMS=' 8, PLISTVER='||         /**KVALP* MSG*/            00185600
*                    PLISTVER(1)||                                      00185700
*                  ', BUT PLISTVER OF '||                               00185800
*                    CHAR(XPLISTVER)||                                  00185900
*                  ' IS REQUIRED.';                                     00186000
*              ANS MSG('?IWMWSYSQ ---> '||ZMS);                         00186100
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          00186200
*              ZMACRET=8;                    /* MACRO ERROR */          00186300
*                END;                                                   00186400
*              IF XPLISTVER<2 |              /* LOW LIMIT */            00186500
*                 XPLISTVER>2                /* HIGH LIMIT */           00186600
*                THEN                                                   00186700
*                  ZCVAL='RANGE';            /* RANGE ERROR */          00186800
*            END;                                                       00186900
*        IF ZCVAL^=''                                                   00187000
*          THEN                                                         00187100
*            DO;                             /* RANGE ERROR */          00187200
*              ZXPLISTVER='';                /* RESET IN/OUTPUT */      00187300
*              ZMS=' 8, "PLISTVER '||        /**KRNGP* MSG*/            00187400
*                  PLISTVER||                                           00187500
*                  '" THE RANGE IS "2-2"'||                             00187600
*                  ' FOR ARGUMENT 1.';                                  00187700
*              ANS MSG('?IWMWSYSQ ---> '||ZMS);                         00187800
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          00187900
*              ZMACRET=8;                    /* MACRO ERROR */          00188000
*            END;                                                       00188100
*      END;                                                             00188200
*                                                                       00188300
*/********************************************************************/ 00188400
*/***PG.MF01  PROCESS MF MACRO FORMS                                 */ 00188500
*/********************************************************************/ 00188600
*/*PG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 00188700
*  XMF='';                                                              00188800
*/*PG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 00188900
*  IF TRANSLATE(MF(1))                                                  00189000
*              = 'S'                         /* CHECK FOR KEYWORD */    00189100
*    THEN                                                               00189200
*      DO;                                                              00189300
*        XMF='S';                            /* SET XVARIABLE */        00189400
*        IF NUMBER(MF)>1                     /* CHECK POSITIONALS */    00189500
*          THEN                                                         00189600
*            DO;                                                        00189700
*              ZMS=' 8, "MF'||               /**KPOSP* MSG*/            00189800
*                  MF||                                                 00189900
*                  '" "MF"'||                                           00190000
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        00190100
*              ANS MSG('?IWMWSYSQ ---> '||ZMS);                         00190200
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          00190300
*              ZMACRET=8;                    /* MACRO ERROR */          00190400
*            END;                                                       00190500
*/*PG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 00190600
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KYWRDCTL DO GROUP */     00190700
*/*PG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 00190800
*  IF TRANSLATE(MF(1))                                                  00190900
*              = 'L'                         /* CHECK FOR KEYWORD */    00191000
*    THEN                                                               00191100
*      DO;                                                              00191200
*        XMF='L';                            /* SET XVARIABLE */        00191300
*        IF NUMBER(MF)>3                     /* CHECK POSITIONALS */    00191400
*          THEN                                                         00191500
*            DO;                                                        00191600
*              ZMS=' 8, "MF'||               /**KPOSP* MSG*/            00191700
*                  MF||                                                 00191800
*                  '" "MF"'||                                           00191900
*                  ' CAN HAVE ONLY 3 ARGUMENTS.';                       00192000
*              ANS MSG('?IWMWSYSQ ---> '||ZMS);                         00192100
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          00192200
*              ZMACRET=8;                    /* MACRO ERROR */          00192300
*            END;                                                       00192400
*/*PG.KKCTL10 -MF(L) SPECIAL CHECK-----------------------------------*/ 00192500
*        ZMAXINVOCLEN = LENGTH(MF) + 2;                                 00192600
*        IF PLISTVER ^= ''                                              00192700
*          THEN                                                         00192800
*            ZMAXINVOCLEN=ZMAXINVOCLEN + LENGTH(PLISTVER) + 8;          00192900
*        IF LENGTH(MACKEYS) > ZMAXINVOCLEN |                            00193000
*           MACLIST ^= ''                    /* CHECK FOR OTHER PARMS*/ 00193100
*          THEN                                                         00193200
*            DO;                                                        00193300
*              ZMS=' 8, THE "L" FORM OF "MF"'|| /**MFLP* MSG*/          00193400
*                  ' CAN ONLY HAVE'||                                   00193500
*                  ' THE "PLISTVER" KEY'||                              00193600
*                  ' SPECIFIED ON THE INVOCATION.';                     00193700
*              ANS MSG('?IWMWSYSQ ---> '||ZMS);                         00193800
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          00193900
*              ZMACRET=8;                    /* MACRO ERROR */          00194000
*            END;                                                       00194100
*/*PG.KXVAR03 NAME, OPT RQD INPUT, POS(2) -XVARIABLE-----------------*/ 00194200
*  XMFCTRL=MF(2);                            /* SET XVARIABLE */        00194300
*  IF MF(2)=''                               /* CHECK FOR NULL */       00194400
*   THEN                                                                00194500
*    DO;                                     /* KEY IS REQUIRED */      00194600
*        ZXMFCTRL='';                        /* RESET IN/OUTPUT */      00194700
*        ZMS=' 8, WHEN "L" IS SPECIFIED'||                              00194800
*            ' FOR THE "MF" KEY, POSITIONAL'||                          00194900
*            ' ARG 2 IS REQUIRED.';          /**KRQDP* MSG*/            00195000
*        ANS MSG('?IWMWSYSQ ---> '||ZMS);                               00195100
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00195200
*        ZMACRET=8;                          /* MACRO ERROR */          00195300
*    END;                                                               00195400
*  ELSE                                                                 00195500
*    ZXMFCTRL='INPUT';                       /* SET IN/OUTPUT */        00195600
*/*PG.KXVAR13 VALUE, OPT INPUT, POS(3) -XVARIABLE--------------------*/ 00195700
*  ZXMFATTR='INPUT';                         /* SET IN/OUTPUT */        00195800
*  XMFATTR='BDY(DWORD)';                     /* SET DEFAULT */          00195900
*  IF MF(3)^=''                              /* CHECK FOR NULL */       00196000
*    THEN                                                               00196100
*      XMFATTR=MF(3);                        /* SET XVARIABLE */        00196200
*/*PG.KCK01 VALUE, OPT INPUT, POS(3) -CHARACTER LENGTH---------------*/ 00196300
*  IF ZXMFATTR^='' &                         /* NOT IN/OUTPUT */        00196400
*     LENGTH(XMFATTR)>60                                                00196500
*    THEN                                                               00196600
*      DO;                                                              00196700
*        ZXMFATTR='';                        /* RESET IN/OUTPUT */      00196800
*        ZMS=' 8, "MF'||                     /**KLNGP* MSG*/            00196900
*            MF||                                                       00197000
*            '" ARGUMENT 3 EXCEEDS THE MAXIMUM'||                       00197100
*            ' LENGTH OF 60 CHARACTERS. ';                              00197200
*        ANS MSG('?IWMWSYSQ ---> '||ZMS);                               00197300
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00197400
*        ZMACRET=8;                          /* MACRO ERROR */          00197500
*      END;                                                             00197600
*/*PG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 00197700
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KYWRDCTL DO GROUP */     00197800
*/*PG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 00197900
*  IF TRANSLATE(MF(1))                                                  00198000
*              = 'E'                         /* CHECK FOR KEYWORD */    00198100
*    THEN                                                               00198200
*      DO;                                                              00198300
*        XMF='E';                            /* SET XVARIABLE */        00198400
*        IF NUMBER(MF)>3                     /* CHECK POSITIONALS */    00198500
*          THEN                                                         00198600
*            DO;                                                        00198700
*              ZMS=' 8, "MF'||               /**KPOSP* MSG*/            00198800
*                  MF||                                                 00198900
*                  '" "MF"'||                                           00199000
*                  ' CAN HAVE ONLY 3 ARGUMENTS.';                       00199100
*              ANS MSG('?IWMWSYSQ ---> '||ZMS);                         00199200
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          00199300
*              ZMACRET=8;                    /* MACRO ERROR */          00199400
*            END;                                                       00199500
*/*PG.KXVAR03 NAME, OPT RQD INPUT, POS(2) -XVARIABLE-----------------*/ 00199600
*  XMFCTRL=MF(2);                            /* SET XVARIABLE */        00199700
*  IF MF(2)=''                               /* CHECK FOR NULL */       00199800
*   THEN                                                                00199900
*    DO;                                     /* KEY IS REQUIRED */      00200000
*        ZXMFCTRL='';                        /* RESET IN/OUTPUT */      00200100
*        ZMS=' 8, WHEN "E" IS SPECIFIED'||                              00200200
*            ' FOR THE "MF" KEY, POSITIONAL'||                          00200300
*            ' ARG 2 IS REQUIRED.';          /**KRQDP* MSG*/            00200400
*        ANS MSG('?IWMWSYSQ ---> '||ZMS);                               00200500
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00200600
*        ZMACRET=8;                          /* MACRO ERROR */          00200700
*    END;                                                               00200800
*  ELSE                                                                 00200900
*    ZXMFCTRL='INPUT';                       /* SET IN/OUTPUT */        00201000
*/*PG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 00201100
*  XMFSCK='';                                /* RESET XVARIABLE */      00201200
*  IF TRANSLATE(MF(3))                                                  00201300
*              = 'COMPLETE'                  /* CHECK FOR KEYWORD */    00201400
*    THEN                                                               00201500
*      XMFSCK = 'COMPLETE';                  /* SET XVARIABLE */        00201600
*/*PG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 00201700
*  ZXMFSCK='INPUT';                          /* SET IN/OUTPUT */        00201800
*  IF XMFSCK=''                              /* CHECK FOR KEYWORD */    00201900
*    THEN                                                               00202000
*      DO;                                   /* KEYWORD NOT ENTERED */  00202100
*        XMFSCK='COMPLETE';                  /* SET DEFAULT */          00202200
*        IF MF(3)^=''                                                   00202300
*          THEN                                                         00202400
*            DO;                                                        00202500
*              ZXMFSCK='';                   /* RESET IN/OUTPUT */      00202600
*              ZMS=' 8, "MF'||               /**KUKWP* MSG*/            00202700
*                  MF||'"'||                                            00202800
*                  ' ARGUMENT 3 IS AN UNKNOWN KEYWORD. '||              00202900
*                  ' VALID KEYWORD CHOICE(S) ARE:'||                    00203000
*                  ' "COMPLETE".';           /* VALID KEYWORD */        00203100
*              ANS MSG('?IWMWSYSQ ---> '||ZMS);                         00203200
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          00203300
*              ZMACRET=8;                    /* MACRO ERROR */          00203400
*            END;                                                       00203500
*      END;                                                             00203600
*/*PG.KKCTL05 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 00203700
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KYWRDCTL DO GROUP */     00203800
*/*PG.KKCTL06 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 00203900
*  IF MF='MF'                                                           00204000
*    | MF='()'                               /*CHECK ENTRY*/            00204100
*     THEN                                                              00204200
*       DO;                                                             00204300
*              ZMS=' 8, THE "MF" KEY'||      /**KOPTP* MSG*/            00204400
*                  ' MUST CONTAIN ONE'||                                00204500
*                  ' (OR MORE) ARGUMENT(S).';                           00204600
*              ANS MSG('?IWMWSYSQ ---> '||ZMS);                         00204700
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          00204800
*              ZMACRET=8;                    /* MACRO ERROR */          00204900
*       END;                                                            00205000
*  ELSE                                                                 00205100
*    DO;                                                                00205200
*      ZXMF='INPUT';                         /* SET IN/OUTPUT */        00205300
*      IF XMF=''                             /* CHECK FOR KEYWORD */    00205400
*        THEN                                                           00205500
*          DO;                               /* KEYWORD NOT ENTERED */  00205600
*            XMF='S';                        /* SET DEFAULT */          00205700
*            XMFSCK='COMPLETE';              /* COMPLETE CHECKING */    00205800
*            IF MF(1)^=''                    /* CHECK FOR KEYWORD */    00205900
*              THEN                                                     00206000
*                DO;                                                    00206100
*                  ZXMF='';                  /* RESET IN/OUTPUT */      00206200
*              ZMS=' 8, "MF'||               /**KUKWP* MSG*/            00206300
*                  MF||'"'||                                            00206400
*                  ' ARGUMENT 1 IS AN UNKNOWN KEYWORD. '||              00206500
*                  ' VALID KEYWORD CHOICE(S) ARE:'||                    00206600
*                  ' "S",'||                 /* VALID KEYWORD */        00206700
*                  ' "L",'||                 /* VALID KEYWORD */        00206800
*                  ' OR "E".';               /* VALID KEYWORD */        00206900
*              ANS MSG('?IWMWSYSQ ---> '||ZMS);                         00207000
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          00207100
*              ZMACRET=8;                    /* MACRO ERROR */          00207200
*                END;                                                   00207300
*          END;                                                         00207400
*    END;                                                               00207500
*/********************************************************************/ 00207600
*/***PD.P01 FULL DEFAULT CHECKING                                    */ 00207700
*/********************************************************************/ 00207800
*  IF PLISTVER=''                                                       00207900
*     | PLISTVER(1)='IMPLIED_VERSION'                                   00208000
*    THEN                                                               00208100
*      ZC='ON';                              /* DEFAULT FLAG ON */      00208200
*    ELSE                                                               00208300
*      ZC='OFF';                             /* DEFAULT FLAG OFF */     00208400
*/********************************************************************/ 00208500
*/***PD.P02 DEFAULT ECHO                                             */ 00208600
*/********************************************************************/ 00208700
*/*PD.P02 XMF^='L' & XMFSCK='COMPLETE' ------------------------------*/ 00208800
*  IF XMF^='L'                                                          00208900
*    THEN                                                               00209000
*      DO;                                   /* FULL SYNTAX CHECK */    00209100
*        ANS('/*DEFAULT(S): */')                                        00209200
*           NORESCAN COL(MACLMAR+5);                                    00209300
*/*PD.DFLT02 PRINT DEFAULT(S) IF APPROPRIATE ------------------------*/ 00209400
*  IF PLISTVER=''                                                       00209500
*    THEN                                                               00209600
*      ANS('/* PLISTVER('||                                             00209700
*          CHAR(XPLISTVER)||                                            00209800
*          ')*/')                                                       00209900
*          NORESCAN COL(MACLMAR+5);                                     00210000
*  IF ZC='OFF'                               /*NO DEFAULTS TAKEN */     00210100
*    THEN                                                               00210200
*      ANS('/* NONE. */')                                               00210300
*         NORESCAN COL(MACLMAR+5);                                      00210400
*/*PD.P04 END DEFAULT ECHO ------------------------------------------*/ 00210500
*      END;                                                             00210600
*/********************************************************************/ 00210700
*/*PB.SYSL01 INVOKE SP LEVEL AND SYSTEM STATE MACROS                 */ 00210800
*/********************************************************************/ 00210900
*  DCL SYSSPLV CHAR EXTERNAL; DEACT SYSSPLV;/* SPLEVEL 1,2,3         */ 00211000
*  DCL SYSASCE CHAR EXTERNAL; DEACT SYSASCE;/* STATE ANY P AR */        00211100
*                                                                       00211200
*  IF SYSASCE=''                                                        00211300
*    THEN                                                               00211400
*      DO;                                                              00211500
*        IF SYSSPLV=''                                                  00211600
*          THEN                                                         00211700
*            ANS('?SPLEVEL  (TEST);') COL(MACLMAR);                     00211800
*        IF SYSSPLV^='1' & SYSSPLV^='2'                                 00211900
*          THEN                                                         00212000
*            ANS('?SYSSTATE (TEST);') COL(MACLMAR);                     00212100
*          ELSE                                                         00212200
*            SYSASCE='P';                    /* SYSSTATE DEFAULT*/      00212300
*      END;                                                             00212400
*/********************************************************************/ 00212500
*/***PG.P01 FULL MACRO SYNTAX CHECKING                               */ 00212600
*/********************************************************************/ 00212700
*/*PG.P02 XMF^='L' & XMFSCK='COMPLETE' ------------------------------*/ 00212800
*  IF XMF^='L'                                                          00212900
*    THEN                                                               00213000
*      DO;                                   /* FULL SYNTAX CHECK */    00213100
*/*PG.P03 EXCESSIVE POSITIONAL ARGUMENTS-----------------------------*/ 00213200
*  IF NUMBER(MACLIST)>0                      /* CHECK POSITIONALS */    00213300
*    THEN                                                               00213400
*      DO;                                                              00213500
*        ZMS=' 8, POSITIONAL ARGUMENT(S),'|| /**PPOSP* MSG*/            00213600
*            ' "'||MACLIST||'"'||                                       00213700
*            ' CANNOT BE USED.'||                                       00213800
*            ' NO POSITIONAL ARGUMENTS'||                               00213900
*            ' ARE ALLOWED.';                                           00214000
*        ANS MSG('?IWMWSYSQ ---> '||ZMS);                               00214100
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00214200
*        ZMACRET=8;                          /* MACRO ERROR */          00214300
*      END;                                                             00214400
*/*PG.KXVAR01 NAME, RQD INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 00214500
*  IF NUMBER(SYSINFO_BLOCK)>1                /* CHECK POSITIONALS */    00214600
*    THEN                                                               00214700
*      DO;                                                              00214800
*        ZMS=' 8, "SYSINFO_BLOCK'||          /**KPOSP* MSG*/            00214900
*            SYSINFO_BLOCK||                                            00215000
*            '" "SYSINFO_BLOCK"'||                                      00215100
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              00215200
*        ANS MSG('?IWMWSYSQ ---> '||ZMS);                               00215300
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00215400
*        ZMACRET=8;                          /* MACRO ERROR */          00215500
*      END;                                                             00215600
*/*PG.KXVAR03 NAME, RQD INPUT, KEYS -XVARIABLE-----------------------*/ 00215700
*  XSYSINFO_BLOCK=SYSINFO_BLOCK(1);          /* SET XVARIABLE */        00215800
*  IF SYSINFO_BLOCK(1)=''                    /* CHECK FOR NULL */       00215900
*   THEN                                                                00216000
*    DO;                                     /* KEY IS REQUIRED */      00216100
*        ZXSYSINFO_BLOCK='';                 /* RESET IN/OUTPUT */      00216200
*        ZMS=' 8,  '||                                                  00216300
*            ' "SYSINFO_BLOCK" KEY AND ITS ARGUMENT'||                  00216400
*            ' ARE REQUIRED.';               /**KRQDP* MSG*/            00216500
*        ANS MSG('?IWMWSYSQ ---> '||ZMS);                               00216600
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00216700
*        ZMACRET=8;                          /* MACRO ERROR */          00216800
*    END;                                                               00216900
*  ELSE                                                                 00217000
*    ZXSYSINFO_BLOCK='INPUT';                /* SET IN/OUTPUT */        00217100
*/*PG.KXVAR01 NAME, RQD INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 00217200
*  IF NUMBER(ANSLEN)>1                       /* CHECK POSITIONALS */    00217300
*    THEN                                                               00217400
*      DO;                                                              00217500
*        ZMS=' 8, "ANSLEN'||                 /**KPOSP* MSG*/            00217600
*            ANSLEN||                                                   00217700
*            '" "ANSLEN"'||                                             00217800
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              00217900
*        ANS MSG('?IWMWSYSQ ---> '||ZMS);                               00218000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00218100
*        ZMACRET=8;                          /* MACRO ERROR */          00218200
*      END;                                                             00218300
*/*PG.KXVAR03 NAME, RQD INPUT, KEYS -XVARIABLE-----------------------*/ 00218400
*  XANSLEN=ANSLEN(1);                        /* SET XVARIABLE */        00218500
*  IF ANSLEN(1)=''                           /* CHECK FOR NULL */       00218600
*   THEN                                                                00218700
*    DO;                                     /* KEY IS REQUIRED */      00218800
*        ZXANSLEN='';                        /* RESET IN/OUTPUT */      00218900
*        ZMS=' 8,  '||                                                  00219000
*            ' "ANSLEN" KEY AND ITS ARGUMENT'||                         00219100
*            ' ARE REQUIRED.';               /**KRQDP* MSG*/            00219200
*        ANS MSG('?IWMWSYSQ ---> '||ZMS);                               00219300
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00219400
*        ZMACRET=8;                          /* MACRO ERROR */          00219500
*    END;                                                               00219600
*  ELSE                                                                 00219700
*    ZXANSLEN='INPUT';                       /* SET IN/OUTPUT */        00219800
*/*PG.KXVAR01 NAME, RQD OUTPUT, KEYS -EXCESSIVE ARGUMENTS------------*/ 00219900
*  IF NUMBER(QUERYLEN)>1                     /* CHECK POSITIONALS */    00220000
*    THEN                                                               00220100
*      DO;                                                              00220200
*        ZMS=' 8, "QUERYLEN'||               /**KPOSP* MSG*/            00220300
*            QUERYLEN||                                                 00220400
*            '" "QUERYLEN"'||                                           00220500
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              00220600
*        ANS MSG('?IWMWSYSQ ---> '||ZMS);                               00220700
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00220800
*        ZMACRET=8;                          /* MACRO ERROR */          00220900
*      END;                                                             00221000
*/*PG.KXVAR03 NAME, RQD OUTPUT, KEYS -XVARIABLE----------------------*/ 00221100
*  XQUERYLEN=QUERYLEN(1);                    /* SET XVARIABLE */        00221200
*  IF QUERYLEN(1)=''                         /* CHECK FOR NULL */       00221300
*   THEN                                                                00221400
*    DO;                                     /* KEY IS REQUIRED */      00221500
*        ZXQUERYLEN='';                      /* RESET IN/OUTPUT */      00221600
*        ZMS=' 8,  '||                                                  00221700
*            ' "QUERYLEN" KEY AND ITS ARGUMENT'||                       00221800
*            ' ARE REQUIRED.';               /**KRQDP* MSG*/            00221900
*        ANS MSG('?IWMWSYSQ ---> '||ZMS);                               00222000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00222100
*        ZMACRET=8;                          /* MACRO ERROR */          00222200
*    END;                                                               00222300
*  ELSE                                                                 00222400
*    ZXQUERYLEN='OUTPUT';                    /* SET IN/OUTPUT */        00222500
*/*PG.KXVAR01 NAME, OPT OUTPUT, KEYS -EXCESSIVE ARGUMENTS------------*/ 00222600
*  IF RETCODE='RETCODE' | RETCODE='()'       /*CHECK ENTRY*/            00222700
*    THEN                                                               00222800
*      DO;                                                              00222900
*        ZMS=' 8, THE "RETCODE" KEY'||       /**KOPTP* MSG*/            00223000
*            ' MUST CONTAIN ONE'||                                      00223100
*            ' (OR MORE) ARGUMENT(S).';                                 00223200
*        ANS MSG('?IWMWSYSQ ---> '||ZMS);                               00223300
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00223400
*        ZMACRET=8;                          /* MACRO ERROR */          00223500
*      END;                                                             00223600
*  IF NUMBER(RETCODE)>1                      /* CHECK POSITIONALS */    00223700
*    THEN                                                               00223800
*      DO;                                                              00223900
*        ZMS=' 8, "RETCODE'||                /**KPOSP* MSG*/            00224000
*            RETCODE||                                                  00224100
*            '" "RETCODE"'||                                            00224200
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              00224300
*        ANS MSG('?IWMWSYSQ ---> '||ZMS);                               00224400
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00224500
*        ZMACRET=8;                          /* MACRO ERROR */          00224600
*      END;                                                             00224700
*/*PG.KXVAR15 NAME, OPT OUTPUT, KEYS -XVARIABLE----------------------*/ 00224800
*  IF RETCODE(1)^=''                         /* CHECK FOR NULL */       00224900
*    THEN                                                               00225000
*      DO;                                                              00225100
*        XRETCODE=RETCODE(1);                /* SET XVARIABLE */        00225200
*        ZXRETCODE='OUTPUT';                 /* SET OUTPUT */           00225300
*      END;                                                             00225400
*  ELSE                                                                 00225500
*    IF ZXRETCODE^=''                                                   00225600
*      THEN                                                             00225700
*        ZXRETCODE='';                       /* RESET OUTPUT */         00225800
*/*PG.KXVAR01 NAME, OPT OUTPUT, KEYS -EXCESSIVE ARGUMENTS------------*/ 00225900
*  IF RSNCODE='RSNCODE' | RSNCODE='()'       /*CHECK ENTRY*/            00226000
*    THEN                                                               00226100
*      DO;                                                              00226200
*        ZMS=' 8, THE "RSNCODE" KEY'||       /**KOPTP* MSG*/            00226300
*            ' MUST CONTAIN ONE'||                                      00226400
*            ' (OR MORE) ARGUMENT(S).';                                 00226500
*        ANS MSG('?IWMWSYSQ ---> '||ZMS);                               00226600
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00226700
*        ZMACRET=8;                          /* MACRO ERROR */          00226800
*      END;                                                             00226900
*  IF NUMBER(RSNCODE)>1                      /* CHECK POSITIONALS */    00227000
*    THEN                                                               00227100
*      DO;                                                              00227200
*        ZMS=' 8, "RSNCODE'||                /**KPOSP* MSG*/            00227300
*            RSNCODE||                                                  00227400
*            '" "RSNCODE"'||                                            00227500
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              00227600
*        ANS MSG('?IWMWSYSQ ---> '||ZMS);                               00227700
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00227800
*        ZMACRET=8;                          /* MACRO ERROR */          00227900
*      END;                                                             00228000
*/*PG.KXVAR15 NAME, OPT OUTPUT, KEYS -XVARIABLE----------------------*/ 00228100
*  IF RSNCODE(1)^=''                         /* CHECK FOR NULL */       00228200
*    THEN                                                               00228300
*      DO;                                                              00228400
*        XRSNCODE=RSNCODE(1);                /* SET XVARIABLE */        00228500
*        ZXRSNCODE='OUTPUT';                 /* SET OUTPUT */           00228600
*      END;                                                             00228700
*  ELSE                                                                 00228800
*    IF ZXRSNCODE^=''                                                   00228900
*      THEN                                                             00229000
*        ZXRSNCODE='';                       /* RESET OUTPUT */         00229100
*/*PG.P04 XMF^='L' & XMFSCK='COMPLETE' ------------------------------*/ 00229200
*      END;                                  /* END COMPLETE CHECKING*/ 00229300
*/********************************************************************/ 00229400
*/***PE.MR01 GENERATE CODE IF ZMACRET=0                              */ 00229500
*/********************************************************************/ 00229600
*  IF ZMACRET = 0                                                       00229700
*    THEN                                                               00229800
*      DO;                                                              00229900
*/********************************************************************/ 00230000
*/***PE.PR01 PRINT CONTROLS, DEFAULT IS YES                          */ 00230100
*/********************************************************************/ 00230200
*  ANS(MACCONC||'LIST PUSH NOECHO;') NORESCAN COL(MACLMAR);             00230300
*  IF ZPRINT='NO'                            /* PRINT IS OFF */         00230400
*    THEN                                                               00230500
*      ANS(MACCONC||'LIST OFF NOECHO;') NORESCAN COL(MACLMAR);          00230600
*    ELSE                                                               00230700
*      ANS(MACCONC||'LIST ON NOECHO;')  NORESCAN COL(MACLMAR);          00230800
*/********************************************************************/ 00230900
*/*PE.DO02 OUTER MACRO DO STATEMENT----------------------------------*/ 00231000
*  IF XMF^='L'                                                          00231100
*    THEN                                                               00231200
*      ANS('DO; /* IWMWSYSQ-PLISTVER */')                               00231300
*          NORESCAN COL(MACLMAR);                                       00231400
*/*PL.LL01 ?IWMWSYSQ MF=L PARAMETER LIST-----------------------------*/ 00231500
*  IF XMF='L'                                                           00231600
*    THEN                                                               00231700
*      DO;                                                              00231800
*        ANS('DCL 1 '||XMFCTRL||' '||XMFATTR||', '||                    00231900
*            '/* ?IWMWSYSQ PARM LIST*/')                                00232000
*            NORESCAN COL(MACLMAR);                                     00232100
*/*PL.LL13  XACRO CHAR(4) CONSTANT-----------------------------------*/ 00232200
*        ANS('2 '||XMFCTRL||                                            00232300
*            '_XACRO CHAR(4), '||                                       00232400
*            '/* '||ZXACRO||' XACRO */')                                00232500
*            NORESCAN COL(MACLMAR+2);                                   00232600
*/*PL.LL02  XVERSION FIXED(8) INPUT----------------------------------*/ 00232700
*        ANS('2 '||XMFCTRL||                                            00232800
*            '_XVERSION FIXED(8), '||                                   00232900
*            '/* INPUT XVERSION*/')                                     00233000
*            NORESCAN COL(MACLMAR+2);                                   00233100
*/*PL.LL13  XRSV001 CHAR(1) RESERVED---------------------------------*/ 00233200
*        ANS('2 '||XMFCTRL||                                            00233300
*            '_XRSV001 CHAR(1), '||                                     00233400
*            '/* RESERVED */')                                          00233500
*            NORESCAN COL(MACLMAR+2);                                   00233600
*/*PL.LL02  XPLISTLEN FIXED(16) BDY(BYTE) INPUT----------------------*/ 00233700
*        ANS('2 '||XMFCTRL||                                            00233800
*            '_XPLISTLEN FIXED(16) BDY(BYTE), '||                       00233900
*            '/* INPUT XPLISTLEN*/')                                    00234000
*            NORESCAN COL(MACLMAR+2);                                   00234100
*/*PL.LL13  XANSLEN FIXED(31) INPUT----------------------------------*/ 00234200
*        ANS('2 '||XMFCTRL||                                            00234300
*            '_XANSLEN FIXED(31), '||                                   00234400
*            '/* '||ZXANSLEN||' XANSLEN */')                            00234500
*            NORESCAN COL(MACLMAR+2);                                   00234600
*/*PL.LL13  XQUERYLEN FIXED(31) OUTPUT-------------------------------*/ 00234700
*        ANS('2 '||XMFCTRL||                                            00234800
*            '_XQUERYLEN FIXED(31), '||                                 00234900
*            '/* '||ZXQUERYLEN||' XQUERYLEN */')                        00235000
*            NORESCAN COL(MACLMAR+2);                                   00235100
*/*PL.LL13  XRSV002 CHAR(4) RESERVED---------------------------------*/ 00235200
*        ANS('2 '||XMFCTRL||                                            00235300
*            '_XRSV002 CHAR(4), '||                                     00235400
*            '/* RESERVED */')                                          00235500
*            NORESCAN COL(MACLMAR+2);                                   00235600
*/*PL.LL13  XSYSINFO_BLOCK PTR(31) INPUT-----------------------------*/ 00235700
*        ANS('2 '||XMFCTRL||                                            00235800
*            '_XSYSINFO_BLOCK PTR(31), '||                              00235900
*            '/* '||ZXSYSINFO_BLOCK||' XSYSINFO_BLOCK */')              00236000
*            NORESCAN COL(MACLMAR+2);                                   00236100
*/*PL.LL13  XRSV003 CHAR(4) RESERVED---------------------------------*/ 00236200
*        ANS('2 '||XMFCTRL||                                            00236300
*            '_XRSV003 CHAR(4), '||                                     00236400
*            '/* RESERVED */')                                          00236500
*            NORESCAN COL(MACLMAR+2);                                   00236600
*/*PL.LL13  XRSV004 CHAR(4) RESERVED---------------------------------*/ 00236700
*        ANS('2 '||XMFCTRL||                                            00236800
*            '_XRSV004 CHAR(4), '||                                     00236900
*            '/* RESERVED */')                                          00237000
*            NORESCAN COL(MACLMAR+2);                                   00237100
*/*PL.LL18 ----------------------------------------------------------*/ 00237200
*        ANS('2 * CHAR(0);')                                            00237300
*            NORESCAN COL(MACLMAR+2);                                   00237400
*/*PL.LL17 END OF MF=L PARAMETER LIST--------------------------------*/ 00237500
*      END;                                                             00237600
*/*PL.L01 MACRO WORK VARIABLES---------------------------------------*/ 00237700
*  DCL ZPRMLINE CHAR;          /* ZPRM ARRAY ENTRY ACCUMULATOR      */  00237800
*  DEACT ZPRMLINE;                                                      00237900
*  DCL ZNDX CHAR;              /* UNIQUE LIST STRUCTURE NAME        */  00238000
*  DEACT ZNDX;                                                          00238100
*  ZNDX=MACINDEX(1:4);         /* MACINDEX LAST THREE DIGITS        */  00238200
*  DCL XVERSION CHAR;                                                   00238300
*  DEACT XVERSION;                                                      00238400
*/*PL.L02 ?IWMWSYSQ PARAMETER LIST-----------------------------------*/ 00238500
*  IF XMF^='L'                                                          00238600
*    THEN                                                               00238700
*      DO;                                                              00238800
*/*PL.L03 ?IWMWSYSQ PARAMETER LIST-----------------------------------*/ 00238900
*        IF XMF='S'                                                     00239000
*          THEN                                                         00239100
*            XMFCTRL='#ZPLIST';                                         00239200
*/*PL.L04 ?IWMWSYSQ PARAMETER LIST-----------------------------------*/ 00239300
*        ZPRMLINE='DCL 1 #Z'||ZNDX||' DEF('||XMFCTRL||'),'||            00239400
*                 ' /* ?IWMWSYSQ PARM LIST*/';                          00239500
*/*PL.L08  XACRO CHAR(4) CONSTANT------------------------------------*/ 00239600
*        ZPRMLINE=ZPRMLINE||' 2 #Z'||ZNDX||                             00239700
*                 '_XACRO CHAR(4), '||                                  00239800
*                 '/* '||ZXACRO||' XACRO */';                           00239900
*/*PL.L05  XVERSION FIXED(8) INPUT-----------------------------------*/ 00240000
*        ZPRMLINE=ZPRMLINE||' 2 #Z'||ZNDX||                             00240100
*                 '_XVERSION FIXED(8), '||                              00240200
*                 '/* INPUT XVERSION*/';                                00240300
*/*PL.L08  XRSV001 CHAR(1) RESERVED----------------------------------*/ 00240400
*        ZPRMLINE=ZPRMLINE||' 2 #Z'||ZNDX||                             00240500
*                 '_XRSV001 CHAR(1), '||                                00240600
*                 '/* RESERVED */';                                     00240700
*/*PL.L05  XPLISTLEN FIXED(16) BDY(BYTE) INPUT-----------------------*/ 00240800
*        ZPRMLINE=ZPRMLINE||' 2 #Z'||ZNDX||                             00240900
*                 '_XPLISTLEN FIXED(16) BDY(BYTE), '||                  00241000
*                 '/* INPUT XPLISTLEN*/';                               00241100
*/*PL.L08  XANSLEN FIXED(31) INPUT-----------------------------------*/ 00241200
*        ZPRMLINE=ZPRMLINE||' 2 #Z'||ZNDX||                             00241300
*                 '_XANSLEN FIXED(31), '||                              00241400
*                 '/* '||ZXANSLEN||' XANSLEN */';                       00241500
*/*PL.L08  XQUERYLEN FIXED(31) OUTPUT--------------------------------*/ 00241600
*        ZPRMLINE=ZPRMLINE||' 2 #Z'||ZNDX||                             00241700
*                 '_XQUERYLEN FIXED(31), '||                            00241800
*                 '/* '||ZXQUERYLEN||' XQUERYLEN */';                   00241900
*/*PL.L08  XRSV002 CHAR(4) RESERVED----------------------------------*/ 00242000
*        ZPRMLINE=ZPRMLINE||' 2 #Z'||ZNDX||                             00242100
*                 '_XRSV002 CHAR(4), '||                                00242200
*                 '/* RESERVED */';                                     00242300
*/*PL.L08  XSYSINFO_BLOCK PTR(31) INPUT------------------------------*/ 00242400
*        ZPRMLINE=ZPRMLINE||' 2 #Z'||ZNDX||                             00242500
*                 '_XSYSINFO_BLOCK PTR(31), '||                         00242600
*                 '/* '||ZXSYSINFO_BLOCK||' XSYSINFO_BLOCK */';         00242700
*/*PL.L08  XRSV003 CHAR(4) RESERVED----------------------------------*/ 00242800
*        ZPRMLINE=ZPRMLINE||' 2 #Z'||ZNDX||                             00242900
*                 '_XRSV003 CHAR(4), '||                                00243000
*                 '/* RESERVED */';                                     00243100
*/*PL.L08  XRSV004 CHAR(4) RESERVED----------------------------------*/ 00243200
*        ZPRMLINE=ZPRMLINE||' 2 #Z'||ZNDX||                             00243300
*                 '_XRSV004 CHAR(4), '||                                00243400
*                 '/* RESERVED */';                                     00243500
*/*PL.L11 CONSTANT TO ENSURE THAT LIST FORM IS LONG ENOUGH ----------*/ 00243600
*        ZPRMNUM=ZPRMNUM+1;                                             00243700
*        ZPRM(ZPRMNUM)=ZPRMLINE||' 2 * CHAR(0);';                       00243800
*        IF XPLISTVER^=2                                                00243900
*           & XMF^='S'                                                  00244000
*          THEN                                                         00244100
*            DO;                                                        00244200
*              ZPRMNUM=ZPRMNUM+1;                                       00244300
*              ZPRM(ZPRMNUM)=                                           00244400
*               'DCL #Z'||ZNDX||'_LENCHECK FIXED(32) CONSTANT('||       00244500
*               'LENGTH('||XMFCTRL||')-LENGTH(#Z'||ZNDX||'));'||        00244600
*               '/* CONSTANT TO ENSURE THAT THE LIST FORM'||            00244700
*               ' IS LONG ENOUGH */';                                   00244800
*            END;                                                       00244900
*/*PL.L12 PARAMETER LIST SIZE----------------------------------------*/ 00245000
*        ZPLLEN=32;                                                     00245100
*        IF ZPRMMAX<ZPLLEN                                              00245200
*           & XMF^='E'                                                  00245300
*          THEN                                                         00245400
*            ZPRMMAX=ZPLLEN;                                            00245500
*/*PL.L13 -----------------------------------------------------------*/ 00245600
*      END;                                                             00245700
*/*PI.L01 XMF^='L' & XMFSCK='COMPLETE' ------------------------------*/ 00245800
*  IF XMF^='L'                                                          00245900
*    THEN                                                               00246000
*      DO;                                                              00246100
*/*PI.L03 CLEAR PARAMETER LIST --------------------------------------*/ 00246200
*            ANS('#Z'||ZNDX||'=''''B;'||                                00246300
*                '/* CLEAR PARAMETER AREA */')                          00246400
*                NORESCAN COL(MACLMAR);                                 00246500
*/*PI.L28 XACRO  CHAR(4)---------------------------------------------*/ 00246600
*        ANS('#Z'||ZNDX||'_XACRO=''SCQP'';'||                           00246700
*            '/* XACRO CHAR(4) CONSTANT */')                            00246800
*            NORESCAN COL(MACLMAR);                                     00246900
*/*PI.L05B XVERSION FIXED(8)-----------------------------------------*/ 00247000
*        IF XPLISTVER^=0                                                00247100
*          THEN                                                         00247200
*            ANS('#Z'||ZNDX||'_XVERSION='||CHAR(XPLISTVER)||'; '||      00247300
*                '/* XVERSION FIXED(8) */')                             00247400
*                NORESCAN COL(MACLMAR);                                 00247500
*/*PI.L05C XPLISTLEN FIXED(16)---------------------------------------*/ 00247600
*        ANS('#Z'||ZNDX||'_XPLISTLEN=LENGTH(#Z'||ZNDX||');'||           00247700
*            '/* XPLISTLEN FIXED(16) */')                               00247800
*            NORESCAN COL(MACLMAR);                                     00247900
*/*PI.L17 XANSLEN FIXED(31)------------------------------------------*/ 00248000
*        IF ZXANSLEN='INPUT' |                                          00248100
*           ZXANSLEN='INOUT'                                            00248200
*          THEN                                                         00248300
*            ANS('#Z'||ZNDX||'_XANSLEN='||                              00248400
*                XANSLEN||';'||                                         00248500
*                '/* XANSLEN FIXED(31) */')                             00248600
*                NORESCAN COL(MACLMAR);                                 00248700
*/*PI.L17 XSYSINFO_BLOCK PTR(31)-------------------------------------*/ 00248800
*        IF ZXSYSINFO_BLOCK='INPUT' |                                   00248900
*           ZXSYSINFO_BLOCK='INOUT'                                     00249000
*          THEN                                                         00249100
*            ANS('#Z'||ZNDX||'_XSYSINFO_BLOCK='||                       00249200
*                XSYSINFO_BLOCK||';'||                                  00249300
*                '/* XSYSINFO_BLOCK PTR(31) */')                        00249400
*                NORESCAN COL(MACLMAR);                                 00249500
*/*PI.L31 INVOKE FUNCTION--------------------------------------------*/ 00249600
*              IF NUMBER(RSNCODE)>0                                     00249700
*                THEN                                                   00249800
*                  ANS('RFY GPR00F RSTD;') NORESCAN COL(MACLMAR);       00249900
*              ANS('RFY GPR01P RSTD;') NORESCAN COL(MACLMAR);           00250000
*              ANS('GPR01P=ADDR(#Z'||ZNDX||');'||                       00250100
*                  '/* PARAMETER LIST */')                              00250200
*                  NORESCAN COL(MACLMAR);                               00250300
*              IF SYSASCE^='P'                                          00250400
*                THEN                                                   00250500
*                  ANS('SAR(GPR01P,ALET(#Z'||ZNDX||'));'||              00250600
*                      '/* PARAMETER LIST AR */')                       00250700
*                      NORESCAN COL(MACLMAR);                           00250800
*/*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*/  00250900
       ANS COL(MACLMAR)                                                 00251000
     ('PC(XM@(96)|27); /* Invoke service routine */');                  00251100
     DCL EHAMAPS CHAR EXTERNAL;                                         00251200
     EHAMAPS= 'XM@,';                                                   00251300
*/*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*/  00251400
*              ANS('RFY GPR01P UNRSTD;') NORESCAN COL(MACLMAR);         00251500
*              IF NUMBER(RETCODE)>0                                     00251600
*                THEN                                                   00251700
*                  ANS('RFY GPR15F RSTD;') NORESCAN COL(MACLMAR);       00251800
*/*PO.L03 XQUERYLEN FIXED(31)----------------------------------------*/ 00251900
*              IF ZXQUERYLEN='OUTPUT' |                                 00252000
*                 ZXQUERYLEN='INOUT'                                    00252100
*                THEN                                                   00252200
*                  ANS(XQUERYLEN||                                      00252300
*                      '=#Z'||ZNDX||'_XQUERYLEN;'||                     00252400
*                      '/* XQUERYLEN FIXED(31) */')                     00252500
*                      NORESCAN COL(MACLMAR);                           00252600
*/*PO.L08 XRETCODE PTR(31) RETURN CODE-------------------------------*/ 00252700
*              IF NUMBER(RETCODE)>0                                     00252800
*                THEN                                                   00252900
*                    ANS(XRETCODE||                                     00253000
*                     '=GPR15F; /* SET RETURN CODE */')                 00253100
*                      NORESCAN COL(MACLMAR);                           00253200
*/*PO.L09 XRSNCODE PTR(31) REASON CODE-------------------------------*/ 00253300
*              IF NUMBER(RSNCODE)>0                                     00253400
*                THEN                                                   00253500
*                    ANS(XRSNCODE||                                     00253600
*                     '=GPR00F; /* SET REASON CODE */')                 00253700
*                      NORESCAN COL(MACLMAR);                           00253800
*/*PO.L10 REMOVE REGISTER RESTRICTIONS-------------------------------*/ 00253900
*              IF NUMBER(RSNCODE)>0                                     00254000
*                THEN                                                   00254100
*              ANS('RFY GPR00F UNRSTD;') NORESCAN COL(MACLMAR);         00254200
*              IF NUMBER(RETCODE)>0                                     00254300
*                THEN                                                   00254400
*              ANS('RFY GPR15F UNRSTD;') NORESCAN COL(MACLMAR);         00254500
*/*PO.L12 END OF PARAMETER LIST PROCESSING---------------------------*/ 00254600
*      END;                                                             00254700
*/*PO.L13 IWMWSYSQ USAGE INDICATOR-----------------------------------*/ 00254800
*  ZIWMWSYSQ='YES';                          /* SET IWMWSYSQ USED */    00254900
*/*PO.L15 END OF EXECUTABLE IWMWSYSQ-PLISTVER MACRO------------------*/ 00255000
*  IF XMF^='L'                                                          00255100
*    THEN                                                               00255200
*      ANS('END; /* IWMWSYSQ-PLISTVER */')                              00255300
*          NORESCAN COL(MACLMAR);                                       00255400
*/*PO.L16 RESTORE PRINT CONTROLS-------------------------------------*/ 00255500
*  ANS(MACCONC||'LIST POP NOECHO;') NORESCAN COL(MACLMAR);              00255600
*/*PO.L17 END OF IWMWSYSQ MACRO--------------------------------------*/ 00255700
*  ANS(MACCONC||'SPACE;') NORESCAN COL(MACLMAR);                        00255800
*  ANS(' ') NORESCAN COL(MACLMAR);                                      00255900
*/*******************************************************************/  00256000
*/*  PO.L18 END OF CODE TO BE BYPASSED WHEN ZMACRET ^= 0            */  00256100
*/*******************************************************************/  00256200
*      END;                                                             00256300
*/*******************************************************************/  00256400
*/*  MVS ONLY     -CHECK IF AMG PARM LISTS ARE PRESENT              */  00256500
*/*               -ROUND MAX AMG PARM LIST TO DOUBLEWORD MULTIPLES  */  00256600
*/*******************************************************************/  00256700
*  IF ZPRMNUM>0                   /* NUMBER OF AMG PARM LIST ENTRIES*/  00256800
*    THEN                                                               00256900
*      DO;                                                              00257000
*        ZPRMMAX=((ZPRMMAX+7)/8)*8; /* ROUND PARM LIST SIZE UP TO       00257100
*                                      DOUBLEWORD MULTIPLES        */   00257200
*/*******************************************************************/  00257300
*/*  MVS -GENERATE PARM LIST DCL TO OVERLAY ?EPILOG'S ILIST AREA    */  00257400
*/*******************************************************************/  00257500
*        IF XMF ^= 'M' & XMF ^= 'E'                                     00257600
*          THEN                                                         00257700
*            DO;                                                        00257800
*              IF INDEX(EHALIST,',AMG,')=0 /* HAS DECLARE BEEN DONE?*/  00257900
*                THEN                                                   00258000
*                  DO;                                                  00258100
*                    ANS('?EPILOG                                       00258200
*                        STRING(''DCL #ZPLIST DEF(ILIST);'');');        00258300
*                    EHALIST=EHALIST||',AMG,';                          00258400
*                  END;                                                 00258500
*            END;                                                       00258600
*/*******************************************************************/  00258700
*/*  MVS  -EXTRACT PARM LISTS FROM AMG GLOBAL MACRO ARRAYS          */  00258800
*/*******************************************************************/  00258900
*        IF XMF ^= 'M' & XMF ^= 'E'                                     00259000
*          THEN                                                         00259100
*            DO;                                                        00259200
*              IF ZPRMMAX>EHAMAXLEN                                     00259300
*                THEN                                                   00259400
*                  EHAMAXLEN=ZPRMMAX; /* SET MAX PARM LIST SIZE     */  00259500
*            END;                                                       00259600
*        DO ZI=1 TO ZPRMNUM; /* EXTRACT AMG PARM LISTS               */ 00259700
*          ANS('?EPILOG STRING('''||ZPRM(ZI)||''');')                   00259800
*              COL(MACLMAR);                                            00259900
*        END;                                                           00260000
*      END;                                                             00260100
*/*-----------------------------------------------------------------*/  00260200
*/*  MVS  -ENSURE THAT GPRS NEEDED BY AMG MACROS WILL BE PROVIDED   */  00260300
*/*        BY ?EPILOG                                               */  00260400
*/*-----------------------------------------------------------------*/  00260500
*        IF INDEX(EHAREGS,'01P')=0                                      00260600
*          THEN                                                         00260700
*            EHAREGS=EHAREGS||'01P'; /* GPR01P                      */  00260800
*        IF INDEX(EHAREGS,'00F')=0                                      00260900
*          & NUMBER(RSNCODE)>0                                          00261000
*          THEN                                                         00261100
*            EHAREGS=EHAREGS||'00F'; /* GPR00F                      */  00261200
*        IF INDEX(EHAREGS,'15F')=0                                      00261300
*          & NUMBER(RETCODE)>0                                          00261400
*          THEN                                                         00261500
*            EHAREGS=EHAREGS||'15F'; /* GPR15F                      */  00261600
*  RETURN CODE(ZMACRET);                                                00261700
*%END IWMWSYSQ;                                                         00261800
