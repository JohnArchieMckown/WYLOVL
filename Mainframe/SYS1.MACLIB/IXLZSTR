*/**** START OF SPECIFICATIONS **************************************** 00000100
*                                                                     * 00000200
*                                                                     * 00000300
*01* MACRO NAME:  IXLZSTR                               -96/11/22-<1> * 00000400
*                                                                     * 00000500
*                                                                     * 00000600
*01* DESCRIPTIVE NAME:  CF Structure Data Access Service              * 00000700
*                                                                     * 00000800
*01* PROPRIETARY STATEMENT:                                           * 00000900
*                                                                     * 00001000
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 00001100
*     THIS MACRO IS "RESTRICTED MATERIALS OF IBM"                     * 00001200
*     5655-068 (C) COPYRIGHT IBM CORP. 1993, 1994                     * 00001300
*                                                                     * 00001400
* STATUS= HBB5520                                                     * 00001500
*                                                                     * 00001600
*                                                                     * 00001700
*                                                                     * 00001800
*01* FUNCTION:                                                        * 00001900
*                                                                     * 00002000
*                                                                     * 00002100
*      NOTE - This macro has a CDPI classification of GUPI.           * 00002200
*                                                                     * 00002300
*      The IXLZSTR macro allows a user to request Coupling Facility   * 00002400
*      structure data from a dump containing that information.  This  * 00002500
*      macro will build a parameter list, call the access service,    * 00002600
*      and return the data requested in an answer area that is        * 00002700
*      supplied by the invoker of this macro.  This macro can only be * 00002800
*      used in an IPCS environment to retrieve Coupling Facility      * 00002900
*      Structure data from the dump dataset.                          * 00003000
*                                                                     * 00003100
*      The TYPE parameter on the IXLZSTR macro determines what type   * 00003200
*      of data will be returned to the invoker of this macro.         * 00003300
*                                                                     * 00003400
*                                                                     * 00003500
*      o   TYPE(STRUCTURE) returns structure information.             * 00003600
*                                                                     * 00003700
*      o   TYPE(CLASS) returns class information for a requested      * 00003800
*          cache structure.                                           * 00003900
*                                                                     * 00004000
*      o   TYPE(LISTNUM) returns list number information for a        * 00004100
*          requested list structure.                                  * 00004200
*                                                                     * 00004300
*      o   TYPE(LOCKENTRIES) returns lock table information for a     * 00004400
*          requested list structure.                                  * 00004500
*                                                                     * 00004600
*      o   TYPE(USERCNTLS) returns user control information for a     * 00004700
*          requested structure.                                       * 00004800
*                                                                     * 00004900
*      o   TYPE(ENTRY) returns entry information for a requested      * 00005000
*          entry in a requested structure.                            * 00005100
*                                                                     * 00005200
*      o   TYPE(EMCONTROLS) returns event monitor control information * 00005300
*          for a requested list structure.                            * 00005400
*                                                                     * 00005500
*      o   TYPE(EVENTQS) returns event queue control information for  * 00005600
*          a requested list structure.                                * 00005700
*                                                                     * 00005800
*                                                                     * 00005900
*                                                                     * 00006000
*      The IXLZSTR macro puts the requested information in an answer  * 00006100
*      area that is passed in on the ANSAREA parameter.  The answer   * 00006200
*      area contains a header which describes the requested           * 00006300
*      information in the answer area.  It contains information about * 00006400
*      the number of entries in the answer area, the type of entry in * 00006500
*      the answer area, and information about the requested           * 00006600
*      structure.  The answer area header is mapped by the StrBHeader * 00006700
*      mapping found in the IXLZSTRB macro.  In addition to the       * 00006800
*      answer area header, the answer area contains one or more       * 00006900
*      entries of requested information.                              * 00007000
*                                                                     * 00007100
*      The minimum amount of storage that can be passed to the        * 00007200
*      IXLZSTR macro is 4096 bytes (4K).  If this is not done, a      * 00007300
*      return code of 8 and a reason code of X'10' will be issued on  * 00007400
*      the invocation and the request will fail.  If the ENTRYDATA    * 00007500
*      parameter is used on any of the requests that allow it, the    * 00007600
*      minimum amount of storage that can be passed to the IXLZSTR is * 00007700
*      8192 bytes (8K).  Failure to do this will return the same      * 00007800
*      return code and reason code as stated earlier.                 * 00007900
*                                                                     * 00008000
*      In addition, if the user specifies a TYPE=STRUCTURE            * 00008100
*      STRLEVEL=DETAIL request, the minimum amount of storage that    * 00008200
*      can be passed to the IXLZSTR macro is 8192 bytes (8K).         * 00008300
*      Failure to do this on this request will result in a return     * 00008400
*      code of 8 and a reason code of X'10' to be issued and the      * 00008500
*      request will fail.                                             * 00008600
*                                                                     * 00008700
*      Another problem will exist if the starting range value of any  * 00008800
*      of the range specifications is greater than the ending range   * 00008900
*      value.  If such a case does exist, a return code of 8 and a    * 00009000
*      reason code of X'18' will be issued on this invocation and the * 00009100
*      request will fail.                                             * 00009200
*                                                                     * 00009300
*      The user of this macro must also be sure that the proper       * 00009400
*      structure attributes are used with the proper structure type.  * 00009500
*      For example, a user cannot request to see a range of list      * 00009600
*      numbers in a cache structure.  If a case like this does exist, * 00009700
*      a return code of 8 and a reason code of X'14' will be issued   * 00009800
*      on this invocation and the request will fail.  To figure out   * 00009900
*      what the structure type of a given structure is, invoke the    * 00010000
*      IXLZSTR macro with TYPE(STRUCTURE) and STRLEVEL(SUMMARY).  A   * 00010100
*      list of all of the structures requested to be dumped, and      * 00010200
*      their type, will be returned in the answer area.  All of these * 00010300
*      entries will be mapped by the StrBStrSummary mapping in        * 00010400
*      IXLZSTRB.  Find the structure name in the answer area and then * 00010500
*      check its corresponding type.                                  * 00010600
*                                                                     * 00010700
*      Due to the volume of information that can be retrieved by a    * 00010800
*      single request to this macro, the caller may have to invoke    * 00010900
*      the macro more than once to retrieve all of the information.   * 00011000
*      The RESTOKEN keyword is provided to allow a user to obtain the * 00011100
*      rest of the requested information by using it as input on      * 00011200
*      subsequent IXLZSTR requests.  The RESTOKEN must have an        * 00011300
*      initial value of zero.  If the answer area fills up and there  * 00011400
*      is more data to be retrieved from the dump dataset that is     * 00011500
*      associated with the current request, a return code of 4 and a  * 00011600
*      reason code of 4 will be set to indicate that there is more    * 00011700
*      data to be retrieved.  To retrieve the remainder of the data,  * 00011800
*      the macro must be invoked again, with the same keywords,       * 00011900
*      passing the RESTOKEN as input.  A return code of 4 and a       * 00012000
*      reason code of 4 will continue to be issued by this macro      * 00012100
*      until all of the data associated with the original request has * 00012200
*      been retrieved.  When all of the data has been retrieved,      * 00012300
*      return code of 0 and a reason code of 0 will be set to         * 00012400
*      indicate that the request has completed successfully and the   * 00012500
*      RESTOKEN will be set to binary zeroes.                         * 00012600
*                                                                     * 00012700
*      NOTE - Since the IXLZSTRB mapping macro provides mappings of   * 00012800
*      the ANSAREA and constants to interpret the return codes and    * 00012900
*      reason codes issued by this service, it is recommended that    * 00013000
*      the IXLZSTRB macro be included in the program that uses this   * 00013100
*      service or the ANSAREA.                                        * 00013200
*                                                                     * 00013300
*01* EXTERNAL CLASSIFICATION:  GUPI                                   * 00013400
*                                                                     * 00013500
*01* END OF EXTERNAL CLASSIFICATION:                                  * 00013600
*                                                                     * 00013700
*01* ENVIRONMENT:                                                     * 00013800
*                                                                     * 00013900
*                                                                     * 00014000
*      Dispatchable unit mode: Task mode.                             * 00014100
*                                                                     * 00014200
*      Minimum authorization: Problem state, Key 8                    * 00014300
*                                                                     * 00014400
*      AMODE:            31-bit.                                      * 00014500
*                                                                     * 00014600
*      ASC mode:         Primary.                                     * 00014700
*                                                                     * 00014800
*      Serialization:    Enabled.                                     * 00014900
*                                                                     * 00015000
*      Restrictions:                                                  * 00015100
*                                                                     * 00015200
*                                                                     * 00015300
*                        1.  This macro can only be invoked in an     * 00015400
*                            IPCS environment.                        * 00015500
*                                                                     * 00015600
*                        2.  The BLSABDPL mapping must be included in * 00015700
*                            the program that invokes this macro.     * 00015800
*                                                                     * 00015900
*                                                                     * 00016000
*                                                                     * 00016100
*                                                                     * 00016200
*                                                                     * 00016300
*01* INPUT REGISTERS:  GR0-GR1     Reserved                           * 00016400
*                      GR2-GR13    Undefined                          * 00016500
*                      GR14-GR15   Reserved                           * 00016600
*                                                                     * 00016700
*                      AR0-AR1     Reserved                           * 00016800
*                      AR2-AR13    Undefined                          * 00016900
*                      AR14-AR15   Reserved                           * 00017000
*                                                                     * 00017100
*01* OUTPUT REGISTERS: GR0         Reason code                        * 00017200
*                      GR1         Unpredictable                      * 00017300
*                      GR2-GR13    Unchanged                          * 00017400
*                      GR14        Unpredictable                      * 00017500
*                      GR15        Return code                        * 00017600
*                                                                     * 00017700
*                      AR0-AR1     Unpredictable                      * 00017800
*                      AR2-AR13    Unchanged                          * 00017900
*                      AR14-AR15   Unpredictable                      * 00018000
*                                                                     * 00018100
*01* SYNTAX:                                                          * 00018200
*                                                                     * 00018300
*[xlabel]  IXLZSTR     ANSAREA=xansarea                               * 00018400
*                     ,ANSLEN=xanslen                                 * 00018500
*                     ,RESTOKEN=xrestoken                             * 00018600
*                     ,ABDPLPTR=xabdplptr                             * 00018700
*                    ,TYPE=STRUCTURE                                 * 00018800
*                   |    ,STRLEVEL=SUMMARY                           * 00018900
*                   |    ,STRLEVEL=DETAIL                            * 00019000
*                   |         ,STRNAME=xstrname                       * 00019100
*                   |         ,STRDUMPID=xstrdumpid                   * 00019200
*                    ,TYPE=CLASS                                     * 00019300
*                   |     ,STRNAME=xstrname                           * 00019400
*                   |     ,STRDUMPID=xstrdumpid                       * 00019500
*                   |     ,CLASSTYPE=CASTOUT|STORAGE                * 00019600
*                   |    ,CLASSLEVEL=SUMMARY                         * 00019700
*                   |   |    [,STARTVAL=xstartval|ALL               * 00019800
*                   |   |        [,ENDVAL=xendval|STARTVAL]]        * 00019900
*                   |    ,CLASSLEVEL=DETAIL                          * 00020000
*                   |   |    [,STARTVAL=xstartval|ALL               * 00020100
*                   |   |        [,ENDVAL=xendval|STARTVAL]]        * 00020200
*                   |    ,CLASSLEVEL=ENTRY                           * 00020300
*                   |         ,CLASSVAL=xclassval                     * 00020400
*                   |        [,STARTPOS=xstartpos|ALL               * 00020500
*                   |            [,ENDPOS=xendpos|STARTPOS]]        * 00020600
*                   |        [,ORDER=HEAD|TAIL]                     * 00020700
*                   |        [,ADJUNCT=NO|YES]                      * 00020800
*                   |        [,ENTRYDATA=NO|YES]                    * 00020900
*                    ,TYPE=LISTNUM                                   * 00021000
*                   |     ,STRNAME=xstrname                           * 00021100
*                   |     ,STRDUMPID=xstrdumpid                       * 00021200
*                   |    ,LISTNUMLEVEL=SUMMARY                       * 00021300
*                   |   |    [,STARTVAL=xstartval|ALL               * 00021400
*                   |   |        [,ENDVAL=xendval|STARTVAL]]        * 00021500
*                   |    ,LISTNUMLEVEL=DETAIL                        * 00021600
*                   |   |    [,STARTVAL=xstartval|ALL               * 00021700
*                   |   |        [,ENDVAL=xendval|STARTVAL]]        * 00021800
*                   |    ,LISTNUMLEVEL=ENTRY                         * 00021900
*                   |         ,LISTNUMVAL=xlistnumval                 * 00022000
*                   |        [,ENTRYKEY=xentrykey|NO_KEY]           * 00022100
*                   |        [,STARTPOS=xstartpos|ALL               * 00022200
*                   |            [,ENDPOS=xendpos|STARTPOS]]        * 00022300
*                   |        [,ORDER=HEAD|TAIL]                     * 00022400
*                   |        [,ADJUNCT=NO|YES]                      * 00022500
*                   |        [,ENTRYDATA=NO|YES]                    * 00022600
*                    ,TYPE=LOCKENTRIES                               * 00022700
*                   |     ,STRNAME=xstrname                           * 00022800
*                   |     ,STRDUMPID=xstrdumpid                       * 00022900
*                   |    [,STARTVAL=xstartval|ALL                   * 00023000
*                   |        [,ENDVAL=xendval|STARTVAL]]            * 00023100
*                    ,TYPE=USERCNTLS                                 * 00023200
*                   |     ,STRNAME=xstrname                           * 00023300
*                   |     ,STRDUMPID=xstrdumpid                       * 00023400
*                   |    [,STARTVAL=xstartval|ALL                   * 00023500
*                   |        [,ENDVAL=xendval|STARTVAL]]            * 00023600
*                    ,TYPE=ENTRY                                     * 00023700
*                   |     ,STRNAME=xstrname                           * 00023800
*                   |     ,STRDUMPID=xstrdumpid                       * 00023900
*                   |    ,ENTRYNAME=xentryname                       * 00024000
*                   |    ,ENTRYID=xentryid                           * 00024100
*                   |    [,ADJUNCT=NO|YES]                          * 00024200
*                   |    [,ENTRYDATA=NO|YES]                        * 00024300
*                    ,TYPE=EMCONTROLS                                * 00024400
*                   |     ,STRNAME=xstrname                           * 00024500
*                   |     ,STRDUMPID=xstrdumpid                       * 00024600
*                   |    ,EMCLEVEL=SUMMARY                           * 00024700
*                   |   |    [,STARTVAL=xstartval|ALL               * 00024800
*                   |   |        [,ENDVAL=xendval|STARTVAL]]        * 00024900
*                   |    ,EMCLEVEL=EMC                               * 00025000
*                   |         ,LISTNUMVAL=xlistnumval                 * 00025100
*                   |        [,ENTRYKEY=xentrykey|NO_KEY]           * 00025200
*                    ,TYPE=EVENTQS                                   * 00025300
*                         ,STRNAME=xstrname                           * 00025400
*                         ,STRDUMPID=xstrdumpid                       * 00025500
*                        ,EQLEVEL=DETAIL                             * 00025600
*                       |    [,STARTVAL=xstartval|ALL               * 00025700
*                       |        [,ENDVAL=xendval|STARTVAL]]        * 00025800
*                        ,EQLEVEL=EMC                                * 00025900
*                             ,CONIDVAL=xconidval                     * 00026000
*                    [,RETCODE=xretcode]                              * 00026100
*                    [,RSNCODE=xrsncode]                              * 00026200
*                    [,PLISTVER=xplistver|IMPLIED_VERSION]          * 00026300
*                   [,MF=S]                                          * 00026400
*                   [,MF=(L,xmfctrl,xmfattr|0D)]                   * 00026500
*                   [,MF=(E,xmfctrl,COMPLETE)]                     * 00026600
*                                                                     * 00026700
*                                                                     * 00026800
*      Where:                                                         * 00026900
*                                                                     * 00027000
*                                                                     * 00027100
*      [xlabel]                                                       * 00027200
*          is an optional symbol, starting in column 1, that is the   * 00027300
*          name on the IXLZSTR macro invocation.  The name must       * 00027400
*          conform to the rules for an ordinary assembler language    * 00027500
*          symbol.                                                    * 00027600
*          DEFAULT: No name.                                          * 00027700
*                                                                     * 00027800
*                                                                     * 00027900
*                                                                     * 00028000
*                                                                     * 00028100
*      ANSAREA=xansarea                                               * 00028200
*          is the name (RS-type), or address in register (2)-(12), of * 00028300
*          a required character input variable specifying an area to  * 00028400
*          contain the data being returned by IXLZSTR.                * 00028500
*                                                                     * 00028600
*                                                                     * 00028700
*                                                                     * 00028800
*                                                                     * 00028900
*      ANSLEN=xanslen                                                 * 00029000
*          is the name (RS-type), or address in register (2)-(12), of * 00029100
*          a required fullword input variable which contains the      * 00029200
*          length of the area provided to contain the data being      * 00029300
*          returned by IXLZSTR.                                       * 00029400
*                                                                     * 00029500
*                                                                     * 00029600
*                                                                     * 00029700
*                                                                     * 00029800
*      RESTOKEN=xrestoken                                             * 00029900
*          is the name (RS-type), or address in register (2)-(12), of * 00030000
*          a required 64 character input/output that must be passed   * 00030100
*          on all IXLZSTR requests.  This is used as a mechanism that * 00030200
*          allows a request to be continued across calls if all of    * 00030300
*          the requested data could not be returned in the ANSAREA.   * 00030400
*          On every request, the IXLZSTR service updates the RESTOKEN * 00030500
*          with information required on subsequent IXLZSTR requests   * 00030600
*          to complete the initial request.  On an initial request,   * 00030700
*          the RESTOKEN must be initialized to binary zeroes.  The    * 00030800
*          contents of the RESTOKEN must NOT be modified by the user  * 00030900
*          who is requesting the remaining data.  Also, the RESTOKEN  * 00031000
*          must be used on an invocation with the same macro keywords * 00031100
*          as the macro keywords on a previous invocation where the   * 00031200
*          RESTOKEN was obtained.  See the examples section for       * 00031300
*          examples on usage.                                         * 00031400
*                                                                     * 00031500
*                                                                     * 00031600
*                                                                     * 00031700
*                                                                     * 00031800
*      ABDPLPTR=xabdplptr                                             * 00031900
*          is the name (RS-type), or address in register (2)-(12), of * 00032000
*          a required 4 byte input that contains the address of the   * 00032100
*          ABDUMP parameter list (ABDPL) which is currently in use.   * 00032200
*          The address of the ABDPL is passed on to IXLZSTR service   * 00032300
*          in the input parameter list.                               * 00032400
*                                                                     * 00032500
*                                                                     * 00032600
*                                                                     * 00032700
*                                                                     * 00032800
*      TYPE=STRUCTURE|CLASS|LISTNUM|LOCKENTRIES|USERCNTLS|ENTRY|EMCO * 00032900
*          NTROLS|EVENTQS                                            * 00033000
*          is a required keyword input that specifies the type of     * 00033100
*          information to by retrieved by the IXLZSTR macro.          * 00033200
*                                                                     * 00033300
*                                                                     * 00033400
*          TYPE=STRUCTURE                                             * 00033500
*              This keyword tells the IXLZSTR macro to retrieve       * 00033600
*              structure information from the dump data set.          * 00033700
*                                                                     * 00033800
*                                                                     * 00033900
*              STRLEVEL=SUMMARY|DETAIL                              * 00034000
*                  is a required keyword input that specifies the     * 00034100
*                  level of the STRUCTURE type request.               * 00034200
*                                                                     * 00034300
*                                                                     * 00034400
*                  STRLEVEL=SUMMARY                                   * 00034500
*                      Returns a list of all of the structures that   * 00034600
*                      were in the dump.  The entries in the answer   * 00034700
*                      area will be mapped by the StrBStrSummary      * 00034800
*                      mapping which is found in the IXLZSTRB macro.  * 00034900
*                                                                     * 00035000
*                  STRLEVEL=DETAIL                                    * 00035100
*                      Returns detailed information about a requested * 00035200
*                      structure.  The entry in the answer area will  * 00035300
*                      be mapped by the StrBStrDetail mapping which   * 00035400
*                      is found in the IXLZSTRB macro.  In the        * 00035500
*                      StrBStrDetail entry, there will also be a      * 00035600
*                      pointer to the structure controls in the       * 00035700
*                      answer area.  If the structure is a cache      * 00035800
*                      structure, the DCac mapping found in the       * 00035900
*                      IXLYDCAC macro will map the structure          * 00036000
*                      controls.  If the structure is a list          * 00036100
*                      structure, the DLic mapping found in the       * 00036200
*                      IXLYDLIC macro will map the structure          * 00036300
*                      controls.                                      * 00036400
*                                                                     * 00036500
*                                                                     * 00036600
*                      STRNAME=xstrname                               * 00036700
*                          is the name (RS-type), or address in       * 00036800
*                          register (2)-(12), of a required 16        * 00036900
*                          character input which contains the name of * 00037000
*                          the structure for which information is     * 00037100
*                          being requested.                           * 00037200
*                                                                     * 00037300
*                                                                     * 00037400
*                                                                     * 00037500
*                                                                     * 00037600
*                      STRDUMPID=xstrdumpid                           * 00037700
*                          is the name (RS-type), or address in       * 00037800
*                          register (2)-(12), of a required halfword  * 00037900
*                          input which contains the structure dump ID * 00038000
*                          of the structure being requested.  To      * 00038100
*                          obtain the structure dump ID of a          * 00038200
*                          structure, do a TYPE(STRUCTURE)            * 00038300
*                          STRLEVEL(SUMMARY) request and then look    * 00038400
*                          for the structure name and its associated  * 00038500
*                          structure dump ID in the ANSAREA.          * 00038600
*                                                                     * 00038700
*                                                                     * 00038800
*                                                                     * 00038900
*                                                                     * 00039000
*                                                                     * 00039100
*                                                                     * 00039200
*                                                                     * 00039300
*          TYPE=CLASS                                                 * 00039400
*              This keyword tells the IXLZSTR macro to retrieve       * 00039500
*              castout class or storage class information from the    * 00039600
*              dump data set.  This type of request should only be    * 00039700
*              used if the requested structure is a cache structure.  * 00039800
*              If the requested structure is not a cache structure,   * 00039900
*              nothing will be returned in the answer area, and a     * 00040000
*              return code 8 and a reason code X'14' will be issued   * 00040100
*              indicating that the request that was made was invalid. * 00040200
*                                                                     * 00040300
*                                                                     * 00040400
*              STRNAME=xstrname                                       * 00040500
*                  is the name (RS-type), or address in register      * 00040600
*                  (2)-(12), of a required 16 character input which   * 00040700
*                  contains the name of the structure for which       * 00040800
*                  information is being requested.                    * 00040900
*                                                                     * 00041000
*                                                                     * 00041100
*                                                                     * 00041200
*                                                                     * 00041300
*              STRDUMPID=xstrdumpid                                   * 00041400
*                  is the name (RS-type), or address in register      * 00041500
*                  (2)-(12), of a required halfword input which       * 00041600
*                  contains the structure dump ID of the structure    * 00041700
*                  being requested.  To obtain the structure dump ID  * 00041800
*                  of a structure, do a TYPE(STRUCTURE)               * 00041900
*                  STRLEVEL(SUMMARY) request and then look for the    * 00042000
*                  structure name and its associated structure dump   * 00042100
*                  ID in the ANSAREA.                                 * 00042200
*                                                                     * 00042300
*                                                                     * 00042400
*                                                                     * 00042500
*                                                                     * 00042600
*              CLASSTYPE=CASTOUT|STORAGE                            * 00042700
*                  is a required keyword input which indicates what   * 00042800
*                  type of class should be retrieved.                 * 00042900
*                                                                     * 00043000
*                                                                     * 00043100
*                  CLASSTYPE=CASTOUT                                  * 00043200
*                      specifies that the request is for castout      * 00043300
*                      classes.                                       * 00043400
*                                                                     * 00043500
*                  CLASSTYPE=STORAGE                                  * 00043600
*                      specifies that the request is for storage      * 00043700
*                      classes.                                       * 00043800
*                                                                     * 00043900
*                                                                     * 00044000
*                                                                     * 00044100
*                                                                     * 00044200
*                                                                     * 00044300
*                                                                     * 00044400
*              CLASSLEVEL=SUMMARY|DETAIL|ENTRY                      * 00044500
*                  is a required keyword input that specifies the     * 00044600
*                  level of the CLASS type request.                   * 00044700
*                                                                     * 00044800
*                                                                     * 00044900
*                  CLASSLEVEL=SUMMARY                                 * 00045000
*                      Returns information about a requested class, a * 00045100
*                      range of classes, or all classes ( castout or  * 00045200
*                      storage class ) in the dump.  The entries in   * 00045300
*                      the answer area will be mapped by the          * 00045400
*                      StrBSummary mapping which is found in the      * 00045500
*                      IXLZSTRB macro.                                * 00045600
*                                                                     * 00045700
*                                                                     * 00045800
*                      [STARTVAL=xstartval|ALL                      * 00045900
*                          is the name (RS-type), or address in       * 00046000
*                          register (2)-(12), of an optional fullword * 00046100
*                          input that specifies the start of the      * 00046200
*                          requested class range.  If the user of     * 00046300
*                          this macro does not specify this keyword,  * 00046400
*                          all of the classes in the dump will be     * 00046500
*                          returned to the user.                      * 00046600
*                          DEFAULT: ALL                               * 00046700
*                                                                     * 00046800
*                                                                     * 00046900
*                          [ENDVAL=xendval|STARTVAL]]               * 00047000
*                              is the name (RS-type), or address in   * 00047100
*                              register (2)-(12), of an optional      * 00047200
*                              fullword input that specifies the end  * 00047300
*                              of a requested class range.  If the    * 00047400
*                              user of this macro does not specify    * 00047500
*                              this keyword, the ending range value   * 00047600
*                              will be equal to the starting range    * 00047700
*                              value specified on the STARTVAL        * 00047800
*                              keyword.  The STARTVAL keyword is      * 00047900
*                              required if ENDVAL is specified.       * 00048000
*                              DEFAULT: STARTVAL                      * 00048100
*                                                                     * 00048200
*                                                                     * 00048300
*                                                                     * 00048400
*                                                                     * 00048500
*                                                                     * 00048600
*                  CLASSLEVEL=DETAIL                                  * 00048700
*                      Returns detailed information about a requested * 00048800
*                      class, a range of classes or all classes (     * 00048900
*                      castout or storage class ) in the dump.  The   * 00049000
*                      entries in the answer area will be mapped by   * 00049100
*                      the StrBDetail mapping which is found in the   * 00049200
*                      IXLZSTRB macro.  In the StrBDetail entry,      * 00049300
*                      there will also be a pointer to the class      * 00049400
*                      controls in the answer area.  If the user      * 00049500
*                      requested storage class information, the DScc  * 00049600
*                      mapping found in the IXLYDSCC macro will map   * 00049700
*                      the storage class controls.  If the user       * 00049800
*                      requested castout class information, the DCcc  * 00049900
*                      mapping found in the IXLYDCCC macro will map   * 00050000
*                      the castout class controls.                    * 00050100
*                                                                     * 00050200
*                                                                     * 00050300
*                      [STARTVAL=xstartval|ALL                      * 00050400
*                          is the name (RS-type), or address in       * 00050500
*                          register (2)-(12), of an optional fullword * 00050600
*                          input that specifies the start of the      * 00050700
*                          requested class range.  If the user of     * 00050800
*                          this macro does not specify this keyword,  * 00050900
*                          all of the classes in the dump will be     * 00051000
*                          returned to the user.                      * 00051100
*                          DEFAULT: ALL                               * 00051200
*                                                                     * 00051300
*                                                                     * 00051400
*                          [ENDVAL=xendval|STARTVAL]]               * 00051500
*                              is the name (RS-type), or address in   * 00051600
*                              register (2)-(12), of an optional      * 00051700
*                              fullword input that specifies the end  * 00051800
*                              of a requested class range.  If the    * 00051900
*                              user of this macro does not specify    * 00052000
*                              this keyword, the ending range value   * 00052100
*                              will be equal to the starting range    * 00052200
*                              value specified on the STARTVAL        * 00052300
*                              keyword.  The STARTVAL keyword is      * 00052400
*                              required if ENDVAL is specified.       * 00052500
*                              DEFAULT: STARTVAL                      * 00052600
*                                                                     * 00052700
*                                                                     * 00052800
*                                                                     * 00052900
*                                                                     * 00053000
*                                                                     * 00053100
*                  CLASSLEVEL=ENTRY                                   * 00053200
*                      Returns an entry at a requested position, a    * 00053300
*                      group of entries at a requested range of       * 00053400
*                      positions, or the entries at all entry         * 00053500
*                      positions that were dumped in a requested      * 00053600
*                      class.  The entries in the answer area will be * 00053700
*                      mapped by the StrBEntry mapping which is found * 00053800
*                      in the IXLZSTRB macro.  In the StrBEntry       * 00053900
*                      entry, there will be a pointer to the entry    * 00054000
*                      controls in the answer area.  The DDic mapping * 00054100
*                      found in the IXLYDDIB macro will map the entry * 00054200
*                      controls.                                      * 00054300
*                                                                     * 00054400
*                                                                     * 00054500
*                      CLASSVAL=xclassval                             * 00054600
*                          is the name (RS-type), or address in       * 00054700
*                          register (2)-(12), of a required fullword  * 00054800
*                          input that specifies the class for which   * 00054900
*                          entries will be retrieved.                 * 00055000
*                                                                     * 00055100
*                                                                     * 00055200
*                                                                     * 00055300
*                                                                     * 00055400
*                      [STARTPOS=xstartpos|ALL                      * 00055500
*                          is the name (RS-type), or address in       * 00055600
*                          register (2)-(12), of an optional fullword * 00055700
*                          input that specifies the start of the      * 00055800
*                          requested entry position range.  If the    * 00055900
*                          user of this macro does not specify this   * 00056000
*                          keyword, all of the entries in the dump    * 00056100
*                          for the requested class will be returned   * 00056200
*                          to the user.                               * 00056300
*                          DEFAULT: ALL                               * 00056400
*                                                                     * 00056500
*                                                                     * 00056600
*                          [ENDPOS=xendpos|STARTPOS]]               * 00056700
*                              is the name (RS-type), or address in   * 00056800
*                              register (2)-(12), of an optional      * 00056900
*                              fullword input that specifies the end  * 00057000
*                              of a requested entry position range.   * 00057100
*                              If the user of this macro does not     * 00057200
*                              specify this keyword, the ending range * 00057300
*                              position will be equal to the starting * 00057400
*                              range position specified on the        * 00057500
*                              STARTPOS keyword.  The STARTPOS        * 00057600
*                              keyword is required if ENDPOS is       * 00057700
*                              specified.                             * 00057800
*                              DEFAULT: STARTPOS                      * 00057900
*                                                                     * 00058000
*                                                                     * 00058100
*                                                                     * 00058200
*                                                                     * 00058300
*                                                                     * 00058400
*                                                                     * 00058500
*                      [ORDER=HEAD|TAIL]                            * 00058600
*                          is an optional keyword input which         * 00058700
*                          indicates whether entries for the          * 00058800
*                          requested class will be returned in the    * 00058900
*                          head-to-tail order or tail-to-head order.  * 00059000
*                          For a storage class, the head of the queue * 00059100
*                          represents the least recently referenced   * 00059200
*                          entry and the tail represents the most     * 00059300
*                          recently referenced entry.  For a castout  * 00059400
*                          class, the head of the queue represents    * 00059500
*                          the least recently changed entry and the   * 00059600
*                          tail represents the most recently changed  * 00059700
*                          entry.                                     * 00059800
*                          DEFAULT: HEAD                              * 00059900
*                                                                     * 00060000
*                                                                     * 00060100
*                          ORDER=HEAD                                 * 00060200
*                              specifies that the entries returned in * 00060300
*                              the answer area specified will be      * 00060400
*                              returned starting from the head end of * 00060500
*                              the list.                              * 00060600
*                                                                     * 00060700
*                          ORDER=TAIL                                 * 00060800
*                              specifies that the entries returned in * 00060900
*                              the answer area specified will be      * 00061000
*                              returned starting from the tail end of * 00061100
*                              the list.                              * 00061200
*                                                                     * 00061300
*                                                                     * 00061400
*                                                                     * 00061500
*                                                                     * 00061600
*                                                                     * 00061700
*                                                                     * 00061800
*                      [ADJUNCT=NO|YES]                             * 00061900
*                          is an optional keyword input which         * 00062000
*                          indicates whether the adjunct data         * 00062100
*                          associated with the requested entries      * 00062200
*                          should be returned with the entries.  If   * 00062300
*                          the adjunct data is returned with the      * 00062400
*                          entries, the adjunct data for each entry   * 00062500
*                          will be pointed to by a pointer in the     * 00062600
*                          StrBEntry mapping for each entry.  The     * 00062700
*                          length of the adjunct data will also be in * 00062800
*                          the StrBEntry mapping.                     * 00062900
*                          DEFAULT: NO                                * 00063000
*                                                                     * 00063100
*                                                                     * 00063200
*                          ADJUNCT=NO                                 * 00063300
*                              specifies that the adjunct data        * 00063400
*                              associated with the requested entries  * 00063500
*                              should not be returned.                * 00063600
*                                                                     * 00063700
*                          ADJUNCT=YES                                * 00063800
*                              specifies that the adjunct data        * 00063900
*                              associated with the requested entries  * 00064000
*                              should be returned.                    * 00064100
*                                                                     * 00064200
*                                                                     * 00064300
*                                                                     * 00064400
*                                                                     * 00064500
*                                                                     * 00064600
*                                                                     * 00064700
*                      [ENTRYDATA=NO|YES]                           * 00064800
*                          is an optional keyword input which         * 00064900
*                          indicates whether the entry data           * 00065000
*                          associated with the requested entries      * 00065100
*                          should be returned with the entries.  If   * 00065200
*                          the entry data is returned with the        * 00065300
*                          entries, the entry data for each entry     * 00065400
*                          will be pointed to by a pointer in the     * 00065500
*                          StrBEntry mapping for each entry.  The     * 00065600
*                          total length of the entry data will also   * 00065700
*                          be in the StrBEntry mapping.  If the       * 00065800
*                          buffer fills up while retrieving the entry * 00065900
*                          data, the length of the entrydata returned * 00066000
*                          and the length of entry data left to be    * 00066100
*                          returned will be in the StrBEntry.  It is  * 00066200
*                          recommended that a user look at the        * 00066300
*                          StrBEntryEDataLenLeft2Proc in the last     * 00066400
*                          StrBEntry in the ANSAREA prior to invoking * 00066500
*                          the IXLZSTR service again to retrieve the  * 00066600
*                          remainder of the entrydata for the entry.  * 00066700
*                          This variable can be used to allocate a    * 00066800
*                          bigger ANSAREA so that the remainder of    * 00066900
*                          the entrydata for this entry can be        * 00067000
*                          retrieved in one invocation before         * 00067100
*                          starting on the next entry, if one exists. * 00067200
*                          DEFAULT: NO                                * 00067300
*                                                                     * 00067400
*                                                                     * 00067500
*                          ENTRYDATA=NO                               * 00067600
*                              specifies that the entry data          * 00067700
*                              associated with the requested entries  * 00067800
*                              should not be returned.                * 00067900
*                                                                     * 00068000
*                          ENTRYDATA=YES                              * 00068100
*                              specifies that the entry data          * 00068200
*                              associated with the requested entries  * 00068300
*                              should be returned.                    * 00068400
*                                                                     * 00068500
*                                                                     * 00068600
*                                                                     * 00068700
*                                                                     * 00068800
*                                                                     * 00068900
*                                                                     * 00069000
*                                                                     * 00069100
*                                                                     * 00069200
*                                                                     * 00069300
*          TYPE=LISTNUM                                               * 00069400
*              This keyword tells the IXLZSTR macro to retrieve list  * 00069500
*              number information from the dump data set.  This type  * 00069600
*              of request should only be used if the requested        * 00069700
*              structure is a list structure.  If the requested       * 00069800
*              structure is not a list structure, nothing will be     * 00069900
*              returned in the answer area, and a return code 8 and a * 00070000
*              reason code X'14' will be issued indicating that the   * 00070100
*              request that was made was invalid.                     * 00070200
*                                                                     * 00070300
*                                                                     * 00070400
*              STRNAME=xstrname                                       * 00070500
*                  is the name (RS-type), or address in register      * 00070600
*                  (2)-(12), of a required 16 character input which   * 00070700
*                  contains the name of the structure for which       * 00070800
*                  information is being requested.                    * 00070900
*                                                                     * 00071000
*                                                                     * 00071100
*                                                                     * 00071200
*                                                                     * 00071300
*              STRDUMPID=xstrdumpid                                   * 00071400
*                  is the name (RS-type), or address in register      * 00071500
*                  (2)-(12), of a required halfword input which       * 00071600
*                  contains the structure dump ID of the structure    * 00071700
*                  being requested.  To obtain the structure dump ID  * 00071800
*                  of a structure, do a TYPE(STRUCTURE)               * 00071900
*                  STRLEVEL(SUMMARY) request and then look for the    * 00072000
*                  structure name and its associated structure dump   * 00072100
*                  ID in the ANSAREA.                                 * 00072200
*                                                                     * 00072300
*                                                                     * 00072400
*                                                                     * 00072500
*                                                                     * 00072600
*              LISTNUMLEVEL=SUMMARY|DETAIL|ENTRY                    * 00072700
*                  is a required keyword input that specifies the     * 00072800
*                  level of the LISTNUM type request.                 * 00072900
*                                                                     * 00073000
*                                                                     * 00073100
*                  LISTNUMLEVEL=SUMMARY                               * 00073200
*                      Allows a user to request the list of all of    * 00073300
*                      the list numbers, in the requested structure,  * 00073400
*                      requested to be dumped.  Returns information   * 00073500
*                      about a requested list number, a range of list * 00073600
*                      numbers, or all list numbers in the dump.  The * 00073700
*                      entries in the answer area will be mapped by   * 00073800
*                      the StrBSummary mapping which is found in the  * 00073900
*                      IXLZSTRB macro.                                * 00074000
*                                                                     * 00074100
*                                                                     * 00074200
*                      [STARTVAL=xstartval|ALL                      * 00074300
*                          is the name (RS-type), or address in       * 00074400
*                          register (2)-(12), of an optional fullword * 00074500
*                          input that specifies the start of the      * 00074600
*                          requested list number range.  If the user  * 00074700
*                          of this macro does not specify this        * 00074800
*                          keyword, all of the list numbers in the    * 00074900
*                          dump will be returned to the user.         * 00075000
*                          DEFAULT: ALL                               * 00075100
*                                                                     * 00075200
*                                                                     * 00075300
*                          [ENDVAL=xendval|STARTVAL]]               * 00075400
*                              is the name (RS-type), or address in   * 00075500
*                              register (2)-(12), of an optional      * 00075600
*                              fullword input that specifies the end  * 00075700
*                              of a requested list number range.  If  * 00075800
*                              the user of this macro does not        * 00075900
*                              specify this keyword, the ending range * 00076000
*                              value will be equal to the starting    * 00076100
*                              range value specified on the STARTVAL  * 00076200
*                              keyword.  The STARTVAL keyword is      * 00076300
*                              required if ENDVAL is specified.       * 00076400
*                              DEFAULT: STARTVAL                      * 00076500
*                                                                     * 00076600
*                                                                     * 00076700
*                                                                     * 00076800
*                                                                     * 00076900
*                                                                     * 00077000
*                  LISTNUMLEVEL=DETAIL                                * 00077100
*                      Returns detailed information about a requested * 00077200
*                      list number, a range of list numbers or all    * 00077300
*                      list numbers in the dump.  The entries in the  * 00077400
*                      answer area will be mapped by the StrBDetail   * 00077500
*                      mapping which is found in the IXLZSTRB macro.  * 00077600
*                      In the StrBDetail entry, there will also be a  * 00077700
*                      pointer to the list controls in the answer     * 00077800
*                      area.  The DLc mapping found in the IXLYDLC    * 00077900
*                      macro will map the list controls.  The length  * 00078000
*                      of the list controls will also be placed in    * 00078100
*                      the StrBDetail entry.                          * 00078200
*                                                                     * 00078300
*                                                                     * 00078400
*                      [STARTVAL=xstartval|ALL                      * 00078500
*                          is the name (RS-type), or address in       * 00078600
*                          register (2)-(12), of an optional fullword * 00078700
*                          input that specifies the start of the      * 00078800
*                          requested list number range.  If the user  * 00078900
*                          of this macro does not specify this        * 00079000
*                          keyword, all of the list numbers in the    * 00079100
*                          dump will be returned to the user.         * 00079200
*                          DEFAULT: ALL                               * 00079300
*                                                                     * 00079400
*                                                                     * 00079500
*                          [ENDVAL=xendval|STARTVAL]]               * 00079600
*                              is the name (RS-type), or address in   * 00079700
*                              register (2)-(12), of an optional      * 00079800
*                              fullword input that specifies the end  * 00079900
*                              of a requested list number range.  If  * 00080000
*                              the user of this macro does not        * 00080100
*                              specify this keyword, the ending range * 00080200
*                              value will be equal to the starting    * 00080300
*                              range value specified on the STARTVAL  * 00080400
*                              keyword.  The STARTVAL keyword is      * 00080500
*                              required if ENDVAL is specified.       * 00080600
*                              DEFAULT: STARTVAL                      * 00080700
*                                                                     * 00080800
*                                                                     * 00080900
*                                                                     * 00081000
*                                                                     * 00081100
*                                                                     * 00081200
*                  LISTNUMLEVEL=ENTRY                                 * 00081300
*                      Returns an entry at a requested position, a    * 00081400
*                      group of entries at a requested range of       * 00081500
*                      positions, or the entries at all entry         * 00081600
*                      positions that were dumped on a requested list * 00081700
*                      number.  The entries in the answer area will   * 00081800
*                      be mapped by the StrBEntry mapping which is    * 00081900
*                      found in the IXLZSTRB macro.  In the StrBEntry * 00082000
*                      entry, there will be a pointer to the entry    * 00082100
*                      controls in the answer area.  The DDil mapping * 00082200
*                      found in the IXLYDDIB macro will map the entry * 00082300
*                      controls.                                      * 00082400
*                                                                     * 00082500
*                                                                     * 00082600
*                      LISTNUMVAL=xlistnumval                         * 00082700
*                          is the name (RS-type), or address in       * 00082800
*                          register (2)-(12), of a required fullword  * 00082900
*                          input that specifies the list number for   * 00083000
*                          which entries will be retrieved            * 00083100
*                                                                     * 00083200
*                                                                     * 00083300
*                                                                     * 00083400
*                                                                     * 00083500
*                      [ENTRYKEY=xentrykey|NO_KEY]                  * 00083600
*                          is the name (RS-type), or address in       * 00083700
*                          register (2)-(12), of an optional 16       * 00083800
*                          character input that specifies the key to  * 00083900
*                          be used for retrieving list entries.  If   * 00084000
*                          this keyword is specified, only list       * 00084100
*                          entries with the requested key will be     * 00084200
*                          returned to the user.                      * 00084300
*                          DEFAULT: NO_KEY                            * 00084400
*                                                                     * 00084500
*                                                                     * 00084600
*                                                                     * 00084700
*                                                                     * 00084800
*                      [STARTPOS=xstartpos|ALL                      * 00084900
*                          is the name (RS-type), or address in       * 00085000
*                          register (2)-(12), of an optional fullword * 00085100
*                          input that specifies the start of the      * 00085200
*                          requested entry position range.  If the    * 00085300
*                          user of this macro does not specify this   * 00085400
*                          keyword, all of the entries in the dump    * 00085500
*                          for the requested list number will be      * 00085600
*                          returned to the user.                      * 00085700
*                          DEFAULT: ALL                               * 00085800
*                                                                     * 00085900
*                                                                     * 00086000
*                          [ENDPOS=xendpos|STARTPOS]]               * 00086100
*                              is the name (RS-type), or address in   * 00086200
*                              register (2)-(12), of an optional      * 00086300
*                              fullword input that specifies the end  * 00086400
*                              of a requested entry position range.   * 00086500
*                              If the user of this macro does not     * 00086600
*                              specify this keyword, the ending range * 00086700
*                              position will be equal to the starting * 00086800
*                              range position specified on the        * 00086900
*                              STARTPOS keyword.  The STARTPOS        * 00087000
*                              keyword is required if ENDPOS is       * 00087100
*                              specified.                             * 00087200
*                              DEFAULT: STARTPOS                      * 00087300
*                                                                     * 00087400
*                                                                     * 00087500
*                                                                     * 00087600
*                                                                     * 00087700
*                                                                     * 00087800
*                                                                     * 00087900
*                      [ORDER=HEAD|TAIL]                            * 00088000
*                          is an optional keyword input which         * 00088100
*                          indicates whether entries for the          * 00088200
*                          requested list number will be returned in  * 00088300
*                          the head-to-tail order or tail-to-head     * 00088400
*                          order.  For a list number, the head of the * 00088500
*                          queue represents the entry chained         * 00088600
*                          directly off of the list number and the    * 00088700
*                          tail represents the entry farthest from    * 00088800
*                          the list number.                           * 00088900
*                          DEFAULT: HEAD                              * 00089000
*                                                                     * 00089100
*                                                                     * 00089200
*                          ORDER=HEAD                                 * 00089300
*                              specifies that the entries returned in * 00089400
*                              the answer area specified will be in   * 00089500
*                              head-to-tail order.  If the user       * 00089600
*                              specifies the STARTPOS/ENDPOS keyword  * 00089700
*                              set, the entries returned will be      * 00089800
*                              returned in head-to-tail order.        * 00089900
*                                                                     * 00090000
*                          ORDER=TAIL                                 * 00090100
*                              specifies that the entries returned in * 00090200
*                              the answer area specified will be in   * 00090300
*                              tail-to-head order.  If the user       * 00090400
*                              specifies the STARTPOS/ENDPOS keyword  * 00090500
*                              set, the entries returned will be      * 00090600
*                              returned in tail-to-head order.        * 00090700
*                                                                     * 00090800
*                              NOTE - If ORDER(TAIL) is specified and * 00090900
*                              STARTPOS and ENDPOS values are         * 00091000
*                              specified, the STARTPOS value must be  * 00091100
*                              less than the ENDPOS value.            * 00091200
*                                                                     * 00091300
*                                                                     * 00091400
*                                                                     * 00091500
*                                                                     * 00091600
*                                                                     * 00091700
*                                                                     * 00091800
*                      [ADJUNCT=NO|YES]                             * 00091900
*                          is an optional keyword input which         * 00092000
*                          indicates whether the adjunct data         * 00092100
*                          associated with the requested entries      * 00092200
*                          should be returned with the entries.  If   * 00092300
*                          the adjunct data is returned with the      * 00092400
*                          entries, the adjunct data for each entry   * 00092500
*                          will be pointed to by a pointer in the     * 00092600
*                          StrBEntry mapping for each entry.  The     * 00092700
*                          length of the adjunct data will also be in * 00092800
*                          the StrBEntry mapping.                     * 00092900
*                          DEFAULT: NO                                * 00093000
*                                                                     * 00093100
*                                                                     * 00093200
*                          ADJUNCT=NO                                 * 00093300
*                              specifies that the adjunct data        * 00093400
*                              associated with the requested entries  * 00093500
*                              should not be returned.                * 00093600
*                                                                     * 00093700
*                          ADJUNCT=YES                                * 00093800
*                              specifies that the adjunct data        * 00093900
*                              associated with the requested entries  * 00094000
*                              should be returned.                    * 00094100
*                                                                     * 00094200
*                                                                     * 00094300
*                                                                     * 00094400
*                                                                     * 00094500
*                                                                     * 00094600
*                                                                     * 00094700
*                      [ENTRYDATA=NO|YES]                           * 00094800
*                          is an optional keyword input which         * 00094900
*                          indicates whether the entry data           * 00095000
*                          associated with the requested entries      * 00095100
*                          should be returned with the entries.  If   * 00095200
*                          the entry data is returned with the        * 00095300
*                          entries, the entry data for each entry     * 00095400
*                          will be pointed to by a pointer in the     * 00095500
*                          StrBEntry mapping for each entry.  The     * 00095600
*                          total length of the entry data will also   * 00095700
*                          be in the StrBEntry mapping.  If the       * 00095800
*                          buffer fills up while retrieving the entry * 00095900
*                          data, the length of the entrydata returned * 00096000
*                          and the length of entry data left to be    * 00096100
*                          returned will be in the StrBEntry.  It is  * 00096200
*                          recommended that a user look at the        * 00096300
*                          StrBEntryEDataLenLeft2Proc in the last     * 00096400
*                          StrBEntry in the ANSAREA prior to invoking * 00096500
*                          the IXLZSTR service again to retrieve the  * 00096600
*                          remainder of the entrydata for the entry.  * 00096700
*                          This variable can be used to allocate a    * 00096800
*                          bigger ANSAREA so that the remainder of    * 00096900
*                          the entrydata for this entry can be        * 00097000
*                          retrieved in one invocation before         * 00097100
*                          starting on the next entry, if one exists. * 00097200
*                          DEFAULT: NO                                * 00097300
*                                                                     * 00097400
*                                                                     * 00097500
*                          ENTRYDATA=NO                               * 00097600
*                              specifies that the entry data          * 00097700
*                              associated with the requested entries  * 00097800
*                              should not be returned.                * 00097900
*                                                                     * 00098000
*                          ENTRYDATA=YES                              * 00098100
*                              specifies that the entry data          * 00098200
*                              associated with the requested entries  * 00098300
*                              should be returned.                    * 00098400
*                                                                     * 00098500
*                                                                     * 00098600
*                                                                     * 00098700
*                                                                     * 00098800
*                                                                     * 00098900
*                                                                     * 00099000
*                                                                     * 00099100
*                                                                     * 00099200
*                                                                     * 00099300
*          TYPE=LOCKENTRIES                                           * 00099400
*              Returns detailed information about a requested lock    * 00099500
*              entry, a range of lock entries, or all entries in the  * 00099600
*              lock table for a requested list structure.  If the     * 00099700
*              requested structure is not a list structure, nothing   * 00099800
*              will be returned in the answer area, and a return code * 00099900
*              8 and a reason code X'14' will be issued indicating    * 00100000
*              that the request that was made was invalid.  The       * 00100100
*              entries in the answer area will be mapped by the DLte  * 00100200
*              mapping found in the IXLYDDIB macro.  Only the         * 00100300
*              non-zero lock table entries will be returned to the    * 00100400
*              caller of the macro.                                   * 00100500
*                                                                     * 00100600
*                                                                     * 00100700
*              STRNAME=xstrname                                       * 00100800
*                  is the name (RS-type), or address in register      * 00100900
*                  (2)-(12), of a required 16 character input which   * 00101000
*                  contains the name of the structure for which       * 00101100
*                  information is being requested.                    * 00101200
*                                                                     * 00101300
*                                                                     * 00101400
*                                                                     * 00101500
*                                                                     * 00101600
*              STRDUMPID=xstrdumpid                                   * 00101700
*                  is the name (RS-type), or address in register      * 00101800
*                  (2)-(12), of a required halfword input which       * 00101900
*                  contains the structure dump ID of the structure    * 00102000
*                  being requested.  To obtain the structure dump ID  * 00102100
*                  of a structure, do a TYPE(STRUCTURE)               * 00102200
*                  STRLEVEL(SUMMARY) request and then look for the    * 00102300
*                  structure name and its associated structure dump   * 00102400
*                  ID in the ANSAREA.                                 * 00102500
*                                                                     * 00102600
*                                                                     * 00102700
*                                                                     * 00102800
*                                                                     * 00102900
*              [STARTVAL=xstartval|ALL                              * 00103000
*                  is the name (RS-type), or address in register      * 00103100
*                  (2)-(12), of an optional fullword input that       * 00103200
*                  specifies the start of the requested lock table    * 00103300
*                  entry range.  If the user of this macro does not   * 00103400
*                  specify this keyword, all of the non-zero entries  * 00103500
*                  in the dump of the lock table will be returned to  * 00103600
*                  the user.                                          * 00103700
*                  DEFAULT: ALL                                       * 00103800
*                                                                     * 00103900
*                                                                     * 00104000
*                  [ENDVAL=xendval|STARTVAL]]                       * 00104100
*                      is the name (RS-type), or address in register  * 00104200
*                      (2)-(12), of an optional fullword input that   * 00104300
*                      specifies the end of a requested lock table    * 00104400
*                      entry range.  If the user of this macro does   * 00104500
*                      not specify this keyword, the ending range     * 00104600
*                      value will be equal to the starting range      * 00104700
*                      value specified on the STARTVAL keyword.  The  * 00104800
*                      STARTVAL keyword is required if ENDVAL is      * 00104900
*                      specified.                                     * 00105000
*                      DEFAULT: STARTVAL                              * 00105100
*                                                                     * 00105200
*                                                                     * 00105300
*                                                                     * 00105400
*                                                                     * 00105500
*                                                                     * 00105600
*          TYPE=USERCNTLS                                             * 00105700
*              Returns detailed information about a requested         * 00105800
*              connection ID, a range of connection IDs, or all       * 00105900
*              connection IDs for a requested structure.  The entries * 00106000
*              in the answer area will be mapped by the DLucb mapping * 00106100
*              if the structure is a list structure or the DLccb      * 00106200
*              mapping if the structure is a cache structure.  Both   * 00106300
*              of these mappings are found in the IXLYDDIB macro.     * 00106400
*                                                                     * 00106500
*                                                                     * 00106600
*              STRNAME=xstrname                                       * 00106700
*                  is the name (RS-type), or address in register      * 00106800
*                  (2)-(12), of a required 16 character input which   * 00106900
*                  contains the name of the structure for which       * 00107000
*                  information is being requested.                    * 00107100
*                                                                     * 00107200
*                                                                     * 00107300
*                                                                     * 00107400
*                                                                     * 00107500
*              STRDUMPID=xstrdumpid                                   * 00107600
*                  is the name (RS-type), or address in register      * 00107700
*                  (2)-(12), of a required halfword input which       * 00107800
*                  contains the structure dump ID of the structure    * 00107900
*                  being requested.  To obtain the structure dump ID  * 00108000
*                  of a structure, do a TYPE(STRUCTURE)               * 00108100
*                  STRLEVEL(SUMMARY) request and then look for the    * 00108200
*                  structure name and its associated structure dump   * 00108300
*                  ID in the ANSAREA.                                 * 00108400
*                                                                     * 00108500
*                                                                     * 00108600
*                                                                     * 00108700
*                                                                     * 00108800
*              [STARTVAL=xstartval|ALL                              * 00108900
*                  is the name (RS-type), or address in register      * 00109000
*                  (2)-(12), of an optional fullword input that       * 00109100
*                  specifies the start of the requested connection ID * 00109200
*                  range.  If the user of this macro does not specify * 00109300
*                  this keyword, user control information for all of  * 00109400
*                  the connection IDs in the dump will be returned to * 00109500
*                  the user.                                          * 00109600
*                  DEFAULT: ALL                                       * 00109700
*                                                                     * 00109800
*                                                                     * 00109900
*                  [ENDVAL=xendval|STARTVAL]]                       * 00110000
*                      is the name (RS-type), or address in register  * 00110100
*                      (2)-(12), of an optional fullword input that   * 00110200
*                      specifies the end of a requested connection ID * 00110300
*                      range.  If the user of this macro does not     * 00110400
*                      specify this keyword, the ending range value   * 00110500
*                      will be equal to the starting range value      * 00110600
*                      specified on the STARTVAL keyword.  The        * 00110700
*                      STARTVAL keyword is required if ENDVAL is      * 00110800
*                      specified.                                     * 00110900
*                      DEFAULT: STARTVAL                              * 00111000
*                                                                     * 00111100
*                                                                     * 00111200
*                                                                     * 00111300
*                                                                     * 00111400
*                                                                     * 00111500
*          TYPE=ENTRY                                                 * 00111600
*              Returns detailed information about a requested entry   * 00111700
*              name or entry ID in a requested structure.  The entry  * 00111800
*              in the answer area will be mapped by the StrBEntry     * 00111900
*              mapping which is found in the IXLZSTRB macro.  In the  * 00112000
*              StrBEntry entry, there will be a pointer to the entry  * 00112100
*              controls in the answer area.  The DDil mapping found   * 00112200
*              in the IXLYDDIB macro will map the entry controls if   * 00112300
*              the requested structure is a list structure.  The DDic * 00112400
*              mapping found in the IXLYDDIB macro will map the entry * 00112500
*              controls if the requested structure is a cache         * 00112600
*              structure.                                             * 00112700
*                                                                     * 00112800
*                                                                     * 00112900
*              STRNAME=xstrname                                       * 00113000
*                  is the name (RS-type), or address in register      * 00113100
*                  (2)-(12), of a required 16 character input which   * 00113200
*                  contains the name of the structure for which       * 00113300
*                  information is being requested.                    * 00113400
*                                                                     * 00113500
*                                                                     * 00113600
*                                                                     * 00113700
*                                                                     * 00113800
*              STRDUMPID=xstrdumpid                                   * 00113900
*                  is the name (RS-type), or address in register      * 00114000
*                  (2)-(12), of a required halfword input which       * 00114100
*                  contains the structure dump ID of the structure    * 00114200
*                  being requested.  To obtain the structure dump ID  * 00114300
*                  of a structure, do a TYPE(STRUCTURE)               * 00114400
*                  STRLEVEL(SUMMARY) request and then look for the    * 00114500
*                  structure name and its associated structure dump   * 00114600
*                  ID in the ANSAREA.                                 * 00114700
*                                                                     * 00114800
*                                                                     * 00114900
*                                                                     * 00115000
*                                                                     * 00115100
*              The following is a set of mutually exclusive keys.     * 00115200
*              This set is required; only one key must be specified.  * 00115300
*                                                                     * 00115400
*                                                                     * 00115500
*              ENTRYNAME=xentryname                                   * 00115600
*                  belongs to a set of mutually exclusive keys. It is * 00115700
*                  the name (RS-type), or address in register         * 00115800
*                  (2)-(12), of a 16 character input that contains    * 00115900
*                  the name of the data entry or list entry to be     * 00116000
*                  returned to the user.                              * 00116100
*                                                                     * 00116200
*              ENTRYID=xentryid                                       * 00116300
*                  belongs to a set of mutually exclusive keys. It is * 00116400
*                  the name (RS-type), or address in register         * 00116500
*                  (2)-(12), of a 12 character input that contains    * 00116600
*                  the list entry identifier of the list entry to be  * 00116700
*                  returned to the user.  This keyword should only be * 00116800
*                  used if the requested structure is a list          * 00116900
*                  structure.  If the requested structure is not a    * 00117000
*                  list structure, nothing will be returned in the    * 00117100
*                  answer area and a return code of 8 and a reason    * 00117200
*                  code of X'14' will be issued indicating that the   * 00117300
*                  request that was made was invalid.                 * 00117400
*                                                                     * 00117500
*                                                                     * 00117600
*                                                                     * 00117700
*              End of a set of mutually exclusive required keys.      * 00117800
*                                                                     * 00117900
*                                                                     * 00118000
*                                                                     * 00118100
*              [ADJUNCT=NO|YES]                                     * 00118200
*                  is an optional keyword input which indicates       * 00118300
*                  whether the adjunct data associated with the       * 00118400
*                  requested entry should be returned with the entry. * 00118500
*                  If the adjunct data is returned with the entry,    * 00118600
*                  the adjunct data for the entry will be pointed to  * 00118700
*                  by a pointer in the StrBEntry mapping.  The length * 00118800
*                  of the adjunct data will also be in the StrBEntry  * 00118900
*                  mapping.                                           * 00119000
*                  DEFAULT: NO                                        * 00119100
*                                                                     * 00119200
*                                                                     * 00119300
*                  ADJUNCT=NO                                         * 00119400
*                      specifies that the adjunct data associated     * 00119500
*                      with the requested entry should not be         * 00119600
*                      returned.                                      * 00119700
*                                                                     * 00119800
*                  ADJUNCT=YES                                        * 00119900
*                      specifies that the adjunct data associated     * 00120000
*                      with the requested entry should be returned.   * 00120100
*                                                                     * 00120200
*                                                                     * 00120300
*                                                                     * 00120400
*                                                                     * 00120500
*                                                                     * 00120600
*                                                                     * 00120700
*              [ENTRYDATA=NO|YES]                                   * 00120800
*                  is an optional keyword input which indicates       * 00120900
*                  whether the entry data associated with the         * 00121000
*                  requested entries should be returned with the      * 00121100
*                  entries.  If the entry data is returned with the   * 00121200
*                  entries, the entry data for each entry will be     * 00121300
*                  pointed to by a pointer in the StrBEntry mapping   * 00121400
*                  for each entry.  The total length of the entry     * 00121500
*                  data will also be in the StrBEntry mapping.  If    * 00121600
*                  the buffer fills up while retrieving the entry     * 00121700
*                  data, the length of the entrydata returned and the * 00121800
*                  length of entry data left to be returned will be   * 00121900
*                  in the StrBEntry.  It is recommended that a user   * 00122000
*                  look at the StrBEntryEDataLenLeft2Proc in the last * 00122100
*                  StrBEntry in the ANSAREA prior to invoking the     * 00122200
*                  IXLZSTR service again to retrieve the remainder of * 00122300
*                  the entrydata for the entry.  This variable can be * 00122400
*                  used to allocate a bigger ANSAREA so that the      * 00122500
*                  remainder of the entrydata for this entry can be   * 00122600
*                  retrieved in one subsequent invocation.            * 00122700
*                  DEFAULT: NO                                        * 00122800
*                                                                     * 00122900
*                                                                     * 00123000
*                  ENTRYDATA=NO                                       * 00123100
*                      specifies that the entry data associated with  * 00123200
*                      the requested entry should not be returned.    * 00123300
*                                                                     * 00123400
*                  ENTRYDATA=YES                                      * 00123500
*                      specifies that the entry data associated with  * 00123600
*                      the requested entry should be returned.        * 00123700
*                                                                     * 00123800
*                                                                     * 00123900
*                                                                     * 00124000
*                                                                     * 00124100
*                                                                     * 00124200
*          TYPE=EMCONTROLS                                            * 00124300
*              Returns event monitor control information from the     * 00124400
*              dump data set.  This type of request should only be    * 00124500
*              used if the requested structure is a list structure.   * 00124600
*              If the requested structure is not a list structure,    * 00124700
*              nothing will be returned in the answer area, and a     * 00124800
*              return code 8 and a reason code X'14' will be issued   * 00124900
*              indicating that the request that was made was invalid. * 00125000
*                                                                     * 00125100
*                                                                     * 00125200
*              STRNAME=xstrname                                       * 00125300
*                  is the name (RS-type), or address in register      * 00125400
*                  (2)-(12), of a required 16 character input which   * 00125500
*                  contains the name of the structure for which       * 00125600
*                  information is being requested.                    * 00125700
*                                                                     * 00125800
*                                                                     * 00125900
*                                                                     * 00126000
*                                                                     * 00126100
*              STRDUMPID=xstrdumpid                                   * 00126200
*                  is the name (RS-type), or address in register      * 00126300
*                  (2)-(12), of a required halfword input which       * 00126400
*                  contains the structure dump ID of the structure    * 00126500
*                  being requested.  To obtain the structure dump ID  * 00126600
*                  of a structure, do a TYPE(STRUCTURE)               * 00126700
*                  STRLEVEL(SUMMARY) request and then look for the    * 00126800
*                  structure name and its associated structure dump   * 00126900
*                  ID in the ANSAREA.                                 * 00127000
*                                                                     * 00127100
*                                                                     * 00127200
*                                                                     * 00127300
*                                                                     * 00127400
*              EMCLEVEL=SUMMARY|EMC                                 * 00127500
*                  is a required keyword input that specifies the     * 00127600
*                  level of the EMCONTROLS type request.              * 00127700
*                                                                     * 00127800
*                                                                     * 00127900
*                  EMCLEVEL=SUMMARY                                   * 00128000
*                      Returns the list of all of the list numbers,   * 00128100
*                      in the requested structure, requested to be    * 00128200
*                      dumped.  Returns event monitor control         * 00128300
*                      information about a requested list number, a   * 00128400
*                      range of list numbers, or all list numbers in  * 00128500
*                      the dump.  The entries in the answer area will * 00128600
*                      be mapped by the StrBSummary mapping which is  * 00128700
*                      found in the IXLZSTRB macro.                   * 00128800
*                                                                     * 00128900
*                                                                     * 00129000
*                      [STARTVAL=xstartval|ALL                      * 00129100
*                          is the name (RS-type), or address in       * 00129200
*                          register (2)-(12), of an optional fullword * 00129300
*                          input that specifies the start of the      * 00129400
*                          requested list number range for            * 00129500
*                          EMCONTROLS.  If the user of this macro     * 00129600
*                          does not specify this keyword, a list of   * 00129700
*                          all the event monitor controls for all the * 00129800
*                          list numbers for the requested list        * 00129900
*                          structure, requested to be dumped, will be * 00130000
*                          returned to the user.                      * 00130100
*                          DEFAULT: ALL                               * 00130200
*                                                                     * 00130300
*                                                                     * 00130400
*                          [ENDVAL=xendval|STARTVAL]]               * 00130500
*                              is the name (RS-type), or address in   * 00130600
*                              register (2)-(12), of an optional      * 00130700
*                              fullword input that specifies the end  * 00130800
*                              of a requested list number range for   * 00130900
*                              EMCONTROLS.  If the user of this macro * 00131000
*                              does not specify this keyword, the     * 00131100
*                              ending range value will be equal to    * 00131200
*                              the starting range value specified on  * 00131300
*                              the STARTVAL keyword.  The STARTVAL    * 00131400
*                              keyword is required if ENDVAL is       * 00131500
*                              specified.                             * 00131600
*                              DEFAULT: STARTVAL                      * 00131700
*                                                                     * 00131800
*                                                                     * 00131900
*                                                                     * 00132000
*                                                                     * 00132100
*                                                                     * 00132200
*                  EMCLEVEL=EMC                                       * 00132300
*                      Returns event monitor controls that were       * 00132400
*                      dumped for the requested list structure.  The  * 00132500
*                      entries in the answer area will be mapped by   * 00132600
*                      the StrBEmcDetail mapping which is found in    * 00132700
*                      the IXLZSTRB macro.  In the StrBEmcDetail      * 00132800
*                      entry, there will be a pointer to the event    * 00132900
*                      monitor controls in the answer area.  The DEmc * 00133000
*                      mapping found in the IXLYDDIB macro will map   * 00133100
*                      the event monitor controls.                    * 00133200
*                                                                     * 00133300
*                                                                     * 00133400
*                      LISTNUMVAL=xlistnumval                         * 00133500
*                          is the name (RS-type), or address in       * 00133600
*                          register (2)-(12), of a required fullword  * 00133700
*                          input that specifies the list number for   * 00133800
*                          which event monitor controls will be       * 00133900
*                          returned.                                  * 00134000
*                                                                     * 00134100
*                                                                     * 00134200
*                                                                     * 00134300
*                                                                     * 00134400
*                      [ENTRYKEY=xentrykey|NO_KEY]                  * 00134500
*                          is the name (RS-type), or address in       * 00134600
*                          register (2)-(12), of an optional 16       * 00134700
*                          character input that specifies the key to  * 00134800
*                          be used for retrieving the event monitor   * 00134900
*                          controls within the specified list number. * 00135000
*                          If this keyword is specified, only event   * 00135100
*                          monitor control entries with the requested * 00135200
*                          key will be returned to the user.          * 00135300
*                          DEFAULT: NO_KEY                            * 00135400
*                                                                     * 00135500
*                                                                     * 00135600
*                                                                     * 00135700
*                                                                     * 00135800
*                                                                     * 00135900
*                                                                     * 00136000
*                                                                     * 00136100
*          TYPE=EVENTQS                                               * 00136200
*              Returns event queue control information from the dump  * 00136300
*              data set.  This type of request should only be used if * 00136400
*              the requested structure is a list structure.  If the   * 00136500
*              requested structure is not a list structure, nothing   * 00136600
*              will be returned in the answer area, and a return code * 00136700
*              8 and a reason code X'14' will be issued indicating    * 00136800
*              that the request that was made was invalid.            * 00136900
*                                                                     * 00137000
*                                                                     * 00137100
*              STRNAME=xstrname                                       * 00137200
*                  is the name (RS-type), or address in register      * 00137300
*                  (2)-(12), of a required 16 character input which   * 00137400
*                  contains the name of the structure for which       * 00137500
*                  information is being requested.                    * 00137600
*                                                                     * 00137700
*                                                                     * 00137800
*                                                                     * 00137900
*                                                                     * 00138000
*              STRDUMPID=xstrdumpid                                   * 00138100
*                  is the name (RS-type), or address in register      * 00138200
*                  (2)-(12), of a required halfword input which       * 00138300
*                  contains the structure dump ID of the structure    * 00138400
*                  being requested.  To obtain the structure dump ID  * 00138500
*                  of a structure, do a TYPE(STRUCTURE)               * 00138600
*                  STRLEVEL(SUMMARY) request and then look for the    * 00138700
*                  structure name and its associated structure dump   * 00138800
*                  ID in the ANSAREA.                                 * 00138900
*                                                                     * 00139000
*                                                                     * 00139100
*                                                                     * 00139200
*                                                                     * 00139300
*              EQLEVEL=DETAIL|EMC                                   * 00139400
*                  is a required keyword input that specifies the     * 00139500
*                  level of the EVENTQS type request.                 * 00139600
*                                                                     * 00139700
*                                                                     * 00139800
*                  EQLEVEL=DETAIL                                     * 00139900
*                      Returns detailed event queue information about * 00140000
*                      a requested connection id, a range of          * 00140100
*                      connection ids, or all connection ids in the   * 00140200
*                      dump.  The entries in the answer area will be  * 00140300
*                      mapped by the StrBDetail mapping which is      * 00140400
*                      found in the IXLZSTRB macro.  In the           * 00140500
*                      StrBDetail entry, there will be a pointer to   * 00140600
*                      the event queue controls in the the answer     * 00140700
*                      area.  The DEqc mapping found in the IXLYDEQC  * 00140800
*                      macro will map the event queue controls.  The  * 00140900
*                      length of the event queue controls will also   * 00141000
*                      be placed in the StrBDetail entry.             * 00141100
*                                                                     * 00141200
*                                                                     * 00141300
*                      [STARTVAL=xstartval|ALL                      * 00141400
*                          is the name (RS-type), or address in       * 00141500
*                          register (2)-(12), of an optional fullword * 00141600
*                          input that specifies the start of the      * 00141700
*                          requested connection id range for EVENTQS. * 00141800
*                          If the user of this macro does not specify * 00141900
*                          this keyword, all of the event queue       * 00142000
*                          controls for all the connection ids for    * 00142100
*                          the requested list structure, requested to * 00142200
*                          be dumped, will be returned to the user.   * 00142300
*                          DEFAULT: ALL                               * 00142400
*                                                                     * 00142500
*                                                                     * 00142600
*                          [ENDVAL=xendval|STARTVAL]]               * 00142700
*                              is the name (RS-type), or address in   * 00142800
*                              register (2)-(12), of an optional      * 00142900
*                              fullword input that specifies the end  * 00143000
*                              of a requested connection id range for * 00143100
*                              EVENTQS.  If the user of this macro    * 00143200
*                              does not specify this keyword, the     * 00143300
*                              ending range value will be equal to    * 00143400
*                              the starting range value specified on  * 00143500
*                              the STARTVAL keyword.  The STARTVAL    * 00143600
*                              keyword is required if ENDVAL is       * 00143700
*                              specified.                             * 00143800
*                              DEFAULT: STARTVAL                      * 00143900
*                                                                     * 00144000
*                                                                     * 00144100
*                                                                     * 00144200
*                                                                     * 00144300
*                                                                     * 00144400
*                  EQLEVEL=EMC                                        * 00144500
*                      Returns event monitor controls associated with * 00144600
*                      the event queue of the requested connection    * 00144700
*                      id.  The entries in the answer area will be    * 00144800
*                      mapped by the StrBEmcDetail mapping which is   * 00144900
*                      found in the IXLZSTRB macro.  In the           * 00145000
*                      StrBEmcDetail entry, there will be a pointer   * 00145100
*                      to the event monitor controls in the answer    * 00145200
*                      area.  The DEmc mapping found in the IXLYDDIB  * 00145300
*                      macro will map the event monitor controls.     * 00145400
*                                                                     * 00145500
*                                                                     * 00145600
*                      CONIDVAL=xconidval                             * 00145700
*                          is the name (RS-type), or address in       * 00145800
*                          register (2)-(12), of a required byte      * 00145900
*                          input that specifies the connection id for * 00146000
*                          which event monitor controls on the event  * 00146100
*                          queue will be returned.                    * 00146200
*                                                                     * 00146300
*                                                                     * 00146400
*                                                                     * 00146500
*                                                                     * 00146600
*                                                                     * 00146700
*                                                                     * 00146800
*                                                                     * 00146900
*                                                                     * 00147000
*                                                                     * 00147100
*                                                                     * 00147200
*                                                                     * 00147300
*                                                                     * 00147400
*      [RETCODE=xretcode]                                             * 00147500
*          is the name (RS-type) of an optional fullword output       * 00147600
*          variable, or register (2)-(12), that contains the return   * 00147700
*          code from the IXLZSTR service.                             * 00147800
*                                                                     * 00147900
*                                                                     * 00148000
*                                                                     * 00148100
*                                                                     * 00148200
*      [RSNCODE=xrsncode]                                             * 00148300
*          is the name (RS-type) of an optional fullword output       * 00148400
*          variable, or register (2)-(12), that contains the reason   * 00148500
*          code from the IXLZSTR service.                             * 00148600
*                                                                     * 00148700
*                                                                     * 00148800
*                                                                     * 00148900
*                                                                     * 00149000
*      [PLISTVER=xplistver|IMPLIED_VERSION]                         * 00149100
*          is an optional byte input decimal value in the "1-1" range * 00149200
*          that specifies the macro version.  PLISTVER is the only    * 00149300
*          key allowed on the list form of MF and determines which    * 00149400
*          parameter list is generated.  Note that MAX may be         * 00149500
*          specified instead of a number, and the parameter list will * 00149600
*          be of the largest size currently supported. This size may  * 00149700
*          grow from release to release (thus possibly affecting the  * 00149800
*          amount of storage needed by your program).  If your        * 00149900
*          program can tolerate this, IBM recommends that you always  * 00150000
*          specify MAX when creating the list form parameter list as  * 00150100
*          that will ensure that the list form parameter list is      * 00150200
*          always long enough to hold whatever parameters might be    * 00150300
*          specified on the execute form.                             * 00150400
*          DEFAULT: IMPLIED_VERSION.  When PLISTVER is omitted, the   * 00150500
*          default is the lowest version which allows all of the      * 00150600
*          parameters specified on the invocation to be processed.    * 00150700
*                                                                     * 00150800
*                                                                     * 00150900
*                                                                     * 00151000
*                                                                     * 00151100
*      [MF=S|L|E]                                                   * 00151200
*          is an optional keyword input which specifies the macro     * 00151300
*          form.                                                      * 00151400
*          DEFAULT: S                                                 * 00151500
*                                                                     * 00151600
*                                                                     * 00151700
*          [MF=S]                                                     * 00151800
*              specifies the standard form of the macro.  The "S"     * 00151900
*              form generates code to put the parameters into an      * 00152000
*              in-line parameter list and invoke the desired service. * 00152100
*              Full checking for required macro keys is done along    * 00152200
*              with supplying defaults for omitted optional           * 00152300
*              parameters.                                            * 00152400
*                                                                     * 00152500
*          [MF=(L,xmfctrl,xmfattr|0D)]                              * 00152600
*              specifies the list form of the macro.  The "L" form    * 00152700
*              defines an area to be used for the parameter list.     * 00152800
*              Only the PLISTVER key may be specified on the          * 00152900
*              invocation.  All other macro parameters are flagged as * 00153000
*              errors.  If PLISTVER is not specified, the original    * 00153100
*              parameter list definition is used.                     * 00153200
*                                                                     * 00153300
*            ,xmfctrl                                                 * 00153400
*              is a required input.  It is the name of a storage area * 00153500
*              for the parameter list.                                * 00153600
*                                                                     * 00153700
*            ,xmfattr|0D                                            * 00153800
*              is an optional 60 character input string that varies   * 00153900
*              from 1 to 60 characters. Use it to force boundary      * 00154000
*              alignment of the parameter list. Use only 0F or 0D.    * 00154100
*              DEFAULT: 0D which forces the parameter list to a       * 00154200
*              doubleword boundary.                                   * 00154300
*                                                                     * 00154400
*          [MF=(E,xmfctrl,COMPLETE)]                                * 00154500
*              specifies the execute form of the macro.  The "E" form * 00154600
*              generates code to put the parameters into the          * 00154700
*              parameter list specified by xmfctrl and provides full  * 00154800
*              syntax checking with default setting.                  * 00154900
*                                                                     * 00155000
*            ,xmfctrl                                                 * 00155100
*              is a required input.  It is the name (RS-type), or     * 00155200
*              address in register (1)-(12), of a storage area for    * 00155300
*              the parameter list.                                    * 00155400
*                                                                     * 00155500
*            ,COMPLETE                                              * 00155600
*              is an optional keyword input which specifies the       * 00155700
*              degree of macro parameter syntax checking.             * 00155800
*              DEFAULT: COMPLETE                                      * 00155900
*                                                                     * 00156000
*                                                                     * 00156100
*              COMPLETE                                               * 00156200
*                  Checking for required macro keys is done and       * 00156300
*                  defaults are supplied for omitted optional         * 00156400
*                  parameters.                                        * 00156500
*                                                                     * 00156600
*                                                                     * 00156700
*                                                                     * 00156800
*                                                                     * 00156900
*                                                                     * 00157000
*                                                                     * 00157100
*                                                                     * 00157200
*01* RETURN CODES:                                                    * 00157300
*                                                                     * 00157400
*                                                                     * 00157500
*       00        Successful completion.  IXLZSTR returned all        * 00157600
*                 requested data.                                     * 00157700
*                                                                     * 00157800
*       04        Successful completion.  Additional data available   * 00157900
*                 but not returned.                                   * 00158000
*                                                                     * 00158100
*                 HEX REASON  MEANING                                 * 00158200
*                 CODE                                                * 00158300
*                                                                     * 00158400
*                                                                     * 00158500
*                 4           ANSAREA was not large enough to contain * 00158600
*                             the data to be returned by IXLZSTR.  To * 00158700
*                             retrieve the remainder of the data,     * 00158800
*                             invoke IXLZSTR again with the same      * 00158900
*                             keywords and the RESTOKEN as input to   * 00159000
*                             the macro.                              * 00159100
*                                                                     * 00159200
*                                                                     * 00159300
*                                                                     * 00159400
*       08        No data returned in ANSAREA                         * 00159500
*                                                                     * 00159600
*                 HEX REASON  MEANING                                 * 00159700
*                 CODE                                                * 00159800
*                                                                     * 00159900
*                                                                     * 00160000
*                 04          The STRNAME specified on the IXLZSTR    * 00160100
*                             macro does not appear in the dump.      * 00160200
*                                                                     * 00160300
*                 08          The STRNAME specified on the IXLZSTR    * 00160400
*                             macro appears in the dump, but the      * 00160500
*                             STRDUMPID does not appear in the dump.  * 00160600
*                                                                     * 00160700
*                 0C          No coupling facility structure data     * 00160800
*                             appears in the dump.                    * 00160900
*                                                                     * 00161000
*                 10          ANSAREA specified on the IXLZSTR macro  * 00161100
*                             does not meet the minimum storage       * 00161200
*                             requirement for the request.            * 00161300
*                                                                     * 00161400
*                 14          The data does not appear in the dump    * 00161500
*                             because the attributes of the requested * 00161600
*                             data does not match the attributes of   * 00161700
*                             the structure type.                     * 00161800
*                                                                     * 00161900
*                 18          The range specification on the IXLZSTR  * 00162000
*                             macro is invalid.  The starting value   * 00162100
*                             is greater than the ending value.       * 00162200
*                                                                     * 00162300
*                                                                     * 00162400
*                                                                     * 00162500
*       0C        Environmental Error                                 * 00162600
*                                                                     * 00162700
*                 HEX REASON  MEANING                                 * 00162800
*                 CODE                                                * 00162900
*                                                                     * 00163000
*                                                                     * 00163100
*                 04          Unable to obtain system storage.        * 00163200
*                                                                     * 00163300
*                                                                     * 00163400
*                                                                     * 00163500
*       10        Failure in IXLZSTR processing                       * 00163600
*                                                                     * 00163700
*                 HEX REASON  MEANING                                 * 00163800
*                 CODE                                                * 00163900
*                                                                     * 00164000
*                                                                     * 00164100
*                 04          Some data could not be accessed in the  * 00164200
*                             dump data set                           * 00164300
*                                                                     * 00164400
*                                                                     * 00164500
*                                                                     * 00164600
*                                                                     * 00164700
*                                                                     * 00164800
*01* REASON CODES:                                                    * 00164900
*                                                                     * 00165000
*       Reason codes, as appropriate, are defined under their         * 00165100
*       corresponding return code.                                    * 00165200
*                                                                     * 00165300
*01* MODULE TYPE:  ASSEM MACRO                                        * 00165400
*                                                                     * 00165500
*02*   PROCESSOR:  ASSEM                                              * 00165600
*                                                                     * 00165700
*01* COMPONENT:  SCIXL                                                * 00165800
*                                                                     * 00165900
*01* DISTRIBUTION LIBRARY: AMACLIB                                    * 00166000
*                                                                     * 00166100
*01* MACRO USAGE NOTES:                                               * 00166200
*                                                                     * 00166300
*                                                                     * 00166400
*    1.  Printing of the macro expansion is controlled by the ZPRINT  * 00166500
*        global macro variable.  Any value other than 'NO' will       * 00166600
*        result in the macro expansion being printed.  The default is * 00166700
*        'YES'.  The following examples illustrate how the ZPRINT     * 00166800
*        variable should be set.                                      * 00166900
*                                                                     * 00167000
*                    GBLC &ZPRINT                                     * 00167100
*            &ZPRINT SETC 'YES'          &ZPRINT SETC 'NO'            * 00167200
*                                                                     * 00167300
*                                                                     * 00167400
*    2.  All keys currently contained in the IXLZSTR macro correspond * 00167500
*        to  version 1.  If you specify PLISTVER, use a value of 1 or * 00167600
*        MAX.                                                         * 00167700
*                                                                     * 00167800
*                                                                     * 00167900
*    3.  EXAMPLES:.                                                   * 00168000
*                                                                     * 00168100
*        The following examples will illustrate some typical requests * 00168200
*        that can be made with the IXLZSTR macro.                     * 00168300
*                                                                     * 00168400
*                                                                     * 00168500
*        a.  A  user  wants  to  obtain  detail  information  about a * 00168600
*            structure  named 'LIST01'.  The name of the structure is * 00168700
*            stored  in  a 16 character variable called MYSTR and the * 00168800
*            structure  dump  identifier  is  stored  in  a fixed(16) * 00168900
*            variable  called  DUMPID.    The following invocation of * 00169000
*            IXLZSTR will retrieve that information from the dump and * 00169100
*            put  it  into the user defined answer area named MYAREA. * 00169200
*            The  length of MYAREA is 8192 bytes and is stored in a 4 * 00169300
*            byte  variable named AREALEN.  The RESTOKEN that will be * 00169400
*            used by this macro will be called MYRSTKN.               * 00169500
*                                                                     * 00169600
*            IXLZSTR ANSAREA=MYAREA,ANSLEN=AREALEN,                   * 00169700
*                    RESTOKEN=MYRSTKN,TYPE=STRUCTURE,                 * 00169800
*                    STRLEVEL=DETAIL,STRNAME=MYSTR,STRDUMPID=DUMPID   * 00169900
*                                                                     * 00170000
*                                                                     * 00170100
*        b.  A user wants detail information about all of the castout * 00170200
*            classes for a cache structure named 'CACHE01'.  The name * 00170300
*            of  the  structure  is stored in a 16 character variable * 00170400
*            called MYSTR and the structure dump identifier is stored * 00170500
*            in  a  fixed(16)  variable called DUMPID.  The following * 00170600
*            invocation  of  IXLZSTR  will  retrieve that information * 00170700
*            from  the  dump  and put it into the user defined answer * 00170800
*            area  named MYAREA.   The length of MYAREA is 5000 bytes * 00170900
*            and is stored in a 4 byte variable named AREALEN.  Since * 00171000
*            there  is  more  that 5000 bytes of data to be returned, * 00171100
*            multiple  calls  will have to be made to retrieve all of * 00171200
*            the  data.  The RESTOKEN that will be used by this macro * 00171300
*            will   be   called  MYRSTKN.     Below  is  pseudo  code * 00171400
*            surrounding the actual macro invocation.                 * 00171500
*                                                                     * 00171600
*              Do while not done with request                         * 00171700
*                                                                     * 00171800
*                IXLZSTR ANSAREA=MYAREA,ANSLEN=AREALEN,               * 00171900
*                        RESTOKEN=MYRSTKN,                            * 00172000
*                        TYPE=CLASS,STRNAME=MYSTR,STRDUMPID=DUMPID,   * 00172100
*                        CLASSTYPE=CASTOUT,CLASSLEVEL=DETAIL          * 00172200
*                        .                                            * 00172300
*                        .                                            * 00172400
*                                                                     * 00172500
*                Process data returned                                * 00172600
*                        .                                            * 00172700
*                        .                                            * 00172800
*                                                                     * 00172900
*                If the return code returned is not equal to 4 then   * 00173000
*                   done with request                                 * 00173100
*                                                                     * 00173200
*              Enddo while not done with request                      * 00173300
*                                                                     * 00173400
*        c.  A  user wants to obtain all information about entries at * 00173500
*            position  2-6, from the tail of list number 5 for a list * 00173600
*            structure  named  'LIST01'.    This will include adjunct * 00173700
*            data  and  entry  data.    The  name of the structure is * 00173800
*            stored  in  a 16 character variable called MYSTR and the * 00173900
*            structure  dump  identifier  is  stored  in  a fixed(16) * 00174000
*            variable  called  DUMPID.    The  starting  value of the * 00174100
*            position  range  is  stored  in  a 4 byte variable named * 00174200
*            STARTRNG  and  the ending value of the position range is * 00174300
*            stored  in a 4 byte variable named ENDRNG.  The value of * 00174400
*            the  list  number  is  stored in a 4 byte variable named * 00174500
*            MYLISTNM.    The  following  invocation  of IXLZSTR will * 00174600
*            retrieve  that information from the dump and put it into * 00174700
*            the  user  defined answer area named MYAREA.  The length * 00174800
*            of  MYAREA  is 8192 bytes.   This value is stored in a 4 * 00174900
*            byte  variable  named AREALEN.  Since there is more that * 00175000
*            8192  bytes  of data to be returned, multiple calls will * 00175100
*            have  to  be  made  to  retrieve  all of the data.   The * 00175200
*            RESTOKEN  that will be used by this macro will be called * 00175300
*            MYRSTKN.    Below  is pseudo code surrounding the actual * 00175400
*            macro invocation.                                        * 00175500
*                                                                     * 00175600
*              Do while not done with request                         * 00175700
*                                                                     * 00175800
*                IXLZSTR ANSAREA=MYAREA,ANSLEN=AREALEN,               * 00175900
*                        RESTOKEN=MYRSTKN,                            * 00176000
*                        TYPE=LISTNUM,STRNAME=MYSTR,STRDUMPID=DUMPID, * 00176100
*                        LISTNUMLEVEL=ENTRY,                          * 00176200
*                        LISTNUMVAL=MYLISTNM,STARTPOS=STARTRNG,       * 00176300
*                        ENDPOS=ENDRNG,ORDER=TAIL,                    * 00176400
*                        ADJUNCT=YES,ENTRYDATA=YES                    * 00176500
*                        .                                            * 00176600
*                        .                                            * 00176700
*                                                                     * 00176800
*                Process data returned                                * 00176900
*                        .                                            * 00177000
*                        .                                            * 00177100
*                                                                     * 00177200
*                If the return code returned is not equal to 4 then   * 00177300
*                   done with request                                 * 00177400
*                                                                     * 00177500
*              Enddo while not done with request                      * 00177600
*                                                                     * 00177700
*                                                                     * 00177800
*                                                                     * 00177900
*                                                                     * 00178000
*                                                                     * 00178100
*01* CHANGE ACTIVITY:                                                 * 00178200
*                                                                     * 00178300
*   Flag LineItem  FMID    Date   ID    Comment                       * 00178400
*                                                                     * 00178500
*    $L0=SYSLKDFM HBB5510 921114 PD00LA:  XLS Initial Release         * 00178600
*    $D1=DIG0042  HBB5510 930520 PD00LA:  ARB support - Documentation * 00178700
*                                         changes only                * 00178800
*    $D2=DIG0044  HBB5510 930520 PD00LA:  Structure Dump ID Support   * 00178900
*    $P1=PIG1693  HBB5510 930520 PD00LA:  Change inconsistent         * 00179000
*                                         keywords LOCKINDEX and USER * 00179100
*    $P2=PIG3506  HBB5510 931104 PD00LA:  Change inconsistent         * 00179200
*                                         documentation               * 00179300
*    $P3=PIG3527  HBB5510 931104 PD00LA:  Need to use explicit        * 00179400
*                                         register notation in        * 00179500
*                                         Assembler calls             * 00179600
*    $P4=PIG5066  HBB5510 940113 PD00EA:  Fix mixed case assembler    * 00179700
*                                         declarations                * 00179800
*    $01=OW24532  HBB5520 961115 PD00XM:  Add EMCONTROLS and EVENTQS  * 00179900
*                                         for EMC dumping support     * 00180000
****** END OF SPECIFICATIONS *****************************************/ 00180100
*/* TLINE 1 *********************************************************** 00180200
         MACRO                                                          00180300
&XLABEL  IXLZSTR &ANSAREA=,&ANSLEN=,&RESTOKEN=,&ABDPLPTR=,&TYPE=,      *00180400
               &STRLEVEL=,&STRNAME=,&STRDUMPID=,&CLASSTYPE=,           *00180500
               &CLASSLEVEL=,&STARTVAL=,&ENDVAL=,&CLASSVAL=,&STARTPOS=, *00180600
               &ENDPOS=,&ORDER=,&ADJUNCT=,&ENTRYDATA=,&LISTNUMLEVEL=,  *00180700
               &LISTNUMVAL=,&ENTRYKEY=,&ENTRYNAME=,&ENTRYID=,          *00180800
               &EMCLEVEL=,&EQLEVEL=,&CONIDVAL=,&RETCODE=,&RSNCODE=,    *00180900
               &PLISTVER=,&MF=                                          00181000
.*                                                                      00181100
*                  MACDATE -96/11/22-<1>                                00181200
.*                                                                      00181300
.*******************************************************************    00181400
.***AB.02  GLOBAL VARIABLES TO CONTROL PRINT AND CODE GENERATION        00181500
.*******************************************************************    00181600
                  GBLC  &ZPRINT     YES=PRINT NO=NO PRINT               00181700
                  GBLC  &ZTEST      YES=TEST NO=NO TEST                 00181800
                  GBLC  &ZSYSTEM    PCCODE10, MVS, SAK, VM, XAX         00181900
.*                                                                      00182000
                  GBLC  &ZIXLZSTR   YES=MACRO USED AT LEAST ONCE        00182100
.*******************************************************************    00182200
.***AB.03  COMMONLY USED LOCAL MACRO VARIABLES                          00182300
.*******************************************************************    00182400
                  LCLC  &ZMS        ERROR MESSAGE WORK AREA             00182500
                  LCLC  &ZCNDX      LAST THREE SYSNDX CHARACTERS        00182600
                  LCLC  &ZCLNG      USED WHEN LENGTH IS NEEDED          00182700
                  LCLC  &ZCGPR      USED WHEN VALUE IS IN A GPR         00182800
                  LCLC  &ZCVAL      USED TO CONTAIN FIXED VALUE         00182900
                  LCLA  &ZAWRK      USED AS A WORK AREA                 00183000
                  LCLA  &ZASIZ      USED FOR SIZE OF VALUE              00183100
                  LCLA  &ZN         NUMERIC WORK VARIABLE               00183200
                  LCLC  &ZC         CHARACTER WORK VARIABLE             00183300
                  LCLC  &ZTLC       CHARACTER TOO LONG VARIABLE         00183400
                  LCLA  &ZTLA       VALUE TOO LONG VARIABLE             00183500
                  LCLA  &ZMACRET    MACRO RETURN CODE                   00183600
&ZMACRET          SETA  0           ASSUME NO ERRORS                    00183700
.*                                                                      00183800
                  LCLC  &ZCSYSLIST(255)         NONXKEY, POS ARRAY      00183900
                  LCLA  &ZASYSLNDX  WORK INDEX FOR ZCSYSLIST()          00184000
                  LCLA  &ZPLLEN     PARAMETER LIST LENGTH               00184100
                  LCLC  &ZENDBASEPL             End of base PL          00184200
                  LCLA  &ZPLWORKA   PARAMETER LIST LENGTH               00184300
.*******************************************************************    00184400
.***AB.04  MACRO VARIABLES FOR RANGES AND SETS OF ARGUMENTS             00184500
.*******************************************************************    00184600
                  LCLA  &ZI         INDEX FOR ARRAY                     00184700
                  LCLA  &ZJ         INDEX FOR PARMS                     00184800
                  LCLA  &ZK         INDEX FOR PARSE                     00184900
                  LCLA  &ZLO        LOW RANGE VALUE                     00185000
                  LCLA  &ZHI        HIGH RANGE VALUE                    00185100
                  LCLC  &ZW         WORK AREA FOR PARM                  00185200
.********************************************************************   00185300
.***AB.05  INVOKE MVS MACROS TO CONTROL CODE GENERATION                 00185400
.********************************************************************   00185500
                  GBLC  &SYSSPLV    SP LEVEL 1,2,3 -SPLEVEL             00185600
                  GBLC  &SYSASCE    SYSTEM STATE P ANY AR-SYSSTATE      00185700
.*                                                                      00185800
                  AIF   (K'&SYSASCE GT 0).ZSYS4  SYS STATE DEFINED      00185900
                  AIF   (K'&SYSSPLV GT 0).ZSYS2  SP LEVEL DEFINED       00186000
                  SPLEVEL  TEST                                         00186100
.ZSYS2            ANOP  ,                                               00186200
                  AIF   ('&SYSSPLV' EQ '1').ZSYS3  PRE SP 3.1           00186300
                  AIF   ('&SYSSPLV' EQ '2').ZSYS3  PRE SP 3.1           00186400
                  SYSSTATE TEST                                         00186500
                  AGO   .ZSYS4                                          00186600
.ZSYS3            ANOP  ,                                               00186700
&SYSASCE          SETC  'P'         ASSUME SYSSTATE PRIMARY             00186800
.ZSYS4            ANOP  ,                                               00186900
.*******************************************************************    00187000
.***AB.07  DEFINE ALL MACRO VARIABLES                                   00187100
.*******************************************************************    00187200
                  LCLC  &XANSAREA   ++ NAME                             00187300
                  LCLC  &XANSLEN    ++ NAME                             00187400
                  LCLC  &XRESTOKEN  ++ NAME                             00187500
                  LCLC  &XABDPLPTR  ++ NAME                             00187600
                  LCLC  &XTYPE      ++ VALUE                            00187700
                  LCLC  &XSTRLEVEL  ++ VALUE                            00187800
                  LCLC  &XSTRNAME   ++ NAME                             00187900
                  LCLC  &XSTRDUMPID             ++ NAME                 00188000
                  LCLC  &XCLASSTYPE             ++ VALUE                00188100
                  LCLC  &XCLASSLEVEL            ++ VALUE                00188200
                  LCLC  &XSTARTVAL  ++ NAME                             00188300
                  LCLC  &XENDVAL    ++ NAME                             00188400
                  LCLC  &XCLASSVAL  ++ NAME                             00188500
                  LCLC  &XSTARTPOS  ++ NAME                             00188600
                  LCLC  &XENDPOS    ++ NAME                             00188700
                  LCLC  &XORDER     ++ VALUE                            00188800
                  LCLC  &XADJUNCT   ++ VALUE                            00188900
                  LCLC  &XENTRYDATA             ++ VALUE                00189000
                  LCLC  &XLISTNUMLEVEL          ++ VALUE                00189100
                  LCLC  &XLISTNUMVAL            ++ NAME                 00189200
                  LCLC  &XENTRYKEY  ++ NAME                             00189300
                  LCLC  &XDUMMY1    ++ NAME                             00189400
                  LCLC  &XENTRYNAME             ++ NAME                 00189500
                  LCLC  &XENTRYID   ++ NAME                             00189600
                  LCLC  &XEMCLEVEL  ++ VALUE                            00189700
                  LCLC  &XEQLEVEL   ++ VALUE                            00189800
                  LCLC  &XCONIDVAL  ++ NAME                             00189900
                  LCLC  &XRETCODE   ++ NAME                             00190000
                  LCLC  &XRSNCODE   ++ NAME                             00190100
                  LCLA  &XPLISTVER  ++ VALUE                            00190200
                  LCLC  &XMF        ++ VALUE                            00190300
                  LCLC  &XMFCTRL    ++ NAME                             00190400
                  LCLC  &XMFATTR    ++ VALUE                            00190500
                  LCLC  &XMFSCK     ++ VALUE                            00190600
.*******************************************************************    00190700
.***AB.13  DEFINE MACRO VARIABLES FOR INPUT/OUTPUT PROCESSING           00190800
.*******************************************************************    00190900
                  LCLC  &ZXANSAREA  ++ INPUT NAME                       00191000
                  LCLC  &ZXANSLEN   ++ INPUT NAME                       00191100
                  LCLC  &ZXRESTOKEN             ++ INOUT NAME           00191200
                  LCLC  &ZXABDPLPTR             ++ INPUT NAME           00191300
                  LCLC  &ZXTYPE     ++ INPUT VALUE                      00191400
                  LCLC  &ZXSTRLEVEL             ++ INPUT VALUE          00191500
                  LCLC  &ZXSTRNAME  ++ INPUT NAME                       00191600
                  LCLC  &ZXSTRDUMPID            ++ INPUT NAME           00191700
                  LCLC  &ZXCLASSTYPE            ++ INPUT VALUE          00191800
                  LCLC  &ZXCLASSLEVEL           ++ INPUT VALUE          00191900
                  LCLC  &ZXSTARTVAL             ++ INPUT NAME           00192000
                  LCLC  &ZXENDVAL   ++ INPUT NAME                       00192100
                  LCLC  &ZXCLASSVAL             ++ INPUT NAME           00192200
                  LCLC  &ZXSTARTPOS             ++ INPUT NAME           00192300
                  LCLC  &ZXENDPOS   ++ INPUT NAME                       00192400
                  LCLC  &ZXORDER    ++ INPUT VALUE                      00192500
                  LCLC  &ZXADJUNCT  ++ INPUT VALUE                      00192600
                  LCLC  &ZXENTRYDATA            ++ INPUT VALUE          00192700
                  LCLC  &ZXLISTNUMLEVEL         ++ INPUT VALUE          00192800
                  LCLC  &ZXLISTNUMVAL           ++ INPUT NAME           00192900
                  LCLC  &ZXENTRYKEY             ++ INPUT NAME           00193000
                  LCLC  &ZXDUMMY1   ++ INPUT NAME                       00193100
                  LCLC  &ZXENTRYNAME            ++ INPUT NAME           00193200
                  LCLC  &ZXENTRYID  ++ INPUT NAME                       00193300
                  LCLC  &ZXEMCLEVEL             ++ INPUT VALUE          00193400
                  LCLC  &ZXEQLEVEL  ++ INPUT VALUE                      00193500
                  LCLC  &ZXCONIDVAL             ++ INPUT NAME           00193600
                  LCLC  &ZXRETCODE  ++ OUTPUT NAME                      00193700
                  LCLC  &ZXRSNCODE  ++ OUTPUT NAME                      00193800
                  LCLC  &ZXPLISTVER             ++ INPUT VALUE          00193900
                  LCLC  &ZXMF       ++ INPUT VALUE                      00194000
                  LCLC  &ZXMFCTRL   ++ INPUT NAME                       00194100
                  LCLC  &ZXMFATTR   ++ INPUT VALUE                      00194200
                  LCLC  &ZXMFSCK    ++ INPUT VALUE                      00194300
.********************************************************************   00194400
.***AC.PLV01  PROCESS PLISTVER                                      *   00194500
.********************************************************************   00194600
&XPLISTVER      SETA  1                                                 00194700
                AIF   (K'&PLISTVER(1) LE 0).ZPLV0                       00194800
                AIF   ('&PLISTVER(1)' NE 'MAX').ZPLV0                   00194900
&XPLISTVER      SETA  1                                                 00195000
.ZPLV0          ANOP  ,                                                 00195100
.*                                                                      00195200
                AIF   (K'&PLISTVER(1) LE 0).ZPVCKE                      00195300
                AIF   ('&PLISTVER(1)' EQ 'IMPLIED_VERSION').ZPVCKE      00195400
                AIF   ('&PLISTVER(1)' EQ 'MAX').ZPVCKE                  00195500
.*-------------------------------------------------------------------   00195600
                AIF   (N'&PLISTVER LE 1).ZPVCK3  CK NUM                 00195700
&ZMS            SETC  '"PLISTVER='         *KPOSA* MNOTE                00195800
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00195900
&ZMS            SETC  '&ZMS "PLISTVER"'                                 00196000
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00196100
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00196200
                AGO   .ZPVCK2                                           00196300
.ZPVCK3         ANOP  ,                                                 00196400
.*-------------------------------------------------------------------   00196500
                AIF   ('&PLISTVER'(1,1) NE '(').ZPVCK2                  00196600
&ZMS            SETC  '"PLISTVER='         *KGPRA* MNOTE                00196700
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00196800
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         00196900
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'                 00197000
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00197100
                AGO   .ZPVCKE                                           00197200
.ZPVCK2         ANOP  ,                                                 00197300
.*-------------------------------------------------------------------   00197400
&ZCVAL          SETC  '&PLISTVER(1)'                                    00197500
                AIF   ('&ZCVAL'(1,1) EQ '(').ZPVCKE  IN GPR             00197600
                AIF   (T'&ZCVAL NE 'N').ZPVCK6  NUMERIC ERR             00197700
&ZN             SETA   &PLISTVER(1)        CONVERT TO ARITHMETIC        00197800
                AIF   (&ZN LT 1).ZPVCK6    TOO LOW                      00197900
                AIF   (&ZN LE 1).ZPVCK4A   NOT HIGH                     00198000
.ZPVCK6         ANOP  ,                                                 00198100
&ZMS            SETC  '"PLISTVER='         *KRNGA* MNOTE                00198200
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00198300
&ZMS            SETC  '&ZMS THE RANGE IS "1-1"'                         00198400
                MNOTE 8,' &ZMS FOR ARGUMENT 1.'                         00198500
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00198600
&XPLISTVER      SETA  1                                                 00198700
                AGO   .ZPVCKE                                           00198800
.*-------------------------------------------------------------------   00198900
.ZPVCK4A        ANOP  ,                                                 00199000
                AIF   (&ZN GE &XPLISTVER).ZPVCK4                        00199100
&ZMS            SETC  'PLISTVER='          *KVALA* MNOTE                00199200
&ZMS            SETC  '&ZMS.&PLISTVER(1)'                               00199300
&ZMS            SETC  '&ZMS., BUT PLISTVER OF'                          00199400
&ZMS            SETC  '&ZMS &XPLISTVER'                                 00199500
                MNOTE 8,' &ZMS IS REQUIRED.'                            00199600
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00199700
                AGO   .ZPVCK5                                           00199800
.ZPVCK4         ANOP  ,                                                 00199900
&XPLISTVER      SETA  &PLISTVER(1)                                      00200000
.ZPVCK5         ANOP  ,                                                 00200100
.ZPVCKE         ANOP  ,                                                 00200200
.********************************************************************   00200300
.***AG.MF01 PROCESS MF MACRO FORMS                                      00200400
.********************************************************************   00200500
                  ACTR  10000                                           00200600
.*------------------------------------------------------------------    00200700
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00200800
&XMF              SETC  ''          INITIALIZE XVARIABLE                00200900
.*-------------------------------------------------------------------   00201000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00201100
.ZG237            ANOP  ,                                               00201200
&ZTLC             SETC 'S'                                              00201300
                  AIF   ('&MF(1)' NE '&ZTLC').ZG238                     00201400
&XMF              SETC  'S'         SET KEYWORD                         00201500
                  AIF   (N'&MF LE 1).ZG237A     CK NUM                  00201600
&ZMS              SETC  '"MF='      *KPOSA* MNOTE                       00201700
&ZMS              SETC  '&ZMS.&MF"'                                     00201800
&ZMS              SETC  '&ZMS "MF"'                                     00201900
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00202000
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00202100
.ZG237A           ANOP  ,                                               00202200
.*-------------------------------------------------------------------   00202300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00202400
.ZG238            ANOP  ,                                               00202500
&ZTLC             SETC 'L'                                              00202600
                  AIF   ('&MF(1)' NE '&ZTLC').ZG245                     00202700
&XMF              SETC  'L'         SET KEYWORD                         00202800
                  AIF   (N'&MF LE 3).ZG238A     CK NUM                  00202900
&ZMS              SETC  '"MF='      *KPOSA* MNOTE                       00203000
&ZMS              SETC  '&ZMS.&MF"'                                     00203100
&ZMS              SETC  '&ZMS "MF"'                                     00203200
                  MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'            00203300
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00203400
.ZG238A           ANOP  ,                                               00203500
.*-------------------------------------------------------------------   00203600
.***AG.KKCTL08 -MF(L) SPECIAL CHECK                                     00203700
                  AIF   (N'&SYSLIST NE 0).ZG238B  POSITIONALS?          00203800
                  AIF   ('&ANSAREA' NE '').ZG238B  KEYS?                00203900
                  AIF   ('&ANSLEN' NE '').ZG238B  KEYS?                 00204000
                  AIF   ('&RESTOKEN' NE '').ZG238B  KEYS?               00204100
                  AIF   ('&ABDPLPTR' NE '').ZG238B  KEYS?               00204200
                  AIF   ('&TYPE' NE '').ZG238B  KEYS?                   00204300
                  AIF   ('&STRLEVEL' NE '').ZG238B  KEYS?               00204400
                  AIF   ('&STRNAME' NE '').ZG238B  KEYS?                00204500
                  AIF   ('&STRDUMPID' NE '').ZG238B  KEYS?              00204600
                  AIF   ('&CLASSTYPE' NE '').ZG238B  KEYS?              00204700
                  AIF   ('&CLASSLEVEL' NE '').ZG238B  KEYS?             00204800
                  AIF   ('&STARTVAL' NE '').ZG238B  KEYS?               00204900
                  AIF   ('&ENDVAL' NE '').ZG238B  KEYS?                 00205000
                  AIF   ('&CLASSVAL' NE '').ZG238B  KEYS?               00205100
                  AIF   ('&STARTPOS' NE '').ZG238B  KEYS?               00205200
                  AIF   ('&ENDPOS' NE '').ZG238B  KEYS?                 00205300
                  AIF   ('&ORDER' NE '').ZG238B  KEYS?                  00205400
                  AIF   ('&ADJUNCT' NE '').ZG238B  KEYS?                00205500
                  AIF   ('&ENTRYDATA' NE '').ZG238B  KEYS?              00205600
                  AIF   ('&LISTNUMLEVEL' NE '').ZG238B  KEYS?           00205700
                  AIF   ('&LISTNUMVAL' NE '').ZG238B  KEYS?             00205800
                  AIF   ('&ENTRYKEY' NE '').ZG238B  KEYS?               00205900
                  AIF   ('&ENTRYNAME' NE '').ZG238B  KEYS?              00206000
                  AIF   ('&ENTRYID' NE '').ZG238B  KEYS?                00206100
                  AIF   ('&EMCLEVEL' NE '').ZG238B  KEYS?               00206200
                  AIF   ('&EQLEVEL' NE '').ZG238B  KEYS?                00206300
                  AIF   ('&CONIDVAL' NE '').ZG238B  KEYS?               00206400
                  AIF   ('&RETCODE' NE '').ZG238B  KEYS?                00206500
                  AIF   ('&RSNCODE' NE '').ZG238B  KEYS?                00206600
                  AGO    .ZG238C    INVOCATION OKAY                     00206700
.ZG238B           ANOP  ,                                               00206800
&ZMS              SETC  'THE "L" FORM OF "MF"'  *MFLA* MNOTE            00206900
&ZMS              SETC  '&ZMS CAN ONLY HAVE'                            00207000
&ZMS              SETC  '&ZMS THE "PLISTVER" KEY'                       00207100
                  MNOTE 8,' &ZMS SPECIFIED ON THE INVOCATION.'          00207200
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00207300
.ZG238C           ANOP  ,                                               00207400
.*-------------------------------------------------------------------   00207500
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00207600
&ZXMFCTRL         SETC  'INPUT'     SET IN/OUTPUT                       00207700
&XMFCTRL          SETC  '&MF(2,1)'  SET XVARIABLE                       00207800
                  AIF   (N'&MF(2) GT 1).ZG240B  MULTI PARMS             00207900
&XMFCTRL          SETC  '&MF(2)'    SET XVARIABLE                       00208000
.ZG240B           AIF   (K'&MF(2) GT 0).ZG240C                          00208100
&ZXMFCTRL         SETC  ''          RESET IN/OUTPUT                     00208200
&ZMS              SETC  'WHEN "L" IS SPECIFIED'  *KRQDA*                00208300
&ZMS              SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'             00208400
                  MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                    00208500
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00208600
.ZG240C           ANOP  ,                                               00208700
.*-------------------------------------------------------------------   00208800
.***AG.KCK01 NAME, OPT RQD INPUT, POS(2) -GPR NOT ALLOWED               00208900
                  AIF   (K'&ZXMFCTRL LE 0).ZG240P  NOT I/O              00209000
                  AIF   ('&XMFCTRL'(1,1) NE '(').ZG240P                 00209100
&ZXMFCTRL         SETC  ''          RESET IN/OUTPUT                     00209200
&ZMS              SETC  '"MF='      *KGPRA* MNOTE                       00209300
&ZMS              SETC  '&ZMS.&MF"'                                     00209400
&ZMS              SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'       00209500
                  MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 2.'               00209600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00209700
.ZG240P           ANOP  ,                                               00209800
.*-------------------------------------------------------------------   00209900
.***AG.KXVAR13 VALUE, OPT INPUT, POS(3) -XVARIABLE                      00210000
&ZXMFATTR         SETC  'INPUT'     SET IN/OUTPUT                       00210100
&XMFATTR          SETC  '0D'                                            00210200
                  AIF   (K'&MF(3) LE 0).ZG243B  PARM                    00210300
&XMFATTR          SETC  '&MF(3,1)'  SET XVARIABLE                       00210400
                  AIF   (N'&MF(3) GT 1).ZG243B  MULTI PARMS             00210500
&XMFATTR          SETC  '&MF(3)'    SET XVARIABLE                       00210600
.ZG243B           ANOP  ,                                               00210700
.*-------------------------------------------------------------------   00210800
.***AG.KCK01 VALUE, OPT INPUT, POS(3) -GPR NOT ALLOWED                  00210900
                  AIF   (K'&ZXMFATTR LE 0).ZG243P  NOT I/O              00211000
                  AIF   ('&XMFATTR'(1,1) NE '(').ZG243P                 00211100
&ZXMFATTR         SETC  ''          RESET IN/OUTPUT                     00211200
&ZMS              SETC  '"MF='      *KGPRA* MNOTE                       00211300
&ZMS              SETC  '&ZMS.&MF"'                                     00211400
&ZMS              SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'       00211500
                  MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 3.'               00211600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00211700
.ZG243P           ANOP  ,                                               00211800
.*-------------------------------------------------------------------   00211900
.***AG.KCK03 VALUE, OPT INPUT, POS(3) -CHARACTER LENGTH                 00212000
                  AIF   (K'&ZXMFATTR LE 0).ZG243S  NOT I/O              00212100
                  AIF   (K'&XMFATTR LE 60).ZG243S  LNG OK               00212200
&ZXMFATTR         SETC  ''          RESET IN/OUTPUT                     00212300
&ZMS              SETC  '"MF='      *KLNGA* MNOTE                       00212400
&ZMS              SETC  '&ZMS.&MF"'                                     00212500
&ZMS              SETC  '&ZMS ARGUMENT 3 EXCEEDS THE MAXIMUM'           00212600
                  MNOTE 8,' &ZMS LENGTH OF 60 CHARACTERS.'              00212700
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00212800
.ZG243S           ANOP  ,                                               00212900
.*-------------------------------------------------------------------   00213000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00213100
.ZG245            ANOP  ,                                               00213200
&ZTLC             SETC 'E'                                              00213300
                  AIF   ('&MF(1)' NE '&ZTLC').ZG253                     00213400
&XMF              SETC  'E'         SET KEYWORD                         00213500
                  AIF   (N'&MF LE 3).ZG245A     CK NUM                  00213600
&ZMS              SETC  '"MF='      *KPOSA* MNOTE                       00213700
&ZMS              SETC  '&ZMS.&MF"'                                     00213800
&ZMS              SETC  '&ZMS "MF"'                                     00213900
                  MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'            00214000
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00214100
.ZG245A           ANOP  ,                                               00214200
.*-------------------------------------------------------------------   00214300
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00214400
&ZXMFCTRL         SETC  'INPUT'     SET IN/OUTPUT                       00214500
&XMFCTRL          SETC  '&MF(2,1)'  SET XVARIABLE                       00214600
                  AIF   (N'&MF(2) GT 1).ZG247B  MULTI PARMS             00214700
&XMFCTRL          SETC  '&MF(2)'    SET XVARIABLE                       00214800
.ZG247B           AIF   (K'&MF(2) GT 0).ZG247C                          00214900
&ZXMFCTRL         SETC  ''          RESET IN/OUTPUT                     00215000
&ZMS              SETC  'WHEN "E" IS SPECIFIED'  *KRQDA*                00215100
&ZMS              SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'             00215200
                  MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                    00215300
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00215400
.ZG247C           ANOP  ,                                               00215500
.*-------------------------------------------------------------------   00215600
.***AG.KCK02 NAME, OPT RQD INPUT, POS(2) -GPR OUT OF RANGE              00215700
                  AIF   (K'&ZXMFCTRL LE 0).ZG247R  NOT I/O              00215800
                  AIF   ('&XMFCTRL'(1,1) NE '(').ZG247R                 00215900
&ZCGPR            SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)                      00216000
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG247P                   00216100
                  AIF   (K'&ZCGPR GT 2).ZG247Q                          00216200
                  AIF   ('&ZCGPR' EQ '0').ZG247Q                        00216300
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00216400
                  AIF   (T'&ZCGPR NE 'N').ZG247Q  INVALID REG NAME      00216500
.ZG247P           ANOP  ,                                               00216600
                  AIF   (T'&ZCGPR NE 'N').ZG247R  NON NUMERIC           00216700
                  AIF   ('&ZCGPR' LT '1').ZG247Q                        00216800
                  AIF   ('&ZCGPR' LE '12').ZG247R                       00216900
.ZG247Q           ANOP  ,                                               00217000
&ZMS              SETC  '"MF='      *KGPRA* MNOTE                       00217100
&ZMS              SETC  '&ZMS.&MF"'                                     00217200
&ZMS              SETC  '&ZMS ARGUMENT 2 MUST SPECIFY A REGISTER'       00217300
                  MNOTE 8,' &ZMS IN THE RANGE (1)-(12).'                00217400
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00217500
.ZG247R           ANOP  ,                                               00217600
.*-------------------------------------------------------------------   00217700
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00217800
&XMFSCK           SETC  ''          INITIALIZE XVARIABLE                00217900
.ZG251A   AIF   ('&MF(3)' NE 'COMPLETE').ZG252A                         00218000
&XMFSCK           SETC  'COMPLETE'  SET KEYWORD                         00218100
.*-------------------------------------------------------------------   00218200
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00218300
.ZG252A           AIF   (K'&XMFSCK GT 0).ZG252C  KEYWORD                00218400
                  AIF   (K'&MF(3) LE 0).ZG252B                          00218500
&ZMS              SETC  '"MF='      *KUKWA* MNOTE                       00218600
&ZMS              SETC  '&ZMS.&MF"'                                     00218700
&ZMS              SETC  '&ZMS ARGUMENT 3 IS AN UNKNOWN KEYWORD. '       00218800
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00218900
&ZMS              SETC  '&ZMS "COMPLETE".'      VALID KEYWORD           00219000
                  MNOTE 8,' &ZMS '                                      00219100
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00219200
.ZG252B           ANOP  ,                                               00219300
&XMFSCK           SETC  'COMPLETE'  SET DEFAULT KEYWORD                 00219400
.ZG252C           ANOP  ,                                               00219500
&ZXMFSCK          SETC  'INPUT'     SET IN/OUTPUT                       00219600
.*------------------------------------------------------------------    00219700
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00219800
.ZG253            ANOP  ,                                               00219900
&ZXMF             SETC  'INPUT'     SET IN/OUTPUT                       00220000
                  AIF   (K'&XMF GT 0).ZG253E    VALID ARG               00220100
                  AIF   (T'&MF EQ 'O').ZG253D   OMITTED                 00220200
&ZASYSLNDX        SETA  0                                               00220300
.ZG253A           ANOP  ,           POSITIONAL MACRO KEY                00220400
&ZASYSLNDX        SETA  &ZASYSLNDX+1                                    00220500
                  AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG253C               00220600
&ZTLC             SETC 'MF'                                             00220700
                  AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG253A      00220800
.ZG253B           ANOP  ,                                               00220900
&ZXMF             SETC  ''          RESET IN/OUTPUT                     00221000
&ZMS              SETC  'THE "MF" KEY'          *KOPTA* MNOTE           00221100
&ZMS              SETC  '&ZMS MUST CONTAIN ONE'                         00221200
                  MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                00221300
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00221400
                  AGO   .ZG253E                                         00221500
.ZG253C           ANOP  ,                                               00221600
&ZXMF             SETC  ''          RESET IN/OUTPUT                     00221700
&ZMS              SETC  '"MF='      *KUKWA* MNOTE                       00221800
&ZMS              SETC  '&ZMS.&MF"'                                     00221900
&ZMS              SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '       00222000
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00222100
&ZMS              SETC  '&ZMS "S",'             VALID KEYWORD           00222200
&ZMS              SETC  '&ZMS "L",'             VALID KEYWORD           00222300
&ZMS              SETC  '&ZMS OR "E".'          VALID KEYWORD           00222400
                  MNOTE 8,' &ZMS '                                      00222500
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00222600
                  AGO   .ZG253E                                         00222700
.ZG253D           ANOP  ,                                               00222800
&XMF              SETC  'S'         SET DEFAULT KEYWORD                 00222900
&XMFSCK           SETC  'COMPLETE'  COMPLETE CHECKING                   00223000
.ZG253E           ANOP  ,                                               00223100
.********************************************************************   00223200
.***AG.MF02  FULL MACRO SYNTAX CHECKING                                 00223300
.********************************************************************   00223400
                  ACTR  10000                                           00223500
.*-------------------------------------------------------------------   00223600
.***AG.MF03 MF=(SLE)                                                    00223700
                  AIF   ('&XMF' EQ 'L').ZGMFX                           00223800
.*----------------------------------------------------------------***   00223900
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00224000
                  AIF   (N'&ANSAREA LE 1).ZG2A  CK NUM                  00224100
&ZMS              SETC  '"ANSAREA='             *KPOSA* MNOTE           00224200
&ZMS              SETC  '&ZMS.&ANSAREA"'                                00224300
&ZMS              SETC  '&ZMS "ANSAREA"'                                00224400
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00224500
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00224600
.ZG2A             ANOP  ,                                               00224700
.*-------------------------------------------------------------------   00224800
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00224900
&ZXANSAREA        SETC  'INPUT'     SET IN/OUTPUT                       00225000
&XANSAREA         SETC  '&ANSAREA(1)'           SET XVARIABLE           00225100
                  AIF   (N'&ANSAREA GT 1).ZG2B  MULTI PARMS             00225200
&XANSAREA         SETC  '&ANSAREA'  SET XVARIABLE                       00225300
.ZG2B             AIF   (K'&ANSAREA(1) GT 0).ZG2C                       00225400
&ZXANSAREA        SETC  ''          RESET IN/OUTPUT                     00225500
&ZMS              SETC  ' '         *KRQDA*                             00225600
&ZMS              SETC  '&ZMS "ANSAREA" KEY AND ITS ARGUMENT'           00225700
                  MNOTE 8,' &ZMS ARE REQUIRED.'                         00225800
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00225900
.ZG2C             ANOP  ,                                               00226000
.*-------------------------------------------------------------------   00226100
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00226200
                  AIF   (K'&ZXANSAREA LE 0).ZG2R  NOT I/O               00226300
                  AIF   ('&XANSAREA'(1,1) NE '(').ZG2R                  00226400
&ZCGPR            SETC  '&XANSAREA'(2,K'&XANSAREA-2)                    00226500
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG2P                     00226600
                  AIF   (K'&ZCGPR GT 2).ZG2Q                            00226700
                  AIF   ('&ZCGPR' EQ '0').ZG2Q                          00226800
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00226900
                  AIF   (T'&ZCGPR NE 'N').ZG2Q  INVALID REG NAME        00227000
.ZG2P             ANOP  ,                                               00227100
                  AIF   (T'&ZCGPR NE 'N').ZG2R  NON NUMERIC             00227200
                  AIF   ('&ZCGPR' LT '2').ZG2Q                          00227300
                  AIF   ('&ZCGPR' LE '12').ZG2R                         00227400
.ZG2Q             ANOP  ,                                               00227500
&ZMS              SETC  '"ANSAREA='             *KGPRA* MNOTE           00227600
&ZMS              SETC  '&ZMS.&ANSAREA"'                                00227700
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00227800
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00227900
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00228000
.ZG2R             ANOP  ,                                               00228100
.*----------------------------------------------------------------***   00228200
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00228300
                  AIF   (N'&ANSLEN LE 1).ZG5A   CK NUM                  00228400
&ZMS              SETC  '"ANSLEN='  *KPOSA* MNOTE                       00228500
&ZMS              SETC  '&ZMS.&ANSLEN"'                                 00228600
&ZMS              SETC  '&ZMS "ANSLEN"'                                 00228700
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00228800
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00228900
.ZG5A             ANOP  ,                                               00229000
.*-------------------------------------------------------------------   00229100
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00229200
&ZXANSLEN         SETC  'INPUT'     SET IN/OUTPUT                       00229300
&XANSLEN          SETC  '&ANSLEN(1)'            SET XVARIABLE           00229400
                  AIF   (N'&ANSLEN GT 1).ZG5B   MULTI PARMS             00229500
&XANSLEN          SETC  '&ANSLEN'   SET XVARIABLE                       00229600
.ZG5B             AIF   (K'&ANSLEN(1) GT 0).ZG5C                        00229700
&ZXANSLEN         SETC  ''          RESET IN/OUTPUT                     00229800
&ZMS              SETC  ' '         *KRQDA*                             00229900
&ZMS              SETC  '&ZMS "ANSLEN" KEY AND ITS ARGUMENT'            00230000
                  MNOTE 8,' &ZMS ARE REQUIRED.'                         00230100
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00230200
.ZG5C             ANOP  ,                                               00230300
.*-------------------------------------------------------------------   00230400
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00230500
                  AIF   (K'&ZXANSLEN LE 0).ZG5R  NOT I/O                00230600
                  AIF   ('&XANSLEN'(1,1) NE '(').ZG5R                   00230700
&ZCGPR            SETC  '&XANSLEN'(2,K'&XANSLEN-2)                      00230800
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG5P                     00230900
                  AIF   (K'&ZCGPR GT 2).ZG5Q                            00231000
                  AIF   ('&ZCGPR' EQ '0').ZG5Q                          00231100
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00231200
                  AIF   (T'&ZCGPR NE 'N').ZG5Q  INVALID REG NAME        00231300
.ZG5P             ANOP  ,                                               00231400
                  AIF   (T'&ZCGPR NE 'N').ZG5R  NON NUMERIC             00231500
                  AIF   ('&ZCGPR' LT '2').ZG5Q                          00231600
                  AIF   ('&ZCGPR' LE '12').ZG5R                         00231700
.ZG5Q             ANOP  ,                                               00231800
&ZMS              SETC  '"ANSLEN='  *KGPRA* MNOTE                       00231900
&ZMS              SETC  '&ZMS.&ANSLEN"'                                 00232000
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00232100
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00232200
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00232300
.ZG5R             ANOP  ,                                               00232400
.*----------------------------------------------------------------***   00232500
.***AG.KXVAR05 NAME, RQD INOUT, KEYS -XVARIABLE KEY                     00232600
                  AIF   (N'&RESTOKEN LE 1).ZG8A  CK NUM                 00232700
&ZMS              SETC  '"RESTOKEN='            *KPOSA* MNOTE           00232800
&ZMS              SETC  '&ZMS.&RESTOKEN"'                               00232900
&ZMS              SETC  '&ZMS "RESTOKEN"'                               00233000
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00233100
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00233200
.ZG8A             ANOP  ,                                               00233300
.*-------------------------------------------------------------------   00233400
.***AG.KXVAR06 NAME, RQD INOUT, KEYS -XVARIABLE                         00233500
&ZXRESTOKEN       SETC  'INOUT'     SET IN/OUTPUT                       00233600
&XRESTOKEN        SETC  '&RESTOKEN(1)'          SET XVARIABLE           00233700
                  AIF   (N'&RESTOKEN GT 1).ZG8B  MULTI PARMS            00233800
&XRESTOKEN        SETC  '&RESTOKEN'             SET XVARIABLE           00233900
.ZG8B             AIF   (K'&RESTOKEN(1) GT 0).ZG8C                      00234000
&ZXRESTOKEN       SETC  ''          RESET IN/OUTPUT                     00234100
&ZMS              SETC  ' '         *KRQDA*                             00234200
&ZMS              SETC  '&ZMS "RESTOKEN" KEY AND ITS ARGUMENT'          00234300
                  MNOTE 8,' &ZMS ARE REQUIRED.'                         00234400
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00234500
.ZG8C             ANOP  ,                                               00234600
.*-------------------------------------------------------------------   00234700
.***AG.KCK02 NAME, RQD INOUT, KEYS -GPR OUT OF RANGE                    00234800
                  AIF   (K'&ZXRESTOKEN LE 0).ZG8R  NOT I/O              00234900
                  AIF   ('&XRESTOKEN'(1,1) NE '(').ZG8R                 00235000
&ZCGPR            SETC  '&XRESTOKEN'(2,K'&XRESTOKEN-2)                  00235100
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG8P                     00235200
                  AIF   (K'&ZCGPR GT 2).ZG8Q                            00235300
                  AIF   ('&ZCGPR' EQ '0').ZG8Q                          00235400
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00235500
                  AIF   (T'&ZCGPR NE 'N').ZG8Q  INVALID REG NAME        00235600
.ZG8P             ANOP  ,                                               00235700
                  AIF   (T'&ZCGPR NE 'N').ZG8R  NON NUMERIC             00235800
                  AIF   ('&ZCGPR' LT '2').ZG8Q                          00235900
                  AIF   ('&ZCGPR' LE '12').ZG8R                         00236000
.ZG8Q             ANOP  ,                                               00236100
&ZMS              SETC  '"RESTOKEN='            *KGPRA* MNOTE           00236200
&ZMS              SETC  '&ZMS.&RESTOKEN"'                               00236300
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00236400
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00236500
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00236600
.ZG8R             ANOP  ,                                               00236700
.*----------------------------------------------------------------***   00236800
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00236900
                  AIF   (N'&ABDPLPTR LE 1).ZG11A  CK NUM                00237000
&ZMS              SETC  '"ABDPLPTR='            *KPOSA* MNOTE           00237100
&ZMS              SETC  '&ZMS.&ABDPLPTR"'                               00237200
&ZMS              SETC  '&ZMS "ABDPLPTR"'                               00237300
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00237400
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00237500
.ZG11A            ANOP  ,                                               00237600
.*-------------------------------------------------------------------   00237700
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00237800
&ZXABDPLPTR       SETC  'INPUT'     SET IN/OUTPUT                       00237900
&XABDPLPTR        SETC  '&ABDPLPTR(1)'          SET XVARIABLE           00238000
                  AIF   (N'&ABDPLPTR GT 1).ZG11B  MULTI PARMS           00238100
&XABDPLPTR        SETC  '&ABDPLPTR'             SET XVARIABLE           00238200
.ZG11B            AIF   (K'&ABDPLPTR(1) GT 0).ZG11C                     00238300
&ZXABDPLPTR       SETC  ''          RESET IN/OUTPUT                     00238400
&ZMS              SETC  ' '         *KRQDA*                             00238500
&ZMS              SETC  '&ZMS "ABDPLPTR" KEY AND ITS ARGUMENT'          00238600
                  MNOTE 8,' &ZMS ARE REQUIRED.'                         00238700
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00238800
.ZG11C            ANOP  ,                                               00238900
.*-------------------------------------------------------------------   00239000
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00239100
                  AIF   (K'&ZXABDPLPTR LE 0).ZG11R  NOT I/O             00239200
                  AIF   ('&XABDPLPTR'(1,1) NE '(').ZG11R                00239300
&ZCGPR            SETC  '&XABDPLPTR'(2,K'&XABDPLPTR-2)                  00239400
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG11P                    00239500
                  AIF   (K'&ZCGPR GT 2).ZG11Q                           00239600
                  AIF   ('&ZCGPR' EQ '0').ZG11Q                         00239700
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00239800
                  AIF   (T'&ZCGPR NE 'N').ZG11Q  INVALID REG NAME       00239900
.ZG11P            ANOP  ,                                               00240000
                  AIF   (T'&ZCGPR NE 'N').ZG11R  NON NUMERIC            00240100
                  AIF   ('&ZCGPR' LT '2').ZG11Q                         00240200
                  AIF   ('&ZCGPR' LE '12').ZG11R                        00240300
.ZG11Q            ANOP  ,                                               00240400
&ZMS              SETC  '"ABDPLPTR='            *KGPRA* MNOTE           00240500
&ZMS              SETC  '&ZMS.&ABDPLPTR"'                               00240600
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00240700
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00240800
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00240900
.ZG11R            ANOP  ,                                               00241000
.*------------------------------------------------------------------    00241100
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00241200
&XTYPE            SETC  ''          INITIALIZE XVARIABLE                00241300
.*-------------------------------------------------------------------   00241400
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00241500
.ZG15             ANOP  ,                                               00241600
                  AIF   (K'&TYPE(1) LE 0).ZG15A                         00241700
&ZTLC             SETC 'STRUCTURE'                                      00241800
                  AIF   ('&TYPE(1)' NE '&ZTLC').ZG27                    00241900
&XTYPE            SETC  'STRUCTURE'             SET KEYWORD             00242000
                  AIF   (N'&TYPE LE 1).ZG15A    CK NUM                  00242100
&ZMS              SETC  '"TYPE='    *KPOSA* MNOTE                       00242200
&ZMS              SETC  '&ZMS.&TYPE"'                                   00242300
&ZMS              SETC  '&ZMS "TYPE"'                                   00242400
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00242500
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00242600
.ZG15A            ANOP  ,                                               00242700
.*------------------------------------------------------------------    00242800
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00242900
&ZCVAL            SETC ''           CLEAR ERROR KEY ACCUMULATOR         00243000
.ZG15A0           AIF   (K'&CLASSTYPE LE 0).ZG15A1  OK                  00243100
&ZCVAL            SETC '&ZCVAL CLASSTYPE'       INCORRECT KEY USED      00243200
.ZG15A1           AIF   (K'&CLASSLEVEL LE 0).ZG15A2  OK                 00243300
&ZCVAL            SETC '&ZCVAL CLASSLEVEL'      INCORRECT KEY USED      00243400
.ZG15A2           AIF   (K'&STARTVAL LE 0).ZG15A3  OK                   00243500
&ZCVAL            SETC '&ZCVAL STARTVAL'        INCORRECT KEY USED      00243600
.ZG15A3           AIF   (K'&ENDVAL LE 0).ZG15A4  OK                     00243700
&ZCVAL            SETC '&ZCVAL ENDVAL'          INCORRECT KEY USED      00243800
.ZG15A4           AIF   (K'&CLASSVAL LE 0).ZG15A5  OK                   00243900
&ZCVAL            SETC '&ZCVAL CLASSVAL'        INCORRECT KEY USED      00244000
.ZG15A5           AIF   (K'&STARTPOS LE 0).ZG15A6  OK                   00244100
&ZCVAL            SETC '&ZCVAL STARTPOS'        INCORRECT KEY USED      00244200
.ZG15A6           AIF   (K'&ENDPOS LE 0).ZG15A7  OK                     00244300
&ZCVAL            SETC '&ZCVAL ENDPOS'          INCORRECT KEY USED      00244400
.ZG15A7           AIF   (K'&ORDER LE 0).ZG15A8  OK                      00244500
&ZCVAL            SETC '&ZCVAL ORDER'           INCORRECT KEY USED      00244600
.ZG15A8           AIF   (K'&ADJUNCT LE 0).ZG15A9  OK                    00244700
&ZCVAL            SETC '&ZCVAL ADJUNCT'         INCORRECT KEY USED      00244800
.ZG15A9           AIF   (K'&ENTRYDATA LE 0).ZG15A10  OK                 00244900
&ZCVAL            SETC '&ZCVAL ENTRYDATA'       INCORRECT KEY USED      00245000
.ZG15A10          AIF   (K'&LISTNUMLEVEL LE 0).ZG15A11  OK              00245100
&ZCVAL            SETC '&ZCVAL LISTNUMLEVEL'    INCORRECT KEY USED      00245200
.ZG15A11          AIF   (K'&LISTNUMVAL LE 0).ZG15A12  OK                00245300
&ZCVAL            SETC '&ZCVAL LISTNUMVAL'      INCORRECT KEY USED      00245400
.ZG15A12          AIF   (K'&ENTRYKEY LE 0).ZG15A13  OK                  00245500
&ZCVAL            SETC '&ZCVAL ENTRYKEY'        INCORRECT KEY USED      00245600
.ZG15A13          AIF   (K'&ENTRYNAME LE 0).ZG15A14  OK                 00245700
&ZCVAL            SETC '&ZCVAL ENTRYNAME'       INCORRECT KEY USED      00245800
.ZG15A14          AIF   (K'&ENTRYID LE 0).ZG15A15  OK                   00245900
&ZCVAL            SETC '&ZCVAL ENTRYID'         INCORRECT KEY USED      00246000
.ZG15A15          AIF   (K'&EMCLEVEL LE 0).ZG15A16  OK                  00246100
&ZCVAL            SETC '&ZCVAL EMCLEVEL'        INCORRECT KEY USED      00246200
.ZG15A16          AIF   (K'&EQLEVEL LE 0).ZG15A17  OK                   00246300
&ZCVAL            SETC '&ZCVAL EQLEVEL'         INCORRECT KEY USED      00246400
.ZG15A17          AIF   (K'&CONIDVAL LE 0).ZG15A18  OK                  00246500
&ZCVAL            SETC '&ZCVAL CONIDVAL'        INCORRECT KEY USED      00246600
.ZG15A18          AIF   (K'&ZCVAL LE 0).ZG15A19  OK                     00246700
&ZCVAL            SETC '&ZCVAL'(2,K'&ZCVAL-1)                           00246800
                  AIF  (K'&ZCVAL LE 160).ZG15A19A                       00246900
&ZCVAL            SETC '&ZCVAL'(1,160)                                  00247000
&ZCVAL            SETC '&ZCVAL....'                                     00247100
.ZG15A19A         ANOP                                                  00247200
&ZMS              SETC  '"TYPE'     *KMEIA* MNOTE                       00247300
&ZMS              SETC  '&ZMS.=&TYPE"'                                  00247400
&ZMS              SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'            00247500
                  MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'            00247600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00247700
.ZG15A19          ANOP  ,                                               00247800
.*------------------------------------------------------------------    00247900
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00248000
&XSTRLEVEL        SETC  ''          INITIALIZE XVARIABLE                00248100
.*-------------------------------------------------------------------   00248200
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00248300
.ZG18             ANOP  ,                                               00248400
                  AIF   (K'&STRLEVEL(1) LE 0).ZG18A                     00248500
&ZTLC             SETC 'SUMMARY'                                        00248600
                  AIF   ('&STRLEVEL(1)' NE '&ZTLC').ZG19                00248700
&XSTRLEVEL        SETC  'SUMMARY'   SET KEYWORD                         00248800
                  AIF   (N'&STRLEVEL LE 1).ZG18A  CK NUM                00248900
&ZMS              SETC  '"STRLEVEL='            *KPOSA* MNOTE           00249000
&ZMS              SETC  '&ZMS.&STRLEVEL"'                               00249100
&ZMS              SETC  '&ZMS "STRLEVEL"'                               00249200
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00249300
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00249400
.ZG18A            ANOP  ,                                               00249500
.*------------------------------------------------------------------    00249600
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00249700
&ZCVAL            SETC ''           CLEAR ERROR KEY ACCUMULATOR         00249800
.ZG18A0           AIF   (K'&STRNAME LE 0).ZG18A1  OK                    00249900
&ZCVAL            SETC '&ZCVAL STRNAME'         INCORRECT KEY USED      00250000
.ZG18A1           AIF   (K'&STRDUMPID LE 0).ZG18A2  OK                  00250100
&ZCVAL            SETC '&ZCVAL STRDUMPID'       INCORRECT KEY USED      00250200
.ZG18A2           AIF   (K'&ZCVAL LE 0).ZG18A3  OK                      00250300
&ZCVAL            SETC '&ZCVAL'(2,K'&ZCVAL-1)                           00250400
&ZMS              SETC  '"STRLEVEL'             *KMEIA* MNOTE           00250500
&ZMS              SETC  '&ZMS.=&STRLEVEL"'                              00250600
&ZMS              SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'            00250700
                  MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'            00250800
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00250900
.ZG18A3           ANOP  ,                                               00251000
.*-------------------------------------------------------------------   00251100
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00251200
.ZG19             ANOP  ,                                               00251300
&ZTLC             SETC 'DETAIL'                                         00251400
                  AIF   ('&STRLEVEL(1)' NE '&ZTLC').ZG26                00251500
&XSTRLEVEL        SETC  'DETAIL'    SET KEYWORD                         00251600
                  AIF   (N'&STRLEVEL LE 1).ZG19A  CK NUM                00251700
&ZMS              SETC  '"STRLEVEL='            *KPOSA* MNOTE           00251800
&ZMS              SETC  '&ZMS.&STRLEVEL"'                               00251900
&ZMS              SETC  '&ZMS "STRLEVEL"'                               00252000
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00252100
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00252200
.ZG19A            ANOP  ,                                               00252300
.*----------------------------------------------------------------***   00252400
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00252500
                  AIF   (N'&STRNAME LE 1).ZG21A  CK NUM                 00252600
&ZMS              SETC  '"STRNAME='             *KPOSA* MNOTE           00252700
&ZMS              SETC  '&ZMS.&STRNAME"'                                00252800
&ZMS              SETC  '&ZMS "STRNAME"'                                00252900
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00253000
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00253100
.ZG21A            ANOP  ,                                               00253200
.*-------------------------------------------------------------------   00253300
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00253400
&ZXSTRNAME        SETC  'INPUT'     SET IN/OUTPUT                       00253500
&XSTRNAME         SETC  '&STRNAME(1)'           SET XVARIABLE           00253600
                  AIF   (N'&STRNAME GT 1).ZG21B  MULTI PARMS            00253700
&XSTRNAME         SETC  '&STRNAME'  SET XVARIABLE                       00253800
.ZG21B            AIF   (K'&STRNAME(1) GT 0).ZG21C                      00253900
&ZXSTRNAME        SETC  ''          RESET IN/OUTPUT                     00254000
&ZMS              SETC  ' '         *KRQDA*                             00254100
&ZMS              SETC  '&ZMS "STRNAME" KEY AND ITS ARGUMENT'           00254200
                  MNOTE 8,' &ZMS ARE REQUIRED.'                         00254300
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00254400
.ZG21C            ANOP  ,                                               00254500
.*-------------------------------------------------------------------   00254600
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00254700
                  AIF   (K'&ZXSTRNAME LE 0).ZG21R  NOT I/O              00254800
                  AIF   ('&XSTRNAME'(1,1) NE '(').ZG21R                 00254900
&ZCGPR            SETC  '&XSTRNAME'(2,K'&XSTRNAME-2)                    00255000
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG21P                    00255100
                  AIF   (K'&ZCGPR GT 2).ZG21Q                           00255200
                  AIF   ('&ZCGPR' EQ '0').ZG21Q                         00255300
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00255400
                  AIF   (T'&ZCGPR NE 'N').ZG21Q  INVALID REG NAME       00255500
.ZG21P            ANOP  ,                                               00255600
                  AIF   (T'&ZCGPR NE 'N').ZG21R  NON NUMERIC            00255700
                  AIF   ('&ZCGPR' LT '2').ZG21Q                         00255800
                  AIF   ('&ZCGPR' LE '12').ZG21R                        00255900
.ZG21Q            ANOP  ,                                               00256000
&ZMS              SETC  '"STRNAME='             *KGPRA* MNOTE           00256100
&ZMS              SETC  '&ZMS.&STRNAME"'                                00256200
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00256300
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00256400
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00256500
.ZG21R            ANOP  ,                                               00256600
.*----------------------------------------------------------------***   00256700
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00256800
                  AIF   (N'&STRDUMPID LE 1).ZG24A  CK NUM               00256900
&ZMS              SETC  '"STRDUMPID='           *KPOSA* MNOTE           00257000
&ZMS              SETC  '&ZMS.&STRDUMPID"'                              00257100
&ZMS              SETC  '&ZMS "STRDUMPID"'                              00257200
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00257300
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00257400
.ZG24A            ANOP  ,                                               00257500
.*-------------------------------------------------------------------   00257600
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00257700
&ZXSTRDUMPID      SETC  'INPUT'     SET IN/OUTPUT                       00257800
&XSTRDUMPID       SETC  '&STRDUMPID(1)'         SET XVARIABLE           00257900
                  AIF   (N'&STRDUMPID GT 1).ZG24B  MULTI PARMS          00258000
&XSTRDUMPID       SETC  '&STRDUMPID'            SET XVARIABLE           00258100
.ZG24B            AIF   (K'&STRDUMPID(1) GT 0).ZG24C                    00258200
&ZXSTRDUMPID      SETC  ''          RESET IN/OUTPUT                     00258300
&ZMS              SETC  ' '         *KRQDA*                             00258400
&ZMS              SETC  '&ZMS "STRDUMPID" KEY AND ITS ARGUMENT'         00258500
                  MNOTE 8,' &ZMS ARE REQUIRED.'                         00258600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00258700
.ZG24C            ANOP  ,                                               00258800
.*-------------------------------------------------------------------   00258900
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00259000
                  AIF   (K'&ZXSTRDUMPID LE 0).ZG24R  NOT I/O            00259100
                  AIF   ('&XSTRDUMPID'(1,1) NE '(').ZG24R               00259200
&ZCGPR            SETC  '&XSTRDUMPID'(2,K'&XSTRDUMPID-2)                00259300
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG24P                    00259400
                  AIF   (K'&ZCGPR GT 2).ZG24Q                           00259500
                  AIF   ('&ZCGPR' EQ '0').ZG24Q                         00259600
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00259700
                  AIF   (T'&ZCGPR NE 'N').ZG24Q  INVALID REG NAME       00259800
.ZG24P            ANOP  ,                                               00259900
                  AIF   (T'&ZCGPR NE 'N').ZG24R  NON NUMERIC            00260000
                  AIF   ('&ZCGPR' LT '2').ZG24Q                         00260100
                  AIF   ('&ZCGPR' LE '12').ZG24R                        00260200
.ZG24Q            ANOP  ,                                               00260300
&ZMS              SETC  '"STRDUMPID='           *KGPRA* MNOTE           00260400
&ZMS              SETC  '&ZMS.&STRDUMPID"'                              00260500
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00260600
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00260700
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00260800
.ZG24R            ANOP  ,                                               00260900
.*------------------------------------------------------------------    00261000
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00261100
.ZG26             ANOP  ,                                               00261200
&ZXSTRLEVEL       SETC  'INPUT'     SET IN/OUTPUT                       00261300
                  AIF   (K'&XSTRLEVEL GT 0).ZG26E  VALID ARG            00261400
                  AIF   (T'&STRLEVEL EQ 'O').ZG26D  OMITTED             00261500
&ZASYSLNDX        SETA  0                                               00261600
.ZG26A            ANOP  ,           POSITIONAL MACRO KEY                00261700
&ZASYSLNDX        SETA  &ZASYSLNDX+1                                    00261800
                  AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG26C                00261900
&ZTLC             SETC 'STRLEVEL'                                       00262000
                  AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG26A       00262100
.ZG26B            ANOP  ,                                               00262200
&ZXSTRLEVEL       SETC  ''          RESET IN/OUTPUT                     00262300
&ZMS              SETC  'THE "STRLEVEL" KEY'    *KOPTA* MNOTE           00262400
&ZMS              SETC  '&ZMS MUST CONTAIN ONE'                         00262500
                  MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                00262600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00262700
                  AGO   .ZG26E                                          00262800
.ZG26C            ANOP  ,                                               00262900
&ZXSTRLEVEL       SETC  ''          RESET IN/OUTPUT                     00263000
&ZMS              SETC  '"STRLEVEL='            *KUKWA* MNOTE           00263100
&ZMS              SETC  '&ZMS.&STRLEVEL"'                               00263200
&ZMS              SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '       00263300
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00263400
&ZMS              SETC  '&ZMS "SUMMARY"'        VALID KEYWORD           00263500
&ZMS              SETC  '&ZMS OR "DETAIL".'     VALID KEYWORD           00263600
                  MNOTE 8,' &ZMS '                                      00263700
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00263800
                  AGO   .ZG26E                                          00263900
.ZG26D            ANOP  ,                                               00264000
&XSTRLEVEL        SETC  'SUMMARY'   SET DEFAULT KEYWORD                 00264100
.ZG26E            ANOP  ,                                               00264200
.*------------------------------------------------------------------    00264300
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00264400
                  AIF   (K'&STRLEVEL(1) GT 0).ZG26F  PARM               00264500
&XSTRLEVEL        SETC  ''          ENSURE NULL KEYWORD                 00264600
&ZXSTRLEVEL       SETC  ''          RESET IN/OUTPUT                     00264700
&ZMS              SETC  'THE'                                           00264800
&ZMS              SETC  '&ZMS "STRLEVEL" KEY AND ITS ARGUMENT'          00264900
&ZMS              SETC  '&ZMS ARE REQUIRED.'                            00265000
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00265100
&ZMS              SETC  '&ZMS "SUMMARY"'        VALID KEYWORD           00265200
&ZMS              SETC  '&ZMS OR "DETAIL".'     VALID KEYWORD           00265300
                  MNOTE 8,' &ZMS '                                      00265400
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00265500
.ZG26F            ANOP  ,                                               00265600
.*-------------------------------------------------------------------   00265700
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00265800
.ZG27             ANOP  ,                                               00265900
&ZTLC             SETC 'CLASS'                                          00266000
                  AIF   ('&TYPE(1)' NE '&ZTLC').ZG81                    00266100
&XTYPE            SETC  'CLASS'     SET KEYWORD                         00266200
                  AIF   (N'&TYPE LE 1).ZG27A    CK NUM                  00266300
&ZMS              SETC  '"TYPE='    *KPOSA* MNOTE                       00266400
&ZMS              SETC  '&ZMS.&TYPE"'                                   00266500
&ZMS              SETC  '&ZMS "TYPE"'                                   00266600
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00266700
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00266800
.ZG27A            ANOP  ,                                               00266900
.*------------------------------------------------------------------    00267000
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00267100
&ZCVAL            SETC ''           CLEAR ERROR KEY ACCUMULATOR         00267200
.ZG27A0           AIF   (K'&STRLEVEL LE 0).ZG27A1  OK                   00267300
&ZCVAL            SETC '&ZCVAL STRLEVEL'        INCORRECT KEY USED      00267400
.ZG27A1           AIF   (K'&LISTNUMLEVEL LE 0).ZG27A2  OK               00267500
&ZCVAL            SETC '&ZCVAL LISTNUMLEVEL'    INCORRECT KEY USED      00267600
.ZG27A2           AIF   (K'&LISTNUMVAL LE 0).ZG27A3  OK                 00267700
&ZCVAL            SETC '&ZCVAL LISTNUMVAL'      INCORRECT KEY USED      00267800
.ZG27A3           AIF   (K'&ENTRYKEY LE 0).ZG27A4  OK                   00267900
&ZCVAL            SETC '&ZCVAL ENTRYKEY'        INCORRECT KEY USED      00268000
.ZG27A4           AIF   (K'&ENTRYNAME LE 0).ZG27A5  OK                  00268100
&ZCVAL            SETC '&ZCVAL ENTRYNAME'       INCORRECT KEY USED      00268200
.ZG27A5           AIF   (K'&ENTRYID LE 0).ZG27A6  OK                    00268300
&ZCVAL            SETC '&ZCVAL ENTRYID'         INCORRECT KEY USED      00268400
.ZG27A6           AIF   (K'&EMCLEVEL LE 0).ZG27A7  OK                   00268500
&ZCVAL            SETC '&ZCVAL EMCLEVEL'        INCORRECT KEY USED      00268600
.ZG27A7           AIF   (K'&EQLEVEL LE 0).ZG27A8  OK                    00268700
&ZCVAL            SETC '&ZCVAL EQLEVEL'         INCORRECT KEY USED      00268800
.ZG27A8           AIF   (K'&CONIDVAL LE 0).ZG27A9  OK                   00268900
&ZCVAL            SETC '&ZCVAL CONIDVAL'        INCORRECT KEY USED      00269000
.ZG27A9           AIF   (K'&ZCVAL LE 0).ZG27A10  OK                     00269100
&ZCVAL            SETC '&ZCVAL'(2,K'&ZCVAL-1)                           00269200
&ZMS              SETC  '"TYPE'     *KMEIA* MNOTE                       00269300
&ZMS              SETC  '&ZMS.=&TYPE"'                                  00269400
&ZMS              SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'            00269500
                  MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'            00269600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00269700
.ZG27A10          ANOP  ,                                               00269800
.*----------------------------------------------------------------***   00269900
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00270000
                  AIF   (N'&STRNAME LE 1).ZG29A  CK NUM                 00270100
&ZMS              SETC  '"STRNAME='             *KPOSA* MNOTE           00270200
&ZMS              SETC  '&ZMS.&STRNAME"'                                00270300
&ZMS              SETC  '&ZMS "STRNAME"'                                00270400
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00270500
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00270600
.ZG29A            ANOP  ,                                               00270700
.*-------------------------------------------------------------------   00270800
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00270900
&ZXSTRNAME        SETC  'INPUT'     SET IN/OUTPUT                       00271000
&XSTRNAME         SETC  '&STRNAME(1)'           SET XVARIABLE           00271100
                  AIF   (N'&STRNAME GT 1).ZG29B  MULTI PARMS            00271200
&XSTRNAME         SETC  '&STRNAME'  SET XVARIABLE                       00271300
.ZG29B            AIF   (K'&STRNAME(1) GT 0).ZG29C                      00271400
&ZXSTRNAME        SETC  ''          RESET IN/OUTPUT                     00271500
&ZMS              SETC  ' '         *KRQDA*                             00271600
&ZMS              SETC  '&ZMS "STRNAME" KEY AND ITS ARGUMENT'           00271700
                  MNOTE 8,' &ZMS ARE REQUIRED.'                         00271800
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00271900
.ZG29C            ANOP  ,                                               00272000
.*-------------------------------------------------------------------   00272100
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00272200
                  AIF   (K'&ZXSTRNAME LE 0).ZG29R  NOT I/O              00272300
                  AIF   ('&XSTRNAME'(1,1) NE '(').ZG29R                 00272400
&ZCGPR            SETC  '&XSTRNAME'(2,K'&XSTRNAME-2)                    00272500
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG29P                    00272600
                  AIF   (K'&ZCGPR GT 2).ZG29Q                           00272700
                  AIF   ('&ZCGPR' EQ '0').ZG29Q                         00272800
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00272900
                  AIF   (T'&ZCGPR NE 'N').ZG29Q  INVALID REG NAME       00273000
.ZG29P            ANOP  ,                                               00273100
                  AIF   (T'&ZCGPR NE 'N').ZG29R  NON NUMERIC            00273200
                  AIF   ('&ZCGPR' LT '2').ZG29Q                         00273300
                  AIF   ('&ZCGPR' LE '12').ZG29R                        00273400
.ZG29Q            ANOP  ,                                               00273500
&ZMS              SETC  '"STRNAME='             *KGPRA* MNOTE           00273600
&ZMS              SETC  '&ZMS.&STRNAME"'                                00273700
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00273800
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00273900
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00274000
.ZG29R            ANOP  ,                                               00274100
.*----------------------------------------------------------------***   00274200
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00274300
                  AIF   (N'&STRDUMPID LE 1).ZG32A  CK NUM               00274400
&ZMS              SETC  '"STRDUMPID='           *KPOSA* MNOTE           00274500
&ZMS              SETC  '&ZMS.&STRDUMPID"'                              00274600
&ZMS              SETC  '&ZMS "STRDUMPID"'                              00274700
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00274800
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00274900
.ZG32A            ANOP  ,                                               00275000
.*-------------------------------------------------------------------   00275100
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00275200
&ZXSTRDUMPID      SETC  'INPUT'     SET IN/OUTPUT                       00275300
&XSTRDUMPID       SETC  '&STRDUMPID(1)'         SET XVARIABLE           00275400
                  AIF   (N'&STRDUMPID GT 1).ZG32B  MULTI PARMS          00275500
&XSTRDUMPID       SETC  '&STRDUMPID'            SET XVARIABLE           00275600
.ZG32B            AIF   (K'&STRDUMPID(1) GT 0).ZG32C                    00275700
&ZXSTRDUMPID      SETC  ''          RESET IN/OUTPUT                     00275800
&ZMS              SETC  ' '         *KRQDA*                             00275900
&ZMS              SETC  '&ZMS "STRDUMPID" KEY AND ITS ARGUMENT'         00276000
                  MNOTE 8,' &ZMS ARE REQUIRED.'                         00276100
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00276200
.ZG32C            ANOP  ,                                               00276300
.*-------------------------------------------------------------------   00276400
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00276500
                  AIF   (K'&ZXSTRDUMPID LE 0).ZG32R  NOT I/O            00276600
                  AIF   ('&XSTRDUMPID'(1,1) NE '(').ZG32R               00276700
&ZCGPR            SETC  '&XSTRDUMPID'(2,K'&XSTRDUMPID-2)                00276800
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG32P                    00276900
                  AIF   (K'&ZCGPR GT 2).ZG32Q                           00277000
                  AIF   ('&ZCGPR' EQ '0').ZG32Q                         00277100
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00277200
                  AIF   (T'&ZCGPR NE 'N').ZG32Q  INVALID REG NAME       00277300
.ZG32P            ANOP  ,                                               00277400
                  AIF   (T'&ZCGPR NE 'N').ZG32R  NON NUMERIC            00277500
                  AIF   ('&ZCGPR' LT '2').ZG32Q                         00277600
                  AIF   ('&ZCGPR' LE '12').ZG32R                        00277700
.ZG32Q            ANOP  ,                                               00277800
&ZMS              SETC  '"STRDUMPID='           *KGPRA* MNOTE           00277900
&ZMS              SETC  '&ZMS.&STRDUMPID"'                              00278000
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00278100
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00278200
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00278300
.ZG32R            ANOP  ,                                               00278400
.*----------------------------------------------------------------***   00278500
.***AG.KKWRD01 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD             00278600
                  AIF   (N'&CLASSTYPE LE 1).ZG35A  CK NUM               00278700
&ZMS              SETC  '"CLASSTYPE='           *KPOSA* MNOTE           00278800
&ZMS              SETC  '&ZMS.&CLASSTYPE"'                              00278900
&ZMS              SETC  '&ZMS "CLASSTYPE"'                              00279000
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00279100
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00279200
.ZG35A            ANOP  ,                                               00279300
.*-------------------------------------------------------------------   00279400
.***AG.KKWRD02 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD             00279500
&XCLASSTYPE       SETC  ''          INITIALIZE XVARIABLE                00279600
.ZG36A   AIF   ('&CLASSTYPE(1)' NE 'CASTOUT').ZG37A                     00279700
&XCLASSTYPE       SETC  'CASTOUT'   SET KEYWORD                         00279800
.*-------------------------------------------------------------------   00279900
.***AG.KKWRD02 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD             00280000
.ZG37A   AIF   ('&CLASSTYPE(1)' NE 'STORAGE').ZG38A                     00280100
&XCLASSTYPE       SETC  'STORAGE'   SET KEYWORD                         00280200
.*-------------------------------------------------------------------   00280300
.***AG.KKWRD03 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD             00280400
.ZG38A            AIF   (K'&XCLASSTYPE GT 0).ZG38C  KEYWORD             00280500
                  AIF   (K'&CLASSTYPE(1) LE 0).ZG38B                    00280600
&ZMS              SETC  '"CLASSTYPE='           *KUKWA* MNOTE           00280700
&ZMS              SETC  '&ZMS.&CLASSTYPE"'                              00280800
&ZMS              SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '       00280900
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00281000
&ZMS              SETC  '&ZMS "CASTOUT"'        VALID KEYWORD           00281100
&ZMS              SETC  '&ZMS OR "STORAGE".'    VALID KEYWORD           00281200
                  MNOTE 8,' &ZMS '                                      00281300
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00281400
.ZG38B            ANOP  ,                                               00281500
&XCLASSTYPE       SETC  'CASTOUT'   SET DEFAULT KEYWORD                 00281600
.ZG38C            ANOP  ,                                               00281700
&ZXCLASSTYPE      SETC  'INPUT'     SET IN/OUTPUT                       00281800
.*-------------------------------------------------------------------   00281900
.***AG.KKWRD04 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD             00282000
                  AIF   (K'&CLASSTYPE(1) GT 0).ZG38D  VALID             00282100
&ZXCLASSTYPE      SETC  ''          RESET IN/OUTPUT                     00282200
&ZMS              SETC  'THE'                                           00282300
&ZMS              SETC  '&ZMS "CLASSTYPE" KEY AND ITS ARGUMENT'         00282400
&ZMS              SETC  '&ZMS ARE REQUIRED.'                            00282500
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00282600
&ZMS              SETC  '&ZMS "CASTOUT"'        VALID KEYWORD           00282700
&ZMS              SETC  '&ZMS OR "STORAGE".'    VALID KEYWORD           00282800
                  MNOTE 8,' &ZMS '                                      00282900
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00283000
.ZG38D            ANOP  ,                                               00283100
.*------------------------------------------------------------------    00283200
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00283300
&XCLASSLEVEL      SETC  ''          INITIALIZE XVARIABLE                00283400
.*-------------------------------------------------------------------   00283500
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00283600
.ZG41             ANOP  ,                                               00283700
                  AIF   (K'&CLASSLEVEL(1) LE 0).ZG41A                   00283800
&ZTLC             SETC 'SUMMARY'                                        00283900
                  AIF   ('&CLASSLEVEL(1)' NE '&ZTLC').ZG48              00284000
&XCLASSLEVEL      SETC  'SUMMARY'   SET KEYWORD                         00284100
                  AIF   (N'&CLASSLEVEL LE 1).ZG41A  CK NUM              00284200
&ZMS              SETC  '"CLASSLEVEL='          *KPOSA* MNOTE           00284300
&ZMS              SETC  '&ZMS.&CLASSLEVEL"'                             00284400
&ZMS              SETC  '&ZMS "CLASSLEVEL"'                             00284500
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00284600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00284700
.ZG41A            ANOP  ,                                               00284800
.*------------------------------------------------------------------    00284900
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00285000
&ZCVAL            SETC ''           CLEAR ERROR KEY ACCUMULATOR         00285100
.ZG41A0           AIF   (K'&CLASSVAL LE 0).ZG41A1  OK                   00285200
&ZCVAL            SETC '&ZCVAL CLASSVAL'        INCORRECT KEY USED      00285300
.ZG41A1           AIF   (K'&STARTPOS LE 0).ZG41A2  OK                   00285400
&ZCVAL            SETC '&ZCVAL STARTPOS'        INCORRECT KEY USED      00285500
.ZG41A2           AIF   (K'&ENDPOS LE 0).ZG41A3  OK                     00285600
&ZCVAL            SETC '&ZCVAL ENDPOS'          INCORRECT KEY USED      00285700
.ZG41A3           AIF   (K'&ORDER LE 0).ZG41A4  OK                      00285800
&ZCVAL            SETC '&ZCVAL ORDER'           INCORRECT KEY USED      00285900
.ZG41A4           AIF   (K'&ADJUNCT LE 0).ZG41A5  OK                    00286000
&ZCVAL            SETC '&ZCVAL ADJUNCT'         INCORRECT KEY USED      00286100
.ZG41A5           AIF   (K'&ENTRYDATA LE 0).ZG41A6  OK                  00286200
&ZCVAL            SETC '&ZCVAL ENTRYDATA'       INCORRECT KEY USED      00286300
.ZG41A6           AIF   (K'&ZCVAL LE 0).ZG41A7  OK                      00286400
&ZCVAL            SETC '&ZCVAL'(2,K'&ZCVAL-1)                           00286500
&ZMS              SETC  '"CLASSLEVEL'           *KMEIA* MNOTE           00286600
&ZMS              SETC  '&ZMS.=&CLASSLEVEL"'                            00286700
&ZMS              SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'            00286800
                  MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'            00286900
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00287000
.ZG41A7           ANOP  ,                                               00287100
.*----------------------------------------------------------------***   00287200
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00287300
                  AIF   (N'&STARTVAL LE 1).ZG43A  CK NUM                00287400
&ZMS              SETC  '"STARTVAL='            *KPOSA* MNOTE           00287500
&ZMS              SETC  '&ZMS.&STARTVAL"'                               00287600
&ZMS              SETC  '&ZMS "STARTVAL"'                               00287700
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00287800
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00287900
.ZG43A            ANOP  ,                                               00288000
.*-------------------------------------------------------------------   00288100
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00288200
&ZXSTARTVAL       SETC  'INPUT'     SET IN/OUTPUT                       00288300
&XSTARTVAL        SETC  'ALL'                                           00288400
                  AIF   (K'&STARTVAL(1) LE 0).ZG43B  PARM               00288500
&XSTARTVAL        SETC  '&STARTVAL(1)'          SET XVARIABLE           00288600
                  AIF   (N'&STARTVAL GT 1).ZG43B  MULTI PARMS           00288700
&XSTARTVAL        SETC  '&STARTVAL'             SET XVARIABLE           00288800
.ZG43B            ANOP  ,                                               00288900
.*-------------------------------------------------------------------   00289000
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00289100
                  AIF   (K'&ZXSTARTVAL LE 0).ZG43R  NOT I/O             00289200
                  AIF   ('&XSTARTVAL' EQ 'ALL').ZG43R                   00289300
                  AIF   ('&XSTARTVAL'(1,1) NE '(').ZG43R                00289400
&ZCGPR            SETC  '&XSTARTVAL'(2,K'&XSTARTVAL-2)                  00289500
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG43P                    00289600
                  AIF   (K'&ZCGPR GT 2).ZG43Q                           00289700
                  AIF   ('&ZCGPR' EQ '0').ZG43Q                         00289800
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00289900
                  AIF   (T'&ZCGPR NE 'N').ZG43Q  INVALID REG NAME       00290000
.ZG43P            ANOP  ,                                               00290100
                  AIF   (T'&ZCGPR NE 'N').ZG43R  NON NUMERIC            00290200
                  AIF   ('&ZCGPR' LT '2').ZG43Q                         00290300
                  AIF   ('&ZCGPR' LE '12').ZG43R                        00290400
.ZG43Q            ANOP  ,                                               00290500
&ZMS              SETC  '"STARTVAL='            *KGPRA* MNOTE           00290600
&ZMS              SETC  '&ZMS.&STARTVAL"'                               00290700
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00290800
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00290900
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00291000
.ZG43R            ANOP  ,                                               00291100
.*----------------------------------------------------------------***   00291200
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00291300
                  AIF   (N'&ENDVAL LE 1).ZG45A  CK NUM                  00291400
&ZMS              SETC  '"ENDVAL='  *KPOSA* MNOTE                       00291500
&ZMS              SETC  '&ZMS.&ENDVAL"'                                 00291600
&ZMS              SETC  '&ZMS "ENDVAL"'                                 00291700
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00291800
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00291900
.ZG45A            ANOP  ,                                               00292000
.*-------------------------------------------------------------------   00292100
.***AG.KXVAR17 NAME, OPT INPUT, KEYS -XVARIABLE                         00292200
&XENDVAL          SETC  'STARTVAL'  SET DEFAULT                         00292300
                  AIF   (K'&ENDVAL(1) LE 0).ZG45C  PARM                 00292400
&XENDVAL          SETC  '&ENDVAL(1)'            SET XVARIABLE           00292500
                  AIF   (N'&ENDVAL GT 1).ZG45B  MULTI PARMS             00292600
&XENDVAL          SETC  '&ENDVAL'   SET XVARIABLE                       00292700
.ZG45B            AIF   (K'&STARTVAL(1) GT 0).ZG45C  KEY                00292800
&ZMS              SETC  '"ENDVAL'   *KDEPA* MNOTE                       00292900
&ZMS              SETC  '&ZMS.=&ENDVAL"'                                00293000
&ZMS              SETC  '&ZMS CAN ONLY BE SPECIFIED IF'                 00293100
&ZMS              SETC  '&ZMS '                                         00293200
&ZMS              SETC  '&ZMS "STARTVAL"'                               00293300
                  MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                    00293400
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00293500
.ZG45C            ANOP  ,                                               00293600
&ZXENDVAL         SETC  'INPUT'     SET IN/OUTPUT                       00293700
.*-------------------------------------------------------------------   00293800
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00293900
                  AIF   (K'&ZXENDVAL LE 0).ZG45R  NOT I/O               00294000
                  AIF   ('&XENDVAL' EQ 'STARTVAL').ZG45R                00294100
                  AIF   ('&XENDVAL'(1,1) NE '(').ZG45R                  00294200
&ZCGPR            SETC  '&XENDVAL'(2,K'&XENDVAL-2)                      00294300
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG45P                    00294400
                  AIF   (K'&ZCGPR GT 2).ZG45Q                           00294500
                  AIF   ('&ZCGPR' EQ '0').ZG45Q                         00294600
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00294700
                  AIF   (T'&ZCGPR NE 'N').ZG45Q  INVALID REG NAME       00294800
.ZG45P            ANOP  ,                                               00294900
                  AIF   (T'&ZCGPR NE 'N').ZG45R  NON NUMERIC            00295000
                  AIF   ('&ZCGPR' LT '2').ZG45Q                         00295100
                  AIF   ('&ZCGPR' LE '12').ZG45R                        00295200
.ZG45Q            ANOP  ,                                               00295300
&ZMS              SETC  '"ENDVAL='  *KGPRA* MNOTE                       00295400
&ZMS              SETC  '&ZMS.&ENDVAL"'                                 00295500
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00295600
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00295700
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00295800
.ZG45R            ANOP  ,                                               00295900
.*-------------------------------------------------------------------   00296000
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00296100
.ZG48             ANOP  ,                                               00296200
&ZTLC             SETC 'DETAIL'                                         00296300
                  AIF   ('&CLASSLEVEL(1)' NE '&ZTLC').ZG55              00296400
&XCLASSLEVEL      SETC  'DETAIL'    SET KEYWORD                         00296500
                  AIF   (N'&CLASSLEVEL LE 1).ZG48A  CK NUM              00296600
&ZMS              SETC  '"CLASSLEVEL='          *KPOSA* MNOTE           00296700
&ZMS              SETC  '&ZMS.&CLASSLEVEL"'                             00296800
&ZMS              SETC  '&ZMS "CLASSLEVEL"'                             00296900
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00297000
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00297100
.ZG48A            ANOP  ,                                               00297200
.*------------------------------------------------------------------    00297300
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00297400
&ZCVAL            SETC ''           CLEAR ERROR KEY ACCUMULATOR         00297500
.ZG48A0           AIF   (K'&CLASSVAL LE 0).ZG48A1  OK                   00297600
&ZCVAL            SETC '&ZCVAL CLASSVAL'        INCORRECT KEY USED      00297700
.ZG48A1           AIF   (K'&STARTPOS LE 0).ZG48A2  OK                   00297800
&ZCVAL            SETC '&ZCVAL STARTPOS'        INCORRECT KEY USED      00297900
.ZG48A2           AIF   (K'&ENDPOS LE 0).ZG48A3  OK                     00298000
&ZCVAL            SETC '&ZCVAL ENDPOS'          INCORRECT KEY USED      00298100
.ZG48A3           AIF   (K'&ORDER LE 0).ZG48A4  OK                      00298200
&ZCVAL            SETC '&ZCVAL ORDER'           INCORRECT KEY USED      00298300
.ZG48A4           AIF   (K'&ADJUNCT LE 0).ZG48A5  OK                    00298400
&ZCVAL            SETC '&ZCVAL ADJUNCT'         INCORRECT KEY USED      00298500
.ZG48A5           AIF   (K'&ENTRYDATA LE 0).ZG48A6  OK                  00298600
&ZCVAL            SETC '&ZCVAL ENTRYDATA'       INCORRECT KEY USED      00298700
.ZG48A6           AIF   (K'&ZCVAL LE 0).ZG48A7  OK                      00298800
&ZCVAL            SETC '&ZCVAL'(2,K'&ZCVAL-1)                           00298900
&ZMS              SETC  '"CLASSLEVEL'           *KMEIA* MNOTE           00299000
&ZMS              SETC  '&ZMS.=&CLASSLEVEL"'                            00299100
&ZMS              SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'            00299200
                  MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'            00299300
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00299400
.ZG48A7           ANOP  ,                                               00299500
.*----------------------------------------------------------------***   00299600
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00299700
                  AIF   (N'&STARTVAL LE 1).ZG50A  CK NUM                00299800
&ZMS              SETC  '"STARTVAL='            *KPOSA* MNOTE           00299900
&ZMS              SETC  '&ZMS.&STARTVAL"'                               00300000
&ZMS              SETC  '&ZMS "STARTVAL"'                               00300100
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00300200
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00300300
.ZG50A            ANOP  ,                                               00300400
.*-------------------------------------------------------------------   00300500
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00300600
&ZXSTARTVAL       SETC  'INPUT'     SET IN/OUTPUT                       00300700
&XSTARTVAL        SETC  'ALL'                                           00300800
                  AIF   (K'&STARTVAL(1) LE 0).ZG50B  PARM               00300900
&XSTARTVAL        SETC  '&STARTVAL(1)'          SET XVARIABLE           00301000
                  AIF   (N'&STARTVAL GT 1).ZG50B  MULTI PARMS           00301100
&XSTARTVAL        SETC  '&STARTVAL'             SET XVARIABLE           00301200
.ZG50B            ANOP  ,                                               00301300
.*-------------------------------------------------------------------   00301400
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00301500
                  AIF   (K'&ZXSTARTVAL LE 0).ZG50R  NOT I/O             00301600
                  AIF   ('&XSTARTVAL' EQ 'ALL').ZG50R                   00301700
                  AIF   ('&XSTARTVAL'(1,1) NE '(').ZG50R                00301800
&ZCGPR            SETC  '&XSTARTVAL'(2,K'&XSTARTVAL-2)                  00301900
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG50P                    00302000
                  AIF   (K'&ZCGPR GT 2).ZG50Q                           00302100
                  AIF   ('&ZCGPR' EQ '0').ZG50Q                         00302200
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00302300
                  AIF   (T'&ZCGPR NE 'N').ZG50Q  INVALID REG NAME       00302400
.ZG50P            ANOP  ,                                               00302500
                  AIF   (T'&ZCGPR NE 'N').ZG50R  NON NUMERIC            00302600
                  AIF   ('&ZCGPR' LT '2').ZG50Q                         00302700
                  AIF   ('&ZCGPR' LE '12').ZG50R                        00302800
.ZG50Q            ANOP  ,                                               00302900
&ZMS              SETC  '"STARTVAL='            *KGPRA* MNOTE           00303000
&ZMS              SETC  '&ZMS.&STARTVAL"'                               00303100
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00303200
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00303300
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00303400
.ZG50R            ANOP  ,                                               00303500
.*----------------------------------------------------------------***   00303600
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00303700
                  AIF   (N'&ENDVAL LE 1).ZG52A  CK NUM                  00303800
&ZMS              SETC  '"ENDVAL='  *KPOSA* MNOTE                       00303900
&ZMS              SETC  '&ZMS.&ENDVAL"'                                 00304000
&ZMS              SETC  '&ZMS "ENDVAL"'                                 00304100
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00304200
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00304300
.ZG52A            ANOP  ,                                               00304400
.*-------------------------------------------------------------------   00304500
.***AG.KXVAR17 NAME, OPT INPUT, KEYS -XVARIABLE                         00304600
&XENDVAL          SETC  'STARTVAL'  SET DEFAULT                         00304700
                  AIF   (K'&ENDVAL(1) LE 0).ZG52C  PARM                 00304800
&XENDVAL          SETC  '&ENDVAL(1)'            SET XVARIABLE           00304900
                  AIF   (N'&ENDVAL GT 1).ZG52B  MULTI PARMS             00305000
&XENDVAL          SETC  '&ENDVAL'   SET XVARIABLE                       00305100
.ZG52B            AIF   (K'&STARTVAL(1) GT 0).ZG52C  KEY                00305200
&ZMS              SETC  '"ENDVAL'   *KDEPA* MNOTE                       00305300
&ZMS              SETC  '&ZMS.=&ENDVAL"'                                00305400
&ZMS              SETC  '&ZMS CAN ONLY BE SPECIFIED IF'                 00305500
&ZMS              SETC  '&ZMS '                                         00305600
&ZMS              SETC  '&ZMS "STARTVAL"'                               00305700
                  MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                    00305800
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00305900
.ZG52C            ANOP  ,                                               00306000
&ZXENDVAL         SETC  'INPUT'     SET IN/OUTPUT                       00306100
.*-------------------------------------------------------------------   00306200
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00306300
                  AIF   (K'&ZXENDVAL LE 0).ZG52R  NOT I/O               00306400
                  AIF   ('&XENDVAL' EQ 'STARTVAL').ZG52R                00306500
                  AIF   ('&XENDVAL'(1,1) NE '(').ZG52R                  00306600
&ZCGPR            SETC  '&XENDVAL'(2,K'&XENDVAL-2)                      00306700
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG52P                    00306800
                  AIF   (K'&ZCGPR GT 2).ZG52Q                           00306900
                  AIF   ('&ZCGPR' EQ '0').ZG52Q                         00307000
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00307100
                  AIF   (T'&ZCGPR NE 'N').ZG52Q  INVALID REG NAME       00307200
.ZG52P            ANOP  ,                                               00307300
                  AIF   (T'&ZCGPR NE 'N').ZG52R  NON NUMERIC            00307400
                  AIF   ('&ZCGPR' LT '2').ZG52Q                         00307500
                  AIF   ('&ZCGPR' LE '12').ZG52R                        00307600
.ZG52Q            ANOP  ,                                               00307700
&ZMS              SETC  '"ENDVAL='  *KGPRA* MNOTE                       00307800
&ZMS              SETC  '&ZMS.&ENDVAL"'                                 00307900
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00308000
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00308100
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00308200
.ZG52R            ANOP  ,                                               00308300
.*-------------------------------------------------------------------   00308400
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00308500
.ZG55             ANOP  ,                                               00308600
&ZTLC             SETC 'ENTRY'                                          00308700
                  AIF   ('&CLASSLEVEL(1)' NE '&ZTLC').ZG80              00308800
&XCLASSLEVEL      SETC  'ENTRY'     SET KEYWORD                         00308900
                  AIF   (N'&CLASSLEVEL LE 1).ZG55A  CK NUM              00309000
&ZMS              SETC  '"CLASSLEVEL='          *KPOSA* MNOTE           00309100
&ZMS              SETC  '&ZMS.&CLASSLEVEL"'                             00309200
&ZMS              SETC  '&ZMS "CLASSLEVEL"'                             00309300
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00309400
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00309500
.ZG55A            ANOP  ,                                               00309600
.*------------------------------------------------------------------    00309700
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00309800
&ZCVAL            SETC ''           CLEAR ERROR KEY ACCUMULATOR         00309900
.ZG55A0           AIF   (K'&STARTVAL LE 0).ZG55A1  OK                   00310000
&ZCVAL            SETC '&ZCVAL STARTVAL'        INCORRECT KEY USED      00310100
.ZG55A1           AIF   (K'&ENDVAL LE 0).ZG55A2  OK                     00310200
&ZCVAL            SETC '&ZCVAL ENDVAL'          INCORRECT KEY USED      00310300
.ZG55A2           AIF   (K'&ZCVAL LE 0).ZG55A3  OK                      00310400
&ZCVAL            SETC '&ZCVAL'(2,K'&ZCVAL-1)                           00310500
&ZMS              SETC  '"CLASSLEVEL'           *KMEIA* MNOTE           00310600
&ZMS              SETC  '&ZMS.=&CLASSLEVEL"'                            00310700
&ZMS              SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'            00310800
                  MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'            00310900
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00311000
.ZG55A3           ANOP  ,                                               00311100
.*----------------------------------------------------------------***   00311200
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00311300
                  AIF   (N'&CLASSVAL LE 1).ZG57A  CK NUM                00311400
&ZMS              SETC  '"CLASSVAL='            *KPOSA* MNOTE           00311500
&ZMS              SETC  '&ZMS.&CLASSVAL"'                               00311600
&ZMS              SETC  '&ZMS "CLASSVAL"'                               00311700
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00311800
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00311900
.ZG57A            ANOP  ,                                               00312000
.*-------------------------------------------------------------------   00312100
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00312200
&ZXCLASSVAL       SETC  'INPUT'     SET IN/OUTPUT                       00312300
&XCLASSVAL        SETC  '&CLASSVAL(1)'          SET XVARIABLE           00312400
                  AIF   (N'&CLASSVAL GT 1).ZG57B  MULTI PARMS           00312500
&XCLASSVAL        SETC  '&CLASSVAL'             SET XVARIABLE           00312600
.ZG57B            AIF   (K'&CLASSVAL(1) GT 0).ZG57C                     00312700
&ZXCLASSVAL       SETC  ''          RESET IN/OUTPUT                     00312800
&ZMS              SETC  ' '         *KRQDA*                             00312900
&ZMS              SETC  '&ZMS "CLASSVAL" KEY AND ITS ARGUMENT'          00313000
                  MNOTE 8,' &ZMS ARE REQUIRED.'                         00313100
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00313200
.ZG57C            ANOP  ,                                               00313300
.*-------------------------------------------------------------------   00313400
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00313500
                  AIF   (K'&ZXCLASSVAL LE 0).ZG57R  NOT I/O             00313600
                  AIF   ('&XCLASSVAL'(1,1) NE '(').ZG57R                00313700
&ZCGPR            SETC  '&XCLASSVAL'(2,K'&XCLASSVAL-2)                  00313800
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG57P                    00313900
                  AIF   (K'&ZCGPR GT 2).ZG57Q                           00314000
                  AIF   ('&ZCGPR' EQ '0').ZG57Q                         00314100
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00314200
                  AIF   (T'&ZCGPR NE 'N').ZG57Q  INVALID REG NAME       00314300
.ZG57P            ANOP  ,                                               00314400
                  AIF   (T'&ZCGPR NE 'N').ZG57R  NON NUMERIC            00314500
                  AIF   ('&ZCGPR' LT '2').ZG57Q                         00314600
                  AIF   ('&ZCGPR' LE '12').ZG57R                        00314700
.ZG57Q            ANOP  ,                                               00314800
&ZMS              SETC  '"CLASSVAL='            *KGPRA* MNOTE           00314900
&ZMS              SETC  '&ZMS.&CLASSVAL"'                               00315000
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00315100
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00315200
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00315300
.ZG57R            ANOP  ,                                               00315400
.*----------------------------------------------------------------***   00315500
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00315600
                  AIF   (N'&STARTPOS LE 1).ZG60A  CK NUM                00315700
&ZMS              SETC  '"STARTPOS='            *KPOSA* MNOTE           00315800
&ZMS              SETC  '&ZMS.&STARTPOS"'                               00315900
&ZMS              SETC  '&ZMS "STARTPOS"'                               00316000
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00316100
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00316200
.ZG60A            ANOP  ,                                               00316300
.*-------------------------------------------------------------------   00316400
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00316500
&ZXSTARTPOS       SETC  'INPUT'     SET IN/OUTPUT                       00316600
&XSTARTPOS        SETC  'ALL'                                           00316700
                  AIF   (K'&STARTPOS(1) LE 0).ZG60B  PARM               00316800
&XSTARTPOS        SETC  '&STARTPOS(1)'          SET XVARIABLE           00316900
                  AIF   (N'&STARTPOS GT 1).ZG60B  MULTI PARMS           00317000
&XSTARTPOS        SETC  '&STARTPOS'             SET XVARIABLE           00317100
.ZG60B            ANOP  ,                                               00317200
.*-------------------------------------------------------------------   00317300
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00317400
                  AIF   (K'&ZXSTARTPOS LE 0).ZG60R  NOT I/O             00317500
                  AIF   ('&XSTARTPOS' EQ 'ALL').ZG60R                   00317600
                  AIF   ('&XSTARTPOS'(1,1) NE '(').ZG60R                00317700
&ZCGPR            SETC  '&XSTARTPOS'(2,K'&XSTARTPOS-2)                  00317800
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG60P                    00317900
                  AIF   (K'&ZCGPR GT 2).ZG60Q                           00318000
                  AIF   ('&ZCGPR' EQ '0').ZG60Q                         00318100
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00318200
                  AIF   (T'&ZCGPR NE 'N').ZG60Q  INVALID REG NAME       00318300
.ZG60P            ANOP  ,                                               00318400
                  AIF   (T'&ZCGPR NE 'N').ZG60R  NON NUMERIC            00318500
                  AIF   ('&ZCGPR' LT '2').ZG60Q                         00318600
                  AIF   ('&ZCGPR' LE '12').ZG60R                        00318700
.ZG60Q            ANOP  ,                                               00318800
&ZMS              SETC  '"STARTPOS='            *KGPRA* MNOTE           00318900
&ZMS              SETC  '&ZMS.&STARTPOS"'                               00319000
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00319100
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00319200
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00319300
.ZG60R            ANOP  ,                                               00319400
.*----------------------------------------------------------------***   00319500
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00319600
                  AIF   (N'&ENDPOS LE 1).ZG62A  CK NUM                  00319700
&ZMS              SETC  '"ENDPOS='  *KPOSA* MNOTE                       00319800
&ZMS              SETC  '&ZMS.&ENDPOS"'                                 00319900
&ZMS              SETC  '&ZMS "ENDPOS"'                                 00320000
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00320100
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00320200
.ZG62A            ANOP  ,                                               00320300
.*-------------------------------------------------------------------   00320400
.***AG.KXVAR17 NAME, OPT INPUT, KEYS -XVARIABLE                         00320500
&XENDPOS          SETC  'STARTPOS'  SET DEFAULT                         00320600
                  AIF   (K'&ENDPOS(1) LE 0).ZG62C  PARM                 00320700
&XENDPOS          SETC  '&ENDPOS(1)'            SET XVARIABLE           00320800
                  AIF   (N'&ENDPOS GT 1).ZG62B  MULTI PARMS             00320900
&XENDPOS          SETC  '&ENDPOS'   SET XVARIABLE                       00321000
.ZG62B            AIF   (K'&STARTPOS(1) GT 0).ZG62C  KEY                00321100
&ZMS              SETC  '"ENDPOS'   *KDEPA* MNOTE                       00321200
&ZMS              SETC  '&ZMS.=&ENDPOS"'                                00321300
&ZMS              SETC  '&ZMS CAN ONLY BE SPECIFIED IF'                 00321400
&ZMS              SETC  '&ZMS '                                         00321500
&ZMS              SETC  '&ZMS "STARTPOS"'                               00321600
                  MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                    00321700
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00321800
.ZG62C            ANOP  ,                                               00321900
&ZXENDPOS         SETC  'INPUT'     SET IN/OUTPUT                       00322000
.*-------------------------------------------------------------------   00322100
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00322200
                  AIF   (K'&ZXENDPOS LE 0).ZG62R  NOT I/O               00322300
                  AIF   ('&XENDPOS' EQ 'STARTPOS').ZG62R                00322400
                  AIF   ('&XENDPOS'(1,1) NE '(').ZG62R                  00322500
&ZCGPR            SETC  '&XENDPOS'(2,K'&XENDPOS-2)                      00322600
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG62P                    00322700
                  AIF   (K'&ZCGPR GT 2).ZG62Q                           00322800
                  AIF   ('&ZCGPR' EQ '0').ZG62Q                         00322900
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00323000
                  AIF   (T'&ZCGPR NE 'N').ZG62Q  INVALID REG NAME       00323100
.ZG62P            ANOP  ,                                               00323200
                  AIF   (T'&ZCGPR NE 'N').ZG62R  NON NUMERIC            00323300
                  AIF   ('&ZCGPR' LT '2').ZG62Q                         00323400
                  AIF   ('&ZCGPR' LE '12').ZG62R                        00323500
.ZG62Q            ANOP  ,                                               00323600
&ZMS              SETC  '"ENDPOS='  *KGPRA* MNOTE                       00323700
&ZMS              SETC  '&ZMS.&ENDPOS"'                                 00323800
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00323900
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00324000
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00324100
.ZG62R            ANOP  ,                                               00324200
.*----------------------------------------------------------------***   00324300
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00324400
                  AIF   (N'&ORDER LE 1).ZG66A   CK NUM                  00324500
&ZMS              SETC  '"ORDER='   *KPOSA* MNOTE                       00324600
&ZMS              SETC  '&ZMS.&ORDER"'                                  00324700
&ZMS              SETC  '&ZMS "ORDER"'                                  00324800
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00324900
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00325000
.ZG66A            ANOP  ,                                               00325100
.*-------------------------------------------------------------------   00325200
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00325300
&XORDER           SETC  ''          INITIALIZE XVARIABLE                00325400
.ZG67A   AIF   ('&ORDER(1)' NE 'HEAD').ZG68A                            00325500
&XORDER           SETC  'HEAD'      SET KEYWORD                         00325600
.*-------------------------------------------------------------------   00325700
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00325800
.ZG68A   AIF   ('&ORDER(1)' NE 'TAIL').ZG69A                            00325900
&XORDER           SETC  'TAIL'      SET KEYWORD                         00326000
.*-------------------------------------------------------------------   00326100
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00326200
.ZG69A            AIF   (K'&XORDER GT 0).ZG69C  KEYWORD                 00326300
                  AIF   (K'&ORDER(1) LE 0).ZG69B                        00326400
&ZMS              SETC  '"ORDER='   *KUKWA* MNOTE                       00326500
&ZMS              SETC  '&ZMS.&ORDER"'                                  00326600
&ZMS              SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '       00326700
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00326800
&ZMS              SETC  '&ZMS "HEAD"'           VALID KEYWORD           00326900
&ZMS              SETC  '&ZMS OR "TAIL".'       VALID KEYWORD           00327000
                  MNOTE 8,' &ZMS '                                      00327100
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00327200
.ZG69B            ANOP  ,                                               00327300
&XORDER           SETC  'HEAD'      SET DEFAULT KEYWORD                 00327400
.ZG69C            ANOP  ,                                               00327500
&ZXORDER          SETC  'INPUT'     SET IN/OUTPUT                       00327600
.*----------------------------------------------------------------***   00327700
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00327800
                  AIF   (N'&ADJUNCT LE 1).ZG71A  CK NUM                 00327900
&ZMS              SETC  '"ADJUNCT='             *KPOSA* MNOTE           00328000
&ZMS              SETC  '&ZMS.&ADJUNCT"'                                00328100
&ZMS              SETC  '&ZMS "ADJUNCT"'                                00328200
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00328300
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00328400
.ZG71A            ANOP  ,                                               00328500
.*-------------------------------------------------------------------   00328600
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00328700
&XADJUNCT         SETC  ''          INITIALIZE XVARIABLE                00328800
.ZG72A   AIF   ('&ADJUNCT(1)' NE 'NO').ZG73A                            00328900
&XADJUNCT         SETC  'NO'        SET KEYWORD                         00329000
.*-------------------------------------------------------------------   00329100
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00329200
.ZG73A   AIF   ('&ADJUNCT(1)' NE 'YES').ZG74A                           00329300
&XADJUNCT         SETC  'YES'       SET KEYWORD                         00329400
.*-------------------------------------------------------------------   00329500
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00329600
.ZG74A            AIF   (K'&XADJUNCT GT 0).ZG74C  KEYWORD               00329700
                  AIF   (K'&ADJUNCT(1) LE 0).ZG74B                      00329800
&ZMS              SETC  '"ADJUNCT='             *KUKWA* MNOTE           00329900
&ZMS              SETC  '&ZMS.&ADJUNCT"'                                00330000
&ZMS              SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '       00330100
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00330200
&ZMS              SETC  '&ZMS "NO"'             VALID KEYWORD           00330300
&ZMS              SETC  '&ZMS OR "YES".'        VALID KEYWORD           00330400
                  MNOTE 8,' &ZMS '                                      00330500
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00330600
.ZG74B            ANOP  ,                                               00330700
&XADJUNCT         SETC  'NO'        SET DEFAULT KEYWORD                 00330800
.ZG74C            ANOP  ,                                               00330900
&ZXADJUNCT        SETC  'INPUT'     SET IN/OUTPUT                       00331000
.*----------------------------------------------------------------***   00331100
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00331200
                  AIF   (N'&ENTRYDATA LE 1).ZG76A  CK NUM               00331300
&ZMS              SETC  '"ENTRYDATA='           *KPOSA* MNOTE           00331400
&ZMS              SETC  '&ZMS.&ENTRYDATA"'                              00331500
&ZMS              SETC  '&ZMS "ENTRYDATA"'                              00331600
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00331700
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00331800
.ZG76A            ANOP  ,                                               00331900
.*-------------------------------------------------------------------   00332000
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00332100
&XENTRYDATA       SETC  ''          INITIALIZE XVARIABLE                00332200
.ZG77A   AIF   ('&ENTRYDATA(1)' NE 'NO').ZG78A                          00332300
&XENTRYDATA       SETC  'NO'        SET KEYWORD                         00332400
.*-------------------------------------------------------------------   00332500
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00332600
.ZG78A   AIF   ('&ENTRYDATA(1)' NE 'YES').ZG79A                         00332700
&XENTRYDATA       SETC  'YES'       SET KEYWORD                         00332800
.*-------------------------------------------------------------------   00332900
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00333000
.ZG79A            AIF   (K'&XENTRYDATA GT 0).ZG79C  KEYWORD             00333100
                  AIF   (K'&ENTRYDATA(1) LE 0).ZG79B                    00333200
&ZMS              SETC  '"ENTRYDATA='           *KUKWA* MNOTE           00333300
&ZMS              SETC  '&ZMS.&ENTRYDATA"'                              00333400
&ZMS              SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '       00333500
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00333600
&ZMS              SETC  '&ZMS "NO"'             VALID KEYWORD           00333700
&ZMS              SETC  '&ZMS OR "YES".'        VALID KEYWORD           00333800
                  MNOTE 8,' &ZMS '                                      00333900
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00334000
.ZG79B            ANOP  ,                                               00334100
&XENTRYDATA       SETC  'NO'        SET DEFAULT KEYWORD                 00334200
.ZG79C            ANOP  ,                                               00334300
&ZXENTRYDATA      SETC  'INPUT'     SET IN/OUTPUT                       00334400
.*------------------------------------------------------------------    00334500
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00334600
.ZG80             ANOP  ,                                               00334700
&ZXCLASSLEVEL     SETC  'INPUT'     SET IN/OUTPUT                       00334800
                  AIF   (K'&XCLASSLEVEL GT 0).ZG80E  VALID ARG          00334900
                  AIF   (T'&CLASSLEVEL EQ 'O').ZG80D  OMITTED           00335000
&ZASYSLNDX        SETA  0                                               00335100
.ZG80A            ANOP  ,           POSITIONAL MACRO KEY                00335200
&ZASYSLNDX        SETA  &ZASYSLNDX+1                                    00335300
                  AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG80C                00335400
&ZTLC             SETC 'CLASSLEVEL'                                     00335500
                  AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG80A       00335600
.ZG80B            ANOP  ,                                               00335700
&ZXCLASSLEVEL     SETC  ''          RESET IN/OUTPUT                     00335800
&ZMS              SETC  'THE "CLASSLEVEL" KEY'  *KOPTA* MNOTE           00335900
&ZMS              SETC  '&ZMS MUST CONTAIN ONE'                         00336000
                  MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                00336100
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00336200
                  AGO   .ZG80E                                          00336300
.ZG80C            ANOP  ,                                               00336400
&ZXCLASSLEVEL     SETC  ''          RESET IN/OUTPUT                     00336500
&ZMS              SETC  '"CLASSLEVEL='          *KUKWA* MNOTE           00336600
&ZMS              SETC  '&ZMS.&CLASSLEVEL"'                             00336700
&ZMS              SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '       00336800
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00336900
&ZMS              SETC  '&ZMS "SUMMARY",'       VALID KEYWORD           00337000
&ZMS              SETC  '&ZMS "DETAIL",'        VALID KEYWORD           00337100
&ZMS              SETC  '&ZMS OR "ENTRY".'      VALID KEYWORD           00337200
                  MNOTE 8,' &ZMS '                                      00337300
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00337400
                  AGO   .ZG80E                                          00337500
.ZG80D            ANOP  ,                                               00337600
&XCLASSLEVEL      SETC  'SUMMARY'   SET DEFAULT KEYWORD                 00337700
.ZG80E            ANOP  ,                                               00337800
.*------------------------------------------------------------------    00337900
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00338000
                  AIF   (K'&CLASSLEVEL(1) GT 0).ZG80F  PARM             00338100
&XCLASSLEVEL      SETC  ''          ENSURE NULL KEYWORD                 00338200
&ZXCLASSLEVEL     SETC  ''          RESET IN/OUTPUT                     00338300
&ZMS              SETC  'THE'                                           00338400
&ZMS              SETC  '&ZMS "CLASSLEVEL" KEY AND ITS ARGUMENT'        00338500
&ZMS              SETC  '&ZMS ARE REQUIRED.'                            00338600
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00338700
&ZMS              SETC  '&ZMS "SUMMARY",'       VALID KEYWORD           00338800
&ZMS              SETC  '&ZMS "DETAIL",'        VALID KEYWORD           00338900
&ZMS              SETC  '&ZMS OR "ENTRY".'      VALID KEYWORD           00339000
                  MNOTE 8,' &ZMS '                                      00339100
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00339200
.ZG80F            ANOP  ,                                               00339300
.*-------------------------------------------------------------------   00339400
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00339500
.ZG81             ANOP  ,                                               00339600
&ZTLC             SETC 'LISTNUM'                                        00339700
                  AIF   ('&TYPE(1)' NE '&ZTLC').ZG133                   00339800
&XTYPE            SETC  'LISTNUM'   SET KEYWORD                         00339900
                  AIF   (N'&TYPE LE 1).ZG81A    CK NUM                  00340000
&ZMS              SETC  '"TYPE='    *KPOSA* MNOTE                       00340100
&ZMS              SETC  '&ZMS.&TYPE"'                                   00340200
&ZMS              SETC  '&ZMS "TYPE"'                                   00340300
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00340400
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00340500
.ZG81A            ANOP  ,                                               00340600
.*------------------------------------------------------------------    00340700
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00340800
&ZCVAL            SETC ''           CLEAR ERROR KEY ACCUMULATOR         00340900
.ZG81A0           AIF   (K'&STRLEVEL LE 0).ZG81A1  OK                   00341000
&ZCVAL            SETC '&ZCVAL STRLEVEL'        INCORRECT KEY USED      00341100
.ZG81A1           AIF   (K'&CLASSTYPE LE 0).ZG81A2  OK                  00341200
&ZCVAL            SETC '&ZCVAL CLASSTYPE'       INCORRECT KEY USED      00341300
.ZG81A2           AIF   (K'&CLASSLEVEL LE 0).ZG81A3  OK                 00341400
&ZCVAL            SETC '&ZCVAL CLASSLEVEL'      INCORRECT KEY USED      00341500
.ZG81A3           AIF   (K'&CLASSVAL LE 0).ZG81A4  OK                   00341600
&ZCVAL            SETC '&ZCVAL CLASSVAL'        INCORRECT KEY USED      00341700
.ZG81A4           AIF   (K'&ENTRYNAME LE 0).ZG81A5  OK                  00341800
&ZCVAL            SETC '&ZCVAL ENTRYNAME'       INCORRECT KEY USED      00341900
.ZG81A5           AIF   (K'&ENTRYID LE 0).ZG81A6  OK                    00342000
&ZCVAL            SETC '&ZCVAL ENTRYID'         INCORRECT KEY USED      00342100
.ZG81A6           AIF   (K'&EMCLEVEL LE 0).ZG81A7  OK                   00342200
&ZCVAL            SETC '&ZCVAL EMCLEVEL'        INCORRECT KEY USED      00342300
.ZG81A7           AIF   (K'&EQLEVEL LE 0).ZG81A8  OK                    00342400
&ZCVAL            SETC '&ZCVAL EQLEVEL'         INCORRECT KEY USED      00342500
.ZG81A8           AIF   (K'&CONIDVAL LE 0).ZG81A9  OK                   00342600
&ZCVAL            SETC '&ZCVAL CONIDVAL'        INCORRECT KEY USED      00342700
.ZG81A9           AIF   (K'&ZCVAL LE 0).ZG81A10  OK                     00342800
&ZCVAL            SETC '&ZCVAL'(2,K'&ZCVAL-1)                           00342900
&ZMS              SETC  '"TYPE'     *KMEIA* MNOTE                       00343000
&ZMS              SETC  '&ZMS.=&TYPE"'                                  00343100
&ZMS              SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'            00343200
                  MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'            00343300
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00343400
.ZG81A10          ANOP  ,                                               00343500
.*----------------------------------------------------------------***   00343600
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00343700
                  AIF   (N'&STRNAME LE 1).ZG83A  CK NUM                 00343800
&ZMS              SETC  '"STRNAME='             *KPOSA* MNOTE           00343900
&ZMS              SETC  '&ZMS.&STRNAME"'                                00344000
&ZMS              SETC  '&ZMS "STRNAME"'                                00344100
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00344200
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00344300
.ZG83A            ANOP  ,                                               00344400
.*-------------------------------------------------------------------   00344500
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00344600
&ZXSTRNAME        SETC  'INPUT'     SET IN/OUTPUT                       00344700
&XSTRNAME         SETC  '&STRNAME(1)'           SET XVARIABLE           00344800
                  AIF   (N'&STRNAME GT 1).ZG83B  MULTI PARMS            00344900
&XSTRNAME         SETC  '&STRNAME'  SET XVARIABLE                       00345000
.ZG83B            AIF   (K'&STRNAME(1) GT 0).ZG83C                      00345100
&ZXSTRNAME        SETC  ''          RESET IN/OUTPUT                     00345200
&ZMS              SETC  ' '         *KRQDA*                             00345300
&ZMS              SETC  '&ZMS "STRNAME" KEY AND ITS ARGUMENT'           00345400
                  MNOTE 8,' &ZMS ARE REQUIRED.'                         00345500
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00345600
.ZG83C            ANOP  ,                                               00345700
.*-------------------------------------------------------------------   00345800
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00345900
                  AIF   (K'&ZXSTRNAME LE 0).ZG83R  NOT I/O              00346000
                  AIF   ('&XSTRNAME'(1,1) NE '(').ZG83R                 00346100
&ZCGPR            SETC  '&XSTRNAME'(2,K'&XSTRNAME-2)                    00346200
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG83P                    00346300
                  AIF   (K'&ZCGPR GT 2).ZG83Q                           00346400
                  AIF   ('&ZCGPR' EQ '0').ZG83Q                         00346500
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00346600
                  AIF   (T'&ZCGPR NE 'N').ZG83Q  INVALID REG NAME       00346700
.ZG83P            ANOP  ,                                               00346800
                  AIF   (T'&ZCGPR NE 'N').ZG83R  NON NUMERIC            00346900
                  AIF   ('&ZCGPR' LT '2').ZG83Q                         00347000
                  AIF   ('&ZCGPR' LE '12').ZG83R                        00347100
.ZG83Q            ANOP  ,                                               00347200
&ZMS              SETC  '"STRNAME='             *KGPRA* MNOTE           00347300
&ZMS              SETC  '&ZMS.&STRNAME"'                                00347400
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00347500
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00347600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00347700
.ZG83R            ANOP  ,                                               00347800
.*----------------------------------------------------------------***   00347900
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00348000
                  AIF   (N'&STRDUMPID LE 1).ZG86A  CK NUM               00348100
&ZMS              SETC  '"STRDUMPID='           *KPOSA* MNOTE           00348200
&ZMS              SETC  '&ZMS.&STRDUMPID"'                              00348300
&ZMS              SETC  '&ZMS "STRDUMPID"'                              00348400
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00348500
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00348600
.ZG86A            ANOP  ,                                               00348700
.*-------------------------------------------------------------------   00348800
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00348900
&ZXSTRDUMPID      SETC  'INPUT'     SET IN/OUTPUT                       00349000
&XSTRDUMPID       SETC  '&STRDUMPID(1)'         SET XVARIABLE           00349100
                  AIF   (N'&STRDUMPID GT 1).ZG86B  MULTI PARMS          00349200
&XSTRDUMPID       SETC  '&STRDUMPID'            SET XVARIABLE           00349300
.ZG86B            AIF   (K'&STRDUMPID(1) GT 0).ZG86C                    00349400
&ZXSTRDUMPID      SETC  ''          RESET IN/OUTPUT                     00349500
&ZMS              SETC  ' '         *KRQDA*                             00349600
&ZMS              SETC  '&ZMS "STRDUMPID" KEY AND ITS ARGUMENT'         00349700
                  MNOTE 8,' &ZMS ARE REQUIRED.'                         00349800
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00349900
.ZG86C            ANOP  ,                                               00350000
.*-------------------------------------------------------------------   00350100
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00350200
                  AIF   (K'&ZXSTRDUMPID LE 0).ZG86R  NOT I/O            00350300
                  AIF   ('&XSTRDUMPID'(1,1) NE '(').ZG86R               00350400
&ZCGPR            SETC  '&XSTRDUMPID'(2,K'&XSTRDUMPID-2)                00350500
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG86P                    00350600
                  AIF   (K'&ZCGPR GT 2).ZG86Q                           00350700
                  AIF   ('&ZCGPR' EQ '0').ZG86Q                         00350800
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00350900
                  AIF   (T'&ZCGPR NE 'N').ZG86Q  INVALID REG NAME       00351000
.ZG86P            ANOP  ,                                               00351100
                  AIF   (T'&ZCGPR NE 'N').ZG86R  NON NUMERIC            00351200
                  AIF   ('&ZCGPR' LT '2').ZG86Q                         00351300
                  AIF   ('&ZCGPR' LE '12').ZG86R                        00351400
.ZG86Q            ANOP  ,                                               00351500
&ZMS              SETC  '"STRDUMPID='           *KGPRA* MNOTE           00351600
&ZMS              SETC  '&ZMS.&STRDUMPID"'                              00351700
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00351800
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00351900
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00352000
.ZG86R            ANOP  ,                                               00352100
.*------------------------------------------------------------------    00352200
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00352300
&XLISTNUMLEVEL    SETC  ''          INITIALIZE XVARIABLE                00352400
.*-------------------------------------------------------------------   00352500
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00352600
.ZG90             ANOP  ,                                               00352700
                  AIF   (K'&LISTNUMLEVEL(1) LE 0).ZG90A                 00352800
&ZTLC             SETC 'SUMMARY'                                        00352900
                  AIF   ('&LISTNUMLEVEL(1)' NE '&ZTLC').ZG97            00353000
&XLISTNUMLEVEL    SETC  'SUMMARY'   SET KEYWORD                         00353100
                  AIF   (N'&LISTNUMLEVEL LE 1).ZG90A  CK NUM            00353200
&ZMS              SETC  '"LISTNUMLEVEL='        *KPOSA* MNOTE           00353300
&ZMS              SETC  '&ZMS.&LISTNUMLEVEL"'                           00353400
&ZMS              SETC  '&ZMS "LISTNUMLEVEL"'                           00353500
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00353600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00353700
.ZG90A            ANOP  ,                                               00353800
.*------------------------------------------------------------------    00353900
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00354000
&ZCVAL            SETC ''           CLEAR ERROR KEY ACCUMULATOR         00354100
.ZG90A0           AIF   (K'&LISTNUMVAL LE 0).ZG90A1  OK                 00354200
&ZCVAL            SETC '&ZCVAL LISTNUMVAL'      INCORRECT KEY USED      00354300
.ZG90A1           AIF   (K'&ENTRYKEY LE 0).ZG90A2  OK                   00354400
&ZCVAL            SETC '&ZCVAL ENTRYKEY'        INCORRECT KEY USED      00354500
.ZG90A2           AIF   (K'&STARTPOS LE 0).ZG90A3  OK                   00354600
&ZCVAL            SETC '&ZCVAL STARTPOS'        INCORRECT KEY USED      00354700
.ZG90A3           AIF   (K'&ENDPOS LE 0).ZG90A4  OK                     00354800
&ZCVAL            SETC '&ZCVAL ENDPOS'          INCORRECT KEY USED      00354900
.ZG90A4           AIF   (K'&ORDER LE 0).ZG90A5  OK                      00355000
&ZCVAL            SETC '&ZCVAL ORDER'           INCORRECT KEY USED      00355100
.ZG90A5           AIF   (K'&ADJUNCT LE 0).ZG90A6  OK                    00355200
&ZCVAL            SETC '&ZCVAL ADJUNCT'         INCORRECT KEY USED      00355300
.ZG90A6           AIF   (K'&ENTRYDATA LE 0).ZG90A7  OK                  00355400
&ZCVAL            SETC '&ZCVAL ENTRYDATA'       INCORRECT KEY USED      00355500
.ZG90A7           AIF   (K'&ZCVAL LE 0).ZG90A8  OK                      00355600
&ZCVAL            SETC '&ZCVAL'(2,K'&ZCVAL-1)                           00355700
&ZMS              SETC  '"LISTNUMLEVEL'         *KMEIA* MNOTE           00355800
&ZMS              SETC  '&ZMS.=&LISTNUMLEVEL"'                          00355900
&ZMS              SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'            00356000
                  MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'            00356100
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00356200
.ZG90A8           ANOP  ,                                               00356300
.*----------------------------------------------------------------***   00356400
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00356500
                  AIF   (N'&STARTVAL LE 1).ZG92A  CK NUM                00356600
&ZMS              SETC  '"STARTVAL='            *KPOSA* MNOTE           00356700
&ZMS              SETC  '&ZMS.&STARTVAL"'                               00356800
&ZMS              SETC  '&ZMS "STARTVAL"'                               00356900
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00357000
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00357100
.ZG92A            ANOP  ,                                               00357200
.*-------------------------------------------------------------------   00357300
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00357400
&ZXSTARTVAL       SETC  'INPUT'     SET IN/OUTPUT                       00357500
&XSTARTVAL        SETC  'ALL'                                           00357600
                  AIF   (K'&STARTVAL(1) LE 0).ZG92B  PARM               00357700
&XSTARTVAL        SETC  '&STARTVAL(1)'          SET XVARIABLE           00357800
                  AIF   (N'&STARTVAL GT 1).ZG92B  MULTI PARMS           00357900
&XSTARTVAL        SETC  '&STARTVAL'             SET XVARIABLE           00358000
.ZG92B            ANOP  ,                                               00358100
.*-------------------------------------------------------------------   00358200
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00358300
                  AIF   (K'&ZXSTARTVAL LE 0).ZG92R  NOT I/O             00358400
                  AIF   ('&XSTARTVAL' EQ 'ALL').ZG92R                   00358500
                  AIF   ('&XSTARTVAL'(1,1) NE '(').ZG92R                00358600
&ZCGPR            SETC  '&XSTARTVAL'(2,K'&XSTARTVAL-2)                  00358700
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG92P                    00358800
                  AIF   (K'&ZCGPR GT 2).ZG92Q                           00358900
                  AIF   ('&ZCGPR' EQ '0').ZG92Q                         00359000
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00359100
                  AIF   (T'&ZCGPR NE 'N').ZG92Q  INVALID REG NAME       00359200
.ZG92P            ANOP  ,                                               00359300
                  AIF   (T'&ZCGPR NE 'N').ZG92R  NON NUMERIC            00359400
                  AIF   ('&ZCGPR' LT '2').ZG92Q                         00359500
                  AIF   ('&ZCGPR' LE '12').ZG92R                        00359600
.ZG92Q            ANOP  ,                                               00359700
&ZMS              SETC  '"STARTVAL='            *KGPRA* MNOTE           00359800
&ZMS              SETC  '&ZMS.&STARTVAL"'                               00359900
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00360000
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00360100
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00360200
.ZG92R            ANOP  ,                                               00360300
.*----------------------------------------------------------------***   00360400
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00360500
                  AIF   (N'&ENDVAL LE 1).ZG94A  CK NUM                  00360600
&ZMS              SETC  '"ENDVAL='  *KPOSA* MNOTE                       00360700
&ZMS              SETC  '&ZMS.&ENDVAL"'                                 00360800
&ZMS              SETC  '&ZMS "ENDVAL"'                                 00360900
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00361000
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00361100
.ZG94A            ANOP  ,                                               00361200
.*-------------------------------------------------------------------   00361300
.***AG.KXVAR17 NAME, OPT INPUT, KEYS -XVARIABLE                         00361400
&XENDVAL          SETC  'STARTVAL'  SET DEFAULT                         00361500
                  AIF   (K'&ENDVAL(1) LE 0).ZG94C  PARM                 00361600
&XENDVAL          SETC  '&ENDVAL(1)'            SET XVARIABLE           00361700
                  AIF   (N'&ENDVAL GT 1).ZG94B  MULTI PARMS             00361800
&XENDVAL          SETC  '&ENDVAL'   SET XVARIABLE                       00361900
.ZG94B            AIF   (K'&STARTVAL(1) GT 0).ZG94C  KEY                00362000
&ZMS              SETC  '"ENDVAL'   *KDEPA* MNOTE                       00362100
&ZMS              SETC  '&ZMS.=&ENDVAL"'                                00362200
&ZMS              SETC  '&ZMS CAN ONLY BE SPECIFIED IF'                 00362300
&ZMS              SETC  '&ZMS '                                         00362400
&ZMS              SETC  '&ZMS "STARTVAL"'                               00362500
                  MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                    00362600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00362700
.ZG94C            ANOP  ,                                               00362800
&ZXENDVAL         SETC  'INPUT'     SET IN/OUTPUT                       00362900
.*-------------------------------------------------------------------   00363000
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00363100
                  AIF   (K'&ZXENDVAL LE 0).ZG94R  NOT I/O               00363200
                  AIF   ('&XENDVAL' EQ 'STARTVAL').ZG94R                00363300
                  AIF   ('&XENDVAL'(1,1) NE '(').ZG94R                  00363400
&ZCGPR            SETC  '&XENDVAL'(2,K'&XENDVAL-2)                      00363500
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG94P                    00363600
                  AIF   (K'&ZCGPR GT 2).ZG94Q                           00363700
                  AIF   ('&ZCGPR' EQ '0').ZG94Q                         00363800
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00363900
                  AIF   (T'&ZCGPR NE 'N').ZG94Q  INVALID REG NAME       00364000
.ZG94P            ANOP  ,                                               00364100
                  AIF   (T'&ZCGPR NE 'N').ZG94R  NON NUMERIC            00364200
                  AIF   ('&ZCGPR' LT '2').ZG94Q                         00364300
                  AIF   ('&ZCGPR' LE '12').ZG94R                        00364400
.ZG94Q            ANOP  ,                                               00364500
&ZMS              SETC  '"ENDVAL='  *KGPRA* MNOTE                       00364600
&ZMS              SETC  '&ZMS.&ENDVAL"'                                 00364700
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00364800
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00364900
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00365000
.ZG94R            ANOP  ,                                               00365100
.*-------------------------------------------------------------------   00365200
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00365300
.ZG97             ANOP  ,                                               00365400
&ZTLC             SETC 'DETAIL'                                         00365500
                  AIF   ('&LISTNUMLEVEL(1)' NE '&ZTLC').ZG104           00365600
&XLISTNUMLEVEL    SETC  'DETAIL'    SET KEYWORD                         00365700
                  AIF   (N'&LISTNUMLEVEL LE 1).ZG97A  CK NUM            00365800
&ZMS              SETC  '"LISTNUMLEVEL='        *KPOSA* MNOTE           00365900
&ZMS              SETC  '&ZMS.&LISTNUMLEVEL"'                           00366000
&ZMS              SETC  '&ZMS "LISTNUMLEVEL"'                           00366100
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00366200
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00366300
.ZG97A            ANOP  ,                                               00366400
.*------------------------------------------------------------------    00366500
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00366600
&ZCVAL            SETC ''           CLEAR ERROR KEY ACCUMULATOR         00366700
.ZG97A0           AIF   (K'&LISTNUMVAL LE 0).ZG97A1  OK                 00366800
&ZCVAL            SETC '&ZCVAL LISTNUMVAL'      INCORRECT KEY USED      00366900
.ZG97A1           AIF   (K'&ENTRYKEY LE 0).ZG97A2  OK                   00367000
&ZCVAL            SETC '&ZCVAL ENTRYKEY'        INCORRECT KEY USED      00367100
.ZG97A2           AIF   (K'&STARTPOS LE 0).ZG97A3  OK                   00367200
&ZCVAL            SETC '&ZCVAL STARTPOS'        INCORRECT KEY USED      00367300
.ZG97A3           AIF   (K'&ENDPOS LE 0).ZG97A4  OK                     00367400
&ZCVAL            SETC '&ZCVAL ENDPOS'          INCORRECT KEY USED      00367500
.ZG97A4           AIF   (K'&ORDER LE 0).ZG97A5  OK                      00367600
&ZCVAL            SETC '&ZCVAL ORDER'           INCORRECT KEY USED      00367700
.ZG97A5           AIF   (K'&ADJUNCT LE 0).ZG97A6  OK                    00367800
&ZCVAL            SETC '&ZCVAL ADJUNCT'         INCORRECT KEY USED      00367900
.ZG97A6           AIF   (K'&ENTRYDATA LE 0).ZG97A7  OK                  00368000
&ZCVAL            SETC '&ZCVAL ENTRYDATA'       INCORRECT KEY USED      00368100
.ZG97A7           AIF   (K'&ZCVAL LE 0).ZG97A8  OK                      00368200
&ZCVAL            SETC '&ZCVAL'(2,K'&ZCVAL-1)                           00368300
&ZMS              SETC  '"LISTNUMLEVEL'         *KMEIA* MNOTE           00368400
&ZMS              SETC  '&ZMS.=&LISTNUMLEVEL"'                          00368500
&ZMS              SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'            00368600
                  MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'            00368700
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00368800
.ZG97A8           ANOP  ,                                               00368900
.*----------------------------------------------------------------***   00369000
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00369100
                  AIF   (N'&STARTVAL LE 1).ZG99A  CK NUM                00369200
&ZMS              SETC  '"STARTVAL='            *KPOSA* MNOTE           00369300
&ZMS              SETC  '&ZMS.&STARTVAL"'                               00369400
&ZMS              SETC  '&ZMS "STARTVAL"'                               00369500
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00369600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00369700
.ZG99A            ANOP  ,                                               00369800
.*-------------------------------------------------------------------   00369900
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00370000
&ZXSTARTVAL       SETC  'INPUT'     SET IN/OUTPUT                       00370100
&XSTARTVAL        SETC  'ALL'                                           00370200
                  AIF   (K'&STARTVAL(1) LE 0).ZG99B  PARM               00370300
&XSTARTVAL        SETC  '&STARTVAL(1)'          SET XVARIABLE           00370400
                  AIF   (N'&STARTVAL GT 1).ZG99B  MULTI PARMS           00370500
&XSTARTVAL        SETC  '&STARTVAL'             SET XVARIABLE           00370600
.ZG99B            ANOP  ,                                               00370700
.*-------------------------------------------------------------------   00370800
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00370900
                  AIF   (K'&ZXSTARTVAL LE 0).ZG99R  NOT I/O             00371000
                  AIF   ('&XSTARTVAL' EQ 'ALL').ZG99R                   00371100
                  AIF   ('&XSTARTVAL'(1,1) NE '(').ZG99R                00371200
&ZCGPR            SETC  '&XSTARTVAL'(2,K'&XSTARTVAL-2)                  00371300
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG99P                    00371400
                  AIF   (K'&ZCGPR GT 2).ZG99Q                           00371500
                  AIF   ('&ZCGPR' EQ '0').ZG99Q                         00371600
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00371700
                  AIF   (T'&ZCGPR NE 'N').ZG99Q  INVALID REG NAME       00371800
.ZG99P            ANOP  ,                                               00371900
                  AIF   (T'&ZCGPR NE 'N').ZG99R  NON NUMERIC            00372000
                  AIF   ('&ZCGPR' LT '2').ZG99Q                         00372100
                  AIF   ('&ZCGPR' LE '12').ZG99R                        00372200
.ZG99Q            ANOP  ,                                               00372300
&ZMS              SETC  '"STARTVAL='            *KGPRA* MNOTE           00372400
&ZMS              SETC  '&ZMS.&STARTVAL"'                               00372500
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00372600
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00372700
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00372800
.ZG99R            ANOP  ,                                               00372900
.*----------------------------------------------------------------***   00373000
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00373100
                  AIF   (N'&ENDVAL LE 1).ZG101A  CK NUM                 00373200
&ZMS              SETC  '"ENDVAL='  *KPOSA* MNOTE                       00373300
&ZMS              SETC  '&ZMS.&ENDVAL"'                                 00373400
&ZMS              SETC  '&ZMS "ENDVAL"'                                 00373500
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00373600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00373700
.ZG101A           ANOP  ,                                               00373800
.*-------------------------------------------------------------------   00373900
.***AG.KXVAR17 NAME, OPT INPUT, KEYS -XVARIABLE                         00374000
&XENDVAL          SETC  'STARTVAL'  SET DEFAULT                         00374100
                  AIF   (K'&ENDVAL(1) LE 0).ZG101C  PARM                00374200
&XENDVAL          SETC  '&ENDVAL(1)'            SET XVARIABLE           00374300
                  AIF   (N'&ENDVAL GT 1).ZG101B  MULTI PARMS            00374400
&XENDVAL          SETC  '&ENDVAL'   SET XVARIABLE                       00374500
.ZG101B           AIF   (K'&STARTVAL(1) GT 0).ZG101C  KEY               00374600
&ZMS              SETC  '"ENDVAL'   *KDEPA* MNOTE                       00374700
&ZMS              SETC  '&ZMS.=&ENDVAL"'                                00374800
&ZMS              SETC  '&ZMS CAN ONLY BE SPECIFIED IF'                 00374900
&ZMS              SETC  '&ZMS '                                         00375000
&ZMS              SETC  '&ZMS "STARTVAL"'                               00375100
                  MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                    00375200
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00375300
.ZG101C           ANOP  ,                                               00375400
&ZXENDVAL         SETC  'INPUT'     SET IN/OUTPUT                       00375500
.*-------------------------------------------------------------------   00375600
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00375700
                  AIF   (K'&ZXENDVAL LE 0).ZG101R  NOT I/O              00375800
                  AIF   ('&XENDVAL' EQ 'STARTVAL').ZG101R               00375900
                  AIF   ('&XENDVAL'(1,1) NE '(').ZG101R                 00376000
&ZCGPR            SETC  '&XENDVAL'(2,K'&XENDVAL-2)                      00376100
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG101P                   00376200
                  AIF   (K'&ZCGPR GT 2).ZG101Q                          00376300
                  AIF   ('&ZCGPR' EQ '0').ZG101Q                        00376400
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00376500
                  AIF   (T'&ZCGPR NE 'N').ZG101Q  INVALID REG NAME      00376600
.ZG101P           ANOP  ,                                               00376700
                  AIF   (T'&ZCGPR NE 'N').ZG101R  NON NUMERIC           00376800
                  AIF   ('&ZCGPR' LT '2').ZG101Q                        00376900
                  AIF   ('&ZCGPR' LE '12').ZG101R                       00377000
.ZG101Q           ANOP  ,                                               00377100
&ZMS              SETC  '"ENDVAL='  *KGPRA* MNOTE                       00377200
&ZMS              SETC  '&ZMS.&ENDVAL"'                                 00377300
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00377400
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00377500
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00377600
.ZG101R           ANOP  ,                                               00377700
.*-------------------------------------------------------------------   00377800
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00377900
.ZG104            ANOP  ,                                               00378000
&ZTLC             SETC 'ENTRY'                                          00378100
                  AIF   ('&LISTNUMLEVEL(1)' NE '&ZTLC').ZG132           00378200
&XLISTNUMLEVEL    SETC  'ENTRY'     SET KEYWORD                         00378300
                  AIF   (N'&LISTNUMLEVEL LE 1).ZG104A  CK NUM           00378400
&ZMS              SETC  '"LISTNUMLEVEL='        *KPOSA* MNOTE           00378500
&ZMS              SETC  '&ZMS.&LISTNUMLEVEL"'                           00378600
&ZMS              SETC  '&ZMS "LISTNUMLEVEL"'                           00378700
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00378800
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00378900
.ZG104A           ANOP  ,                                               00379000
.*------------------------------------------------------------------    00379100
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00379200
&ZCVAL            SETC ''           CLEAR ERROR KEY ACCUMULATOR         00379300
.ZG104A0          AIF   (K'&STARTVAL LE 0).ZG104A1  OK                  00379400
&ZCVAL            SETC '&ZCVAL STARTVAL'        INCORRECT KEY USED      00379500
.ZG104A1          AIF   (K'&ENDVAL LE 0).ZG104A2  OK                    00379600
&ZCVAL            SETC '&ZCVAL ENDVAL'          INCORRECT KEY USED      00379700
.ZG104A2          AIF   (K'&ZCVAL LE 0).ZG104A3  OK                     00379800
&ZCVAL            SETC '&ZCVAL'(2,K'&ZCVAL-1)                           00379900
&ZMS              SETC  '"LISTNUMLEVEL'         *KMEIA* MNOTE           00380000
&ZMS              SETC  '&ZMS.=&LISTNUMLEVEL"'                          00380100
&ZMS              SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'            00380200
                  MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'            00380300
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00380400
.ZG104A3          ANOP  ,                                               00380500
.*----------------------------------------------------------------***   00380600
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00380700
                  AIF   (N'&LISTNUMVAL LE 1).ZG106A  CK NUM             00380800
&ZMS              SETC  '"LISTNUMVAL='          *KPOSA* MNOTE           00380900
&ZMS              SETC  '&ZMS.&LISTNUMVAL"'                             00381000
&ZMS              SETC  '&ZMS "LISTNUMVAL"'                             00381100
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00381200
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00381300
.ZG106A           ANOP  ,                                               00381400
.*-------------------------------------------------------------------   00381500
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00381600
&ZXLISTNUMVAL     SETC  'INPUT'     SET IN/OUTPUT                       00381700
&XLISTNUMVAL      SETC  '&LISTNUMVAL(1)'        SET XVARIABLE           00381800
                  AIF   (N'&LISTNUMVAL GT 1).ZG106B  MULTI PARMS        00381900
&XLISTNUMVAL      SETC  '&LISTNUMVAL'           SET XVARIABLE           00382000
.ZG106B           AIF   (K'&LISTNUMVAL(1) GT 0).ZG106C                  00382100
&ZXLISTNUMVAL     SETC  ''          RESET IN/OUTPUT                     00382200
&ZMS              SETC  ' '         *KRQDA*                             00382300
&ZMS              SETC  '&ZMS "LISTNUMVAL" KEY AND ITS ARGUMENT'        00382400
                  MNOTE 8,' &ZMS ARE REQUIRED.'                         00382500
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00382600
.ZG106C           ANOP  ,                                               00382700
.*-------------------------------------------------------------------   00382800
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00382900
                  AIF   (K'&ZXLISTNUMVAL LE 0).ZG106R  NOT I/O          00383000
                  AIF   ('&XLISTNUMVAL'(1,1) NE '(').ZG106R             00383100
&ZCGPR            SETC  '&XLISTNUMVAL'(2,K'&XLISTNUMVAL-2)              00383200
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG106P                   00383300
                  AIF   (K'&ZCGPR GT 2).ZG106Q                          00383400
                  AIF   ('&ZCGPR' EQ '0').ZG106Q                        00383500
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00383600
                  AIF   (T'&ZCGPR NE 'N').ZG106Q  INVALID REG NAME      00383700
.ZG106P           ANOP  ,                                               00383800
                  AIF   (T'&ZCGPR NE 'N').ZG106R  NON NUMERIC           00383900
                  AIF   ('&ZCGPR' LT '2').ZG106Q                        00384000
                  AIF   ('&ZCGPR' LE '12').ZG106R                       00384100
.ZG106Q           ANOP  ,                                               00384200
&ZMS              SETC  '"LISTNUMVAL='          *KGPRA* MNOTE           00384300
&ZMS              SETC  '&ZMS.&LISTNUMVAL"'                             00384400
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00384500
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00384600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00384700
.ZG106R           ANOP  ,                                               00384800
.*----------------------------------------------------------------***   00384900
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00385000
                  AIF   (N'&ENTRYKEY LE 1).ZG109A  CK NUM               00385100
&ZMS              SETC  '"ENTRYKEY='            *KPOSA* MNOTE           00385200
&ZMS              SETC  '&ZMS.&ENTRYKEY"'                               00385300
&ZMS              SETC  '&ZMS "ENTRYKEY"'                               00385400
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00385500
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00385600
.ZG109A           ANOP  ,                                               00385700
.*-------------------------------------------------------------------   00385800
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00385900
&ZXENTRYKEY       SETC  'INPUT'     SET IN/OUTPUT                       00386000
&XENTRYKEY        SETC  'NO_KEY'                                        00386100
                  AIF   (K'&ENTRYKEY(1) LE 0).ZG109B  PARM              00386200
&XENTRYKEY        SETC  '&ENTRYKEY(1)'          SET XVARIABLE           00386300
                  AIF   (N'&ENTRYKEY GT 1).ZG109B  MULTI PARMS          00386400
&XENTRYKEY        SETC  '&ENTRYKEY'             SET XVARIABLE           00386500
.ZG109B           ANOP  ,                                               00386600
.*-------------------------------------------------------------------   00386700
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00386800
                  AIF   (K'&ZXENTRYKEY LE 0).ZG109R  NOT I/O            00386900
                  AIF   ('&XENTRYKEY' EQ 'NO_KEY').ZG109R               00387000
                  AIF   ('&XENTRYKEY'(1,1) NE '(').ZG109R               00387100
&ZCGPR            SETC  '&XENTRYKEY'(2,K'&XENTRYKEY-2)                  00387200
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG109P                   00387300
                  AIF   (K'&ZCGPR GT 2).ZG109Q                          00387400
                  AIF   ('&ZCGPR' EQ '0').ZG109Q                        00387500
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00387600
                  AIF   (T'&ZCGPR NE 'N').ZG109Q  INVALID REG NAME      00387700
.ZG109P           ANOP  ,                                               00387800
                  AIF   (T'&ZCGPR NE 'N').ZG109R  NON NUMERIC           00387900
                  AIF   ('&ZCGPR' LT '2').ZG109Q                        00388000
                  AIF   ('&ZCGPR' LE '12').ZG109R                       00388100
.ZG109Q           ANOP  ,                                               00388200
&ZMS              SETC  '"ENTRYKEY='            *KGPRA* MNOTE           00388300
&ZMS              SETC  '&ZMS.&ENTRYKEY"'                               00388400
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00388500
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00388600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00388700
.ZG109R           ANOP  ,                                               00388800
.*----------------------------------------------------------------***   00388900
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00389000
                  AIF   (N'&STARTPOS LE 1).ZG112A  CK NUM               00389100
&ZMS              SETC  '"STARTPOS='            *KPOSA* MNOTE           00389200
&ZMS              SETC  '&ZMS.&STARTPOS"'                               00389300
&ZMS              SETC  '&ZMS "STARTPOS"'                               00389400
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00389500
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00389600
.ZG112A           ANOP  ,                                               00389700
.*-------------------------------------------------------------------   00389800
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00389900
&ZXSTARTPOS       SETC  'INPUT'     SET IN/OUTPUT                       00390000
&XSTARTPOS        SETC  'ALL'                                           00390100
                  AIF   (K'&STARTPOS(1) LE 0).ZG112B  PARM              00390200
&XSTARTPOS        SETC  '&STARTPOS(1)'          SET XVARIABLE           00390300
                  AIF   (N'&STARTPOS GT 1).ZG112B  MULTI PARMS          00390400
&XSTARTPOS        SETC  '&STARTPOS'             SET XVARIABLE           00390500
.ZG112B           ANOP  ,                                               00390600
.*-------------------------------------------------------------------   00390700
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00390800
                  AIF   (K'&ZXSTARTPOS LE 0).ZG112R  NOT I/O            00390900
                  AIF   ('&XSTARTPOS' EQ 'ALL').ZG112R                  00391000
                  AIF   ('&XSTARTPOS'(1,1) NE '(').ZG112R               00391100
&ZCGPR            SETC  '&XSTARTPOS'(2,K'&XSTARTPOS-2)                  00391200
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG112P                   00391300
                  AIF   (K'&ZCGPR GT 2).ZG112Q                          00391400
                  AIF   ('&ZCGPR' EQ '0').ZG112Q                        00391500
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00391600
                  AIF   (T'&ZCGPR NE 'N').ZG112Q  INVALID REG NAME      00391700
.ZG112P           ANOP  ,                                               00391800
                  AIF   (T'&ZCGPR NE 'N').ZG112R  NON NUMERIC           00391900
                  AIF   ('&ZCGPR' LT '2').ZG112Q                        00392000
                  AIF   ('&ZCGPR' LE '12').ZG112R                       00392100
.ZG112Q           ANOP  ,                                               00392200
&ZMS              SETC  '"STARTPOS='            *KGPRA* MNOTE           00392300
&ZMS              SETC  '&ZMS.&STARTPOS"'                               00392400
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00392500
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00392600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00392700
.ZG112R           ANOP  ,                                               00392800
.*----------------------------------------------------------------***   00392900
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00393000
                  AIF   (N'&ENDPOS LE 1).ZG114A  CK NUM                 00393100
&ZMS              SETC  '"ENDPOS='  *KPOSA* MNOTE                       00393200
&ZMS              SETC  '&ZMS.&ENDPOS"'                                 00393300
&ZMS              SETC  '&ZMS "ENDPOS"'                                 00393400
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00393500
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00393600
.ZG114A           ANOP  ,                                               00393700
.*-------------------------------------------------------------------   00393800
.***AG.KXVAR17 NAME, OPT INPUT, KEYS -XVARIABLE                         00393900
&XENDPOS          SETC  'STARTPOS'  SET DEFAULT                         00394000
                  AIF   (K'&ENDPOS(1) LE 0).ZG114C  PARM                00394100
&XENDPOS          SETC  '&ENDPOS(1)'            SET XVARIABLE           00394200
                  AIF   (N'&ENDPOS GT 1).ZG114B  MULTI PARMS            00394300
&XENDPOS          SETC  '&ENDPOS'   SET XVARIABLE                       00394400
.ZG114B           AIF   (K'&STARTPOS(1) GT 0).ZG114C  KEY               00394500
&ZMS              SETC  '"ENDPOS'   *KDEPA* MNOTE                       00394600
&ZMS              SETC  '&ZMS.=&ENDPOS"'                                00394700
&ZMS              SETC  '&ZMS CAN ONLY BE SPECIFIED IF'                 00394800
&ZMS              SETC  '&ZMS '                                         00394900
&ZMS              SETC  '&ZMS "STARTPOS"'                               00395000
                  MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                    00395100
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00395200
.ZG114C           ANOP  ,                                               00395300
&ZXENDPOS         SETC  'INPUT'     SET IN/OUTPUT                       00395400
.*-------------------------------------------------------------------   00395500
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00395600
                  AIF   (K'&ZXENDPOS LE 0).ZG114R  NOT I/O              00395700
                  AIF   ('&XENDPOS' EQ 'STARTPOS').ZG114R               00395800
                  AIF   ('&XENDPOS'(1,1) NE '(').ZG114R                 00395900
&ZCGPR            SETC  '&XENDPOS'(2,K'&XENDPOS-2)                      00396000
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG114P                   00396100
                  AIF   (K'&ZCGPR GT 2).ZG114Q                          00396200
                  AIF   ('&ZCGPR' EQ '0').ZG114Q                        00396300
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00396400
                  AIF   (T'&ZCGPR NE 'N').ZG114Q  INVALID REG NAME      00396500
.ZG114P           ANOP  ,                                               00396600
                  AIF   (T'&ZCGPR NE 'N').ZG114R  NON NUMERIC           00396700
                  AIF   ('&ZCGPR' LT '2').ZG114Q                        00396800
                  AIF   ('&ZCGPR' LE '12').ZG114R                       00396900
.ZG114Q           ANOP  ,                                               00397000
&ZMS              SETC  '"ENDPOS='  *KGPRA* MNOTE                       00397100
&ZMS              SETC  '&ZMS.&ENDPOS"'                                 00397200
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00397300
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00397400
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00397500
.ZG114R           ANOP  ,                                               00397600
.*----------------------------------------------------------------***   00397700
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00397800
                  AIF   (N'&ORDER LE 1).ZG118A  CK NUM                  00397900
&ZMS              SETC  '"ORDER='   *KPOSA* MNOTE                       00398000
&ZMS              SETC  '&ZMS.&ORDER"'                                  00398100
&ZMS              SETC  '&ZMS "ORDER"'                                  00398200
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00398300
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00398400
.ZG118A           ANOP  ,                                               00398500
.*-------------------------------------------------------------------   00398600
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00398700
&XORDER           SETC  ''          INITIALIZE XVARIABLE                00398800
.ZG119A   AIF   ('&ORDER(1)' NE 'HEAD').ZG120A                          00398900
&XORDER           SETC  'HEAD'      SET KEYWORD                         00399000
.*-------------------------------------------------------------------   00399100
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00399200
.ZG120A   AIF   ('&ORDER(1)' NE 'TAIL').ZG121A                          00399300
&XORDER           SETC  'TAIL'      SET KEYWORD                         00399400
.*-------------------------------------------------------------------   00399500
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00399600
.ZG121A           AIF   (K'&XORDER GT 0).ZG121C  KEYWORD                00399700
                  AIF   (K'&ORDER(1) LE 0).ZG121B                       00399800
&ZMS              SETC  '"ORDER='   *KUKWA* MNOTE                       00399900
&ZMS              SETC  '&ZMS.&ORDER"'                                  00400000
&ZMS              SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '       00400100
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00400200
&ZMS              SETC  '&ZMS "HEAD"'           VALID KEYWORD           00400300
&ZMS              SETC  '&ZMS OR "TAIL".'       VALID KEYWORD           00400400
                  MNOTE 8,' &ZMS '                                      00400500
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00400600
.ZG121B           ANOP  ,                                               00400700
&XORDER           SETC  'HEAD'      SET DEFAULT KEYWORD                 00400800
.ZG121C           ANOP  ,                                               00400900
&ZXORDER          SETC  'INPUT'     SET IN/OUTPUT                       00401000
.*----------------------------------------------------------------***   00401100
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00401200
                  AIF   (N'&ADJUNCT LE 1).ZG123A  CK NUM                00401300
&ZMS              SETC  '"ADJUNCT='             *KPOSA* MNOTE           00401400
&ZMS              SETC  '&ZMS.&ADJUNCT"'                                00401500
&ZMS              SETC  '&ZMS "ADJUNCT"'                                00401600
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00401700
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00401800
.ZG123A           ANOP  ,                                               00401900
.*-------------------------------------------------------------------   00402000
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00402100
&XADJUNCT         SETC  ''          INITIALIZE XVARIABLE                00402200
.ZG124A   AIF   ('&ADJUNCT(1)' NE 'NO').ZG125A                          00402300
&XADJUNCT         SETC  'NO'        SET KEYWORD                         00402400
.*-------------------------------------------------------------------   00402500
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00402600
.ZG125A   AIF   ('&ADJUNCT(1)' NE 'YES').ZG126A                         00402700
&XADJUNCT         SETC  'YES'       SET KEYWORD                         00402800
.*-------------------------------------------------------------------   00402900
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00403000
.ZG126A           AIF   (K'&XADJUNCT GT 0).ZG126C  KEYWORD              00403100
                  AIF   (K'&ADJUNCT(1) LE 0).ZG126B                     00403200
&ZMS              SETC  '"ADJUNCT='             *KUKWA* MNOTE           00403300
&ZMS              SETC  '&ZMS.&ADJUNCT"'                                00403400
&ZMS              SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '       00403500
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00403600
&ZMS              SETC  '&ZMS "NO"'             VALID KEYWORD           00403700
&ZMS              SETC  '&ZMS OR "YES".'        VALID KEYWORD           00403800
                  MNOTE 8,' &ZMS '                                      00403900
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00404000
.ZG126B           ANOP  ,                                               00404100
&XADJUNCT         SETC  'NO'        SET DEFAULT KEYWORD                 00404200
.ZG126C           ANOP  ,                                               00404300
&ZXADJUNCT        SETC  'INPUT'     SET IN/OUTPUT                       00404400
.*----------------------------------------------------------------***   00404500
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00404600
                  AIF   (N'&ENTRYDATA LE 1).ZG128A  CK NUM              00404700
&ZMS              SETC  '"ENTRYDATA='           *KPOSA* MNOTE           00404800
&ZMS              SETC  '&ZMS.&ENTRYDATA"'                              00404900
&ZMS              SETC  '&ZMS "ENTRYDATA"'                              00405000
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00405100
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00405200
.ZG128A           ANOP  ,                                               00405300
.*-------------------------------------------------------------------   00405400
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00405500
&XENTRYDATA       SETC  ''          INITIALIZE XVARIABLE                00405600
.ZG129A   AIF   ('&ENTRYDATA(1)' NE 'NO').ZG130A                        00405700
&XENTRYDATA       SETC  'NO'        SET KEYWORD                         00405800
.*-------------------------------------------------------------------   00405900
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00406000
.ZG130A   AIF   ('&ENTRYDATA(1)' NE 'YES').ZG131A                       00406100
&XENTRYDATA       SETC  'YES'       SET KEYWORD                         00406200
.*-------------------------------------------------------------------   00406300
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00406400
.ZG131A           AIF   (K'&XENTRYDATA GT 0).ZG131C  KEYWORD            00406500
                  AIF   (K'&ENTRYDATA(1) LE 0).ZG131B                   00406600
&ZMS              SETC  '"ENTRYDATA='           *KUKWA* MNOTE           00406700
&ZMS              SETC  '&ZMS.&ENTRYDATA"'                              00406800
&ZMS              SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '       00406900
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00407000
&ZMS              SETC  '&ZMS "NO"'             VALID KEYWORD           00407100
&ZMS              SETC  '&ZMS OR "YES".'        VALID KEYWORD           00407200
                  MNOTE 8,' &ZMS '                                      00407300
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00407400
.ZG131B           ANOP  ,                                               00407500
&XENTRYDATA       SETC  'NO'        SET DEFAULT KEYWORD                 00407600
.ZG131C           ANOP  ,                                               00407700
&ZXENTRYDATA      SETC  'INPUT'     SET IN/OUTPUT                       00407800
.*------------------------------------------------------------------    00407900
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00408000
.ZG132            ANOP  ,                                               00408100
&ZXLISTNUMLEVEL   SETC  'INPUT'     SET IN/OUTPUT                       00408200
                  AIF   (K'&XLISTNUMLEVEL GT 0).ZG132E  VALID ARG       00408300
                  AIF   (T'&LISTNUMLEVEL EQ 'O').ZG132D  OMITTED        00408400
&ZASYSLNDX        SETA  0                                               00408500
.ZG132A           ANOP  ,           POSITIONAL MACRO KEY                00408600
&ZASYSLNDX        SETA  &ZASYSLNDX+1                                    00408700
                  AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG132C               00408800
&ZTLC             SETC 'LISTNUMLEVEL'                                   00408900
                  AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG132A      00409000
.ZG132B           ANOP  ,                                               00409100
&ZXLISTNUMLEVEL   SETC  ''          RESET IN/OUTPUT                     00409200
&ZMS              SETC  'THE "LISTNUMLEVEL" KEY'  *KOPTA* MNOTE         00409300
&ZMS              SETC  '&ZMS MUST CONTAIN ONE'                         00409400
                  MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                00409500
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00409600
                  AGO   .ZG132E                                         00409700
.ZG132C           ANOP  ,                                               00409800
&ZXLISTNUMLEVEL   SETC  ''          RESET IN/OUTPUT                     00409900
&ZMS              SETC  '"LISTNUMLEVEL='        *KUKWA* MNOTE           00410000
&ZMS              SETC  '&ZMS.&LISTNUMLEVEL"'                           00410100
&ZMS              SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '       00410200
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00410300
&ZMS              SETC  '&ZMS "SUMMARY",'       VALID KEYWORD           00410400
&ZMS              SETC  '&ZMS "DETAIL",'        VALID KEYWORD           00410500
&ZMS              SETC  '&ZMS OR "ENTRY".'      VALID KEYWORD           00410600
                  MNOTE 8,' &ZMS '                                      00410700
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00410800
                  AGO   .ZG132E                                         00410900
.ZG132D           ANOP  ,                                               00411000
&XLISTNUMLEVEL    SETC  'SUMMARY'   SET DEFAULT KEYWORD                 00411100
.ZG132E           ANOP  ,                                               00411200
.*------------------------------------------------------------------    00411300
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00411400
                  AIF   (K'&LISTNUMLEVEL(1) GT 0).ZG132F  PARM          00411500
&XLISTNUMLEVEL    SETC  ''          ENSURE NULL KEYWORD                 00411600
&ZXLISTNUMLEVEL   SETC  ''          RESET IN/OUTPUT                     00411700
&ZMS              SETC  'THE'                                           00411800
&ZMS              SETC  '&ZMS "LISTNUMLEVEL" KEY AND ITS ARGUMENT'      00411900
&ZMS              SETC  '&ZMS ARE REQUIRED.'                            00412000
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00412100
&ZMS              SETC  '&ZMS "SUMMARY",'       VALID KEYWORD           00412200
&ZMS              SETC  '&ZMS "DETAIL",'        VALID KEYWORD           00412300
&ZMS              SETC  '&ZMS OR "ENTRY".'      VALID KEYWORD           00412400
                  MNOTE 8,' &ZMS '                                      00412500
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00412600
.ZG132F           ANOP  ,                                               00412700
.*-------------------------------------------------------------------   00412800
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00412900
.ZG133            ANOP  ,                                               00413000
&ZTLC             SETC 'LOCKENTRIES'                                    00413100
                  AIF   ('&TYPE(1)' NE '&ZTLC').ZG146                   00413200
&XTYPE            SETC  'LOCKENTRIES'           SET KEYWORD             00413300
                  AIF   (N'&TYPE LE 1).ZG133A   CK NUM                  00413400
&ZMS              SETC  '"TYPE='    *KPOSA* MNOTE                       00413500
&ZMS              SETC  '&ZMS.&TYPE"'                                   00413600
&ZMS              SETC  '&ZMS "TYPE"'                                   00413700
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00413800
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00413900
.ZG133A           ANOP  ,                                               00414000
.*------------------------------------------------------------------    00414100
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00414200
&ZCVAL            SETC ''           CLEAR ERROR KEY ACCUMULATOR         00414300
.ZG133A0          AIF   (K'&STRLEVEL LE 0).ZG133A1  OK                  00414400
&ZCVAL            SETC '&ZCVAL STRLEVEL'        INCORRECT KEY USED      00414500
.ZG133A1          AIF   (K'&CLASSTYPE LE 0).ZG133A2  OK                 00414600
&ZCVAL            SETC '&ZCVAL CLASSTYPE'       INCORRECT KEY USED      00414700
.ZG133A2          AIF   (K'&CLASSLEVEL LE 0).ZG133A3  OK                00414800
&ZCVAL            SETC '&ZCVAL CLASSLEVEL'      INCORRECT KEY USED      00414900
.ZG133A3          AIF   (K'&CLASSVAL LE 0).ZG133A4  OK                  00415000
&ZCVAL            SETC '&ZCVAL CLASSVAL'        INCORRECT KEY USED      00415100
.ZG133A4          AIF   (K'&STARTPOS LE 0).ZG133A5  OK                  00415200
&ZCVAL            SETC '&ZCVAL STARTPOS'        INCORRECT KEY USED      00415300
.ZG133A5          AIF   (K'&ENDPOS LE 0).ZG133A6  OK                    00415400
&ZCVAL            SETC '&ZCVAL ENDPOS'          INCORRECT KEY USED      00415500
.ZG133A6          AIF   (K'&ORDER LE 0).ZG133A7  OK                     00415600
&ZCVAL            SETC '&ZCVAL ORDER'           INCORRECT KEY USED      00415700
.ZG133A7          AIF   (K'&ADJUNCT LE 0).ZG133A8  OK                   00415800
&ZCVAL            SETC '&ZCVAL ADJUNCT'         INCORRECT KEY USED      00415900
.ZG133A8          AIF   (K'&ENTRYDATA LE 0).ZG133A9  OK                 00416000
&ZCVAL            SETC '&ZCVAL ENTRYDATA'       INCORRECT KEY USED      00416100
.ZG133A9          AIF   (K'&LISTNUMLEVEL LE 0).ZG133A10  OK             00416200
&ZCVAL            SETC '&ZCVAL LISTNUMLEVEL'    INCORRECT KEY USED      00416300
.ZG133A10         AIF   (K'&LISTNUMVAL LE 0).ZG133A11  OK               00416400
&ZCVAL            SETC '&ZCVAL LISTNUMVAL'      INCORRECT KEY USED      00416500
.ZG133A11         AIF   (K'&ENTRYKEY LE 0).ZG133A12  OK                 00416600
&ZCVAL            SETC '&ZCVAL ENTRYKEY'        INCORRECT KEY USED      00416700
.ZG133A12         AIF   (K'&ENTRYNAME LE 0).ZG133A13  OK                00416800
&ZCVAL            SETC '&ZCVAL ENTRYNAME'       INCORRECT KEY USED      00416900
.ZG133A13         AIF   (K'&ENTRYID LE 0).ZG133A14  OK                  00417000
&ZCVAL            SETC '&ZCVAL ENTRYID'         INCORRECT KEY USED      00417100
.ZG133A14         AIF   (K'&EMCLEVEL LE 0).ZG133A15  OK                 00417200
&ZCVAL            SETC '&ZCVAL EMCLEVEL'        INCORRECT KEY USED      00417300
.ZG133A15         AIF   (K'&EQLEVEL LE 0).ZG133A16  OK                  00417400
&ZCVAL            SETC '&ZCVAL EQLEVEL'         INCORRECT KEY USED      00417500
.ZG133A16         AIF   (K'&CONIDVAL LE 0).ZG133A17  OK                 00417600
&ZCVAL            SETC '&ZCVAL CONIDVAL'        INCORRECT KEY USED      00417700
.ZG133A17         AIF   (K'&ZCVAL LE 0).ZG133A18  OK                    00417800
&ZCVAL            SETC '&ZCVAL'(2,K'&ZCVAL-1)                           00417900
&ZMS              SETC  '"TYPE'     *KMEIA* MNOTE                       00418000
&ZMS              SETC  '&ZMS.=&TYPE"'                                  00418100
&ZMS              SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'            00418200
                  MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'            00418300
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00418400
.ZG133A18         ANOP  ,                                               00418500
.*----------------------------------------------------------------***   00418600
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00418700
                  AIF   (N'&STRNAME LE 1).ZG135A  CK NUM                00418800
&ZMS              SETC  '"STRNAME='             *KPOSA* MNOTE           00418900
&ZMS              SETC  '&ZMS.&STRNAME"'                                00419000
&ZMS              SETC  '&ZMS "STRNAME"'                                00419100
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00419200
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00419300
.ZG135A           ANOP  ,                                               00419400
.*-------------------------------------------------------------------   00419500
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00419600
&ZXSTRNAME        SETC  'INPUT'     SET IN/OUTPUT                       00419700
&XSTRNAME         SETC  '&STRNAME(1)'           SET XVARIABLE           00419800
                  AIF   (N'&STRNAME GT 1).ZG135B  MULTI PARMS           00419900
&XSTRNAME         SETC  '&STRNAME'  SET XVARIABLE                       00420000
.ZG135B           AIF   (K'&STRNAME(1) GT 0).ZG135C                     00420100
&ZXSTRNAME        SETC  ''          RESET IN/OUTPUT                     00420200
&ZMS              SETC  ' '         *KRQDA*                             00420300
&ZMS              SETC  '&ZMS "STRNAME" KEY AND ITS ARGUMENT'           00420400
                  MNOTE 8,' &ZMS ARE REQUIRED.'                         00420500
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00420600
.ZG135C           ANOP  ,                                               00420700
.*-------------------------------------------------------------------   00420800
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00420900
                  AIF   (K'&ZXSTRNAME LE 0).ZG135R  NOT I/O             00421000
                  AIF   ('&XSTRNAME'(1,1) NE '(').ZG135R                00421100
&ZCGPR            SETC  '&XSTRNAME'(2,K'&XSTRNAME-2)                    00421200
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG135P                   00421300
                  AIF   (K'&ZCGPR GT 2).ZG135Q                          00421400
                  AIF   ('&ZCGPR' EQ '0').ZG135Q                        00421500
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00421600
                  AIF   (T'&ZCGPR NE 'N').ZG135Q  INVALID REG NAME      00421700
.ZG135P           ANOP  ,                                               00421800
                  AIF   (T'&ZCGPR NE 'N').ZG135R  NON NUMERIC           00421900
                  AIF   ('&ZCGPR' LT '2').ZG135Q                        00422000
                  AIF   ('&ZCGPR' LE '12').ZG135R                       00422100
.ZG135Q           ANOP  ,                                               00422200
&ZMS              SETC  '"STRNAME='             *KGPRA* MNOTE           00422300
&ZMS              SETC  '&ZMS.&STRNAME"'                                00422400
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00422500
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00422600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00422700
.ZG135R           ANOP  ,                                               00422800
.*----------------------------------------------------------------***   00422900
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00423000
                  AIF   (N'&STRDUMPID LE 1).ZG138A  CK NUM              00423100
&ZMS              SETC  '"STRDUMPID='           *KPOSA* MNOTE           00423200
&ZMS              SETC  '&ZMS.&STRDUMPID"'                              00423300
&ZMS              SETC  '&ZMS "STRDUMPID"'                              00423400
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00423500
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00423600
.ZG138A           ANOP  ,                                               00423700
.*-------------------------------------------------------------------   00423800
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00423900
&ZXSTRDUMPID      SETC  'INPUT'     SET IN/OUTPUT                       00424000
&XSTRDUMPID       SETC  '&STRDUMPID(1)'         SET XVARIABLE           00424100
                  AIF   (N'&STRDUMPID GT 1).ZG138B  MULTI PARMS         00424200
&XSTRDUMPID       SETC  '&STRDUMPID'            SET XVARIABLE           00424300
.ZG138B           AIF   (K'&STRDUMPID(1) GT 0).ZG138C                   00424400
&ZXSTRDUMPID      SETC  ''          RESET IN/OUTPUT                     00424500
&ZMS              SETC  ' '         *KRQDA*                             00424600
&ZMS              SETC  '&ZMS "STRDUMPID" KEY AND ITS ARGUMENT'         00424700
                  MNOTE 8,' &ZMS ARE REQUIRED.'                         00424800
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00424900
.ZG138C           ANOP  ,                                               00425000
.*-------------------------------------------------------------------   00425100
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00425200
                  AIF   (K'&ZXSTRDUMPID LE 0).ZG138R  NOT I/O           00425300
                  AIF   ('&XSTRDUMPID'(1,1) NE '(').ZG138R              00425400
&ZCGPR            SETC  '&XSTRDUMPID'(2,K'&XSTRDUMPID-2)                00425500
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG138P                   00425600
                  AIF   (K'&ZCGPR GT 2).ZG138Q                          00425700
                  AIF   ('&ZCGPR' EQ '0').ZG138Q                        00425800
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00425900
                  AIF   (T'&ZCGPR NE 'N').ZG138Q  INVALID REG NAME      00426000
.ZG138P           ANOP  ,                                               00426100
                  AIF   (T'&ZCGPR NE 'N').ZG138R  NON NUMERIC           00426200
                  AIF   ('&ZCGPR' LT '2').ZG138Q                        00426300
                  AIF   ('&ZCGPR' LE '12').ZG138R                       00426400
.ZG138Q           ANOP  ,                                               00426500
&ZMS              SETC  '"STRDUMPID='           *KGPRA* MNOTE           00426600
&ZMS              SETC  '&ZMS.&STRDUMPID"'                              00426700
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00426800
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00426900
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00427000
.ZG138R           ANOP  ,                                               00427100
.*----------------------------------------------------------------***   00427200
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00427300
                  AIF   (N'&STARTVAL LE 1).ZG141A  CK NUM               00427400
&ZMS              SETC  '"STARTVAL='            *KPOSA* MNOTE           00427500
&ZMS              SETC  '&ZMS.&STARTVAL"'                               00427600
&ZMS              SETC  '&ZMS "STARTVAL"'                               00427700
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00427800
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00427900
.ZG141A           ANOP  ,                                               00428000
.*-------------------------------------------------------------------   00428100
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00428200
&ZXSTARTVAL       SETC  'INPUT'     SET IN/OUTPUT                       00428300
&XSTARTVAL        SETC  'ALL'                                           00428400
                  AIF   (K'&STARTVAL(1) LE 0).ZG141B  PARM              00428500
&XSTARTVAL        SETC  '&STARTVAL(1)'          SET XVARIABLE           00428600
                  AIF   (N'&STARTVAL GT 1).ZG141B  MULTI PARMS          00428700
&XSTARTVAL        SETC  '&STARTVAL'             SET XVARIABLE           00428800
.ZG141B           ANOP  ,                                               00428900
.*-------------------------------------------------------------------   00429000
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00429100
                  AIF   (K'&ZXSTARTVAL LE 0).ZG141R  NOT I/O            00429200
                  AIF   ('&XSTARTVAL' EQ 'ALL').ZG141R                  00429300
                  AIF   ('&XSTARTVAL'(1,1) NE '(').ZG141R               00429400
&ZCGPR            SETC  '&XSTARTVAL'(2,K'&XSTARTVAL-2)                  00429500
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG141P                   00429600
                  AIF   (K'&ZCGPR GT 2).ZG141Q                          00429700
                  AIF   ('&ZCGPR' EQ '0').ZG141Q                        00429800
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00429900
                  AIF   (T'&ZCGPR NE 'N').ZG141Q  INVALID REG NAME      00430000
.ZG141P           ANOP  ,                                               00430100
                  AIF   (T'&ZCGPR NE 'N').ZG141R  NON NUMERIC           00430200
                  AIF   ('&ZCGPR' LT '2').ZG141Q                        00430300
                  AIF   ('&ZCGPR' LE '12').ZG141R                       00430400
.ZG141Q           ANOP  ,                                               00430500
&ZMS              SETC  '"STARTVAL='            *KGPRA* MNOTE           00430600
&ZMS              SETC  '&ZMS.&STARTVAL"'                               00430700
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00430800
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00430900
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00431000
.ZG141R           ANOP  ,                                               00431100
.*----------------------------------------------------------------***   00431200
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00431300
                  AIF   (N'&ENDVAL LE 1).ZG143A  CK NUM                 00431400
&ZMS              SETC  '"ENDVAL='  *KPOSA* MNOTE                       00431500
&ZMS              SETC  '&ZMS.&ENDVAL"'                                 00431600
&ZMS              SETC  '&ZMS "ENDVAL"'                                 00431700
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00431800
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00431900
.ZG143A           ANOP  ,                                               00432000
.*-------------------------------------------------------------------   00432100
.***AG.KXVAR17 NAME, OPT INPUT, KEYS -XVARIABLE                         00432200
&XENDVAL          SETC  'STARTVAL'  SET DEFAULT                         00432300
                  AIF   (K'&ENDVAL(1) LE 0).ZG143C  PARM                00432400
&XENDVAL          SETC  '&ENDVAL(1)'            SET XVARIABLE           00432500
                  AIF   (N'&ENDVAL GT 1).ZG143B  MULTI PARMS            00432600
&XENDVAL          SETC  '&ENDVAL'   SET XVARIABLE                       00432700
.ZG143B           AIF   (K'&STARTVAL(1) GT 0).ZG143C  KEY               00432800
&ZMS              SETC  '"ENDVAL'   *KDEPA* MNOTE                       00432900
&ZMS              SETC  '&ZMS.=&ENDVAL"'                                00433000
&ZMS              SETC  '&ZMS CAN ONLY BE SPECIFIED IF'                 00433100
&ZMS              SETC  '&ZMS '                                         00433200
&ZMS              SETC  '&ZMS "STARTVAL"'                               00433300
                  MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                    00433400
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00433500
.ZG143C           ANOP  ,                                               00433600
&ZXENDVAL         SETC  'INPUT'     SET IN/OUTPUT                       00433700
.*-------------------------------------------------------------------   00433800
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00433900
                  AIF   (K'&ZXENDVAL LE 0).ZG143R  NOT I/O              00434000
                  AIF   ('&XENDVAL' EQ 'STARTVAL').ZG143R               00434100
                  AIF   ('&XENDVAL'(1,1) NE '(').ZG143R                 00434200
&ZCGPR            SETC  '&XENDVAL'(2,K'&XENDVAL-2)                      00434300
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG143P                   00434400
                  AIF   (K'&ZCGPR GT 2).ZG143Q                          00434500
                  AIF   ('&ZCGPR' EQ '0').ZG143Q                        00434600
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00434700
                  AIF   (T'&ZCGPR NE 'N').ZG143Q  INVALID REG NAME      00434800
.ZG143P           ANOP  ,                                               00434900
                  AIF   (T'&ZCGPR NE 'N').ZG143R  NON NUMERIC           00435000
                  AIF   ('&ZCGPR' LT '2').ZG143Q                        00435100
                  AIF   ('&ZCGPR' LE '12').ZG143R                       00435200
.ZG143Q           ANOP  ,                                               00435300
&ZMS              SETC  '"ENDVAL='  *KGPRA* MNOTE                       00435400
&ZMS              SETC  '&ZMS.&ENDVAL"'                                 00435500
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00435600
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00435700
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00435800
.ZG143R           ANOP  ,                                               00435900
.*-------------------------------------------------------------------   00436000
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00436100
.ZG146            ANOP  ,                                               00436200
&ZTLC             SETC 'USERCNTLS'                                      00436300
                  AIF   ('&TYPE(1)' NE '&ZTLC').ZG159                   00436400
&XTYPE            SETC  'USERCNTLS'             SET KEYWORD             00436500
                  AIF   (N'&TYPE LE 1).ZG146A   CK NUM                  00436600
&ZMS              SETC  '"TYPE='    *KPOSA* MNOTE                       00436700
&ZMS              SETC  '&ZMS.&TYPE"'                                   00436800
&ZMS              SETC  '&ZMS "TYPE"'                                   00436900
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00437000
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00437100
.ZG146A           ANOP  ,                                               00437200
.*------------------------------------------------------------------    00437300
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00437400
&ZCVAL            SETC ''           CLEAR ERROR KEY ACCUMULATOR         00437500
.ZG146A0          AIF   (K'&STRLEVEL LE 0).ZG146A1  OK                  00437600
&ZCVAL            SETC '&ZCVAL STRLEVEL'        INCORRECT KEY USED      00437700
.ZG146A1          AIF   (K'&CLASSTYPE LE 0).ZG146A2  OK                 00437800
&ZCVAL            SETC '&ZCVAL CLASSTYPE'       INCORRECT KEY USED      00437900
.ZG146A2          AIF   (K'&CLASSLEVEL LE 0).ZG146A3  OK                00438000
&ZCVAL            SETC '&ZCVAL CLASSLEVEL'      INCORRECT KEY USED      00438100
.ZG146A3          AIF   (K'&CLASSVAL LE 0).ZG146A4  OK                  00438200
&ZCVAL            SETC '&ZCVAL CLASSVAL'        INCORRECT KEY USED      00438300
.ZG146A4          AIF   (K'&STARTPOS LE 0).ZG146A5  OK                  00438400
&ZCVAL            SETC '&ZCVAL STARTPOS'        INCORRECT KEY USED      00438500
.ZG146A5          AIF   (K'&ENDPOS LE 0).ZG146A6  OK                    00438600
&ZCVAL            SETC '&ZCVAL ENDPOS'          INCORRECT KEY USED      00438700
.ZG146A6          AIF   (K'&ORDER LE 0).ZG146A7  OK                     00438800
&ZCVAL            SETC '&ZCVAL ORDER'           INCORRECT KEY USED      00438900
.ZG146A7          AIF   (K'&ADJUNCT LE 0).ZG146A8  OK                   00439000
&ZCVAL            SETC '&ZCVAL ADJUNCT'         INCORRECT KEY USED      00439100
.ZG146A8          AIF   (K'&ENTRYDATA LE 0).ZG146A9  OK                 00439200
&ZCVAL            SETC '&ZCVAL ENTRYDATA'       INCORRECT KEY USED      00439300
.ZG146A9          AIF   (K'&LISTNUMLEVEL LE 0).ZG146A10  OK             00439400
&ZCVAL            SETC '&ZCVAL LISTNUMLEVEL'    INCORRECT KEY USED      00439500
.ZG146A10         AIF   (K'&LISTNUMVAL LE 0).ZG146A11  OK               00439600
&ZCVAL            SETC '&ZCVAL LISTNUMVAL'      INCORRECT KEY USED      00439700
.ZG146A11         AIF   (K'&ENTRYKEY LE 0).ZG146A12  OK                 00439800
&ZCVAL            SETC '&ZCVAL ENTRYKEY'        INCORRECT KEY USED      00439900
.ZG146A12         AIF   (K'&ENTRYNAME LE 0).ZG146A13  OK                00440000
&ZCVAL            SETC '&ZCVAL ENTRYNAME'       INCORRECT KEY USED      00440100
.ZG146A13         AIF   (K'&ENTRYID LE 0).ZG146A14  OK                  00440200
&ZCVAL            SETC '&ZCVAL ENTRYID'         INCORRECT KEY USED      00440300
.ZG146A14         AIF   (K'&EMCLEVEL LE 0).ZG146A15  OK                 00440400
&ZCVAL            SETC '&ZCVAL EMCLEVEL'        INCORRECT KEY USED      00440500
.ZG146A15         AIF   (K'&EQLEVEL LE 0).ZG146A16  OK                  00440600
&ZCVAL            SETC '&ZCVAL EQLEVEL'         INCORRECT KEY USED      00440700
.ZG146A16         AIF   (K'&CONIDVAL LE 0).ZG146A17  OK                 00440800
&ZCVAL            SETC '&ZCVAL CONIDVAL'        INCORRECT KEY USED      00440900
.ZG146A17         AIF   (K'&ZCVAL LE 0).ZG146A18  OK                    00441000
&ZCVAL            SETC '&ZCVAL'(2,K'&ZCVAL-1)                           00441100
&ZMS              SETC  '"TYPE'     *KMEIA* MNOTE                       00441200
&ZMS              SETC  '&ZMS.=&TYPE"'                                  00441300
&ZMS              SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'            00441400
                  MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'            00441500
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00441600
.ZG146A18         ANOP  ,                                               00441700
.*----------------------------------------------------------------***   00441800
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00441900
                  AIF   (N'&STRNAME LE 1).ZG148A  CK NUM                00442000
&ZMS              SETC  '"STRNAME='             *KPOSA* MNOTE           00442100
&ZMS              SETC  '&ZMS.&STRNAME"'                                00442200
&ZMS              SETC  '&ZMS "STRNAME"'                                00442300
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00442400
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00442500
.ZG148A           ANOP  ,                                               00442600
.*-------------------------------------------------------------------   00442700
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00442800
&ZXSTRNAME        SETC  'INPUT'     SET IN/OUTPUT                       00442900
&XSTRNAME         SETC  '&STRNAME(1)'           SET XVARIABLE           00443000
                  AIF   (N'&STRNAME GT 1).ZG148B  MULTI PARMS           00443100
&XSTRNAME         SETC  '&STRNAME'  SET XVARIABLE                       00443200
.ZG148B           AIF   (K'&STRNAME(1) GT 0).ZG148C                     00443300
&ZXSTRNAME        SETC  ''          RESET IN/OUTPUT                     00443400
&ZMS              SETC  ' '         *KRQDA*                             00443500
&ZMS              SETC  '&ZMS "STRNAME" KEY AND ITS ARGUMENT'           00443600
                  MNOTE 8,' &ZMS ARE REQUIRED.'                         00443700
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00443800
.ZG148C           ANOP  ,                                               00443900
.*-------------------------------------------------------------------   00444000
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00444100
                  AIF   (K'&ZXSTRNAME LE 0).ZG148R  NOT I/O             00444200
                  AIF   ('&XSTRNAME'(1,1) NE '(').ZG148R                00444300
&ZCGPR            SETC  '&XSTRNAME'(2,K'&XSTRNAME-2)                    00444400
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG148P                   00444500
                  AIF   (K'&ZCGPR GT 2).ZG148Q                          00444600
                  AIF   ('&ZCGPR' EQ '0').ZG148Q                        00444700
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00444800
                  AIF   (T'&ZCGPR NE 'N').ZG148Q  INVALID REG NAME      00444900
.ZG148P           ANOP  ,                                               00445000
                  AIF   (T'&ZCGPR NE 'N').ZG148R  NON NUMERIC           00445100
                  AIF   ('&ZCGPR' LT '2').ZG148Q                        00445200
                  AIF   ('&ZCGPR' LE '12').ZG148R                       00445300
.ZG148Q           ANOP  ,                                               00445400
&ZMS              SETC  '"STRNAME='             *KGPRA* MNOTE           00445500
&ZMS              SETC  '&ZMS.&STRNAME"'                                00445600
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00445700
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00445800
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00445900
.ZG148R           ANOP  ,                                               00446000
.*----------------------------------------------------------------***   00446100
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00446200
                  AIF   (N'&STRDUMPID LE 1).ZG151A  CK NUM              00446300
&ZMS              SETC  '"STRDUMPID='           *KPOSA* MNOTE           00446400
&ZMS              SETC  '&ZMS.&STRDUMPID"'                              00446500
&ZMS              SETC  '&ZMS "STRDUMPID"'                              00446600
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00446700
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00446800
.ZG151A           ANOP  ,                                               00446900
.*-------------------------------------------------------------------   00447000
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00447100
&ZXSTRDUMPID      SETC  'INPUT'     SET IN/OUTPUT                       00447200
&XSTRDUMPID       SETC  '&STRDUMPID(1)'         SET XVARIABLE           00447300
                  AIF   (N'&STRDUMPID GT 1).ZG151B  MULTI PARMS         00447400
&XSTRDUMPID       SETC  '&STRDUMPID'            SET XVARIABLE           00447500
.ZG151B           AIF   (K'&STRDUMPID(1) GT 0).ZG151C                   00447600
&ZXSTRDUMPID      SETC  ''          RESET IN/OUTPUT                     00447700
&ZMS              SETC  ' '         *KRQDA*                             00447800
&ZMS              SETC  '&ZMS "STRDUMPID" KEY AND ITS ARGUMENT'         00447900
                  MNOTE 8,' &ZMS ARE REQUIRED.'                         00448000
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00448100
.ZG151C           ANOP  ,                                               00448200
.*-------------------------------------------------------------------   00448300
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00448400
                  AIF   (K'&ZXSTRDUMPID LE 0).ZG151R  NOT I/O           00448500
                  AIF   ('&XSTRDUMPID'(1,1) NE '(').ZG151R              00448600
&ZCGPR            SETC  '&XSTRDUMPID'(2,K'&XSTRDUMPID-2)                00448700
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG151P                   00448800
                  AIF   (K'&ZCGPR GT 2).ZG151Q                          00448900
                  AIF   ('&ZCGPR' EQ '0').ZG151Q                        00449000
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00449100
                  AIF   (T'&ZCGPR NE 'N').ZG151Q  INVALID REG NAME      00449200
.ZG151P           ANOP  ,                                               00449300
                  AIF   (T'&ZCGPR NE 'N').ZG151R  NON NUMERIC           00449400
                  AIF   ('&ZCGPR' LT '2').ZG151Q                        00449500
                  AIF   ('&ZCGPR' LE '12').ZG151R                       00449600
.ZG151Q           ANOP  ,                                               00449700
&ZMS              SETC  '"STRDUMPID='           *KGPRA* MNOTE           00449800
&ZMS              SETC  '&ZMS.&STRDUMPID"'                              00449900
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00450000
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00450100
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00450200
.ZG151R           ANOP  ,                                               00450300
.*----------------------------------------------------------------***   00450400
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00450500
                  AIF   (N'&STARTVAL LE 1).ZG154A  CK NUM               00450600
&ZMS              SETC  '"STARTVAL='            *KPOSA* MNOTE           00450700
&ZMS              SETC  '&ZMS.&STARTVAL"'                               00450800
&ZMS              SETC  '&ZMS "STARTVAL"'                               00450900
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00451000
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00451100
.ZG154A           ANOP  ,                                               00451200
.*-------------------------------------------------------------------   00451300
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00451400
&ZXSTARTVAL       SETC  'INPUT'     SET IN/OUTPUT                       00451500
&XSTARTVAL        SETC  'ALL'                                           00451600
                  AIF   (K'&STARTVAL(1) LE 0).ZG154B  PARM              00451700
&XSTARTVAL        SETC  '&STARTVAL(1)'          SET XVARIABLE           00451800
                  AIF   (N'&STARTVAL GT 1).ZG154B  MULTI PARMS          00451900
&XSTARTVAL        SETC  '&STARTVAL'             SET XVARIABLE           00452000
.ZG154B           ANOP  ,                                               00452100
.*-------------------------------------------------------------------   00452200
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00452300
                  AIF   (K'&ZXSTARTVAL LE 0).ZG154R  NOT I/O            00452400
                  AIF   ('&XSTARTVAL' EQ 'ALL').ZG154R                  00452500
                  AIF   ('&XSTARTVAL'(1,1) NE '(').ZG154R               00452600
&ZCGPR            SETC  '&XSTARTVAL'(2,K'&XSTARTVAL-2)                  00452700
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG154P                   00452800
                  AIF   (K'&ZCGPR GT 2).ZG154Q                          00452900
                  AIF   ('&ZCGPR' EQ '0').ZG154Q                        00453000
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00453100
                  AIF   (T'&ZCGPR NE 'N').ZG154Q  INVALID REG NAME      00453200
.ZG154P           ANOP  ,                                               00453300
                  AIF   (T'&ZCGPR NE 'N').ZG154R  NON NUMERIC           00453400
                  AIF   ('&ZCGPR' LT '2').ZG154Q                        00453500
                  AIF   ('&ZCGPR' LE '12').ZG154R                       00453600
.ZG154Q           ANOP  ,                                               00453700
&ZMS              SETC  '"STARTVAL='            *KGPRA* MNOTE           00453800
&ZMS              SETC  '&ZMS.&STARTVAL"'                               00453900
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00454000
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00454100
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00454200
.ZG154R           ANOP  ,                                               00454300
.*----------------------------------------------------------------***   00454400
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00454500
                  AIF   (N'&ENDVAL LE 1).ZG156A  CK NUM                 00454600
&ZMS              SETC  '"ENDVAL='  *KPOSA* MNOTE                       00454700
&ZMS              SETC  '&ZMS.&ENDVAL"'                                 00454800
&ZMS              SETC  '&ZMS "ENDVAL"'                                 00454900
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00455000
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00455100
.ZG156A           ANOP  ,                                               00455200
.*-------------------------------------------------------------------   00455300
.***AG.KXVAR17 NAME, OPT INPUT, KEYS -XVARIABLE                         00455400
&XENDVAL          SETC  'STARTVAL'  SET DEFAULT                         00455500
                  AIF   (K'&ENDVAL(1) LE 0).ZG156C  PARM                00455600
&XENDVAL          SETC  '&ENDVAL(1)'            SET XVARIABLE           00455700
                  AIF   (N'&ENDVAL GT 1).ZG156B  MULTI PARMS            00455800
&XENDVAL          SETC  '&ENDVAL'   SET XVARIABLE                       00455900
.ZG156B           AIF   (K'&STARTVAL(1) GT 0).ZG156C  KEY               00456000
&ZMS              SETC  '"ENDVAL'   *KDEPA* MNOTE                       00456100
&ZMS              SETC  '&ZMS.=&ENDVAL"'                                00456200
&ZMS              SETC  '&ZMS CAN ONLY BE SPECIFIED IF'                 00456300
&ZMS              SETC  '&ZMS '                                         00456400
&ZMS              SETC  '&ZMS "STARTVAL"'                               00456500
                  MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                    00456600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00456700
.ZG156C           ANOP  ,                                               00456800
&ZXENDVAL         SETC  'INPUT'     SET IN/OUTPUT                       00456900
.*-------------------------------------------------------------------   00457000
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00457100
                  AIF   (K'&ZXENDVAL LE 0).ZG156R  NOT I/O              00457200
                  AIF   ('&XENDVAL' EQ 'STARTVAL').ZG156R               00457300
                  AIF   ('&XENDVAL'(1,1) NE '(').ZG156R                 00457400
&ZCGPR            SETC  '&XENDVAL'(2,K'&XENDVAL-2)                      00457500
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG156P                   00457600
                  AIF   (K'&ZCGPR GT 2).ZG156Q                          00457700
                  AIF   ('&ZCGPR' EQ '0').ZG156Q                        00457800
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00457900
                  AIF   (T'&ZCGPR NE 'N').ZG156Q  INVALID REG NAME      00458000
.ZG156P           ANOP  ,                                               00458100
                  AIF   (T'&ZCGPR NE 'N').ZG156R  NON NUMERIC           00458200
                  AIF   ('&ZCGPR' LT '2').ZG156Q                        00458300
                  AIF   ('&ZCGPR' LE '12').ZG156R                       00458400
.ZG156Q           ANOP  ,                                               00458500
&ZMS              SETC  '"ENDVAL='  *KGPRA* MNOTE                       00458600
&ZMS              SETC  '&ZMS.&ENDVAL"'                                 00458700
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00458800
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00458900
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00459000
.ZG156R           ANOP  ,                                               00459100
.*-------------------------------------------------------------------   00459200
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00459300
.ZG159            ANOP  ,                                               00459400
&ZTLC             SETC 'ENTRY'                                          00459500
                  AIF   ('&TYPE(1)' NE '&ZTLC').ZG180                   00459600
&XTYPE            SETC  'ENTRY'     SET KEYWORD                         00459700
                  AIF   (N'&TYPE LE 1).ZG159A   CK NUM                  00459800
&ZMS              SETC  '"TYPE='    *KPOSA* MNOTE                       00459900
&ZMS              SETC  '&ZMS.&TYPE"'                                   00460000
&ZMS              SETC  '&ZMS "TYPE"'                                   00460100
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00460200
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00460300
.ZG159A           ANOP  ,                                               00460400
.*------------------------------------------------------------------    00460500
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00460600
&ZCVAL            SETC ''           CLEAR ERROR KEY ACCUMULATOR         00460700
.ZG159A0          AIF   (K'&STRLEVEL LE 0).ZG159A1  OK                  00460800
&ZCVAL            SETC '&ZCVAL STRLEVEL'        INCORRECT KEY USED      00460900
.ZG159A1          AIF   (K'&CLASSTYPE LE 0).ZG159A2  OK                 00461000
&ZCVAL            SETC '&ZCVAL CLASSTYPE'       INCORRECT KEY USED      00461100
.ZG159A2          AIF   (K'&CLASSLEVEL LE 0).ZG159A3  OK                00461200
&ZCVAL            SETC '&ZCVAL CLASSLEVEL'      INCORRECT KEY USED      00461300
.ZG159A3          AIF   (K'&STARTVAL LE 0).ZG159A4  OK                  00461400
&ZCVAL            SETC '&ZCVAL STARTVAL'        INCORRECT KEY USED      00461500
.ZG159A4          AIF   (K'&ENDVAL LE 0).ZG159A5  OK                    00461600
&ZCVAL            SETC '&ZCVAL ENDVAL'          INCORRECT KEY USED      00461700
.ZG159A5          AIF   (K'&CLASSVAL LE 0).ZG159A6  OK                  00461800
&ZCVAL            SETC '&ZCVAL CLASSVAL'        INCORRECT KEY USED      00461900
.ZG159A6          AIF   (K'&STARTPOS LE 0).ZG159A7  OK                  00462000
&ZCVAL            SETC '&ZCVAL STARTPOS'        INCORRECT KEY USED      00462100
.ZG159A7          AIF   (K'&ENDPOS LE 0).ZG159A8  OK                    00462200
&ZCVAL            SETC '&ZCVAL ENDPOS'          INCORRECT KEY USED      00462300
.ZG159A8          AIF   (K'&ORDER LE 0).ZG159A9  OK                     00462400
&ZCVAL            SETC '&ZCVAL ORDER'           INCORRECT KEY USED      00462500
.ZG159A9          AIF   (K'&LISTNUMLEVEL LE 0).ZG159A10  OK             00462600
&ZCVAL            SETC '&ZCVAL LISTNUMLEVEL'    INCORRECT KEY USED      00462700
.ZG159A10         AIF   (K'&LISTNUMVAL LE 0).ZG159A11  OK               00462800
&ZCVAL            SETC '&ZCVAL LISTNUMVAL'      INCORRECT KEY USED      00462900
.ZG159A11         AIF   (K'&ENTRYKEY LE 0).ZG159A12  OK                 00463000
&ZCVAL            SETC '&ZCVAL ENTRYKEY'        INCORRECT KEY USED      00463100
.ZG159A12         AIF   (K'&EMCLEVEL LE 0).ZG159A13  OK                 00463200
&ZCVAL            SETC '&ZCVAL EMCLEVEL'        INCORRECT KEY USED      00463300
.ZG159A13         AIF   (K'&EQLEVEL LE 0).ZG159A14  OK                  00463400
&ZCVAL            SETC '&ZCVAL EQLEVEL'         INCORRECT KEY USED      00463500
.ZG159A14         AIF   (K'&CONIDVAL LE 0).ZG159A15  OK                 00463600
&ZCVAL            SETC '&ZCVAL CONIDVAL'        INCORRECT KEY USED      00463700
.ZG159A15         AIF   (K'&ZCVAL LE 0).ZG159A16  OK                    00463800
&ZCVAL            SETC '&ZCVAL'(2,K'&ZCVAL-1)                           00463900
&ZMS              SETC  '"TYPE'     *KMEIA* MNOTE                       00464000
&ZMS              SETC  '&ZMS.=&TYPE"'                                  00464100
&ZMS              SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'            00464200
                  MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'            00464300
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00464400
.ZG159A16         ANOP  ,                                               00464500
.*----------------------------------------------------------------***   00464600
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00464700
                  AIF   (N'&STRNAME LE 1).ZG161A  CK NUM                00464800
&ZMS              SETC  '"STRNAME='             *KPOSA* MNOTE           00464900
&ZMS              SETC  '&ZMS.&STRNAME"'                                00465000
&ZMS              SETC  '&ZMS "STRNAME"'                                00465100
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00465200
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00465300
.ZG161A           ANOP  ,                                               00465400
.*-------------------------------------------------------------------   00465500
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00465600
&ZXSTRNAME        SETC  'INPUT'     SET IN/OUTPUT                       00465700
&XSTRNAME         SETC  '&STRNAME(1)'           SET XVARIABLE           00465800
                  AIF   (N'&STRNAME GT 1).ZG161B  MULTI PARMS           00465900
&XSTRNAME         SETC  '&STRNAME'  SET XVARIABLE                       00466000
.ZG161B           AIF   (K'&STRNAME(1) GT 0).ZG161C                     00466100
&ZXSTRNAME        SETC  ''          RESET IN/OUTPUT                     00466200
&ZMS              SETC  ' '         *KRQDA*                             00466300
&ZMS              SETC  '&ZMS "STRNAME" KEY AND ITS ARGUMENT'           00466400
                  MNOTE 8,' &ZMS ARE REQUIRED.'                         00466500
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00466600
.ZG161C           ANOP  ,                                               00466700
.*-------------------------------------------------------------------   00466800
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00466900
                  AIF   (K'&ZXSTRNAME LE 0).ZG161R  NOT I/O             00467000
                  AIF   ('&XSTRNAME'(1,1) NE '(').ZG161R                00467100
&ZCGPR            SETC  '&XSTRNAME'(2,K'&XSTRNAME-2)                    00467200
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG161P                   00467300
                  AIF   (K'&ZCGPR GT 2).ZG161Q                          00467400
                  AIF   ('&ZCGPR' EQ '0').ZG161Q                        00467500
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00467600
                  AIF   (T'&ZCGPR NE 'N').ZG161Q  INVALID REG NAME      00467700
.ZG161P           ANOP  ,                                               00467800
                  AIF   (T'&ZCGPR NE 'N').ZG161R  NON NUMERIC           00467900
                  AIF   ('&ZCGPR' LT '2').ZG161Q                        00468000
                  AIF   ('&ZCGPR' LE '12').ZG161R                       00468100
.ZG161Q           ANOP  ,                                               00468200
&ZMS              SETC  '"STRNAME='             *KGPRA* MNOTE           00468300
&ZMS              SETC  '&ZMS.&STRNAME"'                                00468400
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00468500
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00468600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00468700
.ZG161R           ANOP  ,                                               00468800
.*----------------------------------------------------------------***   00468900
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00469000
                  AIF   (N'&STRDUMPID LE 1).ZG164A  CK NUM              00469100
&ZMS              SETC  '"STRDUMPID='           *KPOSA* MNOTE           00469200
&ZMS              SETC  '&ZMS.&STRDUMPID"'                              00469300
&ZMS              SETC  '&ZMS "STRDUMPID"'                              00469400
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00469500
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00469600
.ZG164A           ANOP  ,                                               00469700
.*-------------------------------------------------------------------   00469800
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00469900
&ZXSTRDUMPID      SETC  'INPUT'     SET IN/OUTPUT                       00470000
&XSTRDUMPID       SETC  '&STRDUMPID(1)'         SET XVARIABLE           00470100
                  AIF   (N'&STRDUMPID GT 1).ZG164B  MULTI PARMS         00470200
&XSTRDUMPID       SETC  '&STRDUMPID'            SET XVARIABLE           00470300
.ZG164B           AIF   (K'&STRDUMPID(1) GT 0).ZG164C                   00470400
&ZXSTRDUMPID      SETC  ''          RESET IN/OUTPUT                     00470500
&ZMS              SETC  ' '         *KRQDA*                             00470600
&ZMS              SETC  '&ZMS "STRDUMPID" KEY AND ITS ARGUMENT'         00470700
                  MNOTE 8,' &ZMS ARE REQUIRED.'                         00470800
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00470900
.ZG164C           ANOP  ,                                               00471000
.*-------------------------------------------------------------------   00471100
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00471200
                  AIF   (K'&ZXSTRDUMPID LE 0).ZG164R  NOT I/O           00471300
                  AIF   ('&XSTRDUMPID'(1,1) NE '(').ZG164R              00471400
&ZCGPR            SETC  '&XSTRDUMPID'(2,K'&XSTRDUMPID-2)                00471500
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG164P                   00471600
                  AIF   (K'&ZCGPR GT 2).ZG164Q                          00471700
                  AIF   ('&ZCGPR' EQ '0').ZG164Q                        00471800
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00471900
                  AIF   (T'&ZCGPR NE 'N').ZG164Q  INVALID REG NAME      00472000
.ZG164P           ANOP  ,                                               00472100
                  AIF   (T'&ZCGPR NE 'N').ZG164R  NON NUMERIC           00472200
                  AIF   ('&ZCGPR' LT '2').ZG164Q                        00472300
                  AIF   ('&ZCGPR' LE '12').ZG164R                       00472400
.ZG164Q           ANOP  ,                                               00472500
&ZMS              SETC  '"STRDUMPID='           *KGPRA* MNOTE           00472600
&ZMS              SETC  '&ZMS.&STRDUMPID"'                              00472700
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00472800
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00472900
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00473000
.ZG164R           ANOP  ,                                               00473100
.*----------------------------------------------------------------***   00473200
.***AG.KMEKY01 NAME, RQD INPUT, ME KEYS -XVARIABLE                      00473300
&XDUMMY1          SETC  ''          INITIALIZE XVARIABLE                00473400
                  AIF   (K'&ENTRYNAME LE 0).ZG167C                      00473500
&ZXDUMMY1         SETC  'INPUT'     SET IN/OUTPUT                       00473600
&XDUMMY1          SETC  'ENTRYNAME'             SET XVARIABLE           00473700
&ZXENTRYNAME      SETC  'INPUT'     SET IN/OUTPUT                       00473800
&XENTRYNAME       SETC  '&ENTRYNAME(1)'         SET XVARIABLE PARM      00473900
                  AIF   (N'&ENTRYNAME GT 1).ZG167A  MULTIPLE PARMS      00474000
&XENTRYNAME       SETC  '&ENTRYNAME'            SET XVARIABLE PARM      00474100
.ZG167A           AIF   (N'&ENTRYNAME LE 1).ZG167B  CK NUM              00474200
&ZMS              SETC  '"ENTRYNAME='           *KPOSA* MNOTE           00474300
&ZMS              SETC  '&ZMS.&ENTRYNAME"'                              00474400
&ZMS              SETC  '&ZMS "ENTRYNAME"'                              00474500
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00474600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00474700
.ZG167B           AIF   (K'&XENTRYNAME GT 0).ZG167C  ONE PARM           00474800
&ZXDUMMY1         SETC  ''          RESET IN/OUTPUT                     00474900
&ZXENTRYNAME      SETC  ''          RESET IN/OUTPUT                     00475000
&ZMS              SETC  ' '         *KRQDA*                             00475100
&ZMS              SETC  '&ZMS "ENTRYNAME" KEY AND ITS ARGUMENT'         00475200
                  MNOTE 8,' &ZMS ARE REQUIRED.'                         00475300
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00475400
.ZG167C           ANOP  ,                                               00475500
.*----------------------------------------------------------------***   00475600
.***AG.KMEKY02 NAME, RQD INPUT, ME KEYS -XVARIABLE                      00475700
                  AIF   (K'&ENTRYID LE 0).ZG168D  NO ME KEY             00475800
                  AIF   (N'&ENTRYID LE 1).ZG168A  CK NUM                00475900
&ZMS              SETC  '"ENTRYID='             *KPOSA* MNOTE           00476000
&ZMS              SETC  '&ZMS.&ENTRYID"'                                00476100
&ZMS              SETC  '&ZMS "ENTRYID"'                                00476200
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00476300
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00476400
.ZG168A           AIF   (K'&XDUMMY1 LE 0).ZG168B                        00476500
&ZMS              SETC  '"ENTRYID'  *KMEKA* MNOTE                       00476600
&ZMS              SETC  '&ZMS.=&ENTRYID"'                               00476700
&ZMS              SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'           00476800
&ZMS              SETC  '&ZMS "&XDUMMY1"'                               00476900
                  MNOTE 8,' &ZMS KEY.'                                  00477000
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00477100
                  AGO   .ZG168D                                         00477200
.*                                                                      00477300
.ZG168B           ANOP  ,                                               00477400
&ZXDUMMY1         SETC  'INPUT'     SET IN/OUTPUT                       00477500
&XDUMMY1          SETC  'ENTRYID'   SET XVARIABLE                       00477600
&ZXENTRYID        SETC  'INPUT'     SET IN/OUTPUT                       00477700
&XENTRYID         SETC  '&ENTRYID(1)'           SET XVARIABLE PARM      00477800
                  AIF   (N'&ENTRYID GT 1).ZG168C  MULTIPLE PARMS        00477900
&XENTRYID         SETC  '&ENTRYID'  SET XVARIABLE PARM                  00478000
.ZG168C           AIF   (K'&XENTRYID GT 0).ZG168D  ONE PARM             00478100
&ZXDUMMY1         SETC  ''          RESET IN/OUTPUT                     00478200
&ZXENTRYID        SETC  ''          RESET IN/OUTPUT                     00478300
&ZMS              SETC  ' '         *KRQDA*                             00478400
&ZMS              SETC  '&ZMS "ENTRYID" KEY AND ITS ARGUMENT'           00478500
                  MNOTE 8,' &ZMS ARE REQUIRED.'                         00478600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00478700
.ZG168D           ANOP  ,                                               00478800
.*------------------------------------------------------------------    00478900
.***AG.KME4Y09 NAME, RQD INPUT, ME KEYS -CHECK IF KEY ENTERED           00479000
                  AIF   (K'&XDUMMY1 GT 0).ZG169B                        00479100
&ZXDUMMY1         SETC  ''          RESET IN/OUTPUT                     00479200
&ZXENTRYNAME      SETC  ''          RESET IN/OUTPUT                     00479300
&XDUMMY1          SETC  ''          ENSURE NULL                         00479400
&XENTRYNAME       SETC  ''          ENSURE NULL                         00479500
&ZMS              SETC  'ONE OF THE FOLLOWING'  *KMERA* MNOTE           00479600
&ZMS              SETC  '&ZMS MUTUALLY EXCLUSIVE KEY(S) IS'             00479700
&ZMS              SETC  '&ZMS REQUIRED:'                                00479800
&ZMS              SETC  '&ZMS "ENTRYNAME"'      VALID ME KEY            00479900
&ZMS              SETC  '&ZMS OR "ENTRYID".'    VALID ME KEY            00480000
                  MNOTE 8,' &ZMS '                                      00480100
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00480200
.ZG169B           ANOP  ,                                               00480300
.*-------------------------------------------------------------------   00480400
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           00480500
.ZG167            AIF   ('&XDUMMY1' NE 'ENTRYNAME').ZG168               00480600
.*-------------------------------------------------------------------   00480700
.***AG.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 00480800
                  AIF   (K'&ZXENTRYNAME LE 0).ZG167R  NOT I/O           00480900
                  AIF   ('&XENTRYNAME'(1,1) NE '(').ZG167R              00481000
&ZCGPR            SETC  '&XENTRYNAME'(2,K'&XENTRYNAME-2)                00481100
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG167P                   00481200
                  AIF   (K'&ZCGPR GT 2).ZG167Q                          00481300
                  AIF   ('&ZCGPR' EQ '0').ZG167Q                        00481400
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00481500
                  AIF   (T'&ZCGPR NE 'N').ZG167Q  INVALID REG NAME      00481600
.ZG167P           ANOP  ,                                               00481700
                  AIF   (T'&ZCGPR NE 'N').ZG167R  NON NUMERIC           00481800
                  AIF   ('&ZCGPR' LT '2').ZG167Q                        00481900
                  AIF   ('&ZCGPR' LE '12').ZG167R                       00482000
.ZG167Q           ANOP  ,                                               00482100
&ZMS              SETC  '"ENTRYNAME='           *KGPRA* MNOTE           00482200
&ZMS              SETC  '&ZMS.&ENTRYNAME"'                              00482300
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00482400
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00482500
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00482600
.ZG167R           ANOP  ,                                               00482700
.*-------------------------------------------------------------------   00482800
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           00482900
.ZG168            AIF   ('&XDUMMY1' NE 'ENTRYID').ZG169                 00483000
.*-------------------------------------------------------------------   00483100
.***AG.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 00483200
                  AIF   (K'&ZXENTRYID LE 0).ZG168R  NOT I/O             00483300
                  AIF   ('&XENTRYID'(1,1) NE '(').ZG168R                00483400
&ZCGPR            SETC  '&XENTRYID'(2,K'&XENTRYID-2)                    00483500
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG168P                   00483600
                  AIF   (K'&ZCGPR GT 2).ZG168Q                          00483700
                  AIF   ('&ZCGPR' EQ '0').ZG168Q                        00483800
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00483900
                  AIF   (T'&ZCGPR NE 'N').ZG168Q  INVALID REG NAME      00484000
.ZG168P           ANOP  ,                                               00484100
                  AIF   (T'&ZCGPR NE 'N').ZG168R  NON NUMERIC           00484200
                  AIF   ('&ZCGPR' LT '2').ZG168Q                        00484300
                  AIF   ('&ZCGPR' LE '12').ZG168R                       00484400
.ZG168Q           ANOP  ,                                               00484500
&ZMS              SETC  '"ENTRYID='             *KGPRA* MNOTE           00484600
&ZMS              SETC  '&ZMS.&ENTRYID"'                                00484700
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00484800
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00484900
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00485000
.ZG168R           ANOP  ,                                               00485100
.*-------------------------------------------------------------------   00485200
.***AG.KMEKY15 NAME, RQD INPUT, ME KEYS -END                            00485300
.ZG169            ANOP  ,           END MUTUALLY EXCLUSIVE KEYS         00485400
.*----------------------------------------------------------------***   00485500
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00485600
                  AIF   (N'&ADJUNCT LE 1).ZG171A  CK NUM                00485700
&ZMS              SETC  '"ADJUNCT='             *KPOSA* MNOTE           00485800
&ZMS              SETC  '&ZMS.&ADJUNCT"'                                00485900
&ZMS              SETC  '&ZMS "ADJUNCT"'                                00486000
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00486100
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00486200
.ZG171A           ANOP  ,                                               00486300
.*-------------------------------------------------------------------   00486400
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00486500
&XADJUNCT         SETC  ''          INITIALIZE XVARIABLE                00486600
.ZG172A   AIF   ('&ADJUNCT(1)' NE 'NO').ZG173A                          00486700
&XADJUNCT         SETC  'NO'        SET KEYWORD                         00486800
.*-------------------------------------------------------------------   00486900
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00487000
.ZG173A   AIF   ('&ADJUNCT(1)' NE 'YES').ZG174A                         00487100
&XADJUNCT         SETC  'YES'       SET KEYWORD                         00487200
.*-------------------------------------------------------------------   00487300
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00487400
.ZG174A           AIF   (K'&XADJUNCT GT 0).ZG174C  KEYWORD              00487500
                  AIF   (K'&ADJUNCT(1) LE 0).ZG174B                     00487600
&ZMS              SETC  '"ADJUNCT='             *KUKWA* MNOTE           00487700
&ZMS              SETC  '&ZMS.&ADJUNCT"'                                00487800
&ZMS              SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '       00487900
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00488000
&ZMS              SETC  '&ZMS "NO"'             VALID KEYWORD           00488100
&ZMS              SETC  '&ZMS OR "YES".'        VALID KEYWORD           00488200
                  MNOTE 8,' &ZMS '                                      00488300
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00488400
.ZG174B           ANOP  ,                                               00488500
&XADJUNCT         SETC  'NO'        SET DEFAULT KEYWORD                 00488600
.ZG174C           ANOP  ,                                               00488700
&ZXADJUNCT        SETC  'INPUT'     SET IN/OUTPUT                       00488800
.*----------------------------------------------------------------***   00488900
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00489000
                  AIF   (N'&ENTRYDATA LE 1).ZG176A  CK NUM              00489100
&ZMS              SETC  '"ENTRYDATA='           *KPOSA* MNOTE           00489200
&ZMS              SETC  '&ZMS.&ENTRYDATA"'                              00489300
&ZMS              SETC  '&ZMS "ENTRYDATA"'                              00489400
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00489500
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00489600
.ZG176A           ANOP  ,                                               00489700
.*-------------------------------------------------------------------   00489800
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00489900
&XENTRYDATA       SETC  ''          INITIALIZE XVARIABLE                00490000
.ZG177A   AIF   ('&ENTRYDATA(1)' NE 'NO').ZG178A                        00490100
&XENTRYDATA       SETC  'NO'        SET KEYWORD                         00490200
.*-------------------------------------------------------------------   00490300
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00490400
.ZG178A   AIF   ('&ENTRYDATA(1)' NE 'YES').ZG179A                       00490500
&XENTRYDATA       SETC  'YES'       SET KEYWORD                         00490600
.*-------------------------------------------------------------------   00490700
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00490800
.ZG179A           AIF   (K'&XENTRYDATA GT 0).ZG179C  KEYWORD            00490900
                  AIF   (K'&ENTRYDATA(1) LE 0).ZG179B                   00491000
&ZMS              SETC  '"ENTRYDATA='           *KUKWA* MNOTE           00491100
&ZMS              SETC  '&ZMS.&ENTRYDATA"'                              00491200
&ZMS              SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '       00491300
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00491400
&ZMS              SETC  '&ZMS "NO"'             VALID KEYWORD           00491500
&ZMS              SETC  '&ZMS OR "YES".'        VALID KEYWORD           00491600
                  MNOTE 8,' &ZMS '                                      00491700
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00491800
.ZG179B           ANOP  ,                                               00491900
&XENTRYDATA       SETC  'NO'        SET DEFAULT KEYWORD                 00492000
.ZG179C           ANOP  ,                                               00492100
&ZXENTRYDATA      SETC  'INPUT'     SET IN/OUTPUT                       00492200
.*-------------------------------------------------------------------   00492300
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00492400
.ZG180            ANOP  ,                                               00492500
&ZTLC             SETC 'EMCONTROLS'                                     00492600
                  AIF   ('&TYPE(1)' NE '&ZTLC').ZG204                   00492700
&XTYPE            SETC  'EMCONTROLS'            SET KEYWORD             00492800
                  AIF   (N'&TYPE LE 1).ZG180A   CK NUM                  00492900
&ZMS              SETC  '"TYPE='    *KPOSA* MNOTE                       00493000
&ZMS              SETC  '&ZMS.&TYPE"'                                   00493100
&ZMS              SETC  '&ZMS "TYPE"'                                   00493200
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00493300
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00493400
.ZG180A           ANOP  ,                                               00493500
.*------------------------------------------------------------------    00493600
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00493700
&ZCVAL            SETC ''           CLEAR ERROR KEY ACCUMULATOR         00493800
.ZG180A0          AIF   (K'&STRLEVEL LE 0).ZG180A1  OK                  00493900
&ZCVAL            SETC '&ZCVAL STRLEVEL'        INCORRECT KEY USED      00494000
.ZG180A1          AIF   (K'&CLASSTYPE LE 0).ZG180A2  OK                 00494100
&ZCVAL            SETC '&ZCVAL CLASSTYPE'       INCORRECT KEY USED      00494200
.ZG180A2          AIF   (K'&CLASSLEVEL LE 0).ZG180A3  OK                00494300
&ZCVAL            SETC '&ZCVAL CLASSLEVEL'      INCORRECT KEY USED      00494400
.ZG180A3          AIF   (K'&CLASSVAL LE 0).ZG180A4  OK                  00494500
&ZCVAL            SETC '&ZCVAL CLASSVAL'        INCORRECT KEY USED      00494600
.ZG180A4          AIF   (K'&STARTPOS LE 0).ZG180A5  OK                  00494700
&ZCVAL            SETC '&ZCVAL STARTPOS'        INCORRECT KEY USED      00494800
.ZG180A5          AIF   (K'&ENDPOS LE 0).ZG180A6  OK                    00494900
&ZCVAL            SETC '&ZCVAL ENDPOS'          INCORRECT KEY USED      00495000
.ZG180A6          AIF   (K'&ORDER LE 0).ZG180A7  OK                     00495100
&ZCVAL            SETC '&ZCVAL ORDER'           INCORRECT KEY USED      00495200
.ZG180A7          AIF   (K'&ADJUNCT LE 0).ZG180A8  OK                   00495300
&ZCVAL            SETC '&ZCVAL ADJUNCT'         INCORRECT KEY USED      00495400
.ZG180A8          AIF   (K'&ENTRYDATA LE 0).ZG180A9  OK                 00495500
&ZCVAL            SETC '&ZCVAL ENTRYDATA'       INCORRECT KEY USED      00495600
.ZG180A9          AIF   (K'&LISTNUMLEVEL LE 0).ZG180A10  OK             00495700
&ZCVAL            SETC '&ZCVAL LISTNUMLEVEL'    INCORRECT KEY USED      00495800
.ZG180A10         AIF   (K'&ENTRYNAME LE 0).ZG180A11  OK                00495900
&ZCVAL            SETC '&ZCVAL ENTRYNAME'       INCORRECT KEY USED      00496000
.ZG180A11         AIF   (K'&ENTRYID LE 0).ZG180A12  OK                  00496100
&ZCVAL            SETC '&ZCVAL ENTRYID'         INCORRECT KEY USED      00496200
.ZG180A12         AIF   (K'&EQLEVEL LE 0).ZG180A13  OK                  00496300
&ZCVAL            SETC '&ZCVAL EQLEVEL'         INCORRECT KEY USED      00496400
.ZG180A13         AIF   (K'&CONIDVAL LE 0).ZG180A14  OK                 00496500
&ZCVAL            SETC '&ZCVAL CONIDVAL'        INCORRECT KEY USED      00496600
.ZG180A14         AIF   (K'&ZCVAL LE 0).ZG180A15  OK                    00496700
&ZCVAL            SETC '&ZCVAL'(2,K'&ZCVAL-1)                           00496800
&ZMS              SETC  '"TYPE'     *KMEIA* MNOTE                       00496900
&ZMS              SETC  '&ZMS.=&TYPE"'                                  00497000
&ZMS              SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'            00497100
                  MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'            00497200
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00497300
.ZG180A15         ANOP  ,                                               00497400
.*----------------------------------------------------------------***   00497500
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00497600
                  AIF   (N'&STRNAME LE 1).ZG182A  CK NUM                00497700
&ZMS              SETC  '"STRNAME='             *KPOSA* MNOTE           00497800
&ZMS              SETC  '&ZMS.&STRNAME"'                                00497900
&ZMS              SETC  '&ZMS "STRNAME"'                                00498000
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00498100
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00498200
.ZG182A           ANOP  ,                                               00498300
.*-------------------------------------------------------------------   00498400
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00498500
&ZXSTRNAME        SETC  'INPUT'     SET IN/OUTPUT                       00498600
&XSTRNAME         SETC  '&STRNAME(1)'           SET XVARIABLE           00498700
                  AIF   (N'&STRNAME GT 1).ZG182B  MULTI PARMS           00498800
&XSTRNAME         SETC  '&STRNAME'  SET XVARIABLE                       00498900
.ZG182B           AIF   (K'&STRNAME(1) GT 0).ZG182C                     00499000
&ZXSTRNAME        SETC  ''          RESET IN/OUTPUT                     00499100
&ZMS              SETC  ' '         *KRQDA*                             00499200
&ZMS              SETC  '&ZMS "STRNAME" KEY AND ITS ARGUMENT'           00499300
                  MNOTE 8,' &ZMS ARE REQUIRED.'                         00499400
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00499500
.ZG182C           ANOP  ,                                               00499600
.*-------------------------------------------------------------------   00499700
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00499800
                  AIF   (K'&ZXSTRNAME LE 0).ZG182R  NOT I/O             00499900
                  AIF   ('&XSTRNAME'(1,1) NE '(').ZG182R                00500000
&ZCGPR            SETC  '&XSTRNAME'(2,K'&XSTRNAME-2)                    00500100
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG182P                   00500200
                  AIF   (K'&ZCGPR GT 2).ZG182Q                          00500300
                  AIF   ('&ZCGPR' EQ '0').ZG182Q                        00500400
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00500500
                  AIF   (T'&ZCGPR NE 'N').ZG182Q  INVALID REG NAME      00500600
.ZG182P           ANOP  ,                                               00500700
                  AIF   (T'&ZCGPR NE 'N').ZG182R  NON NUMERIC           00500800
                  AIF   ('&ZCGPR' LT '2').ZG182Q                        00500900
                  AIF   ('&ZCGPR' LE '12').ZG182R                       00501000
.ZG182Q           ANOP  ,                                               00501100
&ZMS              SETC  '"STRNAME='             *KGPRA* MNOTE           00501200
&ZMS              SETC  '&ZMS.&STRNAME"'                                00501300
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00501400
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00501500
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00501600
.ZG182R           ANOP  ,                                               00501700
.*----------------------------------------------------------------***   00501800
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00501900
                  AIF   (N'&STRDUMPID LE 1).ZG185A  CK NUM              00502000
&ZMS              SETC  '"STRDUMPID='           *KPOSA* MNOTE           00502100
&ZMS              SETC  '&ZMS.&STRDUMPID"'                              00502200
&ZMS              SETC  '&ZMS "STRDUMPID"'                              00502300
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00502400
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00502500
.ZG185A           ANOP  ,                                               00502600
.*-------------------------------------------------------------------   00502700
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00502800
&ZXSTRDUMPID      SETC  'INPUT'     SET IN/OUTPUT                       00502900
&XSTRDUMPID       SETC  '&STRDUMPID(1)'         SET XVARIABLE           00503000
                  AIF   (N'&STRDUMPID GT 1).ZG185B  MULTI PARMS         00503100
&XSTRDUMPID       SETC  '&STRDUMPID'            SET XVARIABLE           00503200
.ZG185B           AIF   (K'&STRDUMPID(1) GT 0).ZG185C                   00503300
&ZXSTRDUMPID      SETC  ''          RESET IN/OUTPUT                     00503400
&ZMS              SETC  ' '         *KRQDA*                             00503500
&ZMS              SETC  '&ZMS "STRDUMPID" KEY AND ITS ARGUMENT'         00503600
                  MNOTE 8,' &ZMS ARE REQUIRED.'                         00503700
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00503800
.ZG185C           ANOP  ,                                               00503900
.*-------------------------------------------------------------------   00504000
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00504100
                  AIF   (K'&ZXSTRDUMPID LE 0).ZG185R  NOT I/O           00504200
                  AIF   ('&XSTRDUMPID'(1,1) NE '(').ZG185R              00504300
&ZCGPR            SETC  '&XSTRDUMPID'(2,K'&XSTRDUMPID-2)                00504400
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG185P                   00504500
                  AIF   (K'&ZCGPR GT 2).ZG185Q                          00504600
                  AIF   ('&ZCGPR' EQ '0').ZG185Q                        00504700
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00504800
                  AIF   (T'&ZCGPR NE 'N').ZG185Q  INVALID REG NAME      00504900
.ZG185P           ANOP  ,                                               00505000
                  AIF   (T'&ZCGPR NE 'N').ZG185R  NON NUMERIC           00505100
                  AIF   ('&ZCGPR' LT '2').ZG185Q                        00505200
                  AIF   ('&ZCGPR' LE '12').ZG185R                       00505300
.ZG185Q           ANOP  ,                                               00505400
&ZMS              SETC  '"STRDUMPID='           *KGPRA* MNOTE           00505500
&ZMS              SETC  '&ZMS.&STRDUMPID"'                              00505600
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00505700
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00505800
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00505900
.ZG185R           ANOP  ,                                               00506000
.*------------------------------------------------------------------    00506100
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00506200
&XEMCLEVEL        SETC  ''          INITIALIZE XVARIABLE                00506300
.*-------------------------------------------------------------------   00506400
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00506500
.ZG189            ANOP  ,                                               00506600
                  AIF   (K'&EMCLEVEL(1) LE 0).ZG189A                    00506700
&ZTLC             SETC 'SUMMARY'                                        00506800
                  AIF   ('&EMCLEVEL(1)' NE '&ZTLC').ZG196               00506900
&XEMCLEVEL        SETC  'SUMMARY'   SET KEYWORD                         00507000
                  AIF   (N'&EMCLEVEL LE 1).ZG189A  CK NUM               00507100
&ZMS              SETC  '"EMCLEVEL='            *KPOSA* MNOTE           00507200
&ZMS              SETC  '&ZMS.&EMCLEVEL"'                               00507300
&ZMS              SETC  '&ZMS "EMCLEVEL"'                               00507400
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00507500
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00507600
.ZG189A           ANOP  ,                                               00507700
.*------------------------------------------------------------------    00507800
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00507900
&ZCVAL            SETC ''           CLEAR ERROR KEY ACCUMULATOR         00508000
.ZG189A0          AIF   (K'&LISTNUMVAL LE 0).ZG189A1  OK                00508100
&ZCVAL            SETC '&ZCVAL LISTNUMVAL'      INCORRECT KEY USED      00508200
.ZG189A1          AIF   (K'&ENTRYKEY LE 0).ZG189A2  OK                  00508300
&ZCVAL            SETC '&ZCVAL ENTRYKEY'        INCORRECT KEY USED      00508400
.ZG189A2          AIF   (K'&ZCVAL LE 0).ZG189A3  OK                     00508500
&ZCVAL            SETC '&ZCVAL'(2,K'&ZCVAL-1)                           00508600
&ZMS              SETC  '"EMCLEVEL'             *KMEIA* MNOTE           00508700
&ZMS              SETC  '&ZMS.=&EMCLEVEL"'                              00508800
&ZMS              SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'            00508900
                  MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'            00509000
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00509100
.ZG189A3          ANOP  ,                                               00509200
.*----------------------------------------------------------------***   00509300
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00509400
                  AIF   (N'&STARTVAL LE 1).ZG191A  CK NUM               00509500
&ZMS              SETC  '"STARTVAL='            *KPOSA* MNOTE           00509600
&ZMS              SETC  '&ZMS.&STARTVAL"'                               00509700
&ZMS              SETC  '&ZMS "STARTVAL"'                               00509800
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00509900
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00510000
.ZG191A           ANOP  ,                                               00510100
.*-------------------------------------------------------------------   00510200
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00510300
&ZXSTARTVAL       SETC  'INPUT'     SET IN/OUTPUT                       00510400
&XSTARTVAL        SETC  'ALL'                                           00510500
                  AIF   (K'&STARTVAL(1) LE 0).ZG191B  PARM              00510600
&XSTARTVAL        SETC  '&STARTVAL(1)'          SET XVARIABLE           00510700
                  AIF   (N'&STARTVAL GT 1).ZG191B  MULTI PARMS          00510800
&XSTARTVAL        SETC  '&STARTVAL'             SET XVARIABLE           00510900
.ZG191B           ANOP  ,                                               00511000
.*-------------------------------------------------------------------   00511100
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00511200
                  AIF   (K'&ZXSTARTVAL LE 0).ZG191R  NOT I/O            00511300
                  AIF   ('&XSTARTVAL' EQ 'ALL').ZG191R                  00511400
                  AIF   ('&XSTARTVAL'(1,1) NE '(').ZG191R               00511500
&ZCGPR            SETC  '&XSTARTVAL'(2,K'&XSTARTVAL-2)                  00511600
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG191P                   00511700
                  AIF   (K'&ZCGPR GT 2).ZG191Q                          00511800
                  AIF   ('&ZCGPR' EQ '0').ZG191Q                        00511900
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00512000
                  AIF   (T'&ZCGPR NE 'N').ZG191Q  INVALID REG NAME      00512100
.ZG191P           ANOP  ,                                               00512200
                  AIF   (T'&ZCGPR NE 'N').ZG191R  NON NUMERIC           00512300
                  AIF   ('&ZCGPR' LT '2').ZG191Q                        00512400
                  AIF   ('&ZCGPR' LE '12').ZG191R                       00512500
.ZG191Q           ANOP  ,                                               00512600
&ZMS              SETC  '"STARTVAL='            *KGPRA* MNOTE           00512700
&ZMS              SETC  '&ZMS.&STARTVAL"'                               00512800
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00512900
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00513000
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00513100
.ZG191R           ANOP  ,                                               00513200
.*----------------------------------------------------------------***   00513300
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00513400
                  AIF   (N'&ENDVAL LE 1).ZG193A  CK NUM                 00513500
&ZMS              SETC  '"ENDVAL='  *KPOSA* MNOTE                       00513600
&ZMS              SETC  '&ZMS.&ENDVAL"'                                 00513700
&ZMS              SETC  '&ZMS "ENDVAL"'                                 00513800
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00513900
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00514000
.ZG193A           ANOP  ,                                               00514100
.*-------------------------------------------------------------------   00514200
.***AG.KXVAR17 NAME, OPT INPUT, KEYS -XVARIABLE                         00514300
&XENDVAL          SETC  'STARTVAL'  SET DEFAULT                         00514400
                  AIF   (K'&ENDVAL(1) LE 0).ZG193C  PARM                00514500
&XENDVAL          SETC  '&ENDVAL(1)'            SET XVARIABLE           00514600
                  AIF   (N'&ENDVAL GT 1).ZG193B  MULTI PARMS            00514700
&XENDVAL          SETC  '&ENDVAL'   SET XVARIABLE                       00514800
.ZG193B           AIF   (K'&STARTVAL(1) GT 0).ZG193C  KEY               00514900
&ZMS              SETC  '"ENDVAL'   *KDEPA* MNOTE                       00515000
&ZMS              SETC  '&ZMS.=&ENDVAL"'                                00515100
&ZMS              SETC  '&ZMS CAN ONLY BE SPECIFIED IF'                 00515200
&ZMS              SETC  '&ZMS '                                         00515300
&ZMS              SETC  '&ZMS "STARTVAL"'                               00515400
                  MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                    00515500
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00515600
.ZG193C           ANOP  ,                                               00515700
&ZXENDVAL         SETC  'INPUT'     SET IN/OUTPUT                       00515800
.*-------------------------------------------------------------------   00515900
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00516000
                  AIF   (K'&ZXENDVAL LE 0).ZG193R  NOT I/O              00516100
                  AIF   ('&XENDVAL' EQ 'STARTVAL').ZG193R               00516200
                  AIF   ('&XENDVAL'(1,1) NE '(').ZG193R                 00516300
&ZCGPR            SETC  '&XENDVAL'(2,K'&XENDVAL-2)                      00516400
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG193P                   00516500
                  AIF   (K'&ZCGPR GT 2).ZG193Q                          00516600
                  AIF   ('&ZCGPR' EQ '0').ZG193Q                        00516700
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00516800
                  AIF   (T'&ZCGPR NE 'N').ZG193Q  INVALID REG NAME      00516900
.ZG193P           ANOP  ,                                               00517000
                  AIF   (T'&ZCGPR NE 'N').ZG193R  NON NUMERIC           00517100
                  AIF   ('&ZCGPR' LT '2').ZG193Q                        00517200
                  AIF   ('&ZCGPR' LE '12').ZG193R                       00517300
.ZG193Q           ANOP  ,                                               00517400
&ZMS              SETC  '"ENDVAL='  *KGPRA* MNOTE                       00517500
&ZMS              SETC  '&ZMS.&ENDVAL"'                                 00517600
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00517700
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00517800
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00517900
.ZG193R           ANOP  ,                                               00518000
.*-------------------------------------------------------------------   00518100
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00518200
.ZG196            ANOP  ,                                               00518300
&ZTLC             SETC 'EMC'                                            00518400
                  AIF   ('&EMCLEVEL(1)' NE '&ZTLC').ZG203               00518500
&XEMCLEVEL        SETC  'EMC'       SET KEYWORD                         00518600
                  AIF   (N'&EMCLEVEL LE 1).ZG196A  CK NUM               00518700
&ZMS              SETC  '"EMCLEVEL='            *KPOSA* MNOTE           00518800
&ZMS              SETC  '&ZMS.&EMCLEVEL"'                               00518900
&ZMS              SETC  '&ZMS "EMCLEVEL"'                               00519000
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00519100
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00519200
.ZG196A           ANOP  ,                                               00519300
.*------------------------------------------------------------------    00519400
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00519500
&ZCVAL            SETC ''           CLEAR ERROR KEY ACCUMULATOR         00519600
.ZG196A0          AIF   (K'&STARTVAL LE 0).ZG196A1  OK                  00519700
&ZCVAL            SETC '&ZCVAL STARTVAL'        INCORRECT KEY USED      00519800
.ZG196A1          AIF   (K'&ENDVAL LE 0).ZG196A2  OK                    00519900
&ZCVAL            SETC '&ZCVAL ENDVAL'          INCORRECT KEY USED      00520000
.ZG196A2          AIF   (K'&ZCVAL LE 0).ZG196A3  OK                     00520100
&ZCVAL            SETC '&ZCVAL'(2,K'&ZCVAL-1)                           00520200
&ZMS              SETC  '"EMCLEVEL'             *KMEIA* MNOTE           00520300
&ZMS              SETC  '&ZMS.=&EMCLEVEL"'                              00520400
&ZMS              SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'            00520500
                  MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'            00520600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00520700
.ZG196A3          ANOP  ,                                               00520800
.*----------------------------------------------------------------***   00520900
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00521000
                  AIF   (N'&LISTNUMVAL LE 1).ZG198A  CK NUM             00521100
&ZMS              SETC  '"LISTNUMVAL='          *KPOSA* MNOTE           00521200
&ZMS              SETC  '&ZMS.&LISTNUMVAL"'                             00521300
&ZMS              SETC  '&ZMS "LISTNUMVAL"'                             00521400
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00521500
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00521600
.ZG198A           ANOP  ,                                               00521700
.*-------------------------------------------------------------------   00521800
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00521900
&ZXLISTNUMVAL     SETC  'INPUT'     SET IN/OUTPUT                       00522000
&XLISTNUMVAL      SETC  '&LISTNUMVAL(1)'        SET XVARIABLE           00522100
                  AIF   (N'&LISTNUMVAL GT 1).ZG198B  MULTI PARMS        00522200
&XLISTNUMVAL      SETC  '&LISTNUMVAL'           SET XVARIABLE           00522300
.ZG198B           AIF   (K'&LISTNUMVAL(1) GT 0).ZG198C                  00522400
&ZXLISTNUMVAL     SETC  ''          RESET IN/OUTPUT                     00522500
&ZMS              SETC  ' '         *KRQDA*                             00522600
&ZMS              SETC  '&ZMS "LISTNUMVAL" KEY AND ITS ARGUMENT'        00522700
                  MNOTE 8,' &ZMS ARE REQUIRED.'                         00522800
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00522900
.ZG198C           ANOP  ,                                               00523000
.*-------------------------------------------------------------------   00523100
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00523200
                  AIF   (K'&ZXLISTNUMVAL LE 0).ZG198R  NOT I/O          00523300
                  AIF   ('&XLISTNUMVAL'(1,1) NE '(').ZG198R             00523400
&ZCGPR            SETC  '&XLISTNUMVAL'(2,K'&XLISTNUMVAL-2)              00523500
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG198P                   00523600
                  AIF   (K'&ZCGPR GT 2).ZG198Q                          00523700
                  AIF   ('&ZCGPR' EQ '0').ZG198Q                        00523800
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00523900
                  AIF   (T'&ZCGPR NE 'N').ZG198Q  INVALID REG NAME      00524000
.ZG198P           ANOP  ,                                               00524100
                  AIF   (T'&ZCGPR NE 'N').ZG198R  NON NUMERIC           00524200
                  AIF   ('&ZCGPR' LT '2').ZG198Q                        00524300
                  AIF   ('&ZCGPR' LE '12').ZG198R                       00524400
.ZG198Q           ANOP  ,                                               00524500
&ZMS              SETC  '"LISTNUMVAL='          *KGPRA* MNOTE           00524600
&ZMS              SETC  '&ZMS.&LISTNUMVAL"'                             00524700
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00524800
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00524900
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00525000
.ZG198R           ANOP  ,                                               00525100
.*----------------------------------------------------------------***   00525200
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00525300
                  AIF   (N'&ENTRYKEY LE 1).ZG201A  CK NUM               00525400
&ZMS              SETC  '"ENTRYKEY='            *KPOSA* MNOTE           00525500
&ZMS              SETC  '&ZMS.&ENTRYKEY"'                               00525600
&ZMS              SETC  '&ZMS "ENTRYKEY"'                               00525700
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00525800
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00525900
.ZG201A           ANOP  ,                                               00526000
.*-------------------------------------------------------------------   00526100
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00526200
&ZXENTRYKEY       SETC  'INPUT'     SET IN/OUTPUT                       00526300
&XENTRYKEY        SETC  'NO_KEY'                                        00526400
                  AIF   (K'&ENTRYKEY(1) LE 0).ZG201B  PARM              00526500
&XENTRYKEY        SETC  '&ENTRYKEY(1)'          SET XVARIABLE           00526600
                  AIF   (N'&ENTRYKEY GT 1).ZG201B  MULTI PARMS          00526700
&XENTRYKEY        SETC  '&ENTRYKEY'             SET XVARIABLE           00526800
.ZG201B           ANOP  ,                                               00526900
.*-------------------------------------------------------------------   00527000
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00527100
                  AIF   (K'&ZXENTRYKEY LE 0).ZG201R  NOT I/O            00527200
                  AIF   ('&XENTRYKEY' EQ 'NO_KEY').ZG201R               00527300
                  AIF   ('&XENTRYKEY'(1,1) NE '(').ZG201R               00527400
&ZCGPR            SETC  '&XENTRYKEY'(2,K'&XENTRYKEY-2)                  00527500
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG201P                   00527600
                  AIF   (K'&ZCGPR GT 2).ZG201Q                          00527700
                  AIF   ('&ZCGPR' EQ '0').ZG201Q                        00527800
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00527900
                  AIF   (T'&ZCGPR NE 'N').ZG201Q  INVALID REG NAME      00528000
.ZG201P           ANOP  ,                                               00528100
                  AIF   (T'&ZCGPR NE 'N').ZG201R  NON NUMERIC           00528200
                  AIF   ('&ZCGPR' LT '2').ZG201Q                        00528300
                  AIF   ('&ZCGPR' LE '12').ZG201R                       00528400
.ZG201Q           ANOP  ,                                               00528500
&ZMS              SETC  '"ENTRYKEY='            *KGPRA* MNOTE           00528600
&ZMS              SETC  '&ZMS.&ENTRYKEY"'                               00528700
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00528800
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00528900
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00529000
.ZG201R           ANOP  ,                                               00529100
.*------------------------------------------------------------------    00529200
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00529300
.ZG203            ANOP  ,                                               00529400
&ZXEMCLEVEL       SETC  'INPUT'     SET IN/OUTPUT                       00529500
                  AIF   (K'&XEMCLEVEL GT 0).ZG203E  VALID ARG           00529600
                  AIF   (T'&EMCLEVEL EQ 'O').ZG203D  OMITTED            00529700
&ZASYSLNDX        SETA  0                                               00529800
.ZG203A           ANOP  ,           POSITIONAL MACRO KEY                00529900
&ZASYSLNDX        SETA  &ZASYSLNDX+1                                    00530000
                  AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG203C               00530100
&ZTLC             SETC 'EMCLEVEL'                                       00530200
                  AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG203A      00530300
.ZG203B           ANOP  ,                                               00530400
&ZXEMCLEVEL       SETC  ''          RESET IN/OUTPUT                     00530500
&ZMS              SETC  'THE "EMCLEVEL" KEY'    *KOPTA* MNOTE           00530600
&ZMS              SETC  '&ZMS MUST CONTAIN ONE'                         00530700
                  MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                00530800
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00530900
                  AGO   .ZG203E                                         00531000
.ZG203C           ANOP  ,                                               00531100
&ZXEMCLEVEL       SETC  ''          RESET IN/OUTPUT                     00531200
&ZMS              SETC  '"EMCLEVEL='            *KUKWA* MNOTE           00531300
&ZMS              SETC  '&ZMS.&EMCLEVEL"'                               00531400
&ZMS              SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '       00531500
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00531600
&ZMS              SETC  '&ZMS "SUMMARY"'        VALID KEYWORD           00531700
&ZMS              SETC  '&ZMS OR "EMC".'        VALID KEYWORD           00531800
                  MNOTE 8,' &ZMS '                                      00531900
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00532000
                  AGO   .ZG203E                                         00532100
.ZG203D           ANOP  ,                                               00532200
&XEMCLEVEL        SETC  'SUMMARY'   SET DEFAULT KEYWORD                 00532300
.ZG203E           ANOP  ,                                               00532400
.*------------------------------------------------------------------    00532500
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00532600
                  AIF   (K'&EMCLEVEL(1) GT 0).ZG203F  PARM              00532700
&XEMCLEVEL        SETC  ''          ENSURE NULL KEYWORD                 00532800
&ZXEMCLEVEL       SETC  ''          RESET IN/OUTPUT                     00532900
&ZMS              SETC  'THE'                                           00533000
&ZMS              SETC  '&ZMS "EMCLEVEL" KEY AND ITS ARGUMENT'          00533100
&ZMS              SETC  '&ZMS ARE REQUIRED.'                            00533200
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00533300
&ZMS              SETC  '&ZMS "SUMMARY"'        VALID KEYWORD           00533400
&ZMS              SETC  '&ZMS OR "EMC".'        VALID KEYWORD           00533500
                  MNOTE 8,' &ZMS '                                      00533600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00533700
.ZG203F           ANOP  ,                                               00533800
.*-------------------------------------------------------------------   00533900
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00534000
.ZG204            ANOP  ,                                               00534100
&ZTLC             SETC 'EVENTQS'                                        00534200
                  AIF   ('&TYPE(1)' NE '&ZTLC').ZG225                   00534300
&XTYPE            SETC  'EVENTQS'   SET KEYWORD                         00534400
                  AIF   (N'&TYPE LE 1).ZG204A   CK NUM                  00534500
&ZMS              SETC  '"TYPE='    *KPOSA* MNOTE                       00534600
&ZMS              SETC  '&ZMS.&TYPE"'                                   00534700
&ZMS              SETC  '&ZMS "TYPE"'                                   00534800
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00534900
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00535000
.ZG204A           ANOP  ,                                               00535100
.*------------------------------------------------------------------    00535200
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00535300
&ZCVAL            SETC ''           CLEAR ERROR KEY ACCUMULATOR         00535400
.ZG204A0          AIF   (K'&STRLEVEL LE 0).ZG204A1  OK                  00535500
&ZCVAL            SETC '&ZCVAL STRLEVEL'        INCORRECT KEY USED      00535600
.ZG204A1          AIF   (K'&CLASSTYPE LE 0).ZG204A2  OK                 00535700
&ZCVAL            SETC '&ZCVAL CLASSTYPE'       INCORRECT KEY USED      00535800
.ZG204A2          AIF   (K'&CLASSLEVEL LE 0).ZG204A3  OK                00535900
&ZCVAL            SETC '&ZCVAL CLASSLEVEL'      INCORRECT KEY USED      00536000
.ZG204A3          AIF   (K'&CLASSVAL LE 0).ZG204A4  OK                  00536100
&ZCVAL            SETC '&ZCVAL CLASSVAL'        INCORRECT KEY USED      00536200
.ZG204A4          AIF   (K'&STARTPOS LE 0).ZG204A5  OK                  00536300
&ZCVAL            SETC '&ZCVAL STARTPOS'        INCORRECT KEY USED      00536400
.ZG204A5          AIF   (K'&ENDPOS LE 0).ZG204A6  OK                    00536500
&ZCVAL            SETC '&ZCVAL ENDPOS'          INCORRECT KEY USED      00536600
.ZG204A6          AIF   (K'&ORDER LE 0).ZG204A7  OK                     00536700
&ZCVAL            SETC '&ZCVAL ORDER'           INCORRECT KEY USED      00536800
.ZG204A7          AIF   (K'&ADJUNCT LE 0).ZG204A8  OK                   00536900
&ZCVAL            SETC '&ZCVAL ADJUNCT'         INCORRECT KEY USED      00537000
.ZG204A8          AIF   (K'&ENTRYDATA LE 0).ZG204A9  OK                 00537100
&ZCVAL            SETC '&ZCVAL ENTRYDATA'       INCORRECT KEY USED      00537200
.ZG204A9          AIF   (K'&LISTNUMLEVEL LE 0).ZG204A10  OK             00537300
&ZCVAL            SETC '&ZCVAL LISTNUMLEVEL'    INCORRECT KEY USED      00537400
.ZG204A10         AIF   (K'&LISTNUMVAL LE 0).ZG204A11  OK               00537500
&ZCVAL            SETC '&ZCVAL LISTNUMVAL'      INCORRECT KEY USED      00537600
.ZG204A11         AIF   (K'&ENTRYKEY LE 0).ZG204A12  OK                 00537700
&ZCVAL            SETC '&ZCVAL ENTRYKEY'        INCORRECT KEY USED      00537800
.ZG204A12         AIF   (K'&ENTRYNAME LE 0).ZG204A13  OK                00537900
&ZCVAL            SETC '&ZCVAL ENTRYNAME'       INCORRECT KEY USED      00538000
.ZG204A13         AIF   (K'&ENTRYID LE 0).ZG204A14  OK                  00538100
&ZCVAL            SETC '&ZCVAL ENTRYID'         INCORRECT KEY USED      00538200
.ZG204A14         AIF   (K'&EMCLEVEL LE 0).ZG204A15  OK                 00538300
&ZCVAL            SETC '&ZCVAL EMCLEVEL'        INCORRECT KEY USED      00538400
.ZG204A15         AIF   (K'&ZCVAL LE 0).ZG204A16  OK                    00538500
&ZCVAL            SETC '&ZCVAL'(2,K'&ZCVAL-1)                           00538600
&ZMS              SETC  '"TYPE'     *KMEIA* MNOTE                       00538700
&ZMS              SETC  '&ZMS.=&TYPE"'                                  00538800
&ZMS              SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'            00538900
                  MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'            00539000
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00539100
.ZG204A16         ANOP  ,                                               00539200
.*----------------------------------------------------------------***   00539300
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00539400
                  AIF   (N'&STRNAME LE 1).ZG206A  CK NUM                00539500
&ZMS              SETC  '"STRNAME='             *KPOSA* MNOTE           00539600
&ZMS              SETC  '&ZMS.&STRNAME"'                                00539700
&ZMS              SETC  '&ZMS "STRNAME"'                                00539800
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00539900
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00540000
.ZG206A           ANOP  ,                                               00540100
.*-------------------------------------------------------------------   00540200
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00540300
&ZXSTRNAME        SETC  'INPUT'     SET IN/OUTPUT                       00540400
&XSTRNAME         SETC  '&STRNAME(1)'           SET XVARIABLE           00540500
                  AIF   (N'&STRNAME GT 1).ZG206B  MULTI PARMS           00540600
&XSTRNAME         SETC  '&STRNAME'  SET XVARIABLE                       00540700
.ZG206B           AIF   (K'&STRNAME(1) GT 0).ZG206C                     00540800
&ZXSTRNAME        SETC  ''          RESET IN/OUTPUT                     00540900
&ZMS              SETC  ' '         *KRQDA*                             00541000
&ZMS              SETC  '&ZMS "STRNAME" KEY AND ITS ARGUMENT'           00541100
                  MNOTE 8,' &ZMS ARE REQUIRED.'                         00541200
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00541300
.ZG206C           ANOP  ,                                               00541400
.*-------------------------------------------------------------------   00541500
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00541600
                  AIF   (K'&ZXSTRNAME LE 0).ZG206R  NOT I/O             00541700
                  AIF   ('&XSTRNAME'(1,1) NE '(').ZG206R                00541800
&ZCGPR            SETC  '&XSTRNAME'(2,K'&XSTRNAME-2)                    00541900
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG206P                   00542000
                  AIF   (K'&ZCGPR GT 2).ZG206Q                          00542100
                  AIF   ('&ZCGPR' EQ '0').ZG206Q                        00542200
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00542300
                  AIF   (T'&ZCGPR NE 'N').ZG206Q  INVALID REG NAME      00542400
.ZG206P           ANOP  ,                                               00542500
                  AIF   (T'&ZCGPR NE 'N').ZG206R  NON NUMERIC           00542600
                  AIF   ('&ZCGPR' LT '2').ZG206Q                        00542700
                  AIF   ('&ZCGPR' LE '12').ZG206R                       00542800
.ZG206Q           ANOP  ,                                               00542900
&ZMS              SETC  '"STRNAME='             *KGPRA* MNOTE           00543000
&ZMS              SETC  '&ZMS.&STRNAME"'                                00543100
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00543200
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00543300
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00543400
.ZG206R           ANOP  ,                                               00543500
.*----------------------------------------------------------------***   00543600
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00543700
                  AIF   (N'&STRDUMPID LE 1).ZG209A  CK NUM              00543800
&ZMS              SETC  '"STRDUMPID='           *KPOSA* MNOTE           00543900
&ZMS              SETC  '&ZMS.&STRDUMPID"'                              00544000
&ZMS              SETC  '&ZMS "STRDUMPID"'                              00544100
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00544200
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00544300
.ZG209A           ANOP  ,                                               00544400
.*-------------------------------------------------------------------   00544500
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00544600
&ZXSTRDUMPID      SETC  'INPUT'     SET IN/OUTPUT                       00544700
&XSTRDUMPID       SETC  '&STRDUMPID(1)'         SET XVARIABLE           00544800
                  AIF   (N'&STRDUMPID GT 1).ZG209B  MULTI PARMS         00544900
&XSTRDUMPID       SETC  '&STRDUMPID'            SET XVARIABLE           00545000
.ZG209B           AIF   (K'&STRDUMPID(1) GT 0).ZG209C                   00545100
&ZXSTRDUMPID      SETC  ''          RESET IN/OUTPUT                     00545200
&ZMS              SETC  ' '         *KRQDA*                             00545300
&ZMS              SETC  '&ZMS "STRDUMPID" KEY AND ITS ARGUMENT'         00545400
                  MNOTE 8,' &ZMS ARE REQUIRED.'                         00545500
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00545600
.ZG209C           ANOP  ,                                               00545700
.*-------------------------------------------------------------------   00545800
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00545900
                  AIF   (K'&ZXSTRDUMPID LE 0).ZG209R  NOT I/O           00546000
                  AIF   ('&XSTRDUMPID'(1,1) NE '(').ZG209R              00546100
&ZCGPR            SETC  '&XSTRDUMPID'(2,K'&XSTRDUMPID-2)                00546200
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG209P                   00546300
                  AIF   (K'&ZCGPR GT 2).ZG209Q                          00546400
                  AIF   ('&ZCGPR' EQ '0').ZG209Q                        00546500
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00546600
                  AIF   (T'&ZCGPR NE 'N').ZG209Q  INVALID REG NAME      00546700
.ZG209P           ANOP  ,                                               00546800
                  AIF   (T'&ZCGPR NE 'N').ZG209R  NON NUMERIC           00546900
                  AIF   ('&ZCGPR' LT '2').ZG209Q                        00547000
                  AIF   ('&ZCGPR' LE '12').ZG209R                       00547100
.ZG209Q           ANOP  ,                                               00547200
&ZMS              SETC  '"STRDUMPID='           *KGPRA* MNOTE           00547300
&ZMS              SETC  '&ZMS.&STRDUMPID"'                              00547400
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00547500
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00547600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00547700
.ZG209R           ANOP  ,                                               00547800
.*------------------------------------------------------------------    00547900
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00548000
&XEQLEVEL         SETC  ''          INITIALIZE XVARIABLE                00548100
.*-------------------------------------------------------------------   00548200
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00548300
.ZG213            ANOP  ,                                               00548400
                  AIF   (K'&EQLEVEL(1) LE 0).ZG213A                     00548500
&ZTLC             SETC 'DETAIL'                                         00548600
                  AIF   ('&EQLEVEL(1)' NE '&ZTLC').ZG220                00548700
&XEQLEVEL         SETC  'DETAIL'    SET KEYWORD                         00548800
                  AIF   (N'&EQLEVEL LE 1).ZG213A  CK NUM                00548900
&ZMS              SETC  '"EQLEVEL='             *KPOSA* MNOTE           00549000
&ZMS              SETC  '&ZMS.&EQLEVEL"'                                00549100
&ZMS              SETC  '&ZMS "EQLEVEL"'                                00549200
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00549300
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00549400
.ZG213A           ANOP  ,                                               00549500
.*------------------------------------------------------------------    00549600
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00549700
&ZCVAL            SETC ''           CLEAR ERROR KEY ACCUMULATOR         00549800
.ZG213A0          AIF   (K'&CONIDVAL LE 0).ZG213A1  OK                  00549900
&ZCVAL            SETC '&ZCVAL CONIDVAL'        INCORRECT KEY USED      00550000
.ZG213A1          AIF   (K'&ZCVAL LE 0).ZG213A2  OK                     00550100
&ZCVAL            SETC '&ZCVAL'(2,K'&ZCVAL-1)                           00550200
&ZMS              SETC  '"EQLEVEL'  *KMEIA* MNOTE                       00550300
&ZMS              SETC  '&ZMS.=&EQLEVEL"'                               00550400
&ZMS              SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'            00550500
                  MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'            00550600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00550700
.ZG213A2          ANOP  ,                                               00550800
.*----------------------------------------------------------------***   00550900
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00551000
                  AIF   (N'&STARTVAL LE 1).ZG215A  CK NUM               00551100
&ZMS              SETC  '"STARTVAL='            *KPOSA* MNOTE           00551200
&ZMS              SETC  '&ZMS.&STARTVAL"'                               00551300
&ZMS              SETC  '&ZMS "STARTVAL"'                               00551400
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00551500
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00551600
.ZG215A           ANOP  ,                                               00551700
.*-------------------------------------------------------------------   00551800
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00551900
&ZXSTARTVAL       SETC  'INPUT'     SET IN/OUTPUT                       00552000
&XSTARTVAL        SETC  'ALL'                                           00552100
                  AIF   (K'&STARTVAL(1) LE 0).ZG215B  PARM              00552200
&XSTARTVAL        SETC  '&STARTVAL(1)'          SET XVARIABLE           00552300
                  AIF   (N'&STARTVAL GT 1).ZG215B  MULTI PARMS          00552400
&XSTARTVAL        SETC  '&STARTVAL'             SET XVARIABLE           00552500
.ZG215B           ANOP  ,                                               00552600
.*-------------------------------------------------------------------   00552700
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00552800
                  AIF   (K'&ZXSTARTVAL LE 0).ZG215R  NOT I/O            00552900
                  AIF   ('&XSTARTVAL' EQ 'ALL').ZG215R                  00553000
                  AIF   ('&XSTARTVAL'(1,1) NE '(').ZG215R               00553100
&ZCGPR            SETC  '&XSTARTVAL'(2,K'&XSTARTVAL-2)                  00553200
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG215P                   00553300
                  AIF   (K'&ZCGPR GT 2).ZG215Q                          00553400
                  AIF   ('&ZCGPR' EQ '0').ZG215Q                        00553500
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00553600
                  AIF   (T'&ZCGPR NE 'N').ZG215Q  INVALID REG NAME      00553700
.ZG215P           ANOP  ,                                               00553800
                  AIF   (T'&ZCGPR NE 'N').ZG215R  NON NUMERIC           00553900
                  AIF   ('&ZCGPR' LT '2').ZG215Q                        00554000
                  AIF   ('&ZCGPR' LE '12').ZG215R                       00554100
.ZG215Q           ANOP  ,                                               00554200
&ZMS              SETC  '"STARTVAL='            *KGPRA* MNOTE           00554300
&ZMS              SETC  '&ZMS.&STARTVAL"'                               00554400
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00554500
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00554600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00554700
.ZG215R           ANOP  ,                                               00554800
.*----------------------------------------------------------------***   00554900
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00555000
                  AIF   (N'&ENDVAL LE 1).ZG217A  CK NUM                 00555100
&ZMS              SETC  '"ENDVAL='  *KPOSA* MNOTE                       00555200
&ZMS              SETC  '&ZMS.&ENDVAL"'                                 00555300
&ZMS              SETC  '&ZMS "ENDVAL"'                                 00555400
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00555500
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00555600
.ZG217A           ANOP  ,                                               00555700
.*-------------------------------------------------------------------   00555800
.***AG.KXVAR17 NAME, OPT INPUT, KEYS -XVARIABLE                         00555900
&XENDVAL          SETC  'STARTVAL'  SET DEFAULT                         00556000
                  AIF   (K'&ENDVAL(1) LE 0).ZG217C  PARM                00556100
&XENDVAL          SETC  '&ENDVAL(1)'            SET XVARIABLE           00556200
                  AIF   (N'&ENDVAL GT 1).ZG217B  MULTI PARMS            00556300
&XENDVAL          SETC  '&ENDVAL'   SET XVARIABLE                       00556400
.ZG217B           AIF   (K'&STARTVAL(1) GT 0).ZG217C  KEY               00556500
&ZMS              SETC  '"ENDVAL'   *KDEPA* MNOTE                       00556600
&ZMS              SETC  '&ZMS.=&ENDVAL"'                                00556700
&ZMS              SETC  '&ZMS CAN ONLY BE SPECIFIED IF'                 00556800
&ZMS              SETC  '&ZMS '                                         00556900
&ZMS              SETC  '&ZMS "STARTVAL"'                               00557000
                  MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                    00557100
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00557200
.ZG217C           ANOP  ,                                               00557300
&ZXENDVAL         SETC  'INPUT'     SET IN/OUTPUT                       00557400
.*-------------------------------------------------------------------   00557500
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00557600
                  AIF   (K'&ZXENDVAL LE 0).ZG217R  NOT I/O              00557700
                  AIF   ('&XENDVAL' EQ 'STARTVAL').ZG217R               00557800
                  AIF   ('&XENDVAL'(1,1) NE '(').ZG217R                 00557900
&ZCGPR            SETC  '&XENDVAL'(2,K'&XENDVAL-2)                      00558000
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG217P                   00558100
                  AIF   (K'&ZCGPR GT 2).ZG217Q                          00558200
                  AIF   ('&ZCGPR' EQ '0').ZG217Q                        00558300
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00558400
                  AIF   (T'&ZCGPR NE 'N').ZG217Q  INVALID REG NAME      00558500
.ZG217P           ANOP  ,                                               00558600
                  AIF   (T'&ZCGPR NE 'N').ZG217R  NON NUMERIC           00558700
                  AIF   ('&ZCGPR' LT '2').ZG217Q                        00558800
                  AIF   ('&ZCGPR' LE '12').ZG217R                       00558900
.ZG217Q           ANOP  ,                                               00559000
&ZMS              SETC  '"ENDVAL='  *KGPRA* MNOTE                       00559100
&ZMS              SETC  '&ZMS.&ENDVAL"'                                 00559200
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00559300
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00559400
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00559500
.ZG217R           ANOP  ,                                               00559600
.*-------------------------------------------------------------------   00559700
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00559800
.ZG220            ANOP  ,                                               00559900
&ZTLC             SETC 'EMC'                                            00560000
                  AIF   ('&EQLEVEL(1)' NE '&ZTLC').ZG224                00560100
&XEQLEVEL         SETC  'EMC'       SET KEYWORD                         00560200
                  AIF   (N'&EQLEVEL LE 1).ZG220A  CK NUM                00560300
&ZMS              SETC  '"EQLEVEL='             *KPOSA* MNOTE           00560400
&ZMS              SETC  '&ZMS.&EQLEVEL"'                                00560500
&ZMS              SETC  '&ZMS "EQLEVEL"'                                00560600
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00560700
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00560800
.ZG220A           ANOP  ,                                               00560900
.*------------------------------------------------------------------    00561000
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00561100
&ZCVAL            SETC ''           CLEAR ERROR KEY ACCUMULATOR         00561200
.ZG220A0          AIF   (K'&STARTVAL LE 0).ZG220A1  OK                  00561300
&ZCVAL            SETC '&ZCVAL STARTVAL'        INCORRECT KEY USED      00561400
.ZG220A1          AIF   (K'&ENDVAL LE 0).ZG220A2  OK                    00561500
&ZCVAL            SETC '&ZCVAL ENDVAL'          INCORRECT KEY USED      00561600
.ZG220A2          AIF   (K'&ZCVAL LE 0).ZG220A3  OK                     00561700
&ZCVAL            SETC '&ZCVAL'(2,K'&ZCVAL-1)                           00561800
&ZMS              SETC  '"EQLEVEL'  *KMEIA* MNOTE                       00561900
&ZMS              SETC  '&ZMS.=&EQLEVEL"'                               00562000
&ZMS              SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'            00562100
                  MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'            00562200
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00562300
.ZG220A3          ANOP  ,                                               00562400
.*----------------------------------------------------------------***   00562500
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00562600
                  AIF   (N'&CONIDVAL LE 1).ZG222A  CK NUM               00562700
&ZMS              SETC  '"CONIDVAL='            *KPOSA* MNOTE           00562800
&ZMS              SETC  '&ZMS.&CONIDVAL"'                               00562900
&ZMS              SETC  '&ZMS "CONIDVAL"'                               00563000
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00563100
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00563200
.ZG222A           ANOP  ,                                               00563300
.*-------------------------------------------------------------------   00563400
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00563500
&ZXCONIDVAL       SETC  'INPUT'     SET IN/OUTPUT                       00563600
&XCONIDVAL        SETC  '&CONIDVAL(1)'          SET XVARIABLE           00563700
                  AIF   (N'&CONIDVAL GT 1).ZG222B  MULTI PARMS          00563800
&XCONIDVAL        SETC  '&CONIDVAL'             SET XVARIABLE           00563900
.ZG222B           AIF   (K'&CONIDVAL(1) GT 0).ZG222C                    00564000
&ZXCONIDVAL       SETC  ''          RESET IN/OUTPUT                     00564100
&ZMS              SETC  ' '         *KRQDA*                             00564200
&ZMS              SETC  '&ZMS "CONIDVAL" KEY AND ITS ARGUMENT'          00564300
                  MNOTE 8,' &ZMS ARE REQUIRED.'                         00564400
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00564500
.ZG222C           ANOP  ,                                               00564600
.*-------------------------------------------------------------------   00564700
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00564800
                  AIF   (K'&ZXCONIDVAL LE 0).ZG222R  NOT I/O            00564900
                  AIF   ('&XCONIDVAL'(1,1) NE '(').ZG222R               00565000
&ZCGPR            SETC  '&XCONIDVAL'(2,K'&XCONIDVAL-2)                  00565100
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG222P                   00565200
                  AIF   (K'&ZCGPR GT 2).ZG222Q                          00565300
                  AIF   ('&ZCGPR' EQ '0').ZG222Q                        00565400
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00565500
                  AIF   (T'&ZCGPR NE 'N').ZG222Q  INVALID REG NAME      00565600
.ZG222P           ANOP  ,                                               00565700
                  AIF   (T'&ZCGPR NE 'N').ZG222R  NON NUMERIC           00565800
                  AIF   ('&ZCGPR' LT '2').ZG222Q                        00565900
                  AIF   ('&ZCGPR' LE '12').ZG222R                       00566000
.ZG222Q           ANOP  ,                                               00566100
&ZMS              SETC  '"CONIDVAL='            *KGPRA* MNOTE           00566200
&ZMS              SETC  '&ZMS.&CONIDVAL"'                               00566300
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00566400
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00566500
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00566600
.ZG222R           ANOP  ,                                               00566700
.*------------------------------------------------------------------    00566800
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00566900
.ZG224            ANOP  ,                                               00567000
&ZXEQLEVEL        SETC  'INPUT'     SET IN/OUTPUT                       00567100
                  AIF   (K'&XEQLEVEL GT 0).ZG224E  VALID ARG            00567200
                  AIF   (T'&EQLEVEL EQ 'O').ZG224D  OMITTED             00567300
&ZASYSLNDX        SETA  0                                               00567400
.ZG224A           ANOP  ,           POSITIONAL MACRO KEY                00567500
&ZASYSLNDX        SETA  &ZASYSLNDX+1                                    00567600
                  AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG224C               00567700
&ZTLC             SETC 'EQLEVEL'                                        00567800
                  AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG224A      00567900
.ZG224B           ANOP  ,                                               00568000
&ZXEQLEVEL        SETC  ''          RESET IN/OUTPUT                     00568100
&ZMS              SETC  'THE "EQLEVEL" KEY'     *KOPTA* MNOTE           00568200
&ZMS              SETC  '&ZMS MUST CONTAIN ONE'                         00568300
                  MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                00568400
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00568500
                  AGO   .ZG224E                                         00568600
.ZG224C           ANOP  ,                                               00568700
&ZXEQLEVEL        SETC  ''          RESET IN/OUTPUT                     00568800
&ZMS              SETC  '"EQLEVEL='             *KUKWA* MNOTE           00568900
&ZMS              SETC  '&ZMS.&EQLEVEL"'                                00569000
&ZMS              SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '       00569100
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00569200
&ZMS              SETC  '&ZMS "DETAIL"'         VALID KEYWORD           00569300
&ZMS              SETC  '&ZMS OR "EMC".'        VALID KEYWORD           00569400
                  MNOTE 8,' &ZMS '                                      00569500
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00569600
                  AGO   .ZG224E                                         00569700
.ZG224D           ANOP  ,                                               00569800
&XEQLEVEL         SETC  'DETAIL'    SET DEFAULT KEYWORD                 00569900
.ZG224E           ANOP  ,                                               00570000
.*------------------------------------------------------------------    00570100
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00570200
                  AIF   (K'&EQLEVEL(1) GT 0).ZG224F  PARM               00570300
&XEQLEVEL         SETC  ''          ENSURE NULL KEYWORD                 00570400
&ZXEQLEVEL        SETC  ''          RESET IN/OUTPUT                     00570500
&ZMS              SETC  'THE'                                           00570600
&ZMS              SETC  '&ZMS "EQLEVEL" KEY AND ITS ARGUMENT'           00570700
&ZMS              SETC  '&ZMS ARE REQUIRED.'                            00570800
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00570900
&ZMS              SETC  '&ZMS "DETAIL"'         VALID KEYWORD           00571000
&ZMS              SETC  '&ZMS OR "EMC".'        VALID KEYWORD           00571100
                  MNOTE 8,' &ZMS '                                      00571200
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00571300
.ZG224F           ANOP  ,                                               00571400
.*------------------------------------------------------------------    00571500
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00571600
.ZG225            ANOP  ,                                               00571700
&ZXTYPE           SETC  'INPUT'     SET IN/OUTPUT                       00571800
                  AIF   (K'&XTYPE GT 0).ZG225E  VALID ARG               00571900
                  AIF   (T'&TYPE EQ 'O').ZG225D  OMITTED                00572000
&ZASYSLNDX        SETA  0                                               00572100
.ZG225A           ANOP  ,           POSITIONAL MACRO KEY                00572200
&ZASYSLNDX        SETA  &ZASYSLNDX+1                                    00572300
                  AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG225C               00572400
&ZTLC             SETC 'TYPE'                                           00572500
                  AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG225A      00572600
.ZG225B           ANOP  ,                                               00572700
&ZXTYPE           SETC  ''          RESET IN/OUTPUT                     00572800
&ZMS              SETC  'THE "TYPE" KEY'        *KOPTA* MNOTE           00572900
&ZMS              SETC  '&ZMS MUST CONTAIN ONE'                         00573000
                  MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                00573100
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00573200
                  AGO   .ZG225E                                         00573300
.ZG225C           ANOP  ,                                               00573400
&ZXTYPE           SETC  ''          RESET IN/OUTPUT                     00573500
&ZMS              SETC  '"TYPE='    *KUKWA* MNOTE                       00573600
&ZMS              SETC  '&ZMS.&TYPE"'                                   00573700
&ZMS              SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '       00573800
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00573900
&ZMS              SETC  '&ZMS "STRUCTURE",'     VALID KEYWORD           00574000
&ZMS              SETC  '&ZMS "CLASS",'         VALID KEYWORD           00574100
&ZMS              SETC  '&ZMS "LISTNUM",'       VALID KEYWORD           00574200
&ZMS              SETC  '&ZMS "LOCKENTRIES",'   VALID KEYWORD           00574300
&ZMS              SETC  '&ZMS "USERCNTLS",'     VALID KEYWORD           00574400
&ZMS              SETC  '&ZMS "ENTRY",'         VALID KEYWORD           00574500
&ZMS              SETC  '&ZMS "EMCONTROLS",'    VALID KEYWORD           00574600
&ZMS              SETC  '&ZMS OR "EVENTQS".'    VALID KEYWORD           00574700
                  MNOTE 8,' &ZMS '                                      00574800
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00574900
                  AGO   .ZG225E                                         00575000
.ZG225D           ANOP  ,                                               00575100
&XTYPE            SETC  'STRUCTURE'             SET DEFAULT KEYWORD     00575200
.ZG225E           ANOP  ,                                               00575300
.*------------------------------------------------------------------    00575400
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00575500
                  AIF   (K'&TYPE(1) GT 0).ZG225F  PARM                  00575600
&XTYPE            SETC  ''          ENSURE NULL KEYWORD                 00575700
&ZXTYPE           SETC  ''          RESET IN/OUTPUT                     00575800
&ZMS              SETC  'THE'                                           00575900
&ZMS              SETC  '&ZMS "TYPE" KEY AND ITS ARGUMENT'              00576000
&ZMS              SETC  '&ZMS ARE REQUIRED.'                            00576100
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00576200
&ZMS              SETC  '&ZMS "STRUCTURE",'     VALID KEYWORD           00576300
&ZMS              SETC  '&ZMS "CLASS",'         VALID KEYWORD           00576400
&ZMS              SETC  '&ZMS "LISTNUM",'       VALID KEYWORD           00576500
&ZMS              SETC  '&ZMS "LOCKENTRIES",'   VALID KEYWORD           00576600
&ZMS              SETC  '&ZMS "USERCNTLS",'     VALID KEYWORD           00576700
&ZMS              SETC  '&ZMS "ENTRY",'         VALID KEYWORD           00576800
&ZMS              SETC  '&ZMS "EMCONTROLS",'    VALID KEYWORD           00576900
&ZMS              SETC  '&ZMS OR "EVENTQS".'    VALID KEYWORD           00577000
                  MNOTE 8,' &ZMS '                                      00577100
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00577200
.ZG225F           ANOP  ,                                               00577300
.*----------------------------------------------------------------***   00577400
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00577500
                  AIF   (N'&RETCODE LE 1).ZG227A  CK NUM                00577600
&ZMS              SETC  '"RETCODE='             *KPOSA* MNOTE           00577700
&ZMS              SETC  '&ZMS.&RETCODE"'                                00577800
&ZMS              SETC  '&ZMS "RETCODE"'                                00577900
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00578000
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00578100
.ZG227A           ANOP  ,                                               00578200
.*-------------------------------------------------------------------   00578300
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00578400
                  AIF   (K'&RETCODE(1) LE 0).ZG227C  NO PARM            00578500
&ZXRETCODE        SETC  'OUTPUT'    SET OUTPUT                          00578600
&XRETCODE         SETC  '&RETCODE(1)'           SET XVARIABLE           00578700
                  AIF   (N'&RETCODE GT 1).ZG227C                        00578800
&XRETCODE         SETC  '&RETCODE'  SET XVARIABLE                       00578900
.ZG227C           ANOP  ,                                               00579000
.*-------------------------------------------------------------------   00579100
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00579200
                  AIF   (K'&ZXRETCODE LE 0).ZG227R  NOT I/O             00579300
                  AIF   ('&XRETCODE'(1,1) NE '(').ZG227R                00579400
&ZCGPR            SETC  '&XRETCODE'(2,K'&XRETCODE-2)                    00579500
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG227P                   00579600
                  AIF   (K'&ZCGPR GT 2).ZG227Q                          00579700
                  AIF   ('&ZCGPR' EQ '0').ZG227Q                        00579800
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00579900
                  AIF   (T'&ZCGPR NE 'N').ZG227Q  INVALID REG NAME      00580000
.ZG227P           ANOP  ,                                               00580100
                  AIF   (T'&ZCGPR NE 'N').ZG227R  NON NUMERIC           00580200
                  AIF   ('&ZCGPR' LT '2').ZG227Q                        00580300
                  AIF   ('&ZCGPR' LE '12').ZG227R                       00580400
.ZG227Q           ANOP  ,                                               00580500
&ZMS              SETC  '"RETCODE='             *KGPRA* MNOTE           00580600
&ZMS              SETC  '&ZMS.&RETCODE"'                                00580700
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00580800
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00580900
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00581000
.ZG227R           ANOP  ,                                               00581100
.*----------------------------------------------------------------***   00581200
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00581300
                  AIF   (N'&RSNCODE LE 1).ZG230A  CK NUM                00581400
&ZMS              SETC  '"RSNCODE='             *KPOSA* MNOTE           00581500
&ZMS              SETC  '&ZMS.&RSNCODE"'                                00581600
&ZMS              SETC  '&ZMS "RSNCODE"'                                00581700
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00581800
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00581900
.ZG230A           ANOP  ,                                               00582000
.*-------------------------------------------------------------------   00582100
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00582200
                  AIF   (K'&RSNCODE(1) LE 0).ZG230C  NO PARM            00582300
&ZXRSNCODE        SETC  'OUTPUT'    SET OUTPUT                          00582400
&XRSNCODE         SETC  '&RSNCODE(1)'           SET XVARIABLE           00582500
                  AIF   (N'&RSNCODE GT 1).ZG230C                        00582600
&XRSNCODE         SETC  '&RSNCODE'  SET XVARIABLE                       00582700
.ZG230C           ANOP  ,                                               00582800
.*-------------------------------------------------------------------   00582900
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00583000
                  AIF   (K'&ZXRSNCODE LE 0).ZG230R  NOT I/O             00583100
                  AIF   ('&XRSNCODE'(1,1) NE '(').ZG230R                00583200
&ZCGPR            SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                    00583300
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG230P                   00583400
                  AIF   (K'&ZCGPR GT 2).ZG230Q                          00583500
                  AIF   ('&ZCGPR' EQ '0').ZG230Q                        00583600
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00583700
                  AIF   (T'&ZCGPR NE 'N').ZG230Q  INVALID REG NAME      00583800
.ZG230P           ANOP  ,                                               00583900
                  AIF   (T'&ZCGPR NE 'N').ZG230R  NON NUMERIC           00584000
                  AIF   ('&ZCGPR' LT '2').ZG230Q                        00584100
                  AIF   ('&ZCGPR' LE '12').ZG230R                       00584200
.ZG230Q           ANOP  ,                                               00584300
&ZMS              SETC  '"RSNCODE='             *KGPRA* MNOTE           00584400
&ZMS              SETC  '&ZMS.&RSNCODE"'                                00584500
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00584600
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00584700
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00584800
.ZG230R           ANOP  ,                                               00584900
.******************************************************************     00585000
.***AH.P00 CHECK STANDALONE POSITIONAL VARIABLES                        00585100
.******************************************************************     00585200
                  ACTR  10000                                           00585300
.*----------------------------------------------------------------***   00585400
.***AH.P02 EXTRA POSITIONALS                                            00585500
                  AIF   (N'&SYSLIST LE 0).ZGLISTX  NO EXTRAS            00585600
                  AIF   (N'&SYSLIST NE 2).ZGLISTX1  NOT NULL            00585700
                  AIF   ('&SYSLIST(1)' NE '').ZGLISTX1  NOT NULL        00585800
                  AIF   ('&SYSLIST(2)' EQ '').ZGLISTX  NOT NULL         00585900
.ZGLISTX1         ANOP  ,                                               00586000
&ZCVAL            SETC  ''          ERROR FIELD                         00586100
&ZAWRK            SETA  0           POSITIONAL NUMBER                   00586200
.ZGLIST2          ANOP  ,                                               00586300
&ZAWRK            SETA  &ZAWRK+1    NEXT POSITIONAL                     00586400
                  AIF   (&ZAWRK GT N'&SYSLIST).ZGLIST3  DONE            00586500
&ZCVAL            SETC '&ZCVAL,&SYSLIST(&ZAWRK)'  EXTRA                 00586600
                  AGO   .ZGLIST2                                        00586700
.*                                                                      00586800
.ZGLIST3          ANOP  ,                                               00586900
&ZCVAL            SETC '&ZCVAL'(2,K'&ZCVAL-1)   STRIP COMMA             00587000
&ZMS              SETC  'POSITIONAL ARGUMENT(S),'  *PPOSA* MNOTE        00587100
&ZMS              SETC  '&ZMS "&ZCVAL"'                                 00587200
&ZMS              SETC  '&ZMS CANNOT BE USED.'                          00587300
&ZMS              SETC  '&ZMS NO POSITIONAL ARGUMENTS'                  00587400
                  MNOTE 8,' &ZMS ARE ALLOWED.'                          00587500
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00587600
.ZGLISTX          ANOP  ,                                               00587700
&ZASYSLNDX        SETA  0                                               00587800
.*-------------------------------------------------------------------   00587900
.***AG.MF04 MF=(SLE)                                                    00588000
.ZGMFX            ANOP  ,           END OF FULL SYNTAX CHECK            00588100
.*******************************************************************    00588200
.***AE.ZMR01 NO CODE GENERATED IF ERRORS DETECTED                       00588300
.*******************************************************************    00588400
                  AIF   (&ZMACRET NE 0).ZLX2    ERROR DETECTED          00588500
.*******************************************************************    00588600
.***AE.01  START OF IXLZSTR MACRO CODE                                  00588700
.*******************************************************************    00588800
                  LCLC  &M0M0001                 NAME                   00588900
&M0M0001          SETC  '&XLABEL'                SET NAME               00589000
                  AIF   (K'&XLABEL NE 0).XLAB2                          00589100
&M0M0001          SETC  'M00M&SYSNDX'            DEFAULT NAME           00589200
.*                                                                      00589300
.XLAB2            ANOP  ,                                               00589400
                  AIF   ('&XMF' EQ 'L').XLAB3                           00589500
&M0M0001 DS    0H                             IXLZSTR-1                 00589600
.XLAB3            ANOP  ,                                               00589700
.*******************************************************************    00589800
.***AE.PR01 PRINT CONTROLS, DEFAULT IS YES                              00589900
.*******************************************************************    00590000
              PUSH  PRINT                                               00590100
                  AIF   ('&ZPRINT' NE 'NO').ZPRINTX  TURN PRINT ON      00590200
                  PRINT OFF         ++ PR01                             00590300
                  AGO   .ZPRNTXX                                        00590400
.ZPRINTX          PRINT ON                                              00590500
.ZPRNTXX          ANOP  ,                                               00590600
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00590700
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00590800
.********************************************************************   00590900
.***AL.L01 INTERNAL ARRAY TO PRODUCE FORMATTED CODE                     00591000
.********************************************************************   00591100
                      LCLA  &ZOPN          LIST INSTRUCTION INDEX       00591200
                      LCLA  &ZOPN1         INVOCATION INDEX             00591300
                      LCLC  &ZOPL(4095)    LABEL                        00591400
                      LCLC  &ZOPO(4095)    OPERATION                    00591500
                      LCLC  &ZOPV(4095)    VALUE                        00591600
                      LCLC  &ZOPD(4095)    DESCRIPTION                  00591700
.*                                                                      00591800
&ZOPN                 SETA  0              INITIAL INST INDEX VALUE     00591900
.******************************************************************     00592000
.***AL.L10 IXLZSTR FMT=LIST MF=S|L PARAMETERS                           00592100
.******************************************************************     00592200
                      AIF   ('&XMF' EQ 'L').ZLMFSL2                     00592300
                      AIF   ('&XMF' NE 'S').ZLMFSLX                     00592400
&XMFCTRL              SETC  '#Z'.'&SYSNDX'(1,4).'A'                     00592500
&XMFATTR              SETC  '0D'                                        00592600
.*                                                                      00592700
&ZOPN                 SETA  &ZOPN+1                                     00592800
&ZOPL(&ZOPN)          SETC  ' '                                         00592900
&ZOPO(&ZOPN)          SETC  'B'                                         00593000
&ZOPV(&ZOPN)          SETC  '&XMFCTRL.S'                                00593100
&ZOPD(&ZOPN)          SETC  '++ IXLZSTR ARG PARMS'                      00593200
.*                                                                      00593300
&ZOPN                 SETA  &ZOPN+1                                     00593400
&ZOPL(&ZOPN)          SETC  ' '                                         00593500
&ZOPO(&ZOPN)          SETC  'SPACE'                                     00593600
&ZOPV(&ZOPN)          SETC  '1'                                         00593700
&ZOPD(&ZOPN)          SETC  ' '                                         00593800
.*                                                                      00593900
.ZLMFSL2              ANOP  ,                                           00594000
.*-------------------------------------------------------------------   00594100
.***AM.L00  IXLZSTR FMT=LIST name                                       00594200
                      AIF   ('&XMF' NE 'L').ZLMFSL2M                    00594300
&ZOPN                 SETA &ZOPN+1                                      00594400
&ZOPL(&ZOPN)          SETC '&M0M0001'                                   00594500
&ZOPO(&ZOPN)          SETC 'EQU'                                        00594600
&ZOPV(&ZOPN)          SETC '&XMFCTRL'                                   00594700
&ZOPD(&ZOPN)          SETC '++ IXLZSTR NAME'                            00594800
.ZLMFSL2M             ANOP  ,                                           00594900
.*-------------------------------------------------------------------   00595000
.***AM.L01  IXLZSTR FMT=LIST PARAMETERS                                 00595100
&ZOPN                 SETA &ZOPN+1                                      00595200
&ZOPL(&ZOPN)          SETC '&XMFCTRL'                                   00595300
&ZOPO(&ZOPN)          SETC 'DS'                                         00595400
&ZOPV(&ZOPN)          SETC '&XMFATTR'                                   00595500
&ZOPD(&ZOPN)          SETC '++ IXLZSTR PARM LIST'                       00595600
.*-------------------------------------------------------------------   00595700
.***AM.L09  XABDPLPTR A                                                 00595800
&ZOPN                 SETA &ZOPN+1                                      00595900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XABDPLPTR'                        00596000
&ZOPO(&ZOPN)          SETC 'DS'                                         00596100
&ZOPV(&ZOPN)          SETC 'A'                                          00596200
&ZOPD(&ZOPN)          SETC '++ &ZXABDPLPTR  XABDPLPTR'                  00596300
.*-------------------------------------------------------------------   00596400
.***AM.L09  XRSVSTR2 CL04                                               00596500
&ZOPN                 SETA &ZOPN+1                                      00596600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSVSTR2'                         00596700
&ZOPO(&ZOPN)          SETC 'DS'                                         00596800
&ZOPV(&ZOPN)          SETC 'CL04'                                       00596900
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSVSTR2'                      00597000
.*-------------------------------------------------------------------   00597100
.***AM.L09  XRSVSTR3 CL04                                               00597200
&ZOPN                 SETA &ZOPN+1                                      00597300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSVSTR3'                         00597400
&ZOPO(&ZOPN)          SETC 'DS'                                         00597500
&ZOPV(&ZOPN)          SETC 'CL04'                                       00597600
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSVSTR3'                      00597700
.*-------------------------------------------------------------------   00597800
.***AM.L02 XVERSION XL1                                                 00597900
&ZOPN                 SETA &ZOPN+1                                      00598000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XVERSION'                         00598100
&ZOPO(&ZOPN)          SETC 'DS'                                         00598200
&ZOPV(&ZOPN)          SETC 'XL1'                                        00598300
&ZOPD(&ZOPN)          SETC '++ INPUT XVERSION'                          00598400
.*-------------------------------------------------------------------   00598500
.***AM.L05 XLISTNUMLEVEL XL1                                            00598600
&ZOPN                 SETA &ZOPN+1                                      00598700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XLISTNUMLEVEL'                    00598800
&ZOPO(&ZOPN)          SETC 'DS'                                         00598900
&ZOPV(&ZOPN)          SETC 'XL1'                                        00599000
&ZOPD(&ZOPN)          SETC '++ &ZXLISTNUMLEVEL XLISTNUMLEVEL'           00599100
.*                                                                      00599200
&ZOPN                 SETA  &ZOPN+1                                     00599300
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XLISTNUMLEVEL_SUMMARY'           00599400
&ZOPO(&ZOPN)          SETC  'EQU'                                       00599500
&ZOPV(&ZOPN)          SETC  '1'                                         00599600
&ZOPD(&ZOPN)          SETC  '++ XLISTNUMLEVEL.'                         00599700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).SUMMARY'                      00599800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00599900
.*                                                                      00600000
&ZOPN                 SETA  &ZOPN+1                                     00600100
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XLISTNUMLEVEL_DETAIL'            00600200
&ZOPO(&ZOPN)          SETC  'EQU'                                       00600300
&ZOPV(&ZOPN)          SETC  '2'                                         00600400
&ZOPD(&ZOPN)          SETC  '++ XLISTNUMLEVEL.'                         00600500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).DETAIL'                       00600600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00600700
.*                                                                      00600800
&ZOPN                 SETA  &ZOPN+1                                     00600900
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XLISTNUMLEVEL_ENTRY'             00601000
&ZOPO(&ZOPN)          SETC  'EQU'                                       00601100
&ZOPV(&ZOPN)          SETC  '3'                                         00601200
&ZOPD(&ZOPN)          SETC  '++ XLISTNUMLEVEL.'                         00601300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).ENTRY'                        00601400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00601500
.*-------------------------------------------------------------------   00601600
.***AM.L05 XCLASSLEVEL XL1                                              00601700
&ZOPN                 SETA &ZOPN+1                                      00601800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCLASSLEVEL'                      00601900
&ZOPO(&ZOPN)          SETC 'DS'                                         00602000
&ZOPV(&ZOPN)          SETC 'XL1'                                        00602100
&ZOPD(&ZOPN)          SETC '++ &ZXCLASSLEVEL XCLASSLEVEL'               00602200
.*                                                                      00602300
&ZOPN                 SETA  &ZOPN+1                                     00602400
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XCLASSLEVEL_SUMMARY'             00602500
&ZOPO(&ZOPN)          SETC  'EQU'                                       00602600
&ZOPV(&ZOPN)          SETC  '1'                                         00602700
&ZOPD(&ZOPN)          SETC  '++ XCLASSLEVEL.'                           00602800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).SUMMARY'                      00602900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00603000
.*                                                                      00603100
&ZOPN                 SETA  &ZOPN+1                                     00603200
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XCLASSLEVEL_DETAIL'              00603300
&ZOPO(&ZOPN)          SETC  'EQU'                                       00603400
&ZOPV(&ZOPN)          SETC  '2'                                         00603500
&ZOPD(&ZOPN)          SETC  '++ XCLASSLEVEL.'                           00603600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).DETAIL'                       00603700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00603800
.*                                                                      00603900
&ZOPN                 SETA  &ZOPN+1                                     00604000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XCLASSLEVEL_ENTRY'               00604100
&ZOPO(&ZOPN)          SETC  'EQU'                                       00604200
&ZOPV(&ZOPN)          SETC  '3'                                         00604300
&ZOPD(&ZOPN)          SETC  '++ XCLASSLEVEL.'                           00604400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).ENTRY'                        00604500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00604600
.*-------------------------------------------------------------------   00604700
.***AM.L05 XSTRLEVEL XL1                                                00604800
&ZOPN                 SETA &ZOPN+1                                      00604900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSTRLEVEL'                        00605000
&ZOPO(&ZOPN)          SETC 'DS'                                         00605100
&ZOPV(&ZOPN)          SETC 'XL1'                                        00605200
&ZOPD(&ZOPN)          SETC '++ &ZXSTRLEVEL XSTRLEVEL'                   00605300
.*                                                                      00605400
&ZOPN                 SETA  &ZOPN+1                                     00605500
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XSTRLEVEL_SUMMARY'               00605600
&ZOPO(&ZOPN)          SETC  'EQU'                                       00605700
&ZOPV(&ZOPN)          SETC  '1'                                         00605800
&ZOPD(&ZOPN)          SETC  '++ XSTRLEVEL.'                             00605900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).SUMMARY'                      00606000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00606100
.*                                                                      00606200
&ZOPN                 SETA  &ZOPN+1                                     00606300
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XSTRLEVEL_DETAIL'                00606400
&ZOPO(&ZOPN)          SETC  'EQU'                                       00606500
&ZOPV(&ZOPN)          SETC  '2'                                         00606600
&ZOPD(&ZOPN)          SETC  '++ XSTRLEVEL.'                             00606700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).DETAIL'                       00606800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00606900
.*-------------------------------------------------------------------   00607000
.***AM.L09  XRETCODE F                                                  00607100
&ZOPN                 SETA &ZOPN+1                                      00607200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRETCODE'                         00607300
&ZOPO(&ZOPN)          SETC 'DS'                                         00607400
&ZOPV(&ZOPN)          SETC 'F'                                          00607500
&ZOPD(&ZOPN)          SETC '++ &ZXRETCODE  XRETCODE'                    00607600
.*-------------------------------------------------------------------   00607700
.***AM.L09  XRSNCODE F                                                  00607800
&ZOPN                 SETA &ZOPN+1                                      00607900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSNCODE'                         00608000
&ZOPO(&ZOPN)          SETC 'DS'                                         00608100
&ZOPV(&ZOPN)          SETC 'F'                                          00608200
&ZOPD(&ZOPN)          SETC '++ &ZXRSNCODE  XRSNCODE'                    00608300
.*-------------------------------------------------------------------   00608400
.***AM.L09 ADDR XANSAREA A                                              00608500
&ZOPN                 SETA &ZOPN+1                                      00608600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XANSAREA_ADDR'                    00608700
&ZOPO(&ZOPN)          SETC 'DS'                                         00608800
&ZOPV(&ZOPN)          SETC 'A'                                          00608900
&ZOPD(&ZOPN)          SETC '++ &ZXANSAREA ADDR XANSAREA'                00609000
.*-------------------------------------------------------------------   00609100
.***AM.L09  XANSLEN F                                                   00609200
&ZOPN                 SETA &ZOPN+1                                      00609300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XANSLEN'                          00609400
&ZOPO(&ZOPN)          SETC 'DS'                                         00609500
&ZOPV(&ZOPN)          SETC 'F'                                          00609600
&ZOPD(&ZOPN)          SETC '++ &ZXANSLEN  XANSLEN'                      00609700
.*-------------------------------------------------------------------   00609800
.***AM.L09  XRESTOKEN CL64                                              00609900
&ZOPN                 SETA &ZOPN+1                                      00610000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRESTOKEN'                        00610100
&ZOPO(&ZOPN)          SETC 'DS'                                         00610200
&ZOPV(&ZOPN)          SETC 'CL64'                                       00610300
&ZOPD(&ZOPN)          SETC '++ &ZXRESTOKEN  XRESTOKEN'                  00610400
.*-------------------------------------------------------------------   00610500
.***AM.L09  XSTRNAME CL16                                               00610600
&ZOPN                 SETA &ZOPN+1                                      00610700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSTRNAME'                         00610800
&ZOPO(&ZOPN)          SETC 'DS'                                         00610900
&ZOPV(&ZOPN)          SETC 'CL16'                                       00611000
&ZOPD(&ZOPN)          SETC '++ &ZXSTRNAME  XSTRNAME'                    00611100
.*-------------------------------------------------------------------   00611200
.***AM.L09  XENTRYNAME CL16                                             00611300
&ZOPN                 SETA &ZOPN+1                                      00611400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XENTRYNAME'                       00611500
&ZOPO(&ZOPN)          SETC 'DS'                                         00611600
&ZOPV(&ZOPN)          SETC 'CL16'                                       00611700
&ZOPD(&ZOPN)          SETC '++ &ZXENTRYNAME  XENTRYNAME'                00611800
.*-------------------------------------------------------------------   00611900
.***AM.L09  XENTRYID CL12                                               00612000
&ZOPN                 SETA &ZOPN+1                                      00612100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XENTRYID'                         00612200
&ZOPO(&ZOPN)          SETC 'DS'                                         00612300
&ZOPV(&ZOPN)          SETC 'CL12'                                       00612400
&ZOPD(&ZOPN)          SETC '++ &ZXENTRYID  XENTRYID'                    00612500
.*-------------------------------------------------------------------   00612600
.***AM.L09  XSTARTVAL F                                                 00612700
&ZOPN                 SETA &ZOPN+1                                      00612800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSTARTVAL'                        00612900
&ZOPO(&ZOPN)          SETC 'DS'                                         00613000
&ZOPV(&ZOPN)          SETC 'F'                                          00613100
&ZOPD(&ZOPN)          SETC '++ &ZXSTARTVAL  XSTARTVAL'                  00613200
.*-------------------------------------------------------------------   00613300
.***AM.L09  XENDVAL F                                                   00613400
&ZOPN                 SETA &ZOPN+1                                      00613500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XENDVAL'                          00613600
&ZOPO(&ZOPN)          SETC 'DS'                                         00613700
&ZOPV(&ZOPN)          SETC 'F'                                          00613800
&ZOPD(&ZOPN)          SETC '++ &ZXENDVAL  XENDVAL'                      00613900
.*-------------------------------------------------------------------   00614000
.***AM.L09  XSTARTPOS F                                                 00614100
&ZOPN                 SETA &ZOPN+1                                      00614200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSTARTPOS'                        00614300
&ZOPO(&ZOPN)          SETC 'DS'                                         00614400
&ZOPV(&ZOPN)          SETC 'F'                                          00614500
&ZOPD(&ZOPN)          SETC '++ &ZXSTARTPOS  XSTARTPOS'                  00614600
.*-------------------------------------------------------------------   00614700
.***AM.L09  XENDPOS F                                                   00614800
&ZOPN                 SETA &ZOPN+1                                      00614900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XENDPOS'                          00615000
&ZOPO(&ZOPN)          SETC 'DS'                                         00615100
&ZOPV(&ZOPN)          SETC 'F'                                          00615200
&ZOPD(&ZOPN)          SETC '++ &ZXENDPOS  XENDPOS'                      00615300
.*-------------------------------------------------------------------   00615400
.***AM.L09  XCLASSVAL F                                                 00615500
&ZOPN                 SETA &ZOPN+1                                      00615600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCLASSVAL'                        00615700
&ZOPO(&ZOPN)          SETC 'DS'                                         00615800
&ZOPV(&ZOPN)          SETC 'F'                                          00615900
&ZOPD(&ZOPN)          SETC '++ &ZXCLASSVAL  XCLASSVAL'                  00616000
.*-------------------------------------------------------------------   00616100
.***AM.L09  XLISTNUMVAL F                                               00616200
&ZOPN                 SETA &ZOPN+1                                      00616300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XLISTNUMVAL'                      00616400
&ZOPO(&ZOPN)          SETC 'DS'                                         00616500
&ZOPV(&ZOPN)          SETC 'F'                                          00616600
&ZOPD(&ZOPN)          SETC '++ &ZXLISTNUMVAL  XLISTNUMVAL'              00616700
.*-------------------------------------------------------------------   00616800
.***AM.L09  XSTRDUMPID XL2                                              00616900
&ZOPN                 SETA &ZOPN+1                                      00617000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSTRDUMPID'                       00617100
&ZOPO(&ZOPN)          SETC 'DS'                                         00617200
&ZOPV(&ZOPN)          SETC 'XL2'                                        00617300
&ZOPD(&ZOPN)          SETC '++ &ZXSTRDUMPID  XSTRDUMPID'                00617400
.*-------------------------------------------------------------------   00617500
.***AM.L09  XRSV0030 CL2                                                00617600
&ZOPN                 SETA &ZOPN+1                                      00617700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0030'                         00617800
&ZOPO(&ZOPN)          SETC 'DS'                                         00617900
&ZOPV(&ZOPN)          SETC 'CL2'                                        00618000
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV0030'                      00618100
.*-------------------------------------------------------------------   00618200
.***AM.L09  XENTRYKEY CL16                                              00618300
&ZOPN                 SETA &ZOPN+1                                      00618400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XENTRYKEY'                        00618500
&ZOPO(&ZOPN)          SETC 'DS'                                         00618600
&ZOPV(&ZOPN)          SETC 'CL16'                                       00618700
&ZOPD(&ZOPN)          SETC '++ &ZXENTRYKEY  XENTRYKEY'                  00618800
.*-------------------------------------------------------------------   00618900
.***AM.L03 XCLASSTYPE BL.8                                              00619000
&ZOPN                 SETA &ZOPN+1                                      00619100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCLASSTYPE'                       00619200
&ZOPO(&ZOPN)          SETC 'DS'                                         00619300
&ZOPV(&ZOPN)          SETC 'BL.8'                                       00619400
&ZOPD(&ZOPN)          SETC '++ INPUT'                                   00619500
.*                                                                      00619600
&ZOPN                 SETA  &ZOPN+1                                     00619700
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XCLASSTYPE_CASTOUT'              00619800
&ZOPO(&ZOPN)          SETC  'EQU'                                       00619900
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             00620000
&ZOPD(&ZOPN)          SETC  '++ XCLASSTYPE.'                            00620100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).CASTOUT'                      00620200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00620300
.*                                                                      00620400
&ZOPN                 SETA  &ZOPN+1                                     00620500
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XCLASSTYPE_STORAGE'              00620600
&ZOPO(&ZOPN)          SETC  'EQU'                                       00620700
&ZOPV(&ZOPN)          SETC  'B''01000000'''                             00620800
&ZOPD(&ZOPN)          SETC  '++ XCLASSTYPE.'                            00620900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).STORAGE'                      00621000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00621100
.*-------------------------------------------------------------------   00621200
.***AM.L03 XADJUNCT BL.8                                                00621300
&ZOPN                 SETA &ZOPN+1                                      00621400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XADJUNCT'                         00621500
&ZOPO(&ZOPN)          SETC 'DS'                                         00621600
&ZOPV(&ZOPN)          SETC 'BL.8'                                       00621700
&ZOPD(&ZOPN)          SETC '++ INPUT'                                   00621800
.*                                                                      00621900
&ZOPN                 SETA  &ZOPN+1                                     00622000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XADJUNCT_NO'                     00622100
&ZOPO(&ZOPN)          SETC  'EQU'                                       00622200
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             00622300
&ZOPD(&ZOPN)          SETC  '++ XADJUNCT.'                              00622400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).NO'                           00622500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00622600
.*                                                                      00622700
&ZOPN                 SETA  &ZOPN+1                                     00622800
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XADJUNCT_YES'                    00622900
&ZOPO(&ZOPN)          SETC  'EQU'                                       00623000
&ZOPV(&ZOPN)          SETC  'B''01000000'''                             00623100
&ZOPD(&ZOPN)          SETC  '++ XADJUNCT.'                              00623200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).YES'                          00623300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00623400
.*-------------------------------------------------------------------   00623500
.***AM.L03 XENTRYDATA BL.8                                              00623600
&ZOPN                 SETA &ZOPN+1                                      00623700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XENTRYDATA'                       00623800
&ZOPO(&ZOPN)          SETC 'DS'                                         00623900
&ZOPV(&ZOPN)          SETC 'BL.8'                                       00624000
&ZOPD(&ZOPN)          SETC '++ INPUT'                                   00624100
.*                                                                      00624200
&ZOPN                 SETA  &ZOPN+1                                     00624300
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XENTRYDATA_NO'                   00624400
&ZOPO(&ZOPN)          SETC  'EQU'                                       00624500
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             00624600
&ZOPD(&ZOPN)          SETC  '++ XENTRYDATA.'                            00624700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).NO'                           00624800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00624900
.*                                                                      00625000
&ZOPN                 SETA  &ZOPN+1                                     00625100
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XENTRYDATA_YES'                  00625200
&ZOPO(&ZOPN)          SETC  'EQU'                                       00625300
&ZOPV(&ZOPN)          SETC  'B''01000000'''                             00625400
&ZOPD(&ZOPN)          SETC  '++ XENTRYDATA.'                            00625500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).YES'                          00625600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00625700
.*-------------------------------------------------------------------   00625800
.***AM.L03 XFLAGS BL.8                                                  00625900
&ZOPN                 SETA &ZOPN+1                                      00626000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XFLAGS'                           00626100
&ZOPO(&ZOPN)          SETC 'DS'                                         00626200
&ZOPV(&ZOPN)          SETC 'BL.8'                                       00626300
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             00626400
.*                                                                      00626500
&ZOPN                 SETA  &ZOPN+1                                     00626600
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_STARTVAL'                00626700
&ZOPO(&ZOPN)          SETC  'EQU'                                       00626800
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             00626900
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               00627000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).STARTVAL'                     00627100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00627200
.*                                                                      00627300
&ZOPN                 SETA  &ZOPN+1                                     00627400
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_ENDVAL'                  00627500
&ZOPO(&ZOPN)          SETC  'EQU'                                       00627600
&ZOPV(&ZOPN)          SETC  'B''01000000'''                             00627700
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               00627800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).ENDVAL'                       00627900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00628000
.*                                                                      00628100
&ZOPN                 SETA  &ZOPN+1                                     00628200
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_ENTRYNAME'               00628300
&ZOPO(&ZOPN)          SETC  'EQU'                                       00628400
&ZOPV(&ZOPN)          SETC  'B''00100000'''                             00628500
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               00628600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).ENTRYNAME'                    00628700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00628800
.*                                                                      00628900
&ZOPN                 SETA  &ZOPN+1                                     00629000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_ENTRYID'                 00629100
&ZOPO(&ZOPN)          SETC  'EQU'                                       00629200
&ZOPV(&ZOPN)          SETC  'B''00010000'''                             00629300
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               00629400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).ENTRYID'                      00629500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00629600
.*                                                                      00629700
&ZOPN                 SETA  &ZOPN+1                                     00629800
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_ENTRYKEY'                00629900
&ZOPO(&ZOPN)          SETC  'EQU'                                       00630000
&ZOPV(&ZOPN)          SETC  'B''00001000'''                             00630100
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               00630200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).ENTRYKEY'                     00630300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00630400
.*                                                                      00630500
&ZOPN                 SETA  &ZOPN+1                                     00630600
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_STARTPOS'                00630700
&ZOPO(&ZOPN)          SETC  'EQU'                                       00630800
&ZOPV(&ZOPN)          SETC  'B''00000100'''                             00630900
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               00631000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).STARTPOS'                     00631100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00631200
.*                                                                      00631300
&ZOPN                 SETA  &ZOPN+1                                     00631400
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_ENDPOS'                  00631500
&ZOPO(&ZOPN)          SETC  'EQU'                                       00631600
&ZOPV(&ZOPN)          SETC  'B''00000010'''                             00631700
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               00631800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).ENDPOS'                       00631900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00632000
.*-------------------------------------------------------------------   00632100
.***AM.L03 XORDER BL.8                                                  00632200
&ZOPN                 SETA &ZOPN+1                                      00632300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XORDER'                           00632400
&ZOPO(&ZOPN)          SETC 'DS'                                         00632500
&ZOPV(&ZOPN)          SETC 'BL.8'                                       00632600
&ZOPD(&ZOPN)          SETC '++ INPUT'                                   00632700
.*                                                                      00632800
&ZOPN                 SETA  &ZOPN+1                                     00632900
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XORDER_HEAD'                     00633000
&ZOPO(&ZOPN)          SETC  'EQU'                                       00633100
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             00633200
&ZOPD(&ZOPN)          SETC  '++ XORDER.'                                00633300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).HEAD'                         00633400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00633500
.*                                                                      00633600
&ZOPN                 SETA  &ZOPN+1                                     00633700
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XORDER_TAIL'                     00633800
&ZOPO(&ZOPN)          SETC  'EQU'                                       00633900
&ZOPV(&ZOPN)          SETC  'B''01000000'''                             00634000
&ZOPD(&ZOPN)          SETC  '++ XORDER.'                                00634100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).TAIL'                         00634200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00634300
.*-------------------------------------------------------------------   00634400
.***AM.L05 XTYPE XL1                                                    00634500
&ZOPN                 SETA &ZOPN+1                                      00634600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XTYPE'                            00634700
&ZOPO(&ZOPN)          SETC 'DS'                                         00634800
&ZOPV(&ZOPN)          SETC 'XL1'                                        00634900
&ZOPD(&ZOPN)          SETC '++ &ZXTYPE XTYPE'                           00635000
.*                                                                      00635100
&ZOPN                 SETA  &ZOPN+1                                     00635200
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XTYPE_STRUCTURE'                 00635300
&ZOPO(&ZOPN)          SETC  'EQU'                                       00635400
&ZOPV(&ZOPN)          SETC  '1'                                         00635500
&ZOPD(&ZOPN)          SETC  '++ XTYPE.'                                 00635600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).STRUCTURE'                    00635700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00635800
.*                                                                      00635900
&ZOPN                 SETA  &ZOPN+1                                     00636000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XTYPE_CLASS'                     00636100
&ZOPO(&ZOPN)          SETC  'EQU'                                       00636200
&ZOPV(&ZOPN)          SETC  '2'                                         00636300
&ZOPD(&ZOPN)          SETC  '++ XTYPE.'                                 00636400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).CLASS'                        00636500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00636600
.*                                                                      00636700
&ZOPN                 SETA  &ZOPN+1                                     00636800
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XTYPE_LISTNUM'                   00636900
&ZOPO(&ZOPN)          SETC  'EQU'                                       00637000
&ZOPV(&ZOPN)          SETC  '3'                                         00637100
&ZOPD(&ZOPN)          SETC  '++ XTYPE.'                                 00637200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).LISTNUM'                      00637300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00637400
.*                                                                      00637500
&ZOPN                 SETA  &ZOPN+1                                     00637600
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XTYPE_LOCKENTRIES'               00637700
&ZOPO(&ZOPN)          SETC  'EQU'                                       00637800
&ZOPV(&ZOPN)          SETC  '4'                                         00637900
&ZOPD(&ZOPN)          SETC  '++ XTYPE.'                                 00638000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).LOCKENTRIES'                  00638100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00638200
.*                                                                      00638300
&ZOPN                 SETA  &ZOPN+1                                     00638400
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XTYPE_USERCNTLS'                 00638500
&ZOPO(&ZOPN)          SETC  'EQU'                                       00638600
&ZOPV(&ZOPN)          SETC  '5'                                         00638700
&ZOPD(&ZOPN)          SETC  '++ XTYPE.'                                 00638800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).USERCNTLS'                    00638900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00639000
.*                                                                      00639100
&ZOPN                 SETA  &ZOPN+1                                     00639200
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XTYPE_ENTRY'                     00639300
&ZOPO(&ZOPN)          SETC  'EQU'                                       00639400
&ZOPV(&ZOPN)          SETC  '6'                                         00639500
&ZOPD(&ZOPN)          SETC  '++ XTYPE.'                                 00639600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).ENTRY'                        00639700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00639800
.*                                                                      00639900
&ZOPN                 SETA  &ZOPN+1                                     00640000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XTYPE_EMCONTROLS'                00640100
&ZOPO(&ZOPN)          SETC  'EQU'                                       00640200
&ZOPV(&ZOPN)          SETC  '7'                                         00640300
&ZOPD(&ZOPN)          SETC  '++ XTYPE.'                                 00640400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).EMCONTROLS'                   00640500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00640600
.*                                                                      00640700
&ZOPN                 SETA  &ZOPN+1                                     00640800
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XTYPE_EVENTQS'                   00640900
&ZOPO(&ZOPN)          SETC  'EQU'                                       00641000
&ZOPV(&ZOPN)          SETC  '8'                                         00641100
&ZOPD(&ZOPN)          SETC  '++ XTYPE.'                                 00641200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).EVENTQS'                      00641300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00641400
.*-------------------------------------------------------------------   00641500
.***AM.L05 XEMCLEVEL XL1                                                00641600
&ZOPN                 SETA &ZOPN+1                                      00641700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XEMCLEVEL'                        00641800
&ZOPO(&ZOPN)          SETC 'DS'                                         00641900
&ZOPV(&ZOPN)          SETC 'XL1'                                        00642000
&ZOPD(&ZOPN)          SETC '++ &ZXEMCLEVEL XEMCLEVEL'                   00642100
.*                                                                      00642200
&ZOPN                 SETA  &ZOPN+1                                     00642300
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XEMCLEVEL_SUMMARY'               00642400
&ZOPO(&ZOPN)          SETC  'EQU'                                       00642500
&ZOPV(&ZOPN)          SETC  '1'                                         00642600
&ZOPD(&ZOPN)          SETC  '++ XEMCLEVEL.'                             00642700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).SUMMARY'                      00642800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00642900
.*                                                                      00643000
&ZOPN                 SETA  &ZOPN+1                                     00643100
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XEMCLEVEL_EMC'                   00643200
&ZOPO(&ZOPN)          SETC  'EQU'                                       00643300
&ZOPV(&ZOPN)          SETC  '2'                                         00643400
&ZOPD(&ZOPN)          SETC  '++ XEMCLEVEL.'                             00643500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).EMC'                          00643600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00643700
.*-------------------------------------------------------------------   00643800
.***AM.L05 XEQLEVEL XL1                                                 00643900
&ZOPN                 SETA &ZOPN+1                                      00644000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XEQLEVEL'                         00644100
&ZOPO(&ZOPN)          SETC 'DS'                                         00644200
&ZOPV(&ZOPN)          SETC 'XL1'                                        00644300
&ZOPD(&ZOPN)          SETC '++ &ZXEQLEVEL XEQLEVEL'                     00644400
.*                                                                      00644500
&ZOPN                 SETA  &ZOPN+1                                     00644600
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XEQLEVEL_DETAIL'                 00644700
&ZOPO(&ZOPN)          SETC  'EQU'                                       00644800
&ZOPV(&ZOPN)          SETC  '1'                                         00644900
&ZOPD(&ZOPN)          SETC  '++ XEQLEVEL.'                              00645000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).DETAIL'                       00645100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00645200
.*                                                                      00645300
&ZOPN                 SETA  &ZOPN+1                                     00645400
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XEQLEVEL_EMC'                    00645500
&ZOPO(&ZOPN)          SETC  'EQU'                                       00645600
&ZOPV(&ZOPN)          SETC  '2'                                         00645700
&ZOPD(&ZOPN)          SETC  '++ XEQLEVEL.'                              00645800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).EMC'                          00645900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00646000
.*-------------------------------------------------------------------   00646100
.***AM.L09  XCONIDVAL XL1                                               00646200
&ZOPN                 SETA &ZOPN+1                                      00646300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCONIDVAL'                        00646400
&ZOPO(&ZOPN)          SETC 'DS'                                         00646500
&ZOPV(&ZOPN)          SETC 'XL1'                                        00646600
&ZOPD(&ZOPN)          SETC '++ &ZXCONIDVAL  XCONIDVAL'                  00646700
.*-------------------------------------------------------------------   00646800
.***AM.L09  XRSV0050 CL31                                               00646900
&ZOPN                 SETA &ZOPN+1                                      00647000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0050'                         00647100
&ZOPO(&ZOPN)          SETC 'DS'                                         00647200
&ZOPV(&ZOPN)          SETC 'CL31'                                       00647300
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV0050'                      00647400
.*-------------------------------------------------------------------   00647500
.***AM.L10 END OF IXLZSTR LIST PARAMETERS                               00647600
&ZOPN                 SETA &ZOPN+1                                      00647700
&ZOPL(&ZOPN)          SETC '&XMFCTRL.L'                                 00647800
&ZOPO(&ZOPN)          SETC 'EQU'                                        00647900
&ZOPV(&ZOPN)          SETC '*-&XMFCTRL'                                 00648000
&ZOPD(&ZOPN)          SETC '++ LENGTH OF PLIST'                         00648100
.*                                                                      00648200
&ZOPN                 SETA &ZOPN+1                                      00648300
&ZOPL(&ZOPN)          SETC ' '                                          00648400
&ZOPO(&ZOPN)          SETC 'SPACE'                                      00648500
&ZOPV(&ZOPN)          SETC '1'                                          00648600
&ZOPD(&ZOPN)          SETC ' '                                          00648700
.*-------------------------------------------------------------------   00648800
.***AL.L12 IXLZSTR FMT=LIST MF=S|L PARAMETERS                           00648900
                      AIF   ('&XMF' EQ 'L').ZMFLX  DONE IF MF=L         00649000
.*                                                                      00649100
&ZOPN                 SETA  &ZOPN+1                                     00649200
&ZOPL(&ZOPN)          SETC  '&XMFCTRL.S'                                00649300
&ZOPO(&ZOPN)          SETC  'DC'                                        00649400
&ZOPV(&ZOPN)          SETC  '0H''0'''                                   00649500
&ZOPD(&ZOPN)          SETC  '++ IXLZSTR ARG PARMS'                      00649600
.*                                                                      00649700
.ZLMFSLX              ANOP  ,                                           00649800
.*-------------------------------------------------------------------   00649900
.***AL.L13 SET ZPLLEN TO ITS APPROPRIATE VALUE                          00650000
&ZPLLEN               SETA 224                                          00650100
.*                                                                      00650200
.******************************************************************     00650300
.***AI.L01 IXLZSTR FMT=LIST FILL IN PARAMETER AREA                      00650400
.******************************************************************     00650500
                      ACTR  10000                                       00650600
&ZCVAL                SETC  'LA'           ASSUME XA MODE               00650700
                      AIF   ('&SYSASCE' EQ 'P').ZIMFXA  SYSSTATE PRI    00650800
&ZCVAL                SETC  'LAE'          XAX MODE                     00650900
.ZIMFXA               ANOP ,                                            00651000
.*                                                                      00651100
                      AIF   ('&XMFCTRL'(1,1) NE '(').ZIMFN2  NOT GPR    00651200
&ZCGPR                SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)  GET GPR         00651300
                      AIF   ('&ZCGPR' EQ 'GPR1').ZIMFNX                 00651400
                      AIF   ('&ZCGPR' EQ 'GPR01').ZIMFNX                00651500
                      AIF   ('&ZCGPR' EQ 'REG1').ZIMFNX                 00651600
                      AIF   ('&ZCGPR' EQ 'REG01').ZIMFNX                00651700
                      AIF   ('&ZCGPR' EQ 'R1').ZIMFNX                   00651800
                      AIF   ('&ZCGPR' EQ '1').ZIMFNX                    00651900
                      AIF   ('&ZCGPR' EQ '01').ZIMFNX                   00652000
&ZOPN                 SETA  &ZOPN+1                                     00652100
&ZOPL(&ZOPN)          SETC  ' '                                         00652200
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00652300
&ZOPV(&ZOPN)          SETC  '1,0(,&ZCGPR)'                              00652400
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00652500
                      AGO   .ZIMFNX                                     00652600
.*                                                                      00652700
.ZIMFN2               ANOP ,                                            00652800
&ZOPN                 SETA  &ZOPN+1                                     00652900
&ZOPL(&ZOPN)          SETC  ' '                                         00653000
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00653100
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL'                                00653200
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00653300
.ZIMFNX               ANOP ,                                            00653400
.********************************************************************   00653500
.***AI.L02 IXLZSTR FMT=LIST INITIALIZE PARAMETER AREA                   00653600
.********************************************************************   00653700
.***AI.L03 MF=(SLE)                                                     00653800
                      AIF   ('&XMF' EQ 'L').ZIMFLX                      00653900
.*                                                                      00654000
&ZOPN                 SETA  &ZOPN+1                                     00654100
&ZOPL(&ZOPN)          SETC  ' '                                         00654200
&ZOPO(&ZOPN)          SETC  'XC'                                        00654300
&ZOPV(&ZOPN)          SETC  '0(&ZPLLEN,1),0(1)'                         00654400
&ZOPD(&ZOPN)          SETC  '++ INITIALIZE'                             00654500
.ZIMFLX               ANOP  ,                                           00654600
.*-------------------------------------------------------------------   00654700
.***AI.L25  XABDPLPTR AL4                                               00654800
                      AIF   ('&ZXABDPLPTR' EQ '').ZI1E                  00654900
                      AIF   ('&ZXABDPLPTR' EQ 'OUTPUT').ZI1E            00655000
&ZCGPR                SETC  '&XABDPLPTR'                                00655100
.*                                                                      00655200
                      AIF   ('&XABDPLPTR'(1,1) NE '(').ZI1B             00655300
&ZCGPR   SETC  '0('.'&XABDPLPTR'(2,K'&XABDPLPTR-2).')'                  00655400
                      AGO   .ZI1D                                       00655500
.ZI1B                 ANOP  ,                                           00655600
.*                                                                      00655700
&ZC                   SETC  '&XABDPLPTR'(1,1)                           00655800
                      AIF   (T'&ZC NE 'N').ZI1D                         00655900
&ZC                   SETC  '&XABDPLPTR'                                00656000
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI1D                00656100
&ZCGPR                SETC  '=AL4(&XABDPLPTR)'                          00656200
.*                                                                      00656300
.ZI1D                 ANOP  ,                                           00656400
.*                                                                      00656500
&ZOPN                 SETA  &ZOPN+1                                     00656600
&ZOPL(&ZOPN)          SETC  ' '                                         00656700
&ZOPO(&ZOPN)          SETC  'MVC'                                       00656800
&ZOPV(&ZOPN)          SETC  '0(4,1),&ZCGPR'                             00656900
&ZOPD(&ZOPN)          SETC  '++ &ZXABDPLPTR XABDPLPTR'                  00657000
.*                                                                      00657100
.ZI1E                 ANOP  ,                                           00657200
.*-------------------------------------------------------------------   00657300
.***AI.L04B XVERSION XL1                                                00657400
                      AIF   (&XPLISTVER EQ 0).ZIMFVZ                    00657500
&ZOPN                 SETA  &ZOPN+1                                     00657600
&ZOPL(&ZOPN)          SETC  ' '                                         00657700
&ZOPO(&ZOPN)          SETC  'MVI'                                       00657800
&ZOPV(&ZOPN)          SETC  '12(1),&XPLISTVER'                          00657900
&ZOPD(&ZOPN)          SETC  '++ INPUT XVERSION XL1'                     00658000
.ZIMFVZ               ANOP  ,                                           00658100
.*-------------------------------------------------------------------   00658200
.***AI.L07 XLISTNUMLEVEL AL1                                            00658300
&ZW                   SETC  ''                                          00658400
.*-------------------------------------------------------------------   00658500
.***AI.L15 XLISTNUMLEVEL "SUMMARY" AL1                                  00658600
         AIF   ('&XLISTNUMLEVEL' NE 'SUMMARY').ZI6A                     00658700
&ZW                   SETC  '1'                                         00658800
.ZI6A                 ANOP  ,                                           00658900
.*-------------------------------------------------------------------   00659000
.***AI.L15 XLISTNUMLEVEL "DETAIL" AL1                                   00659100
         AIF   ('&XLISTNUMLEVEL' NE 'DETAIL').ZI7A                      00659200
&ZW                   SETC  '2'                                         00659300
.ZI7A                 ANOP  ,                                           00659400
.*-------------------------------------------------------------------   00659500
.***AI.L15 XLISTNUMLEVEL "ENTRY" AL1                                    00659600
         AIF   ('&XLISTNUMLEVEL' NE 'ENTRY').ZI8A                       00659700
&ZW                   SETC  '3'                                         00659800
.ZI8A                 ANOP  ,                                           00659900
.*-------------------------------------------------------------------   00660000
.***AI.L17 XLISTNUMLEVEL AL1                                            00660100
                      AIF   ('&ZW' EQ '0').ZI8B                         00660200
                      AIF   ('&ZW' EQ '').ZI8B                          00660300
.*                                                                      00660400
&ZOPN                 SETA  &ZOPN+1                                     00660500
&ZOPL(&ZOPN)          SETC  ' '                                         00660600
&ZOPO(&ZOPN)          SETC  'MVI'                                       00660700
&ZOPV(&ZOPN)          SETC  '13(1),&ZW'                                 00660800
&ZOPD(&ZOPN)          SETC  '++ &ZXLISTNUMLEVEL XLISTNUMLEVEL'          00660900
.ZI8B                 ANOP  ,                                           00661000
.*-------------------------------------------------------------------   00661100
.***AI.L07 XCLASSLEVEL AL1                                              00661200
&ZW                   SETC  ''                                          00661300
.*-------------------------------------------------------------------   00661400
.***AI.L15 XCLASSLEVEL "SUMMARY" AL1                                    00661500
         AIF   ('&XCLASSLEVEL' NE 'SUMMARY').ZI10A                      00661600
&ZW                   SETC  '1'                                         00661700
.ZI10A                ANOP  ,                                           00661800
.*-------------------------------------------------------------------   00661900
.***AI.L15 XCLASSLEVEL "DETAIL" AL1                                     00662000
         AIF   ('&XCLASSLEVEL' NE 'DETAIL').ZI11A                       00662100
&ZW                   SETC  '2'                                         00662200
.ZI11A                ANOP  ,                                           00662300
.*-------------------------------------------------------------------   00662400
.***AI.L15 XCLASSLEVEL "ENTRY" AL1                                      00662500
         AIF   ('&XCLASSLEVEL' NE 'ENTRY').ZI12A                        00662600
&ZW                   SETC  '3'                                         00662700
.ZI12A                ANOP  ,                                           00662800
.*-------------------------------------------------------------------   00662900
.***AI.L17 XCLASSLEVEL AL1                                              00663000
                      AIF   ('&ZW' EQ '0').ZI12B                        00663100
                      AIF   ('&ZW' EQ '').ZI12B                         00663200
.*                                                                      00663300
&ZOPN                 SETA  &ZOPN+1                                     00663400
&ZOPL(&ZOPN)          SETC  ' '                                         00663500
&ZOPO(&ZOPN)          SETC  'MVI'                                       00663600
&ZOPV(&ZOPN)          SETC  '14(1),&ZW'                                 00663700
&ZOPD(&ZOPN)          SETC  '++ &ZXCLASSLEVEL XCLASSLEVEL'              00663800
.ZI12B                ANOP  ,                                           00663900
.*-------------------------------------------------------------------   00664000
.***AI.L07 XSTRLEVEL AL1                                                00664100
&ZW                   SETC  ''                                          00664200
.*-------------------------------------------------------------------   00664300
.***AI.L15 XSTRLEVEL "SUMMARY" AL1                                      00664400
         AIF   ('&XSTRLEVEL' NE 'SUMMARY').ZI14A                        00664500
&ZW                   SETC  '1'                                         00664600
.ZI14A                ANOP  ,                                           00664700
.*-------------------------------------------------------------------   00664800
.***AI.L15 XSTRLEVEL "DETAIL" AL1                                       00664900
         AIF   ('&XSTRLEVEL' NE 'DETAIL').ZI15A                         00665000
&ZW                   SETC  '2'                                         00665100
.ZI15A                ANOP  ,                                           00665200
.*-------------------------------------------------------------------   00665300
.***AI.L17 XSTRLEVEL AL1                                                00665400
                      AIF   ('&ZW' EQ '0').ZI15B                        00665500
                      AIF   ('&ZW' EQ '').ZI15B                         00665600
.*                                                                      00665700
&ZOPN                 SETA  &ZOPN+1                                     00665800
&ZOPL(&ZOPN)          SETC  ' '                                         00665900
&ZOPO(&ZOPN)          SETC  'MVI'                                       00666000
&ZOPV(&ZOPN)          SETC  '15(1),&ZW'                                 00666100
&ZOPD(&ZOPN)          SETC  '++ &ZXSTRLEVEL XSTRLEVEL'                  00666200
.ZI15B                ANOP  ,                                           00666300
.*-------------------------------------------------------------------   00666400
.***AI.L19 ADDR XANSAREA A                                              00666500
                      AIF   ('&ZXANSAREA' EQ '').ZI18H                  00666600
&ZCLNG                SETC  '&XANSAREA'                                 00666700
&ZCGPR                SETC  '14'                                        00666800
         AIF   ('&XANSAREA'(1,1) EQ '(').ZI18F  IN GPR                  00666900
.*                                                                      00667000
&ZOPN                 SETA  &ZOPN+1                                     00667100
&ZOPL(&ZOPN)          SETC  ' '                                         00667200
&ZOPO(&ZOPN)          SETC  'LA'                                        00667300
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00667400
&ZOPD(&ZOPN)          SETC  '++ &ZXANSAREA XANSAREA'                    00667500
.*                                                                      00667600
                      AGO   .ZI18G                                      00667700
.*                                                                      00667800
.ZI18F                ANOP  ,                                           00667900
&ZCGPR   SETC  '&XANSAREA'(2,K'&XANSAREA-2)                             00668000
.*                                                                      00668100
.ZI18G                ANOP  ,                                           00668200
.*                                                                      00668300
&ZOPN                 SETA  &ZOPN+1                                     00668400
&ZOPL(&ZOPN)          SETC  ' '                                         00668500
&ZOPO(&ZOPN)          SETC  'ST'                                        00668600
&ZOPV(&ZOPN)          SETC  '&ZCGPR,24(,1)'                             00668700
&ZOPD(&ZOPN)          SETC  '++ &ZXANSAREA XANSAREA'                    00668800
.*                                                                      00668900
.ZI18H                ANOP  ,                                           00669000
.*-------------------------------------------------------------------   00669100
.***AI.L25  XANSLEN F                                                   00669200
                      AIF   ('&ZXANSLEN' EQ '').ZI19E                   00669300
                      AIF   ('&ZXANSLEN' EQ 'OUTPUT').ZI19E             00669400
&ZCGPR                SETC  '&XANSLEN'                                  00669500
.*                                                                      00669600
                      AIF   ('&XANSLEN'(1,1) NE '(').ZI19B              00669700
&ZCGPR   SETC  '0('.'&XANSLEN'(2,K'&XANSLEN-2).')'                      00669800
                      AGO   .ZI19D                                      00669900
.ZI19B                ANOP  ,                                           00670000
.*                                                                      00670100
&ZC                   SETC  '&XANSLEN'(1,1)                             00670200
                      AIF   (T'&ZC NE 'N').ZI19D                        00670300
&ZC                   SETC  '&XANSLEN'                                  00670400
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI19D               00670500
&ZCGPR                SETC  '=FL4''&XANSLEN'''                          00670600
.*                                                                      00670700
.ZI19D                ANOP  ,                                           00670800
.*                                                                      00670900
&ZOPN                 SETA  &ZOPN+1                                     00671000
&ZOPL(&ZOPN)          SETC  ' '                                         00671100
&ZOPO(&ZOPN)          SETC  'MVC'                                       00671200
&ZOPV(&ZOPN)          SETC  '28(4,1),&ZCGPR'                            00671300
&ZOPD(&ZOPN)          SETC  '++ &ZXANSLEN XANSLEN'                      00671400
.*                                                                      00671500
.ZI19E                ANOP  ,                                           00671600
.*-------------------------------------------------------------------   00671700
.***AI.L25  XRESTOKEN CL64                                              00671800
                      AIF   ('&ZXRESTOKEN' EQ '').ZI20E                 00671900
                      AIF   ('&ZXRESTOKEN' EQ 'OUTPUT').ZI20E           00672000
&ZCGPR                SETC  '&XRESTOKEN'                                00672100
.*                                                                      00672200
                      AIF   ('&XRESTOKEN'(1,1) NE '(').ZI20B            00672300
&ZCGPR   SETC  '0('.'&XRESTOKEN'(2,K'&XRESTOKEN-2).')'                  00672400
.ZI20B                ANOP  ,                                           00672500
.*                                                                      00672600
&ZOPN                 SETA  &ZOPN+1                                     00672700
&ZOPL(&ZOPN)          SETC  ' '                                         00672800
&ZOPO(&ZOPN)          SETC  'MVC'                                       00672900
&ZOPV(&ZOPN)          SETC  '32(64,1),&ZCGPR'                           00673000
&ZOPD(&ZOPN)          SETC  '++ &ZXRESTOKEN XRESTOKEN'                  00673100
.*                                                                      00673200
.ZI20E                ANOP  ,                                           00673300
.*-------------------------------------------------------------------   00673400
.***AI.L25  XSTRNAME CL16                                               00673500
                      AIF   ('&ZXSTRNAME' EQ '').ZI21E                  00673600
                      AIF   ('&ZXSTRNAME' EQ 'OUTPUT').ZI21E            00673700
&ZCGPR                SETC  '&XSTRNAME'                                 00673800
.*                                                                      00673900
                      AIF   ('&XSTRNAME'(1,1) NE '(').ZI21B             00674000
&ZCGPR   SETC  '0('.'&XSTRNAME'(2,K'&XSTRNAME-2).')'                    00674100
.ZI21B                ANOP  ,                                           00674200
.*                                                                      00674300
&ZOPN                 SETA  &ZOPN+1                                     00674400
&ZOPL(&ZOPN)          SETC  ' '                                         00674500
&ZOPO(&ZOPN)          SETC  'MVC'                                       00674600
&ZOPV(&ZOPN)          SETC  '96(16,1),&ZCGPR'                           00674700
&ZOPD(&ZOPN)          SETC  '++ &ZXSTRNAME XSTRNAME'                    00674800
.*                                                                      00674900
.ZI21E                ANOP  ,                                           00675000
.*-------------------------------------------------------------------   00675100
.***AI.L25  XENTRYNAME CL16                                             00675200
                      AIF   ('&ZXENTRYNAME' EQ '').ZI22E                00675300
                      AIF   ('&ZXENTRYNAME' EQ 'OUTPUT').ZI22E          00675400
&ZCGPR                SETC  '&XENTRYNAME'                               00675500
.*                                                                      00675600
                      AIF   ('&XENTRYNAME'(1,1) NE '(').ZI22B           00675700
&ZCGPR   SETC  '0('.'&XENTRYNAME'(2,K'&XENTRYNAME-2).')'                00675800
.ZI22B                ANOP  ,                                           00675900
.*                                                                      00676000
&ZOPN                 SETA  &ZOPN+1                                     00676100
&ZOPL(&ZOPN)          SETC  ' '                                         00676200
&ZOPO(&ZOPN)          SETC  'MVC'                                       00676300
&ZOPV(&ZOPN)          SETC  '112(16,1),&ZCGPR'                          00676400
&ZOPD(&ZOPN)          SETC  '++ &ZXENTRYNAME XENTRYNAME'                00676500
.*                                                                      00676600
.ZI22E                ANOP  ,                                           00676700
.*-------------------------------------------------------------------   00676800
.***AI.L25  XENTRYID CL12                                               00676900
                      AIF   ('&ZXENTRYID' EQ '').ZI23E                  00677000
                      AIF   ('&ZXENTRYID' EQ 'OUTPUT').ZI23E            00677100
&ZCGPR                SETC  '&XENTRYID'                                 00677200
.*                                                                      00677300
                      AIF   ('&XENTRYID'(1,1) NE '(').ZI23B             00677400
&ZCGPR   SETC  '0('.'&XENTRYID'(2,K'&XENTRYID-2).')'                    00677500
.ZI23B                ANOP  ,                                           00677600
.*                                                                      00677700
&ZOPN                 SETA  &ZOPN+1                                     00677800
&ZOPL(&ZOPN)          SETC  ' '                                         00677900
&ZOPO(&ZOPN)          SETC  'MVC'                                       00678000
&ZOPV(&ZOPN)          SETC  '128(12,1),&ZCGPR'                          00678100
&ZOPD(&ZOPN)          SETC  '++ &ZXENTRYID XENTRYID'                    00678200
.*                                                                      00678300
.ZI23E                ANOP  ,                                           00678400
.*-------------------------------------------------------------------   00678500
.***AI.L18  XSTARTVAL F                                                 00678600
         AIF   ('&XSTARTVAL' NE 'ALL').ZI24                             00678700
&ZXSTARTVAL           SETC  ''             RESET INPUT/OUTPUT           00678800
.ZI24                 ANOP  ,                                           00678900
.*-------------------------------------------------------------------   00679000
.***AI.L25  XSTARTVAL F                                                 00679100
                      AIF   ('&ZXSTARTVAL' EQ '').ZI24E                 00679200
                      AIF   ('&ZXSTARTVAL' EQ 'OUTPUT').ZI24E           00679300
&ZCGPR                SETC  '&XSTARTVAL'                                00679400
.*                                                                      00679500
                      AIF   ('&XSTARTVAL'(1,1) NE '(').ZI24B            00679600
&ZCGPR   SETC  '0('.'&XSTARTVAL'(2,K'&XSTARTVAL-2).')'                  00679700
                      AGO   .ZI24D                                      00679800
.ZI24B                ANOP  ,                                           00679900
.*                                                                      00680000
&ZC                   SETC  '&XSTARTVAL'(1,1)                           00680100
                      AIF   (T'&ZC NE 'N').ZI24D                        00680200
&ZC                   SETC  '&XSTARTVAL'                                00680300
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI24D               00680400
&ZCGPR                SETC  '=FL4''&XSTARTVAL'''                        00680500
.*                                                                      00680600
.ZI24D                ANOP  ,                                           00680700
.*                                                                      00680800
&ZOPN                 SETA  &ZOPN+1                                     00680900
&ZOPL(&ZOPN)          SETC  ' '                                         00681000
&ZOPO(&ZOPN)          SETC  'MVC'                                       00681100
&ZOPV(&ZOPN)          SETC  '140(4,1),&ZCGPR'                           00681200
&ZOPD(&ZOPN)          SETC  '++ &ZXSTARTVAL XSTARTVAL'                  00681300
.*                                                                      00681400
.ZI24E                ANOP  ,                                           00681500
.*-------------------------------------------------------------------   00681600
.***AI.L18  XENDVAL F                                                   00681700
         AIF   ('&XENDVAL' NE 'STARTVAL').ZI25                          00681800
&ZXENDVAL             SETC  ''             RESET INPUT/OUTPUT           00681900
.ZI25                 ANOP  ,                                           00682000
.*-------------------------------------------------------------------   00682100
.***AI.L25  XENDVAL F                                                   00682200
                      AIF   ('&ZXENDVAL' EQ '').ZI25E                   00682300
                      AIF   ('&ZXENDVAL' EQ 'OUTPUT').ZI25E             00682400
&ZCGPR                SETC  '&XENDVAL'                                  00682500
.*                                                                      00682600
                      AIF   ('&XENDVAL'(1,1) NE '(').ZI25B              00682700
&ZCGPR   SETC  '0('.'&XENDVAL'(2,K'&XENDVAL-2).')'                      00682800
                      AGO   .ZI25D                                      00682900
.ZI25B                ANOP  ,                                           00683000
.*                                                                      00683100
&ZC                   SETC  '&XENDVAL'(1,1)                             00683200
                      AIF   (T'&ZC NE 'N').ZI25D                        00683300
&ZC                   SETC  '&XENDVAL'                                  00683400
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI25D               00683500
&ZCGPR                SETC  '=FL4''&XENDVAL'''                          00683600
.*                                                                      00683700
.ZI25D                ANOP  ,                                           00683800
.*                                                                      00683900
&ZOPN                 SETA  &ZOPN+1                                     00684000
&ZOPL(&ZOPN)          SETC  ' '                                         00684100
&ZOPO(&ZOPN)          SETC  'MVC'                                       00684200
&ZOPV(&ZOPN)          SETC  '144(4,1),&ZCGPR'                           00684300
&ZOPD(&ZOPN)          SETC  '++ &ZXENDVAL XENDVAL'                      00684400
.*                                                                      00684500
.ZI25E                ANOP  ,                                           00684600
.*-------------------------------------------------------------------   00684700
.***AI.L18  XSTARTPOS F                                                 00684800
         AIF   ('&XSTARTPOS' NE 'ALL').ZI26                             00684900
&ZXSTARTPOS           SETC  ''             RESET INPUT/OUTPUT           00685000
.ZI26                 ANOP  ,                                           00685100
.*-------------------------------------------------------------------   00685200
.***AI.L25  XSTARTPOS F                                                 00685300
                      AIF   ('&ZXSTARTPOS' EQ '').ZI26E                 00685400
                      AIF   ('&ZXSTARTPOS' EQ 'OUTPUT').ZI26E           00685500
&ZCGPR                SETC  '&XSTARTPOS'                                00685600
.*                                                                      00685700
                      AIF   ('&XSTARTPOS'(1,1) NE '(').ZI26B            00685800
&ZCGPR   SETC  '0('.'&XSTARTPOS'(2,K'&XSTARTPOS-2).')'                  00685900
                      AGO   .ZI26D                                      00686000
.ZI26B                ANOP  ,                                           00686100
.*                                                                      00686200
&ZC                   SETC  '&XSTARTPOS'(1,1)                           00686300
                      AIF   (T'&ZC NE 'N').ZI26D                        00686400
&ZC                   SETC  '&XSTARTPOS'                                00686500
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI26D               00686600
&ZCGPR                SETC  '=FL4''&XSTARTPOS'''                        00686700
.*                                                                      00686800
.ZI26D                ANOP  ,                                           00686900
.*                                                                      00687000
&ZOPN                 SETA  &ZOPN+1                                     00687100
&ZOPL(&ZOPN)          SETC  ' '                                         00687200
&ZOPO(&ZOPN)          SETC  'MVC'                                       00687300
&ZOPV(&ZOPN)          SETC  '148(4,1),&ZCGPR'                           00687400
&ZOPD(&ZOPN)          SETC  '++ &ZXSTARTPOS XSTARTPOS'                  00687500
.*                                                                      00687600
.ZI26E                ANOP  ,                                           00687700
.*-------------------------------------------------------------------   00687800
.***AI.L18  XENDPOS F                                                   00687900
         AIF   ('&XENDPOS' NE 'STARTPOS').ZI27                          00688000
&ZXENDPOS             SETC  ''             RESET INPUT/OUTPUT           00688100
.ZI27                 ANOP  ,                                           00688200
.*-------------------------------------------------------------------   00688300
.***AI.L25  XENDPOS F                                                   00688400
                      AIF   ('&ZXENDPOS' EQ '').ZI27E                   00688500
                      AIF   ('&ZXENDPOS' EQ 'OUTPUT').ZI27E             00688600
&ZCGPR                SETC  '&XENDPOS'                                  00688700
.*                                                                      00688800
                      AIF   ('&XENDPOS'(1,1) NE '(').ZI27B              00688900
&ZCGPR   SETC  '0('.'&XENDPOS'(2,K'&XENDPOS-2).')'                      00689000
                      AGO   .ZI27D                                      00689100
.ZI27B                ANOP  ,                                           00689200
.*                                                                      00689300
&ZC                   SETC  '&XENDPOS'(1,1)                             00689400
                      AIF   (T'&ZC NE 'N').ZI27D                        00689500
&ZC                   SETC  '&XENDPOS'                                  00689600
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI27D               00689700
&ZCGPR                SETC  '=FL4''&XENDPOS'''                          00689800
.*                                                                      00689900
.ZI27D                ANOP  ,                                           00690000
.*                                                                      00690100
&ZOPN                 SETA  &ZOPN+1                                     00690200
&ZOPL(&ZOPN)          SETC  ' '                                         00690300
&ZOPO(&ZOPN)          SETC  'MVC'                                       00690400
&ZOPV(&ZOPN)          SETC  '152(4,1),&ZCGPR'                           00690500
&ZOPD(&ZOPN)          SETC  '++ &ZXENDPOS XENDPOS'                      00690600
.*                                                                      00690700
.ZI27E                ANOP  ,                                           00690800
.*-------------------------------------------------------------------   00690900
.***AI.L25  XCLASSVAL F                                                 00691000
                      AIF   ('&ZXCLASSVAL' EQ '').ZI28E                 00691100
                      AIF   ('&ZXCLASSVAL' EQ 'OUTPUT').ZI28E           00691200
&ZCGPR                SETC  '&XCLASSVAL'                                00691300
.*                                                                      00691400
                      AIF   ('&XCLASSVAL'(1,1) NE '(').ZI28B            00691500
&ZCGPR   SETC  '0('.'&XCLASSVAL'(2,K'&XCLASSVAL-2).')'                  00691600
                      AGO   .ZI28D                                      00691700
.ZI28B                ANOP  ,                                           00691800
.*                                                                      00691900
&ZC                   SETC  '&XCLASSVAL'(1,1)                           00692000
                      AIF   (T'&ZC NE 'N').ZI28D                        00692100
&ZC                   SETC  '&XCLASSVAL'                                00692200
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI28D               00692300
&ZCGPR                SETC  '=FL4''&XCLASSVAL'''                        00692400
.*                                                                      00692500
.ZI28D                ANOP  ,                                           00692600
.*                                                                      00692700
&ZOPN                 SETA  &ZOPN+1                                     00692800
&ZOPL(&ZOPN)          SETC  ' '                                         00692900
&ZOPO(&ZOPN)          SETC  'MVC'                                       00693000
&ZOPV(&ZOPN)          SETC  '156(4,1),&ZCGPR'                           00693100
&ZOPD(&ZOPN)          SETC  '++ &ZXCLASSVAL XCLASSVAL'                  00693200
.*                                                                      00693300
.ZI28E                ANOP  ,                                           00693400
.*-------------------------------------------------------------------   00693500
.***AI.L25  XLISTNUMVAL F                                               00693600
                      AIF   ('&ZXLISTNUMVAL' EQ '').ZI29E               00693700
                      AIF   ('&ZXLISTNUMVAL' EQ 'OUTPUT').ZI29E         00693800
&ZCGPR                SETC  '&XLISTNUMVAL'                              00693900
.*                                                                      00694000
                      AIF   ('&XLISTNUMVAL'(1,1) NE '(').ZI29B          00694100
&ZCGPR   SETC  '0('.'&XLISTNUMVAL'(2,K'&XLISTNUMVAL-2).')'              00694200
                      AGO   .ZI29D                                      00694300
.ZI29B                ANOP  ,                                           00694400
.*                                                                      00694500
&ZC                   SETC  '&XLISTNUMVAL'(1,1)                         00694600
                      AIF   (T'&ZC NE 'N').ZI29D                        00694700
&ZC                   SETC  '&XLISTNUMVAL'                              00694800
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI29D               00694900
&ZCGPR                SETC  '=FL4''&XLISTNUMVAL'''                      00695000
.*                                                                      00695100
.ZI29D                ANOP  ,                                           00695200
.*                                                                      00695300
&ZOPN                 SETA  &ZOPN+1                                     00695400
&ZOPL(&ZOPN)          SETC  ' '                                         00695500
&ZOPO(&ZOPN)          SETC  'MVC'                                       00695600
&ZOPV(&ZOPN)          SETC  '160(4,1),&ZCGPR'                           00695700
&ZOPD(&ZOPN)          SETC  '++ &ZXLISTNUMVAL XLISTNUMVAL'              00695800
.*                                                                      00695900
.ZI29E                ANOP  ,                                           00696000
.*-------------------------------------------------------------------   00696100
.***AI.L25  XSTRDUMPID XL2                                              00696200
                      AIF   ('&ZXSTRDUMPID' EQ '').ZI30E                00696300
                      AIF   ('&ZXSTRDUMPID' EQ 'OUTPUT').ZI30E          00696400
&ZCGPR                SETC  '&XSTRDUMPID'                               00696500
.*                                                                      00696600
                      AIF   ('&XSTRDUMPID'(1,1) NE '(').ZI30B           00696700
&ZCGPR   SETC  '0('.'&XSTRDUMPID'(2,K'&XSTRDUMPID-2).')'                00696800
                      AGO   .ZI30D                                      00696900
.ZI30B                ANOP  ,                                           00697000
.*                                                                      00697100
&ZC                   SETC  '&XSTRDUMPID'(1,1)                          00697200
                      AIF   (T'&ZC NE 'N').ZI30D                        00697300
&ZC                   SETC  '&XSTRDUMPID'                               00697400
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI30D               00697500
&ZCGPR                SETC  '=FL2''&XSTRDUMPID'''                       00697600
.*                                                                      00697700
.ZI30D                ANOP  ,                                           00697800
.*                                                                      00697900
&ZOPN                 SETA  &ZOPN+1                                     00698000
&ZOPL(&ZOPN)          SETC  ' '                                         00698100
&ZOPO(&ZOPN)          SETC  'MVC'                                       00698200
&ZOPV(&ZOPN)          SETC  '164(2,1),&ZCGPR'                           00698300
&ZOPD(&ZOPN)          SETC  '++ &ZXSTRDUMPID XSTRDUMPID'                00698400
.*                                                                      00698500
.ZI30E                ANOP  ,                                           00698600
.*-------------------------------------------------------------------   00698700
.***AI.L18  XENTRYKEY CL16                                              00698800
         AIF   ('&XENTRYKEY' NE 'NO_KEY').ZI32                          00698900
&ZXENTRYKEY           SETC  ''             RESET INPUT/OUTPUT           00699000
.ZI32                 ANOP  ,                                           00699100
.*-------------------------------------------------------------------   00699200
.***AI.L25  XENTRYKEY CL16                                              00699300
                      AIF   ('&ZXENTRYKEY' EQ '').ZI32E                 00699400
                      AIF   ('&ZXENTRYKEY' EQ 'OUTPUT').ZI32E           00699500
&ZCGPR                SETC  '&XENTRYKEY'                                00699600
.*                                                                      00699700
                      AIF   ('&XENTRYKEY'(1,1) NE '(').ZI32B            00699800
&ZCGPR   SETC  '0('.'&XENTRYKEY'(2,K'&XENTRYKEY-2).')'                  00699900
.ZI32B                ANOP  ,                                           00700000
.*                                                                      00700100
&ZOPN                 SETA  &ZOPN+1                                     00700200
&ZOPL(&ZOPN)          SETC  ' '                                         00700300
&ZOPO(&ZOPN)          SETC  'MVC'                                       00700400
&ZOPV(&ZOPN)          SETC  '168(16,1),&ZCGPR'                          00700500
&ZOPD(&ZOPN)          SETC  '++ &ZXENTRYKEY XENTRYKEY'                  00700600
.*                                                                      00700700
.ZI32E                ANOP  ,                                           00700800
.*-------------------------------------------------------------------   00700900
.***AI.L05 XCLASSTYPE BL1                                               00701000
&ZW                   SETC  ''                                          00701100
&ZCLNG                SETC  ''             RESET BIT ON FLAG            00701200
.*-------------------------------------------------------------------   00701300
.***AI.L08 XCLASSTYPE "CASTOUT"                                         00701400
.***      BL1'1XXXXXXX'                                                 00701500
         AIF   ('&XCLASSTYPE' NE 'CASTOUT').ZI34A                       00701600
&ZW                   SETC  '&ZW.1'                                     00701700
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00701800
                      AGO   .ZI34C                                      00701900
.*                                                                      00702000
.ZI34A                ANOP  ,                                           00702100
&ZW                   SETC  '&ZW.0'                                     00702200
.ZI34C                ANOP  ,                                           00702300
.*-------------------------------------------------------------------   00702400
.***AI.L08 XCLASSTYPE "STORAGE"                                         00702500
.***      BL1'X1XXXXXX'                                                 00702600
         AIF   ('&XCLASSTYPE' NE 'STORAGE').ZI35A                       00702700
&ZW                   SETC  '&ZW.1000000'                               00702800
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00702900
                      AGO   .ZI35C                                      00703000
.*                                                                      00703100
.ZI35A                ANOP  ,                                           00703200
&ZW                   SETC  '&ZW.0000000'                               00703300
.ZI35C                ANOP  ,                                           00703400
.*-------------------------------------------------------------------   00703500
.***AI.L11 XCLASSTYPE BL1                                               00703600
                      AIF   ('&ZCLNG' NE 'YES').ZI35E  ALL ZERO BITS    00703700
&ZOPN                 SETA  &ZOPN+1                                     00703800
&ZOPL(&ZOPN)          SETC  ' '                                         00703900
&ZOPO(&ZOPN)          SETC  'OI'                                        00704000
&ZOPV(&ZOPN)          SETC  '184(1),B''&ZW'''                           00704100
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              00704200
.ZI35E                ANOP  ,                                           00704300
.*-------------------------------------------------------------------   00704400
.***AI.L05 XADJUNCT BL1                                                 00704500
&ZW                   SETC  ''                                          00704600
&ZCLNG                SETC  ''             RESET BIT ON FLAG            00704700
.*-------------------------------------------------------------------   00704800
.***AI.L08 XADJUNCT "NO"                                                00704900
.***      BL1'1XXXXXXX'                                                 00705000
         AIF   ('&XADJUNCT' NE 'NO').ZI37A                              00705100
&ZW                   SETC  '&ZW.1'                                     00705200
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00705300
                      AGO   .ZI37C                                      00705400
.*                                                                      00705500
.ZI37A                ANOP  ,                                           00705600
&ZW                   SETC  '&ZW.0'                                     00705700
.ZI37C                ANOP  ,                                           00705800
.*-------------------------------------------------------------------   00705900
.***AI.L08 XADJUNCT "YES"                                               00706000
.***      BL1'X1XXXXXX'                                                 00706100
         AIF   ('&XADJUNCT' NE 'YES').ZI38A                             00706200
&ZW                   SETC  '&ZW.1000000'                               00706300
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00706400
                      AGO   .ZI38C                                      00706500
.*                                                                      00706600
.ZI38A                ANOP  ,                                           00706700
&ZW                   SETC  '&ZW.0000000'                               00706800
.ZI38C                ANOP  ,                                           00706900
.*-------------------------------------------------------------------   00707000
.***AI.L11 XADJUNCT BL1                                                 00707100
                      AIF   ('&ZCLNG' NE 'YES').ZI38E  ALL ZERO BITS    00707200
&ZOPN                 SETA  &ZOPN+1                                     00707300
&ZOPL(&ZOPN)          SETC  ' '                                         00707400
&ZOPO(&ZOPN)          SETC  'OI'                                        00707500
&ZOPV(&ZOPN)          SETC  '185(1),B''&ZW'''                           00707600
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              00707700
.ZI38E                ANOP  ,                                           00707800
.*-------------------------------------------------------------------   00707900
.***AI.L05 XENTRYDATA BL1                                               00708000
&ZW                   SETC  ''                                          00708100
&ZCLNG                SETC  ''             RESET BIT ON FLAG            00708200
.*-------------------------------------------------------------------   00708300
.***AI.L08 XENTRYDATA "NO"                                              00708400
.***      BL1'1XXXXXXX'                                                 00708500
         AIF   ('&XENTRYDATA' NE 'NO').ZI40A                            00708600
&ZW                   SETC  '&ZW.1'                                     00708700
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00708800
                      AGO   .ZI40C                                      00708900
.*                                                                      00709000
.ZI40A                ANOP  ,                                           00709100
&ZW                   SETC  '&ZW.0'                                     00709200
.ZI40C                ANOP  ,                                           00709300
.*-------------------------------------------------------------------   00709400
.***AI.L08 XENTRYDATA "YES"                                             00709500
.***      BL1'X1XXXXXX'                                                 00709600
         AIF   ('&XENTRYDATA' NE 'YES').ZI41A                           00709700
&ZW                   SETC  '&ZW.1000000'                               00709800
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00709900
                      AGO   .ZI41C                                      00710000
.*                                                                      00710100
.ZI41A                ANOP  ,                                           00710200
&ZW                   SETC  '&ZW.0000000'                               00710300
.ZI41C                ANOP  ,                                           00710400
.*-------------------------------------------------------------------   00710500
.***AI.L11 XENTRYDATA BL1                                               00710600
                      AIF   ('&ZCLNG' NE 'YES').ZI41E  ALL ZERO BITS    00710700
&ZOPN                 SETA  &ZOPN+1                                     00710800
&ZOPL(&ZOPN)          SETC  ' '                                         00710900
&ZOPO(&ZOPN)          SETC  'OI'                                        00711000
&ZOPV(&ZOPN)          SETC  '186(1),B''&ZW'''                           00711100
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              00711200
.ZI41E                ANOP  ,                                           00711300
.*-------------------------------------------------------------------   00711400
.***AI.L05 XFLAGS BL1                                                   00711500
&ZW                   SETC  ''                                          00711600
&ZCLNG                SETC  ''             RESET BIT ON FLAG            00711700
.*-------------------------------------------------------------------   00711800
.***AI.L08 XFLAGS "STARTVAL"                                            00711900
.***      BL1'1XXXXXXX'                                                 00712000
         AIF   ('&STARTVAL' EQ '').ZI43A                                00712100
         AIF   ('&STARTVAL' EQ 'ALL').ZI43A                             00712200
         AIF   ('&STARTVAL' EQ 'ALL').ZI43A                             00712300
         AIF   ('&STARTVAL' EQ 'ALL').ZI43A                             00712400
         AIF   ('&STARTVAL' EQ 'ALL').ZI43A                             00712500
         AIF   ('&STARTVAL' EQ 'ALL').ZI43A                             00712600
         AIF   ('&STARTVAL' EQ 'ALL').ZI43A                             00712700
         AIF   ('&STARTVAL' EQ 'ALL').ZI43A                             00712800
         AIF   ('&STARTVAL' EQ 'ALL').ZI43A                             00712900
&ZW                   SETC  '&ZW.1'                                     00713000
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00713100
                      AGO   .ZI43C                                      00713200
.*                                                                      00713300
.ZI43A                ANOP  ,                                           00713400
&ZW                   SETC  '&ZW.0'                                     00713500
.ZI43C                ANOP  ,                                           00713600
.*-------------------------------------------------------------------   00713700
.***AI.L08 XFLAGS "ENDVAL"                                              00713800
.***      BL1'X1XXXXXX'                                                 00713900
         AIF   ('&ENDVAL' EQ '').ZI44A                                  00714000
         AIF   ('&ENDVAL' EQ 'STARTVAL').ZI44A                          00714100
         AIF   ('&ENDVAL' EQ 'STARTVAL').ZI44A                          00714200
         AIF   ('&ENDVAL' EQ 'STARTVAL').ZI44A                          00714300
         AIF   ('&ENDVAL' EQ 'STARTVAL').ZI44A                          00714400
         AIF   ('&ENDVAL' EQ 'STARTVAL').ZI44A                          00714500
         AIF   ('&ENDVAL' EQ 'STARTVAL').ZI44A                          00714600
         AIF   ('&ENDVAL' EQ 'STARTVAL').ZI44A                          00714700
         AIF   ('&ENDVAL' EQ 'STARTVAL').ZI44A                          00714800
&ZW                   SETC  '&ZW.1'                                     00714900
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00715000
                      AGO   .ZI44C                                      00715100
.*                                                                      00715200
.ZI44A                ANOP  ,                                           00715300
&ZW                   SETC  '&ZW.0'                                     00715400
.ZI44C                ANOP  ,                                           00715500
.*-------------------------------------------------------------------   00715600
.***AI.L08 XFLAGS "ENTRYNAME"                                           00715700
.***      BL1'XX1XXXXX'                                                 00715800
         AIF   ('&ENTRYNAME' EQ '').ZI45A                               00715900
&ZW                   SETC  '&ZW.1'                                     00716000
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00716100
                      AGO   .ZI45C                                      00716200
.*                                                                      00716300
.ZI45A                ANOP  ,                                           00716400
&ZW                   SETC  '&ZW.0'                                     00716500
.ZI45C                ANOP  ,                                           00716600
.*-------------------------------------------------------------------   00716700
.***AI.L08 XFLAGS "ENTRYID"                                             00716800
.***      BL1'XXX1XXXX'                                                 00716900
         AIF   ('&ENTRYID' EQ '').ZI46A                                 00717000
&ZW                   SETC  '&ZW.1'                                     00717100
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00717200
                      AGO   .ZI46C                                      00717300
.*                                                                      00717400
.ZI46A                ANOP  ,                                           00717500
&ZW                   SETC  '&ZW.0'                                     00717600
.ZI46C                ANOP  ,                                           00717700
.*-------------------------------------------------------------------   00717800
.***AI.L08 XFLAGS "ENTRYKEY"                                            00717900
.***      BL1'XXXX1XXX'                                                 00718000
         AIF   ('&ENTRYKEY' EQ '').ZI47A                                00718100
         AIF   ('&ENTRYKEY' EQ 'NO_KEY').ZI47A                          00718200
         AIF   ('&ENTRYKEY' EQ 'NO_KEY').ZI47A                          00718300
&ZW                   SETC  '&ZW.1'                                     00718400
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00718500
                      AGO   .ZI47C                                      00718600
.*                                                                      00718700
.ZI47A                ANOP  ,                                           00718800
&ZW                   SETC  '&ZW.0'                                     00718900
.ZI47C                ANOP  ,                                           00719000
.*-------------------------------------------------------------------   00719100
.***AI.L08 XFLAGS "STARTPOS"                                            00719200
.***      BL1'XXXXX1XX'                                                 00719300
         AIF   ('&STARTPOS' EQ '').ZI48A                                00719400
         AIF   ('&STARTPOS' EQ 'ALL').ZI48A                             00719500
         AIF   ('&STARTPOS' EQ 'ALL').ZI48A                             00719600
&ZW                   SETC  '&ZW.1'                                     00719700
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00719800
                      AGO   .ZI48C                                      00719900
.*                                                                      00720000
.ZI48A                ANOP  ,                                           00720100
&ZW                   SETC  '&ZW.0'                                     00720200
.ZI48C                ANOP  ,                                           00720300
.*-------------------------------------------------------------------   00720400
.***AI.L08 XFLAGS "ENDPOS"                                              00720500
.***      BL1'XXXXXX1X'                                                 00720600
         AIF   ('&ENDPOS' EQ '').ZI49A                                  00720700
         AIF   ('&ENDPOS' EQ 'STARTPOS').ZI49A                          00720800
         AIF   ('&ENDPOS' EQ 'STARTPOS').ZI49A                          00720900
&ZW                   SETC  '&ZW.10'                                    00721000
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00721100
                      AGO   .ZI49C                                      00721200
.*                                                                      00721300
.ZI49A                ANOP  ,                                           00721400
&ZW                   SETC  '&ZW.00'                                    00721500
.ZI49C                ANOP  ,                                           00721600
.*-------------------------------------------------------------------   00721700
.***AI.L11 XFLAGS BL1                                                   00721800
                      AIF   ('&ZCLNG' NE 'YES').ZI49E  ALL ZERO BITS    00721900
&ZOPN                 SETA  &ZOPN+1                                     00722000
&ZOPL(&ZOPN)          SETC  ' '                                         00722100
&ZOPO(&ZOPN)          SETC  'OI'                                        00722200
&ZOPV(&ZOPN)          SETC  '187(1),B''&ZW'''                           00722300
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              00722400
.ZI49E                ANOP  ,                                           00722500
.*-------------------------------------------------------------------   00722600
.***AI.L05 XORDER BL1                                                   00722700
&ZW                   SETC  ''                                          00722800
&ZCLNG                SETC  ''             RESET BIT ON FLAG            00722900
.*-------------------------------------------------------------------   00723000
.***AI.L08 XORDER "HEAD"                                                00723100
.***      BL1'1XXXXXXX'                                                 00723200
         AIF   ('&XORDER' NE 'HEAD').ZI51A                              00723300
&ZW                   SETC  '&ZW.1'                                     00723400
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00723500
                      AGO   .ZI51C                                      00723600
.*                                                                      00723700
.ZI51A                ANOP  ,                                           00723800
&ZW                   SETC  '&ZW.0'                                     00723900
.ZI51C                ANOP  ,                                           00724000
.*-------------------------------------------------------------------   00724100
.***AI.L08 XORDER "TAIL"                                                00724200
.***      BL1'X1XXXXXX'                                                 00724300
         AIF   ('&XORDER' NE 'TAIL').ZI52A                              00724400
&ZW                   SETC  '&ZW.1000000'                               00724500
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00724600
                      AGO   .ZI52C                                      00724700
.*                                                                      00724800
.ZI52A                ANOP  ,                                           00724900
&ZW                   SETC  '&ZW.0000000'                               00725000
.ZI52C                ANOP  ,                                           00725100
.*-------------------------------------------------------------------   00725200
.***AI.L11 XORDER BL1                                                   00725300
                      AIF   ('&ZCLNG' NE 'YES').ZI52E  ALL ZERO BITS    00725400
&ZOPN                 SETA  &ZOPN+1                                     00725500
&ZOPL(&ZOPN)          SETC  ' '                                         00725600
&ZOPO(&ZOPN)          SETC  'OI'                                        00725700
&ZOPV(&ZOPN)          SETC  '188(1),B''&ZW'''                           00725800
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              00725900
.ZI52E                ANOP  ,                                           00726000
.*-------------------------------------------------------------------   00726100
.***AI.L07 XTYPE AL1                                                    00726200
&ZW                   SETC  ''                                          00726300
.*-------------------------------------------------------------------   00726400
.***AI.L15 XTYPE "STRUCTURE" AL1                                        00726500
         AIF   ('&XTYPE' NE 'STRUCTURE').ZI54A                          00726600
&ZW                   SETC  '1'                                         00726700
.ZI54A                ANOP  ,                                           00726800
.*-------------------------------------------------------------------   00726900
.***AI.L15 XTYPE "CLASS" AL1                                            00727000
         AIF   ('&XTYPE' NE 'CLASS').ZI55A                              00727100
&ZW                   SETC  '2'                                         00727200
.ZI55A                ANOP  ,                                           00727300
.*-------------------------------------------------------------------   00727400
.***AI.L15 XTYPE "LISTNUM" AL1                                          00727500
         AIF   ('&XTYPE' NE 'LISTNUM').ZI56A                            00727600
&ZW                   SETC  '3'                                         00727700
.ZI56A                ANOP  ,                                           00727800
.*-------------------------------------------------------------------   00727900
.***AI.L15 XTYPE "LOCKENTRIES" AL1                                      00728000
         AIF   ('&XTYPE' NE 'LOCKENTRIES').ZI57A                        00728100
&ZW                   SETC  '4'                                         00728200
.ZI57A                ANOP  ,                                           00728300
.*-------------------------------------------------------------------   00728400
.***AI.L15 XTYPE "USERCNTLS" AL1                                        00728500
         AIF   ('&XTYPE' NE 'USERCNTLS').ZI58A                          00728600
&ZW                   SETC  '5'                                         00728700
.ZI58A                ANOP  ,                                           00728800
.*-------------------------------------------------------------------   00728900
.***AI.L15 XTYPE "ENTRY" AL1                                            00729000
         AIF   ('&XTYPE' NE 'ENTRY').ZI59A                              00729100
&ZW                   SETC  '6'                                         00729200
.ZI59A                ANOP  ,                                           00729300
.*-------------------------------------------------------------------   00729400
.***AI.L15 XTYPE "EMCONTROLS" AL1                                       00729500
         AIF   ('&XTYPE' NE 'EMCONTROLS').ZI60A                         00729600
&ZW                   SETC  '7'                                         00729700
.ZI60A                ANOP  ,                                           00729800
.*-------------------------------------------------------------------   00729900
.***AI.L15 XTYPE "EVENTQS" AL1                                          00730000
         AIF   ('&XTYPE' NE 'EVENTQS').ZI61A                            00730100
&ZW                   SETC  '8'                                         00730200
.ZI61A                ANOP  ,                                           00730300
.*-------------------------------------------------------------------   00730400
.***AI.L17 XTYPE AL1                                                    00730500
                      AIF   ('&ZW' EQ '0').ZI61B                        00730600
                      AIF   ('&ZW' EQ '').ZI61B                         00730700
.*                                                                      00730800
&ZOPN                 SETA  &ZOPN+1                                     00730900
&ZOPL(&ZOPN)          SETC  ' '                                         00731000
&ZOPO(&ZOPN)          SETC  'MVI'                                       00731100
&ZOPV(&ZOPN)          SETC  '189(1),&ZW'                                00731200
&ZOPD(&ZOPN)          SETC  '++ &ZXTYPE XTYPE'                          00731300
.ZI61B                ANOP  ,                                           00731400
.*-------------------------------------------------------------------   00731500
.***AI.L07 XEMCLEVEL AL1                                                00731600
&ZW                   SETC  ''                                          00731700
.*-------------------------------------------------------------------   00731800
.***AI.L15 XEMCLEVEL "SUMMARY" AL1                                      00731900
         AIF   ('&XEMCLEVEL' NE 'SUMMARY').ZI63A                        00732000
&ZW                   SETC  '1'                                         00732100
.ZI63A                ANOP  ,                                           00732200
.*-------------------------------------------------------------------   00732300
.***AI.L15 XEMCLEVEL "EMC" AL1                                          00732400
         AIF   ('&XEMCLEVEL' NE 'EMC').ZI64A                            00732500
&ZW                   SETC  '2'                                         00732600
.ZI64A                ANOP  ,                                           00732700
.*-------------------------------------------------------------------   00732800
.***AI.L17 XEMCLEVEL AL1                                                00732900
                      AIF   ('&ZW' EQ '0').ZI64B                        00733000
                      AIF   ('&ZW' EQ '').ZI64B                         00733100
.*                                                                      00733200
&ZOPN                 SETA  &ZOPN+1                                     00733300
&ZOPL(&ZOPN)          SETC  ' '                                         00733400
&ZOPO(&ZOPN)          SETC  'MVI'                                       00733500
&ZOPV(&ZOPN)          SETC  '190(1),&ZW'                                00733600
&ZOPD(&ZOPN)          SETC  '++ &ZXEMCLEVEL XEMCLEVEL'                  00733700
.ZI64B                ANOP  ,                                           00733800
.*-------------------------------------------------------------------   00733900
.***AI.L07 XEQLEVEL AL1                                                 00734000
&ZW                   SETC  ''                                          00734100
.*-------------------------------------------------------------------   00734200
.***AI.L15 XEQLEVEL "DETAIL" AL1                                        00734300
         AIF   ('&XEQLEVEL' NE 'DETAIL').ZI66A                          00734400
&ZW                   SETC  '1'                                         00734500
.ZI66A                ANOP  ,                                           00734600
.*-------------------------------------------------------------------   00734700
.***AI.L15 XEQLEVEL "EMC" AL1                                           00734800
         AIF   ('&XEQLEVEL' NE 'EMC').ZI67A                             00734900
&ZW                   SETC  '2'                                         00735000
.ZI67A                ANOP  ,                                           00735100
.*-------------------------------------------------------------------   00735200
.***AI.L17 XEQLEVEL AL1                                                 00735300
                      AIF   ('&ZW' EQ '0').ZI67B                        00735400
                      AIF   ('&ZW' EQ '').ZI67B                         00735500
.*                                                                      00735600
&ZOPN                 SETA  &ZOPN+1                                     00735700
&ZOPL(&ZOPN)          SETC  ' '                                         00735800
&ZOPO(&ZOPN)          SETC  'MVI'                                       00735900
&ZOPV(&ZOPN)          SETC  '191(1),&ZW'                                00736000
&ZOPD(&ZOPN)          SETC  '++ &ZXEQLEVEL XEQLEVEL'                    00736100
.ZI67B                ANOP  ,                                           00736200
.*-------------------------------------------------------------------   00736300
.***AI.L25  XCONIDVAL XL1                                               00736400
                      AIF   ('&ZXCONIDVAL' EQ '').ZI68E                 00736500
                      AIF   ('&ZXCONIDVAL' EQ 'OUTPUT').ZI68E           00736600
&ZCGPR                SETC  '&XCONIDVAL'                                00736700
.*                                                                      00736800
                      AIF   ('&XCONIDVAL'(1,1) NE '(').ZI68B            00736900
&ZCGPR   SETC  '0('.'&XCONIDVAL'(2,K'&XCONIDVAL-2).')'                  00737000
                      AGO   .ZI68D                                      00737100
.ZI68B                ANOP  ,                                           00737200
.*                                                                      00737300
&ZC                   SETC  '&XCONIDVAL'(1,1)                           00737400
                      AIF   (T'&ZC NE 'N').ZI68D                        00737500
&ZC                   SETC  '&XCONIDVAL'                                00737600
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI68D               00737700
&ZCGPR                SETC  '=AL1(&XCONIDVAL)'                          00737800
.*                                                                      00737900
.ZI68D                ANOP  ,                                           00738000
.*                                                                      00738100
&ZOPN                 SETA  &ZOPN+1                                     00738200
&ZOPL(&ZOPN)          SETC  ' '                                         00738300
&ZOPO(&ZOPN)          SETC  'MVC'                                       00738400
&ZOPV(&ZOPN)          SETC  '192(1,1),&ZCGPR'                           00738500
&ZOPD(&ZOPN)          SETC  '++ &ZXCONIDVAL XCONIDVAL'                  00738600
.*                                                                      00738700
.ZI68E                ANOP  ,                                           00738800
.*-------------------------------------------------------------------   00738900
&ZOPN1                SETA &ZOPN                                        00739000
.*******************************************************************    00739100
.***  PROCESS IXLZSTR OUTPUT PARAMETERS                                 00739200
.*******************************************************************    00739300
                      ACTR  10000                                       00739400
.*------------------------------------------------------------------    00739500
.***AO.LVER01                                                           00739600
                      AIF  (&XPLISTVER LT 1).ZO16Z  PLVER               00739700
.*------------------------------------------------------------------    00739800
.***AO.L02 XRETCODE F                                                   00739900
         AIF   ('&ZXRETCODE' EQ 'OUTPUT').ZO16A  OUTPUT                 00740000
         AIF   ('&ZXRETCODE' NE 'INOUT').ZO16C  INOUT                   00740100
.ZO16A    AIF   ('&XRETCODE'(1,1) NE '(').ZO16B  ADDR IN GPR            00740200
&ZCGPR   SETC  '&XRETCODE'(2,K'&XRETCODE-2)                             00740300
&ZOPN                 SETA  &ZOPN+1                                     00740400
&ZOPL(&ZOPN)          SETC  ' '                                         00740500
&ZOPO(&ZOPN)          SETC  'MVC'                                       00740600
&ZOPV(&ZOPN)          SETC  '0(4,&ZCGPR),16(1)'                         00740700
&ZOPD(&ZOPN)          SETC  '++ XRETCODE F'                             00740800
                      AGO   .ZO16C                                      00740900
.*                                                                      00741000
.ZO16B                ANOP  ,                                           00741100
&ZAWRK   SETA  K'&XRETCODE                                              00741200
         AIF   ('&XRETCODE'(&ZAWRK,1) NE ')').ZO16G                     00741300
&ZN      SETA  2                                                        00741400
.ZO16H    ANOP                                                          00741500
         AIF   (&ZN GE &ZAWRK).ZO16G                                    00741600
         AIF   ('&XRETCODE'(&ZN,1) NE '(').ZO16I                        00741700
&ZC      SETC  '&XRETCODE'(1,&ZN).'4'.','                               00741800
&ZC      SETC  '&ZC'.'&XRETCODE'(&ZN+1,&ZAWRK-&ZN).',16(1)'             00741900
         AGO   .ZO16J                                                   00742000
.ZO16I    ANOP                                                          00742100
&ZN      SETA  &ZN+1                                                    00742200
         AGO   .ZO16H                                                   00742300
.ZO16G    ANOP                                                          00742400
&ZC      SETC  '&XRETCODE.(4),16(1)'                                    00742500
.ZO16J    ANOP                                                          00742600
&ZOPN                 SETA  &ZOPN+1                                     00742700
&ZOPL(&ZOPN)          SETC  ' '                                         00742800
&ZOPO(&ZOPN)          SETC  'MVC'                                       00742900
&ZOPV(&ZOPN)          SETC  '&ZC'                                       00743000
&ZOPD(&ZOPN)          SETC  '++ XRETCODE F'                             00743100
.ZO16C                ANOP  ,                                           00743200
.*------------------------------------------------------------------    00743300
.***AO.LVER02                                                           00743400
.ZO16Z                ANOP  ,                                           00743500
.*------------------------------------------------------------------    00743600
.***AO.LVER01                                                           00743700
                      AIF  (&XPLISTVER LT 1).ZO17Z  PLVER               00743800
.*------------------------------------------------------------------    00743900
.***AO.L02 XRSNCODE F                                                   00744000
         AIF   ('&ZXRSNCODE' EQ 'OUTPUT').ZO17A  OUTPUT                 00744100
         AIF   ('&ZXRSNCODE' NE 'INOUT').ZO17C  INOUT                   00744200
.ZO17A    AIF   ('&XRSNCODE'(1,1) NE '(').ZO17B  ADDR IN GPR            00744300
&ZCGPR   SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                             00744400
&ZOPN                 SETA  &ZOPN+1                                     00744500
&ZOPL(&ZOPN)          SETC  ' '                                         00744600
&ZOPO(&ZOPN)          SETC  'MVC'                                       00744700
&ZOPV(&ZOPN)          SETC  '0(4,&ZCGPR),20(1)'                         00744800
&ZOPD(&ZOPN)          SETC  '++ XRSNCODE F'                             00744900
                      AGO   .ZO17C                                      00745000
.*                                                                      00745100
.ZO17B                ANOP  ,                                           00745200
&ZAWRK   SETA  K'&XRSNCODE                                              00745300
         AIF   ('&XRSNCODE'(&ZAWRK,1) NE ')').ZO17G                     00745400
&ZN      SETA  2                                                        00745500
.ZO17H    ANOP                                                          00745600
         AIF   (&ZN GE &ZAWRK).ZO17G                                    00745700
         AIF   ('&XRSNCODE'(&ZN,1) NE '(').ZO17I                        00745800
&ZC      SETC  '&XRSNCODE'(1,&ZN).'4'.','                               00745900
&ZC      SETC  '&ZC'.'&XRSNCODE'(&ZN+1,&ZAWRK-&ZN).',20(1)'             00746000
         AGO   .ZO17J                                                   00746100
.ZO17I    ANOP                                                          00746200
&ZN      SETA  &ZN+1                                                    00746300
         AGO   .ZO17H                                                   00746400
.ZO17G    ANOP                                                          00746500
&ZC      SETC  '&XRSNCODE.(4),20(1)'                                    00746600
.ZO17J    ANOP                                                          00746700
&ZOPN                 SETA  &ZOPN+1                                     00746800
&ZOPL(&ZOPN)          SETC  ' '                                         00746900
&ZOPO(&ZOPN)          SETC  'MVC'                                       00747000
&ZOPV(&ZOPN)          SETC  '&ZC'                                       00747100
&ZOPD(&ZOPN)          SETC  '++ XRSNCODE F'                             00747200
.ZO17C                ANOP  ,                                           00747300
.*------------------------------------------------------------------    00747400
.***AO.LVER02                                                           00747500
.ZO17Z                ANOP  ,                                           00747600
.*------------------------------------------------------------------    00747700
.***AO.LVER01                                                           00747800
                      AIF  (&XPLISTVER LT 1).ZO20Z  PLVER               00747900
.*------------------------------------------------------------------    00748000
.***AO.L02 XRESTOKEN CL64                                               00748100
         AIF   ('&ZXRESTOKEN' EQ 'OUTPUT').ZO20A  OUTPUT                00748200
         AIF   ('&ZXRESTOKEN' NE 'INOUT').ZO20C  INOUT                  00748300
.ZO20A    AIF   ('&XRESTOKEN'(1,1) NE '(').ZO20B  ADDR IN GPR           00748400
&ZCGPR   SETC  '&XRESTOKEN'(2,K'&XRESTOKEN-2)                           00748500
&ZOPN                 SETA  &ZOPN+1                                     00748600
&ZOPL(&ZOPN)          SETC  ' '                                         00748700
&ZOPO(&ZOPN)          SETC  'MVC'                                       00748800
&ZOPV(&ZOPN)          SETC  '0(64,&ZCGPR),32(1)'                        00748900
&ZOPD(&ZOPN)          SETC  '++ XRESTOKEN CL64'                         00749000
                      AGO   .ZO20C                                      00749100
.*                                                                      00749200
.ZO20B                ANOP  ,                                           00749300
&ZAWRK   SETA  K'&XRESTOKEN                                             00749400
         AIF   ('&XRESTOKEN'(&ZAWRK,1) NE ')').ZO20G                    00749500
&ZN      SETA  2                                                        00749600
.ZO20H    ANOP                                                          00749700
         AIF   (&ZN GE &ZAWRK).ZO20G                                    00749800
         AIF   ('&XRESTOKEN'(&ZN,1) NE '(').ZO20I                       00749900
&ZC      SETC  '&XRESTOKEN'(1,&ZN).'64'.','                             00750000
&ZC      SETC  '&ZC'.'&XRESTOKEN'(&ZN+1,&ZAWRK-&ZN).',32(1)'            00750100
         AGO   .ZO20J                                                   00750200
.ZO20I    ANOP                                                          00750300
&ZN      SETA  &ZN+1                                                    00750400
         AGO   .ZO20H                                                   00750500
.ZO20G    ANOP                                                          00750600
&ZC      SETC  '&XRESTOKEN.(64),32(1)'                                  00750700
.ZO20J    ANOP                                                          00750800
&ZOPN                 SETA  &ZOPN+1                                     00750900
&ZOPL(&ZOPN)          SETC  ' '                                         00751000
&ZOPO(&ZOPN)          SETC  'MVC'                                       00751100
&ZOPV(&ZOPN)          SETC  '&ZC'                                       00751200
&ZOPD(&ZOPN)          SETC  '++ XRESTOKEN CL64'                         00751300
.ZO20C                ANOP  ,                                           00751400
.*------------------------------------------------------------------    00751500
.***AO.LVER02                                                           00751600
.ZO20Z                ANOP  ,                                           00751700
.*******************************************************************    00751800
.***AO.X04  LABEL FOR MF=L PROCESSING                                   00751900
.*******************************************************************    00752000
.ZMFLX                ANOP  ,              MF=L PROCESSING              00752100
.*******************************************************************    00752200
.***AO.X05  FORMAT GENERATED INSTRUCTIONS                               00752300
.*******************************************************************    00752400
                      ACTR  10000                                       00752500
.*                                                                      00752600
                      LCLA  &ZLC           COLUMN POSITION              00752700
                      LCLA  &ZOPX          LIST TABLE INDEX             00752800
                      LCLC  &ZLL           LABEL                        00752900
                      LCLC  &ZLOP          OPERATION                    00753000
                      LCLC  &ZLV           VALUE                        00753100
                      LCLC  &ZLD           DESCRIPTION                  00753200
.*                                                                      00753300
&ZOPX                 SETA  1                                           00753400
.ZL2                  AIF   (&ZOPX GT &ZOPN1).ZLX  B IF DONE            00753500
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00753600
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00753700
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00753800
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00753900
                      AIF   (K'&ZLD LE 0).ZL5                           00754000
&ZLC                  SETA  35             COMMENT COLUMN               00754100
                      AIF   ('&ZLD'(1,1) NE '*').ZL3                    00754200
&ZLC                  SETA  33             COMMMENT COLUMN              00754300
.ZL3                  AIF   (K'&ZLV GE &ZLC-16-1).ZL4                   00754400
&ZLV                  SETC  '&ZLV'.' '                                  00754500
                      AGO   .ZL3                                        00754600
.*                                                                      00754700
.ZL4                  ANOP  ,                                           00754800
&ZLV                  SETC  '&ZLV'.' '                                  00754900
.ZL5                  ANOP  ,                                           00755000
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00755100
.*                                                                      00755200
&ZLL     &ZLOP &ZLV                                                     00755300
.*                                                                      00755400
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00755500
                      AGO   .ZL2           CONTINUE LOOPING             00755600
.*                                                                      00755700
.ZLX                  ANOP  ,                                           00755800
                      AIF   ('&XMF' EQ 'L').ZLINKX  MF=L                00755900
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00756000
.*                                                                      00756100
.*                                                                      00756200
.**  Parameter list offsets                                          ** 00756300
.*                                                                      00756400
.*  Offsets of parameter list sections                                  00756500
.*                                                                      00756600
                   LCLA  &PL_XABDPLPTR                                  00756700
                   LCLA  &PL_XRSVSTR2                                   00756800
                   LCLA  &PL_XRSVSTR3                                   00756900
                   LCLA  &PL_XRETCODE                                   00757000
                   LCLA  &PL_XRSNCODE                                   00757100
.*                                                                      00757200
&PL_XABDPLPTR   SETA  0                                                 00757300
&PL_XRSVSTR2    SETA  4                                                 00757400
&PL_XRSVSTR3    SETA  8                                                 00757500
&PL_XRETCODE    SETA  16                                                00757600
&PL_XRSNCODE    SETA  20                                                00757700
.*                                                                      00757800
&STRIU   SETC '#Z'.'&SYSNDX'(2,3).'A' Unique label base                 00757900
&STRLAB1 SETC '&STRIU'.'_1'           Generate unique label 1           00758000
&STRISNO SETC '&STRIU'.'_S'           Unique label for Service number   00758100
.*                                    word                              00758200
         SLR  0,0                  Zero out register 0                  00758300
         L    14,&PL_XABDPLPTR.(,1)  Get ABDPL addressability   @P3C    00758400
         ST   1,&PL_XRSVSTR3.(,1)  ADPLSERV parm 3 = @ of IXLZSTR parms 00758500
         LA   15,&STRISNO          Get address of fullword service #    00758600
         ST   15,&PL_XRSVSTR2.(,1) Save it as ADPLSERV parameter 2 @P3C 00758700
         B    &STRLAB1             Branch around constant               00758800
&STRISNO DC   AL4(ADPLSSTR)        Fullword containing ADPLSSTR         00758900
&STRLAB1 L    15,ADPLSERV-ABDPL(0,14) Get address of ADPLSERV routine   00759000
.*                                                                      00759100
         BALR 14,15                Call ADPLESRV router routine         00759200
.*                                                                      00759300
         L    15,&PL_XRETCODE.(,1) Put Return code into reg 15     @P3C 00759400
         L    0,&PL_XRSNCODE.(,1)  Put Reason code into reg 0      @P3C 00759500
.STREND               ANOP  ,                                           00759600
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00759700
.ZLINKX               ANOP  ,                                           00759800
.*******************************************************************    00759900
.***AP.X01  FORMAT GENERATED CODE                                       00760000
.ZL21                 AIF   (&ZOPX GT &ZOPN).ZLX1  B IF DONE            00760100
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00760200
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00760300
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00760400
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00760500
                      AIF   (K'&ZLD LE 0).ZL51                          00760600
&ZLC                  SETA  35             COMMENT COLUMN               00760700
                      AIF   ('&ZLD'(1,1) NE '*').ZL31                   00760800
&ZLC                  SETA  33             COMMENT COLUMN               00760900
.ZL31                 AIF   (K'&ZLV GE &ZLC-16-1).ZL41                  00761000
&ZLV                  SETC  '&ZLV'.' '                                  00761100
                      AGO   .ZL31                                       00761200
.*                                                                      00761300
.ZL41                 ANOP  ,                                           00761400
&ZLV                  SETC  '&ZLV'.' '                                  00761500
.ZL51                 ANOP  ,                                           00761600
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00761700
.*                                                                      00761800
&ZLL     &ZLOP &ZLV                                                     00761900
.*                                                                      00762000
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00762100
                      AGO   .ZL21          CONTINUE LOOPING             00762200
.*                                                                      00762300
.ZLX1                 ANOP  ,                                           00762400
.*******************************************************************    00762500
.***AP.X02  END OF IXLZSTR MACRO                                        00762600
&ZIXLZSTR             SETC  'YES'          SET IXLZSTR USED             00762700
         POP   PRINT                                                    00762800
*                                            IXLZSTR-1                  00762900
         SPACE 1                                                        00763000
.ZLX2                 ANOP  ,                                           00763100
         MEND                                                           00763200
**********************************************************************/ 00763300
*/*PB.OC01 INVOKE MACRO---------------------------------------------*/  00763400
*%IXLZSTR: MACRO KEYS(ANSAREA,ANSLEN,RESTOKEN,ABDPLPTR,TYPE,STRLEVEL,   00763500
*                 STRNAME,STRDUMPID,CLASSTYPE,CLASSLEVEL,STARTVAL,      00763600
*                 ENDVAL,CLASSVAL,STARTPOS,ENDPOS,ORDER,ADJUNCT,        00763700
*                 ENTRYDATA,LISTNUMLEVEL,LISTNUMVAL,ENTRYKEY,           00763800
*                 ENTRYNAME,ENTRYID,EMCLEVEL,EQLEVEL,CONIDVAL,RETCODE,  00763900
*                 RSNCODE,PLISTVER,MF);                                 00764000
*  ANS('?'||MACLABEL||' '||'IXLZSTRP '||MACLIST||                       00764100
*         ' '||MACKEYS||';') COL(MACLMAR);                              00764200
*%END IXLZSTR;                                                          00764300
