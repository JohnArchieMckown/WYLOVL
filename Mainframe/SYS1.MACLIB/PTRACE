*/**** Start of Specifications for PTRACE ****************************/ 00039000
*/*                                                                  */ 00078000
*/* $MAC(PTRACE) COMP(SC142) PROD(HBB7703):                          */ 00117000
*/*                                                                  */ 00156000
*/* MACRO-NAME = PTRACE                                              */ 00195000
*/*                                                                  */ 00234000
*/* DESCRIPTIVE-NAME = CREATE PROCESSOR SYSTEM TRACE TABLE ENTRY     */ 00273000
*/*                                                                  */ 00312000
*/* COMPONENT = SC142 (SYSTEM TRACE)                                 */ 00351000
*/*                                                                  */ 00390000
*/* EXTERNAL CLASSIFICATION: GUPI                                    */ 00429000
*/* END OF EXTERNAL CLASSIFICATION:                                  */ 00468000
*/* *01* EXTERNAL CLASSIFICATION:                                    */ 00471900
*/* *02* NONE: BASE                                                  */ 00475800
*/* *02* PI:   FIELDS                                                */ 00479700
*/*          TYPE=USRn             n: hexadecimal digit 0 - F.       */ 00483600
*/*          ,REGS=(reg1,reg2)     Default: REGS=(1): REGS=(1)       */ 00487500
*/*          ,REGS=(1)             reg1: decimal digit 2 - 12.       */ 00491400
*/*                                reg2: decimal digit 2 - 12.       */ 00495300
*/*          ,SAVEAREA=STANDARD                                      */ 00499200
*/* *01* END OF EXTERNAL CLASSIFICATION:                             */ 00503100
*/*                                                                  */ 00507000
*/* COPYRIGHT =                                                      */ 00546000
*/* 5647-A01                                                         */ 00585000
*/* THIS MODULE IS "RESTRICTED MATERIALS OF IBM"                     */ 00624000
*/* (C) COPYRIGHT IBM CORP. 1982, 2000                               */ 00663000
*/* LICENSED MATERIALS - PROPERTY OF IBM                             */ 00702000
*/*                                                                  */ 00741000
*/* STATUS = HBB7703                                                 */ 00780000
*/*                                                                  */ 00819000
*/* FUNCTION = CREATE A USER OR SYSTEM TRACE TABLE ENTRY(S)          */ 00858000
*/*            IN THE TRACE BUFFER OF THE CURRENT PROCESSOR.         */ 00897000
*/*                                                                  */ 00936000
*/* MODULE-TYPE = MACRO (BILINGUAL)                                  */ 00975000
*/*                                                                  */ 01014000
*/* MACRO-PARAMETERS =                                               */ 01053000
*/*                                                                  */ 01092000
*/*     TYPE - KEYWORD, REQUIRED                                     */ 01131000
*/*            INDICATES THE TYPE OF ENTRY TO BE CREATED.            */ 01170000
*/*            THE FOLLOWING ARE VALID TYPES:                        */ 01209000
*/*                SSCH - START SUBCHANNEL TRACE ENTRY.              */ 01248000
*/*                MSCH - MODIFY SUBCHANNEL TRACE ENTRY.             */ 01287000
*/*                HSCH - HALT SUBCHANNEL TRACE ENTRY.               */ 01326000
*/*                CSCH - CLEAR SUBCHANNEL TRACE ENTRY.              */ 01365000
*/*                RSCH - RESUME SUBCHANNEL TRACE ENTRY.             */ 01404000
*/*                EXT  - EXTERNAL INTERRUPT TRACE ENTRY.            */ 01443000
*/*                SVC  - SVC INTERRUPT TRACE ENTRY.                 */ 01482000
*/*                SVCR - SVC RETURN TRACE ENTRY.                    */ 01521000
*/*                SVCE - SVC ERROR TRACE ENTRY.                     */ 01560000
*/*                PGM  - PROGRAM INTERRUPT TRACE ENTRY.             */ 01599000
*/*                SPER - SLIP PROGRAM EVENT RECORDING TRACE ENTRY   */ 01638000
*/*                IO   - I/O INTERRUPT TRACE ENTRY.                 */ 01677000
*/*                DSP  - TASK DISPATCH TRACE ENTRY.                 */ 01716000
*/*                SRB  - INITIAL SRB DISPATCH TRACE ENTRY.          */ 01755000
*/*                SSRB - SUSPENDED SRB REDISPATCH TRACE ENTRY.      */ 01794000
*/*                WAIT - WAIT TASK DISPATCH TRACE ENTRY.            */ 01833000
*/*                MCH  - MACHINE CHECK TRACE ENTRY.                 */ 01872000
*/*                RST  - RESTART TRACE ENTRY.                       */ 01911000
*/*                ACR  - ACR TRACE ENTRY.                           */ 01950000
*/*                SUSP - SUSPEND TRACE TRACE ENTRY.                 */ 01989000
*/*                ALTR - TRACE ALTERATION TRACE ENTRY.              */ 02028000
*/*                SSRV - PC OR BRANCH ENTERED SYSTEM SERVICE ENTRY. */ 02067000
*/*                USRN - USER EVENT "N" EXPLICIT TRACE ENTRY,       */ 02106000
*/*                       WHERE "N" IS VALID HEX DIGIT 0-F.          */ 02145000
*/*                RCVY - REVOVERY EVENT TRACE ENTRY.                */ 02184000
*/*                TIME - TIMER SERVICES TRACE ENTRY.                */ 02223000
*/*                SIGA - SIGNAL ADAPTER TRACE ENTRY.                */ 02262000
*/*                                                                  */ 02301000
*/*     SSRVID- KEYWORD, OPTIONAL                                    */ 02340000
*/*            SPECIFIES THE SYSTEM SERVICE IDENTIFIER TO BE PLACED  */ 02379000
*/*            INTO THE TRACE ENTRY. THE SSRVID CAN BE SPECIFIED     */ 02418000
*/*            ONLY WITH TYPE=SSRV. VALID SSRVID IS BETWEEN 0-65535. */ 02457000
*/*                                                                  */ 02496000
*/*                                                                  */ 02535000
*/*     REGS - KEYWORD, OPTIONAL                                     */ 02574000
*/*            DEFINES THE DATA TO BE TRACED .  IF TWO REGS ARE      */ 02613000
*/*            GIVEN (A,B), THEN REGS A THRU B WILL BE TRACED. IF    */ 02652000
*/*            (1) IS SPECIFIED OR DEFAULTED, REGISTER 1 IS ASSUMED  */ 02691000
*/*            TO BE AN ADDRESS, WITH THE HIGH ORDER BIT 0, POINTING */ 02730000
*/*            TO A PARAMETER LIST WHICH CONTAINS THE DATA TO BE     */ 02769000
*/*            TRACED BY THE SERVICE ROUTINE. THE REGS PARAMETER CAN */ 02808000
*/*            BE SPECIFIED ONLY WITH TYPE=USRN, SSRV, RCVY OR TIME. */ 02847000
*/*            ONLY REGS=(1) CAN BE SPECIFIED AND IS THE DEFAULT FOR */ 02886000
*/*            TYPE=SSRV, TYPE=RCVY OR TYPE=TIME.                    */ 02925000
*/*                                                                  */ 02964000
*/*     SAVEAREA - KEYWORD, REQUIRED                                 */ 03003000
*/*            SPECIFIES HOW, IF NEEDED, THE ISSUERS REGISTERS ARE   */ 03042000
*/*            TO BE SAVED.                                          */ 03081000
*/*                 STANDARD - REGISTER 13 CONTAINS THE ADDRESS OF   */ 03120000
*/*                            AN 18-WORD SAVE AREA.                 */ 03159000
*/*                 PSA      - SPECIFIES THAT THE PSA REGISTER SAVE  */ 03198000
*/*                            AREA PSATRSAV IS TO BE USED TO SAVE   */ 03237000
*/*                            THE ISSUERS REGISTERS. USE OF THIS    */ 03276000
*/*                            OPTION REQUIRES DISABLEMENT AND MUST  */ 03315000
*/*                            NOT BE USED DURING PROCESSING OF      */ 03354000
*/*                            INTERRUPTS WHICH CAN OCCUR WHILE      */ 03393000
*/*                            DISABLED FOR I/O AND EXTERNAL         */ 03432000
*/*                            INTERRUPTS.                           */ 03471000
*/*                 NONE     - SPECIFIES THAT THE ISSUERS REGISTER   */ 03510000
*/*                            CONTENTS NEED NOT BE PRESERVED.       */ 03549000
*/*                                                                  */ 03588000
*/* MACROS =                                                         */ 03627000
*/*    EPILOG   - REQUIRED TO ISSUE THE PLS VERSION OF PTRACE.       */ 03666000
*/*    IHAPSA, IHATRVT - REQUIRED TO ISSUE PTRACE.                   */ 03705000
*/*    IHAASCB  - REQUIRED FOR DSP, SRB, SVC, SVCR TYPES ONLY        */ 03744000
*/*    IHALCCA  - REQUIRED FOR SSRB TYPE ONLY                        */ 03783000
*/*    IHARB    - REQUIRED FOR SVCR TYPE ONLY                        */ 03822000
*/*    IHASRB   - REQUIRED FOR SRB TYPE ONLY                         */ 03861000
*/*    IHATOT   - REQUIRED FOR DSP, SRB, SSRB, SVC, SVCR TYPES ONLY  */ 03900000
*/*    IHBERMAC - ISSUED.                                            */ 03939000
*/*                                                                  */ 03978000
*/* CHANGE-ACTIVITY =                                                */ 04017000
*/*   G860PXY - SYSTEM TRACE EXTENSIONS                              */ 04056000
*/*   ZMC3565 - USE SLL TO SHIFT SRBFLGS.                            */ 04095000
*/*             ADD REFS FOR TOT FIELDS IN INLINE EXPANSIONS.        */ 04134000
*/*                                                                  */ 04173000
*/* FLAG REASON   RELEASE DATE   ORIGIN  DESCRIPTION                 */ 04212000
*/* $L1= TREVENT  JBB2125 820823 PDXM:   TRACE PER EVENTS            */ 04251000
*/* $L2= AR       HBB3310 860210 PDR8:   ACCESS REGISTERS            */ 04290000
*/* $L3= RTMRAS   HBB3310 860414 PDR8:   RCVY ENTRY SUPPORT          */ 04329000
*/* $P1= PC41456  HBB3310 871023 PD1X:   REORDER SRB, DSP, SVC,      */ 04368000
*/*      SVCR INLINE EXPANSIONS                                      */ 04407000
*/* $L4= CLOCK    HBB4410 880428 PD88CT: TIME ENTRY SUPPORT          */ 04446000
*/* $D1= DCRR0308 HBB4410 900226 PDH6:   INLINE KEYWORD              */ 04485000
*/* $D2= DN70021  HBB5520 940505 PDXM:   SSRB INLINE                 */ 04524000
*/* $01= OW38365  JBB6607 981101 PD88CT: SIGA SUPPORT                */ 04563000
*/* $P2= PXD0494  HBB7073 991001 PDXB:   TYPE=SVC FOR ESAME          */ 04602000
*/* $P3= PXD1587  HBB7073 000406 PDH6:   PERFORMANCE IN SVCR         */ 04621500
*/*                                                                  */ 04641000
*/* End of Specifications for PTRACE *********************************/ 04680000
*/* A-000000-999999                                         @G860PXY */ 04719000
*/*                                                                     04758000
         MACRO                                                          04800000
&LABEL   PTRACE &TYPE=,&SSRVID=,&REGS=(1),&SAVEAREA=               @L2C 04850000
.*                                                                      04900000
*        MACDATE = 94.125                                          @D2C 04950000
.*                                                                      05000000
.*                                                                      05050000
.********************************************************************** 05100000
.*       DECLARE VARIABLES                                            * 05150000
.********************************************************************** 05200000
.*                                                                      05250000
         LCLC  &OP1,&OP2                 IHBERMAC OPERANDS              05300000
         LCLC  &N                        USER ENTRY NUMBER              05350000
         LCLC  &RX,&RY                   USER ENTRY REG RANGE           05400000
         LCLA  &I,&TABENT                TABLE INDEX & MAX ENTRIES      05450000
         LCLC  &TABTYPE(25)              ENTRY TYPE TABLE          @01C 05492500
         LCLC  &TABVT(25)                ENTRY POINT TRVT NAMES    @01C 05535000
         LCLC  &TABSA(25)                ENTRY TYPE SAVEAREA       @01C 05577500
         GBLA  &SYSALVL                  ARCHITECTURE LEVEL        @P2A 05620000
.*                                                                      05650000
.********************************************************************** 05750000
.*       INITIALIZE GENERATED LABELS FOR INLINE REQUESTS              * 05800000
.********************************************************************** 05850000
.*                                                                      05900000
&LABELA  SETC  'IHB&SYSNDX.A'            INLINE LABEL                   05950000
&LABELB  SETC  'IHB&SYSNDX.B'            OUT OF LINE LABEL              06000000
&LABELC  SETC  'IHB&SYSNDX.C'            IN OF LINE LABEL          @L2A 06016600
&LABELD  SETC  'IHB&SYSNDX.D'            OUT OF LINE LABEL         @L2A 06033200
.*                                                                      06050000
.********************************************************************** 06100000
.*       INITIAL &TABTYPE TABLE AND MAX ENTRIES                       * 06150000
.********************************************************************** 06200000
.*                                                                      06250000
&TABENT  SETA  25                        MAX ENTRIES IN TABLE      @01C 06293700
.*                                                                      06337500
&TABTYPE(1)   SETC  'SSCH'                                              06400000
&TABTYPE(2)   SETC  'MSCH'                                              06450000
&TABTYPE(3)   SETC  'HSCH'                                              06500000
&TABTYPE(4)   SETC  'CSCH'                                              06550000
&TABTYPE(5)   SETC  'RSCH'                                              06600000
&TABTYPE(6)   SETC  'EXT'                                               06650000
&TABTYPE(7)   SETC  'SVC'                                               06700000
&TABTYPE(8)   SETC  'SVCR'                                              06750000
&TABTYPE(9)   SETC  'SVCE'                                              06800000
&TABTYPE(10)  SETC  'PGM'                                               06850000
&TABTYPE(11)  SETC  'IO'                                                06900000
&TABTYPE(12)  SETC  'DSP'                                               06950000
&TABTYPE(13)  SETC  'SRB'                                               07000000
&TABTYPE(14)  SETC  'SSRB'                                              07050000
&TABTYPE(15)  SETC  'WAIT'                                              07100000
&TABTYPE(16)  SETC  'MCH'                                               07150000
&TABTYPE(17)  SETC  'RST'                                               07200000
&TABTYPE(18)  SETC  'ACR'                                               07250000
&TABTYPE(19)  SETC  'SUSP'                                              07300000
&TABTYPE(20)  SETC  'ALTR'                                              07350000
&TABTYPE(21)  SETC  'SPER'                                         @L1A 07400000
&TABTYPE(22)  SETC  'SSRV'               INITIALIZE TYPE TABLE     @L2A 07412500
.*                                       ENTRY FOR TRACE ENTRY          07425000
.*                                       TYPE SSRV                      07437500
.*                                                                      07450000
&TABTYPE(23)  SETC  'RCVY'               INITIALIZE TYPE TABLE     @L3A 07460000
.*                                       ENTRY FOR TRACE ENTRY          07470000
.*                                       TYPE RCVY                      07480000
&TABTYPE(24)  SETC  'TIME'               INITIALIZE TYPE TABLE     @L4A 07482500
.*                                       ENTRY FOR TRACE ENTRY          07485000
.*                                       TYPE TIME                      07487500
.*                                                                      07490000
&TABTYPE(25)  SETC  'SIGA'               ENTRY FOR SIGNAL ADAPTER  @01A 07493300
.*                                                                      07496600
&TABVT(1)     SETC  'TRVTETSS'                                          07500000
&TABVT(2)     SETC  'TRVTETMS'                                          07550000
&TABVT(3)     SETC  'TRVTETHS'                                          07600000
&TABVT(4)     SETC  'TRVTETCS'                                          07650000
&TABVT(5)     SETC  'TRVTETRS'                                          07700000
&TABVT(6)     SETC  'TRVTETEX'                                          07750000
&TABVT(7)     SETC  'TRVTETSV'                                          07800000
&TABVT(8)     SETC  'TRVTETSR'                                          07850000
&TABVT(9)     SETC  'TRVTETSE'                                          07900000
&TABVT(10)    SETC  'TRVTETPI'                                          07950000
&TABVT(11)    SETC  'TRVTETIO'                                          08000000
&TABVT(12)    SETC  'TRVTETDP'                                          08050000
&TABVT(13)    SETC  'TRVTETIS'                                          08100000
&TABVT(14)    SETC  'TRVTETSB'                                          08150000
&TABVT(15)    SETC  'TRVTETWT'                                          08200000
&TABVT(16)    SETC  'TRVTETMH'                                          08250000
&TABVT(17)    SETC  'TRVTETRE'                                          08300000
&TABVT(18)    SETC  'TRVTETAR'                                          08350000
&TABVT(19)    SETC  'TRVTETSU'                                          08400000
&TABVT(20)    SETC  'TRVTETTA'                                          08450000
&TABVT(21)    SETC  'TRVTETSL'                                     @L1A 08500000
&TABVT(22)    SETC  'TRVTETSY'           ENTRY POINT IN SYSTEM     @L2A 08510000
.*                                       TRACE TABLE ENTRY CREATION     08520000
.*                                       ROUTINES (IEAVETRC) FOR        08530000
.*                                       TYPE SSRV                      08540000
.*                                                                      08550000
&TABVT(23)    SETC  'TRVTETRV'           ENTRY POINT IN SYSTEM     @L3A 08558300
.*                                       TRACE TABLE ENTRY CREATION     08566600
.*                                       ROUTINES (IEAVETRC) FOR        08574900
.*                                       TYPE RCVY                      08583200
.*                                                                      08591500
&TABVT(24)    SETC  'TRVTETTM'           ENTRY POINT IN SYSTEM     @L4A 08592900
.*                                       TRACE TABLE ENTRY CREATION     08594300
.*                                       ROUTINES (IEAVETRC) FOR        08595700
.*                                       TYPE TIME                      08597100
.*                                                                      08598500
&TABVT(25)    SETC  'TRVTETSA'           IEAVETRC ENTRY POINT FOR       08598800
.*                                       SIGNAL ADAPTER TYPE       @01A 08599100
.*                                                                      08599400
&TABSA(1)     SETC  'PSA'                                               08600000
&TABSA(2)     SETC  'PSA'                                               08650000
&TABSA(3)     SETC  'PSA'                                               08700000
&TABSA(4)     SETC  'PSA'                                               08750000
&TABSA(5)     SETC  'PSA'                                               08800000
&TABSA(6)     SETC  'PSA'                                               08850000
&TABSA(7)     SETC  'PSA'                                               08900000
&TABSA(8)     SETC  'PSA'                                               08950000
&TABSA(9)     SETC  'NONE'                                              09000000
&TABSA(10)    SETC  'STANDARD'                                          09050000
&TABSA(11)    SETC  'PSA'                                               09100000
&TABSA(12)    SETC  'PSA'                                               09150000
&TABSA(13)    SETC  'PSA'                                               09200000
&TABSA(14)    SETC  'PSA'                                               09250000
&TABSA(15)    SETC  'PSA'                                               09300000
&TABSA(16)    SETC  'STANDARD'                                          09350000
&TABSA(17)    SETC  'NONE'                                              09400000
&TABSA(18)    SETC  'PSA'                                               09450000
&TABSA(19)    SETC  'PSA'                                               09500000
&TABSA(20)    SETC  'PSA'                                               09550000
&TABSA(21)    SETC  'STANDARD'                                     @L1A 09600000
&TABSA(22)    SETC  'STANDARD OR PSA'    FOR TRACE ENTRY TYPE      @L2A 09612500
.*                                       SSRV, SAVEAREA MUST BE         09625000
.*                                       STANDARD OR PSA                09637500
.*                                                                      09650000
&TABSA(23)    SETC  'STANDARD OR PSA'    FOR TRACE ENTRY TYPE      @L3A 09670000
.*                                       RCVY, SAVEAREA MUST BE         09690000
.*                                       STANDARD OR PSA                09710000
.*                                                                      09730000
&TABSA(24)    SETC  'STANDARD'           FOR TRACE ENTRY TYPE      @L4A 09734000
.*                                       TIME, SAVEAREA MUST BE         09738000
.*                                       STANDARD                       09742000
.*                                                                      09746000
&TABSA(25)    SETC  'STANDARD OR PSA'    FOR SIGNAL ADAPTER ENTRY  YPE  09747000
.*                                       SAVEAREA MUST BE STANDARD OR   09748000
.*                                       PSA                       @01A 09749000
.********************************************************************** 09750000
.*       GENERATE LABEL IF NEEDED                                     * 09800000
.********************************************************************** 09850000
.*                                                                      09900000
.LABEL   ANOP                                                           09950000
         AIF   ('&LABEL' EQ '').POSPARM     BRANCH IF NO LABEL          10000000
&LABEL   DS    0H                                                       10050000
.*                                                                      10100000
.*                                                                      10150000
.********************************************************************** 10200000
.*       NO POSITIONAL PARAMETERS MAY BE SPECIFIED                    * 10250000
.********************************************************************** 10300000
.*                                                                      10350000
.POSPARM ANOP                                                           10400000
         AIF   (N'&SYSLIST NE 0).ERR1    ERROR IF ANY POSITION PARMS    10450000
.*                                                                      10500000
.*                                                                      10550000
.********************************************************************** 10600000
.*       &TYPE MUST BE SPECIFIED AS ONE OF THE TYPES GIVEN IN         * 10650000
.*       &TABTYPE OR AS 'USRN'                                        * 10700000
.********************************************************************** 10750000
.*                                                                      10800000
.TYPE    ANOP                                                           10850000
&OP1     SETC  'TYPE'                    PARAMETER BEING CHECKED        10900000
&OP2     SETC  '&TYPE'                   VALUE OF THAT PARAMETER        10950000
         AIF   ('&TYPE' EQ '').ERR2      ERROR IF NO TYPE GIVEN         11000000
.*                                                                      11050000
         AIF   ('&TYPE'(1,3) EQ 'USR').USRN  BRANCH IF USER ENTRY       11100000
.*                                                                      11150000
&I       SETA  1                         INITIALIZE TABLE INDEX         11200000
.*                                                                      11250000
.TYPCKLP ANOP                                                           11300000
         AIF   ('&TYPE' EQ '&TABTYPE(&I)').TYPESEL  BR IF TYPE FOUND    11350000
         AIF   (&I EQ &TABENT).ERR2      ERROR IF END OF TABLE          11400000
&I       SETA  &I+1                      INCREMENT TO NEXT ENTRY        11450000
         AGO   .TYPCKLP                  GO TRY NEXT TABLE ENTRY        11500000
.*                                                                      11550000
.TYPESEL ANOP                                                           11600000
.*                                                                      11603300
.********************************************************************** 11606600
.*       VALIDATE &SSRVID OPERAND                                     * 11609900
.********************************************************************** 11613200
.*                                                                      11616500
&OP1     SETC  'SSRVID OPERAND'          SET SSRVID ERROR MESSAGE  @L2A 11619800
&OP2     SETC  '''''&TYPE'''' TYPE REQUEST'  SET SSRVID ERROR      @L2A 11623100
.*                                       MESSAGE                        11663400
         AIF   ('&TYPE' NE 'SSRV' AND                                  X11703700
                '&SSRVID' NE '').ERR3    IF TYPE IS NOT SSRV AND   @L3A 11744000
.*                                       SSRVID IS SPECIFIED THEN       11784300
.*                                       PUT OUT SSRVID ERROR MESSAGE   11824600
&OP1     SETC  'SSRVID'                  SET SSRV SSRVID OPERAND   @L3A 11864900
.*                                       ERROR MESSAGE                  11905200
&OP2     SETC  '&SSRVID'                 SET SSRV SSRVID OPERAND   @L3A 11945500
.*                                       ERROR MESSAGE                  11985800
         AIF   ('&TYPE' EQ 'SSRV' AND                                  X12026100
                N'&SSRVID NE 1).ERR2     IF TYPE IS SSRV AND ZERO  @L3A 12056300
.*                                       OR MORE THAN ONE SSRVID IS     12086500
.*                                       SPECIFIED THEN                 12116700
.*                                       PUT OUT SSRVID ERROR MESSAGE   12147000
.*                                                                      12187300
.********************************************************************** 12227600
.*       VALIDATE &REGS OPERAND                                       * 12267900
.********************************************************************** 12308200
.*                                                                      12348500
&OP1     SETC  'REGS OPERAND'            INVALID OPERAND                12388800
&OP2     SETC  '''''&TYPE'''' TYPE REQUEST'  TYPE OF REQUEST            12429100
         AIF   ('&TYPE' NE 'SSRV' AND                                  X12469400
                '&TYPE' NE 'RCVY' AND                                  X12509700
                '&TYPE' NE 'TIME' AND                                  X12543200
                '&REGS' NE '(1)').ERR3   IF TYPE IS NOT SSRV AND   @L4C 12576700
.*                                       NOT RCVY AND NOT TIME AND      12610200
.*                                       REGS IS SPECIFIED, PUT OUT     12643700
.*                                       REGS ERROR MESSAGE             12677200
&OP1     SETC  '''''REGS=&REGS'''''      SET REGS ERROR MESSAGE    @L3A 12711200
&OP2     SETC  'TYPE=&TYPE, REGS MUST BE ''''(1)'''' OR CAN BE OMITTED' 12751500
.*                                       SET REGS ERROR MESSAGE    @L3A 12791800
         AIF   (('&TYPE' EQ 'SSRV' OR                                  X12832100
                 '&TYPE' EQ 'RCVY' OR                                  X12864300
                 '&TYPE' EQ 'TIME') AND                                X12896500
                '&REGS' NE '(1)').ERR3   IF TYPE IS SSRV, RCVY OR  @L4C 12928700
.*                                       TIME AND REGS IS NOT (1),      12960900
.*                                       PUT OUT REGS ERROR MESSAGE     12993300
.*                                                                      13033600
.********************************************************************** 13073900
.*       VALIDATE &SAVEAREA OPERAND                                   * 13114200
.********************************************************************** 13154500
.*                                                                      13194800
.SAVEAR  ANOP                                                           13235100
&OP1     SETC  '''''SAVEAREA=&SAVEAREA'''''  PARAMETER BEING CHECKED    13275400
&OP2     SETC  'TYPE=&TYPE, SAVEAREA MUST BE ''''&TABSA(&I)'''''        13315700
.*                                       SECOND PART OF ERROR MSG       13356000
         AIF   ('&TYPE' NE 'SSRV' AND                                  X13396300
                '&TYPE' NE 'RCVY' AND                                  X13436600
                '&TYPE' NE 'SIGA' AND                                  X13463400
                '&SAVEAREA' NE '&TABSA(&I)').ERR3  IF TYPE IS NOT  @01C 13490200
.*                                       SSRV AND IS NOT RCVY           13517200
.*                                       AND SAVEAREA IS NOT THE ONE    13557500
.*                                       SPECIFIED IN SAVEAREA TABLE,   13597800
.*                                       THEN PUT OUT SAVEAREA ERROR    13638100
.*                                       MESSAGE                        13678400
         AIF   (('&TYPE' EQ 'SSRV' OR                                  X13718700
                 '&TYPE' EQ 'RCVY' OR                                  X13745500
                 '&TYPE' EQ 'SIGA') AND                                X13772300
                 '&SAVEAREA' NE 'STANDARD' AND                         X13799300
                 '&SAVEAREA' NE 'PSA').ERR3      IF TYPE IS SSRV   @01C 13839600
.*                                       OR RCVY AND SAVEAREA IS        13879900
.*                                       STANDARD OR PSA THEN PUT       13920200
.*                                       OUT SAVEAREA ERROR MESSAGE     13960500
.*                                                                      14000800
.********************************************************************** 14041100
.*       GENERATE CODE FOR TYPE REQUEST                               * 14081400
.********************************************************************** 14121700
.*                                                                      14162000
.GEN     ANOP                                                           14202300
.*                                                                      14242600
.********************************************************************** 14282900
.*       GENERATE CODE FOR DSP TYPE REQUEST                           * 14323200
.********************************************************************** 14363500
.*                                                                      14403800
.GENDSPO ANOP                                                           14444100
         AIF   ('&TYPE' NE 'DSP').GENSRB   BR IF TYPE NOT DSP           14484400
*********************************************************************** 14524700
*                                                                     * 14565000
*        PTRACE TYPE=DSP                                              * 14605300
*                                                                     * 14645600
*        INPUT  REGISTERS:                                            * 14685900
*        REGS   0-1 ISSUER DATA TO BE TRACED                          * 14726200
*        REG      5 CURRENT TCB ADDRESS                               * 14766500
*        REG      8 CURRENT ASCB ADDRESS                              * 14806800
*        REG     13 PASID/SASID                                       * 14847100
*                                                                     * 14887400
*        OUTPUT REGISTERS:                                            * 14927700
*        REGS   0-4 UNPREDICTABLE                                     * 14968000
*        REGS   5-9 UNCHANGED                                         * 15008300
*        REGS 10-15 UNPREDICTABLE                                     * 15048600
*                                                                     * 15088900
*********************************************************************** 15129200
.*                                                                      15169500
         TM    PSATRACE-PSA(0),PSATROFF  .TEST FOR TRACE STATE          15209800
         BZ    &LABELA                   .BRANCH IF TRACE NOT SUSPENDED 15250100
.*                                                                      15290400
         STM   0,15,PSATRSAV-PSA(0)      .SAVE ISSUERS REGISTERS        15330700
         L     15,PSATRVT-PSA(0,0)       .GET TRVT ADDRESS              15371000
         L     15,TRVTETDP-TRVT(0,15)    .GET ROUTINE EP ADDRESS        15411300
         BASSM 14,15                     .CALL PTRACE ROUTINE           15451600
         LM    0,15,PSATRSAV-PSA(0)      .RESTORE ISSUERS REGISTERS     15491900
         B     &LABELB                   .BRANCH AROUND INLINE          15532200
.*                                                                      15572500
&LABELA  DS    0H                                                       15612800
         L     10,PSATOT-PSA(0,0)       .ADDRESS OF TRACE OPERAND TABLE-15626200
                                                                   @P1M 15639600
         LH    12,ASCBASID-ASCB(0,8)     .GET HOME ASID                 15653100
         LR    11,5                      .LOAD CURRENT TCB ADDRESS      15693400
         LM    14,15,PSAPSWSV-PSA(0)     .LOAD DISPATCHER PSW           15733700
         L     2,PSAMODEW-PSA(0,0)       .GET PSA SYSTEM MODE INDICATOR 15774000
         L     3,PSACLHS-PSA(0,0)      .LOAD CURRRENT LOCKS HELD STRING 15814300
         L     4,PSALOCAL-PSA(0,0)       .LOAD LOCAL LOCK ADDRESS       15854600
         TRACE 11,4,TOTDSP-TOT(10)       .TRACE TASK DISPATCH           15935200
&LABELB  DS    0H                                                       15975500
         AGO   .GENEXIT                  EXIT FROM MACRO                16015800
.*                                                                      16056100
.********************************************************************** 16096400
.*       GENERATE CODE FOR SRB TYPE REQUEST                           * 16136700
.********************************************************************** 16177000
.*                                                                      16217300
.GENSRB  ANOP                                                           16257600
         AIF   ('&TYPE' NE 'SRB').GENSSRB  BR IF TYPE NOT SRB      @D2C 16297900
*********************************************************************** 16338200
*                                                                     * 16378500
*        PTRACE TYPE=SRB                                              * 16418800
*                                                                     * 16459100
*        INPUT  REGISTERS:                                            * 16499400
*        REGS     0 SRB ADDRESS                                       * 16539700
*        REG      1 SRB PARAMETER AREA ADDRESS                        * 16580000
*                                                                     * 16620300
*        OUTPUT REGISTERS:                                            * 16660600
*        REGS   0-1,3,5-9 UNCHANGED                               @D2C* 16710600
*        REGS   2,4,10-15 UNPREDICABLE                            @D2C* 16760600
*                                                                     * 16902400
*********************************************************************** 16942700
.*                                                                      16983000
         TM    PSATRACE-PSA(0),PSATROFF  .TEST FOR TRACE STATE          17023300
         BZ    &LABELA                   .BRANCH IF TRACE NOT SUSPENDED 17063600
.*                                                                      17103900
         STM   0,15,PSATRSAV-PSA(0)      .SAVE ISSUERS REGISTERS        17144200
         L     15,PSATRVT-PSA(0,0)       .GET TRVT ADDRESS              17184500
         L     15,TRVTETIS-TRVT(0,15)    .GET ROUTINE EP ADDRESS        17224800
         BASSM 14,15                     .CALL PTRACE ROUTINE           17265100
         LM    0,15,PSATRSAV-PSA(0)      .RESTORE ISSUERS REGISTERS     17305400
         B     &LABELB                   .BRANCH AROUND INLINE          17345700
.*                                                                      17386000
&LABELA  DS    0H                                                       17426300
         LR    4,2                       .SAVE REG NEEDED BY IEAVEDS0  -17453100
                                                                   @D2A 17479900
         LR    10,0                      .SRB ADDRESSABILITY            17506900
         L     12,PSAAOLD-PSA(0,0)       .LOAD CURRENT ASCB ADDRESS     17587500
         L     11,SRBWEB-SRB(10)         .LOAD WEB ADDRESS         @D2A 17607600
         LH    12,ASCBASID-ASCB(,12)     .LOAD ASID OF CURRENT ASCB     17627800
         ICM   12,B'1100',SRBFLGS-SRB(10) .LOAD SRB FLAGS, LOCK BITS    17668100
         L     15,SRBFLC-SRB(10)         .LOAD SRB AFFINITY AND PURGE   17748700
*                                        .ASID                          17789000
         L     2,SRBPTCB-SRB(10)         .LOAD PURGE TCB           @D2C 17809100
         L     10,PSATOT-PSA(0,0)       .ADDRESS OF TRACE OPERAND TABLE 17829300
         LM    13,14,PSASMPSW-PSA(0)     .LOAD DISPATCHER PSW      @P1M 17849400
         TRACE 11,2,TOTSRB-TOT(10)       .TRACE SRB DISPATCH            17874600
         LR    2,4                       .RESTORE REGISTER NEEDED BY   -17899800
                                         .IEAVEDS0                 @D2A 17925000
&LABELB  DS    0H                                                       17950200
         AGO   .GENEXIT                  EXIT FROM MACRO                17990500
.*                                                                      17991100
.*                                                                      17991700
.********************************************************************** 17992300
.*       GENERATE CODE FOR SSRB TYPE REQUEST                      @D2A* 17992900
.********************************************************************** 17993500
.*                                                                      17994100
.GENSSRB ANOP                                                           17994700
         AIF   ('&TYPE' NE 'SSRB').GENSVC  BR IF TYPE NOT SSRB     @D2A 17995300
*********************************************************************** 17995900
*                                                                     * 17996500
*        PTRACE TYPE=SSRB                                             * 17997100
*                                                                     * 17997700
*        INPUT  REGISTERS:                                            * 17998300
*        REGS     1 SSRB ADDRESS                                      * 17998900
*        REG     13 PASID/SASID                                       * 17999500
*                                                                     * 18000100
*        OUTPUT REGISTERS: NEED TO BE UPDATED                         * 18000700
*        REG   0    UNPREDICTABLE                                     * 18001300
*        REG   1    UNCHANGED                                         * 18001900
*        REGS  2    UNPREDICTABLE                                     * 18002500
*        REGS  3    UNCHANGED                                         * 18003100
*        REGS  4    UNPREDICTABLE                                     * 18003700
*        REGS  5-9  UNCHANGED                                         * 18004300
*        REGS 10-12 UNPREDICTABLE                                     * 18004900
*        REG  13    UNCHANGED                                         * 18005500
*        REGS 14-15 UNPREDICTABLE                                     * 18006100
*                                                                 @D2A* 18006700
*********************************************************************** 18007300
.*                                                                      18007900
         TM    PSATRACE-PSA(0),PSATROFF  .TEST FOR TRACE STATE     @D2A 18008500
         BZ    &LABELA                   .BRANCH IF TRACE NOT SUSPENDED 18009100
*                                                                  @D2A 18009700
         STM   0,15,PSATRSAV-PSA(0)      .SAVE ISSUERS REGISTERS   @D2A 18010300
         L     15,PSATRVT-PSA(0,0)       .GET TRVT ADDRESS         @D2A 18010900
         L     15,TRVTETSB-TRVT(0,15)    .GET ROUTINE EP ADDRESS   @D2A 18011500
         BASSM 14,15                     .CALL PTRACE ROUTINE      @D2A 18012100
         LM    0,15,PSATRSAV-PSA(0)      .RESTORE ISSUERS REGISTERS     18012700
*                                                                  @D2A 18013300
         B     &LABELB                   .BRANCH AROUND INLINE     @D2A 18013900
*                                                                       18014500
&LABELA  DS    0H                                                  @D2A 18015100
         LR    4,3                       .SAVE REG NEEDED BY PTRACE     18015700
*                                         ISSUER                   @D2A 18016300
         L     10,PSALCCAV-PSA(0)        .GET LCCA ADDRESS         @D2A 18016900
         L     0,LCCAPGTA+2-LCCA(10)     .LOAD PURGE TCB ADDRESS   @D2A 18017500
         L     11,LCCACWEB-LCCA(10)      .LOAD WORK UNIT ADDRESS   @D2A 18018100
         L     2,LCCASAFN-LCCA(10)       .LOAD AFFINITY AND PURGE ASID  18018700
*                                                                  @D2A 18019300
         L     12,PSAAOLD-PSA(0)         .GET CURRENT ASCB ADDRESS @D2A 18019900
         LH    12,ASCBASID-ASCB(,12)     .LOAD ASID OF CURRENT ASCB     18020500
*                                                                  @D2A 18021100
         ICM   12,B'0100',PSACLHS4-PSA(0) .LOAD LOCKS HELD              18021700
*                                         INFORMATION              @D2A 18022300
         LM    14,15,PSAPSWSV-PSA(0)     .LOAD DISPATCHER PSW      @D2A 18022900
         L     3,PSALOCAL-PSA(0)         .LOAD LOCAL LOCK WORD OF CPU   18023500
*                                         LOCKS TABLE              @D2A 18024100
         L     10,PSATOT-PSA(0,0)        .ADDRESS OF TRACE OPERAND      18024700
*                                         TABLE                    @D2A 18025300
         TRACE 11,3,TOTSSRB-TOT(10)      .TRACE SSRB DISPATCH      @D2A 18025900
         LR    3,4                       .RESTORE REG NEEDED BY PTRACE  18026500
*                                         ISSUER                   @D2A 18027100
&LABELB  DS    0H                                                  @D2A 18027700
         AGO   .GENEXIT                  EXIT FROM MACRO           @D2A 18028300
.*                                                                      18030800
.********************************************************************** 18071100
.*       GENERATE CODE FOR SVC TYPE REQUEST                           * 18111400
.********************************************************************** 18151700
.*                                                                      18192000
.GENSVC  ANOP                                                           18232300
         AIF   ('&TYPE' NE 'SVC').GENSVCR  BR IF TYPE NOT SVC           18272600
.*                                                                      18312900
*********************************************************************** 18353200
*                                                                     * 18393500
*        PTRACE TYPE=SVC                                              * 18433800
*                                                                     * 18474100
*        INPUT  REGISTERS:                                            * 18514400
*        REGS   0-1 ISSUER DATA TO BE TRACED                          * 18554700
*        REG      4 CURRENT TCB ADDRESS                               * 18595000
*        REG      7 CURRENT ASCB ADDRESS                              * 18635300
*        REG     15 ISSUER DATA TO BE TRACED                          * 18675600
*                                                                     * 18715900
*        OUTPUT REGISTERS:                                            * 18756200
*        REGS  0-15 UNCHANGED                                         * 18796500
*                                                                     * 18836800
*********************************************************************** 18877100
.*                                                                      18917400
         STM   10,14,PSATRSAV-PSA(0)     .SAVE ISSUERS REGISTERS        18957700
         L     10,PSATOT-PSA(0,0)       .ADDRESS OF TRACE OPERAND TABLE-18971100
                                                                   @P1M 18984500
         LR    11,4                      .LOAD CURRENT TCB ADDRESS      18998000
         LH    12,ASCBASID-ASCB(0,7)     .GET HOME ASID                 19038300
         ICM   12,B'1100',FLCSVCN-FLC(0) .GET SVC NUMBER                19078600
         SYSSTATE TEST                                             @P2A 19082200
         AIF   (&SYSALVL LT 2).NOTESAME1A                          @P2A 19085800
         L     13,FLCESOPSW-FLC(0)     .LOAD SVC OLD PSW           @P2A 19089400
         L     14,FLCESOPSW-FLC+12(0)  .LOAD SVC OLD PSW           @P2A 19093000
         TM    FLCESOPSW+4,X'80'       .CHECK FOR AMODE 31         @P2A 19096600
         JZ    NOT31&SYSNDX            .NO, BRANCH                 @P2A 19100200
         OILH  14,X'8000'              .INDICATE AMODE 31          @P2A 19103800
NOT31&SYSNDX DS 0H                     .                           @P2A 19107400
         AGO   .NOTESAME1B                                         @P2A 19111000
.NOTESAME1A ANOP                                                   @P2A 19114600
         LM    13,14,FLCSOPSW-FLC(0)     .LOAD SVC OLD PSW              19118900
.NOTESAME1B ANOP                                                   @P2A 19159200
         TRACE 11,1,TOTSVC-TOT(10)       .TRACE SVC INTERRUPT           19199500
         LM    10,14,PSATRSAV-PSA(0)     .RESTORE ISSUERS REGISTERS     19239800
         AGO   .GENEXIT                  EXIT FROM MACRO                19280100
.*                                                                      19320400
.********************************************************************** 19360700
.*       GENERATE CODE FOR SVCR TYPE REQUEST                          * 19401000
.********************************************************************** 19441300
.*                                                                      19481600
.GENSVCR ANOP                                                           19521900
         AIF   ('&TYPE' NE 'SVCR').GENCOMM  BR IF TYPE NOT SVCR         19562200
.*                                                                      19602500
*********************************************************************** 19642800
*                                                                     * 19683100
*        PTRACE TYPE=SVCR                                             * 19723400
*                                                                     * 19763700
*        INPUT  REGISTERS:                                            * 19804000
*        REGS   0-1 ISSUER DATA TO BE TRACED                          * 19844300
*        REG      4 CURRENT TCB ADDRESS                               * 19884600
*        REG      5 CURRENT RB ADDRESS                                * 19924900
*        REG      7 CURRENT ASCB ADDRESS                              * 19965200
*        REG     15 ISSUER DATA TO BE TRACED                          * 20005500
*                                                                     * 20045800
*        OUTPUT REGISTERS:                                            * 20086100
*        REGS   0-3 UNPREDICTABLE                                     * 20126400
*        REGS   4-9 UNCHANGED                                         * 20166700
*        REGS 10-15 UNPREDICTABLE                                     * 20207000
*                                                                     * 20247300
*********************************************************************** 20287600
.*                                                                      20327900
         LR    13,5                      .LOAD CURRENT RB ADDRESS       20408500
         AHI   13,-RBPRFLNA              .GET RB PREFIX ADDRESS    @P3C 20458500
         LR    11,4                      .LOAD CURRENT TCB ADDRESS @P1M 20579400
         L     10,PSATOT-PSA(0,0)       .ADDRESS OF TRACE OPERAND TABLE-20626800
                                                                   @P1M 20674300
         LH    12,ASCBASID-ASCB(0,7)     .GET HOME ASID            @P1M 20678300
         ICM   12,B'1100',RBINTCOD-RBPRFXST(13) .GET INTERRUPT CODE     20682300
         LM    13,14,RBOPSW-RBSECT(5)    .LOAD RB OLD PSW               20686300
         TRACE 11,1,TOTSVCR-TOT(10)      .TRACE SVC RETURN              20690600
         AGO   .GENEXIT                  EXIT FROM MACRO                20730900
.*                                                                      20771200
.********************************************************************** 20811500
.*       GENERATE COMMENT                                             * 20851800
.********************************************************************** 20892100
.*                                                                      20932400
.GENCOMM ANOP                                                           20972700
.*                                                                      21013000
*********************************************************************** 21053300
*                                                                     * 21093600
*  REGISTER CONTENT REQUIREMENTS FOR THE PTRACE MACRO CAN BE FOUND    * 21133900
*  IN MODULE IEAVETRC, IN THE SYSTEM LOGIC LIBRARY                    * 21174200
*                                                                     * 21214500
*********************************************************************** 21254800
.*                                                                      21295100
.********************************************************************** 21335400
.*       GENERATE CODE FOR &SAVEAREA OPTION (SAVE)                    * 21375700
.********************************************************************** 21416000
.*                                                                      21456300
.GENSAVE ANOP                                                           21496600
         AIF   ('&SAVEAREA' NE 'NONE').GENSSP   BRANCH IF NO SAVE       21536900
.*                                                                      21577200
         LR    2,15                      .SAVE REG 15 FOR ROUTINE       21617500
         AGO   .GENLINK                  GO GENERATE LINK CODE          21657800
.*                                                                      21698100
.GENSSP  ANOP                                                           21738400
         AIF   ('&SAVEAREA' EQ 'PSA').GENSPSA   BRANCH IF PSA           21778700
.*                                                                      21819000
         STM   14,12,12(13)              .SAVE ISSUERS REGISTERS        21859300
         AGO   .GENLINK                  GO GENERATE LINK CODE          21899600
.*                                                                      21939900
.GENSPSA ANOP                                                           21980200
         STM   0,15,PSATRSAV-PSA(0)      .SAVE ISSUERS REGISTERS        22020500
.*                                                                      22060800
.*                                                                      22101100
.********************************************************************** 22141400
.*       GENERATE CODE FOR LINK TO SERVICE ROUTINE                    * 22181700
.********************************************************************** 22222000
.*                                                                      22262300
.GENLINK ANOP                                                           22302600
.*                                                                      22342900
         AIF   ('&TYPE' NE 'SSRV').NOTSSRV   BR IF TYPE IS NOT     @L2A 22383200
.*                                       SSRV                           22423500
         B     &LABELD                   .BRANCH AROUND SSRVID     @L2A 22463800
*                                        .CONSTANT DECLARE              22504100
         DS    0F                        .FORCE FULL WORD          @L2A 22544400
*                                        .ALIGNMENT                     22584700
&LABELC  DC    AL2(&SSRVID)              .DECLARE SSRVID CONSTANT  @L2A 22625000
&LABELD  L     3,&LABELC                 .LOAD SSRVID INTO HIGH    @L2A 22665300
*                                        .ORDER HALF WORD OF REGISTER.  22705600
.*                                        LOW ORDER HALF WORD GETS      22745900
.*                                        OVERLAID BY SERVICE ROUTINE.  22786200
.NOTSSRV ANOP                                                      @L2A 22826500
         AIF   ('&TYPE' EQ 'PGM').GENLNKA   BR IF TYPE PGM              22866800
.*                                                                      22907100
         L     15,PSATRVT-PSA(0,0)       .GET TRVT ADDRESS              22947400
.*                                                                      22987700
.GENLNKA ANOP                                                           23028000
.*                                                                      23068300
         L     15,&TABVT(&I).-TRVT(0,15) .GET ROUTINE EP ADDRESS        23108600
         BASSM 14,15                     .CALL PTRACE ROUTINE           23148900
.*                                                                      23189200
.*                                                                      23229500
.********************************************************************** 23269800
.*       GENERATE CODE FOR &SAVEAREA OPTION (RESTORE)                 * 23310100
.********************************************************************** 23350400
.*                                                                      23390700
.GENREST ANOP                                                           23431000
         AIF   ('&SAVEAREA' EQ 'NONE').GENEXIT  BRANCH IF NO SAVE       23471300
         AIF   ('&SAVEAREA' EQ 'PSA').GENRPSA   BRANCH IF PSA           23511600
.*                                                                      23551900
         LM    14,12,12(13)              .RESTORE ISSUERS REGISTERS     23592200
         AGO   .GENEXIT                  EXIT FROM MACRO                23632500
.*                                                                      23672800
.GENRPSA ANOP                                                           23713100
         LM    0,15,PSATRSAV-PSA(0)      .RESTORE ISSUERS REGISTERS     23753400
.*                                                                      23793700
.GENEXIT ANOP                                                           23834000
         MEXIT                                                          23874300
.*                                                                      23914600
.*                                                                      23954900
.*                                                                      23995200
.********************************************************************** 24035500
.*       PROCESS USER TYPE REQUEST                                    * 24075800
.********************************************************************** 24116100
.*                                                                      24156400
.USRN    ANOP                                                           24196700
&OP1     SETC  'TYPE'                    PARAMETER BEING CHECKED        24237000
&OP2     SETC  '&TYPE'                   VALUE OF THAT PARAMETER        24277300
         AIF   (K'&TYPE NE 4).ERR2       ERROR IF NOT USER TYPE         24317600
.*                                                                      24357900
&N       SETC  '&TYPE'(4,1)              GET USER ENTRY NUMBER          24398200
         AIF   ('&N' GE '0' AND                                        X24438500
               '&N' LE '9').USSRVID      BRANCH IF ENTRY DIGIT 0-9 @L2C 24478800
         AIF   ('&N' LT 'A' OR                                         X24519100
               '&N' GT 'F').ERR2         ERROR IF NOT HEX DIGIT A-F     24559400
.*                                                                      24599700
.********************************************************************** 24640000
.*       &SSRVID OPERAND MUST NOT BE SPECIFIED                        * 24680300
.********************************************************************** 24720600
.*                                                                      24760900
.USSRVID ANOP                                                      @L2A 24801200
.*                                                                      24841500
&OP1     SETC  'SSRVID OPERAND'          SET SSRVID ERROR MESSAGE  @L2A 24881800
&OP2     SETC  '''''&TYPE'''' TYPE REQUEST'  SET SSRVID ERROR      @L2A 24922100
.*                                       MESSAGE                   @L2A 24962400
         AIF   ('&SSRVID' NE '').ERR3    ERROR IF SSRVID SPECIFIED @L2A 25002700
.*                                                                      25043000
.********************************************************************** 25083300
.*       &REGS MUST BE SPECIFIED AS '(1)' OR A PAIR OF REGISTERS      * 25150000
.********************************************************************** 25200000
.*                                                                      25250000
&OP1     SETC  'REGS'                    PARAMETER BEING CHECKED        25350000
&OP2     SETC  '&REGS'                   VALUE OF THAT PARAMETER        25400000
.*                                                                      25450000
         AIF   ('&REGS' EQ '').ERR2      ERROR IF NULL &REGS            25500000
         AIF   ('&REGS' EQ '(1)').USAVEA   BRANCH IF REG 1 IS GIVEN     25550000
         AIF   (N'&REGS NE 2).ERR4       ERROR IF MORE THAN 2 REGS      25600000
.*                                                                      25650000
         AIF   ('&REGS(1)'(1,1) EQ '(').ERR4  ERROR IF NOT FIRST REG    25700000
         AIF   ('&REGS(2)'(1,1) EQ '(').ERR4  ERROR IF NOT SECOND REG   25750000
.*                                                                      25800000
&RX      SETC  '&REGS(1)'                GET FIRST REG                  25850000
&RY      SETC  '&REGS(2)'                GET SECOND REG                 25900000
.*                                                                      25950000
.*                                                                      26000000
.********************************************************************** 26050000
.*       &SAVEAREA MUST BE SPECIFIED AS 'STANDARD'                    * 26100000
.********************************************************************** 26150000
.*                                                                      26200000
.USAVEA  ANOP                                                           26250000
&OP1     SETC  '''''SAVEAREA=&SAVEAREA'''''      INVALID OPERAND        26300000
&OP2     SETC  'TYPE=&TYPE, SAVEAREA MUST BE ''''STANDARD'''''          26350000
         AIF   ('&SAVEAREA' NE 'STANDARD').ERR3  ERROR IF NOT STANDARD  26400000
.*                                                                      26450000
.*                                                                      26500000
.*                                                                      26550000
.*                                                                      26600000
.********************************************************************** 26650000
.*       GENERATE CODE FOR USER TYPE ENTRY                            * 26700000
.********************************************************************** 26750000
.*                                                                      26800000
.USRNGEN ANOP                                                           26850000
.*                                                                      26900000
.*                                                                      26950000
.********************************************************************** 27000000
.*       GENERATE CODE FOR USER ENTRY NUMBER                          * 27050000
.********************************************************************** 27100000
.*                                                                      27150000
         LA    0,X'&N'                   .INDICATE USER ENTRY NUMBER    27200000
.********************************************************************** 27250000
.*       GENERATE CODE FOR &REGS                                      * 27300000
.********************************************************************** 27350000
.*                                                                      27400000
.REGSGEN ANOP                                                           27450000
         AIF   ('&REGS' NE '(1)').REGSXY  BRANCH IF REG PAIR GIVEN      27500000
.*                                                                      27550000
.REGS1   ANOP                                                           27600000
         LA    1,0(0,1)                  .INDICATE PARM ADDR GIVEN      27650000
         L     15,PSATRVT-PSA(0,0)       .GET TRVT ADDRESS              27700000
         AGO   .USRNLNK                  CONTINUE GEN WITH LINKAGE      27750000
.*                                                                      27800000
.REGSXY  ANOP                                                           27850000
         LA    1,(&RX.*X'10')+&RY.       .LOAD REG PAIR NUMBERS         27900000
         L     15,PSATRVT-PSA(0,0)       .GET TRVT ADDRESS              27950000
         O     1,TRVTRPMK-TRVT(0,15)     .INDICATE REG PAIR GIVEN       28000000
.*                                                                      28050000
.*                                                                      28100000
.********************************************************************** 28150000
.*       GENERATE CODE TO LINK TO SERVICE ROUTINE                     * 28200000
.********************************************************************** 28250000
.*                                                                      28300000
.USRNLNK ANOP                                                           28350000
         L     15,TRVTETUR-TRVT(0,15)    .GET ROUTINE EP ADDRESS        28400000
         BASSM 14,15                     .CALL PTRACE ROUTINE           28450000
         MEXIT                                                          28500000
.*                                                                      28550000
.*                                                                      28600000
.*                                                                      28650000
.********************************************************************** 28700000
.*       PROCESS ERROR CONDITIONS                                     * 28750000
.********************************************************************** 28800000
.*                                                                      28850000
.*  IHB027 EXCESSIVE POSITIONAL PARAMETERS SPECIFIED.                   28900000
.ERR1    ANOP                                                           28950000
         IHBERMAC 238                                                   29000000
         MEXIT                                                          29050000
.*                                                                      29100000
.*  IHB002 INVALID XXX OPERAND SPECIFIED - YYY.                         29150000
.ERR2    ANOP                                                           29200000
         IHBERMAC 1001,&OP1,&OP2                                        29250000
         MEXIT                                                          29300000
.*                                                                      29350000
.*  IHB280 XXX INVALID WITH YYY.                                        29400000
.ERR3    ANOP                                                           29450000
         IHBERMAC 1020,&OP1,&OP2                                        29500000
         MEXIT                                                          29550000
.*                                                                      29600000
.*  IHB121 REGISTER SPECIFICATION INVALID. GENERATION TERMINATED.       29650000
.ERR4    ANOP                                                           29700000
         IHBERMAC 203                                                   29750000
.*                                                                      29760000
.*  IHB001 XXX REQUIRED, NOT SPECIFIED.                                 29770000
.ERR5    ANOP                                                      @L2A 29780000
         IHBERMAC 1006,&OP1                                        @L2A 29790000
         MEND                                                           29800000
*                                                                    */ 29850000
*                                                                       30100000
*%PTRACE:                                                               30133300
*   MACRO KEYS(TYPE,SSRVID,REGS,SAVEAREA,INLINE); /*             @D1C*/ 30166600
*                                                                       30200000
*   /*****************************************************************/ 30216600
*   /*                                                               */ 30233200
*   /* VARIABLE DECLARES                                             */ 30250000
*   /*                                                               */ 30300000
*   /*****************************************************************/ 30350000
*                                                                       30850000
*   DECLARE                                                             30853100
*     EHAREGS  CHAR EXT,            /* REGS DCLD BY EPILOG           */ 30856200
*     EHAMAPS  CHAR EXT,            /* REG SAVE AREA FROM EPILOG     */ 30859300
*     SYSALVL  FIXED EXT,           /*                           @P2A*/ 30862400
*     RC       FIXED,               /* MACRO GEN SEVERITY CODES      */ 30865500
*     CMT      CHAR,                /* DO-END COMMENT                */ 30868600
*    (I,                                                                30871700
*     TABENT  ) FIXED,              /* TABLE INDEX & MAX ENTRIES     */ 30874800
*     TABTYPE(25) CHAR,             /* ENTRY TYPE TABLE          @01C*/ 30877900
*     TABVT(25) CHAR,               /* ENTRY POINT TRVT NAMES    @01C*/ 30881000
*     TABSA(25) CHAR,               /* ENTRY TYPE SAVEAREA       @01C*/ 30884100
*     N        CHAR,                /* USER TYPE ENTRY NUMBER        */ 30887200
*    (RX,                                                               30890300
*     RY      ) CHAR,               /* REG PAIR NUMBERS              */ 30893400
*     INSAVE   CHAR;                /* SAVE AREA FOR INLINE      @D1A*/ 30896500
*                                                                       30900000
*   /*****************************************************************/ 30916600
*   /*                                                               */ 30933200
*   /* INITIALIZE VARIABLES                                          */ 30950000
*   /*                                                               */ 30966600
*   /*****************************************************************/ 30983200
*                                                                       31000000
*   RC = 0;                         /* NO MACRO ERROR                */ 31037500
*   TABENT = 25;                    /* MAX ENTRIES IN TABLE      @01C*/ 31075000
*   TABTYPE(1) = 'SSCH';            /* INITIALIZE TABLE              */ 31112500
*   TABTYPE(2) = 'MSCH';                                                31150000
*   TABTYPE(3) = 'HSCH';                                                31187500
*   TABTYPE(4) = 'CSCH';                                                31225000
*   TABTYPE(5) = 'RSCH';                                                31262500
*   TABTYPE(6) = 'EXT';                                                 31300000
*   TABTYPE(7) = 'SVC';                                                 31337500
*   TABTYPE(8) = 'SVCR';                                                31375000
*   TABTYPE(9) = 'SVCE';                                                31412500
*   TABTYPE(10) = 'PGM';                                                31450000
*   TABTYPE(11) = 'IO';                                                 31487500
*   TABTYPE(12) = 'DSP';                                                31525000
*   TABTYPE(13) = 'SRB';                                                31562500
*   TABTYPE(14) = 'SSRB';                                               31600000
*   TABTYPE(15) = 'WAIT';                                               31637500
*   TABTYPE(16) = 'MCH';                                                31675000
*   TABTYPE(17) = 'RST';                                                31712500
*   TABTYPE(18) = 'ACR';                                                31750000
*   TABTYPE(19) = 'SUSP';                                               31787500
*   TABTYPE(20) = 'ALTR';                                               31825000
*   TABTYPE(21) = 'SPER';           /*                           @L1A*/ 31862500
*   TABTYPE(22) = 'SSRV';           /* TRACE ENTRY TYPE SSRV     @L2A*/ 31900000
*   TABTYPE(23) = 'RCVY';           /* TRACE ENTRY TYPE RCVY     @L3A*/ 31937500
*   TABTYPE(24) = 'TIME';           /* TRACE ENTRY TYPE TIME     @L4A*/ 31975000
*   TABTYPE(25) = 'SIGA';           /* TRACE ENTRY TYPE SIGA     @01A*/ 32012500
*   TABVT(1) = 'TRVTETSS';                                              32050000
*   TABVT(2) = 'TRVTETMS';                                              32087500
*   TABVT(3) = 'TRVTETHS';                                              32125000
*   TABVT(4) = 'TRVTETCS';                                              32162500
*   TABVT(5) = 'TRVTETRS';                                              32200000
*   TABVT(6) = 'TRVTETEX';                                              32237500
*   TABVT(7) = 'TRVTETSV';                                              32275000
*   TABVT(8) = 'TRVTETSR';                                              32312500
*   TABVT(9) = 'TRVTETSE';                                              32350000
*   TABVT(10) = 'TRVTETPI';                                             32387500
*   TABVT(11) = 'TRVTETIO';                                             32425000
*   TABVT(12) = 'TRVTETDP';                                             32462500
*   TABVT(13) = 'TRVTETIS';                                             32500000
*   TABVT(14) = 'TRVTETSB';                                             32537500
*   TABVT(15) = 'TRVTETWT';                                             32575000
*   TABVT(16) = 'TRVTETMH';                                             32612500
*   TABVT(17) = 'TRVTETRE';                                             32650000
*   TABVT(18) = 'TRVTETAR';                                             32687500
*   TABVT(19) = 'TRVTETSU';                                             32725000
*   TABVT(20) = 'TRVTETTA';                                             32762500
*   TABVT(21) = 'TRVTETSL';         /*                           @L1A*/ 32800000
*   TABVT(22) = 'TRVTETSY';         /* ENTRY POINT IN SYSTEM TRACE      32837500
*                                      TABLE ENTRY CREATION ROUTINES    32875000
*                                      (IEAVETRC) FOR ENTRY TYPE SSRV   32912500
*                                                                @L2A*/ 32950000
*   TABVT(23) = 'TRVTETRV';         /* ENTRY POINT IN SYSTEM TRACE      32987500
*                                      TABLE ENTRY CREATION ROUTINES    33025000
*                                      (IEAVETRC) FOR ENTRY TYPE RCVY   33062500
*                                                                @L3A*/ 33100000
*   TABVT(24) = 'TRVTETTM';         /* ENTRY POINT IN SYSTEM TRACE      33137500
*                                      TABLE ENTRY CREATION ROUTINES    33175000
*                                      (IEAVETRC) FOR ENTRY TYPE TIME   33212500
*                                                                @L4A*/ 33250000
*   TABVT(25) = 'TRVTETSA';         /* ENTRY POINT IN IEAVETRC FOR      33287500
*                                      ENTRY TYPE SIGA           @01A*/ 33325000
*   TABSA(1) = '(PSA)';                                                 33362500
*   TABSA(2) = '(PSA)';                                                 33400000
*   TABSA(3) = '(PSA)';                                                 33437500
*   TABSA(4) = '(PSA)';                                                 33475000
*   TABSA(5) = '(PSA)';                                                 33512500
*   TABSA(6) = '(PSA)';                                                 33550000
*   TABSA(7) = '(PSA)';                                                 33587500
*   TABSA(8) = '(PSA)';                                                 33625000
*   TABSA(9) = '(NONE)';                                                33662500
*   TABSA(10) = '(STANDARD)';                                           33700000
*   TABSA(11) = '(PSA)';                                                33737500
*   TABSA(12) = '(PSA)';                                                33775000
*   TABSA(13) = '(PSA)';                                                33812500
*   TABSA(14) = '(PSA)';                                                33850000
*   TABSA(15) = '(PSA)';                                                33887500
*   TABSA(16) = '(STANDARD)';                                           33925000
*   TABSA(17) = '(NONE)';                                               33962500
*   TABSA(18) = '(PSA)';                                                34000000
*   TABSA(19) = '(PSA)';                                                34037500
*   TABSA(20) = '(PSA)';                                                34075000
*   TABSA(21) = '(STANDARD)';       /*                           @L1A*/ 34112500
*   TABSA(22) = '(STANDARD) OR (PSA)'; /* FOR ENTRY TYPE SSRV,          34150000
*                                      SAVEAREA MUST BE STANDARD OR     34187500
*                                      PSA                       @L2A*/ 34225000
*   TABSA(23) = '(STANDARD) OR (PSA)'; /* FOR ENTRY TYPE RCVY,          34262500
*                                      SAVEAREA MUST BE STANDARD OR     34300000
*                                      PSA                       @L3A*/ 34337500
*   TABSA(24) = '(STANDARD)';       /* FOR ENTRY TYPE TIME, SAVEAREA    34375000
*                                      MUST BE STANDARD          @L4A*/ 34412500
*   TABSA(25) = '(STANDARD) OR (PSA)'; /* FOR SIGA ENTRY TYPE,          34450000
*                                      SAVEAREA MUST BE STANDARD OR     34487500
*                                      PSA                       @01A*/ 34525000
*   ANS('?SYSSTATE (TEST);') RESCAN; /*                          @P2A*/ 34562500
*   IF MACLABEL ^= '' THEN          /* LABEL ON MACRO CALL?          */ 34600000
*     ANS(MACLABEL) COL(MACLMAR);   /* YES: GEN LABEL                */ 34637500
*   CMT = '? ' || MACLABEL || ' ' || MACNAME || ' ' || MACLIST || ' '   34675000
*       || MACKEYS || ' MACDATE(94.125)'; /*                     @D2C*/ 34712500
*   ANS('DO; '||COMMENT(CMT)) COL(MACCOL);                              34750000
*                                                                       34800000
*   /*****************************************************************/ 34816600
*   /*                                                               */ 34833200
*   /* NO MACLIST PARAMETERS                                         */ 34850000
*   /*                                                               */ 34866600
*   /*****************************************************************/ 34883200
*                                                                       34900000
*   IF NUMBER(MACLIST) ^= 0 THEN    /* TOO MANY MACLIST ENTRIES?     */ 34950000
*     DO;                           /* YES: ERROR                    */ 35000000
*       ANS MSG('AHA0073 TOO MANY POSITIONAL PARAMETERS '||             35050000
*           'ARE SPECIFIED; NONE ARE REQUIRED.');                       35100000
*       RC = 12;                    /* MACRO ERROR                   */ 35150000
*       GOTO LHA03000;                                                  35200000
*     END;                          /* NO: CONTINUE                  */ 35250000
*                                                                       35300000
*   /*****************************************************************/ 35328500
*   /*                                                               */ 35357000
*   /* TYPE PARAMETER MUST BE SPECIFIED AS AN ENTRY IN TABTYPE OR AS */ 35385500
*   /* 'USRN' WHERE N IS 0-F                                         */ 35414000
*   /*                                                               */ 35442500
*   /*****************************************************************/ 35471000
*                                                                       35500000
*   IF LENGTH(TYPE(1)) > 2 THEN     /* TYPE LONG ENOUGH?             */ 35550000
*     IF TYPE(1,1:3) = 'USR' THEN   /* YES: USER TYPE ENTRY?         */ 35600000
*       GOTO LHA02000;              /* YES: GO PROCESS IT            */ 35650000
*   DO I = 1 TO TABENT;             /* SEARCH TABTYPE FOR TYPE       */ 35700000
*     IF TYPE(1) = TABTYPE(I) THEN  /* TYPE FOUND?                   */ 35750000
*       GOTO LHA00500;              /* YES: CONTINUE PROCESSING      */ 35800000
*   END;                            /* NO: TRY NEXT TYPE             */ 35850000
*   ANS MSG('AHA0043  INVALID ''TYPE'' SPECIFIED - ''TYPE'||TYPE||'''.' 35900000
*       );                                                              35950000
*   RC = 12;                        /* MACRO ERROR                   */ 36000000
*   GOTO LHA03000;                                                      36150000
*                                                                       36200000
*   /*****************************************************************/ 36216600
*   /*                                                               */ 36233200
*   /* VALIDATE SSRVID OPERAND                                       */ 36250000
*   /*                                                               */ 36266600
*   /*****************************************************************/ 36283200
*                                                                       36300000
*LHA00500:                                                              36315700
*   ;                                                                   36331400
*   IF TYPE ^= '(SSRV)' & NUMBER(SSRVID) ^= 0 THEN /* IF TYPE IS NOT    36347100
*                                      SSRV AND SSRVID IS SPECIFIED,    36362800
*                                                                @L3C*/ 36378500
*     DO;                           /* PROCESS SSRVID ERROR      @L2A*/ 36394200
*       ANS MSG('AHA0023  ''TYPE'||TYPE||''' INVALID WITH ''SSRVID'' '  36410500
*           ||'OPERAND.');          /* PUT OUT SSRVID ERROR MESSAGE     36414500
*                                                                @L2A*/ 36418500
*       RC = 12;                    /* SET RETURN CODE TO INDICATE      36422500
*                                      MACRO ERROR               @L2A*/ 36426500
*       GOTO LHA03000;              /* BRANCH TO END OF MACRO    @L2A*/ 36430500
*     END;                                                              36435000
*   IF TYPE = '(SSRV)' & (SSRVID = '()' | NUMBER(SSRVID) ^= 1) THEN /*  36441400
*                                      IF TYPE IS SSRV AND ONE SSRVID   36447800
*                                      IS NOT SPECIFIED,         @L3A*/ 36454200
*     DO;                           /* PROCESS SSRVID ERROR      @L3A*/ 36460600
*       ANS MSG('AHA0043  INVALID ''SSRVID'' SPECIFIED - ''SSRVID'||    36467300
*           SSRVID||'''.');         /* PUT OUT SSRVID ERROR MESSAGE     36471400
*                                                                @L3A*/ 36475500
*       RC = 12;                    /* SET RETURN CODE TO INDICATE      36479600
*                                      MACRO ERROR               @L3A*/ 36483700
*       GOTO LHA03000;              /* BRANCH TO END OF MACRO    @L3A*/ 36487800
*     END;                          /* ENDDO PROCESS SSRVID ERROR       36491900
*                                                                @L3A*/ 36496100
*                                                                       36515300
*   /*****************************************************************/ 36517900
*   /*                                                               */ 36520500
*   /* VALIDATE REGS OPERAND                                         */ 36523100
*   /*                                                               */ 36525700
*   /*****************************************************************/ 36528300
*                                                                       36530900
*   IF TYPE ^= '(SSRV)' & TYPE ^= '(RCVY)' & TYPE ^= '(TIME)' & NUMBER( 36533500
*      REGS) ^= 0 THEN              /* IF TYPE IS NOT SSRV AND TYPE     36536100
*                                      IS NOT RCVY AND TYPE IS NOT      36538700
*                                      TIME AND REGS IS SPECIFIED,      36541300
*                                                                @L4C*/ 36543900
*     DO;                           /* PROCESS REGS ERROR            */ 36546500
*       ANS MSG('AHA0023  ''TYPE'||TYPE||''' INVALID WITH ''REGS'' '||  36550000
*           'OPERAND.');                                                36600000
*       RC = 12;                    /* MACRO ERROR                   */ 36650000
*       GOTO LHA03000;                                                  36700000
*     END;                                                              36750000
*   IF ((TYPE = '(SSRV)' | TYPE = '(RCVY)' | TYPE = '(TIME)') & NUMBER( 36772000
*      REGS) ^= 0 & REGS ^= '((1))') THEN /* IF TYPE IS SSRV, RCVY OR   36794000
*                                      TIME AND REGS IS SPECIFIED AND   36816000
*                                      IS NOT ((1)),             @L4C*/ 36838000
*     DO;                           /* PROCESS REGS ERROR        @L3A*/ 36860000
*       ANS MSG('AHA0043  ''REGS((1))'' MUST BE '||                     36882400
*           'SPECIFIED OR REGS OMITTED FOR ''TYPE'||TYPE||'''.'); /*    36896500
*                                      PUT OUT REGS ERROR MESSAGE       36910600
*                                                                @L3A*/ 36924700
*       RC = 12;                    /* SET RETURN CODE TO INDICATE      36938800
*                                      MACRO ERROR               @L3A*/ 36952900
*       GOTO LHA03000;              /* BRANCH TO END OF MACRO    @L3A*/ 36967000
*     END;                          /* ENDDO PROCESS REGS ERROR  @L3C*/ 36981100
*                                                                       36995700
*   /*****************************************************************/ 37003700
*   /*                                                               */ 37011700
*   /* VALIDATE SAVEAREA OPERAND                                     */ 37019700
*   /*                                                               */ 37027700
*   /*****************************************************************/ 37035700
*                                                                       37043700
*   IF TYPE ^= '(SSRV)' & TYPE ^= '(RCVY)' & TYPE ^= '(SIGA)' &         37051700
*      SAVEAREA ^= TABSA(I) THEN    /* IF TYPE IS NOT SSRV AND IS NOT   37059700
*                                      RCVY AND SAVEAREA IS NOT THE     37067700
*                                      ONE SPECIFIED IN SAVEAREA        37075700
*                                      TABLE,                    @01C*/ 37083700
*     DO;                           /* PROCESS SAVEAREA ERROR    @L3C*/ 37091700
*       ANS MSG('AHA0043  ''SAVEAREA'||TABSA(I)||''' MUST BE '||        37100000
*           'SPECIFIED FOR ''TYPE'||TYPE||'''.');                       37150000
*       RC = 12;                    /* MACRO ERROR                   */ 37200000
*       GOTO LHA03000;                                                  37250000
*     END;                                                              37300000
*   IF ((TYPE = '(SSRV)' | TYPE = '(RCVY)' | TYPE = '(SIGA)') &         37310300
*      SAVEAREA ^= '(STANDARD)' & SAVEAREA ^= '(PSA)') THEN /* IF       37320600
*                                      TYPE IS SSRV OR RCVY AND         37330900
*                                      SAVEAREA IS NOT STANDARD OR      37341200
*                                      NOT PSA,                  @L3A*/ 37351500
*     DO;                           /* PROCESS SAVEAREA ERROR    @L3A*/ 37361800
*       ANS MSG('AHA0043  ''SAVEAREA'||TABSA(I)||''' MUST BE '||        37372500
*           'SPECIFIED FOR ''TYPE'||TYPE||'''.'); /* PUT OUT SAVEAREA   37375000
*                                      ERROR MESSAGE             @L3A*/ 37377500
*       RC = 12;                    /* SET RETURN CODE TO INDICATE      37380000
*                                      MACRO ERROR               @L3A*/ 37382500
*       GOTO LHA03000;              /* BRANCH TO END OF MACRO    @L3A*/ 37385000
*     END;                          /* ENDDO PROCESS SAVEAREA ERROR     37387500
*                                                                @L3A*/ 37390000
*                                                                       37397500
*   /*****************************************************************/ 37398000
*   /*                                                               */ 37398500
*   /* VALIDATE INLINE OPERAND                                       */ 37399200
*   /*                                                               */ 37399700
*   /*****************************************************************/ 37400200
*                                                                       37400900
*   IF INLINE ^= '' THEN            /* IF INLINE SPECIFIED       @D1A*/ 37402600
*     IF INLINE = '(YES)' | INLINE = '(NO)' THEN /* IF VALUE IS VALID   37404300
*                                                                @D1A*/ 37406000
*       DO;                         /*                           @D1A*/ 37407700
*         IF TYPE ^= '(SSRV)' THEN  /* IF TYPE IS NOT SSRV       @D1A*/ 37409400
*           DO;                     /*                           @D1A*/ 37411100
*             ANS MSG('AHA0023  ''TYPE'||TYPE||                         37412800
*                 ''' INVALID WITH ''INLINE'' OPERAND.'); /* PUT OUT    37414600
*                                      INLINE ERROR MESSAGE      @D1P*/ 37416400
*             RC = 12;              /* SET RETURN CODE TO INDICATE      37418200
*                                      MACRO ERROR               @D1P*/ 37420000
*             GOTO LHA03000;        /* BRANCH TO END OF MACRO    @D1P*/ 37421800
*           END;                    /*                           @D1A*/ 37423600
*       END;                        /*                           @D1A*/ 37425400
*     ELSE                          /* VALUE NOT VALID           @D1A*/ 37427200
*       DO;                         /*                           @D1A*/ 37429000
*         ANS MSG('AHA0043  INVALID ''INLINE'' SPECIFIED - ''INLINE'||  37431500
*             INLINE||'''.');       /* PUT OUT INLINE ERROR MESSAGE     37433400
*                                                                @D1A*/ 37435300
*         RC = 12;                  /* SET RETURN CODE TO INDICATE      37437200
*                                      MACRO ERROR               @D1P*/ 37439100
*         GOTO LHA03000;            /* BRANCH TO END OF MACRO    @D1P*/ 37441000
*       END;                        /*                           @D1A*/ 37442900
*                                                                       37445100
*   /*****************************************************************/ 37445600
*   /*                                                               */ 37446100
*   /* GENERATE CODE FOR NON-USER TYPE                               */ 37446800
*   /*                                                               */ 37447800
*   /*****************************************************************/ 37448800
*                                                                       37450000
*LHA01000:                                                              37500000
*   ;                                                                   37550000
*   IF TYPE = '(DSP)' THEN                                              37600000
*     DO;                           /* GENERATE INLINE CODE FOR TASK    37650000
*                                      DISPATCH TRACE                */ 37700000
*       ANS(COMMENT('  PTRACE TYPE(DSP)                    ')) COL(2);  37750000
*       ANS(COMMENT('                                      ')) COL(2);  37800000
*       ANS(COMMENT('     INPUT  REGISTERS:                ')) COL(2);  37850000
*       ANS(COMMENT('     REGS   0-1 ISSUER DATA TO BE TRACED  ')) COL( 37900000
*           2);                                                         37950000
*       ANS(COMMENT('     REG      5 CURRENT TCB ADDRESS  ')) COL(2);   38000000
*       ANS(COMMENT('     REG      8 CURRENT ASCB ADDRESS  ')) COL(2);  38050000
*       ANS(COMMENT('     REG     13 PASID/SASID')) COL(2);             38100000
*       ANS(COMMENT('                                      ')) COL(2);  38150000
*       ANS(COMMENT('     OUTPUT REGISTERS:                ')) COL(2);  38200000
*       ANS(COMMENT('     REGS   0-4 UNPREDICATABLE        ')) COL(2);  38250000
*       ANS(COMMENT('     REGS   5-9 UNCHANGED             ')) COL(2);  38300000
*       ANS(COMMENT('     REGS 10-15 UNPREDICATABLE        ')) COL(2);  38350000
*       ANS('IF PSATROFF=''1''B THEN   /* IF TRACE SUSPENDED THEN */')  39550000
*           COL(MACCOL+2);          /* TEST FOR TRACE SUSPENDED CODE */ 39600000
*       ANS('DO;') COL(MACCOL+4);                                       39700000
*       ANS('STM(GPR00F,GPR15F,PSATRSAV);/* SAVE ISSUERS REGISTERS */') 39800000
*           COL(MACCOL+6);          /* SAVE REGISTERS CODE           */ 39850000
*       ANS('CALL TRVTETDP->IPDEF;  /* CALL SERVICE ROUITNE */') COL(   39900000
*           MACCOL+6);              /* GEN CALL TO ROUTINE           */ 39950000
*       ANS('LM(GPR00F,GPR15F,PSATRSAV);/* RESTORE ISSUERS REGISTERS*/' 40000000
*           ) COL(MACCOL+6);        /* RESTORE REGISTERS CODE        */ 40050000
*       ANS('END;') COL(MACCOL+4);                                      40250000
*       ANS('ELSE        /* TRACE NOT SUSPENDED*/') COL(MACCOL+2);      40300000
*       ANS('DO;')                  /* GEN CODE FOR TRACE NOT           40350000
*                                      SUSPENDED                     */ 40400000
*           COL(MACCOL+4);                                              40450000
*       ANS('RESPECIFY (GPR02F,GPR03F,GPR04P,GPR05P,'||                 40600000
*           'GPR08P,GPR10P,GPR11P,GPR12F,GPR14F,GPR15F)'||'RESTRICTED;' 40650000
*           ) COL(MACCOL+6);                                            40700000
*       ANS('GPR12F=GPR08P->ASCBASID;   /* GET HOME ASID    */') COL(   40750000
*           MACCOL+6);              /* LOAD HOME ASID                */ 40800000
*       ANS('GPR11P=GPR05P;      /* GET CURRENT TCB ADDRESS */') COL(   40850000
*           MACCOL+6);              /* LOAD CURRENT TCB ADDRESS CODE */ 40900000
*       ANS('LM(GPR14F,GPR15F,PSAPSWSV);  /* LOAD DISPATCHER PSW */')   41100000
*           COL(MACCOL+6);          /* LOAD DISPATCHER PSW CODE      */ 41150000
*       ANS('GPR02F=PSAMODEW;  /* LOAD PSA SYSTEM MODE INDICATOR */')   41250000
*           COL(MACCOL+6);          /* LOAD PSA SYSTEM MODE INDICATOR   41300000
*                                      CODE                          */ 41350000
*       ANS('GPR03F=PSACLHS;   /* LOAD CURRENT LOCKS HELD STRING */')   41400000
*           COL(MACCOL+6);          /* LOAD CURRENT LOCKS HELD STRING   41450000
*                                      CODE                          */ 41500000
*       ANS('GPR04P=PSALOCAL;   /* LOAD LOCAL LOCK ADDRESS */') COL(    41550000
*           MACCOL+6);              /* LOAD LOCAL LOCK CODE          */ 41600000
*       ANS('GPR10P=PSATOT;    /* ADDRESS OF TRACE OPERAND TABLE*/')    41700000
*           COL(MACCOL+6);                                              41750000
*       ANS('GEN REFS(GPR00F,GPR01F,GPR02F,GPR03F,GPR04P,'||            41800000
*           'GPR10P,GPR11P,GPR12F,GPR13F,GPR14F,GPR15F,'||'TOT,TOTDSP)' 41850000
*           ) COL(MACCOL+6);        /* REFERENCES            @ZMC3565*/ 41900000
*       ANS('(TRACE GPR11P,GPR04P,TOTDSP-TOT(GPR10P)); /* TRACE '||     42000000
*           'TASK DISPATCH */') COL(MACCOL+6); /* TRACE TASK DISPATCH   42050000
*                                      CODE                          */ 42100000
*       ANS('RESPECIFY (GPR02F,GPR03F,GPR04P,GPR05P,'||                 42200000
*           'GPR08P,GPR10P,GPR11P,GPR12F,GPR14F,GPR15F)'||              42250000
*           ' UNRESTRICTED;') COL(MACCOL+6);                            42300000
*       ANS('END;') COL(MACCOL+4);  /* FOR DSP TRACE REQUEST WHEN       42350000
*                                      TRACE ACTIVE                  */ 42400000
*       IF INDEX(EHAREGS,'00F') = 0 THEN /* DCL FOR R0 REQUESTED?    */ 42450000
*         EHAREGS = EHAREGS || '00F'; /* NO, REQUEST IT              */ 42500000
*       IF INDEX(EHAREGS,'01F') = 0 THEN /* DCL FOR R1 REQUESTED?    */ 42550000
*         EHAREGS = EHAREGS || '01F'; /* NO, REQUEST IT              */ 42600000
*       IF INDEX(EHAREGS,'02F') = 0 THEN /* DCL FOR R2 REQUESTED?    */ 42650000
*         EHAREGS = EHAREGS || '02F'; /* NO, REQUEST IT              */ 42700000
*       IF INDEX(EHAREGS,'03F') = 0 THEN /* DCL FOR R3 REQUESTED?    */ 42750000
*         EHAREGS = EHAREGS || '03F'; /* NO, REQUEST IT              */ 42800000
*       IF INDEX(EHAREGS,'04P') = 0 THEN /* DCL FOR R4 REQUESTED?    */ 42850000
*         EHAREGS = EHAREGS || '04P'; /* NO, REQUEST IT              */ 42900000
*       IF INDEX(EHAREGS,'05P') = 0 THEN /* DCL FOR R5 REQUESTED?    */ 42950000
*         EHAREGS = EHAREGS || '05P'; /* NO, REQUEST IT              */ 43000000
*       IF INDEX(EHAREGS,'08P') = 0 THEN /* DCL FOR R8 REQUESTED?    */ 43050000
*         EHAREGS = EHAREGS || '08P'; /* NO, REQUEST IT              */ 43100000
*       IF INDEX(EHAREGS,'10P') = 0 THEN /* DCL FOR R10 REQUESTED?   */ 43150000
*         EHAREGS = EHAREGS || '10P'; /* NO, REQUEST IT              */ 43200000
*       IF INDEX(EHAREGS,'11P') = 0 THEN /* DCL FOR R11 REQUESTED?   */ 43250000
*         EHAREGS = EHAREGS || '11P'; /* NO, REQUEST IT              */ 43300000
*       IF INDEX(EHAREGS,'12F') = 0 THEN /* DCL FOR R12 REQUESTED?   */ 43350000
*         EHAREGS = EHAREGS || '12F'; /* NO, REQUEST IT              */ 43400000
*       IF INDEX(EHAREGS,'13F') = 0 THEN /* DCL FOR R13 REQUESTED?   */ 43450000
*         EHAREGS = EHAREGS || '13F'; /* NO, REQUEST IT              */ 43500000
*       IF INDEX(EHAREGS,'14F') = 0 THEN /* DCL FOR R14 REQUESTED?   */ 43550000
*         EHAREGS = EHAREGS || '14F'; /* NO, REQUEST IT              */ 43600000
*       IF INDEX(EHAREGS,'15F') = 0 THEN /* DCL FOR R15 REQUESTED?   */ 43650000
*         EHAREGS = EHAREGS || '15F'; /* NO, REQUEST IT              */ 43700000
*       GOTO LHA03000;                                                  43850000
*     END;                                                              43900000
*   IF TYPE = '(SRB)' THEN                                              43950000
*     DO;                           /* GENERATE INLINE CODE FOR         44000000
*                                      INITIAL SRB DISPATCH TRACE    */ 44050000
*       ANS(COMMENT('  PTRACE TYPE(SRB)                    ')) COL(2);  44100000
*       ANS(COMMENT('                                      ')) COL(2);  44150000
*       ANS(COMMENT('     INPUT  REGISTERS:                ')) COL(2);  44200000
*       ANS(COMMENT('     REG      0 SRB ADDRESS             ')) COL(2) 44250000
*           ;                                                           44300000
*       ANS(COMMENT('     REG      1 SRB PARAMETER AREA ADDRESS ')) COL 44350000
*           (2);                                                        44400000
*       ANS(COMMENT('                                      ')) COL(2);  44450000
*       ANS(COMMENT('     OUTPUT REGISTERS:                ')) COL(2);  44500000
*       ANS(COMMENT('     REGS   0-1,3,5-9 UNCHANGED       ')) COL(2);  44550000
*                                   /*                           @D2C*/ 44600000
*       ANS(COMMENT('     REGS   2,4,10-15 UNPREDICTABLE   ')) COL(2);  44650000
*                                   /*                           @D2C*/ 44700000
*       ANS('IF PSATROFF=''1''B THEN   /* IF TRACE SUSPENDED THEN */')  46000000
*           COL(MACCOL+2);          /* TEST FOR TRACE SUSPENDED CODE */ 46050000
*       ANS('DO;') COL(MACCOL+4);                                       46150000
*       ANS('STM(GPR00P,GPR15F,PSATRSAV);/* SAVE ISSUERS REGISTERS */') 46250000
*           COL(MACCOL+6);          /* SAVE REGISTERS CODE           */ 46300000
*       ANS('CALL TRVTETIS->IPDEF;  /* CALL SERVICE ROUITNE */') COL(   46350000
*           MACCOL+6);              /* GEN CALL TO ROUTINE           */ 46400000
*       ANS('LM(GPR00P,GPR15F,PSATRSAV);/* RESTORE ISSUERS REGISTERS*/' 46450000
*           ) COL(MACCOL+6);        /* RESTORE REGISTERS CODE        */ 46500000
*       ANS('END;') COL(MACCOL+4);                                      46700000
*       ANS('ELSE        /* TRACE NOT SUSPENDED*/') COL(MACCOL+2);      46750000
*       ANS('DO;')                  /* GEN CODE FOR TRACE NOT           46800000
*                                      SUSPENDED                     */ 46850000
*           COL(MACCOL+4);                                              46900000
*       ANS('RESPECIFY (GPR00P,GPR02P,GPR04P,'||                        47050000
*           'GPR10P,GPR11P,GPR12F,GPR13F,GPR14F,GPR15F)'||'RESTRICTED;' 47100000
*           ) COL(MACCOL+6);        /*                           @D2C*/ 47150000
*       ANS('GPR04P=GPR02P;       /* SAVE ISSUERS REGISTERS.    */')    47250000
*           COL(MACCOL+6);          /*                           @D2A*/ 47300000
*       ANS('GPR10P=GPR00P;               /* SRB ADDRESSABILITY */')    47400000
*           COL(MACCOL+6);          /* GET SRB ADDRESSABILITY        */ 47450000
*       ANS('GPR11P=GPR10P->SRBWEB;       /* GET WEB ADDRESS */') COL(  47500000
*           MACCOL+6);              /* LOAD PURGE TCB            @D2A*/ 47550000
*       ANS('GPR12F=(GPR10P->SRBFLGS) * ''100''X +'||                   47700000
*           '(GPR10P->SRBHLHI); /* LOAD SRB FLAGS AND LOCK BITS */')    47750000
*           COL(MACCOL+4);                                              47800000
*                                                                       47900000
*       /*************************************************************/ 47933300
*       /*                                                           */ 47966600
*       /* LOAD SRB FLAGS AND LOCK BITS                      @ZMC3565*/ 47999900
*       /*                                                           */ 48033200
*       /*************************************************************/ 48066500
*                                                                       48100000
*       ANS('SLL(GPR12F,16); /* SHIFT '||'TO LEFT HALF WORD */') COL(   48116600
*           MACCOL+4);              /* LEFT HALF WORD        @ZMC3565*/ 48133200
*       ANS('GPR12F=GPR12F|(PSAAOLD->ASCBASID);  /* LOAD HOME ASID '||  48150000
*           'INTO LOW ORDER HALF WORD */') COL(MACCOL+4); /* LOAD       48200000
*                                      ASID CODE                     */ 48250000
*       ANS('LM(GPR13F,GPR14F,PSASMPSW);  /* LOAD DISPATCHER PSW */')   48350000
*           COL(MACCOL+6);          /* LOAD DISPATCHER PSW CODE      */ 48400000
*       ANS('GPR15F=GPR10P->SRBFLC(1:4); /* LOAD SRB AFFINITY, '||      48500000
*           'AND PURGE ASID */') COL(MACCOL+6); /* LOAD SRB AFFINITY,   48550000
*                                      PURGE ASID                    */ 48600000
*       ANS('GPR02P=GPR10P->SRBPTCB;      /* GET PURGE TCB   */') COL(  48650000
*           MACCOL+6);              /* LOAD PURGE TCB            @D2C*/ 48700000
*       ANS('GPR10P=PSATOT;    /* ADDRESS OF TRACE OPERAND TABLE*/')    48962500
*           COL(MACCOL+6);                                              48975000
*       ANS('GEN REFS(GPR00P,GPR01P,GPR02P,'||                          48987500
*           'GPR10P,GPR11P,GPR12F,GPR13F,GPR14F,GPR15F,'||'TOT,TOTSRB)' 49004100
*           ) COL(MACCOL+6);        /* REFERENCES                @D2C*/ 49020700
*       ANS('(TRACE GPR11P,GPR02P,TOTSRB-TOT(GPR10P)); /* TRACE '||     49037500
*           'SRB DISPATCH */') COL(MACCOL+6); /* TRACE SRB DISPATCH     49087500
*                                      CODE                      @D2C*/ 49137500
*       ANS('GPR02P=GPR04P;       /* RESTORE ISSUERS REGISTERS. */')    49200000
*           COL(MACCOL+6);          /*                           @D2A*/ 49250000
*       ANS('RESPECIFY (GPR00P,GPR02P,GPR04P,'||                        49350000
*           'GPR10P,GPR11P,GPR12F,GPR13F,GPR14F,GPR15F)'||              49400000
*           ' UNRESTRICTED;') COL(MACCOL+6); /*                  @D2C*/ 49442300
*       ANS('END;') COL(MACCOL+4);  /* FOR DSP TRACE REQUEST WHEN       49484600
*                                      TRACE ACTIVE                  */ 49526900
*       IF INDEX(EHAREGS,'00P') = 0 THEN /* DCL FOR R0 REQUESTED?    */ 49569200
*         EHAREGS = EHAREGS || '00P'; /* NO, REQUEST IT              */ 49611500
*       IF INDEX(EHAREGS,'01P') = 0 THEN /* DCL FOR R1 REQUESTED?    */ 49653800
*         EHAREGS = EHAREGS || '01P'; /* NO, REQUEST IT              */ 49696100
*       IF INDEX(EHAREGS,'02P') = 0 THEN /* DCL FOR R2 REQUESTED?       49738400
*                                                                @D2A*/ 49780700
*         EHAREGS = EHAREGS || '02P'; /* NO, REQUEST IT          @D2A*/ 49823000
*       IF INDEX(EHAREGS,'04P') = 0 THEN /* DCL FOR R2 REQUESTED?       49865300
*                                                                @D2A*/ 49907600
*         EHAREGS = EHAREGS || '04P'; /* NO, REQUEST IT          @D2A*/ 49949900
*       IF INDEX(EHAREGS,'10P') = 0 THEN /* DCL FOR R10 REQUESTED?   */ 49992200
*         EHAREGS = EHAREGS || '10P'; /* NO, REQUEST IT              */ 50034500
*       IF INDEX(EHAREGS,'11P') = 0 THEN /* DCL FOR R11 REQUESTED?   */ 50076800
*         EHAREGS = EHAREGS || '11P'; /* NO, REQUEST IT              */ 50119100
*       IF INDEX(EHAREGS,'12F') = 0 THEN /* DCL FOR R12 REQUESTED?   */ 50161400
*         EHAREGS = EHAREGS || '12F'; /* NO, REQUEST IT              */ 50203700
*       IF INDEX(EHAREGS,'13F') = 0 THEN /* DCL FOR R13 REQUESTED?   */ 50246000
*         EHAREGS = EHAREGS || '13F'; /* NO, REQUEST IT              */ 50288300
*       IF INDEX(EHAREGS,'14F') = 0 THEN /* DCL FOR R14 REQUESTED?   */ 50330600
*         EHAREGS = EHAREGS || '14F'; /* NO, REQUEST IT              */ 50372900
*       IF INDEX(EHAREGS,'15F') = 0 THEN /* DCL FOR R15 REQUESTED?   */ 50415200
*         EHAREGS = EHAREGS || '15F'; /* NO, REQUEST IT              */ 50457500
*       GOTO LHA03000;                                                  50500000
*     END;                                                              50550000
*   IF TYPE = '(SSRB)' THEN         /*                           @D2A*/ 50550400
*     DO;                           /* GENERATE INLINE CODE FOR SSRB    50550800
*                                      DISPATCH TRACE            @D2A*/ 50551200
*       ANS(COMMENT('  PTRACE TYPE(SSRB)                   ')) COL(2);  50551600
*                                   /*                           @D2A*/ 50552000
*       ANS(COMMENT('                                      ')) COL(2);  50552400
*                                   /*                           @D2A*/ 50552800
*       ANS(COMMENT('     INPUT  REGISTERS:                ')) COL(2);  50553200
*                                   /*                           @D2A*/ 50553600
*       ANS(COMMENT('     REG      1 SSRB ADDRESS          ')) COL(2);  50554000
*                                   /*                           @D2A*/ 50554400
*       ANS(COMMENT('     REG     13 PASID/SASID           ')) COL(2);  50554800
*                                   /*                           @D2A*/ 50555200
*       ANS(COMMENT('                                      ')) COL(2);  50555600
*                                   /*                           @D2A*/ 50556000
*       ANS(COMMENT('     OUTPUT REGISTERS:                ')) COL(2);  50556400
*                                   /*                           @D2A*/ 50556800
*       ANS(COMMENT('     REG    0   UNPREDICATABLE        ')) COL(2);  50557200
*                                   /*                           @D2A*/ 50557600
*       ANS(COMMENT('     REG    1   UNCHANGED             ')) COL(2);  50558000
*                                   /*                           @D2A*/ 50558400
*       ANS(COMMENT('     REG    2   UNPREDICATABLE        ')) COL(2);  50558800
*                                   /*                           @D2A*/ 50559200
*       ANS(COMMENT('     REG    3   UNCHANGED             ')) COL(2);  50559600
*                                   /*                           @D2A*/ 50560000
*       ANS(COMMENT('     REG    4   UNPREDICATABLE        ')) COL(2);  50560400
*                                   /*                           @D2A*/ 50560800
*       ANS(COMMENT('     REG   5-9  UNCHANGED             ')) COL(2);  50561200
*                                   /*                           @D2A*/ 50561600
*       ANS(COMMENT('     REGS 10-12 UNPREDICATABLE        ')) COL(2);  50562000
*                                   /*                           @D2A*/ 50562400
*       ANS(COMMENT('     REG    13  UNCHANGED             ')) COL(2);  50562800
*                                   /*                           @D2A*/ 50563200
*       ANS(COMMENT('     REGS 14-15 UNPREDICATABLE        ')) COL(2);  50563600
*                                   /*                           @D2A*/ 50564000
*       ANS('IF PSATROFF=''1''B THEN   /* IF TRACE SUSPENDED THEN */')  50566200
*           COL(MACCOL+2);          /* TEST FOR TRACE SUSPENDED CODE    50566500
*                                                                @D2A*/ 50566800
*       ANS('DO;') COL(MACCOL+4);   /*                           @D2A*/ 50567100
*       ANS('STM(GPR00P,GPR15F,PSATRSAV);/* SAVE ISSUERS REGISTERS */') 50567700
*           COL(MACCOL+6);          /* SAVE REGISTERS CODE       @D2A*/ 50568100
*       ANS('CALL TRVTETSB->IPDEF;  /* CALL SERVICE ROUITNE */') COL(   50568500
*           MACCOL+6);              /* GEN CALL TO ROUTINE       @D2A*/ 50568900
*       ANS('LM(GPR00P,GPR15F,PSATRSAV);/* RESTORE ISSUERS REGISTERS*/' 50569300
*           ) COL(MACCOL+6);        /* RESTORE REGISTERS CODE    @D2A*/ 50569700
*       ANS('END;') COL(MACCOL+4);  /*                           @D2A*/ 50570100
*       ANS('ELSE        /* TRACE NOT SUSPENDED*/') COL(MACCOL+2); /*   50570500
*                                                                @D2A*/ 50570900
*       ANS('DO;')                  /* GEN CODE FOR TRACE NOT           50571300
*                                      SUSPENDED                     */ 50571700
*           COL(MACCOL+4);          /*                           @D2A*/ 50572100
*       ANS('RESPECIFY (GPR00P,GPR02F,GPR03F,GPR04P,'||                 50573100
*           'GPR10P,GPR11P,GPR12F,GPR14F,GPR15F)'||'RESTRICTED;') COL(  50573500
*           MACCOL+6);              /*                           @D2A*/ 50573900
*       ANS('GPR04P=GPR03P;            /* SAVE ISSUERS REGISTER.*/')    50574300
*           COL(MACCOL+6);          /*                           @D2A*/ 50574700
*       ANS('GPR00P=PSALCCAV->LCCAPGTA(3:6); /* LOAD PURGE TCB@.  */')  50575200
*           COL(MACCOL+6);          /*                           @D2A*/ 50575600
*       ANS('GPR11P=PSALCCAV->LCCACWEB; /* LOAD WORK UNIT ADDRESS. */') 50576100
*           COL(MACCOL+4);          /*                           @D2A*/ 50576500
*       ANS('GPR02F=PSALCCAV->LCCASRBF(1:4); /* LOAD AFFINITY '||       50577000
*           'AND PURGE ASID. */') COL(MACCOL+4); /*              @D2A*/ 50577600
*       ANS('GPR12F=PSACLHS4;           /* LOAD LOCKS HELD'||           50578200
*           ' INFORMATION.            */') COL(MACCOL+4); /*     @D2A*/ 50578800
*       ANS('SLL(GPR12F,16); /* SHIFT '||'TO LEFT HALF WORD */') COL(   50579400
*           MACCOL+4);              /*                           @D2A*/ 50580000
*       ANS('GPR12F=GPR12F | PSAAOLD->ASCBASID; /* '||                  50580600
*           'LOAD ASID OF CURRENT ASCB. */') COL(MACCOL+4); /*   @D2A*/ 50581200
*       ANS('LM(GPR14F,GPR15F,PSAPSWSV);  /* LOAD DISPATCHER PSW */')   50581800
*           COL(MACCOL+6);          /*                           @D2A*/ 50582200
*       ANS('GPR03F=PSALOCAL;          /* LOAD LOCAL LOCK WORD'||       50582700
*           ' OF CPU LOCKS TABLE. */') COL(MACCOL+6); /*         @D2A*/ 50583300
*       ANS('GPR10P=PSATOT;    /* ADDRESS OF TRACE OPERAND TABLE*/')    50583900
*           COL(MACCOL+6);          /*                           @D2A*/ 50584300
*       ANS('GEN REFS(GPR00P,GPR01P,GPR02P,GPR03F,'||                   50584800
*           'GPR10P,GPR11P,GPR12F,GPR13F,GPR14F,GPR15F,'||'TOT,TOTSSRB)'50585200
*           ) COL(MACCOL+6);        /* REFERENCES                @D2A*/ 50585600
*       ANS('(TRACE GPR11P,GPR03F,TOTSSRB-TOT(GPR10P)); /* TRACE '||    50586000
*           'SSRB DISPATCH */') COL(MACCOL+6); /* TRACE SSRB DISPATCH   50586400
*                                      CODE                      @D2A*/ 50586800
*       ANS('RESPECIFY (GPR00P,GPR02F,GPR03F,GPR04P,'||                 50587200
*           'GPR10P,GPR11P,GPR12F,GPR14F,GPR15F)'||'UNRESTRICTED;') COL 50619800
*           (MACCOL+6);             /*                           @D2A*/ 50652400
*       ANS('END;') COL(MACCOL+4);  /* FOR DSP TRACE REQUEST WHEN       50685000
*                                      TRACE ACTIVE              @D2A*/ 50717600
*       IF INDEX(EHAREGS,'00P') = 0 THEN /* DCL FOR R0 REQUESTED?       50750200
*                                                                @D2A*/ 50782800
*         EHAREGS = EHAREGS || '00P'; /* NO, REQUEST IT          @D2A*/ 50815400
*       IF INDEX(EHAREGS,'02F') = 0 THEN /* DCL FOR R2 REQUESTED?       50848000
*                                                                @D2A*/ 50880600
*         EHAREGS = EHAREGS || '02F'; /* NO, REQUEST IT          @D2A*/ 50913200
*       IF INDEX(EHAREGS,'03P') = 0 THEN /* DCL FOR R3 REQUESTED?       50945800
*                                                                @D2A*/ 50978400
*         EHAREGS = EHAREGS || '03P'; /* NO, REQUEST IT          @D2A*/ 51011000
*       IF INDEX(EHAREGS,'03F') = 0 THEN /* DCL FOR R3 REQUESTED?       51043600
*                                                                @D2A*/ 51076200
*         EHAREGS = EHAREGS || '03F'; /* NO, REQUEST IT          @D2A*/ 51108800
*       IF INDEX(EHAREGS,'04P') = 0 THEN /* DCL FOR R4 REQUESTED?       51141400
*                                                                @D2A*/ 51174000
*         EHAREGS = EHAREGS || '04P'; /* NO, REQUEST IT          @D2A*/ 51206600
*       IF INDEX(EHAREGS,'10P') = 0 THEN /* DCL FOR R10 REQUESTED?      51239200
*                                                                @D2A*/ 51271800
*         EHAREGS = EHAREGS || '10P'; /* NO, REQUEST IT          @D2A*/ 51304400
*       IF INDEX(EHAREGS,'11P') = 0 THEN /* DCL FOR R11 REQUESTED?      51337000
*                                                                @D2A*/ 51369600
*         EHAREGS = EHAREGS || '11P'; /* NO, REQUEST IT          @D2A*/ 51402200
*       IF INDEX(EHAREGS,'12F') = 0 THEN /* DCL FOR R12 REQUESTED?      51434800
*                                                                @D2A*/ 51467400
*         EHAREGS = EHAREGS || '12F'; /* NO, REQUEST IT          @D2A*/ 51500000
*       IF INDEX(EHAREGS,'14F') = 0 THEN /* DCL FOR R14 REQUESTED?      51532600
*                                                                @D2A*/ 51565200
*         EHAREGS = EHAREGS || '14F'; /* NO, REQUEST IT          @D2A*/ 51597800
*       IF INDEX(EHAREGS,'15F') = 0 THEN /* DCL FOR R15 REQUESTED?      51630400
*                                                                @D2A*/ 51663000
*         EHAREGS = EHAREGS || '15F'; /* NO, REQUEST IT          @D2A*/ 51695600
*       GOTO LHA03000;              /*                           @D2A*/ 51728200
*     END;                          /*                           @D2A*/ 51760800
*   IF TYPE = '(SVC)' THEN                                              51793400
*     DO;                           /* GENERATE INLINE CODE FOR SVC     51826000
*                                      INTERRUPT TRACE               */ 51858600
*       ANS(COMMENT('  PTRACE TYPE(SVC)                    ')) COL(2);  51891200
*       ANS(COMMENT('                                      ')) COL(2);  51923800
*       ANS(COMMENT('     INPUT  REGISTERS:                ')) COL(2);  51956400
*       ANS(COMMENT('     REGS   0-1 ISSUER DATA TO BE TRACED  ')) COL( 51989000
*           2);                                                         52021600
*       ANS(COMMENT('     REG      4 CURRENT TCB ADDRESS     ')) COL(2) 52054200
*           ;                                                           52086800
*       ANS(COMMENT('     REG      7 CURRENT ASCB ADDRESS')) COL(2);    52119400
*       ANS(COMMENT('     REG     15 ISSUER DATA TO BE TRACED  ')) COL( 52152000
*           2);                                                         52184600
*       ANS(COMMENT('                                      ')) COL(2);  52217200
*       ANS(COMMENT('     OUTPUT REGISTERS:                ')) COL(2);  52249800
*       ANS(COMMENT('     REGS  0-15 UNCHANGED               ')) COL(2) 52282400
*           ;                                                           52315000
*       ANS('RESPECIFY (GPR04P,GPR07P,GPR10P,GPR11P,'||                 52350000
*           'GPR12F,GPR13F,GPR14F) RESTRICTED;') COL(MACCOL+4);         52400000
*       ANS('STM(GPR10P,GPR14F,PSATRSAV); /* SAVE ISSUERS REGISTERS*/') 52550000
*           COL(MACCOL+4);          /* SAVE ISSUERS REGISTERS CODE   */ 52600000
*       ANS('GPR10P=PSATOT;      /* ADDRESS OF TRACE OPERAND TABLE*/')  52700000
*           COL(MACCOL+4);                                              52750000
*       ANS('GPR11P=GPR04P;      /* LOAD CURRENT TCB ADDRESS */') COL(  52800000
*           MACCOL+4);              /* LOAD CURRENT TCB ADDRESS CODE */ 52850000
*       ANS('GPR12F=FLCSVCN * ''10000''X;  /* LOAD SVC NUMBER '||       53000000
*           'INTO HIGH ORDER HALF WORD */') COL(MACCOL+4); /* LOAD      53050000
*                                      SVC NUMBER CODE               */ 53100000
*       ANS('GPR12F=GPR12F|GPR07P->ASCBASID;  /* LOAD HOME ASID '||     53200000
*           'INTO LOW ORDER HALF WORD */') COL(MACCOL+4); /* LOAD       53219400
*                                      ASID CODE                     */ 53238800
*       IF SYSALVL > 1 THEN         /* ESAME?                    @P2A*/ 53258200
*         DO;                       /* ESAME                     @P2A*/ 53277600
*           ANS('GRP13F = FLCESOPSW(1::4);') COL(MACCOL+4); /* LOAD     53297000
*                                      LEFT PART OF SVC OLD      @P2A*/ 53316400
*           ANS('GRP14F = FLCESOPSW(13::4);') COL(MACCOL+4); /* LOAD    53335800
*                                      RIGHT PART OF SVC OLD     @P2A*/ 53355200
*           ANS('IF FLCESOPSW(5)>=''80''X THEN '||                      53374600
*               'GPR14F = GPR14F | ''80000000''X;') COL(MACCOL+4); /*   53394000
*                                      COPY AMODE BIT            @P2A*/ 53413400
*         END;                      /* ESAME                     @P2A*/ 53432800
*       ELSE                                                            53452200
*         DO;                       /* NOT ESAME                 @P2A*/ 53471600
*           ANS('LM(GPR13F,GPR14F,FLCSOPSW); /* LOAD SVC OLD PSW */')   53491000
*               COL(MACCOL+4);      /* LOAD SVC OLD PSW CODE         */ 53510400
*         END;                      /* NOT ESAME                 @P2A*/ 53529800
*       ANS('GEN REFS(GPR00F,GPR01F,GPR10P,GPR11P,GPR12F,GPR13F,'||     53550000
*           'GPR14F,GPR15F,'||'TOT,TOTSVC)') COL(MACCOL+4); /*          53600000
*                                      REFERENCES            @ZMC3565*/ 53650000
*       ANS('(TRACE GPR11P,GPR01F,TOTSVC-TOT(GPR10P)); /* TRACE '||     53750000
*           'SVC INTERRUPT */') COL(MACCOL+4); /* TRACE SVC INTERRUPT   53800000
*                                      CODE                          */ 53850000
*       ANS('LM(GPR10P,GPR14F,PSATRSAV);/* RESTORE ISSUERS REGISTERS*/' 53900000
*           ) COL(MACCOL+4);        /* RESTORE ISSUERS REGISTERS CODE*/ 53950000
*       ANS('RESPECIFY (GPR04P,GPR07P,GPR10P,GPR11P,'||                 54100000
*           'GPR12F,GPR13F,GPR14F) UNRESTRICTED;') COL(MACCOL+4);       54150000
*       IF INDEX(EHAREGS,'00F') = 0 THEN /* DCL FOR R0 REQUESTED?    */ 54200000
*         EHAREGS = EHAREGS || '00F'; /* NO, REQUEST IT              */ 54250000
*       IF INDEX(EHAREGS,'01F') = 0 THEN /* DCL FOR R1 REQUESTED?    */ 54300000
*         EHAREGS = EHAREGS || '01F'; /* NO, REQUEST IT              */ 54350000
*       IF INDEX(EHAREGS,'04P') = 0 THEN /* DCL FOR R4 REQUESTED?    */ 54400000
*         EHAREGS = EHAREGS || '04P'; /* NO, REQUEST IT              */ 54450000
*       IF INDEX(EHAREGS,'07P') = 0 THEN /* DCL FOR R7 REQUESTED?    */ 54500000
*         EHAREGS = EHAREGS || '07P'; /* NO, REQUEST IT              */ 54550000
*       IF INDEX(EHAREGS,'10P') = 0 THEN /* DCL FOR R10 REQUESTED?   */ 54600000
*         EHAREGS = EHAREGS || '10P'; /* NO, REQUEST IT              */ 54650000
*       IF INDEX(EHAREGS,'11P') = 0 THEN /* DCL FOR R11 REQUESTED?   */ 54700000
*         EHAREGS = EHAREGS || '11P'; /* NO, REQUEST IT              */ 54750000
*       IF INDEX(EHAREGS,'12F') = 0 THEN /* DCL FOR R12 REQUESTED?   */ 54800000
*         EHAREGS = EHAREGS || '12F'; /* NO, REQUEST IT              */ 54850000
*       IF INDEX(EHAREGS,'13F') = 0 THEN /* DCL FOR R13 REQUESTED?   */ 54900000
*         EHAREGS = EHAREGS || '13F'; /* NO, REQUEST IT              */ 54950000
*       IF INDEX(EHAREGS,'14F') = 0 THEN /* DCL FOR R14 REQUESTED?   */ 55000000
*         EHAREGS = EHAREGS || '14F'; /* NO, REQUEST IT              */ 55050000
*       IF INDEX(EHAREGS,'15F') = 0 THEN /* DCL FOR R15 REQUESTED?   */ 55100000
*         EHAREGS = EHAREGS || '15F'; /* NO, REQUEST IT              */ 55150000
*       GOTO LHA03000;                                                  55300000
*     END;                                                              55350000
*   IF TYPE = '(SVCR)' THEN                                             55400000
*     DO;                           /* GENERATE INLINE EXPANSION FOR    55450000
*                                      SVC RETURN TRACE              */ 55500000
*       ANS(COMMENT('  PTRACE TYPE(SVCR)                   ')) COL(2);  55550000
*       ANS(COMMENT('                                      ')) COL(2);  55600000
*       ANS(COMMENT('     INPUT  REGISTERS:                ')) COL(2);  55650000
*       ANS(COMMENT('     REGS   0-1 ISSUER DATA TO BE TRACED  ')) COL( 55700000
*           2);                                                         55750000
*       ANS(COMMENT('     REG      4 CURRENT TCB ADDRESS  ')) COL(2);   55800000
*       ANS(COMMENT('     REG      5 CURRENT RB ADDRESS  ')) COL(2);    55850000
*       ANS(COMMENT('     REG      7 CURRENT ASCB ADDRESS  ')) COL(2);  55900000
*       ANS(COMMENT('     REG     15 ISSUER DATA TO BE TRACED  ')) COL( 55950000
*           2);                                                         56000000
*       ANS(COMMENT('                                      ')) COL(2);  56050000
*       ANS(COMMENT('     OUTPUT REGISTERS:                ')) COL(2);  56100000
*       ANS(COMMENT('     REGS   0-3 UNPREDICTABLE           ')) COL(2) 56150000
*           ;                                                           56200000
*       ANS(COMMENT('     REGS   4-9 UNCHANGED               ')) COL(2) 56250000
*           ;                                                           56300000
*       ANS(COMMENT('     REGS 10-15 UNPREDICTABLE           ')) COL(2) 56350000
*           ;                                                           56400000
*       ANS('RESPECIFY (GPR04P,GPR05P,GPR07P,GPR10P,'||                 57600000
*           'GPR11P,GPR12F,GPR13P,GPR14P) RESTRICTED;') COL(MACCOL+4);  57650000
*       ANS('GPR10P=PSATOT;      /* ADDRESS OF TRACE OPERAND TABLE*/')  57800000
*           COL(MACCOL+4);                                              57850000
*       ANS('GPR11P=GPR04P;      /* LOAD CURRENT TCB ADDRESS */') COL(  57900000
*           MACCOL+4);              /* LOAD CURRENT TCB ADDRESS CODE */ 57950000
*       ANS('GPR14P=ADDR(RBPRFXLN);    /* GET RB TOTAL '||              58100000
*           'PREFIX LENGTH */') COL(MACCOL+4); /* LOAD PREFIX LENGTH    58150000
*                                      CODE                          */ 58200000
*       ANS('GPR13P=GPR05P-GPR14P;     /* GET CURRENT RB ADDRESS'||     58300000
*           ' INCLUDING RB PREFIX */') COL(MACCOL+4); /* LOAD RB        58350000
*                                      ADDRESS CODE                  */ 58400000
*       ANS('GPR12F=GPR13P->RBINTCOD * ''10000''X;   /* LOAD '||        58500000
*           'SVC RETURN CODE INTO HIGH ORDER HALF WORD */') COL(MACCOL+ 58550000
*           4);                     /* LOAD INTERRUPT CODE           */ 58600000
*       ANS('GPR12F=GPR12F|GPR07P->ASCBASID;  /* LOAD HOME '||          58700000
*           'ASID INTO LOW ORDER HALF WORD */') COL(MACCOL+4); /*       58750000
*                                      LOAD ASID CODE                */ 58800000
*       ANS('LM(GPR13P,GPR14P,GPR05P->RBOPSW);  /* LOAD RB OLD PSW */') 58900000
*           COL(MACCOL+4);          /* LOAD RB OLD PSW CODE          */ 58950000
*       ANS('GEN REFS(GPR00F,GPR01F,GPR10P,GPR11P,GPR12F,GPR13P,'||     59050000
*           'GPR14P,GPR15F,'||'TOT,TOTSVCR)') COL(MACCOL+4); /*         59100000
*                                      REFERENCES            @ZMC3565*/ 59150000
*       ANS('(TRACE GPR11P,GPR01F,TOTSVCR-TOT(GPR10P)); '||             59250000
*           '/* TRACE SVC RETURN    */') COL(MACCOL+4); /* TRACE THE    59300000
*                                      SVC RETURN CODE               */ 59350000
*       ANS('RESPECIFY (GPR04P,GPR05P,GPR07P,GPR10P,'||                 59450000
*           'GPR11P,GPR12F,GPR13P,GPR14P) UNRESTRICTED;') COL(MACCOL+4) 59500000
*           ;                                                           59550000
*       IF INDEX(EHAREGS,'00F') = 0 THEN /* DCL FOR R0 REQUESTED?    */ 59600000
*         EHAREGS = EHAREGS || '00F'; /* NO, REQUEST IT              */ 59650000
*       IF INDEX(EHAREGS,'01F') = 0 THEN /* DCL FOR R1 REQUESTED?    */ 59700000
*         EHAREGS = EHAREGS || '01F'; /* NO, REQUEST IT              */ 59750000
*       IF INDEX(EHAREGS,'04P') = 0 THEN /* DCL FOR R4 REQUESTED?    */ 59800000
*         EHAREGS = EHAREGS || '04P'; /* NO, REQUEST IT              */ 59850000
*       IF INDEX(EHAREGS,'05P') = 0 THEN /* DCL FOR R5 REQUESTED?    */ 59900000
*         EHAREGS = EHAREGS || '05P'; /* NO, REQUEST IT              */ 59950000
*       IF INDEX(EHAREGS,'07P') = 0 THEN /* DCL FOR R7 REQUESTED?    */ 60000000
*         EHAREGS = EHAREGS || '07P'; /* NO, REQUEST IT              */ 60050000
*       IF INDEX(EHAREGS,'10P') = 0 THEN /* DCL FOR R10 REQUESTED?   */ 60100000
*         EHAREGS = EHAREGS || '10P'; /* NO, REQUEST IT              */ 60150000
*       IF INDEX(EHAREGS,'11P') = 0 THEN /* DCL FOR R11 REQUESTED?   */ 60200000
*         EHAREGS = EHAREGS || '11P'; /* NO, REQUEST IT              */ 60250000
*       IF INDEX(EHAREGS,'12F') = 0 THEN /* DCL FOR R12 REQUESTED?   */ 60300000
*         EHAREGS = EHAREGS || '12F'; /* NO, REQUEST IT              */ 60350000
*       IF INDEX(EHAREGS,'13P') = 0 THEN /* DCL FOR R13 REQUESTED?   */ 60400000
*         EHAREGS = EHAREGS || '13P'; /* NO, REQUEST IT              */ 60450000
*       IF INDEX(EHAREGS,'14P') = 0 THEN /* DCL FOR R14 REQUESTED?   */ 60500000
*         EHAREGS = EHAREGS || '14P'; /* NO, REQUEST IT              */ 60550000
*       IF INDEX(EHAREGS,'15F') = 0 THEN /* DCL FOR R15 REQUESTED?   */ 60600000
*         EHAREGS = EHAREGS || '15F'; /* NO, REQUEST IT              */ 60650000
*       GOTO LHA03000;                                                  60750000
*     END;                                                              60800000
*                                                                       60850000
*   /*****************************************************************/ 60875000
*   /*                                                               */ 60900000
*   /* GENERATE COMMENT                                              */ 60925000
*   /*                                                               */ 60950000
*   /*****************************************************************/ 60975000
*                                                                       61000000
*   ANS('/* REGISTER CONTENT REQUIREMENTS FOR THE PTRACE '||            61050000
*       'MACRO CAN BE FOUND */') COL(2);                                61058800
*   ANS('/* IN MODULE IEAVETRC, IN '||'THE SYSTEM LOGIC LIBRARY. */')   61067600
*       COL(2);                                                         61076400
*   IF TYPE = '(SSRV)' & INLINE = '(YES)' THEN /* IF INLINE SSRV @D1A*/ 61085200
*     DO;                           /*                           @D1A*/ 61094000
*       IF INDEX(EHAREGS,'00F') = 0 THEN /* DCL FOR R0 REQUESTED?       61102800
*                                                                @D1A*/ 61111600
*         EHAREGS = EHAREGS || '00F'; /* NO, REQUEST IT          @D1A*/ 61120400
*       IF SAVEAREA = '(PSA)' THEN  /* IF SAVEAREA(PSA)          @D1A*/ 61129200
*         INSAVE = 'PSATRSAV-PSA+8(0)'; /* USE PSA SAVE AREA     @D1A*/ 61138000
*       ELSE                        /* SAVEAREA(STANDARD)        @D1A*/ 61146800
*         INSAVE = '28(13)          '; /* USE STANDARD SAVE AREA @D1A*/ 61155600
*       ANS('IF ^PSATROFF THEN /* IF TRACE IS ACTIVE   */') COL(MACCOL+ 61164400
*           2);                     /*                           @D1A*/ 61173200
*       ANS('DO;             /* PERFORM INLINE TRACE */') COL(MACCOL+4) 61182000
*           ;                       /*                           @D1A*/ 61190800
*       ANS('RESPECIFY (GPR00F) RESTRICTED;') COL(MACCOL+6); /* GEN     61199600
*                                      RFY FOR REGS              @D1A*/ 61208400
*       ANS('GPR00F='||SSRVID(1)||';  /* GET SSRV ID */') COL(MACCOL+6) 61217200
*           ;                       /*                           @D1A*/ 61226000
*       ANS('GEN REFS(PSA,PSAAOLD,PSATOLD,PSATOT,') COL(MACCOL+6); /*   61234800
*                                                                @D1A*/ 61243600
*       ANS('         ASCB,ASCBASID,TOT,TOTSSRV)') COL(MACCOL+6); /*    61252400
*                                                                @D1A*/ 61261200
*       ANS('    NOSETS OPTACROSS;') COL(MACCOL+6); /*           @D1A*/ 61270000
*       ANS('STM   2,9,'||INSAVE||' SAVE REGISTERS') COL(10); /* @D1A*/ 61278800
*       ANS('L     4,PSAAOLD-PSA(,0)    GET ASCB ADDRESS') COL(10); /*  61287600
*                                                                @D1A*/ 61296400
*       ANS('L     2,PSATOLD-PSA(,0)    GET TCB ADDRESS') COL(10); /*   61305200
*                                                                @D1A*/ 61314000
*       ANS('L     9,PSATOT-PSA(,0)     GET TOT ADDRESS') COL(10); /*   61322800
*                                                                @D1A*/ 61331600
*       ANS('LR    3,0                  GET SSRV ID') COL(10); /*       61340400
*                                                                @D1A*/ 61349200
*       ANS('SLL   3,16                 SHIFT TO LEFT HALF') COL(10);   61358000
*                                   /*                           @D1A*/ 61366800
*       ANS('ICM   3,B''0011'',ASCBASID-ASCB(4) GET ASID') COL(10); /*  61375600
*                                                                @D1A*/ 61384400
*       ANS('LM    4,8,0(1)             GET PASSED VALUES') COL(10);    61393200
*                                   /*                           @D1A*/ 61402000
*       ANS('TRACE 2,8,TOTSSRV-TOT(9)   ISSUE TRACE INSTRUCTION') COL(  61410800
*           10);                    /*                           @D1A*/ 61419600
*       ANS('LM    2,9,'||INSAVE||' RESTORE REGISTERS') COL(10); /*     61428400
*                                                                @D1A*/ 61437200
*       ANS('@ENDGEN;') COL(MACCOL+6); /*                        @D1A*/ 61446000
*       ANS('RESPECIFY (GPR00F) UNRESTRICTED;') COL(MACCOL+6); /* GEN   61454800
*                                      RFY FOR REGS              @D1A*/ 61463600
*       ANS('END;            /* PERFORM INLINE TRACE */') COL(MACCOL+4) 61472400
*           ;                       /*                           @D1A*/ 61481200
*       ANS('ELSE              /* TRACE IS SUSPENDED   */') COL(MACCOL+ 61490000
*           2);                     /*                           @D1A*/ 61498800
*       ANS('?PTRACE TYPE(SSRV) SSRVID'||SSRVID||' SAVEAREA'||SAVEAREA  61507600
*           ||';') COL(MACCOL+4);   /*                           @D1A*/ 61516400
*       GOTO LHA03000;              /*                           @D1P*/ 61525200
*     END;                          /*                           @D1A*/ 61534000
*   IF TYPE = '(PGM)' THEN          /* PGM TYPE ?                    */ 61542800
*     DO;                           /* YES: GEN CODE FOR PGM         */ 61551600
*       ANS('RESPECIFY (GPR15P) RESTRICTED;') COL(MACCOL+2); /* GEN     61560400
*                                      RFY FOR REGS                  */ 61569200
*       IF INDEX(EHAREGS,'15P') = 0 THEN /* DCL FOR R15 REQUESTED?   */ 61578000
*         EHAREGS = EHAREGS || '15P'; /* NO, REQUEST IT              */ 61586800
*     END;                                                              61600000
*   IF SAVEAREA = '(STANDARD)' THEN /* STANDARD REGISTER SAVING?     */ 61650000
*     DO;                           /* YES: GEN CODE FOR SAVE        */ 61700000
*       ANS('RESPECIFY (GPR13P) RESTRICTED;') COL(MACCOL+2); /* GEN     61750000
*                                      RFY FOR REGS                  */ 61800000
*       ANS('STM(GPR14F,GPR12F,SA@G1412);  /* SAVE ISSUERS REGS */')    61900000
*           COL(MACCOL+2);          /* SAVE REGISTERS CODE           */ 61950000
*       IF INDEX(EHAREGS,'12F') = 0 THEN /* DCL FOR R12 REQUESTED?   */ 62000000
*         EHAREGS = EHAREGS || '12F'; /* NO, REQUEST IT              */ 62050000
*       IF INDEX(EHAREGS,'13P') = 0 THEN /* DCL FOR R13 REQUESTED?   */ 62100000
*         EHAREGS = EHAREGS || '13P'; /* NO, REQUEST IT              */ 62150000
*       IF INDEX(EHAREGS,'14F') = 0 THEN /* DCL FOR R14 REQUESTED?   */ 62200000
*         EHAREGS = EHAREGS || '14F'; /* NO, REQUEST IT              */ 62250000
*       IF INDEX(EHAMAPS,'SA@') = 0 THEN /* SAVE AREA DCL REQUESTED? */ 62300000
*         EHAMAPS = EHAMAPS || 'SA@,'; /* NO, REQUEST IT             */ 62350000
*     END;                                                              62400000
*   IF SAVEAREA = '(PSA)' THEN      /* PSA REGISTER SAVING?          */ 62450000
*     DO;                           /* YES: GEN CODE FOR SAVE        */ 62500000
*       ANS('STM(GPR00F,GPR15F,PSATRSAV);  /* SAVE ISSUERS REGS */')    62550000
*           COL(MACCOL+2);          /* SAVE REGISTERS CODE           */ 62600000
*       IF INDEX(EHAREGS,'00F') = 0 THEN /* DCL FOR R00 REQUESTED?   */ 62650000
*         EHAREGS = EHAREGS || '00F'; /* NO, REQUEST IT              */ 62700000
*       IF INDEX(EHAREGS,'15F') = 0 THEN /* DCL FOR R15 REQUESTED?   */ 62750000
*         EHAREGS = EHAREGS || '15F'; /* NO, REQUEST IT              */ 62800000
*     END;                                                              62850000
*   IF SAVEAREA = '(NONE)' THEN     /* SAVE NO REGISTERS?            */ 62900000
*     DO;                           /* YES: GEN CODE FOR SAVE        */ 62950000
*       ANS('RESPECIFY (GPR02F,GPR15F) '||'RESTRICTED;') COL(MACCOL+2); 63000000
*                                   /* GEN RFY FOR REGS              */ 63050000
*       ANS('GPR02F=GPR15F;  /* SAVE REG 15 FOR SERVICE ROUTINE */')    63100000
*           COL(MACCOL+2);          /* GEN REG 15 SAVE               */ 63150000
*       IF INDEX(EHAREGS,'02F') = 0 THEN /* DCL FOR R02 REQUESTED?   */ 63200000
*         EHAREGS = EHAREGS || '02F'; /* NO, REQUEST IT              */ 63250000
*       IF INDEX(EHAREGS,'15F') = 0 THEN /* DCL FOR R15 REQUESTED?   */ 63300000
*         EHAREGS = EHAREGS || '15F'; /* NO, REQUEST IT              */ 63350000
*     END;                                                              63400000
*   IF TYPE = '(PGM)' THEN                                              63424900
*     ANS('CALL GPR15P->'||TABVT(I)||                                   63449800
*         '->IPDEF;  /* CALL SERVICE ROUTINE */') COL(MACCOL+2); /*     63474700
*                                      GEN CALL TO ROUTINE           */ 63499600
*   ELSE                            /* NON PGM,                  @L3C*/ 63524500
*     DO;                           /* GEN CODE FOR NON PGM      @L3C*/ 63549400
*       IF NUMBER(SSRVID) ^= 0 THEN /* SSRVID IS SPECIFIED       @L3C*/ 63574300
*         DO;                       /* GEN CODE FOR SSRVID       @L3C*/ 63599200
*           ANS('RESPECIFY (GPR03F) RESTRICTED;') COL(MACCOL+2); /*     63624100
*                                      GEN RESTRICT SSRVID REGISTER     63649000
*                                                                @L2A*/ 63673900
*           IF INDEX(EHAREGS,'03F') = 0 THEN /* DCL FOR SSRVID          63698800
*                                      REGISTER REQUESTED?       @L2A*/ 63723700
*             EHAREGS = EHAREGS || '03F'; /* NO, REQUEST IT      @L2A*/ 63748600
*           ANS('GPR03F='||SSRVID(1)||'*65536;  '||                     63774800
*               '/* LOAD SSRVID INTO HIGH ORDER HALFWORD OF R3 */') COL 63786400
*               (MACCOL+2);         /* GEN LOAD SSRVID INTO HIGH        63798000
*                                      ORDER HALFWORD OF SSRVID         63809600
*                                      REGISTER                  @L2A*/ 63821200
*         END;                      /* ENDDO GEN CODE FOR SSRVID @L2A*/ 63832800
*       ANS('CALL '||TABVT(I)||'->IPDEF;  '||                           63844600
*           '/* CALL SERVICE ROUTINE */') COL(MACCOL+2); /* GEN CALL    63858200
*                                      TO ROUTINE                @L2C*/ 63871800
*       IF NUMBER(SSRVID) ^= 0 THEN /* SSRVID IS SPECIFIED       @L2A*/ 63885400
*         DO;                       /* GEN CODE TO UNRESTRICT SSRVID    63899000
*                                      REGISTER                  @L2A*/ 63912600
*           ANS('RESPECIFY (GPR03F) UNRESTRICTED;') COL(MACCOL+2); /*   63926200
*                                      GEN UNRESTRICT SSRVID REGISTER   63939800
*                                                                @L2A*/ 63953400
*         END;                      /* ENDDO GEN CODE TO UNRESTRICT     63967000
*                                      SSRVID REGISTER           @L2A*/ 63980600
*     END;                          /* ENDDO GEN CODE FOR FOR NON PGM   63994200
*                                                                @L2C*/ 64007800
*   IF SAVEAREA = '(STANDARD)' THEN /* STANDARD REG RESTORING?       */ 64021400
*     DO;                           /* YES: GEN CODE FOR RESTORE     */ 64035000
*       ANS('LM(GPR14F,GPR12F,SA@G1412);  /* RESTORE ISSUERS REGS */')  64050000
*           COL(MACCOL+2);          /* RESTORE REGISTERS CODE        */ 64100000
*       ANS('RESPECIFY (GPR13P) UNRESTRICTED;') COL(MACCOL+2); /* GEN   64150000
*                                      RFY FOR REGS                  */ 64200000
*     END;                                                              64250000
*   IF SAVEAREA = '(PSA)' THEN      /* PSA REGISTER RESTORING?       */ 64300000
*     DO;                           /* YES: GEN CODE FOR RESTORE     */ 64350000
*       ANS('LM(GPR00F,GPR15F,PSATRSAV);  /* RESTORE ISSUERS REGS */')  64400000
*           COL(MACCOL+2);          /* RESTORE REGISTERS CODE        */ 64450000
*     END;                                                              64500000
*   IF SAVEAREA = '(NONE)' THEN     /* RESTORE NO REGISTERS?         */ 64550000
*     DO;                           /* YES: GEN CODE FOR RESTORE     */ 64600000
*       ANS('RESPECIFY (GPR02F,GPR15F) '||'UNRESTRICTED;') COL(MACCOL+2 64650000
*           );                      /* GEN RFY FOR REGS              */ 64700000
*     END;                                                              64750000
*   IF TYPE = '(PGM)' THEN          /* PGM TYPE ?                    */ 64800000
*     DO;                           /* YES: GEN CODE FOR PGM         */ 64850000
*       ANS('RESPECIFY (GPR15P) UNRESTRICTED;') COL(MACCOL+2); /* GEN   64900000
*                                      RFY FOR REGS                  */ 64950000
*     END;                                                              65050000
*   GOTO LHA03000;                                                      65200000
*                                                                       65250000
*   /*****************************************************************/ 65283300
*   /*                                                               */ 65316600
*   /* PROCESS USER TYPE ENTRY                                       */ 65350000
*   /*                                                               */ 65366600
*   /*****************************************************************/ 65383200
*                                                                       65400000
*LHA02000:                                                              65433300
*   ;                                                                   65466600
*                                                                       65500000
*   /*****************************************************************/ 65516600
*   /*                                                               */ 65533200
*   /* TYPE MUST BE 'USR0' THRU 'USRF' (HEX DIGITS 0-F)              */ 65550000
*   /*                                                               */ 65566600
*   /*****************************************************************/ 65583200
*                                                                       65600000
*   IF LENGTH(TYPE(1)) ^= 4 THEN    /* VALID USER TYPE?              */ 65650000
*     DO;                           /* NO: ERROR                     */ 65700000
*       ANS MSG('AHA0043  ''TYPE'' MUST BE ''USRN'' (N IS HEX '||       65750000
*           'DIGIT 0-F).') NORESCAN;                                    65800000
*       RC = 12;                    /* MACRO ERROR                   */ 65850000
*       GOTO LHA03000;                                                  65900000
*     END;                                                              65950000
*   N = TYPE(1,4:4);                /* GET USER TYPE ENTRY NUMBER    */ 66000000
*   IF (N < '0' | N > '9') & (N < 'A' | N > 'F') THEN /* VALID HEX      66050000
*                                      DIGIT 0-F?                    */ 66100000
*     DO;                           /* NO: ERROR                     */ 66150000
*       ANS MSG('AHA0043  ''TYPE'' MUST BE ''USRN'' (N IS HEX '||       66300000
*           'DIGIT 0-F).') NORESCAN;                                    66350000
*       RC = 12;                    /* MACRO ERROR                   */ 66400000
*       GOTO LHA03000;                                                  66450000
*     END;                                                              66500000
*                                                                       66550000
*   /*****************************************************************/ 66558300
*   /*                                                               */ 66566600
*   /* SSRVID MAY NOT BE SPECIFIED                                   */ 66575000
*   /*                                                               */ 66583300
*   /*****************************************************************/ 66591600
*                                                                       66600000
*   IF NUMBER(SSRVID) ^= 0 THEN     /* IF SSRVID IS GIVEN,       @L2A*/ 66603800
*     DO;                           /* PROCESS SSRVID ERROR      @L2A*/ 66607600
*       ANS MSG('AHA0023  ''TYPE'||TYPE||''' INVALID WITH ''SSRVID'' '  66611400
*           ||'OPERAND.');          /* PUT OUT SSRVID ERROR MESSAGE     66614600
*                                                                @L2A*/ 66617800
*       RC = 12;                    /* SET RETURN CODE TO INDICATE      66621000
*                                      MACRO ERROR               @L2A*/ 66624200
*       GOTO LHA03000;              /* BRANCH TO END OF MACRO    @L2A*/ 66627400
*     END;                          /* ENDDO PROCESS SSRVID ERROR       66630600
*                                                                @L2A*/ 66634200
*                                                                       66645600
*   /*****************************************************************/ 66645700
*   /*                                                               */ 66645800
*   /* INLINE MAY NOT BE SPECIFIED                                   */ 66645900
*   /*                                                               */ 66646000
*   /*****************************************************************/ 66646100
*                                                                       66646200
*   IF NUMBER(INLINE) ^= 0 THEN     /* IF INLINE IS GIVEN,       @D1A*/ 66646300
*     DO;                           /* PROCESS INLINE ERROR      @D1A*/ 66646400
*       ANS MSG('AHA0023  ''TYPE'||TYPE||''' INVALID WITH ''INLINE'' '  66646600
*           ||'OPERAND.');          /* PUT OUT INLINE ERROR MESSAGE     66646700
*                                                                @D1A*/ 66646800
*       RC = 12;                    /* SET RETURN CODE TO INDICATE      66646900
*                                      MACRO ERROR               @D1A*/ 66647000
*       GOTO LHA03000;              /* BRANCH TO END OF MACRO    @D1A*/ 66647100
*     END;                          /* ENDDO PROCESS INLINE ERROR       66647200
*                                                                @D1A*/ 66647800
*                                                                       66648400
*   /*****************************************************************/ 66648900
*   /*                                                               */ 66649400
*   /* REGS MUST BE DEFAULTED, '(1)', OR REGISTER PAIR               */ 66650000
*   /*                                                               */ 66666600
*   /*****************************************************************/ 66683200
*                                                                       66700000
*   IF NUMBER(REGS) = 0 | REGS = '((1))' THEN /* DEFAULTED REGS?     */ 66750000
*     DO;                                                               66800000
*       RX = '';                    /* YES: INDICATE DEFAULT         */ 66850000
*       RY = '';                                                        66900000
*     END;                                                              66950000
*   ELSE                                                                67000000
*     DO;                           /* NO: VERIFY REG PAIR           */ 67050000
*       IF NUMBER(REGS) ^= 1 THEN   /* ONE PARM?                     */ 67100000
*         DO;                       /* NO: ERROR                     */ 67150000
*           ANS MSG('AHA0073  ''REGS'' PARAMETER HAS TOO MANY '||       67200000
*               'SUBPARAMETERS.');                                      67250000
*           RC = 12;                /* MACRO ERROR                   */ 67300000
*           GOTO LHA03000;                                              67350000
*         END;                                                          67400000
*       IF NUMBER(REGS(1)) ^= 2 | REGS(1,1,1:1) = '(' | REGS(1,2,1:1) = 67450000
*          '(' THEN                 /* INVALID REGS?                 */ 67500000
*         DO;                       /* NO, ERROR                     */ 67550000
*           ANS MSG('AHA0073 ''REGS'' PARAMETER MUST BE '||             67600000
*               '''REGS((1))'' OR A REGISTER PAIR.');                   67650000
*           RC = 12;                /* MACRO ERROR                   */ 67700000
*           GOTO LHA03000;                                              67750000
*         END;                                                          67800000
*       RX = REGS(1,1);             /* GET FIRST REGISTER            */ 67850000
*       RY = REGS(1,2);             /* GET SECOND REGISTER           */ 67900000
*     END;                                                              67950000
*                                                                       68000000
*   /*****************************************************************/ 68016600
*   /*                                                               */ 68033200
*   /* SAVEAREA MUST BE 'STANDARD'                                   */ 68050000
*   /*                                                               */ 68066600
*   /*****************************************************************/ 68083200
*                                                                       68100000
*   IF SAVEAREA ^= '(STANDARD)' THEN /* INVALID OPTION?              */ 68150000
*     DO;                           /* YES: ERROR                    */ 68200000
*       ANS MSG('AHA0043  ''SAVEAREA(STANDARD)'' MUST BE '||            68250000
*           'SPECIFIED FOR ''TYPE'||TYPE||'''.');                       68300000
*       RC = 12;                    /* MACRO ERROR                   */ 68350000
*       GOTO LHA03000;                                                  68400000
*     END;                                                              68450000
*                                                                       68500000
*   /*****************************************************************/ 68533300
*   /*                                                               */ 68566600
*   /* GENERATE CODE FOR USER TYPE ENTRIES                           */ 68600000
*   /*                                                               */ 68616600
*   /*****************************************************************/ 68633200
*                                                                       68650000
*   ANS('RESPECIFY (GPR00F,GPR01F) RESTRICTED;') COL(MACCOL+2); /*      68700000
*                                      RFY USED REGS                 */ 68750000
*   ANS('GPR00F= '''||N||'''X;  /* INDICATE NUMBER */') COL(MACCOL+2);  68800000
*   IF RX = '' THEN                 /* DEFAULT OR (1)? YES: INDICATE    68850000
*                                      PARM ADDR                     */ 68900000
*     ANS('GEN SETS(GPR01F) (LA    GPR01F,0(0,GPR01F));  /* '||         69150000
*         'INDICATE PARM ADDRESS GIVEN */') COL(MACCOL+2);              69200000
*   ELSE                                                                69250000
*     DO;                           /* NO: INDICATE REG PAIR GIVEN   */ 69300000
*       ANS('GEN SETS(GPR01F) (LA    GPR01F,('||RX||'*X''10'')+'||RY||  69350000
*           '); /* LOAD REG PAIR NUMBERS */') COL(MACCOL+2);            69400000
*       ANS('GPR01F=GPR01F|TRVTRPMK;  /* INDICATE REG '||'PAIR GIVEN */'69450000
*           ) COL(MACCOL+2);                                            69500000
*     END;                                                              69550000
*   ANS('CALL TRVTETUR->IPDEF;     /* CALL SERVICE ROUTINE     */') COL 69560000
*       (MACCOL+2);                 /* GEN CALL TO ROUTINE           */ 69570000
*   ANS('RESPECIFY (GPR00F,GPR01F) UNRESTRICTED;') COL(MACCOL+2); /*    69580000
*                                      GEN RFY FOR USED REGS         */ 69590000
*                                                                       69600000
*   /*****************************************************************/ 69650000
*   /*                                                               */ 69700000
*   /* REQUEST GLOBAL VARIABLE DECLARES FROM EPILOG                  */ 70000000
*   /*                                                               */ 70016600
*   /*****************************************************************/ 70033200
*                                                                       70050000
*   IF INDEX(EHAREGS,'00F') = 0 THEN /* DCL FOR R0 REQUESTED?        */ 70100000
*     EHAREGS = EHAREGS || '00F';   /* NO, REQUEST IT                */ 70150000
*   IF INDEX(EHAREGS,'01F') = 0 THEN /* DCL FOR R1 REQUESTED?        */ 70200000
*     EHAREGS = EHAREGS || '01F';   /* NO, REQUEST IT                */ 70250000
*LHA03000:                                                              70300000
*   ANS('END; '||COMMENT(CMT)) COL(MACCOL);                             70500000
*   RETURN CODE(RC);                /* MACRO END                     */ 70550000
*   %END PTRACE;                                                        70600000
