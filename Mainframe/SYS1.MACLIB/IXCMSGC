*/**** START OF SPECIFICATIONS **************************************** 00000100
*                                                                     * 00000200
*                                                                     * 00000300
*01* MACRO NAME:  IXCMSGC                               -02/26/99-<0> * 00000400
*                                                                     * 00000500
*                                                                     * 00000600
*01* DESCRIPTIVE NAME:  XCF Message Control                           * 00000700
*                                                                     * 00000800
*01* PROPRIETARY STATEMENT:                                           * 00000900
*                                                                     * 00001000
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 00001100
*     THIS MACRO IS "RESTRICTED MATERIALS OF IBM"                     * 00001200
*     5647-A01 (C) COPYRIGHT IBM CORP. 1996, 1999                     * 00001300
*                                                                     * 00001400
* STATUS= HBB6608                                                     * 00001500
*                                                                     * 00001600
*                                                                     * 00001700
*                                                                     * 00001800
*01* FUNCTION:                                                        * 00001900
*                                                                     * 00002000
*                                                                     * 00002100
*      The IXCMSGC macro is the interface to the Cross System         * 00002200
*      Coupling Facility (XCF) Message Control service.               * 00002300
*                                                                     * 00002400
*      An active member of an XCF group uses the Message Control      * 00002500
*      Service to interact with the XCF signalling service.  For      * 00002600
*      example, use the Message Control Service to preserve messages  * 00002700
*      in XCF managed storage for later processing or to complete a   * 00002800
*      message-out (IXCMSGO) request that is waiting for a response   * 00002900
*      to arrive.  See the REQUEST keyword for the complete set of    * 00003000
*      functions provided by the Message Control Service.             * 00003100
*                                                                     * 00003200
*      The Message-Control routine is given control from the IXCMSGC  * 00003300
*      macro.  The IXCMSGC macro will complete the parameter list     * 00003400
*      with caller provided data and generate a stacking program call * 00003500
*      (PC) to the Message-Control service.  Depending on the service * 00003600
*      requested, the PC may be space switching.  The IXCMSGC macro   * 00003700
*      is provided in list, execute, and standard form.  The list     * 00003800
*      form accepts no variable parameters and is used only to        * 00003900
*      reserve space for the Message-Control parameter list.  The     * 00004000
*      standard form is provided for use with routines which do not   * 00004100
*      require reentrant code.  The execute form is provided for use  * 00004200
*      with the list format for reentrant routines.  The IXCMSGC      * 00004300
*      macro is provided in PL/X and assembler formats.               * 00004400
*                                                                     * 00004500
*                                                                     * 00004600
*01* EXTERNAL CLASSIFICATION:  GUPI                                   * 00004700
*                                                                     * 00004800
*01* END OF EXTERNAL CLASSIFICATION:                                  * 00004900
*                                                                     * 00005000
*01* ENVIRONMENT:                                                     * 00005100
*                                                                     * 00005200
*                                                                     * 00005300
*      Minimum authorization: Problem or Supervisor state.  System    * 00005400
*                        PSW key.                                     * 00005500
*                                                                     * 00005600
*      Dispatchable unit mode: Task or SRB mode.                      * 00005700
*                                                                     * 00005800
*                        Note that some request options are valid     * 00005900
*                        only when running in task mode, or when      * 00006000
*                        running as a message exit routine or a       * 00006100
*                        notify exit routine.  Any such restrictions  * 00006200
*                        are explicitly mentioned below.              * 00006300
*                                                                     * 00006400
*      AMODE:            31-bit.                                      * 00006500
*                                                                     * 00006600
*      Cross Memory Mode:                                             * 00006700
*                                                                     * 00006800
*                        Primary equal to the requesting member's     * 00006900
*                        primary at the time the group was joined;    * 00007000
*                        any secondary address space; any home        * 00007100
*                        address space                                * 00007200
*                                                                     * 00007300
*                        Swappable or non-swappable primary address   * 00007400
*                        space                                        * 00007500
*                                                                     * 00007600
*      ASC mode:         Primary or Access Register.                  * 00007700
*                                                                     * 00007800
*                        If in Access Register ASC mode, specify      * 00007900
*                        SYSSTATE ASCENV=AR before invoking this      * 00008000
*                        macro.                                       * 00008100
*                                                                     * 00008200
*      Interrupt status: Enabled for I/O and external interrupts.     * 00008300
*                                                                     * 00008400
*      Locks:            No locks held.                               * 00008500
*                                                                     * 00008600
*      Control parameters: None.                                      * 00008700
*                                                                     * 00008800
*                                                                     * 00008900
*                                                                     * 00009000
*01* RESTRICTIONS:                                                    * 00009100
*                                                                     * 00009200
*01* INPUT REGISTER INFORMATION:                                      * 00009300
*                                                                     * 00009400
*                                                                     * 00009500
*    REGISTER  CONTENTS                                               * 00009600
*                                                                     * 00009700
*    GR0-GR1   reserved                                               * 00009800
*                                                                     * 00009900
*    GR2-GR13  undefined                                              * 00010000
*                                                                     * 00010100
*    GR14-GR15 reserved                                               * 00010200
*                                                                     * 00010300
*    AR0-AR1   reserved                                               * 00010400
*                                                                     * 00010500
*    AR2-AR13  undefined                                              * 00010600
*                                                                     * 00010700
*    AR14-AR15 reserved                                               * 00010800
*                                                                     * 00010900
*                                                                     * 00011000
*                                                                     * 00011100
*01* OUTPUT REGISTER INFORMATION:                                     * 00011200
*                                                                     * 00011300
*                                                                     * 00011400
*    REGISTER  CONTENTS                                               * 00011500
*                                                                     * 00011600
*    GR0       reason code based on GR15                              * 00011700
*                                                                     * 00011800
*    GR1       used as work register by the system                    * 00011900
*                                                                     * 00012000
*    GR2-GR13  unchanged                                              * 00012100
*                                                                     * 00012200
*    GR14      used as work register by the system                    * 00012300
*                                                                     * 00012400
*    GR15      return code                                            * 00012500
*                                                                     * 00012600
*    AR0-AR1   used as work registers by the system                   * 00012700
*                                                                     * 00012800
*    AR2-AR13  unchanged                                              * 00012900
*                                                                     * 00013000
*    AR14-AR15 used as work registers by the system                   * 00013100
*                                                                     * 00013200
*                                                                     * 00013300
*                                                                     * 00013400
*01* PERFORMANCE IMPLICATIONS:                                        * 00013500
*                                                                     * 00013600
*    None.                                                            * 00013700
*                                                                     * 00013800
*01* SYNTAX:                                                          * 00013900
*                                                                     * 00014000
*[xlabel]  IXCMSGC     MEMTOKEN=xmemtoken                             * 00014100
*                    ,REQUEST=SAVEMSG                                * 00014200
*                   |     ,TOKEN=xtoken                               * 00014300
*                   |    [,USERDATA=xuserdata|NO_CHANGE]            * 00014400
*                   |    [,RETMSGTOKEN=xretmsgtoken]                  * 00014500
*                    ,REQUEST=DISCARDMSG                             * 00014600
*                   |     ,TOKEN=xtoken                               * 00014700
*                    ,REQUEST=QUERYMSG                               * 00014800
*                   |    ,DATATYPE=MSGOUT                            * 00014900
*                   |   |    ,STATUS=SAVED                           * 00015000
*                   |   |    ,STATUS=COMPLETE                        * 00015100
*                   |   |    ,STATUS=INCOMPLETE                      * 00015200
*                   |    ,DATATYPE=MSGIN                             * 00015300
*                   |   |    [,SOURCE=xsource|ANY]                  * 00015400
*                   |    ,DATATYPE=DETAIL                            * 00015500
*                   |         ,TOKEN=xtoken                           * 00015600
*                   |     ,ANSAREA=xansarea                           * 00015700
*                   |     ,ANSLEN=xanslen                             * 00015800
*                    ,REQUEST=COMPLETION                             * 00015900
*                   |    ,TYPE=FORCE                                 * 00016000
*                   |   |    [,USERDATA=xuserdata|NO_CHANGE]        * 00016100
*                   |   | ,TOKEN=xtoken                               * 00016200
*                    ,REQUEST=CALLEXIT                               * 00016300
*                        ,NOTIFYEXIT=xnotifyexit                     * 00016400
*                        ,MSGEXIT=xmsgexit                           * 00016500
*                        [,EXITPARMS=xexitparms|ZERO]               * 00016600
*                         ,TOKEN=xtoken                               * 00016700
*                    [,RETCODE=xretcode]                              * 00016800
*                    [,RSNCODE=xrsncode]                              * 00016900
*                    [,PLISTVER=xplistver|IMPLIED_VERSION]          * 00017000
*                   [,MF=S]                                          * 00017100
*                   [,MF=(L,xmfctrl,xmfattr|0D)]                   * 00017200
*                   [,MF=(E,xmfctrl,COMPLETE)]                     * 00017300
*                                                                     * 00017400
*                                                                     * 00017500
*      Where:                                                         * 00017600
*                                                                     * 00017700
*                                                                     * 00017800
*      [xlabel]                                                       * 00017900
*          is an optional symbol, starting in column 1, that is the   * 00018000
*          name on the IXCMSGC macro invocation.  The name must       * 00018100
*          conform to the rules for an ordinary assembler language    * 00018200
*          symbol.                                                    * 00018300
*          DEFAULT: No name.                                          * 00018400
*                                                                     * 00018500
*                                                                     * 00018600
*                                                                     * 00018700
*                                                                     * 00018800
*      MEMTOKEN=xmemtoken                                             * 00018900
*          is the name (RS-type), or address in register (2)-(12), of * 00019000
*          a required 64 bit input variable containing the member     * 00019100
*          token (as returned by IXCJOIN) which identifies the member * 00019200
*          making the request.                                        * 00019300
*                                                                     * 00019400
*                                                                     * 00019500
*                                                                     * 00019600
*                                                                     * 00019700
*      REQUEST=SAVEMSG|DISCARDMSG|QUERYMSG|COMPLETION|CALLEXIT      * 00019800
*          is a required keyword input that indicates the type of     * 00019900
*          request to process                                         * 00020000
*                                                                     * 00020100
*                                                                     * 00020200
*          REQUEST=SAVEMSG                                            * 00020300
*              The message presented to an exit routine and           * 00020400
*              identified by TOKEN is to be saved for later           * 00020500
*              processing.  This request is valid only when invoked   * 00020600
*              from a message exit routine or a notification exit     * 00020700
*              routine.  If the exit routine neither saves the        * 00020800
*              message with this service, nor receives the message by * 00020900
*              invoking the XCF Message-In Service, the message is    * 00021000
*              automatically discarded by XCF when the exit routine   * 00021100
*              gives up control.                                      * 00021200
*                                                                     * 00021300
*              Once the exit routine saves the message, the message   * 00021400
*              token passed via the TOKEN keyword is invalidated.  In * 00021500
*              particular, the message is no longer available to the  * 00021600
*              exit routine for message-in processing.  A saved       * 00021700
*              message can be processed by invoking the Message       * 00021800
*              Control CALLEXIT Service.                              * 00021900
*                                                                     * 00022000
*              Saved messages are automatically discarded by XCF when * 00022100
*              the member becomes not active.  An active member can   * 00022200
*              discard its saved message by invoking the Message      * 00022300
*              Control DISCARDMSG Service.                            * 00022400
*                                                                     * 00022500
*              For a message saved from within a message exit         * 00022600
*              routine, the undelivered portion of the message is     * 00022700
*              saved along with whatever data is needed to create a   * 00022800
*              new Message Exit Parameter List (MEPL, mapped by       * 00022900
*              IXCYMEPL).  For example, some of the data saved with   * 00023000
*              the message includes the source member token, the      * 00023100
*              target member token, and the sender's message control  * 00023200
*              data.  Once Message-in processing moves message data   * 00023300
*              into the member's buffer area, that data is considered * 00023400
*              delivered.  It cannot be redelivered (using the XCF    * 00023500
*              Message Control CALLEXIT Service) nor can it be saved. * 00023600
*              If a partially delivered message is saved, only the    * 00023700
*              undelivered portion of the message is presented to a   * 00023800
*              message exit routine as a result of invoking the       * 00023900
*              Message Control Service with a CALLEXIT request.  The  * 00024000
*              message cannot be saved once the Message-in Service    * 00024100
*              has delivered all the message data (the message token  * 00024200
*              is invalidated).                                       * 00024300
*                                                                     * 00024400
*              From within a notify exit routine, one or more         * 00024500
*              messages are eligible to be saved.  The message and    * 00024600
*              any responses still associated with it can be saved as * 00024700
*              a single entity, or each individual response can be    * 00024800
*              saved independently of the message.                    * 00024900
*                                                                     * 00025000
*              When saving a message and its responses (if any) as a  * 00025100
*              single entity, the data saved is sufficient to create  * 00025200
*              a new Message Notification Parameter List (MNPL,       * 00025300
*              mapped by IXCYMNPL) that contains a descriptor for the * 00025400
*              message itself (MnplMsgoutRecord) and a table of       * 00025500
*              target/response information.  When a message/response  * 00025600
*              entity is saved, the message token passed via the      * 00025700
*              TOKEN keyword is invalidated.  Furthermore, all the    * 00025800
*              message tokens (MnplTrMsgiToken) for the individual    * 00025900
*              responses associated with the message/response entity  * 00026000
*              are also invalidated.  The saved message/response      * 00026100
*              entity and its associated responses can be processed   * 00026200
*              at a later time by invoking the Message Control        * 00026300
*              CALLEXIT Service, specifying NOTIFYEXIT.               * 00026400
*                                                                     * 00026500
*              When saving an individual response independently of    * 00026600
*              the message/response entity, the undelivered portion   * 00026700
*              of the response is saved along with whatever data is   * 00026800
*              needed to create a new Message Exit Parameter List     * 00026900
*              (MEPL, mapped by IXCYMEPL).  A saved response is then  * 00027000
*              considered an independent message.  The message token  * 00027100
*              passed via the TOKEN keyword is invalidated.  In       * 00027200
*              particular, note that the notify exit routine cannot   * 00027300
*              directly use the message-in service to access the      * 00027400
*              response data after it has been saved independently of * 00027500
*              the message/response entity.  A saved response can be  * 00027600
*              processed by invoking the Message Control CALLEXIT     * 00027700
*              Service service, specifying MSGEXIT.                   * 00027800
*                                                                     * 00027900
*                                                                     * 00028000
*              TOKEN=xtoken                                           * 00028100
*                  is the name (RS-type), or address in register      * 00028200
*                  (2)-(12), of a required 16 character input that    * 00028300
*                  identifies the message to be saved.  This token is * 00028400
*                  invalidated once the message is saved.             * 00028500
*                                                                     * 00028600
*                  The message presented to a message exit routine is * 00028700
*                  identified by the message token (MeplMsgiToken)    * 00028800
*                  passed in the Message Exit Parameter List (MEPL,   * 00028900
*                  mapped by IXCYMEPL).                               * 00029000
*                                                                     * 00029100
*                  When running in a notify exit, the message and its * 00029200
*                  associated responses (if any) are identified as a  * 00029300
*                  single entity by the message token (MnplMsgoToken) * 00029400
*                  passed in the Message Notification Parameter List  * 00029500
*                  (MNPL, mapped by IXCYMNPL).  An individual         * 00029600
*                  response is identified by the message token        * 00029700
*                  (MnplTrMsgiToken) passed in the MNPL.              * 00029800
*                                                                     * 00029900
*                                                                     * 00030000
*                                                                     * 00030100
*                                                                     * 00030200
*              [USERDATA=xuserdata|NO_CHANGE]                       * 00030300
*                  is the name (RS-type), or address in register      * 00030400
*                  (2)-(12), of an optional 8 character input area    * 00030500
*                  containing user data to be associated with the     * 00030600
*                  saved message.                                     * 00030700
*                                                                     * 00030800
*                  This data is presented to the exit routine when    * 00030900
*                  the message is processed at a later time by        * 00031000
*                  invoking the Message Control Service with a        * 00031100
*                  CALLEXIT request.  For a message exit routine,     * 00031200
*                  MeplExUserData within the Message Exit Parameter   * 00031300
*                  List contains this user data when the CallExit     * 00031400
*                  service passes control to the message exit         * 00031500
*                  routine.  For a notify exit routine,               * 00031600
*                  MnplMsgoUserData within the Message Notification   * 00031700
*                  Parameter List contains this user data when the    * 00031800
*                  CallExit service passes control to the notify exit * 00031900
*                  routine.                                           * 00032000
*                  DEFAULT: NO_CHANGE - existing user data left as is * 00032100
*                                                                     * 00032200
*                                                                     * 00032300
*                                                                     * 00032400
*                                                                     * 00032500
*              [RETMSGTOKEN=xretmsgtoken]                             * 00032600
*                  is the name (RS-type), or address in register      * 00032700
*                  (2)-(12), of an optional 16 character output area  * 00032800
*                  that is to contain a token that identifies the     * 00032900
*                  saved message.                                     * 00033000
*                                                                     * 00033100
*                  The storage area indicated by RETMSGTOKEN must     * 00033200
*                  either be in the caller's primary address space or * 00033300
*                  in an address/data space that is addressable       * 00033400
*                  through a public entry on the caller's             * 00033500
*                  dispatchable unit access list (DU-AL), or in a     * 00033600
*                  common area data space.                            * 00033700
*                                                                     * 00033800
*                  Pass this token to the XCF Message Control Service * 00033900
*                  when invoking the DISCARDMSG or CALLEXIT services. * 00034000
*                  If RETMSGTOKEN is not coded, a token for the       * 00034100
*                  message can be obtained by invoking the Message    * 00034200
*                  Control QUERYMSG service.                          * 00034300
*                                                                     * 00034400
*                                                                     * 00034500
*                                                                     * 00034600
*          REQUEST=DISCARDMSG                                         * 00034700
*              The message identified by TOKEN is to be discarded.  A * 00034800
*              discarded message will no longer be available for      * 00034900
*              processing.  For example, a discarded message will not * 00035000
*              be presented to any exit routine, nor will it be       * 00035100
*              visible to the Message Control QUERYMSG Service.  Any  * 00035200
*              responses still associated with a message/response     * 00035300
*              entity will be discarded, but saved responses will not * 00035400
*              be discarded since saving a response causes it to      * 00035500
*              become disassociated from the message/response entity. * 00035600
*                                                                     * 00035700
*              If a message is not explicitly saved by an exit        * 00035800
*              routine nor received by invoking the XCF Message-In    * 00035900
*              Service, it is automatically discarded by XCF when the * 00036000
*              exit routine gives up control.  Thus most members do   * 00036100
*              not need to use the DISCARDMSG service from within an  * 00036200
*              exit routine when they elect not to process the        * 00036300
*              message.  In fact, the automatic discard by XCF is     * 00036400
*              preferred over an explicit discard from within an exit * 00036500
*              routine since the automatic discard incurs less system * 00036600
*              overhead.                                              * 00036700
*                                                                     * 00036800
*              If a message is discarded while an exit routine is     * 00036900
*              processing that same message, subsequent attempts by   * 00037000
*              the exit routine to process the message with XCF       * 00037100
*              services will be rejected with a return/reason code    * 00037200
*              indicating that the message has been discarded.        * 00037300
*              Depending on the timing, the current operation being   * 00037400
*              performed by the exit routine may be allowed to        * 00037500
*              complete before the message is discarded.  In such a   * 00037600
*              case, the DISCARDMSG service returns with the discard  * 00037700
*              of the message left pending.                           * 00037800
*                                                                     * 00037900
*              Incomplete message-out requests can be discarded       * 00038000
*              before the message completes.  For example, a message  * 00038100
*              queued by XCF due to a lack of signalling resources,   * 00038200
*              or a message whose XCF managed response collection is  * 00038300
*              not complete can be discarded.  Such a discard has the * 00038400
*              effect of cancelling the message-out request.  For a   * 00038500
*              broadcast to multiple targets, any remaining unsent    * 00038600
*              messages will not be sent.  Collected responses, if    * 00038700
*              any, are discarded.  Any response that subsequently    * 00038800
*              arrives for the cancelled message is also discarded by * 00038900
*              XCF.  The notification exit will not be called for the * 00039000
*              cancelled message.  Note that if XCF has initiated a   * 00039100
*              send to a particular target member prior to the        * 00039200
*              cancellation, those message(s) will be delivered as    * 00039300
*              usual.                                                 * 00039400
*                                                                     * 00039500
*              Use the XCF Message Control COMPLETION Service to      * 00039600
*              FORCE a message-out request to be stopped in a way     * 00039700
*              that preserves the request for further processing by   * 00039800
*              the member.                                            * 00039900
*                                                                     * 00040000
*                                                                     * 00040100
*              TOKEN=xtoken                                           * 00040200
*                  is the name (RS-type), or address in register      * 00040300
*                  (2)-(12), of a required 16 character input that    * 00040400
*                  identifies the message to be discarded.            * 00040500
*                                                                     * 00040600
*                  The token for an incoming message can be obtained  * 00040700
*                  from the XCF Message Control SAVEMSG Service via   * 00040800
*                  the RETMSGTOKEN keyword, or from the Message       * 00040900
*                  Control QUERYMSG Service (specify MSGIN for        * 00041000
*                  DATATYPE).  A token from the Message Exit          * 00041100
*                  Parameter List (MeplMsgiToken) or from the Message * 00041200
*                  Notification Parameter List (MnplTrMsgiToken) for  * 00041300
*                  a response message can also be used if the exit    * 00041400
*                  routine has not finished processing the message.   * 00041500
*                  These tokens are invalidated if the exit routine   * 00041600
*                  saves the message, discards the message, receives  * 00041700
*                  all the message data, or gives up control.  Also   * 00041800
*                  note that the message token for response message   * 00041900
*                  (MnplTrMsgiToken) is also invalidated if the       * 00042000
*                  notify exit finshes processing the                 * 00042100
*                  message/response entity.                           * 00042200
*                                                                     * 00042300
*                  For a message/response entity, the token can be    * 00042400
*                  obtained from the Message-out Service via the      * 00042500
*                  RETMSGOTOKEN keyword, from the Message Control     * 00042600
*                  SAVEMSG Service via the RETMSGTOKEN keyword, or    * 00042700
*                  from the Message Control QUERYMSG Service (specify * 00042800
*                  MSGOUT for DATATYPE).  A token from the Message    * 00042900
*                  Notification Parameter List (MnplMsgoToken) can    * 00043000
*                  also be used if the notify exit routine has not    * 00043100
*                  finished processing the message/response entity.   * 00043200
*                  This token is invalidated if the exit routine      * 00043300
*                  saves the message, discards the message, or gives  * 00043400
*                  up control.                                        * 00043500
*                                                                     * 00043600
*                                                                     * 00043700
*                                                                     * 00043800
*          REQUEST=QUERYMSG                                           * 00043900
*              Information appropriate for the requested DATATYPE of  * 00044000
*              query is to be placed in the storage area indicated by * 00044100
*              ANSAREA.  The contents of the answer area is mapped by * 00044200
*              macro IXCYMQAA.  DO NOT HARD CODE THE LENGTH OF THE    * 00044300
*              RECORDS.  USE THE LENGTH AND OFFSETS PROVIDED IN EACH  * 00044400
*              RECORD (to ensure compatibility with additional data   * 00044500
*              provided in the future).                               * 00044600
*                                                                     * 00044700
*                                                                     * 00044800
*              DATATYPE=MSGOUT|MSGIN|DETAIL                         * 00044900
*                  is a required keyword input that indicates what    * 00045000
*                  information is to be collected.                    * 00045100
*                                                                     * 00045200
*                                                                     * 00045300
*                  DATATYPE=MSGOUT                                    * 00045400
*                      Requests summary information about messages    * 00045500
*                      sent by the member through use of the          * 00045600
*                      Message-out Service (IXCMSGO).  The data       * 00045700
*                      returned for each message includes a token     * 00045800
*                      that identifies the message, user data         * 00045900
*                      associated with the message, and the status of * 00046000
*                      the message.  This data is mapped by the       * 00046100
*                      MqaMsgOutSummary record defined in the macro   * 00046200
*                      IXCYMQAA.                                      * 00046300
*                                                                     * 00046400
*                      Note that a message reported by this query may * 00046500
*                      not exist by the time the member making the    * 00046600
*                      query attempts to use the message token        * 00046700
*                      returned in the answer area.  For example, a   * 00046800
*                      message that was incomplete at the time of the * 00046900
*                      query could complete and get processed by the  * 00047000
*                      notify exit routine before the member can use  * 00047100
*                      the message token from the query.              * 00047200
*                                                                     * 00047300
*                                                                     * 00047400
*                      STATUS=SAVED|COMPLETE|INCOMPLETE             * 00047500
*                          is a required keyword input that indicates * 00047600
*                          the status of the message-out requests for * 00047700
*                          which data is to be collected.             * 00047800
*                                                                     * 00047900
*                                                                     * 00048000
*                          STATUS=SAVED                               * 00048100
*                              Collect information about messages     * 00048200
*                              that were saved through use of the     * 00048300
*                              Message Control SAVEMSG Service.       * 00048400
*                              These messages would be the            * 00048500
*                              message/response entities saved by the * 00048600
*                              user notify exit.                      * 00048700
*                                                                     * 00048800
*                          STATUS=COMPLETE                            * 00048900
*                              Collect information about messages     * 00049000
*                              that are completed.                    * 00049100
*                                                                     * 00049200
*                              A message is considered to have        * 00049300
*                              completed if it times-out or if the    * 00049400
*                              Message Control COMPLETION Service is  * 00049500
*                              used to FORCE completion.  A message   * 00049600
*                              without response is considered         * 00049700
*                              complete as soon as XCF has initiated  * 00049800
*                              the send of the message.  If the       * 00049900
*                              message is broadcast to multiple       * 00050000
*                              targets, the message is considered     * 00050100
*                              complete when XCF has initiated the    * 00050200
*                              send of the message to each valid      * 00050300
*                              target member.  Note that the message  * 00050400
*                              is still considered complete even if   * 00050500
*                              the initial send fails and XCF has to  * 00050600
*                              resend the message to an intended      * 00050700
*                              target member.  In particular, the     * 00050800
*                              fact that a send without response is   * 00050900
*                              completed implies nothing about        * 00051000
*                              whether the message has been delivered * 00051100
*                              to the target member or even whether   * 00051200
*                              the message data has been transferred  * 00051300
*                              to the system on which the target      * 00051400
*                              member resides.  A message with        * 00051500
*                              response is considered complete when   * 00051600
*                              the expected response(s) arrive.       * 00051700
*                                                                     * 00051800
*                          STATUS=INCOMPLETE                          * 00051900
*                              Collect information about messages     * 00052000
*                              that have not yet completed.  For      * 00052100
*                              example, the message might have been   * 00052200
*                              queued due to an XCF signal buffer     * 00052300
*                              shortage, or in the case of a          * 00052400
*                              response-required signal,  a response  * 00052500
*                              to the message might not have arrived, * 00052600
*                              and the message has not yet timed-out. * 00052700
*                                                                     * 00052800
*                                                                     * 00052900
*                                                                     * 00053000
*                                                                     * 00053100
*                                                                     * 00053200
*                  DATATYPE=MSGIN                                     * 00053300
*                      Requests summary information about incoming    * 00053400
*                      messages that were saved by the member.        * 00053500
*                      Information is collected for messages that     * 00053600
*                      were saved by the user message exit routine,   * 00053700
*                      or for responses saved by the user notify exit * 00053800
*                      routine.  The data returned for each message   * 00053900
*                      includes a token that identifies the message,  * 00054000
*                      user data associated with the message, and the * 00054100
*                      member token of the member that sent the       * 00054200
*                      message.  This data is mapped by the           * 00054300
*                      MqaMsgInSummary record defined in the macro    * 00054400
*                      IXCYMQAA.                                      * 00054500
*                                                                     * 00054600
*                                                                     * 00054700
*                      [SOURCE=xsource|ANY]                         * 00054800
*                          is the name (RS-type), or address in       * 00054900
*                          register (2)-(12), of an optional 64 bit   * 00055000
*                          input containing a member token.  The      * 00055100
*                          query service will collect only the        * 00055200
*                          incoming messages sent by the specified    * 00055300
*                          member.                                    * 00055400
*                          DEFAULT: ANY - Collect messages sent by    * 00055500
*                          any member                                 * 00055600
*                                                                     * 00055700
*                                                                     * 00055800
*                                                                     * 00055900
*                  DATATYPE=DETAIL                                    * 00056000
*                      Requests detail information about the message  * 00056100
*                      identified by TOKEN.  The data returned for    * 00056200
*                      the message depends on the type of message.    * 00056300
*                                                                     * 00056400
*                      For a message/response entity, the data        * 00056500
*                      returned includes a token that identifies the  * 00056600
*                      message, user data associated with the         * 00056700
*                      message, number of targets for the message,    * 00056800
*                      and a table of target/response data with an    * 00056900
*                      entry for each possible target that describes  * 00057000
*                      the result of the send and the associated      * 00057100
*                      response collection (if any).  This data is    * 00057200
*                      mapped by the MqaMsgOutDetail record defined   * 00057300
*                      in the macro IXCYMQAA.                         * 00057400
*                                                                     * 00057500
*                      For a message saved by the user message exit   * 00057600
*                      routine or for a response saved by the user    * 00057700
*                      notify exit routine, the data returned         * 00057800
*                      includes a token that identifies the message,  * 00057900
*                      user data associated with the message, the     * 00058000
*                      member token of the member that sent the       * 00058100
*                      message, message length, and message control   * 00058200
*                      data from the sender.  This data is mapped by  * 00058300
*                      the MqaMsgInDetail record defined in the macro * 00058400
*                      IXCYMQAA.                                      * 00058500
*                                                                     * 00058600
*                                                                     * 00058700
*                      TOKEN=xtoken                                   * 00058800
*                          is the name (RS-type), or address in       * 00058900
*                          register (2)-(12), of a required 16        * 00059000
*                          character input that identifies the        * 00059100
*                          message for which detail information is to * 00059200
*                          be collected.                              * 00059300
*                                                                     * 00059400
*                          The message token can be obtained from the * 00059500
*                          XCF Message Control SAVEMSG Service via    * 00059600
*                          the RETMSGTOKEN keyword, from the XCF      * 00059700
*                          Message-out Service via the RETMSGOTOKEN   * 00059800
*                          keyword, from or from the Message Control  * 00059900
*                          QUERYMSG Service (specify MSGOUT or MSGIN  * 00060000
*                          for DATATYPE).                             * 00060100
*                                                                     * 00060200
*                                                                     * 00060300
*                                                                     * 00060400
*                                                                     * 00060500
*                                                                     * 00060600
*                                                                     * 00060700
*                                                                     * 00060800
*                                                                     * 00060900
*              ANSAREA=xansarea                                       * 00061000
*                  is the name (RS-type), or address in register      * 00061100
*                  (2)-(12), of a required character output variable  * 00061200
*                  which is to contain the data returned by the       * 00061300
*                  QUERYMSG service.  The data placed in the answer   * 00061400
*                  area consists of a header record (MqaHeader)       * 00061500
*                  followed by zero or more records appropriate to    * 00061600
*                  the type of query.  The mappings for the header    * 00061700
*                  record and data records are defined by the         * 00061800
*                  IXCYMQAA macro.                                    * 00061900
*                                                                     * 00062000
*                  The storage area indicated by ANSAREA must either  * 00062100
*                  be in the caller's primary address space or in an  * 00062200
*                  address/data space that is addressable through a   * 00062300
*                  public entry on the caller's dispatchable unit     * 00062400
*                  access list (DU-AL) or in a common area data       * 00062500
*                  space.                                             * 00062600
*                                                                     * 00062700
*                                                                     * 00062800
*                                                                     * 00062900
*                                                                     * 00063000
*              ANSLEN=xanslen                                         * 00063100
*                  is the name (RS-type), or address in register      * 00063200
*                  (2)-(12), of a required fullword input variable,   * 00063300
*                  or a decimal value, which contains the length in   * 00063400
*                  bytes of the answer area indicated by ANSAREA.     * 00063500
*                                                                     * 00063600
*                  The length of the answer area must be large enough * 00063700
*                  to contain a complete header record (MqaHeader).   * 00063800
*                  If the answer area is not large enough to contain  * 00063900
*                  all the available data records, data collection    * 00064000
*                  stops.  The header record indicates how much       * 00064100
*                  storage would have been needed to collect all the  * 00064200
*                  data for the request (MqaHdrTLen).  Note that the  * 00064300
*                  amount of storage needed to collect all the data   * 00064400
*                  can change by the time a new query is attempted.   * 00064500
*                                                                     * 00064600
*                                                                     * 00064700
*                                                                     * 00064800
*          REQUEST=COMPLETION                                         * 00064900
*              The message identified by TOKEN is to be completed.    * 00065000
*              COMPLETION can be requested for a message-out request  * 00065100
*              that XCF has accepted for delivery, but does not       * 00065200
*              consider complete.                                     * 00065300
*                                                                     * 00065400
*              A message-out request is considered complete if it     * 00065500
*              times-out or if the Message Control COMPLETION Service * 00065600
*              is used to force its completion.  A message without    * 00065700
*              response is considered complete as soon as XCF has     * 00065800
*              initiated the send of the message.  If the message is  * 00065900
*              broadcast to multiple targets, the message is          * 00066000
*              considered complete when XCF has initiated the send of * 00066100
*              the message to every valid target member.  A message   * 00066200
*              with response is considered complete when the expected * 00066300
*              response(s) arrive.                                    * 00066400
*                                                                     * 00066500
*              Once completed, processing for the message continues   * 00066600
*              just as it would have had the message completed        * 00066700
*              without direct intervention.  XCF will no longer       * 00066800
*              attempt to send the message to any intended target.    * 00066900
*              Any responses to the message that subsequently arrive  * 00067000
*              will be discarded.  If notification was to be provided * 00067100
*              upon completion of the message, the user notify exit   * 00067200
*              will receive control.  If not, the Message Control     * 00067300
*              CALLEXIT service can be used to call a user notify     * 00067400
*              exit routine if desired.                               * 00067500
*                                                                     * 00067600
*              Use the Message Control DISCARDMSG Service to force a  * 00067700
*              message-out request to be stopped in a way that makes  * 00067800
*              the message unavailable for further processing.        * 00067900
*                                                                     * 00068000
*                                                                     * 00068100
*              TYPE=FORCE                                            * 00068200
*                  is a required keyword input that indicates the     * 00068300
*                  type of completion to be performed.                * 00068400
*                                                                     * 00068500
*                                                                     * 00068600
*                  TYPE=FORCE                                         * 00068700
*                      The message is to be immediately considered as * 00068800
*                      complete.  This type of completion is much     * 00068900
*                      like forcing the message time-out value to     * 00069000
*                      expire immediately.                            * 00069100
*                                                                     * 00069200
*                                                                     * 00069300
*                      [USERDATA=xuserdata|NO_CHANGE]               * 00069400
*                          is the name (RS-type), or address in       * 00069500
*                          register (2)-(12), of an optional 8        * 00069600
*                          character input area containing user data  * 00069700
*                          to be associated with the completed        * 00069800
*                          message.  Note that the current user data  * 00069900
*                          associated with the message is replaced by * 00070000
*                          this USERDATA only if this invocation of   * 00070100
*                          the COMPLETION service causes the message  * 00070200
*                          to be considered complete.                 * 00070300
*                                                                     * 00070400
*                          The field MnplMsgoUserData within the      * 00070500
*                          Message Notification Parameter List        * 00070600
*                          contains this user data when the message   * 00070700
*                          is presented to the notify exit routine.   * 00070800
*                          DEFAULT: NO_CHANGE - existing user data    * 00070900
*                          left as is                                 * 00071000
*                                                                     * 00071100
*                                                                     * 00071200
*                                                                     * 00071300
*                                                                     * 00071400
*                                                                     * 00071500
*                                                                     * 00071600
*                                                                     * 00071700
*                                                                     * 00071800
*              TOKEN=xtoken                                           * 00071900
*                  is the name (RS-type), or address in register      * 00072000
*                  (2)-(12), of a required 16 character input that    * 00072100
*                  identifies the message to be completed.            * 00072200
*                                                                     * 00072300
*                  This token is available from the Message-out       * 00072400
*                  Service (IXCMSGO) via the keyword RETMSGOTOKEN, or * 00072500
*                  from the Message Control QUERYMSG Service via a    * 00072600
*                  MSGOUT query for INCOMPLETE messages.              * 00072700
*                                                                     * 00072800
*                                                                     * 00072900
*                                                                     * 00073000
*          REQUEST=CALLEXIT                                           * 00073100
*              A user exit routine is to be called to process the     * 00073200
*              message identified by TOKEN.  Use the CALLEXIT service * 00073300
*              to process a saved message.  The type of exit called   * 00073400
*              must be appropriate for the message.  Messages saved   * 00073500
*              by a message exit routine and responses saved by a     * 00073600
*              notify exit routine must be processed by a message     * 00073700
*              exit routine.  Saved message/response entities must be * 00073800
*              processed by a notify exit routine.                    * 00073900
*                                                                     * 00074000
*              The CALLEXIT service first passes control to an XCF    * 00074100
*              service routine.  The XCF service routine sets up the  * 00074200
*              appropriate environment, collects information          * 00074300
*              pertinent to the message, and calls the indicated user * 00074400
*              exit routine.  The user exit routine receives control  * 00074500
*              under the same unit of work as the invoker of the      * 00074600
*              CALLEXIT service (ie, synchronously).  The user exit   * 00074700
*              routine performs whatever processing it deems suitable * 00074800
*              and then returns to the XCF service routine.  The XCF  * 00074900
*              service routine releases resources as necessary,       * 00075000
*              restores the environment and returns control to the    * 00075100
*              invoker of the CALLEXIT service.                       * 00075200
*                                                                     * 00075300
*              Only one exit routine is allowed to process a          * 00075400
*              particular message at any one time.  The CALLEXIT      * 00075500
*              request is rejected if an exit routine is already      * 00075600
*              processing the message.                                * 00075700
*                                                                     * 00075800
*                                                                     * 00075900
*              The following is a set of mutually exclusive keys.     * 00076000
*              This set is required; only one key must be specified.  * 00076100
*                                                                     * 00076200
*                                                                     * 00076300
*              NOTIFYEXIT=xnotifyexit                                 * 00076400
*                  belongs to a set of mutually exclusive keys. It is * 00076500
*                  an input.  It is the name (RS-type), or address in * 00076600
*                  register (2)-(12), of a 31 bit notify exit routine * 00076700
*                  in the issuer's address space to receive control.  * 00076800
*                                                                     * 00076900
*                  The exit routine need not be the same one defined  * 00077000
*                  when the member invoked the IXCJOIN service to     * 00077100
*                  join the group.                                    * 00077200
*                                                                     * 00077300
*              MSGEXIT=xmsgexit                                       * 00077400
*                  belongs to a set of mutually exclusive keys. It is * 00077500
*                  an input.  It is the name (RS-type), or address in * 00077600
*                  register (2)-(12), of a 31 bit message exit        * 00077700
*                  routine in the issuer's address space to receive   * 00077800
*                  control.                                           * 00077900
*                                                                     * 00078000
*                  The exit routine need not be the same one defined  * 00078100
*                  when the member invoked the IXCJOIN service to     * 00078200
*                  join the group.                                    * 00078300
*                                                                     * 00078400
*                                                                     * 00078500
*                                                                     * 00078600
*              End of a set of mutually exclusive required keys.      * 00078700
*                                                                     * 00078800
*                                                                     * 00078900
*                                                                     * 00079000
*              [EXITPARMS=xexitparms|ZERO]                          * 00079100
*                  is the name (RS-type), or address in register      * 00079200
*                  (2)-(12), of an optional 64 bit input area         * 00079300
*                  containing user parameters to be passed to the     * 00079400
*                  exit routine.  The content and meaning of this     * 00079500
*                  area is up to the user to define.  For example it  * 00079600
*                  might be used to pass the address and ALET of a    * 00079700
*                  storage area containing information that           * 00079800
*                  determines how the exit routine should perform its * 00079900
*                  processing.                                        * 00080000
*                                                                     * 00080100
*                  For a message exit routine, MeplExExitParms within * 00080200
*                  the Message Exit Parameter List (MEPL, mapped by   * 00080300
*                  macro IXCYMEPL) contains a copy of these           * 00080400
*                  parameters.                                        * 00080500
*                                                                     * 00080600
*                  For a notify exit routine,  MnplExitParms within   * 00080700
*                  the Message Notification Parameter List (MNPL,     * 00080800
*                  mapped by macro IXCYMNPL) contains a copy of these * 00080900
*                  parameters.                                        * 00081000
*                  DEFAULT: ZERO - parameters set to hexadecimal zero * 00081100
*                                                                     * 00081200
*                                                                     * 00081300
*                                                                     * 00081400
*                                                                     * 00081500
*              TOKEN=xtoken                                           * 00081600
*                  is the name (RS-type), or address in register      * 00081700
*                  (2)-(12), of a required 16 character input that    * 00081800
*                  identifies the message to be processed by the exit * 00081900
*                  routine.                                           * 00082000
*                                                                     * 00082100
*                  A message token suitable for a notify exit is      * 00082200
*                  available from the Message-out Service (IXCMSGO)   * 00082300
*                  via the keyword RETMSGOTOKEN, or from the Message  * 00082400
*                  Control QUERYMSG Service via a MSGOUT query for    * 00082500
*                  SAVED or COMPLETE messages, or from the Message    * 00082600
*                  Control SAVEMSG service via the keyword            * 00082700
*                  RETMSGTOKEN when a message/response entity was     * 00082800
*                  saved by a notify exit routine.                    * 00082900
*                                                                     * 00083000
*                  A message token suitable for a message exit is     * 00083100
*                  available from the Message Control QUERYMSG        * 00083200
*                  Service via a MSGIN query, or from the Message     * 00083300
*                  Control SAVEMSG service via the keyword            * 00083400
*                  RETMSGTOKEN when a message was saved by a message  * 00083500
*                  exit routine or when a response was saved by a     * 00083600
*                  notify exit routine.                               * 00083700
*                                                                     * 00083800
*                                                                     * 00083900
*                                                                     * 00084000
*                                                                     * 00084100
*                                                                     * 00084200
*                                                                     * 00084300
*                                                                     * 00084400
*                                                                     * 00084500
*      [RETCODE=xretcode]                                             * 00084600
*          is the name (RS-type) of an optional fullword output       * 00084700
*          variable, or register (2)-(12), into which the return code * 00084800
*          is to be copied from GPR 15.                               * 00084900
*                                                                     * 00085000
*                                                                     * 00085100
*                                                                     * 00085200
*                                                                     * 00085300
*      [RSNCODE=xrsncode]                                             * 00085400
*          is the name (RS-type) of an optional fullword output       * 00085500
*          variable, or register (2)-(12), into which the reason code * 00085600
*          is to be copied from GPR 0.                                * 00085700
*                                                                     * 00085800
*                                                                     * 00085900
*                                                                     * 00086000
*                                                                     * 00086100
*      [PLISTVER=xplistver|IMPLIED_VERSION]                         * 00086200
*          is an optional byte input decimal value in the "0-0" range * 00086300
*          that specifies the macro version.  PLISTVER is the only    * 00086400
*          key allowed on the list form of MF and determines which    * 00086500
*          parameter list is generated.  Note that MAX may be         * 00086600
*          specified instead of a number, and the parameter list will * 00086700
*          be of the largest size currently supported. This size may  * 00086800
*          grow from release to release (thus possibly affecting the  * 00086900
*          amount of storage needed by your program).  If your        * 00087000
*          program can tolerate this, IBM recommends that you always  * 00087100
*          specify MAX when creating the list form parameter list as  * 00087200
*          that will ensure that the list form parameter list is      * 00087300
*          always long enough to hold whatever parameters might be    * 00087400
*          specified on the execute form.                             * 00087500
*          DEFAULT: IMPLIED_VERSION.  When PLISTVER is omitted, the   * 00087600
*          default is the lowest version which allows all of the      * 00087700
*          parameters specified on the invocation to be processed.    * 00087800
*                                                                     * 00087900
*                                                                     * 00088000
*                                                                     * 00088100
*                                                                     * 00088200
*      [MF=S|L|E]                                                   * 00088300
*          is an optional keyword input which specifies the macro     * 00088400
*          form.                                                      * 00088500
*          DEFAULT: S                                                 * 00088600
*                                                                     * 00088700
*                                                                     * 00088800
*          [MF=S]                                                     * 00088900
*              specifies the standard form of the macro.  The "S"     * 00089000
*              form generates code to put the parameters into an      * 00089100
*              in-line parameter list and invoke the desired service. * 00089200
*              Full checking for required macro keys is done along    * 00089300
*              with supplying defaults for omitted optional           * 00089400
*              parameters.                                            * 00089500
*                                                                     * 00089600
*          [MF=(L,xmfctrl,xmfattr|0D)]                              * 00089700
*              specifies the list form of the macro.  The "L" form    * 00089800
*              defines an area to be used for the parameter list.     * 00089900
*              Only the PLISTVER key may be specified on the          * 00090000
*              invocation.  All other macro parameters are flagged as * 00090100
*              errors.  If PLISTVER is not specified, the original    * 00090200
*              parameter list definition is used.                     * 00090300
*                                                                     * 00090400
*            ,xmfctrl                                                 * 00090500
*              is a required input.  It is the name of a storage area * 00090600
*              for the parameter list.                                * 00090700
*                                                                     * 00090800
*            ,xmfattr|0D                                            * 00090900
*              is an optional 60 character input string that varies   * 00091000
*              from 1 to 60 characters. Use it to force boundary      * 00091100
*              alignment of the parameter list. Use only 0F or 0D.    * 00091200
*              DEFAULT: 0D which forces the parameter list to a       * 00091300
*              doubleword boundary.                                   * 00091400
*                                                                     * 00091500
*          [MF=(E,xmfctrl,COMPLETE)]                                * 00091600
*              specifies the execute form of the macro.  The "E" form * 00091700
*              generates code to put the parameters into the          * 00091800
*              parameter list specified by xmfctrl and provides full  * 00091900
*              syntax checking with default setting.                  * 00092000
*                                                                     * 00092100
*            ,xmfctrl                                                 * 00092200
*              is a required input.  It is the name (RS-type), or     * 00092300
*              address in register (1)-(12), of a storage area for    * 00092400
*              the parameter list.                                    * 00092500
*                                                                     * 00092600
*            ,COMPLETE                                              * 00092700
*              is an optional keyword input which specifies the       * 00092800
*              degree of macro parameter syntax checking.             * 00092900
*              DEFAULT: COMPLETE                                      * 00093000
*                                                                     * 00093100
*                                                                     * 00093200
*              COMPLETE                                               * 00093300
*                  Checking for required macro keys is done and       * 00093400
*                  defaults are supplied for omitted optional         * 00093500
*                  parameters.                                        * 00093600
*                                                                     * 00093700
*                                                                     * 00093800
*                                                                     * 00093900
*                                                                     * 00094000
*                                                                     * 00094100
*                                                                     * 00094200
*                                                                     * 00094300
*01* RETURN CODES:                                                    * 00094400
*                                                                     * 00094500
*                 Return code and Reason code constants are defined   * 00094600
*                 within IXCYMSGC.  NOTE carefully that bits 0-15 of  * 00094700
*                 the reason code may contain component-diagnostic    * 00094800
*                 data and must not be assumed to be 0. The constant  * 00094900
*                 IXCMSGCRsnCodeMask is provided for masking off the  * 00095000
*                 component-diagnostic data.                          * 00095100
*                                                                     * 00095200
*       00        Name: IXCMSGCRcSuccessful                           * 00095300
*                                                                     * 00095400
*                 Meaning: Successful completion                      * 00095500
*                                                                     * 00095600
*                 Action: None                                        * 00095700
*                                                                     * 00095800
*       04        Name: IXCMSGCRcWarning                              * 00095900
*                                                                     * 00096000
*                 Meaning: Warning, reason code in R0                 * 00096100
*                                                                     * 00096200
*                 Action: See reason code                             * 00096300
*                                                                     * 00096400
*                                                                     * 00096500
*                                                                     * 00096600
*                 HEX REASON  MEANING/ACTION                          * 00096700
*                 CODE                                                * 00096800
*                                                                     * 00096900
*                 xxxx0004    Name: IXCMSGCRsnAnsAreaTooSmall         * 00097000
*                                                                     * 00097100
*                             Meaning:  Meaning: The query request    * 00097200
*                             completed successfully.  The ANSAREA    * 00097300
*                             provided was large enough to contain    * 00097400
*                             the header information (MqaHeader), but * 00097500
*                             was not large enough to contain all the * 00097600
*                             data that was requested.  The           * 00097700
*                             MqaHdrTlen field indicates the total    * 00097800
*                             length of the output answer area that   * 00097900
*                             would have been needed to contain all   * 00098000
*                             the requested information.  It is       * 00098100
*                             possible that only the MqaHeader was    * 00098200
*                             provided in which case MqaHdr#Entries   * 00098300
*                             would be zero.                          * 00098400
*                                                                     * 00098500
*                             Action:  Retry the request with an      * 00098600
*                             ANSAREA whose length is greater than or * 00098700
*                             equal to the number of bytes indicated  * 00098800
*                             by MqaHdrTlen.  Note that the amount of * 00098900
*                             data to be returned can change          * 00099000
*                             dynamically, so that the length         * 00099100
*                             indicated by MqaHdrTlen may be too      * 00099200
*                             small for all the data when the request * 00099300
*                             is tried again.                         * 00099400
*                                                                     * 00099500
*                 xxxx0008    Name: IXCMSGCRsnMsgAlreadyComplete      * 00099600
*                                                                     * 00099700
*                             Meaning: Message already completed.     * 00099800
*                                                                     * 00099900
*                             Action: None, Message COMPLETION        * 00100000
*                             requested for a message that was        * 00100100
*                             already completed.                      * 00100200
*                                                                     * 00100300
*                 xxxx0018    Name: IXCMSGCRsnMsgDiscardPending       * 00100400
*                                                                     * 00100500
*                             Meaning: Message discard pending.  An   * 00100600
*                             exit routine is currently processing    * 00100700
*                             the message.  The message will be       * 00100800
*                             deleted as soon as the currently active * 00100900
*                             message service (such as IXCMSGI)       * 00101000
*                             completes.                              * 00101100
*                                                                     * 00101200
*                             Action: None, the message is not        * 00101300
*                             available.  Storage areas for a         * 00101400
*                             message-out request that were to be     * 00101500
*                             preserved until the message completed   * 00101600
*                             can be freed (applies to IXCMSGO        * 00101700
*                             MSGACCESS=ASYNC requests).              * 00101800
*                                                                     * 00101900
*                                                                     * 00102000
*                                                                     * 00102100
*                                                                     * 00102200
*       08        Name: IXCMSGCRcInvalidParms                         * 00102300
*                                                                     * 00102400
*                 Meaning: Invalid parameters, reason code in R0      * 00102500
*                                                                     * 00102600
*                 Action: See reason code                             * 00102700
*                                                                     * 00102800
*                                                                     * 00102900
*                 HEX REASON  MEANING/ACTION                          * 00103000
*                 CODE                                                * 00103100
*                                                                     * 00103200
*                 xxxx0004    Name: IXCMSGCRsnMemberNotActive         * 00103300
*                                                                     * 00103400
*                             Meaning: Member token does not identify * 00103500
*                             an active member associated with the    * 00103600
*                             primary address space current when the  * 00103700
*                             Message-Control service was invoked.    * 00103800
*                                                                     * 00103900
*                             Action: Reissue the request with a      * 00104000
*                             correct member token.                   * 00104100
*                                                                     * 00104200
*                 xxxx0016    Name: IXCMSGCRSNInAppropExitRoutineName * 00104300
*                                                                     * 00104400
*                             Meaning: Inappropriate exit routine     * 00104500
*                             type.                                   * 00104600
*                                                                     * 00104700
*                             Action:  The type of exit specified for * 00104800
*                             a CALLEXIT request must be appropriate  * 00104900
*                             for the type of message to be           * 00105000
*                             processed.  Messages saved by a message * 00105100
*                             exit routine and responses saved by a   * 00105200
*                             notify exit routine must be processed   * 00105300
*                             by a message exit routine.  A saved     * 00105400
*                             message/response entity must be         * 00105500
*                             processed by a notify exit routine.     * 00105600
*                             Retry the request with the correct exit * 00105700
*                             routine.                                * 00105800
*                                                                     * 00105900
*                 xxxx0040    Name: IXCMSGCRSNReservedFieldNotNull    * 00106000
*                                                                     * 00106100
*                             Meaning:  Program error or              * 00106200
*                             environmental error.  A reserved field  * 00106300
*                             in the control parameter list is not    * 00106400
*                             zero.                                   * 00106500
*                                                                     * 00106600
*                             Action:  Check to see if your program   * 00106700
*                             inadvertently overlaid the parameter    * 00106800
*                             list storage, and that it was assembled * 00106900
*                             with the correct macro library for the  * 00107000
*                             release of MVS your program is running  * 00107100
*                             on.                                     * 00107200
*                                                                     * 00107300
*                 xxxx0100    Name: IXCMSGCRSNBadPlistAlet            * 00107400
*                                                                     * 00107500
*                             Meaning: Program error. Your program is * 00107600
*                             not running in primary ASC mode, and    * 00107700
*                             the ALET that qualifies the address of  * 00107800
*                             the control parameter list is neither   * 00107900
*                             zero nor associated with a valid public * 00108000
*                             entry on the DU-AL or in a common area  * 00108100
*                             data space                              * 00108200
*                                                                     * 00108300
*                             Action: Ensure that:  Your program is   * 00108400
*                             not intended to run in primary ASC      * 00108500
*                             mode, You specified SYSSTATE ASCENV=AR  * 00108600
*                             before issuing the IXCMSGC macro, and   * 00108700
*                             the ALET for the parameter list is a    * 00108800
*                             valid public entry on the DU-AL ,is     * 00108900
*                             zero (primary address space ALET) or in * 00109000
*                             a common area data space.               * 00109100
*                                                                     * 00109200
*                 xxxx0104    Name: IXCMSGCRSNBadPlistVersion         * 00109300
*                                                                     * 00109400
*                             Meaning: Parameter list not valid.      * 00109500
*                             Version number in parameter list is not * 00109600
*                             valid.  The release level of XCF on     * 00109700
*                             which the caller is running does not    * 00109800
*                             support this version of the message     * 00109900
*                             control service.                        * 00110000
*                                                                     * 00110100
*                             Action: Retry the request with the      * 00110200
*                             correct version.                        * 00110300
*                                                                     * 00110400
*                 xxxx0108    Name: IXCMSGCRSNBadPListFuncCode        * 00110500
*                                                                     * 00110600
*                             Meaning: Parameter list not valid.      * 00110700
*                             Function code not valid.                * 00110800
*                                                                     * 00110900
*                             Action: Retry the request               * 00111000
*                                                                     * 00111100
*                 xxxx010C    Name: IXCMSGCRSNBadPlistAddress         * 00111200
*                                                                     * 00111300
*                             Meaning: Parameter list not accessible. * 00111400
*                             storage is not addressable.             * 00111500
*                                                                     * 00111600
*                             Action: Make sure the parameter list is * 00111700
*                             accessible to XCF and retry the         * 00111800
*                             request.                                * 00111900
*                                                                     * 00112000
*                 xxxx011C    Name: IXCMSGCRSNNotEnabled              * 00112100
*                                                                     * 00112200
*                             Meaning: The caller is not enabled.     * 00112300
*                                                                     * 00112400
*                             Action: Correct your program so that it * 00112500
*                             does not issue IXCMSGC while it is      * 00112600
*                             disabled.                               * 00112700
*                                                                     * 00112800
*                 xxxx012C    Name: IXCMSGCRSNLocksHeld               * 00112900
*                                                                     * 00113000
*                             Meaning: The caller is holding a lock.  * 00113100
*                                                                     * 00113200
*                             Action: Correct your program so that it * 00113300
*                             does not issue IXCMSGC while holding    * 00113400
*                             any locks.                              * 00113500
*                                                                     * 00113600
*                 xxxx013C    Name:                                   * 00113700
*                             IXCMSGCRSNAnsAreaSmallerThanHeader      * 00113800
*                                                                     * 00113900
*                             Meaning: ANSAREA too small.             * 00114000
*                                                                     * 00114100
*                             Action:  The answer area must be at     * 00114200
*                             least as long as the header record      * 00114300
*                             (MqaHeader).  Retry the request with a  * 00114400
*                             larger answer area.                     * 00114500
*                                                                     * 00114600
*                 xxxx0140    Name: IXCMSGCRSNAnsAreaBadAlet          * 00114700
*                                                                     * 00114800
*                             Meaning: ANSAREA not accessible.        * 00114900
*                                                                     * 00115000
*                             Action: The ALET of the ANSAREA is      * 00115100
*                             neither zero nor a valid entry on the   * 00115200
*                             Dispatchable Unit Access List (DU-AL),  * 00115300
*                             nor a valid entry for a common area     * 00115400
*                             data space.  Retry the request with the * 00115500
*                             correct ALET.                           * 00115600
*                                                                     * 00115700
*                 xxxx0148    Name: IXCMSGCRSNAnsAreaBadAddress       * 00115800
*                                                                     * 00115900
*                             Meaning: Error accessing ANSAREA.       * 00116000
*                                                                     * 00116100
*                             Action: Make sure the ANSAREA is        * 00116200
*                             accessible to XCF, and reissue the      * 00116300
*                             request.                                * 00116400
*                                                                     * 00116500
*                 xxxx0200    Name: IXCMSGCRSNTokenNotForSaveMsg      * 00116600
*                                                                     * 00116700
*                             Meaning: TOKEN not valid for SAVEMSG    * 00116800
*                             service.                                * 00116900
*                                                                     * 00117000
*                             Action: Verify that the token specified * 00117100
*                             is the MsgIToken provided to the        * 00117200
*                             message exit or notify exit and retry   * 00117300
*                             the request with the correct Token.     * 00117400
*                                                                     * 00117500
*                 xxxx0204    Name: IXCMSGCRSNTokenNotForDiscardMsg   * 00117600
*                                                                     * 00117700
*                             Meaning: TOKEN not valid for DISCARDMSG * 00117800
*                             service.                                * 00117900
*                                                                     * 00118000
*                             Action: Retry the request with the      * 00118100
*                             correct Token.                          * 00118200
*                                                                     * 00118300
*                 xxxx0208    Name: IXCMSGCRSNTokenForCallExitInvalid * 00118400
*                                                                     * 00118500
*                             Meaning: TOKEN not valid for CALLEXIT   * 00118600
*                             service.  CALLEXIT can be only be used  * 00118700
*                             for messages that were saved by a       * 00118800
*                             Notify or Message Exit via the SAVEMSG  * 00118900
*                             service.  The TOKEN must be a           * 00119000
*                             RETMSGTOKEN that was returned by the    * 00119100
*                             SAVEMSG service.                        * 00119200
*                                                                     * 00119300
*                             Action:  Insure that that the token is  * 00119400
*                             one that was returned by a successful   * 00119500
*                             invocation of the SAVEMSG service.      * 00119600
*                                                                     * 00119700
*                 xxxx020C    Name: IXCMSGCRSNMessageUnavailable      * 00119800
*                                                                     * 00119900
*                             Meaning: Message not available.         * 00120000
*                             Message indicated by TOKEN does not     * 00120100
*                             exist. Message was either completely    * 00120200
*                             delivered, discarded, or saved.         * 00120300
*                                                                     * 00120400
*                             Action:  Verify the token, if           * 00120500
*                             mis-specified reissue the request with  * 00120600
*                             a new correct TOKEN. For a RETMSGOTOKEN * 00120700
*                             or a saved token (RETMSGTOKEN), insure  * 00120800
*                             that the MEMTOKEN identifies the member * 00120900
*                             who was presented the token by XCF. If  * 00121000
*                             the message was saved, then a new       * 00121100
*                             message would be assigned and the       * 00121200
*                             RETMSGTOKEN returned by IXCMSGC would   * 00121300
*                             have to be used. If the token is for a  * 00121400
*                             response and the associated             * 00121500
*                             message/response entity was saved or    * 00121600
*                             discarded, then the old response tokens * 00121700
*                             are invalidated.                        * 00121800
*                                                                     * 00121900
*                 xxxx0210    Name: IXCMSGCRSNMessageTokenInvalid     * 00122000
*                                                                     * 00122100
*                             Meaning: TOKEN not valid.               * 00122200
*                                                                     * 00122300
*                             Action: Verify the token and retry the  * 00122400
*                             request with the correct Token.         * 00122500
*                                                                     * 00122600
*                 xxxx0220    Name:                                   * 00122700
*                             IXCMSGCRSNTokenNotForForceCompletion    * 00122800
*                                                                     * 00122900
*                             Meaning: Message TOKEN not valid for    * 00123000
*                             Force Completion.  The message token    * 00123100
*                             must be a token that was returned by    * 00123200
*                             the IXCMSGO service via the             * 00123300
*                             RETMSGOTOKEN keyword.                   * 00123400
*                                                                     * 00123500
*                             Action: Verify the token and retry the  * 00123600
*                             request with the correct Token.         * 00123700
*                                                                     * 00123800
*                 xxxx0308    Name: IXCMSGCRSNBadRetMsgTokenAlet      * 00123900
*                                                                     * 00124000
*                             Meaning:  The ALET that qualifies the   * 00124100
*                             address of the RETMSGTOKEN is neither   * 00124200
*                             zero nor a valid entry on the           * 00124300
*                             Dispatchable Unit Access List (DU-AL),  * 00124400
*                             nor a valid entry for a common area     * 00124500
*                             data space.                             * 00124600
*                                                                     * 00124700
*                             Action: Retry the request with the      * 00124800
*                             correct ALET                            * 00124900
*                                                                     * 00125000
*                 xxxx0309    Name: IXCMSGCRSNBadRetMsgTokenAddress   * 00125100
*                                                                     * 00125200
*                             Meaning: RETMSGTOKEN not accessible.    * 00125300
*                             The Message Control Service was not     * 00125400
*                             able to store a message token in the    * 00125500
*                             storage area indicated by RETMSGTOKEN.  * 00125600
*                                                                     * 00125700
*                             Action: Verify the storage area is      * 00125800
*                             accessible to XCF and retry the         * 00125900
*                             request.                                * 00126000
*                                                                     * 00126100
*                 xxxx030A    Name: IXCMSGCRSNBadExitForCallExit      * 00126200
*                                                                     * 00126300
*                             Meaning: For a CALLEXIT request, XCF    * 00126400
*                             attempted to call the exit but the      * 00126500
*                             message or notify exit abended. The     * 00126600
*                             exit address could be invalid or the    * 00126700
*                             exit may have done some processing. The * 00126800
*                             specified message may have been         * 00126900
*                             processed by the exit routine before it * 00127000
*                             abended. As such, the token may or may  * 00127100
*                             not specify a currently valid message.  * 00127200
*                                                                     * 00127300
*                             Action: Verify the exit address and     * 00127400
*                             attempt the CALLEXIT request again.     * 00127500
*                                                                     * 00127600
*                 xxxx030E    Name: IXCMSGCRsnTaskModeCallExitWithFRR * 00127700
*                                                                     * 00127800
*                             Meaning: For a CALLEXIT request that    * 00127900
*                             was made in Task mode, the caller had   * 00128000
*                             an FRR established.                     * 00128100
*                                                                     * 00128200
*                             Action: Correct your program so that it * 00128300
*                             does not issue IXCMSGC Request CALLEXIT * 00128400
*                             with FRRs established while in Task     * 00128500
*                             mode.                                   * 00128600
*                                                                     * 00128700
*                 xxxx0C14    Name: IXCMSGCRsnTokenNotForQueryMsg     * 00128800
*                                                                     * 00128900
*                             Meaning: TOKEN not valid for QUERYMSG   * 00129000
*                             service.                                * 00129100
*                                                                     * 00129200
*                             Action: Retry the request with the      * 00129300
*                             correct Token.                          * 00129400
*                                                                     * 00129500
*                                                                     * 00129600
*                                                                     * 00129700
*       0C        Name: IXCMSGCRcEnvironmentalError                   * 00129800
*                                                                     * 00129900
*                 Meaning: The current environment prevented the      * 00130000
*                 request from being successful                       * 00130100
*                                                                     * 00130200
*                 Action: See reason code                             * 00130300
*                                                                     * 00130400
*                                                                     * 00130500
*                 HEX REASON  MEANING/ACTION                          * 00130600
*                 CODE                                                * 00130700
*                                                                     * 00130800
*                 xxxx0C04    Name: IXCMSGCRSNMsgNotAvailOtherExit    * 00130900
*                                                                     * 00131000
*                             Meaning: Message not available.         * 00131100
*                                                                     * 00131200
*                             Action: Another exit routine is         * 00131300
*                             currently processing the message.  Try  * 00131400
*                             again later.                            * 00131500
*                                                                     * 00131600
*                 xxxx0C08    Name: IXCMSGCRSNNoUserMsgSpaceAvail     * 00131700
*                                                                     * 00131800
*                             Meaning: No user message space          * 00131900
*                             available.  All the message storage     * 00132000
*                             space managed by XCF on behalf of the   * 00132100
*                             member are full.                        * 00132200
*                                                                     * 00132300
*                             Action:  Use the Message Control        * 00132400
*                             DISCARDMSG Service to discard one or    * 00132500
*                             more messages in order to make more     * 00132600
*                             storage available.                      * 00132700
*                                                                     * 00132800
*                 xxxx0C0C    Name: IXCMSGCRSNDUALCanNotBeExpanded    * 00132900
*                                                                     * 00133000
*                             Meaning: Unable to process a CALLEXIT   * 00133100
*                             QUERYMSG or COMPLETION request. A       * 00133200
*                             STOKEN that is required to be added to  * 00133300
*                             the current DUAL (dispatchable Unit     * 00133400
*                             Access List) could not be added due to  * 00133500
*                             the DUAL being full or not expandable.  * 00133600
*                                                                     * 00133700
*                             Action: Try again later or remove an    * 00133800
*                             entry from the DUAL and try again.      * 00133900
*                                                                     * 00134000
*                 xxxx0C10    Name: IXCMSGCRsnNoWorkingStorage        * 00134100
*                                                                     * 00134200
*                             Meaning: A IXCMSGC request could not be * 00134300
*                             performed because XCF could not obtain  * 00134400
*                             working storage in the XCF address      * 00134500
*                             space.                                  * 00134600
*                                                                     * 00134700
*                             Action: Try again later                 * 00134800
*                                                                     * 00134900
*                 xxxx0C18    Name: IXCMSGCRsnMessagePending          * 00135000
*                                                                     * 00135100
*                             Meaning: The CALLEXIT request could not * 00135200
*                             be completed, the specified token       * 00135300
*                             represents a message that is not        * 00135400
*                             complete.                               * 00135500
*                                                                     * 00135600
*                             Action: Retry the request again later   * 00135700
*                             after the message is complete.          * 00135800
*                                                                     * 00135900
*                                                                     * 00136000
*                                                                     * 00136100
*       10        Name: IXCMSGCRcSystemError                          * 00136200
*                                                                     * 00136300
*                 Meaning: System error. XCF processing failure.      * 00136400
*                                                                     * 00136500
*                 Action: Save the reason code information, and       * 00136600
*                 contact the IBM support center.                     * 00136700
*                                                                     * 00136800
*                                                                     * 00136900
*                                                                     * 00137000
*01* REASON CODES:                                                    * 00137100
*                                                                     * 00137200
*       A unique reason code for a given return code will be returned * 00137300
*       whenever the return code is non-zero. Reason code and return  * 00137400
*       code constants are defined within IXCYMSGC.  NOTE carefully   * 00137500
*       that bits 0-15 of the reason code may contain                 * 00137600
*       component-diagnostic data and must not be assumed to be 0.    * 00137700
*       The constant IXCMSGCRsnCodeMask is provided for masking off   * 00137800
*       the component-diagnostic data.                                * 00137900
*                                                                     * 00138000
*01* MODULE TYPE:  ASSEM MACRO                                        * 00138100
*                                                                     * 00138200
*02*   PROCESSOR:  ASSEM                                              * 00138300
*                                                                     * 00138400
*01* COMPONENT:  SCXCF                                                * 00138500
*                                                                     * 00138600
*01* DISTRIBUTION LIBRARY: AMACLIB                                    * 00138700
*                                                                     * 00138800
*01* ABEND CODES:                                                     * 00138900
*                                                                     * 00139000
*                                                                     * 00139100
*       073       Environment not valid.  The caller held a lock.     * 00139200
*                                                                     * 00139300
*                                                                     * 00139400
*                                                                     * 00139500
*01* MACRO USAGE NOTES:                                               * 00139600
*                                                                     * 00139700
*                                                                     * 00139800
*    1.  Printing of the macro expansion is controlled by the ZPRINT  * 00139900
*        global macro variable.  Any value other than 'NO' will       * 00140000
*        result in the macro expansion being printed.  The default is * 00140100
*        'YES'.  The following examples illustrate how the ZPRINT     * 00140200
*        variable should be set.                                      * 00140300
*                                                                     * 00140400
*                    GBLC &ZPRINT                                     * 00140500
*            &ZPRINT SETC 'YES'          &ZPRINT SETC 'NO'            * 00140600
*                                                                     * 00140700
*                                                                     * 00140800
*    2.  All keys currently contained in the IXCMSGC macro correspond * 00140900
*        to  version 0.  If you specify PLISTVER, use a value of 0 or * 00141000
*        MAX.                                                         * 00141100
*                                                                     * 00141200
*                                                                     * 00141300
*    3.  Note  that  the content of TOKENs used to identify a message * 00141400
*        to  the  Message  Control  Service can vary.   Two different * 00141500
*        TOKENs  may in fact identify the same message.  Therefore it * 00141600
*        is  not  possible  to  compare  TOKENs  to determine if they * 00141700
*        identify the same message.                                   * 00141800
*                                                                     * 00141900
*    4.  An  exit  routine  should  always  make  use of the TOKEN(s) * 00142000
*        passed  to  it  via  the parameter list presented by XCF (as * 00142100
*        opposed  to  using  some  other  instance  of  a  TOKEN that * 00142200
*        identifies  the  same  message).    The  system  incurs less * 00142300
*        overhead  when these TOKENs are used within an exit routine. * 00142400
*        Also,  some  services (eg, SAVEMSG) only accept a TOKEN from * 00142500
*        the  exit  parameter list as a valid input.  A TOKEN from an * 00142600
*        exit  parameter  list  should not be saved since it is not a * 00142700
*        valid input once the exit routine gives up control.          * 00142800
*                                                                     * 00142900
*                                                                     * 00143000
*                                                                     * 00143100
*01* CHANGE ACTIVITY:                                                 * 00143200
*                                                                     * 00143300
*   Flag LineItem  FMID    Date   ID    Comment                       * 00143400
*                                                                     * 00143500
*    $L0=XCFBCXMG HBB6603 950417 PD00DT:  XCF Broadcast               * 00143600
*    $L1=XCFBCXMG HBB6603 950823 PD00CJ:  XCF Broadcast - added PC    * 00143700
*                                         support of space switch and * 00143800
*                                         non-space.  Also changed    * 00143900
*                                         many reason code values and * 00144000
*                                         descriptions to be          * 00144100
*                                         consistent with other XCF   * 00144200
*                                         services.                   * 00144300
*    $L2=XCFBCXMG HBB6603 951024 PD00CJ:  XCF Broadcast - added PC    * 00144400
*                                         support for IXCSIMCX (call  * 00144500
*                                         exit)                       * 00144600
*    $L3=XCFBCXMG HBB6603 951130 PD00CJ:  XCF Broadcast - removed     * 00144700
*                                         ACTIVATEEXIT and            * 00144800
*                                         MSGDELIVERY requests        * 00144900
*    $L4=XCFBCXMG HBB6603 960630 PD00CJ:  XCF Broadcast - added rsn   * 00145000
*                                         codes                       * 00145100
*                                         IXCMSGCRSNDUALCanNotBeExpan * 00145200
*                                         ded and                     * 00145300
*                                         IXCMSGCRsnNoWorkingStorage  * 00145400
*    $L5=XCFBCXMG HBB6603 960630 PD00CJ:  XCF Broadcast - Changed the * 00145500
*                                         description for reason code * 00145600
*                                         IXCMSGCRsnAnsAreaTooSmall   * 00145700
*                                         and added rsn code          * 00145800
*                                         IXCMSGCRsnTokenNotForQueryM * 00145900
*                                         sg                          * 00146000
*    $P1=PQC1336  HBB6603 960718 PD00CJ:  XCF Broadcast - Changed all * 00146100
*                                         the bad token rsn codes to: * 00146200
*                                         IXCMSGCRSNTokenNotForSaveMs * 00146300
*                                         g,                          * 00146400
*                                         IXCMSGCRSNTokenNotForDiscar * 00146500
*                                         dMsg,                       * 00146600
*                                         IXCMSGCRSNTokenForCallExitI * 00146700
*                                         nvalid,                     * 00146800
*                                         IXCMSGCRSNTokenNotForForceC * 00146900
*                                         ompletion                   * 00147000
*    $P2=PQC1878  HBB6603 960718 PD00CJ:  Fixed update return/reason  * 00147100
*                                         code descriptions etc.      * 00147200
*    $P3=PQC1795  HBB6603 960723 PD00CJ:  Fixed update the            * 00147300
*                                         description for rsn code    * 00147400
*                                         IXCMSGCRSNMessageUnavailabl * 00147500
*                                         e                           * 00147600
*    $D1=DCR0028  HBB6603 960815 PD00CJ:  Remove USAGE support        * 00147700
*    $P4=PQC1242  HBB6603 960830 PD00CJ:  Added                       * 00147800
*                                         IXCMSGCRSNBadExitForCallExi * 00147900
*                                         t                           * 00148000
*    $P5=PQC2270  HBB6603 960906 PD00CJ:  Added                       * 00148100
*                                         IXCMSGCRSNTaskModeCallExitW * 00148200
*                                         ithFRR                      * 00148300
*    $P6=PQC2443  HBB6603 960915 PD00CJ:  Fixed ASM errors in ASM     * 00148400
*                                         version                     * 00148500
*    $L6=LSD      HBB6608 981116 PD00BJ:  Large Signal Delivery       * 00148600
*                                         (comments only)             * 00148700
****** END OF SPECIFICATIONS *****************************************/ 00148800
*/* TLINE 1 *********************************************************** 00148900
         MACRO                                                          00149000
&XLABEL  IXCMSGC &MEMTOKEN=,&REQUEST=,&TOKEN=,&USERDATA=,&RETMSGTOKEN=,*00149100
               &DATATYPE=,&STATUS=,&SOURCE=,&ANSAREA=,&ANSLEN=,&TYPE=, *00149200
               &NOTIFYEXIT=,&MSGEXIT=,&EXITPARMS=,&RETCODE=,&RSNCODE=, *00149300
               &PLISTVER=,&MF=                                          00149400
.*                                                                      00149500
*                 MACDATE -02/26/99-<0>                                 00149600
.*                                                                      00149700
.*******************************************************************    00149800
.***AB.02  GLOBAL VARIABLES TO CONTROL PRINT AND CODE GENERATION        00149900
.*******************************************************************    00150000
                 GBLC  &ZPRINT     YES=PRINT NO=NO PRINT                00150100
                 GBLC  &ZTEST      YES=TEST NO=NO TEST                  00150200
                 GBLC  &ZSYSTEM    PCCODE10, MVS, SAK, VM, XAX          00150300
.*                                                                      00150400
                 GBLC  &ZIXCMSGC   YES=MACRO USED AT LEAST ONCE         00150500
.*******************************************************************    00150600
.***AB.03  COMMONLY USED LOCAL MACRO VARIABLES                          00150700
.*******************************************************************    00150800
                 LCLC  &ZMS        ERROR MESSAGE WORK AREA              00150900
                 LCLC  &ZCNDX      LAST THREE SYSNDX CHARACTERS         00151000
                 LCLC  &ZCLNG      USED WHEN LENGTH IS NEEDED           00151100
                 LCLC  &ZCGPR      USED WHEN VALUE IS IN A GPR          00151200
                 LCLC  &ZCVAL      USED TO CONTAIN FIXED VALUE          00151300
                 LCLA  &ZAWRK      USED AS A WORK AREA                  00151400
                 LCLA  &ZASIZ      USED FOR SIZE OF VALUE               00151500
                 LCLA  &ZN         NUMERIC WORK VARIABLE                00151600
                 LCLC  &ZC         CHARACTER WORK VARIABLE              00151700
                 LCLC  &ZTLC       CHARACTER TOO LONG VARIABLE          00151800
                 LCLA  &ZTLA       VALUE TOO LONG VARIABLE              00151900
                 LCLA  &ZMACRET    MACRO RETURN CODE                    00152000
&ZMACRET         SETA  0           ASSUME NO ERRORS                     00152100
.*                                                                      00152200
                 LCLC  &ZCSYSLIST(255)          NONXKEY, POS ARRAY      00152300
                 LCLA  &ZASYSLNDX  WORK INDEX FOR ZCSYSLIST()           00152400
                 LCLA  &ZPLLEN     PARAMETER LIST LENGTH                00152500
                 LCLC  &ZENDBASEPL              End of base PL          00152600
                 LCLA  &ZPLWORKA   PARAMETER LIST LENGTH                00152700
.*******************************************************************    00152800
.***AB.04  MACRO VARIABLES FOR RANGES AND SETS OF ARGUMENTS             00152900
.*******************************************************************    00153000
                 LCLA  &ZI         INDEX FOR ARRAY                      00153100
                 LCLA  &ZJ         INDEX FOR PARMS                      00153200
                 LCLA  &ZK         INDEX FOR PARSE                      00153300
                 LCLA  &ZLO        LOW RANGE VALUE                      00153400
                 LCLA  &ZHI        HIGH RANGE VALUE                     00153500
                 LCLC  &ZW         WORK AREA FOR PARM                   00153600
.********************************************************************   00153700
.***AB.05  INVOKE MVS MACROS TO CONTROL CODE GENERATION                 00153800
.********************************************************************   00153900
                 GBLC  &SYSSPLV    SP LEVEL 1,2,3 -SPLEVEL              00154000
                 GBLC  &SYSASCE    SYSTEM STATE P ANY AR-SYSSTATE       00154100
.*                                                                      00154200
                 AIF   (K'&SYSASCE GT 0).ZSYS4  SYS STATE DEFINED       00154300
                 AIF   (K'&SYSSPLV GT 0).ZSYS2  SP LEVEL DEFINED        00154400
                 SPLEVEL  TEST                                          00154500
.ZSYS2           ANOP  ,                                                00154600
                 AIF   ('&SYSSPLV' EQ '1').ZSYS3  PRE SP 3.1            00154700
                 AIF   ('&SYSSPLV' EQ '2').ZSYS3  PRE SP 3.1            00154800
                 SYSSTATE TEST                                          00154900
                 AGO   .ZSYS4                                           00155000
.ZSYS3           ANOP  ,                                                00155100
&SYSASCE         SETC  'P'         ASSUME SYSSTATE PRIMARY              00155200
.ZSYS4           ANOP  ,                                                00155300
.*******************************************************************    00155400
.***AB.07  DEFINE ALL MACRO VARIABLES                                   00155500
.*******************************************************************    00155600
                 LCLC  &XMEMTOKEN  ++ NAME                              00155700
                 LCLC  &XREQUEST   ++ VALUE                             00155800
                 LCLC  &XTOKEN     ++ NAME                              00155900
                 LCLC  &XUSERDATA  ++ NAME                              00156000
                 LCLC  &XRETMSGTOKEN            ++ NAME                 00156100
                 LCLC  &XDATATYPE  ++ VALUE                             00156200
                 LCLC  &XSTATUS    ++ VALUE                             00156300
                 LCLC  &XSOURCE    ++ NAME                              00156400
                 LCLC  &XANSAREA   ++ NAME                              00156500
                 LCLC  &XANSLEN    ++ NAME                              00156600
                 LCLC  &XTYPE      ++ VALUE                             00156700
                 LCLC  &XCALL      ++ NAME                              00156800
                 LCLC  &XNOTIFYEXIT             ++ NAME                 00156900
                 LCLC  &XMSGEXIT   ++ NAME                              00157000
                 LCLC  &XEXITPARMS              ++ NAME                 00157100
                 LCLC  &XRETCODE   ++ NAME                              00157200
                 LCLC  &XRSNCODE   ++ NAME                              00157300
                 LCLA  &XPLISTVER  ++ VALUE                             00157400
                 LCLC  &XMF        ++ VALUE                             00157500
                 LCLC  &XMFCTRL    ++ NAME                              00157600
                 LCLC  &XMFATTR    ++ VALUE                             00157700
                 LCLC  &XMFSCK     ++ VALUE                             00157800
.*******************************************************************    00157900
.***AB.13  DEFINE MACRO VARIABLES FOR INPUT/OUTPUT PROCESSING           00158000
.*******************************************************************    00158100
                 LCLC  &ZXMEMTOKEN              ++ INPUT NAME           00158200
                 LCLC  &ZXREQUEST  ++ INPUT VALUE                       00158300
                 LCLC  &ZXTOKEN    ++ INPUT NAME                        00158400
                 LCLC  &ZXUSERDATA              ++ INPUT NAME           00158500
                 LCLC  &ZXRETMSGTOKEN           ++ OUTPUT NAME          00158600
                 LCLC  &ZXDATATYPE              ++ INPUT VALUE          00158700
                 LCLC  &ZXSTATUS   ++ INPUT VALUE                       00158800
                 LCLC  &ZXSOURCE   ++ INPUT NAME                        00158900
                 LCLC  &ZXANSAREA  ++ OUTPUT NAME                       00159000
                 LCLC  &ZXANSLEN   ++ INPUT NAME                        00159100
                 LCLC  &ZXTYPE     ++ INPUT VALUE                       00159200
                 LCLC  &ZXCALL     ++ INPUT NAME                        00159300
                 LCLC  &ZXNOTIFYEXIT            ++ INPUT NAME           00159400
                 LCLC  &ZXMSGEXIT  ++ INPUT NAME                        00159500
                 LCLC  &ZXEXITPARMS             ++ INPUT NAME           00159600
                 LCLC  &ZXRETCODE  ++ OUTPUT NAME                       00159700
                 LCLC  &ZXRSNCODE  ++ OUTPUT NAME                       00159800
                 LCLC  &ZXPLISTVER              ++ INPUT VALUE          00159900
                 LCLC  &ZXMF       ++ INPUT VALUE                       00160000
                 LCLC  &ZXMFCTRL   ++ INPUT NAME                        00160100
                 LCLC  &ZXMFATTR   ++ INPUT VALUE                       00160200
                 LCLC  &ZXMFSCK    ++ INPUT VALUE                       00160300
.********************************************************************   00160400
.***AC.PLV01  PROCESS PLISTVER                                      *   00160500
.********************************************************************   00160600
&XPLISTVER      SETA  0                                                 00160700
                AIF   (K'&PLISTVER(1) LE 0).ZPLV0                       00160800
                AIF   ('&PLISTVER(1)' NE 'MAX').ZPLV0                   00160900
&XPLISTVER      SETA  0                                                 00161000
.ZPLV0          ANOP  ,                                                 00161100
.*                                                                      00161200
                AIF   (K'&PLISTVER(1) LE 0).ZPVCKE                      00161300
                AIF   ('&PLISTVER(1)' EQ 'IMPLIED_VERSION').ZPVCKE      00161400
                AIF   ('&PLISTVER(1)' EQ 'MAX').ZPVCKE                  00161500
.*-------------------------------------------------------------------   00161600
                AIF   (N'&PLISTVER LE 1).ZPVCK3  CK NUM                 00161700
&ZMS            SETC  '"PLISTVER='         *KPOSA* MNOTE                00161800
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00161900
&ZMS            SETC  '&ZMS "PLISTVER"'                                 00162000
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00162100
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00162200
                AGO   .ZPVCK2                                           00162300
.ZPVCK3         ANOP  ,                                                 00162400
.*-------------------------------------------------------------------   00162500
                AIF   ('&PLISTVER'(1,1) NE '(').ZPVCK2                  00162600
&ZMS            SETC  '"PLISTVER='         *KGPRA* MNOTE                00162700
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00162800
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         00162900
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'                 00163000
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00163100
                AGO   .ZPVCKE                                           00163200
.ZPVCK2         ANOP  ,                                                 00163300
.*-------------------------------------------------------------------   00163400
&ZCVAL          SETC  '&PLISTVER(1)'                                    00163500
                AIF   ('&ZCVAL'(1,1) EQ '(').ZPVCKE  IN GPR             00163600
                AIF   (T'&ZCVAL NE 'N').ZPVCK6  NUMERIC ERR             00163700
&ZN             SETA   &PLISTVER(1)        CONVERT TO ARITHMETIC        00163800
                AIF   (&ZN LT 0).ZPVCK6    TOO LOW                      00163900
                AIF   (&ZN LE 0).ZPVCK4A   NOT HIGH                     00164000
.ZPVCK6         ANOP  ,                                                 00164100
&ZMS            SETC  '"PLISTVER='         *KRNGA* MNOTE                00164200
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00164300
&ZMS            SETC  '&ZMS THE RANGE IS "0-0"'                         00164400
                MNOTE 8,' &ZMS FOR ARGUMENT 1.'                         00164500
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00164600
&XPLISTVER      SETA  0                                                 00164700
                AGO   .ZPVCKE                                           00164800
.*-------------------------------------------------------------------   00164900
.ZPVCK4A        ANOP  ,                                                 00165000
                AIF   (&ZN GE &XPLISTVER).ZPVCK4                        00165100
&ZMS            SETC  'PLISTVER='          *KVALA* MNOTE                00165200
&ZMS            SETC  '&ZMS.&PLISTVER(1)'                               00165300
&ZMS            SETC  '&ZMS., BUT PLISTVER OF'                          00165400
&ZMS            SETC  '&ZMS &XPLISTVER'                                 00165500
                MNOTE 8,' &ZMS IS REQUIRED.'                            00165600
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00165700
                AGO   .ZPVCK5                                           00165800
.ZPVCK4         ANOP  ,                                                 00165900
&XPLISTVER      SETA  &PLISTVER(1)                                      00166000
.ZPVCK5         ANOP  ,                                                 00166100
.ZPVCKE         ANOP  ,                                                 00166200
.********************************************************************   00166300
.***AG.MF01 PROCESS MF MACRO FORMS                                      00166400
.********************************************************************   00166500
                 ACTR  10000                                            00166600
.*------------------------------------------------------------------    00166700
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00166800
&XMF             SETC  ''          INITIALIZE XVARIABLE                 00166900
.*-------------------------------------------------------------------   00167000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00167100
.ZG79            ANOP  ,                                                00167200
&ZTLC            SETC 'S'                                               00167300
                 AIF   ('&MF(1)' NE '&ZTLC').ZG80                       00167400
&XMF             SETC  'S'         SET KEYWORD                          00167500
                 AIF   (N'&MF LE 1).ZG79A       CK NUM                  00167600
&ZMS             SETC  '"MF='      *KPOSA* MNOTE                        00167700
&ZMS             SETC  '&ZMS.&MF"'                                      00167800
&ZMS             SETC  '&ZMS "MF"'                                      00167900
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00168000
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00168100
.ZG79A           ANOP  ,                                                00168200
.*-------------------------------------------------------------------   00168300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00168400
.ZG80            ANOP  ,                                                00168500
&ZTLC            SETC 'L'                                               00168600
                 AIF   ('&MF(1)' NE '&ZTLC').ZG87                       00168700
&XMF             SETC  'L'         SET KEYWORD                          00168800
                 AIF   (N'&MF LE 3).ZG80A       CK NUM                  00168900
&ZMS             SETC  '"MF='      *KPOSA* MNOTE                        00169000
&ZMS             SETC  '&ZMS.&MF"'                                      00169100
&ZMS             SETC  '&ZMS "MF"'                                      00169200
                 MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'             00169300
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00169400
.ZG80A           ANOP  ,                                                00169500
.*-------------------------------------------------------------------   00169600
.***AG.KKCTL08 -MF(L) SPECIAL CHECK                                     00169700
                 AIF   (N'&SYSLIST NE 0).ZG80B  POSITIONALS?            00169800
                 AIF   ('&MEMTOKEN' NE '').ZG80B  KEYS?                 00169900
                 AIF   ('&REQUEST' NE '').ZG80B  KEYS?                  00170000
                 AIF   ('&TOKEN' NE '').ZG80B   KEYS?                   00170100
                 AIF   ('&USERDATA' NE '').ZG80B  KEYS?                 00170200
                 AIF   ('&RETMSGTOKEN' NE '').ZG80B  KEYS?              00170300
                 AIF   ('&DATATYPE' NE '').ZG80B  KEYS?                 00170400
                 AIF   ('&STATUS' NE '').ZG80B  KEYS?                   00170500
                 AIF   ('&SOURCE' NE '').ZG80B  KEYS?                   00170600
                 AIF   ('&ANSAREA' NE '').ZG80B  KEYS?                  00170700
                 AIF   ('&ANSLEN' NE '').ZG80B  KEYS?                   00170800
                 AIF   ('&TYPE' NE '').ZG80B    KEYS?                   00170900
                 AIF   ('&NOTIFYEXIT' NE '').ZG80B  KEYS?               00171000
                 AIF   ('&MSGEXIT' NE '').ZG80B  KEYS?                  00171100
                 AIF   ('&EXITPARMS' NE '').ZG80B  KEYS?                00171200
                 AIF   ('&RETCODE' NE '').ZG80B  KEYS?                  00171300
                 AIF   ('&RSNCODE' NE '').ZG80B  KEYS?                  00171400
                 AGO    .ZG80C     INVOCATION OKAY                      00171500
.ZG80B           ANOP  ,                                                00171600
&ZMS             SETC  'THE "L" FORM OF "MF"'   *MFLA* MNOTE            00171700
&ZMS             SETC  '&ZMS CAN ONLY HAVE'                             00171800
&ZMS             SETC  '&ZMS THE "PLISTVER" KEY'                        00171900
                 MNOTE 8,' &ZMS SPECIFIED ON THE INVOCATION.'           00172000
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00172100
.ZG80C           ANOP  ,                                                00172200
.*-------------------------------------------------------------------   00172300
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00172400
&ZXMFCTRL        SETC  'INPUT'     SET IN/OUTPUT                        00172500
&XMFCTRL         SETC  '&MF(2,1)'  SET XVARIABLE                        00172600
                 AIF   (N'&MF(2) GT 1).ZG82B    MULTI PARMS             00172700
&XMFCTRL         SETC  '&MF(2)'    SET XVARIABLE                        00172800
.ZG82B           AIF   (K'&MF(2) GT 0).ZG82C                            00172900
&ZXMFCTRL        SETC  ''          RESET IN/OUTPUT                      00173000
&ZMS             SETC  'WHEN "L" IS SPECIFIED'  *KRQDA*                 00173100
&ZMS             SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'              00173200
                 MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                     00173300
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00173400
.ZG82C           ANOP  ,                                                00173500
.*-------------------------------------------------------------------   00173600
.***AG.KCK01 NAME, OPT RQD INPUT, POS(2) -GPR NOT ALLOWED               00173700
                 AIF   (K'&ZXMFCTRL LE 0).ZG82P  NOT I/O                00173800
                 AIF   ('&XMFCTRL'(1,1) NE '(').ZG82P                   00173900
&ZXMFCTRL        SETC  ''          RESET IN/OUTPUT                      00174000
&ZMS             SETC  '"MF='      *KGPRA* MNOTE                        00174100
&ZMS             SETC  '&ZMS.&MF"'                                      00174200
&ZMS             SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'        00174300
                 MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 2.'                00174400
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00174500
.ZG82P           ANOP  ,                                                00174600
.*-------------------------------------------------------------------   00174700
.***AG.KXVAR13 VALUE, OPT INPUT, POS(3) -XVARIABLE                      00174800
&ZXMFATTR        SETC  'INPUT'     SET IN/OUTPUT                        00174900
&XMFATTR         SETC  '0D'                                             00175000
                 AIF   (K'&MF(3) LE 0).ZG85B    PARM                    00175100
&XMFATTR         SETC  '&MF(3,1)'  SET XVARIABLE                        00175200
                 AIF   (N'&MF(3) GT 1).ZG85B    MULTI PARMS             00175300
&XMFATTR         SETC  '&MF(3)'    SET XVARIABLE                        00175400
.ZG85B           ANOP  ,                                                00175500
.*-------------------------------------------------------------------   00175600
.***AG.KCK01 VALUE, OPT INPUT, POS(3) -GPR NOT ALLOWED                  00175700
                 AIF   (K'&ZXMFATTR LE 0).ZG85P  NOT I/O                00175800
                 AIF   ('&XMFATTR'(1,1) NE '(').ZG85P                   00175900
&ZXMFATTR        SETC  ''          RESET IN/OUTPUT                      00176000
&ZMS             SETC  '"MF='      *KGPRA* MNOTE                        00176100
&ZMS             SETC  '&ZMS.&MF"'                                      00176200
&ZMS             SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'        00176300
                 MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 3.'                00176400
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00176500
.ZG85P           ANOP  ,                                                00176600
.*-------------------------------------------------------------------   00176700
.***AG.KCK03 VALUE, OPT INPUT, POS(3) -CHARACTER LENGTH                 00176800
                 AIF   (K'&ZXMFATTR LE 0).ZG85S  NOT I/O                00176900
                 AIF   (K'&XMFATTR LE 60).ZG85S  LNG OK                 00177000
&ZXMFATTR        SETC  ''          RESET IN/OUTPUT                      00177100
&ZMS             SETC  '"MF='      *KLNGA* MNOTE                        00177200
&ZMS             SETC  '&ZMS.&MF"'                                      00177300
&ZMS             SETC  '&ZMS ARGUMENT 3 EXCEEDS THE MAXIMUM'            00177400
                 MNOTE 8,' &ZMS LENGTH OF 60 CHARACTERS.'               00177500
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00177600
.ZG85S           ANOP  ,                                                00177700
.*-------------------------------------------------------------------   00177800
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00177900
.ZG87            ANOP  ,                                                00178000
&ZTLC            SETC 'E'                                               00178100
                 AIF   ('&MF(1)' NE '&ZTLC').ZG95                       00178200
&XMF             SETC  'E'         SET KEYWORD                          00178300
                 AIF   (N'&MF LE 3).ZG87A       CK NUM                  00178400
&ZMS             SETC  '"MF='      *KPOSA* MNOTE                        00178500
&ZMS             SETC  '&ZMS.&MF"'                                      00178600
&ZMS             SETC  '&ZMS "MF"'                                      00178700
                 MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'             00178800
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00178900
.ZG87A           ANOP  ,                                                00179000
.*-------------------------------------------------------------------   00179100
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00179200
&ZXMFCTRL        SETC  'INPUT'     SET IN/OUTPUT                        00179300
&XMFCTRL         SETC  '&MF(2,1)'  SET XVARIABLE                        00179400
                 AIF   (N'&MF(2) GT 1).ZG89B    MULTI PARMS             00179500
&XMFCTRL         SETC  '&MF(2)'    SET XVARIABLE                        00179600
.ZG89B           AIF   (K'&MF(2) GT 0).ZG89C                            00179700
&ZXMFCTRL        SETC  ''          RESET IN/OUTPUT                      00179800
&ZMS             SETC  'WHEN "E" IS SPECIFIED'  *KRQDA*                 00179900
&ZMS             SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'              00180000
                 MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                     00180100
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00180200
.ZG89C           ANOP  ,                                                00180300
.*-------------------------------------------------------------------   00180400
.***AG.KCK02 NAME, OPT RQD INPUT, POS(2) -GPR OUT OF RANGE              00180500
                 AIF   (K'&ZXMFCTRL LE 0).ZG89R  NOT I/O                00180600
                 AIF   ('&XMFCTRL'(1,1) NE '(').ZG89R                   00180700
&ZCGPR           SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)                       00180800
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG89P                     00180900
                 AIF   (K'&ZCGPR GT 2).ZG89Q                            00181000
                 AIF   ('&ZCGPR' EQ '0').ZG89Q                          00181100
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00181200
                 AIF   (T'&ZCGPR NE 'N').ZG89Q  INVALID REG NAME        00181300
.ZG89P           ANOP  ,                                                00181400
                 AIF   (T'&ZCGPR NE 'N').ZG89R  NON NUMERIC             00181500
                 AIF   ('&ZCGPR' LT '1').ZG89Q                          00181600
                 AIF   ('&ZCGPR' LE '12').ZG89R                         00181700
.ZG89Q           ANOP  ,                                                00181800
&ZMS             SETC  '"MF='      *KGPRA* MNOTE                        00181900
&ZMS             SETC  '&ZMS.&MF"'                                      00182000
&ZMS             SETC  '&ZMS ARGUMENT 2 MUST SPECIFY A REGISTER'        00182100
                 MNOTE 8,' &ZMS IN THE RANGE (1)-(12).'                 00182200
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00182300
.ZG89R           ANOP  ,                                                00182400
.*-------------------------------------------------------------------   00182500
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00182600
&XMFSCK          SETC  ''          INITIALIZE XVARIABLE                 00182700
.ZG93A   AIF   ('&MF(3)' NE 'COMPLETE').ZG94A                           00182800
&XMFSCK          SETC  'COMPLETE'  SET KEYWORD                          00182900
.*-------------------------------------------------------------------   00183000
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00183100
.ZG94A           AIF   (K'&XMFSCK GT 0).ZG94C   KEYWORD                 00183200
                 AIF   (K'&MF(3) LE 0).ZG94B                            00183300
&ZMS             SETC  '"MF='      *KUKWA* MNOTE                        00183400
&ZMS             SETC  '&ZMS.&MF"'                                      00183500
&ZMS             SETC  '&ZMS ARGUMENT 3 IS AN UNKNOWN KEYWORD. '        00183600
&ZMS             SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'              00183700
&ZMS             SETC  '&ZMS "COMPLETE".'                               00183800
                 MNOTE 8,' &ZMS '                                       00183900
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00184000
.ZG94B           ANOP  ,                                                00184100
&XMFSCK          SETC  'COMPLETE'  SET DEFAULT KEYWORD                  00184200
.ZG94C           ANOP  ,                                                00184300
&ZXMFSCK         SETC  'INPUT'     SET IN/OUTPUT                        00184400
.*------------------------------------------------------------------    00184500
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00184600
.ZG95            ANOP  ,                                                00184700
&ZXMF            SETC  'INPUT'     SET IN/OUTPUT                        00184800
                 AIF   (K'&XMF GT 0).ZG95E      VALID ARG               00184900
                 AIF   (T'&MF EQ 'O').ZG95D     OMITTED                 00185000
&ZASYSLNDX       SETA  0                                                00185100
.ZG95A           ANOP  ,           POSITIONAL MACRO KEY                 00185200
&ZASYSLNDX       SETA  &ZASYSLNDX+1                                     00185300
                 AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG95C                 00185400
&ZTLC            SETC 'MF'                                              00185500
                 AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG95A        00185600
.ZG95B           ANOP  ,                                                00185700
&ZXMF            SETC  ''          RESET IN/OUTPUT                      00185800
&ZMS             SETC  'THE "MF" KEY'           *KOPTA* MNOTE           00185900
&ZMS             SETC  '&ZMS MUST CONTAIN ONE'                          00186000
                 MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                 00186100
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00186200
                 AGO   .ZG95E                                           00186300
.ZG95C           ANOP  ,                                                00186400
&ZXMF            SETC  ''          RESET IN/OUTPUT                      00186500
&ZMS             SETC  '"MF='      *KUKWA* MNOTE                        00186600
&ZMS             SETC  '&ZMS.&MF"'                                      00186700
&ZMS             SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '        00186800
&ZMS             SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'              00186900
&ZMS             SETC  '&ZMS "S",'                                      00187000
&ZMS             SETC  '&ZMS "L",'                                      00187100
&ZMS             SETC  '&ZMS OR "E".'                                   00187200
                 MNOTE 8,' &ZMS '                                       00187300
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00187400
                 AGO   .ZG95E                                           00187500
.ZG95D           ANOP  ,                                                00187600
&XMF             SETC  'S'         SET DEFAULT KEYWORD                  00187700
&XMFSCK          SETC  'COMPLETE'  COMPLETE CHECKING                    00187800
.ZG95E           ANOP  ,                                                00187900
.********************************************************************   00188000
.***AG.MF02  FULL MACRO SYNTAX CHECKING                                 00188100
.********************************************************************   00188200
                 ACTR  10000                                            00188300
.*-------------------------------------------------------------------   00188400
.***AG.MF03 MF=(SLE)                                                    00188500
                 AIF   ('&XMF' EQ 'L').ZGMFX                            00188600
.*----------------------------------------------------------------***   00188700
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00188800
                 AIF   (N'&MEMTOKEN LE 1).ZG2A  CK NUM                  00188900
&ZMS             SETC  '"MEMTOKEN='             *KPOSA* MNOTE           00189000
&ZMS             SETC  '&ZMS.&MEMTOKEN"'                                00189100
&ZMS             SETC  '&ZMS "MEMTOKEN"'                                00189200
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00189300
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00189400
.ZG2A            ANOP  ,                                                00189500
.*-------------------------------------------------------------------   00189600
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00189700
&ZXMEMTOKEN      SETC  'INPUT'     SET IN/OUTPUT                        00189800
&XMEMTOKEN       SETC  '&MEMTOKEN(1)'           SET XVARIABLE           00189900
                 AIF   (N'&MEMTOKEN GT 1).ZG2B  MULTI PARMS             00190000
&XMEMTOKEN       SETC  '&MEMTOKEN'              SET XVARIABLE           00190100
.ZG2B            AIF   (K'&MEMTOKEN(1) GT 0).ZG2C                       00190200
&ZXMEMTOKEN      SETC  ''          RESET IN/OUTPUT                      00190300
&ZMS             SETC  ' '         *KRQDA*                              00190400
&ZMS             SETC  '&ZMS "MEMTOKEN" KEY AND ITS'                    00190500
                 MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                 00190600
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00190700
.ZG2C            ANOP  ,                                                00190800
.*-------------------------------------------------------------------   00190900
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00191000
                 AIF   (K'&ZXMEMTOKEN LE 0).ZG2R  NOT I/O               00191100
                 AIF   ('&XMEMTOKEN'(1,1) NE '(').ZG2R                  00191200
&ZCGPR           SETC  '&XMEMTOKEN'(2,K'&XMEMTOKEN-2)                   00191300
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG2P                      00191400
                 AIF   (K'&ZCGPR GT 2).ZG2Q                             00191500
                 AIF   ('&ZCGPR' EQ '0').ZG2Q                           00191600
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00191700
                 AIF   (T'&ZCGPR NE 'N').ZG2Q   INVALID REG NAME        00191800
.ZG2P            ANOP  ,                                                00191900
                 AIF   (T'&ZCGPR NE 'N').ZG2R   NON NUMERIC             00192000
                 AIF   ('&ZCGPR' LT '2').ZG2Q                           00192100
                 AIF   ('&ZCGPR' LE '12').ZG2R                          00192200
.ZG2Q            ANOP  ,                                                00192300
&ZMS             SETC  '"MEMTOKEN='             *KGPRA* MNOTE           00192400
&ZMS             SETC  '&ZMS.&MEMTOKEN"'                                00192500
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00192600
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00192700
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00192800
.ZG2R            ANOP  ,                                                00192900
.*------------------------------------------------------------------    00193000
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00193100
&XREQUEST        SETC  ''          INITIALIZE XVARIABLE                 00193200
.*-------------------------------------------------------------------   00193300
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00193400
.ZG6             ANOP  ,                                                00193500
                 AIF   (K'&REQUEST(1) LE 0).ZG6A                        00193600
&ZTLC            SETC 'SAVEMSG'                                         00193700
                 AIF   ('&REQUEST(1)' NE '&ZTLC').ZG16                  00193800
&XREQUEST        SETC  'SAVEMSG'   SET KEYWORD                          00193900
                 AIF   (N'&REQUEST LE 1).ZG6A   CK NUM                  00194000
&ZMS             SETC  '"REQUEST='              *KPOSA* MNOTE           00194100
&ZMS             SETC  '&ZMS.&REQUEST"'                                 00194200
&ZMS             SETC  '&ZMS "REQUEST"'                                 00194300
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00194400
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00194500
.ZG6A            ANOP  ,                                                00194600
.*------------------------------------------------------------------    00194700
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00194800
&ZCVAL           SETC ''           CLEAR ERROR KEY ACCUMULATOR          00194900
.ZG6A0           AIF   (K'&DATATYPE LE 0).ZG6A1  OK                     00195000
&ZCVAL           SETC '&ZCVAL DATATYPE'         INCORRECT KEY USED      00195100
.ZG6A1           AIF   (K'&STATUS LE 0).ZG6A2   OK                      00195200
&ZCVAL           SETC '&ZCVAL STATUS'           INCORRECT KEY USED      00195300
.ZG6A2           AIF   (K'&SOURCE LE 0).ZG6A3   OK                      00195400
&ZCVAL           SETC '&ZCVAL SOURCE'           INCORRECT KEY USED      00195500
.ZG6A3           AIF   (K'&ANSAREA LE 0).ZG6A4  OK                      00195600
&ZCVAL           SETC '&ZCVAL ANSAREA'          INCORRECT KEY USED      00195700
.ZG6A4           AIF   (K'&ANSLEN LE 0).ZG6A5   OK                      00195800
&ZCVAL           SETC '&ZCVAL ANSLEN'           INCORRECT KEY USED      00195900
.ZG6A5           AIF   (K'&TYPE LE 0).ZG6A6     OK                      00196000
&ZCVAL           SETC '&ZCVAL TYPE'             INCORRECT KEY USED      00196100
.ZG6A6           AIF   (K'&NOTIFYEXIT LE 0).ZG6A7  OK                   00196200
&ZCVAL           SETC '&ZCVAL NOTIFYEXIT'       INCORRECT KEY USED      00196300
.ZG6A7           AIF   (K'&MSGEXIT LE 0).ZG6A8  OK                      00196400
&ZCVAL           SETC '&ZCVAL MSGEXIT'          INCORRECT KEY USED      00196500
.ZG6A8           AIF   (K'&EXITPARMS LE 0).ZG6A9  OK                    00196600
&ZCVAL           SETC '&ZCVAL EXITPARMS'        INCORRECT KEY USED      00196700
.ZG6A9           AIF   (K'&ZCVAL LE 0).ZG6A10   OK                      00196800
&ZCVAL           SETC '&ZCVAL'(2,K'&ZCVAL-1)                            00196900
&ZMS             SETC  '"REQUEST'  *KMEIA* MNOTE                        00197000
&ZMS             SETC  '&ZMS.=&REQUEST"'                                00197100
&ZMS             SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'             00197200
                 MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'             00197300
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00197400
.ZG6A10          ANOP  ,                                                00197500
.*----------------------------------------------------------------***   00197600
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00197700
                 AIF   (N'&TOKEN LE 1).ZG8A     CK NUM                  00197800
&ZMS             SETC  '"TOKEN='   *KPOSA* MNOTE                        00197900
&ZMS             SETC  '&ZMS.&TOKEN"'                                   00198000
&ZMS             SETC  '&ZMS "TOKEN"'                                   00198100
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00198200
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00198300
.ZG8A            ANOP  ,                                                00198400
.*-------------------------------------------------------------------   00198500
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00198600
&ZXTOKEN         SETC  'INPUT'     SET IN/OUTPUT                        00198700
&XTOKEN          SETC  '&TOKEN(1)'              SET XVARIABLE           00198800
                 AIF   (N'&TOKEN GT 1).ZG8B     MULTI PARMS             00198900
&XTOKEN          SETC  '&TOKEN'    SET XVARIABLE                        00199000
.ZG8B            AIF   (K'&TOKEN(1) GT 0).ZG8C                          00199100
&ZXTOKEN         SETC  ''          RESET IN/OUTPUT                      00199200
&ZMS             SETC  ' '         *KRQDA*                              00199300
&ZMS             SETC  '&ZMS "TOKEN" KEY AND ITS'                       00199400
                 MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                 00199500
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00199600
.ZG8C            ANOP  ,                                                00199700
.*-------------------------------------------------------------------   00199800
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00199900
                 AIF   (K'&ZXTOKEN LE 0).ZG8R   NOT I/O                 00200000
                 AIF   ('&XTOKEN'(1,1) NE '(').ZG8R                     00200100
&ZCGPR           SETC  '&XTOKEN'(2,K'&XTOKEN-2)                         00200200
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG8P                      00200300
                 AIF   (K'&ZCGPR GT 2).ZG8Q                             00200400
                 AIF   ('&ZCGPR' EQ '0').ZG8Q                           00200500
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00200600
                 AIF   (T'&ZCGPR NE 'N').ZG8Q   INVALID REG NAME        00200700
.ZG8P            ANOP  ,                                                00200800
                 AIF   (T'&ZCGPR NE 'N').ZG8R   NON NUMERIC             00200900
                 AIF   ('&ZCGPR' LT '2').ZG8Q                           00201000
                 AIF   ('&ZCGPR' LE '12').ZG8R                          00201100
.ZG8Q            ANOP  ,                                                00201200
&ZMS             SETC  '"TOKEN='   *KGPRA* MNOTE                        00201300
&ZMS             SETC  '&ZMS.&TOKEN"'                                   00201400
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00201500
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00201600
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00201700
.ZG8R            ANOP  ,                                                00201800
.*----------------------------------------------------------------***   00201900
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00202000
                 AIF   (N'&USERDATA LE 1).ZG11A  CK NUM                 00202100
&ZMS             SETC  '"USERDATA='             *KPOSA* MNOTE           00202200
&ZMS             SETC  '&ZMS.&USERDATA"'                                00202300
&ZMS             SETC  '&ZMS "USERDATA"'                                00202400
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00202500
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00202600
.ZG11A           ANOP  ,                                                00202700
.*-------------------------------------------------------------------   00202800
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00202900
&ZXUSERDATA      SETC  'INPUT'     SET IN/OUTPUT                        00203000
&XUSERDATA       SETC  'NO_CHANGE'                                      00203100
                 AIF   (K'&USERDATA(1) LE 0).ZG11B  PARM                00203200
&XUSERDATA       SETC  '&USERDATA(1)'           SET XVARIABLE           00203300
                 AIF   (N'&USERDATA GT 1).ZG11B  MULTI PARMS            00203400
&XUSERDATA       SETC  '&USERDATA'              SET XVARIABLE           00203500
.ZG11B           ANOP  ,                                                00203600
.*-------------------------------------------------------------------   00203700
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00203800
                 AIF   (K'&ZXUSERDATA LE 0).ZG11R  NOT I/O              00203900
         AIF   ('&XUSERDATA' EQ 'NO_CHANGE').ZG11R                      00204000
                 AIF   ('&XUSERDATA'(1,1) NE '(').ZG11R                 00204100
&ZCGPR           SETC  '&XUSERDATA'(2,K'&XUSERDATA-2)                   00204200
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG11P                     00204300
                 AIF   (K'&ZCGPR GT 2).ZG11Q                            00204400
                 AIF   ('&ZCGPR' EQ '0').ZG11Q                          00204500
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00204600
                 AIF   (T'&ZCGPR NE 'N').ZG11Q  INVALID REG NAME        00204700
.ZG11P           ANOP  ,                                                00204800
                 AIF   (T'&ZCGPR NE 'N').ZG11R  NON NUMERIC             00204900
                 AIF   ('&ZCGPR' LT '2').ZG11Q                          00205000
                 AIF   ('&ZCGPR' LE '12').ZG11R                         00205100
.ZG11Q           ANOP  ,                                                00205200
&ZMS             SETC  '"USERDATA='             *KGPRA* MNOTE           00205300
&ZMS             SETC  '&ZMS.&USERDATA"'                                00205400
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00205500
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00205600
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00205700
.ZG11R           ANOP  ,                                                00205800
.*----------------------------------------------------------------***   00205900
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00206000
                 AIF   (N'&RETMSGTOKEN LE 1).ZG14A  CK NUM              00206100
&ZMS             SETC  '"RETMSGTOKEN='          *KPOSA* MNOTE           00206200
&ZMS             SETC  '&ZMS.&RETMSGTOKEN"'                             00206300
&ZMS             SETC  '&ZMS "RETMSGTOKEN"'                             00206400
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00206500
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00206600
.ZG14A           ANOP  ,                                                00206700
.*-------------------------------------------------------------------   00206800
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00206900
                 AIF   (K'&RETMSGTOKEN(1) LE 0).ZG14C  NO PARM          00207000
&ZXRETMSGTOKEN   SETC  'OUTPUT'    SET OUTPUT                           00207100
&XRETMSGTOKEN    SETC  '&RETMSGTOKEN(1)'        SET XVARIABLE           00207200
                 AIF   (N'&RETMSGTOKEN GT 1).ZG14C                      00207300
&XRETMSGTOKEN    SETC  '&RETMSGTOKEN'           SET XVARIABLE           00207400
.ZG14C           ANOP  ,                                                00207500
.*-------------------------------------------------------------------   00207600
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00207700
                 AIF   (K'&ZXRETMSGTOKEN LE 0).ZG14R  NOT I/O           00207800
                 AIF   ('&XRETMSGTOKEN'(1,1) NE '(').ZG14R              00207900
&ZCGPR           SETC  '&XRETMSGTOKEN'(2,K'&XRETMSGTOKEN-2)             00208000
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG14P                     00208100
                 AIF   (K'&ZCGPR GT 2).ZG14Q                            00208200
                 AIF   ('&ZCGPR' EQ '0').ZG14Q                          00208300
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00208400
                 AIF   (T'&ZCGPR NE 'N').ZG14Q  INVALID REG NAME        00208500
.ZG14P           ANOP  ,                                                00208600
                 AIF   (T'&ZCGPR NE 'N').ZG14R  NON NUMERIC             00208700
                 AIF   ('&ZCGPR' LT '2').ZG14Q                          00208800
                 AIF   ('&ZCGPR' LE '12').ZG14R                         00208900
.ZG14Q           ANOP  ,                                                00209000
&ZMS             SETC  '"RETMSGTOKEN='          *KGPRA* MNOTE           00209100
&ZMS             SETC  '&ZMS.&RETMSGTOKEN"'                             00209200
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00209300
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00209400
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00209500
.ZG14R           ANOP  ,                                                00209600
.*-------------------------------------------------------------------   00209700
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00209800
.ZG16            ANOP  ,                                                00209900
&ZTLC            SETC 'DISCARDMSG'                                      00210000
                 AIF   ('&REQUEST(1)' NE '&ZTLC').ZG20                  00210100
&XREQUEST        SETC  'DISCARDMSG'             SET KEYWORD             00210200
                 AIF   (N'&REQUEST LE 1).ZG16A  CK NUM                  00210300
&ZMS             SETC  '"REQUEST='              *KPOSA* MNOTE           00210400
&ZMS             SETC  '&ZMS.&REQUEST"'                                 00210500
&ZMS             SETC  '&ZMS "REQUEST"'                                 00210600
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00210700
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00210800
.ZG16A           ANOP  ,                                                00210900
.*------------------------------------------------------------------    00211000
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00211100
&ZCVAL           SETC ''           CLEAR ERROR KEY ACCUMULATOR          00211200
.ZG16A0          AIF   (K'&USERDATA LE 0).ZG16A1  OK                    00211300
&ZCVAL           SETC '&ZCVAL USERDATA'         INCORRECT KEY USED      00211400
.ZG16A1          AIF   (K'&RETMSGTOKEN LE 0).ZG16A2  OK                 00211500
&ZCVAL           SETC '&ZCVAL RETMSGTOKEN'      INCORRECT KEY USED      00211600
.ZG16A2          AIF   (K'&DATATYPE LE 0).ZG16A3  OK                    00211700
&ZCVAL           SETC '&ZCVAL DATATYPE'         INCORRECT KEY USED      00211800
.ZG16A3          AIF   (K'&STATUS LE 0).ZG16A4  OK                      00211900
&ZCVAL           SETC '&ZCVAL STATUS'           INCORRECT KEY USED      00212000
.ZG16A4          AIF   (K'&SOURCE LE 0).ZG16A5  OK                      00212100
&ZCVAL           SETC '&ZCVAL SOURCE'           INCORRECT KEY USED      00212200
.ZG16A5          AIF   (K'&ANSAREA LE 0).ZG16A6  OK                     00212300
&ZCVAL           SETC '&ZCVAL ANSAREA'          INCORRECT KEY USED      00212400
.ZG16A6          AIF   (K'&ANSLEN LE 0).ZG16A7  OK                      00212500
&ZCVAL           SETC '&ZCVAL ANSLEN'           INCORRECT KEY USED      00212600
.ZG16A7          AIF   (K'&TYPE LE 0).ZG16A8    OK                      00212700
&ZCVAL           SETC '&ZCVAL TYPE'             INCORRECT KEY USED      00212800
.ZG16A8          AIF   (K'&NOTIFYEXIT LE 0).ZG16A9  OK                  00212900
&ZCVAL           SETC '&ZCVAL NOTIFYEXIT'       INCORRECT KEY USED      00213000
.ZG16A9          AIF   (K'&MSGEXIT LE 0).ZG16A10  OK                    00213100
&ZCVAL           SETC '&ZCVAL MSGEXIT'          INCORRECT KEY USED      00213200
.ZG16A10         AIF   (K'&EXITPARMS LE 0).ZG16A11  OK                  00213300
&ZCVAL           SETC '&ZCVAL EXITPARMS'        INCORRECT KEY USED      00213400
.ZG16A11         AIF   (K'&ZCVAL LE 0).ZG16A12  OK                      00213500
&ZCVAL           SETC '&ZCVAL'(2,K'&ZCVAL-1)                            00213600
&ZMS             SETC  '"REQUEST'  *KMEIA* MNOTE                        00213700
&ZMS             SETC  '&ZMS.=&REQUEST"'                                00213800
&ZMS             SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'             00213900
                 MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'             00214000
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00214100
.ZG16A12         ANOP  ,                                                00214200
.*----------------------------------------------------------------***   00214300
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00214400
                 AIF   (N'&TOKEN LE 1).ZG18A    CK NUM                  00214500
&ZMS             SETC  '"TOKEN='   *KPOSA* MNOTE                        00214600
&ZMS             SETC  '&ZMS.&TOKEN"'                                   00214700
&ZMS             SETC  '&ZMS "TOKEN"'                                   00214800
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00214900
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00215000
.ZG18A           ANOP  ,                                                00215100
.*-------------------------------------------------------------------   00215200
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00215300
&ZXTOKEN         SETC  'INPUT'     SET IN/OUTPUT                        00215400
&XTOKEN          SETC  '&TOKEN(1)'              SET XVARIABLE           00215500
                 AIF   (N'&TOKEN GT 1).ZG18B    MULTI PARMS             00215600
&XTOKEN          SETC  '&TOKEN'    SET XVARIABLE                        00215700
.ZG18B           AIF   (K'&TOKEN(1) GT 0).ZG18C                         00215800
&ZXTOKEN         SETC  ''          RESET IN/OUTPUT                      00215900
&ZMS             SETC  ' '         *KRQDA*                              00216000
&ZMS             SETC  '&ZMS "TOKEN" KEY AND ITS'                       00216100
                 MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                 00216200
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00216300
.ZG18C           ANOP  ,                                                00216400
.*-------------------------------------------------------------------   00216500
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00216600
                 AIF   (K'&ZXTOKEN LE 0).ZG18R  NOT I/O                 00216700
                 AIF   ('&XTOKEN'(1,1) NE '(').ZG18R                    00216800
&ZCGPR           SETC  '&XTOKEN'(2,K'&XTOKEN-2)                         00216900
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG18P                     00217000
                 AIF   (K'&ZCGPR GT 2).ZG18Q                            00217100
                 AIF   ('&ZCGPR' EQ '0').ZG18Q                          00217200
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00217300
                 AIF   (T'&ZCGPR NE 'N').ZG18Q  INVALID REG NAME        00217400
.ZG18P           ANOP  ,                                                00217500
                 AIF   (T'&ZCGPR NE 'N').ZG18R  NON NUMERIC             00217600
                 AIF   ('&ZCGPR' LT '2').ZG18Q                          00217700
                 AIF   ('&ZCGPR' LE '12').ZG18R                         00217800
.ZG18Q           ANOP  ,                                                00217900
&ZMS             SETC  '"TOKEN='   *KGPRA* MNOTE                        00218000
&ZMS             SETC  '&ZMS.&TOKEN"'                                   00218100
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00218200
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00218300
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00218400
.ZG18R           ANOP  ,                                                00218500
.*-------------------------------------------------------------------   00218600
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00218700
.ZG20            ANOP  ,                                                00218800
&ZTLC            SETC 'QUERYMSG'                                        00218900
                 AIF   ('&REQUEST(1)' NE '&ZTLC').ZG45                  00219000
&XREQUEST        SETC  'QUERYMSG'  SET KEYWORD                          00219100
                 AIF   (N'&REQUEST LE 1).ZG20A  CK NUM                  00219200
&ZMS             SETC  '"REQUEST='              *KPOSA* MNOTE           00219300
&ZMS             SETC  '&ZMS.&REQUEST"'                                 00219400
&ZMS             SETC  '&ZMS "REQUEST"'                                 00219500
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00219600
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00219700
.ZG20A           ANOP  ,                                                00219800
.*------------------------------------------------------------------    00219900
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00220000
&ZCVAL           SETC ''           CLEAR ERROR KEY ACCUMULATOR          00220100
.ZG20A0          AIF   (K'&USERDATA LE 0).ZG20A1  OK                    00220200
&ZCVAL           SETC '&ZCVAL USERDATA'         INCORRECT KEY USED      00220300
.ZG20A1          AIF   (K'&RETMSGTOKEN LE 0).ZG20A2  OK                 00220400
&ZCVAL           SETC '&ZCVAL RETMSGTOKEN'      INCORRECT KEY USED      00220500
.ZG20A2          AIF   (K'&TYPE LE 0).ZG20A3    OK                      00220600
&ZCVAL           SETC '&ZCVAL TYPE'             INCORRECT KEY USED      00220700
.ZG20A3          AIF   (K'&NOTIFYEXIT LE 0).ZG20A4  OK                  00220800
&ZCVAL           SETC '&ZCVAL NOTIFYEXIT'       INCORRECT KEY USED      00220900
.ZG20A4          AIF   (K'&MSGEXIT LE 0).ZG20A5  OK                     00221000
&ZCVAL           SETC '&ZCVAL MSGEXIT'          INCORRECT KEY USED      00221100
.ZG20A5          AIF   (K'&EXITPARMS LE 0).ZG20A6  OK                   00221200
&ZCVAL           SETC '&ZCVAL EXITPARMS'        INCORRECT KEY USED      00221300
.ZG20A6          AIF   (K'&ZCVAL LE 0).ZG20A7   OK                      00221400
&ZCVAL           SETC '&ZCVAL'(2,K'&ZCVAL-1)                            00221500
&ZMS             SETC  '"REQUEST'  *KMEIA* MNOTE                        00221600
&ZMS             SETC  '&ZMS.=&REQUEST"'                                00221700
&ZMS             SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'             00221800
                 MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'             00221900
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00222000
.ZG20A7          ANOP  ,                                                00222100
.*------------------------------------------------------------------    00222200
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00222300
&XDATATYPE       SETC  ''          INITIALIZE XVARIABLE                 00222400
.*-------------------------------------------------------------------   00222500
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00222600
.ZG23            ANOP  ,                                                00222700
                 AIF   (K'&DATATYPE(1) LE 0).ZG23A                      00222800
&ZTLC            SETC 'MSGOUT'                                          00222900
                 AIF   ('&DATATYPE(1)' NE '&ZTLC').ZG30                 00223000
&XDATATYPE       SETC  'MSGOUT'    SET KEYWORD                          00223100
                 AIF   (N'&DATATYPE LE 1).ZG23A  CK NUM                 00223200
&ZMS             SETC  '"DATATYPE='             *KPOSA* MNOTE           00223300
&ZMS             SETC  '&ZMS.&DATATYPE"'                                00223400
&ZMS             SETC  '&ZMS "DATATYPE"'                                00223500
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00223600
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00223700
.ZG23A           ANOP  ,                                                00223800
.*------------------------------------------------------------------    00223900
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00224000
&ZCVAL           SETC ''           CLEAR ERROR KEY ACCUMULATOR          00224100
.ZG23A0          AIF   (K'&SOURCE LE 0).ZG23A1  OK                      00224200
&ZCVAL           SETC '&ZCVAL SOURCE'           INCORRECT KEY USED      00224300
.ZG23A1          AIF   (K'&TOKEN LE 0).ZG23A2   OK                      00224400
&ZCVAL           SETC '&ZCVAL TOKEN'            INCORRECT KEY USED      00224500
.ZG23A2          AIF   (K'&ZCVAL LE 0).ZG23A3   OK                      00224600
&ZCVAL           SETC '&ZCVAL'(2,K'&ZCVAL-1)                            00224700
&ZMS             SETC  '"DATATYPE'              *KMEIA* MNOTE           00224800
&ZMS             SETC  '&ZMS.=&DATATYPE"'                               00224900
&ZMS             SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'             00225000
                 MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'             00225100
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00225200
.ZG23A3          ANOP  ,                                                00225300
.*------------------------------------------------------------------    00225400
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00225500
&XSTATUS         SETC  ''          INITIALIZE XVARIABLE                 00225600
.*-------------------------------------------------------------------   00225700
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00225800
.ZG26            ANOP  ,                                                00225900
                 AIF   (K'&STATUS(1) LE 0).ZG26A                        00226000
&ZTLC            SETC 'SAVED'                                           00226100
                 AIF   ('&STATUS(1)' NE '&ZTLC').ZG27                   00226200
&XSTATUS         SETC  'SAVED'     SET KEYWORD                          00226300
                 AIF   (N'&STATUS LE 1).ZG26A   CK NUM                  00226400
&ZMS             SETC  '"STATUS='  *KPOSA* MNOTE                        00226500
&ZMS             SETC  '&ZMS.&STATUS"'                                  00226600
&ZMS             SETC  '&ZMS "STATUS"'                                  00226700
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00226800
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00226900
.ZG26A           ANOP  ,                                                00227000
.*-------------------------------------------------------------------   00227100
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00227200
.ZG27            ANOP  ,                                                00227300
&ZTLC            SETC 'COMPLETE'                                        00227400
                 AIF   ('&STATUS(1)' NE '&ZTLC').ZG28                   00227500
&XSTATUS         SETC  'COMPLETE'  SET KEYWORD                          00227600
                 AIF   (N'&STATUS LE 1).ZG27A   CK NUM                  00227700
&ZMS             SETC  '"STATUS='  *KPOSA* MNOTE                        00227800
&ZMS             SETC  '&ZMS.&STATUS"'                                  00227900
&ZMS             SETC  '&ZMS "STATUS"'                                  00228000
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00228100
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00228200
.ZG27A           ANOP  ,                                                00228300
.*-------------------------------------------------------------------   00228400
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00228500
.ZG28            ANOP  ,                                                00228600
&ZTLC            SETC 'INCOMPLETE'                                      00228700
                 AIF   ('&STATUS(1)' NE '&ZTLC').ZG29                   00228800
&XSTATUS         SETC  'INCOMPLETE'             SET KEYWORD             00228900
                 AIF   (N'&STATUS LE 1).ZG28A   CK NUM                  00229000
&ZMS             SETC  '"STATUS='  *KPOSA* MNOTE                        00229100
&ZMS             SETC  '&ZMS.&STATUS"'                                  00229200
&ZMS             SETC  '&ZMS "STATUS"'                                  00229300
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00229400
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00229500
.ZG28A           ANOP  ,                                                00229600
.*------------------------------------------------------------------    00229700
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00229800
.ZG29            ANOP  ,                                                00229900
&ZXSTATUS        SETC  'INPUT'     SET IN/OUTPUT                        00230000
                 AIF   (K'&XSTATUS GT 0).ZG29E  VALID ARG               00230100
                 AIF   (T'&STATUS EQ 'O').ZG29D  OMITTED                00230200
&ZASYSLNDX       SETA  0                                                00230300
.ZG29A           ANOP  ,           POSITIONAL MACRO KEY                 00230400
&ZASYSLNDX       SETA  &ZASYSLNDX+1                                     00230500
                 AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG29C                 00230600
&ZTLC            SETC 'STATUS'                                          00230700
                 AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG29A        00230800
.ZG29B           ANOP  ,                                                00230900
&ZXSTATUS        SETC  ''          RESET IN/OUTPUT                      00231000
&ZMS             SETC  'THE "STATUS" KEY'       *KOPTA* MNOTE           00231100
&ZMS             SETC  '&ZMS MUST CONTAIN ONE'                          00231200
                 MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                 00231300
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00231400
                 AGO   .ZG29E                                           00231500
.ZG29C           ANOP  ,                                                00231600
&ZXSTATUS        SETC  ''          RESET IN/OUTPUT                      00231700
&ZMS             SETC  '"STATUS='  *KUKWA* MNOTE                        00231800
&ZMS             SETC  '&ZMS.&STATUS"'                                  00231900
&ZMS             SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '        00232000
&ZMS             SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'              00232100
&ZMS             SETC  '&ZMS "SAVED",'                                  00232200
&ZMS             SETC  '&ZMS "COMPLETE",'                               00232300
&ZMS             SETC  '&ZMS OR "INCOMPLETE".'                          00232400
                 MNOTE 8,' &ZMS '                                       00232500
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00232600
                 AGO   .ZG29E                                           00232700
.ZG29D           ANOP  ,                                                00232800
&XSTATUS         SETC  'SAVED'     SET DEFAULT KEYWORD                  00232900
.ZG29E           ANOP  ,                                                00233000
.*------------------------------------------------------------------    00233100
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00233200
                 AIF   (K'&STATUS(1) GT 0).ZG29F  PARM                  00233300
&XSTATUS         SETC  ''          ENSURE NULL KEYWORD                  00233400
&ZXSTATUS        SETC  ''          RESET IN/OUTPUT                      00233500
&ZMS             SETC  'THE'                                            00233600
&ZMS             SETC  '&ZMS "STATUS" KEY AND ITS'                      00233700
&ZMS             SETC  '&ZMS ARGUMENT ARE REQUIRED.'                    00233800
&ZMS             SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'              00233900
&ZMS             SETC  '&ZMS "SAVED",'                                  00234000
&ZMS             SETC  '&ZMS "COMPLETE",'                               00234100
&ZMS             SETC  '&ZMS OR "INCOMPLETE".'                          00234200
                 MNOTE 8,' &ZMS '                                       00234300
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00234400
.ZG29F           ANOP  ,                                                00234500
.*-------------------------------------------------------------------   00234600
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00234700
.ZG30            ANOP  ,                                                00234800
&ZTLC            SETC 'MSGIN'                                           00234900
                 AIF   ('&DATATYPE(1)' NE '&ZTLC').ZG34                 00235000
&XDATATYPE       SETC  'MSGIN'     SET KEYWORD                          00235100
                 AIF   (N'&DATATYPE LE 1).ZG30A  CK NUM                 00235200
&ZMS             SETC  '"DATATYPE='             *KPOSA* MNOTE           00235300
&ZMS             SETC  '&ZMS.&DATATYPE"'                                00235400
&ZMS             SETC  '&ZMS "DATATYPE"'                                00235500
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00235600
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00235700
.ZG30A           ANOP  ,                                                00235800
.*------------------------------------------------------------------    00235900
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00236000
&ZCVAL           SETC ''           CLEAR ERROR KEY ACCUMULATOR          00236100
.ZG30A0          AIF   (K'&STATUS LE 0).ZG30A1  OK                      00236200
&ZCVAL           SETC '&ZCVAL STATUS'           INCORRECT KEY USED      00236300
.ZG30A1          AIF   (K'&TOKEN LE 0).ZG30A2   OK                      00236400
&ZCVAL           SETC '&ZCVAL TOKEN'            INCORRECT KEY USED      00236500
.ZG30A2          AIF   (K'&ZCVAL LE 0).ZG30A3   OK                      00236600
&ZCVAL           SETC '&ZCVAL'(2,K'&ZCVAL-1)                            00236700
&ZMS             SETC  '"DATATYPE'              *KMEIA* MNOTE           00236800
&ZMS             SETC  '&ZMS.=&DATATYPE"'                               00236900
&ZMS             SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'             00237000
                 MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'             00237100
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00237200
.ZG30A3          ANOP  ,                                                00237300
.*----------------------------------------------------------------***   00237400
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00237500
                 AIF   (N'&SOURCE LE 1).ZG32A   CK NUM                  00237600
&ZMS             SETC  '"SOURCE='  *KPOSA* MNOTE                        00237700
&ZMS             SETC  '&ZMS.&SOURCE"'                                  00237800
&ZMS             SETC  '&ZMS "SOURCE"'                                  00237900
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00238000
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00238100
.ZG32A           ANOP  ,                                                00238200
.*-------------------------------------------------------------------   00238300
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00238400
&ZXSOURCE        SETC  'INPUT'     SET IN/OUTPUT                        00238500
&XSOURCE         SETC  'ANY'                                            00238600
                 AIF   (K'&SOURCE(1) LE 0).ZG32B  PARM                  00238700
&XSOURCE         SETC  '&SOURCE(1)'             SET XVARIABLE           00238800
                 AIF   (N'&SOURCE GT 1).ZG32B   MULTI PARMS             00238900
&XSOURCE         SETC  '&SOURCE'   SET XVARIABLE                        00239000
.ZG32B           ANOP  ,                                                00239100
.*-------------------------------------------------------------------   00239200
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00239300
                 AIF   (K'&ZXSOURCE LE 0).ZG32R  NOT I/O                00239400
         AIF   ('&XSOURCE' EQ 'ANY').ZG32R                              00239500
                 AIF   ('&XSOURCE'(1,1) NE '(').ZG32R                   00239600
&ZCGPR           SETC  '&XSOURCE'(2,K'&XSOURCE-2)                       00239700
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG32P                     00239800
                 AIF   (K'&ZCGPR GT 2).ZG32Q                            00239900
                 AIF   ('&ZCGPR' EQ '0').ZG32Q                          00240000
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00240100
                 AIF   (T'&ZCGPR NE 'N').ZG32Q  INVALID REG NAME        00240200
.ZG32P           ANOP  ,                                                00240300
                 AIF   (T'&ZCGPR NE 'N').ZG32R  NON NUMERIC             00240400
                 AIF   ('&ZCGPR' LT '2').ZG32Q                          00240500
                 AIF   ('&ZCGPR' LE '12').ZG32R                         00240600
.ZG32Q           ANOP  ,                                                00240700
&ZMS             SETC  '"SOURCE='  *KGPRA* MNOTE                        00240800
&ZMS             SETC  '&ZMS.&SOURCE"'                                  00240900
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00241000
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00241100
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00241200
.ZG32R           ANOP  ,                                                00241300
.*-------------------------------------------------------------------   00241400
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00241500
.ZG34            ANOP  ,                                                00241600
&ZTLC            SETC 'DETAIL'                                          00241700
                 AIF   ('&DATATYPE(1)' NE '&ZTLC').ZG38                 00241800
&XDATATYPE       SETC  'DETAIL'    SET KEYWORD                          00241900
                 AIF   (N'&DATATYPE LE 1).ZG34A  CK NUM                 00242000
&ZMS             SETC  '"DATATYPE='             *KPOSA* MNOTE           00242100
&ZMS             SETC  '&ZMS.&DATATYPE"'                                00242200
&ZMS             SETC  '&ZMS "DATATYPE"'                                00242300
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00242400
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00242500
.ZG34A           ANOP  ,                                                00242600
.*------------------------------------------------------------------    00242700
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00242800
&ZCVAL           SETC ''           CLEAR ERROR KEY ACCUMULATOR          00242900
.ZG34A0          AIF   (K'&STATUS LE 0).ZG34A1  OK                      00243000
&ZCVAL           SETC '&ZCVAL STATUS'           INCORRECT KEY USED      00243100
.ZG34A1          AIF   (K'&SOURCE LE 0).ZG34A2  OK                      00243200
&ZCVAL           SETC '&ZCVAL SOURCE'           INCORRECT KEY USED      00243300
.ZG34A2          AIF   (K'&ZCVAL LE 0).ZG34A3   OK                      00243400
&ZCVAL           SETC '&ZCVAL'(2,K'&ZCVAL-1)                            00243500
&ZMS             SETC  '"DATATYPE'              *KMEIA* MNOTE           00243600
&ZMS             SETC  '&ZMS.=&DATATYPE"'                               00243700
&ZMS             SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'             00243800
                 MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'             00243900
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00244000
.ZG34A3          ANOP  ,                                                00244100
.*----------------------------------------------------------------***   00244200
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00244300
                 AIF   (N'&TOKEN LE 1).ZG36A    CK NUM                  00244400
&ZMS             SETC  '"TOKEN='   *KPOSA* MNOTE                        00244500
&ZMS             SETC  '&ZMS.&TOKEN"'                                   00244600
&ZMS             SETC  '&ZMS "TOKEN"'                                   00244700
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00244800
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00244900
.ZG36A           ANOP  ,                                                00245000
.*-------------------------------------------------------------------   00245100
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00245200
&ZXTOKEN         SETC  'INPUT'     SET IN/OUTPUT                        00245300
&XTOKEN          SETC  '&TOKEN(1)'              SET XVARIABLE           00245400
                 AIF   (N'&TOKEN GT 1).ZG36B    MULTI PARMS             00245500
&XTOKEN          SETC  '&TOKEN'    SET XVARIABLE                        00245600
.ZG36B           AIF   (K'&TOKEN(1) GT 0).ZG36C                         00245700
&ZXTOKEN         SETC  ''          RESET IN/OUTPUT                      00245800
&ZMS             SETC  ' '         *KRQDA*                              00245900
&ZMS             SETC  '&ZMS "TOKEN" KEY AND ITS'                       00246000
                 MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                 00246100
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00246200
.ZG36C           ANOP  ,                                                00246300
.*-------------------------------------------------------------------   00246400
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00246500
                 AIF   (K'&ZXTOKEN LE 0).ZG36R  NOT I/O                 00246600
                 AIF   ('&XTOKEN'(1,1) NE '(').ZG36R                    00246700
&ZCGPR           SETC  '&XTOKEN'(2,K'&XTOKEN-2)                         00246800
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG36P                     00246900
                 AIF   (K'&ZCGPR GT 2).ZG36Q                            00247000
                 AIF   ('&ZCGPR' EQ '0').ZG36Q                          00247100
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00247200
                 AIF   (T'&ZCGPR NE 'N').ZG36Q  INVALID REG NAME        00247300
.ZG36P           ANOP  ,                                                00247400
                 AIF   (T'&ZCGPR NE 'N').ZG36R  NON NUMERIC             00247500
                 AIF   ('&ZCGPR' LT '2').ZG36Q                          00247600
                 AIF   ('&ZCGPR' LE '12').ZG36R                         00247700
.ZG36Q           ANOP  ,                                                00247800
&ZMS             SETC  '"TOKEN='   *KGPRA* MNOTE                        00247900
&ZMS             SETC  '&ZMS.&TOKEN"'                                   00248000
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00248100
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00248200
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00248300
.ZG36R           ANOP  ,                                                00248400
.*------------------------------------------------------------------    00248500
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00248600
.ZG38            ANOP  ,                                                00248700
&ZXDATATYPE      SETC  'INPUT'     SET IN/OUTPUT                        00248800
                 AIF   (K'&XDATATYPE GT 0).ZG38E  VALID ARG             00248900
                 AIF   (T'&DATATYPE EQ 'O').ZG38D  OMITTED              00249000
&ZASYSLNDX       SETA  0                                                00249100
.ZG38A           ANOP  ,           POSITIONAL MACRO KEY                 00249200
&ZASYSLNDX       SETA  &ZASYSLNDX+1                                     00249300
                 AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG38C                 00249400
&ZTLC            SETC 'DATATYPE'                                        00249500
                 AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG38A        00249600
.ZG38B           ANOP  ,                                                00249700
&ZXDATATYPE      SETC  ''          RESET IN/OUTPUT                      00249800
&ZMS             SETC  'THE "DATATYPE" KEY'     *KOPTA* MNOTE           00249900
&ZMS             SETC  '&ZMS MUST CONTAIN ONE'                          00250000
                 MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                 00250100
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00250200
                 AGO   .ZG38E                                           00250300
.ZG38C           ANOP  ,                                                00250400
&ZXDATATYPE      SETC  ''          RESET IN/OUTPUT                      00250500
&ZMS             SETC  '"DATATYPE='             *KUKWA* MNOTE           00250600
&ZMS             SETC  '&ZMS.&DATATYPE"'                                00250700
&ZMS             SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '        00250800
&ZMS             SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'              00250900
&ZMS             SETC  '&ZMS "MSGOUT",'                                 00251000
&ZMS             SETC  '&ZMS "MSGIN",'                                  00251100
&ZMS             SETC  '&ZMS OR "DETAIL".'                              00251200
                 MNOTE 8,' &ZMS '                                       00251300
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00251400
                 AGO   .ZG38E                                           00251500
.ZG38D           ANOP  ,                                                00251600
&XDATATYPE       SETC  'MSGOUT'    SET DEFAULT KEYWORD                  00251700
.ZG38E           ANOP  ,                                                00251800
.*------------------------------------------------------------------    00251900
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00252000
                 AIF   (K'&DATATYPE(1) GT 0).ZG38F  PARM                00252100
&XDATATYPE       SETC  ''          ENSURE NULL KEYWORD                  00252200
&ZXDATATYPE      SETC  ''          RESET IN/OUTPUT                      00252300
&ZMS             SETC  'THE'                                            00252400
&ZMS             SETC  '&ZMS "DATATYPE" KEY AND ITS'                    00252500
&ZMS             SETC  '&ZMS ARGUMENT ARE REQUIRED.'                    00252600
&ZMS             SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'              00252700
&ZMS             SETC  '&ZMS "MSGOUT",'                                 00252800
&ZMS             SETC  '&ZMS "MSGIN",'                                  00252900
&ZMS             SETC  '&ZMS OR "DETAIL".'                              00253000
                 MNOTE 8,' &ZMS '                                       00253100
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00253200
.ZG38F           ANOP  ,                                                00253300
.*----------------------------------------------------------------***   00253400
.***AG.KXVAR05 NAME, RQD OUTPUT, KEYS -XVARIABLE KEY                    00253500
                 AIF   (N'&ANSAREA LE 1).ZG40A  CK NUM                  00253600
&ZMS             SETC  '"ANSAREA='              *KPOSA* MNOTE           00253700
&ZMS             SETC  '&ZMS.&ANSAREA"'                                 00253800
&ZMS             SETC  '&ZMS "ANSAREA"'                                 00253900
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00254000
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00254100
.ZG40A           ANOP  ,                                                00254200
.*-------------------------------------------------------------------   00254300
.***AG.KXVAR06 NAME, RQD OUTPUT, KEYS -XVARIABLE                        00254400
&ZXANSAREA       SETC  'OUTPUT'    SET IN/OUTPUT                        00254500
&XANSAREA        SETC  '&ANSAREA(1)'            SET XVARIABLE           00254600
                 AIF   (N'&ANSAREA GT 1).ZG40B  MULTI PARMS             00254700
&XANSAREA        SETC  '&ANSAREA'  SET XVARIABLE                        00254800
.ZG40B           AIF   (K'&ANSAREA(1) GT 0).ZG40C                       00254900
&ZXANSAREA       SETC  ''          RESET IN/OUTPUT                      00255000
&ZMS             SETC  ' '         *KRQDA*                              00255100
&ZMS             SETC  '&ZMS "ANSAREA" KEY AND ITS'                     00255200
                 MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                 00255300
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00255400
.ZG40C           ANOP  ,                                                00255500
.*-------------------------------------------------------------------   00255600
.***AG.KCK02 NAME, RQD OUTPUT, KEYS -GPR OUT OF RANGE                   00255700
                 AIF   (K'&ZXANSAREA LE 0).ZG40R  NOT I/O               00255800
                 AIF   ('&XANSAREA'(1,1) NE '(').ZG40R                  00255900
&ZCGPR           SETC  '&XANSAREA'(2,K'&XANSAREA-2)                     00256000
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG40P                     00256100
                 AIF   (K'&ZCGPR GT 2).ZG40Q                            00256200
                 AIF   ('&ZCGPR' EQ '0').ZG40Q                          00256300
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00256400
                 AIF   (T'&ZCGPR NE 'N').ZG40Q  INVALID REG NAME        00256500
.ZG40P           ANOP  ,                                                00256600
                 AIF   (T'&ZCGPR NE 'N').ZG40R  NON NUMERIC             00256700
                 AIF   ('&ZCGPR' LT '2').ZG40Q                          00256800
                 AIF   ('&ZCGPR' LE '12').ZG40R                         00256900
.ZG40Q           ANOP  ,                                                00257000
&ZMS             SETC  '"ANSAREA='              *KGPRA* MNOTE           00257100
&ZMS             SETC  '&ZMS.&ANSAREA"'                                 00257200
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00257300
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00257400
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00257500
.ZG40R           ANOP  ,                                                00257600
.*----------------------------------------------------------------***   00257700
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00257800
                 AIF   (N'&ANSLEN LE 1).ZG43A   CK NUM                  00257900
&ZMS             SETC  '"ANSLEN='  *KPOSA* MNOTE                        00258000
&ZMS             SETC  '&ZMS.&ANSLEN"'                                  00258100
&ZMS             SETC  '&ZMS "ANSLEN"'                                  00258200
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00258300
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00258400
.ZG43A           ANOP  ,                                                00258500
.*-------------------------------------------------------------------   00258600
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00258700
&ZXANSLEN        SETC  'INPUT'     SET IN/OUTPUT                        00258800
&XANSLEN         SETC  '&ANSLEN(1)'             SET XVARIABLE           00258900
                 AIF   (N'&ANSLEN GT 1).ZG43B   MULTI PARMS             00259000
&XANSLEN         SETC  '&ANSLEN'   SET XVARIABLE                        00259100
.ZG43B           AIF   (K'&ANSLEN(1) GT 0).ZG43C                        00259200
&ZXANSLEN        SETC  ''          RESET IN/OUTPUT                      00259300
&ZMS             SETC  ' '         *KRQDA*                              00259400
&ZMS             SETC  '&ZMS "ANSLEN" KEY AND ITS'                      00259500
                 MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                 00259600
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00259700
.ZG43C           ANOP  ,                                                00259800
.*-------------------------------------------------------------------   00259900
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00260000
                 AIF   (K'&ZXANSLEN LE 0).ZG43R  NOT I/O                00260100
                 AIF   ('&XANSLEN'(1,1) NE '(').ZG43R                   00260200
&ZCGPR           SETC  '&XANSLEN'(2,K'&XANSLEN-2)                       00260300
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG43P                     00260400
                 AIF   (K'&ZCGPR GT 2).ZG43Q                            00260500
                 AIF   ('&ZCGPR' EQ '0').ZG43Q                          00260600
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00260700
                 AIF   (T'&ZCGPR NE 'N').ZG43Q  INVALID REG NAME        00260800
.ZG43P           ANOP  ,                                                00260900
                 AIF   (T'&ZCGPR NE 'N').ZG43R  NON NUMERIC             00261000
                 AIF   ('&ZCGPR' LT '2').ZG43Q                          00261100
                 AIF   ('&ZCGPR' LE '12').ZG43R                         00261200
.ZG43Q           ANOP  ,                                                00261300
&ZMS             SETC  '"ANSLEN='  *KGPRA* MNOTE                        00261400
&ZMS             SETC  '&ZMS.&ANSLEN"'                                  00261500
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00261600
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00261700
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00261800
.ZG43R           ANOP  ,                                                00261900
.*-------------------------------------------------------------------   00262000
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00262100
.ZG45            ANOP  ,                                                00262200
&ZTLC            SETC 'COMPLETION'                                      00262300
                 AIF   ('&REQUEST(1)' NE '&ZTLC').ZG56                  00262400
&XREQUEST        SETC  'COMPLETION'             SET KEYWORD             00262500
                 AIF   (N'&REQUEST LE 1).ZG45A  CK NUM                  00262600
&ZMS             SETC  '"REQUEST='              *KPOSA* MNOTE           00262700
&ZMS             SETC  '&ZMS.&REQUEST"'                                 00262800
&ZMS             SETC  '&ZMS "REQUEST"'                                 00262900
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00263000
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00263100
.ZG45A           ANOP  ,                                                00263200
.*------------------------------------------------------------------    00263300
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00263400
&ZCVAL           SETC ''           CLEAR ERROR KEY ACCUMULATOR          00263500
.ZG45A0          AIF   (K'&RETMSGTOKEN LE 0).ZG45A1  OK                 00263600
&ZCVAL           SETC '&ZCVAL RETMSGTOKEN'      INCORRECT KEY USED      00263700
.ZG45A1          AIF   (K'&DATATYPE LE 0).ZG45A2  OK                    00263800
&ZCVAL           SETC '&ZCVAL DATATYPE'         INCORRECT KEY USED      00263900
.ZG45A2          AIF   (K'&STATUS LE 0).ZG45A3  OK                      00264000
&ZCVAL           SETC '&ZCVAL STATUS'           INCORRECT KEY USED      00264100
.ZG45A3          AIF   (K'&SOURCE LE 0).ZG45A4  OK                      00264200
&ZCVAL           SETC '&ZCVAL SOURCE'           INCORRECT KEY USED      00264300
.ZG45A4          AIF   (K'&ANSAREA LE 0).ZG45A5  OK                     00264400
&ZCVAL           SETC '&ZCVAL ANSAREA'          INCORRECT KEY USED      00264500
.ZG45A5          AIF   (K'&ANSLEN LE 0).ZG45A6  OK                      00264600
&ZCVAL           SETC '&ZCVAL ANSLEN'           INCORRECT KEY USED      00264700
.ZG45A6          AIF   (K'&NOTIFYEXIT LE 0).ZG45A7  OK                  00264800
&ZCVAL           SETC '&ZCVAL NOTIFYEXIT'       INCORRECT KEY USED      00264900
.ZG45A7          AIF   (K'&MSGEXIT LE 0).ZG45A8  OK                     00265000
&ZCVAL           SETC '&ZCVAL MSGEXIT'          INCORRECT KEY USED      00265100
.ZG45A8          AIF   (K'&EXITPARMS LE 0).ZG45A9  OK                   00265200
&ZCVAL           SETC '&ZCVAL EXITPARMS'        INCORRECT KEY USED      00265300
.ZG45A9          AIF   (K'&ZCVAL LE 0).ZG45A10  OK                      00265400
&ZCVAL           SETC '&ZCVAL'(2,K'&ZCVAL-1)                            00265500
&ZMS             SETC  '"REQUEST'  *KMEIA* MNOTE                        00265600
&ZMS             SETC  '&ZMS.=&REQUEST"'                                00265700
&ZMS             SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'             00265800
                 MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'             00265900
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00266000
.ZG45A10         ANOP  ,                                                00266100
.*------------------------------------------------------------------    00266200
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00266300
&XTYPE           SETC  ''          INITIALIZE XVARIABLE                 00266400
.*-------------------------------------------------------------------   00266500
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00266600
.ZG48            ANOP  ,                                                00266700
                 AIF   (K'&TYPE(1) LE 0).ZG48A                          00266800
&ZTLC            SETC 'FORCE'                                           00266900
                 AIF   ('&TYPE(1)' NE '&ZTLC').ZG52                     00267000
&XTYPE           SETC  'FORCE'     SET KEYWORD                          00267100
                 AIF   (N'&TYPE LE 1).ZG48A     CK NUM                  00267200
&ZMS             SETC  '"TYPE='    *KPOSA* MNOTE                        00267300
&ZMS             SETC  '&ZMS.&TYPE"'                                    00267400
&ZMS             SETC  '&ZMS "TYPE"'                                    00267500
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00267600
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00267700
.ZG48A           ANOP  ,                                                00267800
.*----------------------------------------------------------------***   00267900
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00268000
                 AIF   (N'&USERDATA LE 1).ZG50A  CK NUM                 00268100
&ZMS             SETC  '"USERDATA='             *KPOSA* MNOTE           00268200
&ZMS             SETC  '&ZMS.&USERDATA"'                                00268300
&ZMS             SETC  '&ZMS "USERDATA"'                                00268400
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00268500
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00268600
.ZG50A           ANOP  ,                                                00268700
.*-------------------------------------------------------------------   00268800
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00268900
&ZXUSERDATA      SETC  'INPUT'     SET IN/OUTPUT                        00269000
&XUSERDATA       SETC  'NO_CHANGE'                                      00269100
                 AIF   (K'&USERDATA(1) LE 0).ZG50B  PARM                00269200
&XUSERDATA       SETC  '&USERDATA(1)'           SET XVARIABLE           00269300
                 AIF   (N'&USERDATA GT 1).ZG50B  MULTI PARMS            00269400
&XUSERDATA       SETC  '&USERDATA'              SET XVARIABLE           00269500
.ZG50B           ANOP  ,                                                00269600
.*-------------------------------------------------------------------   00269700
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00269800
                 AIF   (K'&ZXUSERDATA LE 0).ZG50R  NOT I/O              00269900
         AIF   ('&XUSERDATA' EQ 'NO_CHANGE').ZG50R                      00270000
                 AIF   ('&XUSERDATA'(1,1) NE '(').ZG50R                 00270100
&ZCGPR           SETC  '&XUSERDATA'(2,K'&XUSERDATA-2)                   00270200
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG50P                     00270300
                 AIF   (K'&ZCGPR GT 2).ZG50Q                            00270400
                 AIF   ('&ZCGPR' EQ '0').ZG50Q                          00270500
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00270600
                 AIF   (T'&ZCGPR NE 'N').ZG50Q  INVALID REG NAME        00270700
.ZG50P           ANOP  ,                                                00270800
                 AIF   (T'&ZCGPR NE 'N').ZG50R  NON NUMERIC             00270900
                 AIF   ('&ZCGPR' LT '2').ZG50Q                          00271000
                 AIF   ('&ZCGPR' LE '12').ZG50R                         00271100
.ZG50Q           ANOP  ,                                                00271200
&ZMS             SETC  '"USERDATA='             *KGPRA* MNOTE           00271300
&ZMS             SETC  '&ZMS.&USERDATA"'                                00271400
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00271500
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00271600
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00271700
.ZG50R           ANOP  ,                                                00271800
.*------------------------------------------------------------------    00271900
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00272000
.ZG52            ANOP  ,                                                00272100
&ZXTYPE          SETC  'INPUT'     SET IN/OUTPUT                        00272200
                 AIF   (K'&XTYPE GT 0).ZG52E    VALID ARG               00272300
                 AIF   (T'&TYPE EQ 'O').ZG52D   OMITTED                 00272400
&ZASYSLNDX       SETA  0                                                00272500
.ZG52A           ANOP  ,           POSITIONAL MACRO KEY                 00272600
&ZASYSLNDX       SETA  &ZASYSLNDX+1                                     00272700
                 AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG52C                 00272800
&ZTLC            SETC 'TYPE'                                            00272900
                 AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG52A        00273000
.ZG52B           ANOP  ,                                                00273100
&ZXTYPE          SETC  ''          RESET IN/OUTPUT                      00273200
&ZMS             SETC  'THE "TYPE" KEY'         *KOPTA* MNOTE           00273300
&ZMS             SETC  '&ZMS MUST CONTAIN ONE'                          00273400
                 MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                 00273500
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00273600
                 AGO   .ZG52E                                           00273700
.ZG52C           ANOP  ,                                                00273800
&ZXTYPE          SETC  ''          RESET IN/OUTPUT                      00273900
&ZMS             SETC  '"TYPE='    *KUKWA* MNOTE                        00274000
&ZMS             SETC  '&ZMS.&TYPE"'                                    00274100
&ZMS             SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '        00274200
&ZMS             SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'              00274300
&ZMS             SETC  '&ZMS "FORCE".'                                  00274400
                 MNOTE 8,' &ZMS '                                       00274500
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00274600
                 AGO   .ZG52E                                           00274700
.ZG52D           ANOP  ,                                                00274800
&XTYPE           SETC  'FORCE'     SET DEFAULT KEYWORD                  00274900
.ZG52E           ANOP  ,                                                00275000
.*------------------------------------------------------------------    00275100
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00275200
                 AIF   (K'&TYPE(1) GT 0).ZG52F  PARM                    00275300
&XTYPE           SETC  ''          ENSURE NULL KEYWORD                  00275400
&ZXTYPE          SETC  ''          RESET IN/OUTPUT                      00275500
&ZMS             SETC  'THE'                                            00275600
&ZMS             SETC  '&ZMS "TYPE" KEY AND ITS'                        00275700
&ZMS             SETC  '&ZMS ARGUMENT ARE REQUIRED.'                    00275800
&ZMS             SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'              00275900
&ZMS             SETC  '&ZMS "FORCE".'                                  00276000
                 MNOTE 8,' &ZMS '                                       00276100
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00276200
.ZG52F           ANOP  ,                                                00276300
.*----------------------------------------------------------------***   00276400
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00276500
                 AIF   (N'&TOKEN LE 1).ZG54A    CK NUM                  00276600
&ZMS             SETC  '"TOKEN='   *KPOSA* MNOTE                        00276700
&ZMS             SETC  '&ZMS.&TOKEN"'                                   00276800
&ZMS             SETC  '&ZMS "TOKEN"'                                   00276900
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00277000
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00277100
.ZG54A           ANOP  ,                                                00277200
.*-------------------------------------------------------------------   00277300
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00277400
&ZXTOKEN         SETC  'INPUT'     SET IN/OUTPUT                        00277500
&XTOKEN          SETC  '&TOKEN(1)'              SET XVARIABLE           00277600
                 AIF   (N'&TOKEN GT 1).ZG54B    MULTI PARMS             00277700
&XTOKEN          SETC  '&TOKEN'    SET XVARIABLE                        00277800
.ZG54B           AIF   (K'&TOKEN(1) GT 0).ZG54C                         00277900
&ZXTOKEN         SETC  ''          RESET IN/OUTPUT                      00278000
&ZMS             SETC  ' '         *KRQDA*                              00278100
&ZMS             SETC  '&ZMS "TOKEN" KEY AND ITS'                       00278200
                 MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                 00278300
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00278400
.ZG54C           ANOP  ,                                                00278500
.*-------------------------------------------------------------------   00278600
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00278700
                 AIF   (K'&ZXTOKEN LE 0).ZG54R  NOT I/O                 00278800
                 AIF   ('&XTOKEN'(1,1) NE '(').ZG54R                    00278900
&ZCGPR           SETC  '&XTOKEN'(2,K'&XTOKEN-2)                         00279000
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG54P                     00279100
                 AIF   (K'&ZCGPR GT 2).ZG54Q                            00279200
                 AIF   ('&ZCGPR' EQ '0').ZG54Q                          00279300
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00279400
                 AIF   (T'&ZCGPR NE 'N').ZG54Q  INVALID REG NAME        00279500
.ZG54P           ANOP  ,                                                00279600
                 AIF   (T'&ZCGPR NE 'N').ZG54R  NON NUMERIC             00279700
                 AIF   ('&ZCGPR' LT '2').ZG54Q                          00279800
                 AIF   ('&ZCGPR' LE '12').ZG54R                         00279900
.ZG54Q           ANOP  ,                                                00280000
&ZMS             SETC  '"TOKEN='   *KGPRA* MNOTE                        00280100
&ZMS             SETC  '&ZMS.&TOKEN"'                                   00280200
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00280300
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00280400
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00280500
.ZG54R           ANOP  ,                                                00280600
.*-------------------------------------------------------------------   00280700
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00280800
.ZG56            ANOP  ,                                                00280900
&ZTLC            SETC 'CALLEXIT'                                        00281000
                 AIF   ('&REQUEST(1)' NE '&ZTLC').ZG67                  00281100
&XREQUEST        SETC  'CALLEXIT'  SET KEYWORD                          00281200
                 AIF   (N'&REQUEST LE 1).ZG56A  CK NUM                  00281300
&ZMS             SETC  '"REQUEST='              *KPOSA* MNOTE           00281400
&ZMS             SETC  '&ZMS.&REQUEST"'                                 00281500
&ZMS             SETC  '&ZMS "REQUEST"'                                 00281600
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00281700
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00281800
.ZG56A           ANOP  ,                                                00281900
.*------------------------------------------------------------------    00282000
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00282100
&ZCVAL           SETC ''           CLEAR ERROR KEY ACCUMULATOR          00282200
.ZG56A0          AIF   (K'&USERDATA LE 0).ZG56A1  OK                    00282300
&ZCVAL           SETC '&ZCVAL USERDATA'         INCORRECT KEY USED      00282400
.ZG56A1          AIF   (K'&RETMSGTOKEN LE 0).ZG56A2  OK                 00282500
&ZCVAL           SETC '&ZCVAL RETMSGTOKEN'      INCORRECT KEY USED      00282600
.ZG56A2          AIF   (K'&DATATYPE LE 0).ZG56A3  OK                    00282700
&ZCVAL           SETC '&ZCVAL DATATYPE'         INCORRECT KEY USED      00282800
.ZG56A3          AIF   (K'&STATUS LE 0).ZG56A4  OK                      00282900
&ZCVAL           SETC '&ZCVAL STATUS'           INCORRECT KEY USED      00283000
.ZG56A4          AIF   (K'&SOURCE LE 0).ZG56A5  OK                      00283100
&ZCVAL           SETC '&ZCVAL SOURCE'           INCORRECT KEY USED      00283200
.ZG56A5          AIF   (K'&ANSAREA LE 0).ZG56A6  OK                     00283300
&ZCVAL           SETC '&ZCVAL ANSAREA'          INCORRECT KEY USED      00283400
.ZG56A6          AIF   (K'&ANSLEN LE 0).ZG56A7  OK                      00283500
&ZCVAL           SETC '&ZCVAL ANSLEN'           INCORRECT KEY USED      00283600
.ZG56A7          AIF   (K'&TYPE LE 0).ZG56A8    OK                      00283700
&ZCVAL           SETC '&ZCVAL TYPE'             INCORRECT KEY USED      00283800
.ZG56A8          AIF   (K'&ZCVAL LE 0).ZG56A9   OK                      00283900
&ZCVAL           SETC '&ZCVAL'(2,K'&ZCVAL-1)                            00284000
&ZMS             SETC  '"REQUEST'  *KMEIA* MNOTE                        00284100
&ZMS             SETC  '&ZMS.=&REQUEST"'                                00284200
&ZMS             SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'             00284300
                 MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'             00284400
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00284500
.ZG56A9          ANOP  ,                                                00284600
.*----------------------------------------------------------------***   00284700
.***AG.KMEKY01 NAME, RQD INPUT, ME KEYS -XVARIABLE                      00284800
&XCALL           SETC  ''          INITIALIZE XVARIABLE                 00284900
                 AIF   (K'&NOTIFYEXIT LE 0).ZG58C                       00285000
&ZXCALL          SETC  'INPUT'     SET IN/OUTPUT                        00285100
&XCALL           SETC  'NOTIFYEXIT'             SET XVARIABLE           00285200
&ZXNOTIFYEXIT    SETC  'INPUT'     SET IN/OUTPUT                        00285300
&XNOTIFYEXIT     SETC  '&NOTIFYEXIT(1)'         SET XVARIABLE PARM      00285400
                 AIF   (N'&NOTIFYEXIT GT 1).ZG58A                       00285500
&XNOTIFYEXIT     SETC  '&NOTIFYEXIT'            SET XVARIABLE PARM      00285600
.ZG58A           AIF   (N'&NOTIFYEXIT LE 1).ZG58B  CK NUM               00285700
&ZMS             SETC  '"NOTIFYEXIT='           *KPOSA* MNOTE           00285800
&ZMS             SETC  '&ZMS.&NOTIFYEXIT"'                              00285900
&ZMS             SETC  '&ZMS "NOTIFYEXIT"'                              00286000
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00286100
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00286200
.ZG58B           AIF   (K'&XNOTIFYEXIT GT 0).ZG58C  ONE PARM            00286300
&ZXCALL          SETC  ''          RESET IN/OUTPUT                      00286400
&ZXNOTIFYEXIT    SETC  ''          RESET IN/OUTPUT                      00286500
&ZMS             SETC  ' '         *KRQDA*                              00286600
&ZMS             SETC  '&ZMS "NOTIFYEXIT" KEY AND ITS'                  00286700
                 MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                 00286800
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00286900
.ZG58C           ANOP  ,                                                00287000
.*----------------------------------------------------------------***   00287100
.***AG.KMEKY02 NAME, RQD INPUT, ME KEYS -XVARIABLE                      00287200
                 AIF   (K'&MSGEXIT LE 0).ZG59D  NO ME KEY               00287300
                 AIF   (N'&MSGEXIT LE 1).ZG59A  CK NUM                  00287400
&ZMS             SETC  '"MSGEXIT='              *KPOSA* MNOTE           00287500
&ZMS             SETC  '&ZMS.&MSGEXIT"'                                 00287600
&ZMS             SETC  '&ZMS "MSGEXIT"'                                 00287700
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00287800
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00287900
.ZG59A           AIF   (K'&XCALL LE 0).ZG59B                            00288000
&ZMS             SETC  '"MSGEXIT'  *KMEKA* MNOTE                        00288100
&ZMS             SETC  '&ZMS.=&MSGEXIT"'                                00288200
&ZMS             SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'            00288300
&ZMS             SETC  '&ZMS "&XCALL"'                                  00288400
                 MNOTE 8,' &ZMS KEY.'                                   00288500
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00288600
                 AGO   .ZG59D                                           00288700
.*                                                                      00288800
.ZG59B           ANOP  ,                                                00288900
&ZXCALL          SETC  'INPUT'     SET IN/OUTPUT                        00289000
&XCALL           SETC  'MSGEXIT'   SET XVARIABLE                        00289100
&ZXMSGEXIT       SETC  'INPUT'     SET IN/OUTPUT                        00289200
&XMSGEXIT        SETC  '&MSGEXIT(1)'            SET XVARIABLE PARM      00289300
                 AIF   (N'&MSGEXIT GT 1).ZG59C                          00289400
&XMSGEXIT        SETC  '&MSGEXIT'  SET XVARIABLE PARM                   00289500
.ZG59C           AIF   (K'&XMSGEXIT GT 0).ZG59D  ONE PARM               00289600
&ZXCALL          SETC  ''          RESET IN/OUTPUT                      00289700
&ZXMSGEXIT       SETC  ''          RESET IN/OUTPUT                      00289800
&ZMS             SETC  ' '         *KRQDA*                              00289900
&ZMS             SETC  '&ZMS "MSGEXIT" KEY AND ITS'                     00290000
                 MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                 00290100
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00290200
.ZG59D           ANOP  ,                                                00290300
.*------------------------------------------------------------------    00290400
.***AG.KME4Y09 NAME, RQD INPUT, ME KEYS -CHECK IF KEY ENTERED           00290500
                 AIF   (K'&XCALL GT 0).ZG60B                            00290600
&ZXCALL          SETC  ''          RESET IN/OUTPUT                      00290700
&ZXNOTIFYEXIT    SETC  ''          RESET IN/OUTPUT                      00290800
&XCALL           SETC  ''          ENSURE NULL                          00290900
&XNOTIFYEXIT     SETC  ''          ENSURE NULL                          00291000
&ZMS             SETC  'ONE OF THE FOLLOWING'   *KMERA* MNOTE           00291100
&ZMS             SETC  '&ZMS MUTUALLY EXCLUSIVE KEY(S) IS'              00291200
&ZMS             SETC  '&ZMS REQUIRED:'                                 00291300
&ZMS             SETC  '&ZMS "NOTIFYEXIT"'      VALID ME KEY            00291400
&ZMS             SETC  '&ZMS OR "MSGEXIT".'     VALID ME KEY            00291500
                 MNOTE 8,' &ZMS '                                       00291600
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00291700
.ZG60B           ANOP  ,                                                00291800
.*-------------------------------------------------------------------   00291900
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           00292000
.ZG58            AIF   ('&XCALL' NE 'NOTIFYEXIT').ZG59                  00292100
.*-------------------------------------------------------------------   00292200
.***AG.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 00292300
                 AIF   (K'&ZXNOTIFYEXIT LE 0).ZG58R  NOT I/O            00292400
                 AIF   ('&XNOTIFYEXIT'(1,1) NE '(').ZG58R               00292500
&ZCGPR           SETC  '&XNOTIFYEXIT'(2,K'&XNOTIFYEXIT-2)               00292600
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG58P                     00292700
                 AIF   (K'&ZCGPR GT 2).ZG58Q                            00292800
                 AIF   ('&ZCGPR' EQ '0').ZG58Q                          00292900
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00293000
                 AIF   (T'&ZCGPR NE 'N').ZG58Q  INVALID REG NAME        00293100
.ZG58P           ANOP  ,                                                00293200
                 AIF   (T'&ZCGPR NE 'N').ZG58R  NON NUMERIC             00293300
                 AIF   ('&ZCGPR' LT '2').ZG58Q                          00293400
                 AIF   ('&ZCGPR' LE '12').ZG58R                         00293500
.ZG58Q           ANOP  ,                                                00293600
&ZMS             SETC  '"NOTIFYEXIT='           *KGPRA* MNOTE           00293700
&ZMS             SETC  '&ZMS.&NOTIFYEXIT"'                              00293800
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00293900
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00294000
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00294100
.ZG58R           ANOP  ,                                                00294200
.*-------------------------------------------------------------------   00294300
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           00294400
.ZG59            AIF   ('&XCALL' NE 'MSGEXIT').ZG60                     00294500
.*-------------------------------------------------------------------   00294600
.***AG.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 00294700
                 AIF   (K'&ZXMSGEXIT LE 0).ZG59R  NOT I/O               00294800
                 AIF   ('&XMSGEXIT'(1,1) NE '(').ZG59R                  00294900
&ZCGPR           SETC  '&XMSGEXIT'(2,K'&XMSGEXIT-2)                     00295000
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG59P                     00295100
                 AIF   (K'&ZCGPR GT 2).ZG59Q                            00295200
                 AIF   ('&ZCGPR' EQ '0').ZG59Q                          00295300
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00295400
                 AIF   (T'&ZCGPR NE 'N').ZG59Q  INVALID REG NAME        00295500
.ZG59P           ANOP  ,                                                00295600
                 AIF   (T'&ZCGPR NE 'N').ZG59R  NON NUMERIC             00295700
                 AIF   ('&ZCGPR' LT '2').ZG59Q                          00295800
                 AIF   ('&ZCGPR' LE '12').ZG59R                         00295900
.ZG59Q           ANOP  ,                                                00296000
&ZMS             SETC  '"MSGEXIT='              *KGPRA* MNOTE           00296100
&ZMS             SETC  '&ZMS.&MSGEXIT"'                                 00296200
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00296300
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00296400
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00296500
.ZG59R           ANOP  ,                                                00296600
.*-------------------------------------------------------------------   00296700
.***AG.KMEKY15 NAME, RQD INPUT, ME KEYS -END                            00296800
.ZG60            ANOP  ,           END MUTUALLY EXCLUSIVE KEYS          00296900
.*----------------------------------------------------------------***   00297000
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00297100
                 AIF   (N'&EXITPARMS LE 1).ZG62A  CK NUM                00297200
&ZMS             SETC  '"EXITPARMS='            *KPOSA* MNOTE           00297300
&ZMS             SETC  '&ZMS.&EXITPARMS"'                               00297400
&ZMS             SETC  '&ZMS "EXITPARMS"'                               00297500
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00297600
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00297700
.ZG62A           ANOP  ,                                                00297800
.*-------------------------------------------------------------------   00297900
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00298000
&ZXEXITPARMS     SETC  'INPUT'     SET IN/OUTPUT                        00298100
&XEXITPARMS      SETC  'ZERO'                                           00298200
                 AIF   (K'&EXITPARMS(1) LE 0).ZG62B  PARM               00298300
&XEXITPARMS      SETC  '&EXITPARMS(1)'          SET XVARIABLE           00298400
                 AIF   (N'&EXITPARMS GT 1).ZG62B  MULTI PARMS           00298500
&XEXITPARMS      SETC  '&EXITPARMS'             SET XVARIABLE           00298600
.ZG62B           ANOP  ,                                                00298700
.*-------------------------------------------------------------------   00298800
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00298900
                 AIF   (K'&ZXEXITPARMS LE 0).ZG62R  NOT I/O             00299000
         AIF   ('&XEXITPARMS' EQ 'ZERO').ZG62R                          00299100
                 AIF   ('&XEXITPARMS'(1,1) NE '(').ZG62R                00299200
&ZCGPR           SETC  '&XEXITPARMS'(2,K'&XEXITPARMS-2)                 00299300
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG62P                     00299400
                 AIF   (K'&ZCGPR GT 2).ZG62Q                            00299500
                 AIF   ('&ZCGPR' EQ '0').ZG62Q                          00299600
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00299700
                 AIF   (T'&ZCGPR NE 'N').ZG62Q  INVALID REG NAME        00299800
.ZG62P           ANOP  ,                                                00299900
                 AIF   (T'&ZCGPR NE 'N').ZG62R  NON NUMERIC             00300000
                 AIF   ('&ZCGPR' LT '2').ZG62Q                          00300100
                 AIF   ('&ZCGPR' LE '12').ZG62R                         00300200
.ZG62Q           ANOP  ,                                                00300300
&ZMS             SETC  '"EXITPARMS='            *KGPRA* MNOTE           00300400
&ZMS             SETC  '&ZMS.&EXITPARMS"'                               00300500
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00300600
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00300700
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00300800
.ZG62R           ANOP  ,                                                00300900
.*----------------------------------------------------------------***   00301000
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00301100
                 AIF   (N'&TOKEN LE 1).ZG65A    CK NUM                  00301200
&ZMS             SETC  '"TOKEN='   *KPOSA* MNOTE                        00301300
&ZMS             SETC  '&ZMS.&TOKEN"'                                   00301400
&ZMS             SETC  '&ZMS "TOKEN"'                                   00301500
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00301600
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00301700
.ZG65A           ANOP  ,                                                00301800
.*-------------------------------------------------------------------   00301900
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00302000
&ZXTOKEN         SETC  'INPUT'     SET IN/OUTPUT                        00302100
&XTOKEN          SETC  '&TOKEN(1)'              SET XVARIABLE           00302200
                 AIF   (N'&TOKEN GT 1).ZG65B    MULTI PARMS             00302300
&XTOKEN          SETC  '&TOKEN'    SET XVARIABLE                        00302400
.ZG65B           AIF   (K'&TOKEN(1) GT 0).ZG65C                         00302500
&ZXTOKEN         SETC  ''          RESET IN/OUTPUT                      00302600
&ZMS             SETC  ' '         *KRQDA*                              00302700
&ZMS             SETC  '&ZMS "TOKEN" KEY AND ITS'                       00302800
                 MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                 00302900
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00303000
.ZG65C           ANOP  ,                                                00303100
.*-------------------------------------------------------------------   00303200
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00303300
                 AIF   (K'&ZXTOKEN LE 0).ZG65R  NOT I/O                 00303400
                 AIF   ('&XTOKEN'(1,1) NE '(').ZG65R                    00303500
&ZCGPR           SETC  '&XTOKEN'(2,K'&XTOKEN-2)                         00303600
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG65P                     00303700
                 AIF   (K'&ZCGPR GT 2).ZG65Q                            00303800
                 AIF   ('&ZCGPR' EQ '0').ZG65Q                          00303900
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00304000
                 AIF   (T'&ZCGPR NE 'N').ZG65Q  INVALID REG NAME        00304100
.ZG65P           ANOP  ,                                                00304200
                 AIF   (T'&ZCGPR NE 'N').ZG65R  NON NUMERIC             00304300
                 AIF   ('&ZCGPR' LT '2').ZG65Q                          00304400
                 AIF   ('&ZCGPR' LE '12').ZG65R                         00304500
.ZG65Q           ANOP  ,                                                00304600
&ZMS             SETC  '"TOKEN='   *KGPRA* MNOTE                        00304700
&ZMS             SETC  '&ZMS.&TOKEN"'                                   00304800
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00304900
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00305000
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00305100
.ZG65R           ANOP  ,                                                00305200
.*------------------------------------------------------------------    00305300
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00305400
.ZG67            ANOP  ,                                                00305500
&ZXREQUEST       SETC  'INPUT'     SET IN/OUTPUT                        00305600
                 AIF   (K'&XREQUEST GT 0).ZG67E  VALID ARG              00305700
                 AIF   (T'&REQUEST EQ 'O').ZG67D  OMITTED               00305800
&ZASYSLNDX       SETA  0                                                00305900
.ZG67A           ANOP  ,           POSITIONAL MACRO KEY                 00306000
&ZASYSLNDX       SETA  &ZASYSLNDX+1                                     00306100
                 AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG67C                 00306200
&ZTLC            SETC 'REQUEST'                                         00306300
                 AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG67A        00306400
.ZG67B           ANOP  ,                                                00306500
&ZXREQUEST       SETC  ''          RESET IN/OUTPUT                      00306600
&ZMS             SETC  'THE "REQUEST" KEY'      *KOPTA* MNOTE           00306700
&ZMS             SETC  '&ZMS MUST CONTAIN ONE'                          00306800
                 MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                 00306900
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00307000
                 AGO   .ZG67E                                           00307100
.ZG67C           ANOP  ,                                                00307200
&ZXREQUEST       SETC  ''          RESET IN/OUTPUT                      00307300
&ZMS             SETC  '"REQUEST='              *KUKWA* MNOTE           00307400
&ZMS             SETC  '&ZMS.&REQUEST"'                                 00307500
&ZMS             SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '        00307600
&ZMS             SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'              00307700
&ZMS             SETC  '&ZMS "SAVEMSG",'                                00307800
&ZMS             SETC  '&ZMS "DISCARDMSG",'                             00307900
&ZMS             SETC  '&ZMS "QUERYMSG",'                               00308000
&ZMS             SETC  '&ZMS "COMPLETION",'                             00308100
&ZMS             SETC  '&ZMS OR "CALLEXIT".'                            00308200
                 MNOTE 8,' &ZMS '                                       00308300
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00308400
                 AGO   .ZG67E                                           00308500
.ZG67D           ANOP  ,                                                00308600
&XREQUEST        SETC  'SAVEMSG'   SET DEFAULT KEYWORD                  00308700
.ZG67E           ANOP  ,                                                00308800
.*------------------------------------------------------------------    00308900
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00309000
                 AIF   (K'&REQUEST(1) GT 0).ZG67F  PARM                 00309100
&XREQUEST        SETC  ''          ENSURE NULL KEYWORD                  00309200
&ZXREQUEST       SETC  ''          RESET IN/OUTPUT                      00309300
&ZMS             SETC  'THE'                                            00309400
&ZMS             SETC  '&ZMS "REQUEST" KEY AND ITS'                     00309500
&ZMS             SETC  '&ZMS ARGUMENT ARE REQUIRED.'                    00309600
&ZMS             SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'              00309700
&ZMS             SETC  '&ZMS "SAVEMSG",'                                00309800
&ZMS             SETC  '&ZMS "DISCARDMSG",'                             00309900
&ZMS             SETC  '&ZMS "QUERYMSG",'                               00310000
&ZMS             SETC  '&ZMS "COMPLETION",'                             00310100
&ZMS             SETC  '&ZMS OR "CALLEXIT".'                            00310200
                 MNOTE 8,' &ZMS '                                       00310300
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00310400
.ZG67F           ANOP  ,                                                00310500
.*----------------------------------------------------------------***   00310600
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00310700
                 AIF   (N'&RETCODE LE 1).ZG69A  CK NUM                  00310800
&ZMS             SETC  '"RETCODE='              *KPOSA* MNOTE           00310900
&ZMS             SETC  '&ZMS.&RETCODE"'                                 00311000
&ZMS             SETC  '&ZMS "RETCODE"'                                 00311100
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00311200
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00311300
.ZG69A           ANOP  ,                                                00311400
.*-------------------------------------------------------------------   00311500
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00311600
                 AIF   (K'&RETCODE(1) LE 0).ZG69C  NO PARM              00311700
&ZXRETCODE       SETC  'OUTPUT'    SET OUTPUT                           00311800
&XRETCODE        SETC  '&RETCODE(1)'            SET XVARIABLE           00311900
                 AIF   (N'&RETCODE GT 1).ZG69C                          00312000
&XRETCODE        SETC  '&RETCODE'  SET XVARIABLE                        00312100
.ZG69C           ANOP  ,                                                00312200
.*-------------------------------------------------------------------   00312300
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00312400
                 AIF   (K'&ZXRETCODE LE 0).ZG69R  NOT I/O               00312500
                 AIF   ('&XRETCODE'(1,1) NE '(').ZG69R                  00312600
&ZCGPR           SETC  '&XRETCODE'(2,K'&XRETCODE-2)                     00312700
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG69P                     00312800
                 AIF   (K'&ZCGPR GT 2).ZG69Q                            00312900
                 AIF   ('&ZCGPR' EQ '0').ZG69Q                          00313000
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00313100
                 AIF   (T'&ZCGPR NE 'N').ZG69Q  INVALID REG NAME        00313200
.ZG69P           ANOP  ,                                                00313300
                 AIF   (T'&ZCGPR NE 'N').ZG69R  NON NUMERIC             00313400
                 AIF   ('&ZCGPR' LT '2').ZG69Q                          00313500
                 AIF   ('&ZCGPR' LE '12').ZG69R                         00313600
.ZG69Q           ANOP  ,                                                00313700
&ZMS             SETC  '"RETCODE='              *KGPRA* MNOTE           00313800
&ZMS             SETC  '&ZMS.&RETCODE"'                                 00313900
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00314000
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00314100
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00314200
.ZG69R           ANOP  ,                                                00314300
.*----------------------------------------------------------------***   00314400
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00314500
                 AIF   (N'&RSNCODE LE 1).ZG72A  CK NUM                  00314600
&ZMS             SETC  '"RSNCODE='              *KPOSA* MNOTE           00314700
&ZMS             SETC  '&ZMS.&RSNCODE"'                                 00314800
&ZMS             SETC  '&ZMS "RSNCODE"'                                 00314900
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00315000
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00315100
.ZG72A           ANOP  ,                                                00315200
.*-------------------------------------------------------------------   00315300
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00315400
                 AIF   (K'&RSNCODE(1) LE 0).ZG72C  NO PARM              00315500
&ZXRSNCODE       SETC  'OUTPUT'    SET OUTPUT                           00315600
&XRSNCODE        SETC  '&RSNCODE(1)'            SET XVARIABLE           00315700
                 AIF   (N'&RSNCODE GT 1).ZG72C                          00315800
&XRSNCODE        SETC  '&RSNCODE'  SET XVARIABLE                        00315900
.ZG72C           ANOP  ,                                                00316000
.*-------------------------------------------------------------------   00316100
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00316200
                 AIF   (K'&ZXRSNCODE LE 0).ZG72R  NOT I/O               00316300
                 AIF   ('&XRSNCODE'(1,1) NE '(').ZG72R                  00316400
&ZCGPR           SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                     00316500
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG72P                     00316600
                 AIF   (K'&ZCGPR GT 2).ZG72Q                            00316700
                 AIF   ('&ZCGPR' EQ '0').ZG72Q                          00316800
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00316900
                 AIF   (T'&ZCGPR NE 'N').ZG72Q  INVALID REG NAME        00317000
.ZG72P           ANOP  ,                                                00317100
                 AIF   (T'&ZCGPR NE 'N').ZG72R  NON NUMERIC             00317200
                 AIF   ('&ZCGPR' LT '2').ZG72Q                          00317300
                 AIF   ('&ZCGPR' LE '12').ZG72R                         00317400
.ZG72Q           ANOP  ,                                                00317500
&ZMS             SETC  '"RSNCODE='              *KGPRA* MNOTE           00317600
&ZMS             SETC  '&ZMS.&RSNCODE"'                                 00317700
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00317800
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00317900
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00318000
.ZG72R           ANOP  ,                                                00318100
.******************************************************************     00318200
.***AH.P00 CHECK STANDALONE POSITIONAL VARIABLES                        00318300
.******************************************************************     00318400
                 ACTR  10000                                            00318500
.*----------------------------------------------------------------***   00318600
.***AH.P02 EXTRA POSITIONALS                                            00318700
                 AIF   (N'&SYSLIST LE 0).ZGLISTX  NO EXTRAS             00318800
                 AIF   (N'&SYSLIST NE 2).ZGLISTX1  NOT NULL             00318900
                 AIF   ('&SYSLIST(1)' NE '').ZGLISTX1  NOT NULL         00319000
                 AIF   ('&SYSLIST(2)' EQ '').ZGLISTX  NOT NULL          00319100
.ZGLISTX1        ANOP  ,                                                00319200
&ZCVAL           SETC  ''          ERROR FIELD                          00319300
&ZAWRK           SETA  0           POSITIONAL NUMBER                    00319400
.ZGLIST2         ANOP  ,                                                00319500
&ZAWRK           SETA  &ZAWRK+1    NEXT POSITIONAL                      00319600
                 AIF   (&ZAWRK GT N'&SYSLIST).ZGLIST3  DONE             00319700
&ZCVAL           SETC '&ZCVAL,&SYSLIST(&ZAWRK)'  EXTRA                  00319800
                 AGO   .ZGLIST2                                         00319900
.*                                                                      00320000
.ZGLIST3         ANOP  ,                                                00320100
&ZCVAL           SETC '&ZCVAL'(2,K'&ZCVAL-1)    STRIP COMMA             00320200
&ZMS             SETC  'POSITIONAL ARGUMENT(S),'  *PPOSA* MNOTE         00320300
&ZMS             SETC  '&ZMS "&ZCVAL"'                                  00320400
&ZMS             SETC  '&ZMS CANNOT BE USED.'                           00320500
&ZMS             SETC  '&ZMS NO POSITIONAL ARGUMENTS'                   00320600
                 MNOTE 8,' &ZMS ARE ALLOWED.'                           00320700
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00320800
.ZGLISTX         ANOP  ,                                                00320900
&ZASYSLNDX       SETA  0                                                00321000
.*-------------------------------------------------------------------   00321100
.***AG.MF04 MF=(SLE)                                                    00321200
.ZGMFX           ANOP  ,           END OF FULL SYNTAX CHECK             00321300
.*******************************************************************    00321400
.***AE.ZMR01 NO CODE GENERATED IF ERRORS DETECTED                       00321500
.*******************************************************************    00321600
                 AIF   (&ZMACRET NE 0).ZLX2     ERROR DETECTED          00321700
.*******************************************************************    00321800
.***AE.01  START OF IXCMSGC MACRO CODE                                  00321900
.*******************************************************************    00322000
                 LCLC  &M0M0001                 NAME                    00322100
&M0M0001         SETC  '&XLABEL'                SET NAME                00322200
                 AIF   (K'&XLABEL NE 0).XLAB2                           00322300
&M0M0001         SETC  'M00M&SYSNDX'            DEFAULT NAME            00322400
.*                                                                      00322500
.XLAB2           ANOP  ,                                                00322600
                 AIF   ('&XMF' EQ 'L').XLAB3                            00322700
&M0M0001 DS    0H                             IXCMSGC-0                 00322800
.XLAB3           ANOP  ,                                                00322900
.*******************************************************************    00323000
.***AE.PR01 PRINT CONTROLS, DEFAULT IS YES                              00323100
.*******************************************************************    00323200
              PUSH  PRINT                                               00323300
                 AIF   ('&ZPRINT' NE 'NO').ZPRINTX  TURN PRINT ON       00323400
                 PRINT OFF         ++ PR01                              00323500
                 AGO   .ZPRNTXX                                         00323600
.ZPRINTX         PRINT ON                                               00323700
.ZPRNTXX         ANOP  ,                                                00323800
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00323900
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00324000
.********************************************************************   00324100
.***AL.L01 INTERNAL ARRAY TO PRODUCE FORMATTED CODE                     00324200
.********************************************************************   00324300
                      LCLA  &ZOPN          LIST INSTRUCTION INDEX       00324400
                      LCLA  &ZOPN1         INVOCATION INDEX             00324500
                      LCLC  &ZOPL(4095)    LABEL                        00324600
                      LCLC  &ZOPO(4095)    OPERATION                    00324700
                      LCLC  &ZOPV(4095)    VALUE                        00324800
                      LCLC  &ZOPD(4095)    DESCRIPTION                  00324900
.*                                                                      00325000
&ZOPN                 SETA  0              INITIAL INST INDEX VALUE     00325100
.******************************************************************     00325200
.***AL.L10 IXCMSGC FMT=LIST MF=S|L PARAMETERS                           00325300
.******************************************************************     00325400
                      AIF   ('&XMF' EQ 'L').ZLMFSL2                     00325500
                      AIF   ('&XMF' NE 'S').ZLMFSLX                     00325600
&XMFCTRL              SETC  '#Z'.'&SYSNDX'(1,4).'A'                     00325700
&XMFATTR              SETC  '0D'                                        00325800
.*                                                                      00325900
&ZOPN                 SETA  &ZOPN+1                                     00326000
&ZOPL(&ZOPN)          SETC  ' '                                         00326100
&ZOPO(&ZOPN)          SETC  'B'                                         00326200
&ZOPV(&ZOPN)          SETC  '&XMFCTRL.S'                                00326300
&ZOPD(&ZOPN)          SETC  '++ IXCMSGC ARG PARMS'                      00326400
.*                                                                      00326500
&ZOPN                 SETA  &ZOPN+1                                     00326600
&ZOPL(&ZOPN)          SETC  ' '                                         00326700
&ZOPO(&ZOPN)          SETC  'SPACE'                                     00326800
&ZOPV(&ZOPN)          SETC  '1'                                         00326900
&ZOPD(&ZOPN)          SETC  ' '                                         00327000
.*                                                                      00327100
.ZLMFSL2              ANOP  ,                                           00327200
.*-------------------------------------------------------------------   00327300
.***AM.L00  IXCMSGC FMT=LIST name                                       00327400
                      AIF   ('&XMF' NE 'L').ZLMFSL2M                    00327500
&ZOPN                 SETA &ZOPN+1                                      00327600
&ZOPL(&ZOPN)          SETC '&M0M0001'                                   00327700
&ZOPO(&ZOPN)          SETC 'EQU'                                        00327800
&ZOPV(&ZOPN)          SETC '&XMFCTRL'                                   00327900
&ZOPD(&ZOPN)          SETC '++ IXCMSGC NAME'                            00328000
.ZLMFSL2M             ANOP  ,                                           00328100
.*-------------------------------------------------------------------   00328200
.***AM.L01  IXCMSGC FMT=LIST PARAMETERS                                 00328300
&ZOPN                 SETA &ZOPN+1                                      00328400
&ZOPL(&ZOPN)          SETC '&XMFCTRL'                                   00328500
&ZOPO(&ZOPN)          SETC 'DS'                                         00328600
&ZOPV(&ZOPN)          SETC '&XMFATTR'                                   00328700
&ZOPD(&ZOPN)          SETC '++ IXCMSGC PARM LIST'                       00328800
.*-------------------------------------------------------------------   00328900
.***AM.L02 XVERSION XL1                                                 00329000
&ZOPN                 SETA &ZOPN+1                                      00329100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XVERSION'                         00329200
&ZOPO(&ZOPN)          SETC 'DS'                                         00329300
&ZOPV(&ZOPN)          SETC 'XL1'                                        00329400
&ZOPD(&ZOPN)          SETC '++ INPUT XVERSION'                          00329500
.*-------------------------------------------------------------------   00329600
.***AM.L05 XREQUEST XL1                                                 00329700
&ZOPN                 SETA &ZOPN+1                                      00329800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XREQUEST'                         00329900
&ZOPO(&ZOPN)          SETC 'DS'                                         00330000
&ZOPV(&ZOPN)          SETC 'XL1'                                        00330100
&ZOPD(&ZOPN)          SETC '++ &ZXREQUEST XREQUEST'                     00330200
.*                                                                      00330300
&ZOPN                 SETA  &ZOPN+1                                     00330400
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XREQUEST_SAVEMSG'                00330500
&ZOPO(&ZOPN)          SETC  'EQU'                                       00330600
&ZOPV(&ZOPN)          SETC  '1'                                         00330700
&ZOPD(&ZOPN)          SETC  '++ XREQUEST.'                              00330800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).SAVEMSG'                      00330900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00331000
.*                                                                      00331100
&ZOPN                 SETA  &ZOPN+1                                     00331200
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XREQUEST_DISCARDMSG'             00331300
&ZOPO(&ZOPN)          SETC  'EQU'                                       00331400
&ZOPV(&ZOPN)          SETC  '2'                                         00331500
&ZOPD(&ZOPN)          SETC  '++ XREQUEST.'                              00331600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).DISCARDMSG'                   00331700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00331800
.*                                                                      00331900
&ZOPN                 SETA  &ZOPN+1                                     00332000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XREQUEST_QUERYMSG'               00332100
&ZOPO(&ZOPN)          SETC  'EQU'                                       00332200
&ZOPV(&ZOPN)          SETC  '3'                                         00332300
&ZOPD(&ZOPN)          SETC  '++ XREQUEST.'                              00332400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).QUERYMSG'                     00332500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00332600
.*                                                                      00332700
&ZOPN                 SETA  &ZOPN+1                                     00332800
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XREQUEST_COMPLETION'             00332900
&ZOPO(&ZOPN)          SETC  'EQU'                                       00333000
&ZOPV(&ZOPN)          SETC  '4'                                         00333100
&ZOPD(&ZOPN)          SETC  '++ XREQUEST.'                              00333200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).COMPLETION'                   00333300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00333400
.*                                                                      00333500
&ZOPN                 SETA  &ZOPN+1                                     00333600
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XREQUEST_CALLEXIT'               00333700
&ZOPO(&ZOPN)          SETC  'EQU'                                       00333800
&ZOPV(&ZOPN)          SETC  '5'                                         00333900
&ZOPD(&ZOPN)          SETC  '++ XREQUEST.'                              00334000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).CALLEXIT'                     00334100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00334200
.*-------------------------------------------------------------------   00334300
.***AM.L03 XTYPE BL.8                                                   00334400
&ZOPN                 SETA &ZOPN+1                                      00334500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XTYPE'                            00334600
&ZOPO(&ZOPN)          SETC 'DS'                                         00334700
&ZOPV(&ZOPN)          SETC 'BL.8'                                       00334800
&ZOPD(&ZOPN)          SETC '++ INPUT'                                   00334900
.*                                                                      00335000
&ZOPN                 SETA  &ZOPN+1                                     00335100
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XTYPE_FORCE'                     00335200
&ZOPO(&ZOPN)          SETC  'EQU'                                       00335300
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             00335400
&ZOPD(&ZOPN)          SETC  '++ XTYPE.'                                 00335500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).FORCE'                        00335600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00335700
.*                                                                      00335800
&ZOPN                 SETA  &ZOPN+1                                     00335900
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XCALL_NOTIFYEXIT'                00336000
&ZOPO(&ZOPN)          SETC  'EQU'                                       00336100
&ZOPV(&ZOPN)          SETC  'B''00100000'''                             00336200
&ZOPD(&ZOPN)          SETC  '++ XCALL.'                                 00336300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).NOTIFYEXIT'                   00336400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00336500
.*                                                                      00336600
&ZOPN                 SETA  &ZOPN+1                                     00336700
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XCALL_MSGEXIT'                   00336800
&ZOPO(&ZOPN)          SETC  'EQU'                                       00336900
&ZOPV(&ZOPN)          SETC  'B''00010000'''                             00337000
&ZOPD(&ZOPN)          SETC  '++ XCALL.'                                 00337100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).MSGEXIT'                      00337200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00337300
.*                                                                      00337400
&ZOPN                 SETA  &ZOPN+1                                     00337500
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XDATATYPE_DETAIL'                00337600
&ZOPO(&ZOPN)          SETC  'EQU'                                       00337700
&ZOPV(&ZOPN)          SETC  'B''00001000'''                             00337800
&ZOPD(&ZOPN)          SETC  '++ XDATATYPE.'                             00337900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).DETAIL'                       00338000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00338100
.*                                                                      00338200
&ZOPN                 SETA  &ZOPN+1                                     00338300
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XDATATYPE_MSGOUT'                00338400
&ZOPO(&ZOPN)          SETC  'EQU'                                       00338500
&ZOPV(&ZOPN)          SETC  'B''00000100'''                             00338600
&ZOPD(&ZOPN)          SETC  '++ XDATATYPE.'                             00338700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).MSGOUT'                       00338800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00338900
.*                                                                      00339000
&ZOPN                 SETA  &ZOPN+1                                     00339100
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XDATATYPE_MSGIN'                 00339200
&ZOPO(&ZOPN)          SETC  'EQU'                                       00339300
&ZOPV(&ZOPN)          SETC  'B''00000010'''                             00339400
&ZOPD(&ZOPN)          SETC  '++ XDATATYPE.'                             00339500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).MSGIN'                        00339600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00339700
.*-------------------------------------------------------------------   00339800
.***AM.L03 XKEYUSED3 BL.8                                               00339900
&ZOPN                 SETA &ZOPN+1                                      00340000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XKEYUSED3'                        00340100
&ZOPO(&ZOPN)          SETC 'DS'                                         00340200
&ZOPV(&ZOPN)          SETC 'BL.8'                                       00340300
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             00340400
.*                                                                      00340500
&ZOPN                 SETA  &ZOPN+1                                     00340600
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_SOURCE'                  00340700
&ZOPO(&ZOPN)          SETC  'EQU'                                       00340800
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             00340900
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               00341000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).SOURCE'                       00341100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00341200
.*                                                                      00341300
&ZOPN                 SETA  &ZOPN+1                                     00341400
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_RETMSGTOKEN'             00341500
&ZOPO(&ZOPN)          SETC  'EQU'                                       00341600
&ZOPV(&ZOPN)          SETC  'B''01000000'''                             00341700
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               00341800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).RETMSGTOKEN'                  00341900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00342000
.*                                                                      00342100
&ZOPN                 SETA  &ZOPN+1                                     00342200
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XUSERDATA_NO_CHANGE'             00342300
&ZOPO(&ZOPN)          SETC  'EQU'                                       00342400
&ZOPV(&ZOPN)          SETC  'B''00100000'''                             00342500
&ZOPD(&ZOPN)          SETC  '++ XUSERDATA.'                             00342600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).NO_CHANGE'                    00342700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00342800
.*-------------------------------------------------------------------   00342900
.***AM.L03 XOPTIONS BL.8                                                00343000
&ZOPN                 SETA &ZOPN+1                                      00343100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XOPTIONS'                         00343200
&ZOPO(&ZOPN)          SETC 'DS'                                         00343300
&ZOPV(&ZOPN)          SETC 'BL.8'                                       00343400
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             00343500
.*                                                                      00343600
&ZOPN                 SETA  &ZOPN+1                                     00343700
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XSTATUS_SAVED'                   00343800
&ZOPO(&ZOPN)          SETC  'EQU'                                       00343900
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             00344000
&ZOPD(&ZOPN)          SETC  '++ XSTATUS.'                               00344100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).SAVED'                        00344200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00344300
.*                                                                      00344400
&ZOPN                 SETA  &ZOPN+1                                     00344500
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XSTATUS_COMPLETE'                00344600
&ZOPO(&ZOPN)          SETC  'EQU'                                       00344700
&ZOPV(&ZOPN)          SETC  'B''01000000'''                             00344800
&ZOPD(&ZOPN)          SETC  '++ XSTATUS.'                               00344900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).COMPLETE'                     00345000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00345100
.*                                                                      00345200
&ZOPN                 SETA  &ZOPN+1                                     00345300
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XSTATUS_INCOMPLETE'              00345400
&ZOPO(&ZOPN)          SETC  'EQU'                                       00345500
&ZOPV(&ZOPN)          SETC  'B''00100000'''                             00345600
&ZOPD(&ZOPN)          SETC  '++ XSTATUS.'                               00345700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).INCOMPLETE'                   00345800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00345900
.*-------------------------------------------------------------------   00346000
.***AM.L09  XRSV0001 CL3                                                00346100
&ZOPN                 SETA &ZOPN+1                                      00346200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0001'                         00346300
&ZOPO(&ZOPN)          SETC 'DS'                                         00346400
&ZOPV(&ZOPN)          SETC 'CL3'                                        00346500
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV0001'                      00346600
.*-------------------------------------------------------------------   00346700
.***AM.L09  XMEMTOKEN BL.64                                             00346800
&ZOPN                 SETA &ZOPN+1                                      00346900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMEMTOKEN'                        00347000
&ZOPO(&ZOPN)          SETC 'DS'                                         00347100
&ZOPV(&ZOPN)          SETC 'BL.64'                                      00347200
&ZOPD(&ZOPN)          SETC '++ &ZXMEMTOKEN  XMEMTOKEN'                  00347300
.*-------------------------------------------------------------------   00347400
.***AM.L09  XTOKEN CL16                                                 00347500
&ZOPN                 SETA &ZOPN+1                                      00347600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XTOKEN'                           00347700
&ZOPO(&ZOPN)          SETC 'DS'                                         00347800
&ZOPV(&ZOPN)          SETC 'CL16'                                       00347900
&ZOPD(&ZOPN)          SETC '++ &ZXTOKEN  XTOKEN'                        00348000
.*-------------------------------------------------------------------   00348100
.***AM.L09  XSOURCE BL.64                                               00348200
&ZOPN                 SETA &ZOPN+1                                      00348300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSOURCE'                          00348400
&ZOPO(&ZOPN)          SETC 'DS'                                         00348500
&ZOPV(&ZOPN)          SETC 'BL.64'                                      00348600
&ZOPD(&ZOPN)          SETC '++ &ZXSOURCE  XSOURCE'                      00348700
.*-------------------------------------------------------------------   00348800
.***AM.L09  XUSERDATA CL8                                               00348900
&ZOPN                 SETA &ZOPN+1                                      00349000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XUSERDATA'                        00349100
&ZOPO(&ZOPN)          SETC 'DS'                                         00349200
&ZOPV(&ZOPN)          SETC 'CL8'                                        00349300
&ZOPD(&ZOPN)          SETC '++ &ZXUSERDATA  XUSERDATA'                  00349400
.*-------------------------------------------------------------------   00349500
.***AM.L09  XEXITPARMS BL.64                                            00349600
&ZOPN                 SETA &ZOPN+1                                      00349700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XEXITPARMS'                       00349800
&ZOPO(&ZOPN)          SETC 'DS'                                         00349900
&ZOPV(&ZOPN)          SETC 'BL.64'                                      00350000
&ZOPD(&ZOPN)          SETC '++ &ZXEXITPARMS  XEXITPARMS'                00350100
.*-------------------------------------------------------------------   00350200
.***AM.L09  XEXIT A                                                     00350300
&ZOPN                 SETA &ZOPN+1                                      00350400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XEXIT'                            00350500
&ZOPO(&ZOPN)          SETC 'DS'                                         00350600
&ZOPV(&ZOPN)          SETC 'A'                                          00350700
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XEXIT'                      00350800
.*-------------------------------------------------------------------   00350900
.***AM.L09 ADDR XANSAREA A                                              00351000
&ZOPN                 SETA &ZOPN+1                                      00351100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XANSAREA_ADDR'                    00351200
&ZOPO(&ZOPN)          SETC 'DS'                                         00351300
&ZOPV(&ZOPN)          SETC 'A'                                          00351400
&ZOPD(&ZOPN)          SETC '++ &ZXANSAREA ADDR XANSAREA'                00351500
.*-------------------------------------------------------------------   00351600
.***AM.L09 ADDR XRETMSGTOKEN A                                          00351700
&ZOPN                 SETA &ZOPN+1                                      00351800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRETMSGTOKEN_ADDR'                00351900
&ZOPO(&ZOPN)          SETC 'DS'                                         00352000
&ZOPV(&ZOPN)          SETC 'A'                                          00352100
&ZOPD(&ZOPN)          SETC '++ &ZXRETMSGTOKEN ADDR XRETMSGTOKEN'        00352200
.*-------------------------------------------------------------------   00352300
.***AM.L09 ALET XANSAREA F                                              00352400
&ZOPN                 SETA &ZOPN+1                                      00352500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XANSAREA_ALET'                    00352600
&ZOPO(&ZOPN)          SETC 'DS'                                         00352700
&ZOPV(&ZOPN)          SETC 'F'                                          00352800
&ZOPD(&ZOPN)          SETC '++ &ZXANSAREA ALET XANSAREA'                00352900
.*-------------------------------------------------------------------   00353000
.***AM.L09 ALET XRETMSGTOKEN F                                          00353100
&ZOPN                 SETA &ZOPN+1                                      00353200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRETMSGTOKEN_ALET'                00353300
&ZOPO(&ZOPN)          SETC 'DS'                                         00353400
&ZOPV(&ZOPN)          SETC 'F'                                          00353500
&ZOPD(&ZOPN)          SETC '++ &ZXRETMSGTOKEN ALET XRETMSGTOKEN'        00353600
.*-------------------------------------------------------------------   00353700
.***AM.L09  XANSLEN F                                                   00353800
&ZOPN                 SETA &ZOPN+1                                      00353900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XANSLEN'                          00354000
&ZOPO(&ZOPN)          SETC 'DS'                                         00354100
&ZOPV(&ZOPN)          SETC 'F'                                          00354200
&ZOPD(&ZOPN)          SETC '++ &ZXANSLEN  XANSLEN'                      00354300
.*-------------------------------------------------------------------   00354400
.***AM.MLM1 SAVED LOCATION COUNTER                                      00354500
                      AIF  ('&ZENDBASEPL' NE '').ZL35LB                 00354600
&ZENDBASEPL           SETC 'YES'                                        00354700
&ZOPN                 SETA &ZOPN+1                                      00354800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._PL_END'                           00354900
&ZOPO(&ZOPN)          SETC 'EQU'                                        00355000
&ZOPV(&ZOPN)          SETC '*'                                          00355100
&ZOPD(&ZOPN)          SETC '++ END OF BASE PLIST'                       00355200
.ZL35LB               ANOP  ,                                           00355300
.*-------------------------------------------------------------------   00355400
.***AM.PJR1 DEFINED ON XEXIT                                            00355500
&ZOPN                 SETA &ZOPN+1                                      00355600
&ZOPL(&ZOPN)          SETC ' '                                          00355700
&ZOPO(&ZOPN)          SETC 'ORG'                                        00355800
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+56'                               00355900
&ZOPD(&ZOPN)          SETC ' '                                          00356000
.*-------------------------------------------------------------------   00356100
.***AM.L09  XNOTIFYEXIT A                                               00356200
&ZOPN                 SETA &ZOPN+1                                      00356300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XNOTIFYEXIT'                      00356400
&ZOPO(&ZOPN)          SETC 'DS'                                         00356500
&ZOPV(&ZOPN)          SETC 'A'                                          00356600
&ZOPD(&ZOPN)          SETC '++ &ZXNOTIFYEXIT  XNOTIFYEXIT'              00356700
.*-------------------------------------------------------------------   00356800
.***AM.PJR1 DEFINED ON XEXIT                                            00356900
&ZOPN                 SETA &ZOPN+1                                      00357000
&ZOPL(&ZOPN)          SETC ' '                                          00357100
&ZOPO(&ZOPN)          SETC 'ORG'                                        00357200
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+56'                               00357300
&ZOPD(&ZOPN)          SETC ' '                                          00357400
.*-------------------------------------------------------------------   00357500
.***AM.L09  XMSGEXIT A                                                  00357600
&ZOPN                 SETA &ZOPN+1                                      00357700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMSGEXIT'                         00357800
&ZOPO(&ZOPN)          SETC 'DS'                                         00357900
&ZOPV(&ZOPN)          SETC 'A'                                          00358000
&ZOPD(&ZOPN)          SETC '++ &ZXMSGEXIT  XMSGEXIT'                    00358100
&ZOPN                 SETA &ZOPN+1                                      00358200
&ZOPL(&ZOPN)          SETC ' '                                          00358300
&ZOPO(&ZOPN)          SETC 'ORG'                                        00358400
&ZOPV(&ZOPN)          SETC '&XMFCTRL._PL_END'                           00358500
&ZOPD(&ZOPN)          SETC 'RESET LOCATION COUNTER'                     00358600
.*-------------------------------------------------------------------   00358700
.***AM.L10 END OF IXCMSGC LIST PARAMETERS                               00358800
&ZOPN                 SETA &ZOPN+1                                      00358900
&ZOPL(&ZOPN)          SETC '&XMFCTRL.L'                                 00359000
&ZOPO(&ZOPN)          SETC 'EQU'                                        00359100
&ZOPV(&ZOPN)          SETC '*-&XMFCTRL'                                 00359200
&ZOPD(&ZOPN)          SETC '++ LENGTH OF PLIST'                         00359300
.*                                                                      00359400
&ZOPN                 SETA &ZOPN+1                                      00359500
&ZOPL(&ZOPN)          SETC ' '                                          00359600
&ZOPO(&ZOPN)          SETC 'SPACE'                                      00359700
&ZOPV(&ZOPN)          SETC '1'                                          00359800
&ZOPD(&ZOPN)          SETC ' '                                          00359900
.*-------------------------------------------------------------------   00360000
.***AL.L12 IXCMSGC FMT=LIST MF=S|L PARAMETERS                           00360100
                      AIF   ('&XMF' EQ 'L').ZMFLX  DONE IF MF=L         00360200
.*                                                                      00360300
&ZOPN                 SETA  &ZOPN+1                                     00360400
&ZOPL(&ZOPN)          SETC  '&XMFCTRL.S'                                00360500
&ZOPO(&ZOPN)          SETC  'DC'                                        00360600
&ZOPV(&ZOPN)          SETC  '0H''0'''                                   00360700
&ZOPD(&ZOPN)          SETC  '++ IXCMSGC ARG PARMS'                      00360800
.*                                                                      00360900
.ZLMFSLX              ANOP  ,                                           00361000
.*-------------------------------------------------------------------   00361100
.***AL.L13 SET ZPLLEN TO ITS APPROPRIATE VALUE                          00361200
&ZPLLEN               SETA 80                                           00361300
.*                                                                      00361400
.******************************************************************     00361500
.***AI.L01 IXCMSGC FMT=LIST FILL IN PARAMETER AREA                      00361600
.******************************************************************     00361700
                      ACTR  10000                                       00361800
&ZCVAL                SETC  'LA'           ASSUME XA MODE               00361900
                      AIF   ('&SYSASCE' EQ 'P').ZIMFXA  SYSSTATE PRI    00362000
&ZCVAL                SETC  'LAE'          XAX MODE                     00362100
.ZIMFXA               ANOP ,                                            00362200
.*                                                                      00362300
                      AIF   ('&XMFCTRL'(1,1) NE '(').ZIMFN2  NOT GPR    00362400
&ZCGPR                SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)  GET GPR         00362500
                      AIF   ('&ZCGPR' EQ 'GPR1').ZIMFNX                 00362600
                      AIF   ('&ZCGPR' EQ 'GPR01').ZIMFNX                00362700
                      AIF   ('&ZCGPR' EQ 'REG1').ZIMFNX                 00362800
                      AIF   ('&ZCGPR' EQ 'REG01').ZIMFNX                00362900
                      AIF   ('&ZCGPR' EQ 'R1').ZIMFNX                   00363000
                      AIF   ('&ZCGPR' EQ '1').ZIMFNX                    00363100
                      AIF   ('&ZCGPR' EQ '01').ZIMFNX                   00363200
&ZOPN                 SETA  &ZOPN+1                                     00363300
&ZOPL(&ZOPN)          SETC  ' '                                         00363400
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00363500
&ZOPV(&ZOPN)          SETC  '1,0(,&ZCGPR)'                              00363600
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00363700
                      AGO   .ZIMFNX                                     00363800
.*                                                                      00363900
.ZIMFN2               ANOP ,                                            00364000
&ZOPN                 SETA  &ZOPN+1                                     00364100
&ZOPL(&ZOPN)          SETC  ' '                                         00364200
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00364300
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL'                                00364400
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00364500
.ZIMFNX               ANOP ,                                            00364600
.********************************************************************   00364700
.***AI.L02 IXCMSGC FMT=LIST INITIALIZE PARAMETER AREA                   00364800
.********************************************************************   00364900
.***AI.L03 MF=(SLE)                                                     00365000
                      AIF   ('&XMF' EQ 'L').ZIMFLX                      00365100
.*                                                                      00365200
&ZOPN                 SETA  &ZOPN+1                                     00365300
&ZOPL(&ZOPN)          SETC  ' '                                         00365400
&ZOPO(&ZOPN)          SETC  'XC'                                        00365500
&ZOPV(&ZOPN)          SETC  '0(&ZPLLEN,1),0(1)'                         00365600
&ZOPD(&ZOPN)          SETC  '++ INITIALIZE'                             00365700
.ZIMFLX               ANOP  ,                                           00365800
.*-------------------------------------------------------------------   00365900
.***AI.L07 XREQUEST AL1                                                 00366000
&ZW                   SETC  ''                                          00366100
.*-------------------------------------------------------------------   00366200
.***AI.L15 XREQUEST "SAVEMSG" AL1                                       00366300
         AIF   ('&XREQUEST' NE 'SAVEMSG').ZI3A                          00366400
&ZW                   SETC  '1'                                         00366500
.ZI3A                 ANOP  ,                                           00366600
.*-------------------------------------------------------------------   00366700
.***AI.L15 XREQUEST "DISCARDMSG" AL1                                    00366800
         AIF   ('&XREQUEST' NE 'DISCARDMSG').ZI4A                       00366900
&ZW                   SETC  '2'                                         00367000
.ZI4A                 ANOP  ,                                           00367100
.*-------------------------------------------------------------------   00367200
.***AI.L15 XREQUEST "QUERYMSG" AL1                                      00367300
         AIF   ('&XREQUEST' NE 'QUERYMSG').ZI5A                         00367400
&ZW                   SETC  '3'                                         00367500
.ZI5A                 ANOP  ,                                           00367600
.*-------------------------------------------------------------------   00367700
.***AI.L15 XREQUEST "COMPLETION" AL1                                    00367800
         AIF   ('&XREQUEST' NE 'COMPLETION').ZI6A                       00367900
&ZW                   SETC  '4'                                         00368000
.ZI6A                 ANOP  ,                                           00368100
.*-------------------------------------------------------------------   00368200
.***AI.L15 XREQUEST "CALLEXIT" AL1                                      00368300
         AIF   ('&XREQUEST' NE 'CALLEXIT').ZI7A                         00368400
&ZW                   SETC  '5'                                         00368500
.ZI7A                 ANOP  ,                                           00368600
.*-------------------------------------------------------------------   00368700
.***AI.L17 XREQUEST AL1                                                 00368800
                      AIF   ('&ZW' EQ '0').ZI7B                         00368900
                      AIF   ('&ZW' EQ '').ZI7B                          00369000
.*                                                                      00369100
&ZOPN                 SETA  &ZOPN+1                                     00369200
&ZOPL(&ZOPN)          SETC  ' '                                         00369300
&ZOPO(&ZOPN)          SETC  'MVI'                                       00369400
&ZOPV(&ZOPN)          SETC  '1(1),&ZW'                                  00369500
&ZOPD(&ZOPN)          SETC  '++ &ZXREQUEST XREQUEST'                    00369600
.ZI7B                 ANOP  ,                                           00369700
.*-------------------------------------------------------------------   00369800
.***AI.L05 XTYPE BL1                                                    00369900
&ZW                   SETC  ''                                          00370000
&ZCLNG                SETC  ''             RESET BIT ON FLAG            00370100
.*-------------------------------------------------------------------   00370200
.***AI.L08 XTYPE "FORCE"                                                00370300
.***      BL1'1XXXXXXX'                                                 00370400
         AIF   ('&XTYPE' NE 'FORCE').ZI9A                               00370500
&ZW                   SETC  '&ZW.1'                                     00370600
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00370700
                      AGO   .ZI9C                                       00370800
.*                                                                      00370900
.ZI9A                 ANOP  ,                                           00371000
&ZW                   SETC  '&ZW.0'                                     00371100
.ZI9C                 ANOP  ,                                           00371200
.*-------------------------------------------------------------------   00371300
.***AI.L08 XTYPE "NOTIFYEXIT"                                           00371400
.***      BL1'XX1XXXXX'                                                 00371500
         AIF   ('&XCALL' NE 'NOTIFYEXIT').ZI10A                         00371600
&ZW                   SETC  '&ZW.01'                                    00371700
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00371800
                      AGO   .ZI10C                                      00371900
.*                                                                      00372000
.ZI10A                ANOP  ,                                           00372100
&ZW                   SETC  '&ZW.00'                                    00372200
.ZI10C                ANOP  ,                                           00372300
.*-------------------------------------------------------------------   00372400
.***AI.L08 XTYPE "MSGEXIT"                                              00372500
.***      BL1'XXX1XXXX'                                                 00372600
         AIF   ('&XCALL' NE 'MSGEXIT').ZI11A                            00372700
&ZW                   SETC  '&ZW.1'                                     00372800
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00372900
                      AGO   .ZI11C                                      00373000
.*                                                                      00373100
.ZI11A                ANOP  ,                                           00373200
&ZW                   SETC  '&ZW.0'                                     00373300
.ZI11C                ANOP  ,                                           00373400
.*-------------------------------------------------------------------   00373500
.***AI.L08 XTYPE "DETAIL"                                               00373600
.***      BL1'XXXX1XXX'                                                 00373700
         AIF   ('&XDATATYPE' NE 'DETAIL').ZI12A                         00373800
&ZW                   SETC  '&ZW.1'                                     00373900
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00374000
                      AGO   .ZI12C                                      00374100
.*                                                                      00374200
.ZI12A                ANOP  ,                                           00374300
&ZW                   SETC  '&ZW.0'                                     00374400
.ZI12C                ANOP  ,                                           00374500
.*-------------------------------------------------------------------   00374600
.***AI.L08 XTYPE "MSGOUT"                                               00374700
.***      BL1'XXXXX1XX'                                                 00374800
         AIF   ('&XDATATYPE' NE 'MSGOUT').ZI13A                         00374900
&ZW                   SETC  '&ZW.1'                                     00375000
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00375100
                      AGO   .ZI13C                                      00375200
.*                                                                      00375300
.ZI13A                ANOP  ,                                           00375400
&ZW                   SETC  '&ZW.0'                                     00375500
.ZI13C                ANOP  ,                                           00375600
.*-------------------------------------------------------------------   00375700
.***AI.L08 XTYPE "MSGIN"                                                00375800
.***      BL1'XXXXXX1X'                                                 00375900
         AIF   ('&XDATATYPE' NE 'MSGIN').ZI14A                          00376000
&ZW                   SETC  '&ZW.10'                                    00376100
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00376200
                      AGO   .ZI14C                                      00376300
.*                                                                      00376400
.ZI14A                ANOP  ,                                           00376500
&ZW                   SETC  '&ZW.00'                                    00376600
.ZI14C                ANOP  ,                                           00376700
.*-------------------------------------------------------------------   00376800
.***AI.L11 XTYPE BL1                                                    00376900
                      AIF   ('&ZCLNG' NE 'YES').ZI14E  ALL ZERO BITS    00377000
&ZOPN                 SETA  &ZOPN+1                                     00377100
&ZOPL(&ZOPN)          SETC  ' '                                         00377200
&ZOPO(&ZOPN)          SETC  'OI'                                        00377300
&ZOPV(&ZOPN)          SETC  '2(1),B''&ZW'''                             00377400
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              00377500
.ZI14E                ANOP  ,                                           00377600
.*-------------------------------------------------------------------   00377700
.***AI.L05 XKEYUSED3 BL1                                                00377800
&ZW                   SETC  ''                                          00377900
&ZCLNG                SETC  ''             RESET BIT ON FLAG            00378000
.*-------------------------------------------------------------------   00378100
.***AI.L08 XKEYUSED3 "SOURCE"                                           00378200
.***      BL1'1XXXXXXX'                                                 00378300
         AIF   ('&SOURCE' EQ '').ZI16A                                  00378400
         AIF   ('&SOURCE' EQ 'ANY').ZI16A                               00378500
&ZW                   SETC  '&ZW.1'                                     00378600
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00378700
                      AGO   .ZI16C                                      00378800
.*                                                                      00378900
.ZI16A                ANOP  ,                                           00379000
&ZW                   SETC  '&ZW.0'                                     00379100
.ZI16C                ANOP  ,                                           00379200
.*-------------------------------------------------------------------   00379300
.***AI.L08 XKEYUSED3 "RETMSGTOKEN"                                      00379400
.***      BL1'X1XXXXXX'                                                 00379500
         AIF   ('&RETMSGTOKEN' EQ '').ZI17A                             00379600
         AIF   ('&RETMSGTOKEN' EQ '').ZI17A                             00379700
&ZW                   SETC  '&ZW.1'                                     00379800
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00379900
                      AGO   .ZI17C                                      00380000
.*                                                                      00380100
.ZI17A                ANOP  ,                                           00380200
&ZW                   SETC  '&ZW.0'                                     00380300
.ZI17C                ANOP  ,                                           00380400
.*-------------------------------------------------------------------   00380500
.***AI.L08 XKEYUSED3 "NO_CHANGE"                                        00380600
.***      BL1'XX1XXXXX'                                                 00380700
         AIF   ('&XUSERDATA' NE 'NO_CHANGE').ZI18A                      00380800
&ZW                   SETC  '&ZW.100000'                                00380900
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00381000
                      AGO   .ZI18C                                      00381100
.*                                                                      00381200
.ZI18A                ANOP  ,                                           00381300
&ZW                   SETC  '&ZW.000000'                                00381400
.ZI18C                ANOP  ,                                           00381500
.*-------------------------------------------------------------------   00381600
.***AI.L11 XKEYUSED3 BL1                                                00381700
                      AIF   ('&ZCLNG' NE 'YES').ZI18E  ALL ZERO BITS    00381800
&ZOPN                 SETA  &ZOPN+1                                     00381900
&ZOPL(&ZOPN)          SETC  ' '                                         00382000
&ZOPO(&ZOPN)          SETC  'OI'                                        00382100
&ZOPV(&ZOPN)          SETC  '3(1),B''&ZW'''                             00382200
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              00382300
.ZI18E                ANOP  ,                                           00382400
.*-------------------------------------------------------------------   00382500
.***AI.L05 XOPTIONS BL1                                                 00382600
&ZW                   SETC  ''                                          00382700
&ZCLNG                SETC  ''             RESET BIT ON FLAG            00382800
.*-------------------------------------------------------------------   00382900
.***AI.L08 XOPTIONS "SAVED"                                             00383000
.***      BL1'1XXXXXXX'                                                 00383100
         AIF   ('&XSTATUS' NE 'SAVED').ZI20A                            00383200
&ZW                   SETC  '&ZW.1'                                     00383300
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00383400
                      AGO   .ZI20C                                      00383500
.*                                                                      00383600
.ZI20A                ANOP  ,                                           00383700
&ZW                   SETC  '&ZW.0'                                     00383800
.ZI20C                ANOP  ,                                           00383900
.*-------------------------------------------------------------------   00384000
.***AI.L08 XOPTIONS "COMPLETE"                                          00384100
.***      BL1'X1XXXXXX'                                                 00384200
         AIF   ('&XSTATUS' NE 'COMPLETE').ZI21A                         00384300
&ZW                   SETC  '&ZW.1'                                     00384400
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00384500
                      AGO   .ZI21C                                      00384600
.*                                                                      00384700
.ZI21A                ANOP  ,                                           00384800
&ZW                   SETC  '&ZW.0'                                     00384900
.ZI21C                ANOP  ,                                           00385000
.*-------------------------------------------------------------------   00385100
.***AI.L08 XOPTIONS "INCOMPLETE"                                        00385200
.***      BL1'XX1XXXXX'                                                 00385300
         AIF   ('&XSTATUS' NE 'INCOMPLETE').ZI22A                       00385400
&ZW                   SETC  '&ZW.100000'                                00385500
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00385600
                      AGO   .ZI22C                                      00385700
.*                                                                      00385800
.ZI22A                ANOP  ,                                           00385900
&ZW                   SETC  '&ZW.000000'                                00386000
.ZI22C                ANOP  ,                                           00386100
.*-------------------------------------------------------------------   00386200
.***AI.L11 XOPTIONS BL1                                                 00386300
                      AIF   ('&ZCLNG' NE 'YES').ZI22E  ALL ZERO BITS    00386400
&ZOPN                 SETA  &ZOPN+1                                     00386500
&ZOPL(&ZOPN)          SETC  ' '                                         00386600
&ZOPO(&ZOPN)          SETC  'OI'                                        00386700
&ZOPV(&ZOPN)          SETC  '4(1),B''&ZW'''                             00386800
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              00386900
.ZI22E                ANOP  ,                                           00387000
.*-------------------------------------------------------------------   00387100
.***AI.L25  XMEMTOKEN XL8                                               00387200
                      AIF   ('&ZXMEMTOKEN' EQ '').ZI24E                 00387300
                      AIF   ('&ZXMEMTOKEN' EQ 'OUTPUT').ZI24E           00387400
&ZCGPR                SETC  '&XMEMTOKEN'                                00387500
.*                                                                      00387600
                      AIF   ('&XMEMTOKEN'(1,1) NE '(').ZI24B            00387700
&ZCGPR   SETC  '0('.'&XMEMTOKEN'(2,K'&XMEMTOKEN-2).')'                  00387800
                      AGO   .ZI24D                                      00387900
.ZI24B                ANOP  ,                                           00388000
.*                                                                      00388100
&ZC                   SETC  '&XMEMTOKEN'(1,1)                           00388200
                      AIF   (T'&ZC NE 'N').ZI24D                        00388300
&ZC                   SETC  '&XMEMTOKEN'                                00388400
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI24D               00388500
&ZCGPR                SETC  '=BL8''&XMEMTOKEN'''                        00388600
.*                                                                      00388700
.ZI24D                ANOP  ,                                           00388800
.*                                                                      00388900
&ZOPN                 SETA  &ZOPN+1                                     00389000
&ZOPL(&ZOPN)          SETC  ' '                                         00389100
&ZOPO(&ZOPN)          SETC  'MVC'                                       00389200
&ZOPV(&ZOPN)          SETC  '8(8,1),&ZCGPR'                             00389300
&ZOPD(&ZOPN)          SETC  '++ &ZXMEMTOKEN XMEMTOKEN'                  00389400
.*                                                                      00389500
.ZI24E                ANOP  ,                                           00389600
.*-------------------------------------------------------------------   00389700
.***AI.L25  XTOKEN CL16                                                 00389800
                      AIF   ('&ZXTOKEN' EQ '').ZI25E                    00389900
                      AIF   ('&ZXTOKEN' EQ 'OUTPUT').ZI25E              00390000
&ZCGPR                SETC  '&XTOKEN'                                   00390100
.*                                                                      00390200
                      AIF   ('&XTOKEN'(1,1) NE '(').ZI25B               00390300
&ZCGPR   SETC  '0('.'&XTOKEN'(2,K'&XTOKEN-2).')'                        00390400
.ZI25B                ANOP  ,                                           00390500
.*                                                                      00390600
&ZOPN                 SETA  &ZOPN+1                                     00390700
&ZOPL(&ZOPN)          SETC  ' '                                         00390800
&ZOPO(&ZOPN)          SETC  'MVC'                                       00390900
&ZOPV(&ZOPN)          SETC  '16(16,1),&ZCGPR'                           00391000
&ZOPD(&ZOPN)          SETC  '++ &ZXTOKEN XTOKEN'                        00391100
.*                                                                      00391200
.ZI25E                ANOP  ,                                           00391300
.*-------------------------------------------------------------------   00391400
.***AI.L18  XSOURCE XL8                                                 00391500
         AIF   ('&XSOURCE' NE 'ANY').ZI26                               00391600
&ZXSOURCE             SETC  ''             RESET INPUT/OUTPUT           00391700
.ZI26                 ANOP  ,                                           00391800
.*-------------------------------------------------------------------   00391900
.***AI.L25  XSOURCE XL8                                                 00392000
                      AIF   ('&ZXSOURCE' EQ '').ZI26E                   00392100
                      AIF   ('&ZXSOURCE' EQ 'OUTPUT').ZI26E             00392200
&ZCGPR                SETC  '&XSOURCE'                                  00392300
.*                                                                      00392400
                      AIF   ('&XSOURCE'(1,1) NE '(').ZI26B              00392500
&ZCGPR   SETC  '0('.'&XSOURCE'(2,K'&XSOURCE-2).')'                      00392600
                      AGO   .ZI26D                                      00392700
.ZI26B                ANOP  ,                                           00392800
.*                                                                      00392900
&ZC                   SETC  '&XSOURCE'(1,1)                             00393000
                      AIF   (T'&ZC NE 'N').ZI26D                        00393100
&ZC                   SETC  '&XSOURCE'                                  00393200
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI26D               00393300
&ZCGPR                SETC  '=BL8''&XSOURCE'''                          00393400
.*                                                                      00393500
.ZI26D                ANOP  ,                                           00393600
.*                                                                      00393700
&ZOPN                 SETA  &ZOPN+1                                     00393800
&ZOPL(&ZOPN)          SETC  ' '                                         00393900
&ZOPO(&ZOPN)          SETC  'MVC'                                       00394000
&ZOPV(&ZOPN)          SETC  '32(8,1),&ZCGPR'                            00394100
&ZOPD(&ZOPN)          SETC  '++ &ZXSOURCE XSOURCE'                      00394200
.*                                                                      00394300
.ZI26E                ANOP  ,                                           00394400
.*-------------------------------------------------------------------   00394500
.***AI.L18  XUSERDATA CL8                                               00394600
         AIF   ('&XUSERDATA' NE 'NO_CHANGE').ZI27                       00394700
&ZXUSERDATA           SETC  ''             RESET INPUT/OUTPUT           00394800
.ZI27                 ANOP  ,                                           00394900
.*-------------------------------------------------------------------   00395000
.***AI.L25  XUSERDATA CL8                                               00395100
                      AIF   ('&ZXUSERDATA' EQ '').ZI27E                 00395200
                      AIF   ('&ZXUSERDATA' EQ 'OUTPUT').ZI27E           00395300
&ZCGPR                SETC  '&XUSERDATA'                                00395400
.*                                                                      00395500
                      AIF   ('&XUSERDATA'(1,1) NE '(').ZI27B            00395600
&ZCGPR   SETC  '0('.'&XUSERDATA'(2,K'&XUSERDATA-2).')'                  00395700
.ZI27B                ANOP  ,                                           00395800
.*                                                                      00395900
&ZOPN                 SETA  &ZOPN+1                                     00396000
&ZOPL(&ZOPN)          SETC  ' '                                         00396100
&ZOPO(&ZOPN)          SETC  'MVC'                                       00396200
&ZOPV(&ZOPN)          SETC  '40(8,1),&ZCGPR'                            00396300
&ZOPD(&ZOPN)          SETC  '++ &ZXUSERDATA XUSERDATA'                  00396400
.*                                                                      00396500
.ZI27E                ANOP  ,                                           00396600
.*-------------------------------------------------------------------   00396700
.***AI.L18  XEXITPARMS XL8                                              00396800
         AIF   ('&XEXITPARMS' NE 'ZERO').ZI28                           00396900
&ZXEXITPARMS          SETC  ''             RESET INPUT/OUTPUT           00397000
.ZI28                 ANOP  ,                                           00397100
.*-------------------------------------------------------------------   00397200
.***AI.L25  XEXITPARMS XL8                                              00397300
                      AIF   ('&ZXEXITPARMS' EQ '').ZI28E                00397400
                      AIF   ('&ZXEXITPARMS' EQ 'OUTPUT').ZI28E          00397500
&ZCGPR                SETC  '&XEXITPARMS'                               00397600
.*                                                                      00397700
                      AIF   ('&XEXITPARMS'(1,1) NE '(').ZI28B           00397800
&ZCGPR   SETC  '0('.'&XEXITPARMS'(2,K'&XEXITPARMS-2).')'                00397900
                      AGO   .ZI28D                                      00398000
.ZI28B                ANOP  ,                                           00398100
.*                                                                      00398200
&ZC                   SETC  '&XEXITPARMS'(1,1)                          00398300
                      AIF   (T'&ZC NE 'N').ZI28D                        00398400
&ZC                   SETC  '&XEXITPARMS'                               00398500
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI28D               00398600
&ZCGPR                SETC  '=BL8''&XEXITPARMS'''                       00398700
.*                                                                      00398800
.ZI28D                ANOP  ,                                           00398900
.*                                                                      00399000
&ZOPN                 SETA  &ZOPN+1                                     00399100
&ZOPL(&ZOPN)          SETC  ' '                                         00399200
&ZOPO(&ZOPN)          SETC  'MVC'                                       00399300
&ZOPV(&ZOPN)          SETC  '48(8,1),&ZCGPR'                            00399400
&ZOPD(&ZOPN)          SETC  '++ &ZXEXITPARMS XEXITPARMS'                00399500
.*                                                                      00399600
.ZI28E                ANOP  ,                                           00399700
.*-------------------------------------------------------------------   00399800
.***AI.L19 ADDR XANSAREA A                                              00399900
                      AIF   ('&ZXANSAREA' EQ '').ZI30H                  00400000
&ZCLNG                SETC  '&XANSAREA'                                 00400100
&ZCGPR                SETC  '14'                                        00400200
         AIF   ('&XANSAREA'(1,1) EQ '(').ZI30F  IN GPR                  00400300
.*                                                                      00400400
&ZOPN                 SETA  &ZOPN+1                                     00400500
&ZOPL(&ZOPN)          SETC  ' '                                         00400600
&ZOPO(&ZOPN)          SETC  'LA'                                        00400700
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00400800
&ZOPD(&ZOPN)          SETC  '++ &ZXANSAREA XANSAREA'                    00400900
.*                                                                      00401000
                      AGO   .ZI30G                                      00401100
.*                                                                      00401200
.ZI30F                ANOP  ,                                           00401300
&ZCGPR   SETC  '&XANSAREA'(2,K'&XANSAREA-2)                             00401400
.*                                                                      00401500
.ZI30G                ANOP  ,                                           00401600
.*                                                                      00401700
&ZOPN                 SETA  &ZOPN+1                                     00401800
&ZOPL(&ZOPN)          SETC  ' '                                         00401900
&ZOPO(&ZOPN)          SETC  'ST'                                        00402000
&ZOPV(&ZOPN)          SETC  '&ZCGPR,60(,1)'                             00402100
&ZOPD(&ZOPN)          SETC  '++ &ZXANSAREA XANSAREA'                    00402200
.*                                                                      00402300
.ZI30H                ANOP  ,                                           00402400
.*-------------------------------------------------------------------   00402500
.***AI.L19 ADDR XRETMSGTOKEN A                                          00402600
                      AIF   ('&ZXRETMSGTOKEN' EQ '').ZI31H              00402700
&ZCLNG                SETC  '&XRETMSGTOKEN'                             00402800
&ZCGPR                SETC  '14'                                        00402900
         AIF   ('&XRETMSGTOKEN'(1,1) EQ '(').ZI31F  IN GPR              00403000
.*                                                                      00403100
&ZOPN                 SETA  &ZOPN+1                                     00403200
&ZOPL(&ZOPN)          SETC  ' '                                         00403300
&ZOPO(&ZOPN)          SETC  'LA'                                        00403400
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00403500
&ZOPD(&ZOPN)          SETC  '++ &ZXRETMSGTOKEN XRETMSGTOKEN'            00403600
.*                                                                      00403700
                      AGO   .ZI31G                                      00403800
.*                                                                      00403900
.ZI31F                ANOP  ,                                           00404000
&ZCGPR   SETC  '&XRETMSGTOKEN'(2,K'&XRETMSGTOKEN-2)                     00404100
.*                                                                      00404200
.ZI31G                ANOP  ,                                           00404300
.*                                                                      00404400
&ZOPN                 SETA  &ZOPN+1                                     00404500
&ZOPL(&ZOPN)          SETC  ' '                                         00404600
&ZOPO(&ZOPN)          SETC  'ST'                                        00404700
&ZOPV(&ZOPN)          SETC  '&ZCGPR,64(,1)'                             00404800
&ZOPD(&ZOPN)          SETC  '++ &ZXRETMSGTOKEN XRETMSGTOKEN'            00404900
.*                                                                      00405000
.ZI31H                ANOP  ,                                           00405100
.*-------------------------------------------------------------------   00405200
.***AI.L23 ALET XANSAREA F                                              00405300
         AIF   ('&ZXANSAREA' EQ '').ZI32G                               00405400
         AIF   ('&SYSASCE' EQ 'P').ZI32G   SYSSTATE PRIMARY             00405500
&ZCLNG                SETC  '&XANSAREA'                                 00405600
         AIF   ('&XANSAREA'(1,1) EQ '(').ZI32E  IN AR                   00405700
.*                                                                      00405800
&ZCGPR                SETC  '14'                                        00405900
&ZOPN                 SETA  &ZOPN+1                                     00406000
&ZOPL(&ZOPN)          SETC  ' '                                         00406100
&ZOPO(&ZOPN)          SETC  'LAE'                                       00406200
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00406300
&ZOPD(&ZOPN)          SETC  '++ &ZXANSAREA XANSAREA'                    00406400
                      AGO   .ZI32F                                      00406500
.*                                                                      00406600
.ZI32E                ANOP  ,                                           00406700
&ZCGPR   SETC  '&XANSAREA'(2,K'&XANSAREA-2)                             00406800
.*                                                                      00406900
.ZI32F                ANOP  ,                                           00407000
.*                                                                      00407100
&ZOPN                 SETA  &ZOPN+1                                     00407200
&ZOPL(&ZOPN)          SETC  ' '                                         00407300
&ZOPO(&ZOPN)          SETC  'STAM'                                      00407400
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCGPR,68(1)'                       00407500
&ZOPD(&ZOPN)          SETC  '++ &ZXANSAREA XANSAREA'                    00407600
.*                                                                      00407700
.ZI32G                ANOP  ,                                           00407800
.*-------------------------------------------------------------------   00407900
.***AI.L23 ALET XRETMSGTOKEN F                                          00408000
         AIF   ('&ZXRETMSGTOKEN' EQ '').ZI33G                           00408100
         AIF   ('&SYSASCE' EQ 'P').ZI33G   SYSSTATE PRIMARY             00408200
&ZCLNG                SETC  '&XRETMSGTOKEN'                             00408300
         AIF   ('&XRETMSGTOKEN'(1,1) EQ '(').ZI33E  IN AR               00408400
.*                                                                      00408500
&ZCGPR                SETC  '14'                                        00408600
&ZOPN                 SETA  &ZOPN+1                                     00408700
&ZOPL(&ZOPN)          SETC  ' '                                         00408800
&ZOPO(&ZOPN)          SETC  'LAE'                                       00408900
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00409000
&ZOPD(&ZOPN)          SETC  '++ &ZXRETMSGTOKEN XRETMSGTOKEN'            00409100
                      AGO   .ZI33F                                      00409200
.*                                                                      00409300
.ZI33E                ANOP  ,                                           00409400
&ZCGPR   SETC  '&XRETMSGTOKEN'(2,K'&XRETMSGTOKEN-2)                     00409500
.*                                                                      00409600
.ZI33F                ANOP  ,                                           00409700
.*                                                                      00409800
&ZOPN                 SETA  &ZOPN+1                                     00409900
&ZOPL(&ZOPN)          SETC  ' '                                         00410000
&ZOPO(&ZOPN)          SETC  'STAM'                                      00410100
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCGPR,72(1)'                       00410200
&ZOPD(&ZOPN)          SETC  '++ &ZXRETMSGTOKEN XRETMSGTOKEN'            00410300
.*                                                                      00410400
.ZI33G                ANOP  ,                                           00410500
.*-------------------------------------------------------------------   00410600
.***AI.L25  XANSLEN F                                                   00410700
                      AIF   ('&ZXANSLEN' EQ '').ZI34E                   00410800
                      AIF   ('&ZXANSLEN' EQ 'OUTPUT').ZI34E             00410900
&ZCGPR                SETC  '&XANSLEN'                                  00411000
.*                                                                      00411100
                      AIF   ('&XANSLEN'(1,1) NE '(').ZI34B              00411200
&ZCGPR   SETC  '0('.'&XANSLEN'(2,K'&XANSLEN-2).')'                      00411300
                      AGO   .ZI34D                                      00411400
.ZI34B                ANOP  ,                                           00411500
.*                                                                      00411600
&ZC                   SETC  '&XANSLEN'(1,1)                             00411700
                      AIF   (T'&ZC NE 'N').ZI34D                        00411800
&ZC                   SETC  '&XANSLEN'                                  00411900
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI34D               00412000
&ZCGPR                SETC  '=FL4''&XANSLEN'''                          00412100
.*                                                                      00412200
.ZI34D                ANOP  ,                                           00412300
.*                                                                      00412400
&ZOPN                 SETA  &ZOPN+1                                     00412500
&ZOPL(&ZOPN)          SETC  ' '                                         00412600
&ZOPO(&ZOPN)          SETC  'MVC'                                       00412700
&ZOPV(&ZOPN)          SETC  '76(4,1),&ZCGPR'                            00412800
&ZOPD(&ZOPN)          SETC  '++ &ZXANSLEN XANSLEN'                      00412900
.*                                                                      00413000
.ZI34E                ANOP  ,                                           00413100
.*-------------------------------------------------------------------   00413200
.***AI.L19  XNOTIFYEXIT A                                               00413300
                      AIF   ('&ZXNOTIFYEXIT' EQ '').ZI36H               00413400
&ZCLNG                SETC  '&XNOTIFYEXIT'                              00413500
&ZCGPR                SETC  '14'                                        00413600
         AIF   ('&XNOTIFYEXIT'(1,1) EQ '(').ZI36F  IN GPR               00413700
.*                                                                      00413800
&ZOPN                 SETA  &ZOPN+1                                     00413900
&ZOPL(&ZOPN)          SETC  ' '                                         00414000
&ZOPO(&ZOPN)          SETC  'LA'                                        00414100
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00414200
&ZOPD(&ZOPN)          SETC  '++ &ZXNOTIFYEXIT XNOTIFYEXIT'              00414300
.*                                                                      00414400
                      AGO   .ZI36G                                      00414500
.*                                                                      00414600
.ZI36F                ANOP  ,                                           00414700
&ZCGPR   SETC  '&XNOTIFYEXIT'(2,K'&XNOTIFYEXIT-2)                       00414800
.*                                                                      00414900
.ZI36G                ANOP  ,                                           00415000
.*                                                                      00415100
&ZOPN                 SETA  &ZOPN+1                                     00415200
&ZOPL(&ZOPN)          SETC  ' '                                         00415300
&ZOPO(&ZOPN)          SETC  'ST'                                        00415400
&ZOPV(&ZOPN)          SETC  '&ZCGPR,56(,1)'                             00415500
&ZOPD(&ZOPN)          SETC  '++ &ZXNOTIFYEXIT XNOTIFYEXIT'              00415600
.*                                                                      00415700
.ZI36H                ANOP  ,                                           00415800
.*-------------------------------------------------------------------   00415900
.***AI.L19  XMSGEXIT A                                                  00416000
                      AIF   ('&ZXMSGEXIT' EQ '').ZI38H                  00416100
&ZCLNG                SETC  '&XMSGEXIT'                                 00416200
&ZCGPR                SETC  '14'                                        00416300
         AIF   ('&XMSGEXIT'(1,1) EQ '(').ZI38F  IN GPR                  00416400
.*                                                                      00416500
&ZOPN                 SETA  &ZOPN+1                                     00416600
&ZOPL(&ZOPN)          SETC  ' '                                         00416700
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00416800
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00416900
&ZOPD(&ZOPN)          SETC  '++ &ZXMSGEXIT XMSGEXIT'                    00417000
.*                                                                      00417100
                      AGO   .ZI38G                                      00417200
.*                                                                      00417300
.ZI38F                ANOP  ,                                           00417400
&ZCGPR   SETC  '&XMSGEXIT'(2,K'&XMSGEXIT-2)                             00417500
.*                                                                      00417600
.ZI38G                ANOP  ,                                           00417700
.*                                                                      00417800
&ZOPN                 SETA  &ZOPN+1                                     00417900
&ZOPL(&ZOPN)          SETC  ' '                                         00418000
&ZOPO(&ZOPN)          SETC  'ST'                                        00418100
&ZOPV(&ZOPN)          SETC  '&ZCGPR,56(,1)'                             00418200
&ZOPD(&ZOPN)          SETC  '++ &ZXMSGEXIT XMSGEXIT'                    00418300
.*                                                                      00418400
.ZI38H                ANOP  ,                                           00418500
.*-------------------------------------------------------------------   00418600
&ZOPN1                SETA &ZOPN                                        00418700
.*******************************************************************    00418800
.***  PROCESS IXCMSGC OUTPUT PARAMETERS                                 00418900
.*******************************************************************    00419000
                      ACTR  10000                                       00419100
.*******************************************************************    00419200
.***AO.X02  RETURN CODE PROCESSING                                      00419300
.*******************************************************************    00419400
                      AIF   (N'&RETCODE LE 0).ZMRETX                    00419500
                      AIF   ('&XRETCODE'(1,1) EQ '(').ZMRET2            00419600
                      AIF   ('&XRETCODE' EQ 'GPR15').ZMRETX             00419700
                      AIF   ('&XRETCODE' EQ 'REG15').ZMRETX             00419800
                      AIF   ('&XRETCODE' EQ 'R15').ZMRETX               00419900
                      AIF   ('&XRETCODE' EQ '15').ZMRETX                00420000
&ZOPN                 SETA  &ZOPN+1                                     00420100
&ZOPL(&ZOPN)          SETC  ' '                                         00420200
&ZOPO(&ZOPN)          SETC  'ST'                                        00420300
&ZOPV(&ZOPN)          SETC  '15,&XRETCODE'                              00420400
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00420500
                      AGO   .ZMRETX                                     00420600
.*                                                                      00420700
.ZMRET2               ANOP  ,                                           00420800
&ZCGPR                SETC  '&XRETCODE'(2,K'&XRETCODE-2)                00420900
                      AIF   ('&ZCGPR' EQ 'GPR15').ZMRETX                00421000
                      AIF   ('&ZCGPR' EQ 'REG15').ZMRETX                00421100
                      AIF   ('&ZCGPR' EQ 'R15').ZMRETX                  00421200
                      AIF   ('&ZCGPR' EQ '15').ZMRETX                   00421300
&ZOPN                 SETA  &ZOPN+1                                     00421400
&ZOPL(&ZOPN)          SETC  ' '                                         00421500
&ZOPO(&ZOPN)          SETC  'LR'                                        00421600
&ZOPV(&ZOPN)          SETC  '&ZCGPR,15'                                 00421700
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00421800
.ZMRETX               ANOP  ,                                           00421900
.*******************************************************************    00422000
.***AO.X03  REASON CODE PROCESSING                                      00422100
.*******************************************************************    00422200
                      AIF   (N'&RSNCODE LE 0).ZMRSNX                    00422300
                      AIF   ('&XRSNCODE'(1,1) EQ '(').ZMRSN2            00422400
                      AIF   ('&XRSNCODE' EQ 'GPR0').ZMRSNX              00422500
                      AIF   ('&XRSNCODE' EQ 'GPR00').ZMRSNX             00422600
                      AIF   ('&XRSNCODE' EQ 'REG0').ZMRSNX              00422700
                      AIF   ('&XRSNCODE' EQ 'REG00').ZMRSNX             00422800
                      AIF   ('&XRSNCODE' EQ 'R0').ZMRSNX                00422900
                      AIF   ('&XRSNCODE' EQ '0').ZMRSNX                 00423000
                      AIF   ('&XRSNCODE' EQ '00').ZMRSNX                00423100
&ZOPN                 SETA  &ZOPN+1                                     00423200
&ZOPL(&ZOPN)          SETC  ' '                                         00423300
&ZOPO(&ZOPN)          SETC  'ST'                                        00423400
&ZOPV(&ZOPN)          SETC  '0,&XRSNCODE'                               00423500
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00423600
                      AGO   .ZMRSNX                                     00423700
.*                                                                      00423800
.ZMRSN2               ANOP  ,                                           00423900
&ZCGPR                SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                00424000
                      AIF   ('&ZCGPR' EQ 'GPR0').ZMRSNX                 00424100
                      AIF   ('&ZCGPR' EQ 'GPR00').ZMRSNX                00424200
                      AIF   ('&ZCGPR' EQ 'REG0').ZMRSNX                 00424300
                      AIF   ('&ZCGPR' EQ 'REG00').ZMRSNX                00424400
                      AIF   ('&ZCGPR' EQ 'R0').ZMRSNX                   00424500
                      AIF   ('&ZCGPR' EQ '0').ZMRSNX                    00424600
                      AIF   ('&ZCGPR' EQ '00').ZMRSNX                   00424700
&ZOPN                 SETA  &ZOPN+1                                     00424800
&ZOPL(&ZOPN)          SETC  ' '                                         00424900
&ZOPO(&ZOPN)          SETC  'LR'                                        00425000
&ZOPV(&ZOPN)          SETC  '&ZCGPR,0'                                  00425100
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00425200
.ZMRSNX               ANOP  ,                                           00425300
.*******************************************************************    00425400
.***AO.X04  LABEL FOR MF=L PROCESSING                                   00425500
.*******************************************************************    00425600
.ZMFLX                ANOP  ,              MF=L PROCESSING              00425700
.*******************************************************************    00425800
.***AO.X05  FORMAT GENERATED INSTRUCTIONS                               00425900
.*******************************************************************    00426000
                      ACTR  10000                                       00426100
.*                                                                      00426200
                      LCLA  &ZLC           COLUMN POSITION              00426300
                      LCLA  &ZOPX          LIST TABLE INDEX             00426400
                      LCLC  &ZLL           LABEL                        00426500
                      LCLC  &ZLOP          OPERATION                    00426600
                      LCLC  &ZLV           VALUE                        00426700
                      LCLC  &ZLD           DESCRIPTION                  00426800
.*                                                                      00426900
&ZOPX                 SETA  1                                           00427000
.ZL2                  AIF   (&ZOPX GT &ZOPN1).ZLX  B IF DONE            00427100
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00427200
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00427300
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00427400
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00427500
                      AIF   (K'&ZLD LE 0).ZL5                           00427600
&ZLC                  SETA  35             COMMENT COLUMN               00427700
                      AIF   ('&ZLD'(1,1) NE '*').ZL3                    00427800
&ZLC                  SETA  33             COMMMENT COLUMN              00427900
.ZL3                  AIF   (K'&ZLV GE &ZLC-16-1).ZL4                   00428000
&ZLV                  SETC  '&ZLV'.' '                                  00428100
                      AGO   .ZL3                                        00428200
.*                                                                      00428300
.ZL4                  ANOP  ,                                           00428400
&ZLV                  SETC  '&ZLV'.' '                                  00428500
.ZL5                  ANOP  ,                                           00428600
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00428700
.*                                                                      00428800
&ZLL     &ZLOP &ZLV                                                     00428900
.*                                                                      00429000
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00429100
                      AGO   .ZL2           CONTINUE LOOPING             00429200
.*                                                                      00429300
.ZLX                  ANOP  ,                                           00429400
                      AIF   ('&XMF' EQ 'L').ZLINKX  MF=L                00429500
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00429600
         L     14,16(0,0)              GET CVT ADDRESS                  00429700
         L     14,772(14,0)            GET SFT ADDRESS                  00429800
         L     14,220(14,0)            GET LX FOR SERVICE ROUTINE       00429900
         AIF   ('&XREQUEST' EQ 'CALLEXIT').MCX                     @L2A 00430000
*                                                                 5@L3D 00430100
.MSC     ANOP  ,                                                   @P6C 00430200
         LA    15,46   GET EX FOR IXCSIMSC ENTRY                   @L2C 00430300
         AGO .DOPC          GO AND DO THE PC NOW                   @L1A 00430400
*                                                                 3@L3D 00430500
.MCX     ANOP  ,                                                   @P6C 00430600
         LA    15,42   GET EX FOR IXCSIMCX SERVICE                 @L2A 00430700
.DOPC    ANOP  ,                                                   @P6C 00430800
         OR    14,15                   GET PC NUMBER                    00430900
         PC    0(14)                                                    00431000
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00431100
.ZLINKX               ANOP  ,                                           00431200
.*******************************************************************    00431300
.***AP.X01  FORMAT GENERATED CODE                                       00431400
.ZL21                 AIF   (&ZOPX GT &ZOPN).ZLX1  B IF DONE            00431500
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00431600
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00431700
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00431800
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00431900
                      AIF   (K'&ZLD LE 0).ZL51                          00432000
&ZLC                  SETA  35             COMMENT COLUMN               00432100
                      AIF   ('&ZLD'(1,1) NE '*').ZL31                   00432200
&ZLC                  SETA  33             COMMENT COLUMN               00432300
.ZL31                 AIF   (K'&ZLV GE &ZLC-16-1).ZL41                  00432400
&ZLV                  SETC  '&ZLV'.' '                                  00432500
                      AGO   .ZL31                                       00432600
.*                                                                      00432700
.ZL41                 ANOP  ,                                           00432800
&ZLV                  SETC  '&ZLV'.' '                                  00432900
.ZL51                 ANOP  ,                                           00433000
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00433100
.*                                                                      00433200
&ZLL     &ZLOP &ZLV                                                     00433300
.*                                                                      00433400
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00433500
                      AGO   .ZL21          CONTINUE LOOPING             00433600
.*                                                                      00433700
.ZLX1                 ANOP  ,                                           00433800
.*******************************************************************    00433900
.***AP.X02  END OF IXCMSGC MACRO                                        00434000
&ZIXCMSGC             SETC  'YES'          SET IXCMSGC USED             00434100
         POP   PRINT                                                    00434200
*                                            IXCMSGC-0                  00434300
         SPACE 1                                                        00434400
.ZLX2                 ANOP  ,                                           00434500
         MEND                                                           00434600
**********************************************************************/ 00434700
*/*PB.OC01 INVOKE MACRO---------------------------------------------*/  00434800
*%IXCMSGC: MACRO KEYS(MEMTOKEN,REQUEST,TOKEN,USERDATA,RETMSGTOKEN,      00434900
*                 DATATYPE,STATUS,SOURCE,ANSAREA,ANSLEN,TYPE,           00435000
*                 NOTIFYEXIT,MSGEXIT,EXITPARMS,RETCODE,RSNCODE,         00435100
*                 PLISTVER,MF);                                         00435200
*  ANS('?'||MACLABEL||' '||'IXCMSGCP '||MACLIST||                       00435300
*         ' '||MACKEYS||';') COL(MACLMAR);                              00435400
*%END IXCMSGC;                                                          00435500
