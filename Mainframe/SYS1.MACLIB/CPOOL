* %       GOTO PLSSKIP;                                                 00050000
*/********************************************************************/ 00100000
*/*                                                                  */ 00150000
*/* MACRO: CPOOL                                                     */ 00200000
*/*                                                                  */ 00250000
*/* COPYRIGHT =                                                      */ 00269000
*/*          5647-A01                                                */ 00288000
*/*          THIS MODULE IS "RESTRICTED MATERIALS OF IBM"            */ 00307000
*/*          (C) COPYRIGHT IBM CORP. 1981, 2000                      */ 00335500
*/*          LICENSED MATERIALS - PROPERTY OF IBM                    */ 00364000
*/*                                                                  */ 00450000
*/* STATUS:  HBB7703                                                 */ 00470000
*/*                                                                  */ 00490000
*/*01* EXTERNAL CLASSIFICATION: PI                                   */ 00510000
*/*01* END OF EXTERNAL CLASSIFICATION:                               */ 00530000
*/*                                                                  */ 00550000
*/* FUNCTION: INTERFACE TO CPOOL ROUTINES                            */ 00600000
*/*                                                                  */ 00650000
*/* SYNTAX: CPOOL  BUILD|GET|FREE|DELETE|LIST<,U><,UNCOND><,C><,COND>*/ 00700000
*/*                <,LINKAGE=SYSTEM|BRANCH>                          */ 00750000
*/*                <,REGS=SAVE|USE>                                  */ 00800000
*/*                <,LOC=(RES|24|31<,31|64>)|RES|31|24>              */ 00850000
*/*                <,PCELLCT=SYMBOL1>                                */ 00900000
*/*                <,SCELLCT=SYMBOL1>                                */ 00950000
*/*                <,CSIZE=SYMBOL1>                                  */ 01000000
*/*                <,SP=SYMBOL1>                                     */ 01050000
*/*                <,CPID=SYMBOL2>                                   */ 01100000
*/*                <,CELL=SYMBOL2>                                   */ 01150000
*/*                <,KEY=SYMBOL1>                                    */ 01200000
*/*                <,TCB=SYMBOL2>                                    */ 01250000
*/*                <,HDR=SYMBOL3>                                    */ 01300000
*/*                <,MF=L|(E,SYMBOL2)>                               */ 01350000
*/*                <,WORKAREA=(SYMBOL2,SYMBOL1)>                     */ 01366600
*/*                <,VERIFY=(YES|NO)>                                */ 01383200
*/*                <,OWNER=HOME|PRIMARY|SYSTEM>                  @D2C*/ 01391600
*/*                <,BNDRY=DWORD|QWORD>                          @L3C*/ 01395800
*/*                                                                  */ 01400000
*/*                                                                  */ 01425000
*/*           SYMBOL1 = SYMBOL, DECIMAL DIGIT, OR                    */ 01450000
*/*                     REGISTER (0),(2)-(12)                        */ 01500000
*/*                                                                  */ 01550000
*/*           SYMBOL2 = RX-TYPE ADDRESS OR                           */ 01600000
*/*                     REGISTER (0),(2)-(12)                        */ 01650000
*/*                                                                  */ 01700000
*/*           SYMBOL3 = RX-TYPE ADDRESS OR                           */ 01750000
*/*                     REGISTER (0),(2)-(12) OR                     */ 01800000
*/*                     CHARACTER STRING IN QUOTES                   */ 01850000
*/*                                                                  */ 01900000
*/* SYNTAX: CPOOL  (BUILD|GET|FREE|DELETE|LIST)                      */ 01950000
*/*                <U> <UNCOND> <C> <COND>                           */ 02000000
*/*                <LINKAGE(SYSTEM|BRANCH)>                          */ 02050000
*/*                <REGS(SAVE|USE)>                                  */ 02100000
*/*                <LOC(RES|24|31<,31|64>)>                          */ 02144100
*/*                <PCELLCT(SYMBOL1)>                                */ 02188200
*/*                <SCELLCT(SYMBOL1)>                                */ 02232300
*/*                <CSIZE(SYMBOL1)>                                  */ 02276400
*/*                <SP(SYMBOL1)>                                     */ 02320500
*/*                <CPID(SYMBOL2)>                                   */ 02364600
*/*                <CELL(SYMBOL2)>                                   */ 02408700
*/*                <CELL((SYMBOL3))>                                 */ 02452800
*/*                <KEY(SYMBOL1)>                                    */ 02496900
*/*                <TCB(SYMBOL2)>                                    */ 02541000
*/*                <TCB((SYMBOL3))>                                  */ 02585100
*/*                <HDR(SYMBOL2)>                                    */ 02629200
*/*                <HDR((SYMBOL3))>                                  */ 02673300
*/*                <MF(E|L|M,SYMBOL2<,COMPLETE>)>                    */ 02717400
*/*                <WORKAREA(SYMBOL2,SYMBOL1)>                       */ 02761500
*/*                <VERIFY(YES|NO)>                                  */ 02805600
*/*                <OWNER(HOME|PRIMARY|SYSTEM)>                  @D2C*/ 02827800
*/*                <BNDRY(DWORD|QWORD)>                          @L3C*/ 02838900
*/*                                                                  */ 02850000
*/*           SYMBOL1 = CONSTANT, DECIMAL DIGITS, OR VARIABLE        */ 02900000
*/*                                                                  */ 02950000
*/*           SYMBOL2 = VARIABLE REPRESNTING DESIRED INFORMATION     */ 03000000
*/*                                                                  */ 03050000
*/*           SYMBOL3 = VARIABLE CONTAING ADDRESS OF DESIRED         */ 03100000
*/*                     INFORMATION                                  */ 03150000
*/*                                                                  */ 03200000
*/*                                                                  */ 03250000
*/* NOTE: THE DEFAULT FOR THE LINKAGE OPERAND IS 'SYSTEM'            */ 03300000
*/*       THE DEFAULT FOR THE REGS OPERAND IS 'SAVE'                 */ 03350000
*/*       THE DEFAULT FOR THE U/UNCOND/C/COND IS 'UNCOND'            */ 03400000
*/*       The default for VERIFY is 'NO'                             */ 03425000
*/*                                                                  */ 03450000
*/*                                                                  */ 04350000
*/*            |   |   |   | D |   |                                 */ 04354500
*/*            | B |   |   | E |   |                                 */ 04359000
*/*            | U |   | F | L | L |                                 */ 04363500
*/*            | I | G | R | E | I |                                 */ 04368000
*/*            | L | E | E | T | S |                                 */ 04372500
*/*            | D | T | E | E | T |                                 */ 04377000
*/*------------+---+---+---+---+---+                                 */ 04381500
*/* PCELLCT    | R | E | E | E | E |                                 */ 04386000
*/*------------+---+---+---+---+---+                                 */ 04390500
*/* SCELLCT    | O | E | E | E | E |                                 */ 04395000
*/*------------+---+---+---+---+---+                                 */ 04399500
*/* CSIZE      | R | E | E | E | E |                                 */ 04404000
*/*------------+---+---+---+---+---+                                 */ 04408500
*/* SP         | O | E | E | E | E |                                 */ 04413000
*/*------------+---+---+---+---+---+                                 */ 04417500
*/* LOC        | O | E | E | E | E |                                 */ 04422000
*/*------------+---+---+---+---+---+                                 */ 04426500
*/* CPID       | O | N | N | N | N |                                 */ 04431000
*/*------------+---+---+---+---+---+                                 */ 04435500
*/* CELL       | E | O | N | E | E |                                 */ 04440000
*/*------------+---+---+---+---+---+                                 */ 04444500
*/* KEY        | O | E | E | E | E |                                 */ 04449000
*/*------------+---+---+---+---+---+                                 */ 04453500
*/* TCB        | O | E | E | E | E |                                 */ 04458000
*/*------------+---+---+---+---+---+                                 */ 04462500
*/* HDR        | O | E | E | E | E |                                 */ 04467000
*/*------------+---+---+---+---+---+                                 */ 04471500
*/* LINKAGE    | O | O | E | O | E |                                 */ 04476000
*/*------------+---+---+---+---+---+                                 */ 04480500
*/* U/C        | E | O | E | E | E |                                 */ 04485000
*/*------------+---+---+---+---+---+                                 */ 04489500
*/* MF         | O | E | E | E | E |                                 */ 04494000
*/*------------+---+---+---+---+---+                                 */ 04498500
*/* REGS       | E | O | O | E | E |                                 */ 04503000
*/*------------+---+---+---+---+---+                                 */ 04507500
*/* WORKAREA   | E | E | E | E | N |                                 */ 04512000
*/*------------+---+---+---+---+---+                                 */ 04516500
*/* VERIFY     | E | E | E | E | N |                                 */ 04521000
*/*------------+---+---+---+---+---+                                 */ 04525500
*/* OWNER      | O | E | E | E | E |                             @L2A*/ 04527000
*/*------------+---+---+---+---+---+                                 */ 04528500
*/* BNDRY      | O | E | E | E | E |                             @L3A*/ 04529000
*/*------------+---+---+---+---+---+                                 */ 04529500
*/*                                                                  */ 04530000
*/*                                                                  */ 04534500
*/*            R = REQUIRED FOR STANDARD FORM BUILD, OPTIONAL FOR    */ 04539000
*/*                OTHER BUILD FORMS                                 */ 04543500
*/*            N = MUST BE SPECIFIED                                 */ 04550000
*/*            E = ERROR IF SPECIFIED                                */ 04600000
*/*            O = OPTIONAL                                          */ 04650000
*/*                                                                  */ 04700000
*/*                                                                  */ 04750000
*/* MACROS: AHACPOOL (PLS ONLY)                                      */ 04800000
*/*                                                                  */ 04850000
*/* EXTERNAL MACRO VARIABLES : EHAREGS (PLS ONLY)                    */ 04900000
*/*                            EHAMAXLEN (PLS ONLY)                  */ 04950000
*/*                                                                  */ 05000000
*/* CHANGE ACTIVITY: OZ92248 - TCB INCORRECTLY STORED IN PARMLIST    */ 05025000
*/*                  WHEN USING EXECUTE FORM OF CPOOL BUILD MACRO    */ 05050000
*/*                                                          @ZA92248*/ 05075000
*/*                                                                  */ 05100000
*/* $D1=DCR44,HBB3310,861028,PDT6:  Support for CPOOL LIST       @D1A*/ 05116600
*/*                                                                  */ 05133200
*/* $L1=PROD310,HBB3310,870603,PDF5:  Copyright changes          @L1A*/ 05138800
*/*                                                                  */ 05144400
*/* $P1=PC41615,HBB3310,871130,PDT6:  Change lower case letters      */ 05145800
*/*                                   in messages to upper case  @P1A*/ 05147200
*/* $L2=TCSAU,HBB4430,911003,PDXB:  OWNER                            */ 05147600
*/* $D2=DKB0028,HBB4430,920318, PDXB: no Owner=Secondary             */ 05147800
*/* $L3=64BITVSM HBB7703 980101 PD00XB: 64-bit real,BNDRY            */ 05147900
*/* $P2=PXD0857  HBB7703 991203 PD00XB: Initialize &IB64             */ 05148100
*/* $01=OW45854  HBB7703 000831 PD00LI: Correct errors in MNOTEs @01A*/ 05148160
*/*                                                                  */ 05148300
*/*                                                                  */ 05148600
*/********************************************************************/ 05150000
*/* A - 000000-999999                                        @G860P1B*/ 05200000
*/********************************************************************/ 05250000
*/*     EXPECTED RESULTS:                                            */ 05300000
*/*        * GET U LINKAGE=SYSTEM                                    */ 05350000
*/*          R1 = CPID                                               */ 05400000
*/*          R15 = ENTRY ADDRESS IN CVTCPGUP (MODULE IGVCPGUP)       */ 05450000
*/*          BASR TO IGVCPGUP                                        */ 05500000
*/*                                                                  */ 05550000
*/*        * GET U LINKAGE=BRANCH                                    */ 05600000
*/*          R1 = CPID                                               */ 05650000
*/*          R15 = ENTRY ADDRESS IN CVTCPGUB (MODULE IGVCPGUB)       */ 05700000
*/*          BASR TO IGVCPGUB                                        */ 05750000
*/*                                                                  */ 05800000
*/*        * GET C                                                   */ 05850000
*/*          R1 = CPID                                               */ 05900000
*/*          R15 = ENTRY ADDRESS IN CVTCPGTC (MODULE IGVCPGTC)       */ 05950000
*/*          BASR TO IGVCPGTC                                        */ 06000000
*/*                                                                  */ 06050000
*/*        * FREE                                                    */ 06100000
*/*          R0 = CELL ADDRESS                                       */ 06150000
*/*          R1 = CPID                                               */ 06200000
*/*          R15 = ENTRY ADDRESS IN CVTCPFRE (MODULE IGVCPFRE)       */ 06250000
*/*          BASR TO IGVCPFRE                                        */ 06300000
*/*                                                                  */ 06350000
*/*        * DELETE LINKAGE=SYSTEM                                   */ 06400000
*/*          SAVE REGS 2-12                                          */ 06450000
*/*          R1 = CPID                                               */ 06500000
*/*          PC TO 'IGVCPDLP'                                        */ 06550000
*/*          RESTORE REGISTERS 2-12                                  */ 06600000
*/*                                                                  */ 06650000
*/*        * DELETE LINKAGE=BRANCH                                   */ 06700000
*/*          R1 = CPID                                               */ 06750000
*/*          R15 = ENTRY ADDRESS IN CVTCPDLB (MODULE IGVCPDLB)       */ 06800000
*/*          BASR TO IGVCPDLB                                        */ 06850000
*/*                                                                  */ 06900000
*/*        * BUILD  LINKAGE=SYSTEM                                   */ 06950000
*/*          SAVE REGS 2-12                                          */ 07000000
*/*          R1 = ADDRESS OF PARAMETER LIST                          */ 07050000
*/*          PC TO 'IGVCPBDP'                                        */ 07100000
*/*          RESTORE REGISTERS 2-12                                  */ 07150000
*/*                                                                  */ 07200000
*/*        * BUILD  LINKAGE=BRANCH                                   */ 07250000
*/*          R1 = ADDRESS OF PARAMETER LIST                          */ 07300000
*/*          R15 = ENTRY ADDRESS IN CVTCPBDB (MODULE IGVCPBDB)       */ 07350000
*/*          BASR TO IGVCPBDB                                        */ 07400000
*/*                                                                  */ 07450000
*/*        * LIST                                                    */ 07456200
*/*          R1  = Address of a pointer to the work area             */ 07462400
*/*          R15 = Entry address of module IGVCPLST                  */ 07468600
*/*          Fields in the work area should be set                   */ 07474800
*/*          BASSM to IGVCPLST                                       */ 07481000
*/*                                                                  */ 07487200
*/*                                                                  */ 07493400
*/*        WHERE THE PARAMETER LIST FOR BUILD IS AS FOLLOWS:         */ 07500000
*/*        BYTES 0-3       PRIMARY CELL COUNT                        */ 07550000
*/*        BYTES 4-7       SECONDARY CELL COUNT                      */ 07600000
*/*        BYTES 8-11      CELL SIZE                                 */ 07650000
*/*        BYTE  12        SUBPOOL ID                                */ 07700000
*/*        BYTE  13        KEY                                       */ 07750000
*/*        BYTE  14        FLAGS                                     */ 07800000
*/*              BIT 0    1=> 31 REAL OPTION OF LOC WAS SPECIFIED    */ 07850000
*/*                       0=> 31 REAL OPTION OF LOC WAS NOT          */ 07900000
*/*                            SPECIFIED                             */ 07950000
*/*              BITS 1-2  LOC OPTION FOR VIRTUAL AS FOLLOWS:        */ 08000000
*/*                        00=> RES                                  */ 08050000
*/*                        01=> 24                                   */ 08100000
*/*                        11=> 31                                   */ 08150000
*/*              BIT 3     1=> TCB WAS SPECIFIED                     */ 08200000
*/*                        0=> TCB WAS NOT SPECIFIED                 */ 08250000
*/*              BIT 4     1=> KEY WAS SPECIFIED                     */ 08300000
*/*                        0=> KEY WAS NOT SPECIFIED                 */ 08350000
*/*              BIT 5     1=> HDR WAS SPECIFIED                     */ 08400000
*/*                        0=> HDR WAS NOT SPECIFIED                 */ 08450000
*/*              BITS 6-7  00 => OWNER=HOME                      @L2A*/ 08470000
*/*                        01 => OWNER=PRIMARY                   @L2A*/ 08490000
*/*                        11 => OWNER=SYSTEM                    @L2A*/ 08530000
*/*        BYTE  15                                              @L3C*/ 08540000
*/*              BIT 0     1=> 64 REAL option                    @L3A*/ 08550000
*/*                        0=> 64 REAL option not specified      @L3A*/ 08560000
*/*              BIT 1     1=> BNDRY=QWORD                       @L3A*/ 08570000
*/*                        0=> BNDRY=DWORD                       @L3A*/ 08580000
*/*              BIT 2-7   RESERVED (SET TO 0)                   @L3A*/ 08590000
*/*        BYTES 16-19     TCB ADDRESS                               */ 08600000
*/*        BYTES 20-43     HEADER                                    */ 08650000
*/*                                                                  */ 08700000
*/*                                                                  */ 08750000
*/*    ASM  DEFINITION:                                              */ 08800000
*/*                                                                  */ 08850000
*/*     ASM   RESTRICTIONS:                                          */ 08900000
*/*           BUILD FUNCTION-                                        */ 08950000
*/*               1.  IN THE LIST FORM, THE TCB, AND THE HEADER      */ 09000000
*/*                   CANNOT BE SPECIFIED AS VARIABLES CONTAINING    */ 09050000
*/*                   THE ADDRESS OF THE TCB, OR THE HEADER.         */ 09100000
*/*               2.  CPID CANNOT BE SPECIFIED WITH THE LIST         */ 09150000
*/*                   FORM OF BUILD.  WITH THE OTHER FORMS THE       */ 09200000
*/*                   CPID RETURNED FROM BUILD IS PLACED IN THE      */ 09250000
*/*                   VARIABLE SPECIFIED AS ARG1.                    */ 09300000
*/*           GET FUNCTION -                                         */ 09350000
*/*               1.  WHEN SPECIFYING THE KEYWORD CELL, UPON         */ 09400000
*/*                   RETURN FROM THE GET FUNCTION THE ADDRESS       */ 09450000
*/*                   OF THE CELL OBTAINED WILL BE IN THE            */ 09500000
*/*                   REGISTER SPECIFIED.                            */ 09550000
*/*                                                                  */ 09600000
*/*                                                                  */ 09650000
*/*    ASM  DEFINITION:                                              */ 09700000
*/*                                                                  */ 09750000
*/*      U/UNCOND SPECIFIES A UNCONDITIONAL GETMAIN IS TO BE         */ 09800000
*/*               PERFORMED                                          */ 09850000
*/*      C/COND   SPECIFIES A CONDITIONAL GETMAIN IS TO BE           */ 09900000
*/*               PERFORMED                                          */ 09950000
*/*       PCELLCT=ARG1                                               */ 10000000
*/*               WHERE ARG1 IS THE PRIMARY CELL COUNT,              */ 10050000
*/*               SYMBOL, DECIMAL DIGIT, OR REGISTER (0),            */ 10100000
*/*               (2)-(12)                                           */ 10150000
*/*       SCELLCT=ARG1                                               */ 10200000
*/*               WHERE ARG1 IS THE SECONDARY CELL COUNT,            */ 10250000
*/*               SYMBOL, DECIMAL DIGIT, OR REGISTER (0),            */ 10300000
*/*               (2)-(12)                                           */ 10350000
*/*       CSIZE=ARG1                                                 */ 10400000
*/*               WHERE ARG1 IS THE CELL SIZE,                       */ 10450000
*/*               SYMBOL, DECIMAL DIGIT, OR REGISTER (0),            */ 10500000
*/*               (2)-(12)                                           */ 10550000
*/*       SP=ARG1                                                    */ 10600000
*/*               WHERE ARG1 IS THE SUBPOOL ID,                      */ 10650000
*/*               SYMBOL OR DECIMAL DIGIT(0-255), OR REGISTER        */ 10700000
*/*               (0), (2)-(12), DEFAULT SP(0).                      */ 10750000
*/*       LOC=(ARG1,ARG2)                                            */ 10800000
*/*               WHERE ARG1 IS EITHER 'RES', '24', OR '31'          */ 10850000
*/*               WHERE ARG2 IS OPTIONAL AND MAY BE '31' OR '64'     */ 10900000
*/*               THE DEFAULT IN THE LIST FORM IS 'RES'              */ 10950000
*/*       CPID=ARG1                                                  */ 11000000
*/*               WHERE ARG1 IS THE CELL POOL ID,                    */ 11050000
*/*               RX-TYPE ADDRESS (VARIABLE CONTAINING POOL ID) OR   */ 11100000
*/*               REGISTER (0)-(12).                                 */ 11150000
*/*       CELL=ARG1                                                  */ 11200000
*/*               WHERE ARG1 IS A VARIABLE CONTAINING THE ADDRESS    */ 11250000
*/*               OF THE CELL, OR REGISTER (0), (2)-(12).            */ 11300000
*/*       KEY=ARG1                                                   */ 11400000
*/*               WHERE ARG1 IS THE KEY,                             */ 11450000
*/*               DECIMAL DIGITS (0-15) OR REGISTER (0), (2)-(12).   */ 11500000
*/*       TCB=ARG1                                                   */ 11550000
*/*               WHERE ARG1 IS A VARIABLE CONTAINING THE ADDRESS    */ 11600000
*/*               OF THE TCB, OR REGISTER (0), (2)-(12).             */ 11650000
*/*       HDR=ARG1                                                   */ 11700000
*/*               WHERE ARG1 IS THE RX-TYPE ADDRESS REPRESENTING     */ 11750000
*/*               THE HEADER, OR A CHARACTER STRING IN QUOTES, OR    */ 11800000
*/*               REGISTER (0), (2)-(12).                            */ 11850000
*/*       LINKAGE=ARG1                                               */ 11900000
*/*               WHERE ARG1 IS EITHER 'SYSTEM' OR 'BRANCH'          */ 11950000
*/*               THE DEFAULT IS 'SYSTEM'                            */ 12000000
*/*       REGS=ARG1                                                  */ 12050000
*/*               WHERE ARG1 IS EITHER 'USE' OR 'SAVE'               */ 12100000
*/*               THE DEFAULT IS 'SAVE'                              */ 12150000
*/*       MF=(ARG1,ARG2)                                             */ 12200000
*/*               WHERE ARG1 IS EITHER 'L', OR 'E'                   */ 12250000
*/*               WHERE ARG2 IS A PARAMETER LIST NAME ( FOR EXECUTE  */ 12300000
*/*               FORM ONLY), I.E., THE RX-TYPE ADDRESS REPRESENTING */ 12350000
*/*               THE PARAMETER LIST, OR REGISTER (0), (2)-(12)      */ 12400000
*/*       WORKAREA=(ARG1,ARG2)                                       */ 12403800
*/*               Where ARG1 is either an RX-type address of a       */ 12407600
*/*               pointer to the work area or a register containing  */ 12411400
*/*               the address of a pointer to the work area; and     */ 12415200
*/*               ARG2 is a symbol or constant with a value equal to */ 12419000
*/*               the length of the work area, or a register         */ 12422800
*/*               containing the length of the work area.            */ 12426600
*/*       VERIFY=(YES|NO)                                            */ 12430400
*/*               Specifies whether the Cell Pool List service       */ 12434200
*/*               should issue LRA instructions to verify that the   */ 12438000
*/*               Cell Pool control blocks are accessible before     */ 12441800
*/*               trying to access them.                             */ 12445600
*/*       OWNER=HOME|PRIMARY|SYSTEM                                  */ 12445700
*/*               For a common area CPOOL, indicates to whom         */ 12445800
*/*               ownership of the storage is to be                  */ 12445900
*/*               attributed.                                    @D2C*/ 12446000
*/*       BNDRY=DWORD|QWORD                                          */ 12446100
*/*               Boundary alignment for each cell               @L3A*/ 12446200
*/*                                                                  */ 12446300
*/* Note:                                                            */ 12446400
*/*                                                                  */ 12446500
*/*  -- Because IGVCPLST uses standard entry linkage (with register  */ 12446800
*/*     1 pointing to the parameter list -- a list of address of the */ 12447100
*/*     parameters), we require that the first operand of WORKAREA   */ 12447400
*/*     for CPOOL LIST be a pointer to the work area; or, if it's    */ 12447700
*/*     a register, a pointer to a pointer to the work area.         */ 12448000
*/*     That way, we avoid making the user code both a list and an   */ 12448300
*/*     execute form of the macro, since the parameter list pointed  */ 12448600
*/*     to by register 1 must be set up at run time.                 */ 12448900
*/*                                                                     12450000
         MACRO                                                          12500000
&LABEL   CPOOL  &TYPE,&UC,&PCELLCT=,&SCELLCT=,                         +12550000
               &CSIZE=,&SP=,&LOC=,&CPID=,&CELL=,&KEY=,&TCB=,&HDR=,     +12600000
               &LINKAGE=,&MF=,&REGS=,&WORKAREA=,&VERIFY=,         @D1C +12633300
               &OWNER=,&BNDRY=                                    @L3C  12666600
.*  LCLC VARIABLE ARE INITIALIZED TO '' AND LCLA VARIABLES ARE          12700000
.*  INITIALIZED TO ZERO                                                 12750000
         LCLC   &IFUNC             FUNCTION SPECIFIED                   12800000
         LCLC   &IUC               U OR C FOR U/UNCOND OR C/COND        12850000
         LCLC   &IPCELL            PRIMARY CELL COUNT                   12900000
         LCLC   &ISCELL            SECONDARY CELL COUNT                 12950000
         LCLC   &ICSIZE            CELL SIZE                            13000000
         LCLC   &ISP               SUBPOOL                              13050000
         LCLC   &ILOC1             FIRST LOC ARGUMENT                   13100000
         LCLC   &ILOC2             SECOND LOC ARGUMENT                  13150000
         LCLC   &ICPID             CELL POOL ID                         13200000
         LCLC   &ICELL             CELL                                 13250000
         LCLC   &IKEY              KEY                                  13300000
         LCLC   &ITCB              TCB                                  13350000
         LCLC   &IHDR              HEADER                               13400000
         LCLC   &ILINK             LINKAGE EITHER SYSTEM OR BRANCH      13450000
         LCLC   &IREGS             USE OR SAVE REGISTERS                13500000
         LCLC   &IMF               EITHER '' OR 'E' OR 'L'              13550000
         LCLC   &IMF2              PARAMETER LIST NAME                  13600000
         LCLC   &IBHDR             INDICATOR IF HEADER SPECIFIED        13650000
         LCLC   &IBTCB             INDICATOR IF TCB SPECIFIED           13700000
         LCLC   &IBKEY             INDICATOR IF KEY SPECIFIED           13750000
         LCLC   &IBANY             INDICATOR IF 31 REAL SPECIFIED       13773300
         LCLC   &IB64              INDICATOR IF 64 REAL            @L3A 13796600
         LCLC   &IBLOC           00 FOR RES, 01 FOR 24, 11 FOR 31       13819900
         LCLC   &IBBNDRY           BNDRY bit                       @L3C 13843200
         LCLC   &IBOWN             Owner bits                      @L2A 13866600
         LCLC   &IOWNER            Owner                           @L2A 13883200
         LCLC   &IBFLAG            ONE BYTE OF FLAGS                    13900000
         LCLC   &IBFLAGA           2nd byte of flags               @L3A 13925000
         LCLC   &IBFLAG2           TWO BYTES OF FLAGS                   13950000
         LCLC   &INAME             INVOCATION MACRO NAME                14000000
         LCLC   &IWORK1            First argument with WORKAREA   @D1A  14016600
         LCLC   &IWORK2            Second argument with WORKAREA  @D1A  14033200
         LCLA   &ERROR             ERROR INDICATOR                      14050000
         LCLA   &FALSE             FALSE value for flags          @D1A  14058300
         LCLA   &TRUE              TRUE value for flags           @D1A  14066600
         LCLC   &ARGWITH           Used in error messages         @D1A  14074900
         LCLC   &ARG1WITH          Used in error messages         @D1A  14083200
         LCLC   &ARG2WITH          Used in error messages         @D1A  14091500
         LCLC   &IINVAL            INVALID MESSAGE TEXT                 14100000
         LCLC   &SUPPLY            INVALID MESSAGE TEXT                 14150000
         LCLC   &NOTEXT            INVALID MESSAGE TEST                 14200000
         LCLC   &TOLONG            INVALID MESSAGE TEST                 14250000
         LCLC   &NOTALL            INVALID MESSAGE TEST                 14300000
         LCLC   &NOTSUP            INVALID MESSAGE TEST                 14350000
         LCLC   &NOTSPE            INVALID MESSAGE TEST                 14400000
         LCLC   &NOTWLIST          Text used in error messages   @D1A   14403100
         LCLC   &NTAG              Blank tag for error messages  @D1A   14406200
         LCLC   &TAG               Tag for error messages        @D1A   14409300
         LCLC   &TOOMANY           Used in error messages        @D1A   14412400
         LCLC   &TRUNC             Used in error messages        @D1A   14415500
         LCLC   &WRKAREG           Name of a register that       @D1A   14418600
.*                                 points to a pointer to a work area   14421700
         LCLC   &WRKLREG           Name of a register that       @D1A   14424800
.*                                 contains the length of a work area   14427900
.*                                                                      14431000
&TRUE     SETA  1                                                @D1A   14434100
&FALSE    SETA  0                                                @D1A   14437200
&ARGWITH  SETC  'THE ARGUMENT SPECIFIED WITH'                    @P1C   14440300
&ARG1WITH SETC  'THE FIRST ARGUMENT SPECIFIED WITH'              @P1C   14443400
&ARG2WITH SETC  'THE SECOND ARGUMENT SPECIFIED WITH'             @P1C   14446500
&NOTSPE  SETC   ' IS NOT SPECIFIED BUT MAY BE REQUIRED.'                14450000
&NOTSUP  SETC   ' IS REQUIRED BUT IS NOT SUPPLIED.'                     14500000
&NOTALL  SETC   ' IS NOT ALLOWED. IT IS IGNORED.'                       14550000
&TOLONG  SETC   'IS TOO LONG. ARGUMENTS ARE IGNORED AFTER '             14600000
&IINVAL  SETC   ' IS INVALID WITH '                                     14650000
&SUPPLY  SETC   ' SUPPLIED WITH '                                       14700000
&NOTEXT  SETC   ' NO TEXT IS GENERATED.'                                14750000
&NOTWLIST SETC  'CANNOT BE SPECIFIED WITH LIST'                  @P1C   14758300
&NTAG     SETC  '       '                                        @D1A   14766600
&TAG      SETC  ' ERROR '                                        @D1A   14774900
&TOOMANY  SETC  'TOO MANY ARGUMENTS SPECIFIED WITH THE'          @P1C   14783200
&TRUNC    SETC  'HAS BEEN TRUNCATED TO'                          @P1C   14791500
.********************************************************************** 14800000
.*                                                                      14850000
.*       CHECK VALIDITY OF MACRO OPERANDS                               14900000
.*                                                                      14950000
.********************************************************************** 15000000
&INAME   SETC   '&LABEL'           INTERNAL MACRO LABEL                 15050000
.********************************************************************** 15100000
.* CHECK FIRST POSITIONAL PARAMETER FOR BUILD, GET, FREE, OR DELETE     15150000
.********************************************************************** 15200000
.*                                                                      15202700
.* The following is checked before the check for LIST in order          15205400
.* to avoid duplicating the checking in 2 paths.                   @L2A 15208100
.*                                                                      15210800
         AIF ('&OWNER' EQ '' OR '&TYPE(1)' EQ 'BUILD').OWNER0      @L2A 15213500
     MNOTE  12,'IHB343 ''OWNER'' MAY ONLY BE SPECIFIED WITH BUILD' @L2A 15216200
&ERROR   SETA   12                 ERROR                           @L2A 15218900
.OWNER0  ANOP                                                      @L2A 15221600
         AIF ('&BNDRY' EQ '' OR '&TYPE(1)' EQ 'BUILD').BNDRY0      @L3A 15222200
     MNOTE  12,'IHB343 ''BNDRY'' MAY ONLY BE SPECIFIED WITH BUILD' @L3A 15222800
&ERROR   SETA   12                 ERROR                           @L3A 15223400
.BNDRY0  ANOP                                                      @L3A 15224000
         AIF ('&TYPE(1)' EQ 'LIST').CPLIST Handle a LIST request  @D1A  15225000
         AIF (N'&SYSLIST LE 2).CHECK   TOO MANY POSITIONAL PARMS        15250000
         MNOTE  4,'IHB331 MACLIST &TOLONG''&SYSLIST(2)''.'              15270000
.CHECK   ANOP                                                           15290000
         AIF ('&TYPE(1)' NE '').FUNC    IF NO TYPE SPECIFIED            15310000
         MNOTE  12,'IHB323 CPOOL FUNCTION&NOTSUP.&NOTEXT'               15330000
&IFUNC   SETC   ''                 NO FUNCTION SPECIFIED                15350000
&ERROR   SETA   12                 NOT ERROR                            15400000
         AGO    .NOFUNC            CHECK REST OF KEYWORDS   @D1C        15450000
.FUNC    ANOP                                                           15500000
         AIF (N'&TYPE  LT 2).FUNC1   IF TOO MANY SUBFIELDS              15550000
         MNOTE  4,'IHB331 ''&TYPE'' &TOLONG''&TYPE(1)''.'               15600000
.FUNC1   ANOP                                                           15700000
&IFUNC   SETC   ''                 NO FUNCTION SPECIFIED                15750000
         AIF ('&TYPE(1)' NE 'BUILD').NBUILD  IF BUILD NOT SPECIFIED     15800000
&IFUNC   SETC   'BUILD'            BUILD FUNCTION SPECIFIED             15850000
         AGO    .FUNCOK                                                 15900000
.NBUILD  ANOP                                                           15950000
         AIF ('&TYPE(1)' NE 'DELETE').NDELETE  IF DELETE NOT SPECIFIED  16000000
&IFUNC   SETC   'DELETE'           DELETE FUNCTION SPECIFIED            16050000
         AGO    .FUNCOK                                                 16100000
.NDELETE ANOP                                                           16150000
         AIF ('&TYPE(1)' NE 'FREE').NFREE  IF FREE NOT SPECIFIED        16200000
&IFUNC   SETC   'FREE'             FREE FUNCTION SPECIFIED              16250000
         AGO    .FUNCOK                                                 16300000
.NFREE   ANOP                                                           16350000
         AIF ('&TYPE(1)' NE 'GET').FUNCER IF GET NOT SPECIFIED          16400000
&IFUNC   SETC   'GET'              GET FUNCTION SPECIFIED               16450000
         AGO    .FUNCOK                                                 16500000
.FUNCER  ANOP                NEITHER BUILD,GET,FREE,DELETE,or LIST @D1A 16550000
&ERROR   SETA   12           INDICATE ERROR                             16600000
         MNOTE  12,'IHB343 POSITIONAL PARAMETER ''&TYPE(1)'' MUST BE ''+16650000
               BUILD'', ''GET'', ''FREE'', ''DELETE'', OR ''LIST''     +16683300
               .&NOTEXT'                                          @D1C  16716600
.FUNCOK  ANOP                                                           16750000
.*       &IFUNC = 'BUILD'  IF BUILD SPECIFIED                           16850000
.*       &IFUNC = 'DELETE' IF DELETE SPECIFIED                          16900000
.*       &IFUNC = 'FREE' IF FREE SPECIFIED                              16950000
.*       &IFUNC = 'GET' IF GET SPECIFIED                                17000000
.********************************************************************** 17050000
.*                                                                      17056200
         AGO    .NOLISTK     Make sure none of the LIST keywords        17062400
.*                           were specified                     @D1A    17068600
.RNOLIST ANOP                Return point for NOLISTK           @D1A    17074800
.*                                                                      17081000
.NOFUNC  ANOP   Here if no function was specified (&IFUNC='') @D1A      17087200
.*                                                                      17093400
.* CHECK U/UNCOND AND C/COND KEYWORDS.  ONLY ONE CAN BE SPECIFIED,      17100000
.*                                                                      17150000
&IUC     SETC   '&UC(1)'            COND OR UNCOND POSITIONAL           17200000
         AIF (N'&UC  LT 2).UNCOND  UNCOND/COND SPECIFIED                17250000
         MNOTE  4,'IHB331 ''&UC'' &TOLONG''&UC(1)''.'                   17300000
.UNCOND  ANOP                                                           17600000
         AIF ('&IUC' EQ '').PCELL   UNCOND/COND NOT SPECIFIED           17650000
         AIF ('&IUC' EQ 'U' OR '&IUC' EQ 'UNCOND').U1                   17700000
         AIF ('&IUC' EQ 'C' OR '&IUC' EQ 'COND').C1                     17750000
&ERROR   SETA   12                                                      17800000
&IUC     SETC   ''                                                      17850000
         MNOTE  12,'IHB343 POSITIONAL PARAMETER ''&UC(1)'' MUST BE ''U'+17900000
               ', ''UNCOND'', ''C'', OR ''COND''.&NOTEXT'               17950000
         AGO   .PCELL                                                   18000000
.U1      ANOP                                                           18050000
&IUC     SETC   'U'                UNCONDITIONAL GETMAIN SPECIFIED      18100000
         AGO    .PCELL                                                  18150000
.C1      ANOP                                                           18200000
&IUC     SETC   'C'                                                     18250000
.********************************************************************** 18300000
.* CHECK KEYWORDS AND THEIR ARGUMENTS                                   18350000
.********************************************************************** 18400000
.********************************************************************** 18450000
.*                                                                      18500000
.* CHECK KEYWORD FOR THE PRIMARY CELL COUNT                             18550000
.*                                                                      18600000
.********************************************************************** 18650000
.PCELL   ANOP                                                           18700000
         AIF ('&PCELLCT' EQ '').SCELL   IF NO PCELLCT SPECIFIED         18750000
         AIF (N'&PCELLCT   LT 2).PCELL1   MORE THAN 1 OPERAND SPECIFIED 18800000
         MNOTE  4,'IHB331 ''PCELLCT=&PCELLCT'' &TOLONG''&PCELLCT(1)''.' 18850000
&IPCELL  SETC   '&PCELLCT(1)'      SAVE PCELLCT SPECIFICATION           18900000
         AGO    .SCELL                                                  18950000
.PCELL1  ANOP                                                           19000000
&IPCELL  SETC   '&PCELLCT'      SAVE PCELLCT SPECIFICATION              19050000
.********************************************************************** 19100000
.*                                                                      19150000
.* CHECK KEYWORD FOR THE SECONDARY CELL COUNT                           19200000
.*                                                                      19250000
.********************************************************************** 19300000
.SCELL   ANOP                                                           19350000
         AIF ('&SCELLCT' EQ '').CSIZE      IF NO SCELLCT SPECIFIED      19400000
         AIF (N'&SCELLCT   LT 2).SCELL1   MORE THAN 1 OPERAND SPECIFIED 19450000
         MNOTE  4,'IHB331 ''SCELLCT=&SCELLCT'' &TOLONG''&SCELLCT(1)''.' 19500000
&ISCELL  SETC   '&SCELLCT(1)'      SAVE SCELLCT SPECIFICATION           19550000
         AGO    .CSIZE                                                  19600000
.SCELL1  ANOP                                                           19650000
&ISCELL  SETC   '&SCELLCT'      SAVE SCELLCT SPECIFICATION              19700000
.********************************************************************** 19750000
.*                                                                      19800000
.* CHECK KEYWORD FOR THE CELL SIZE                                      19850000
.*                                                                      19900000
.********************************************************************** 19950000
.CSIZE   ANOP                                                           20000000
         AIF ('&CSIZE' EQ '').SP        IF NO CSIZE SPECIFIED           20050000
         AIF (N'&CSIZE  LT 2).CSIZE1   MORE THAN 1 OPERAND SPECIFIED    20100000
         MNOTE  4,'IHB331 ''CSIZE=&CSIZE'' &TOLONG''&CSIZE(1)''.'       20150000
&ICSIZE  SETC   '&CSIZE(1)'        SAVE CSIZE SPECIFICATION             20200000
         AGO    .SP                                                     20250000
.CSIZE1  ANOP                                                           20300000
&ICSIZE  SETC   '&CSIZE'        SAVE CSIZE SPECIFICATION                20350000
.********************************************************************** 20400000
.*                                                                      20450000
.* CHECK KEYWORD FOR THE SUBPOOL                                        20500000
.*                                                                      20550000
.********************************************************************** 20600000
.SP      ANOP                                                           20650000
         AIF ('&SP' EQ '').LOC       IF NO SP SPECIFIED                 20700000
         AIF (N'&SP  LT 2).SP1   MORE THAN 1 OPERAND SPECIFIED          20750000
         MNOTE  4,'IHB331 ''SP=&SP'' &TOLONG''&SP(1)''.'                20775000
&ISP     SETC   '&SP(1)'           SAVE SP SPECIFICATION                20800000
         AGO    .SP2                                                    20825000
.SP1     ANOP                                                           20850000
&ISP     SETC   '&SP'           SAVE SP SPECIFICATION                   20875000
.SP2     ANOP                   SUBPOOL SPECIFIED                       20900000
         AIF (T'&ISP NE 'N').LOC  NOT SPECIFIED AS A CONSTANT           20925000
         AIF (&ISP LE 255).LOC    VALUE LESS THAT OR EQUAL 255          20950000
&ERROR   SETA   12                NOTE ERROR                            20975000
         MNOTE  12,'IHB343 ''&ISP'' IN ''SP=&ISP'' MUST BE LESS THAN 25+21000000
               6.&NOTEXT'                                               21025000
.********************************************************************** 21050000
.*                                                                      21100000
.* CHECK KEYWORD FOR THE LOCATION SPECIFICATION.  THERE MAY BE EITHER   21150000
.* ONE OR TWO ARGUMENTS.  THE FIRST STANDS FOR THE VIRTUAL STORAGE AND  21200000
.* MAY BE EITHER 'RES', '24', OR '31'. THE SECOND ARGUMENT              21250000
.* STANDS FOR REAL STORAGE AND MAY BE '31' OR '64'                      21300000
.*                                                                      21350000
.********************************************************************** 21400000
.LOC     ANOP                                                           21450000
&IBLOC   SETC   '00'               ASSUME RES LOCATION                  21500000
&IBANY   SETC   '0'                INITIALIZE ANY INDICATOR             21550000
&IB64    SETC   '0'                INITIALIZE LOC=64               @P2A 21575000
         AIF ('&LOC' EQ '').CPID      IF NO LOC SPECIFIED               21600000
         AIF (N'&LOC  LT 3).LOC1  MORE THAN 2 OPERANDS SPECIFIED        21650000
         MNOTE  4,'IHB331 ''LOC=&LOC'' &TOLONG''&LOC(1)''.'             21700000
.LOC1    ANOP                                                           21750000
&ILOC1   SETC   '&LOC(1)'                                               21800000
&ILOC2   SETC   '&LOC(2)'                                               21850000
         AIF ('&ILOC1' EQ 'RES').LOC2    RES LOCATION                   21900000
         AIF ('&ILOC1' EQ 'BELOW').LOC3  BELOW LOCATION                 21950000
         AIF ('&ILOC1' EQ '24').LOC3     24 LOCATION                    21975000
         AIF ('&ILOC1' EQ 'ANY').LOC4    31 LOCATION                    22000000
         AIF ('&ILOC1' EQ '31').LOC4     31 LOCATION                    22025000
         MNOTE  12,'IHB343 ''&ILOC1'' IN ''LOC=&LOC'' MUST BE ''RES'', +22050000
               ''24'' OR ''31''.&NOTEXT'                           @01C 22119990
&ERROR   SETA   12                 NOT ERROR                            22150000
.LOC2    ANOP                      RES LOCATION                         22200000
&IBLOC   SETC   '00'                                                    22250000
         AGO    .LOC5              CHECK SECOND OPERAND                 22300000
.LOC3    ANOP                      24 LOCATION                          22350000
&IBLOC   SETC   '01'                                                    22400000
         AGO    .LOC5              CHECK SECOND OPERAND                 22450000
.LOC4    ANOP                      31 LOCATION                          22500000
&IBLOC   SETC   '11'                                                    22550000
.LOC5    ANOP                      CHECK SECOND OPERAND                 22600000
         AIF ('&ILOC2' EQ '').CPID  NO SECOND OPERAND                   22650000
         AIF ('&ILOC2' EQ 'ANY').LOC6   31 LOCATION                     22683300
         AIF ('&ILOC2' EQ '31').LOC6 31 LOCATION                        22716600
         AIF ('&ILOC2' EQ '64').LOC664 64 LOCATION                 @01C 22769890
         MNOTE  12,'IHB343 ''&ILOC2'' IN ''LOC=&LOC'' MUST BE ''31'' OR+22789880
                ''64''.&NOTEXT'                                    @01C 22809870
&ERROR   SETA   12                 NOT ERROR                            22850000
         AGO    .CPID                                                   22900000
.LOC6    ANOP                      31 SPECIFIED AS SECOND OPERAND       22950000
&IBANY   SETC   '1'                                                     23000000
         AGO    .CPID                                                   23008300
.LOC664  ANOP                      64                              @L3A 23016600
&IBANY   SETC   '1'                                                @L3A 23024900
&IB64 SETC      '1'                                                @L3A 23033200
         AGO    .CPID                                              @L3A 23041500
.********************************************************************** 23050000
.*                                                                      23100000
.* CHECK KEYWORD FOR THE CELL POOL ID                                   23150000
.*                                                                      23200000
.********************************************************************** 23250000
.CPID    ANOP                                                           23300000
         AIF ('&CPID' EQ '').CELL      IF NO CPID SPECIFIED             23350000
         AIF (N'&CPID  LT 2).CPID1  MORE THAN 1 OPERAND SPECIFIED       23400000
         MNOTE  4,'IHB331 ''CPID=&CPID'' &TOLONG''&CPID(1)''.'          23450000
&ICPID   SETC   '&CPID(1)'         SAVE CPID SPECIFICATION              23500000
         AGO    .CELL                                                   23550000
.CPID1   ANOP                                                           23600000
&ICPID   SETC   '&CPID'         SAVE CPID SPECIFICATION                 23650000
.********************************************************************** 23700000
.*                                                                      23750000
.* CHECK KEYWORD FOR THE CELL ADDRESS                                   23800000
.*                                                                      23850000
.********************************************************************** 23900000
.CELL    ANOP                                                           23950000
         AIF ('&CELL' EQ '').KEY       IF NO CELL SPECIFIED             24000000
         AIF (N'&CELL  LT 2).CELL1  MORE THAN 1 OPERAND SPECIFIED       24050000
         MNOTE  4,'IHB331 ''CELL=&CELL'' &TOLONG''&CELL(1)''.'          24100000
&ICELL   SETC   '&CELL(1)'         SAVE CELL SPECIFICATION              24150000
         AGO    .KEY                                                    24200000
.CELL1   ANOP                                                           24250000
&ICELL   SETC   '&CELL'         SAVE CELL SPECIFICATION                 24300000
.********************************************************************** 24350000
.*                                                                      24400000
.* CHECK KEYWORD FOR THE KEY NUMBER                                     24450000
.*                                                                      24500000
.********************************************************************** 24550000
.KEY     ANOP                                                           24600000
&IBKEY   SETC   '0'                ASSUME NO KEY SPECIFIED              24650000
         AIF ('&KEY' EQ '').TCB       IF NO KEY SPECIFIED               24700000
         AIF (N'&KEY  LT 2).KEY1  MORE THAN 1 OPERAND SPECIFIED         24750000
         MNOTE  4,'IHB331 ''KEY=&KEY'' &TOLONG''&KEY(1)''.'             24778500
&IBKEY   SETC   '1'                KEY SPECIFIED                        24807000
&IKEY    SETC   '&KEY(1)'          SAVE KEY SPECIFICATION               24835500
         AGO    .KEY2                                                   24864000
.KEY1    ANOP                                                           24892500
&IBKEY   SETC   '1'                KEY SPECIFIED                        24921000
&IKEY    SETC   '&KEY'          SAVE KEY SPECIFICATION                  24949500
.KEY2    ANOP                   KEY SPECIFIED                           24978000
         AIF (T'&IKEY NE 'N').TCB  NOT SPECIFIED AS A CONSTANT          25006500
         AIF (&IKEY LT 16).TCB    VALUE LESS THAN OR EQUAL 15           25035000
&ERROR   SETA   12               NOTE ERROR                             25063500
         MNOTE  12,'IHB343 ''&IKEY'' IN ''KEY=&IKEY'' MUST BE LESS THAN+25092000
                16.&NOTEXT'                                             25120500
.********************************************************************** 25150000
.*                                                                      25200000
.* CHECK KEYWORD FOR THE TCB ADDRESS                                    25250000
.*                                                                      25300000
.********************************************************************** 25350000
.TCB     ANOP                                                           25400000
&IBTCB   SETC   '0'                ASSUME NO TCB SPECIFIED              25450000
         AIF ('&TCB' EQ '').HDR       IF NO TCB SPECIFIED               25500000
         AIF (N'&TCB  LT 2).TCB1  MORE THAN 1 OPERAND SPECIFIED         25550000
         MNOTE  4,'IHB331 ''TCB=&TCB'' &TOLONG''&TCB(1)''.'             25600000
&IBTCB   SETC   '1'                TCB SPECIFIED                        25650000
&ITCB    SETC   '&TCB(1)'          SAVE TCB SPECIFICATION               25700000
         AGO    .HDR                                                    25750000
.TCB1    ANOP                                                           25800000
&IBTCB   SETC   '1'                TCB SPECIFIED                        25850000
&ITCB    SETC   '&TCB'          SAVE TCB SPECIFICATION                  25900000
.********************************************************************** 25950000
.*                                                                      26000000
.* CHECK KEYWORD FOR THE HEADER                                         26050000
.*                                                                      26100000
.********************************************************************** 26150000
.HDR     ANOP                                                           26200000
&IBHDR   SETC   '0'                ASSUME NO HEADER SPECIFIED           26250000
         AIF ('&HDR' EQ '').LINK      IF NO HDR SPECIFIED               26300000
         AIF (N'&HDR  LT 2).HDR1      ONE OPERAND SPECIFIED             26350000
         MNOTE  4,'IHB331 ''HDR=&HDR'' &TOLONG''&HDR(1)''.'             26400000
&IBHDR   SETC   '1'                HEADER SPECIFIED                     26450000
&IHDR    SETC   '&HDR(1)'          SAVE HDR SPECIFICATION               26500000
         AGO    .LINK                                                   26550000
.HDR1    ANOP                                                           26600000
&IBHDR   SETC   '1'                HEADER SPECIFIED                     26650000
&IHDR    SETC   '&HDR'          SAVE HDR SPECIFICATION                  26700000
.********************************************************************** 26750000
.*                                                                      26800000
.* CHECK KEYWORD FOR THE LINKAGE.  ARGUMENT ONE CAN BE EITHER 'SYSTEM'  26850000
.* OR 'BRANCH'                                                          26900000
.*                                                                      26950000
.********************************************************************** 27000000
.LINK    ANOP                                                           27050000
         AIF ('&LINKAGE' EQ '').REGS     IF NO LINKAGE SPECIFIED        27100000
         AIF (N'&LINKAGE  LT 2).LINK1  MORE THAN 1 OPERAND SPECIFIED    27150000
         MNOTE  4,'IHB331 ''LINKAGE=&LINKAGE'' &TOLONG''&LINKAGE(1)''.' 27200000
.LINK1   ANOP                                                           27250000
&ILINK   SETC   '&LINKAGE(1)'      SAVE LINKAGE SPECIFICATION           27300000
         AIF ('&ILINK' EQ 'SYSTEM' OR '&ILINK' EQ 'BRANCH').REGS        27350000
         MNOTE  12,'IHB343 ''&LINKAGE(1)'' IN ''LINKAGE=&LINKAGE'' MUST+27400000
                BE ''SYSTEM'' OR ''BRANCH''.&NOTEXT'                    27450000
&ERROR   SETA   12                 NOT ERROR                            27500000
&ILINK   SETC   'SYSTEM'           ASSUME SYSTEM LINKAGE                27550000
.********************************************************************** 27600000
.*                                                                      27650000
.* CHECK KEYWORD FOR THE REGISTER USAGE.  ARGUMENT ONE CAN BE EITHER    27700000
.* 'USE' OR 'SAVE'.                                                     27750000
.*                                                                      27800000
.********************************************************************** 27850000
.REGS    ANOP                                                           27900000
         AIF ('&REGS' EQ '').OWNER    IF NO REGS SPECIFIED         @L2A 27950000
         AIF (N'&REGS LT 2).REGS1  MORE THAN 1 OPERAND SPECIFIED        28000000
         MNOTE  4,'IHB331 ''REGS=&REGS'' &TOLONG''&REGS(1)''.'          28050000
.REGS1   ANOP                                                           28100000
&IREGS   SETC   '&REGS(1)'         SAVE REGS SPECIFICATION              28150000
         AIF ('&IREGS' EQ 'USE' OR '&IREGS' EQ 'SAVE').OWNER       @L2A 28200000
         MNOTE  12,'IHB343 ''&REGS(1)'' IN ''REGS=&REGS'' MUST BE ''SAV+28250000
               E'' OR ''USE''.&NOTEXT'                                  28300000
&ERROR   SETA   12                 NOT ERROR                            28350000
&IREGS   SETC   'SAVE'             ASSUME SAVE REGISTERS                28400000
.********************************************************************** 28450000
.*                                                                      28500000
.* CHECK KEYWORD FOR THE OWNER. MUST BE 'HOME', 'PRIMARY',              28501400
.* OR 'SYSTEM'.                                                    @D2C 28502800
.*                                                                      28504200
.********************************************************************** 28505600
.OWNER   ANOP                                                      @L2A 28507000
&IBOWN   SETC '00'                    Owner=Home                   @L2A 28508400
         AIF ('&OWNER' EQ '').OWNER6  IF NO OWNER SPECIFIED        @L2A 28509800
         AIF (N'&OWNER LT 2).OWNER1 ONLY 1 OPERAND SPECIFIED       @L2A 28511200
         MNOTE  4,'IHB331 ''OWNER=&OWNER'' &TOLONG''&OWNER(1)''.'  @L2A 28512600
.OWNER1  ANOP                                                      @L2A 28514000
&IOWNER  SETC   '&OWNER(1)'        SAVE OWNER SPECIFICATION        @L2A 28515400
         AIF ('&IOWNER' NE 'HOME').OWNER2                          @L2A 28516800
&IBOWN   SETC '00'                    Owner=Home                   @L2A 28518200
         AGO   .OWNER6                                             @L2A 28519600
.OWNER2  ANOP                                                      @L2A 28521000
         AIF ('&IOWNER' NE 'PRIMARY').OWNER4                       @L2A 28522400
&IBOWN   SETC '01'                    Owner=Primary                @L2A 28523800
         AGO   .OWNER6                                             @L2A 28530800
.OWNER4  ANOP                                                      @L2A 28532200
         AIF ('&IOWNER' NE 'SYSTEM').OWNER5                        @L2A 28533600
&IBOWN   SETC '11'                    Owner=System                 @L2A 28535000
         AGO   .OWNER6                                             @L2A 28536400
.OWNER5  ANOP                                                      @L2A 28537800
         MNOTE  12,'IHB343 ''&OWNER(1)'' IN ''OWNER=&OWNER'' MUST BE ''+28539200
               HOME'', ''PRIMARY'', OR ''SYSTEM''.&NOTEXT'         @D2C 28541300
&ERROR   SETA   12                 NOT ERROR                       @L2A 28543400
.OWNER6  ANOP                                                      @L2A 28544800
.********************************************************************** 28544900
.*                                                                      28545000
.* CHECK KEYWORD FOR BNDRY. MUST BE 'DWORD' OR 'QWORD'             @L3A 28545100
.*                                                                      28545200
.********************************************************************** 28545300
.BNDRY   ANOP                                                      @L3A 28545400
&IBBNDRY SETC '0'                     BNDRY=DWORD                  @L3A 28545500
         AIF ('&BNDRY' EQ '').BNDRY6  IF NO BNDRY SPECIFIED        @L3A 28545600
         AIF (N'&BNDRY LT 2).BNDRY1 ONLY 1 OPERAND SPECIFIED       @L3A 28545700
         MNOTE  4,'IHB331 ''BNDRY=&BNDRY'' &TOLONG''&BNDRY(1)''.'  @L3A 28545800
.BNDRY1  ANOP                                                      @L3A 28545900
         AIF ('&BNDRY(1)' NE 'DWORD').BNDRY2                       @L3A 28546000
&IBBNDRY SETC '0'                     BNDRY=DWORD                  @L3A 28546100
         AGO   .BNDRY6                                             @L3A 28546200
.BNDRY2  ANOP                                                      @L3A 28546300
         AIF ('&BNDRY(1)' NE 'QWORD').BNDRY5                       @L3A 28546400
&IBBNDRY SETC '1'                     BNDRY=QWORD                  @L3A 28546500
         AGO   .BNDRY6                                             @L3A 28546600
.BNDRY5  ANOP                                                      @L3A 28546700
         MNOTE  12,'IHB343 ''&BNDRY(1)'' IN ''BNDRY=&BNDRY'' MUST BE ''+28546800
               DWORD'' OR ''QWORD''.&NOTEXT'                       @L3A 28546900
&ERROR   SETA   12                 NOT ERROR                       @L3A 28547000
.BNDRY6  ANOP                                                      @L3A 28547100
.********************************************************************** 28547200
.*                                                                      28547600
.* CHECK KEYWORD FOR THE FORM OF THE FUNCTION.  ARGUMENT ONE CAN        28550000
.* EITHER BE 'L' FOR THE LIST FORM, OR 'E' FOR THE EXECUTE FORM.        28600000
.*                                                                      28650000
.********************************************************************** 28700000
.MF      ANOP                                                           28750000
&IMF     SETC   '&MF(1)'                                                28800000
&IMF2    SETC   '&MF(2)'                                                28850000
         AIF ('&MF' EQ '').SEMAN    IF NO MF SPECIFIED                  28900000
.MF1     ANOP                                                           28950000
         AIF ('&IMF' EQ 'L' OR '&IMF' EQ 'E').MF2                       29000000
         MNOTE  12,'IHB343 ''&MF(1)'' IN ''MF=&MF'' MUST BE ''L'' OR ''+29050000
               E''.&NOTEXT'                                             29100000
&ERROR   SETA   12                 NOTE ERROR                           29150000
         AGO    .SEMAN                                                  29200000
.MF2     ANOP                                                           29250000
         AIF ('&IMF' EQ 'E').MF4 EXECUTE FORM                           29300000
.*      LIST FORM  CANNOT HAVE A SECOND SPECIFICATION                   29350000
         AIF (N'&MF EQ 1).SEMAN                                         29400000
         MNOTE  4,'IHB331 ''MF=&MF'' &TOLONG''&MF(1)''.'                29450000
         AGO    .SEMAN                                                  29495000
.MF4     ANOP                      EXECUTE FORM                         29540000
         AIF (N'&MF LT 3).MF5  2 OR LESS OPERANDS SPECIFIED             29585000
         MNOTE  4,'IHB331 ''MF=&MF'' &TOLONG''&MF(2)''.'                29630000
         AGO    .SEMAN                                                  29675000
.MF5     ANOP                                                           29720000
         AIF (N'&MF EQ 2).SEMAN     2 OPERANDS SPECIFIED FOR MF         29765000
         MNOTE  12,'IHB343 SECOND ''MF'' SPECIFICATION&NOTSUP.&NOTEXT'  29810000
&ERROR   SETA   12                 NOTE ERROR                           29855000
.********************************************************************** 29900000
.SEMAN   ANOP                                                           29950000
.********************************************************************** 30000000
.*       CHECK SEMANTICS                                                30050000
.********************************************************************** 30100000
         AIF ('&IFUNC' EQ '').SEMEND    NO FUNCTION SPECIFIED           30150000
         AIF ('&IFUNC' EQ 'BUILD').SBUILD   IF BUILD FUNCTION           30200000
.********************************************************************** 30250000
.*                                                                      30300000
.*       CHECK SEMANTICS FOR GET, FREE AND DELETE.                      30350000
.*    .  CPID MUST BE SPECIFIED WITH GET, FREE, AND DELETE.             30400000
.*    .  PCELLCT, SCELLCT, CSIZE, SP, LOC, KEY, TCB, HDR, AND MF        30450000
.*       CANNOT BE SPECIFIED WITH GET, FREE, AND DELETE.                30500000
.*    .  U/UNCOND, OR C/COND CAN ONLY BE SPECIFIED WITH GET.            30550000
.*    .  FREE CANNOT HAVE LINKAGE, IT MUST HAVE CELL, AND REGS          30600000
.*       IS OPTIONAL.                                                   30650000
.*    .  DELETE CANNOT HAVE CELL, REGS IS IGNORED, AND LINKAGE          30700000
.*       IS OPTIONAL.                                                   30750000
.*    .  LINKAGE AND REGS ARE OPTIONAL WITH GET.                        30800000
.*                                                                      30850000
.********************************************************************** 30900000
         AIF ('&ICPID' NE '').SEMAN1    CPID NEEDED                     30950000
         MNOTE  12,'IHB313 ''CPID''&NOTSUP.&NOTEXT'                     31000000
&ERROR   SETA   12                                                      31050000
.SEMAN1  ANOP                                                           31100000
         AIF ('&IPCELL' EQ '').SEMAN1A                                  31150000
         MNOTE  12,'IHB323 ''PCELLCT''&IINVAL''&IFUNC''.&NOTEXT'        31200000
&ERROR   SETA   12                                                      31250000
.SEMAN1A ANOP                                                           31300000
         AIF ('&ISCELL' EQ '').SEMAN1B                                  31350000
         MNOTE  12,'IHB323 ''SCELLCT''&IINVAL''&IFUNC''.&NOTEXT'        31400000
&ERROR   SETA   12                                                      31450000
.SEMAN1B ANOP                                                           31500000
         AIF ('&ICSIZE' EQ '').SEMAN1C                                  31550000
         MNOTE  12,'IHB323 ''CSIZE''&IINVAL''&IFUNC''.&NOTEXT'          31600000
&ERROR   SETA   12                                                      31650000
.SEMAN1C ANOP                                                           31700000
         AIF ('&ISP' EQ '').SEMAN1D                                     31750000
         MNOTE  12,'IHB323 ''SP''&IINVAL''&IFUNC''.&NOTEXT'             31800000
&ERROR   SETA   12                                                      31850000
.SEMAN1D ANOP                                                           31900000
         AIF ('&ILOC1' EQ '' AND '&ILOC2' EQ '').SEMAN1E                31950000
         MNOTE  12,'IHB323 ''LOC''&IINVAL''&IFUNC''.&NOTEXT'            32000000
&ERROR   SETA   12                                                      32050000
.SEMAN1E ANOP                                                           32100000
         AIF ('&IKEY' EQ '').SEMAN1F                                    32150000
         MNOTE  12,'IHB323 ''KEY''&IINVAL''&IFUNC''.&NOTEXT'            32200000
&ERROR   SETA   12                                                      32250000
.SEMAN1F ANOP                                                           32300000
         AIF ('&ITCB' EQ '').SEMAN1G                                    32350000
         MNOTE  12,'IHB323 ''TCB''&IINVAL''&IFUNC''.&NOTEXT'            32400000
&ERROR   SETA   12                                                      32450000
.SEMAN1G ANOP                                                           32500000
         AIF ('&IHDR' EQ '').SEMAN1H                                    32550000
         MNOTE  12,'IHB323 ''HDR''&IINVAL''&IFUNC''.&NOTEXT'            32600000
&ERROR   SETA   12                                                      32650000
.SEMAN1H ANOP                                                           32700000
         AIF ('&IMF' EQ '').SEMAN2                                      32750000
         MNOTE  12,'IHB323 ''MF''&IINVAL''&IFUNC''.&NOTEXT'             32800000
&ERROR   SETA   12                                                      32850000
.SEMAN2  ANOP                                                           33400000
         AIF ('&IFUNC' NE 'FREE').SEMAN3     NOT THE FREE FUNCTION      33450000
.********************************************************************** 33500000
.*                                                                      33550000
.*    THE FREE FUNCTION, MUST HAVE CELL, CANNOT HAVE LINKAGE AND        33600000
.*    UNCOND OR COND, AND REGS IS OPTIONAL                              33650000
.*                                                                      33684600
.********************************************************************** 33719200
         AIF ('&IUC' EQ '').SEMF0          U/C NOT SPECIFIED            33753800
         MNOTE  12,'IHB323 ''&IUC''&IINVAL''&IFUNC''.&NOTEXT'           33788400
&ERROR   SETA   12                                                      33823000
.SEMF0   ANOP                                                           33857600
         AIF ('&ILINK' EQ '').SEMF1       LINK NOT SPECIFIED            33892200
         MNOTE  12,'IHB323 ''LINKAGE''&IINVAL''FREE''.&NOTEXT'          33926800
&ERROR   SETA   12                                                      33961400
.SEMF1   ANOP                                                           33996000
         AIF ('&ICELL' NE '').SEMF2       CELL SPECIFIED                34030600
         MNOTE  12,'IHB313 ''CELL''&NOTSUP.&NOTEXT'                     34065200
&ERROR   SETA   12                                                      34100000
.SEMF2   ANOP                                                           34150000
         AIF ('&IREGS' NE '').SEMEND      REGS IS SPECIFIED             34200000
&IREGS   SETC   'SAVE'                    DEFAULT IS TO SAVE REGS       34250000
         AGO    .SEMEND                   FINISHED SEMANTIC CHECK       34300000
.SEMAN3  ANOP                                                           34350000
         AIF ('&IFUNC' EQ 'GET').SEMAN5   THE GET FUNCTION              34400000
.********************************************************************** 34450000
.*                                                                      34500000
.*       THE DELETE FUNCTION CHECKS THAT CELL IS NOT SPECIFIED AND      34550000
.*       IF THE LINKAGE IS NOT SPECIFIED THE DEFAULT IS SET TO          34600000
.*       SYSTEM, AND IT CANNOT HAVE REGS OR U/C.                        34650000
.*                                                                      34677700
.********************************************************************** 34705400
         AIF ('&IUC' EQ '').SEMF01         U/C NOT SPECIFIED            34733100
         MNOTE  12,'IHB323 ''&IUC''&IINVAL''&IFUNC''.&NOTEXT'           34760800
&ERROR   SETA   12                                                      34788500
.SEMF01  ANOP                                                           34816200
         AIF ('&ICELL' EQ '').SEMAN4                                    34843900
         MNOTE  12,'IHB323 ''CELL''&IINVAL''&IFUNC''.&NOTEXT'           34871600
&ERROR   SETA   12                                                      34900000
.*                                                                      34950000
.SEMAN4  ANOP                                                           35000000
         AIF ('&IREGS' EQ '').SEMAN4A                                   35050000
&ERROR   SETA   12                                                      35100000
         MNOTE  12,'IHB323 ''REGS''&IINVAL''&IFUNC''.&NOTEXT'           35150000
.SEMAN4A ANOP                                                           35200000
&IREGS   SETC   'USE'              IGNORE REGS SPECIFICATION            35250000
.*                                                                      35300000
         AIF ('&ILINK' EQ 'BRANCH' OR '&ILINK' EQ 'SYSTEM').SEMEND      35350000
&ILINK   SETC   'SYSTEM'           ASSUME SYSTEM LINKAGE                35400000
         AGO    .SEMEND                                                 35450000
.*                                                                      35500000
.SEMAN5  ANOP                                                           35550000
.********************************************************************** 35600000
.*                                                                      35650000
.*       THE GET FUNCTION CHECKS THAT LINKAGE IS NOT SPECIFIED          35700000
.*       WITH THE GET CONDITIONAL, AND REGS AND U/C ARE OPTIONAL.       35750000
.*                                                                      35800000
.********************************************************************** 35850000
         AIF ('&IUC' NE '').SEMAN6   C OR U SPECIFIED                   35900000
&IUC     SETC   'U'                  DEFAULT IS UNCONDITIONAL           35950000
.*                                                                      36100000
.SEMAN6  ANOP                                                           36150000
         AIF ('&IREGS' NE '').SEMAN7      REGS SPECIFICATION            36200000
&IREGS   SETC   'SAVE'             ASSUME REGISTERS ARE TO BE SAVED     36250000
.*                                                                      36300000
.SEMAN7  ANOP                                                           36350000
         AIF ('&ILINK' NE '').SEMAN8                                    36400000
&ILINK   SETC   'SYSTEM'           ASSUME SYSTEM LINKAGE                36414200
         AGO    .SEMEND                                                 36428400
.SEMAN8  ANOP                      LINKAGE SPECIFIED                    36442600
         AIF ('&IUC' NE 'C').SEMEND                                     36456800
         MNOTE  12,'IHB323 ''LINKAGE''&IINVAL''&IFUNC C''.&NOTEXT'      36471000
&ERROR   SETA   12                                                      36485200
         AGO    .SEMEND                                                 36500000
.********************************************************************** 36550000
.********************************************************************** 36600000
.*                                                                      36650000
.*    SEMANTICS CHECK FOR BUILD                                         36700000
.*                                                                      36750000
.********************************************************************** 36800000
.SBUILD  ANOP                                                           36850000
.********************************************************************** 36900000
.*                                                                      36950000
.*       COND AND UNCOND ARE INVALID WITH THE BUILD FUNCTION.           37000000
.*       CELL AND REGS CANNOT BE SPECIFIED WITH BUILD                   37050000
.*                                                                      37096100
.********************************************************************** 37142200
         AIF ('&IUC' EQ '').SBCELL   C OR U NOT SPECIFIED               37188300
         MNOTE  12,'IHB323 ''&IUC''&IINVAL''&IFUNC''.&NOTEXT'           37234400
&ERROR   SETA   12                                                      37280500
.*                                                                      37326600
.SBCELL  AIF ('&ICELL' EQ '').SBREGS  CELL NOT SPECIFIED                37372700
         MNOTE  12,'IHB323 ''CELL''&IINVAL''BUILD''.&NOTEXT'            37418800
&ERROR   SETA   12                                                      37464900
.SBREGS  AIF ('&IREGS' EQ '').SBUILD1                                   37511000
&ERROR   SETA   12                                                      37557100
         MNOTE  12,'IHB323 ''REGS''&IINVAL''BUILD''.&NOTEXT'            37603200
&IREGS   SETC   'USE'                                                   37650000
.*                                                                      37700000
.SBUILD1 ANOP                                                           37750000
         AIF ('&IMF' NE 'L').SBUILDX                                    37800000
.********************************************************************** 37850000
.*                                                                      37900000
.*       LIST FORM OF BUILD CANNOT HAVE CPID AND TCB SPECIFIED.         37950000
.*       ALSO HDR, PCELLCT, SCELLCT, CSIZE, SP, AND CELL CANNOT BE      38000000
.*       SPECIFIED AS REGISTERS.                                        38050000
.*                                                                      38100000
.********************************************************************** 38150000
         AIF ('&ICPID' EQ '').SBUILD2                                   38200000
         MNOTE  12,'IHB323 ''CPID''&IINVAL''BUILD MF=L''.&NOTEXT'       38250000
&ERROR   SETA   12                                                      38300000
.*                                                                      38350000
.SBUILD2 ANOP                                                           38400000
         AIF ('&IKEY' EQ '').SBUILD3            KEY NOT SPECIFIED       38450000
         AIF ('&IKEY'(1,1) NE '(').SBUILD3      KEY NOT A REGISTER      38500000
         MNOTE  12,'IHB351 ''KEY'' SPECIFIED AS A REGISTER IS INVALID.&+38550000
               NOTEXT'                                                  38600000
&ERROR   SETA   12                                                      38650000
.*                                                                      38700000
.SBUILD3 ANOP                                                           38750000
         AIF ('&ITCB' EQ '').SBUILD4            TCB NOT SPECIFIED       38800000
         MNOTE  12,'IHB323 ''TCB''&IINVAL''BUILD MF=L''.&NOTEXT'        38850000
&ERROR   SETA   12                                                      39000000
.*                                                                      39050000
.SBUILD4 ANOP                                                           39100000
         AIF ('&IHDR' EQ '').SBUILD5            HDR NOT SPECIFIED       39150000
         AIF ('&IHDR'(1,1) EQ '''').SBUILD5     HDR A CHAR STRING       39200000
         MNOTE  12,'IHB351 ''HDR'' NOT SPECIFIED AS A CHARACTER STRING +39250000
               IS INVALID.&NOTEXT'                                      39300000
&ERROR   SETA   12                                                      39350000
.*                                                                      39400000
.SBUILD5 ANOP                                                           39450000
         AIF ('&IPCELL' EQ '').SBUILD6          PCELL NOT SPECIFIED     39500000
         AIF ('&IPCELL'(1,1) NE '(').SBUILD6    PCELL NOT A REGISTER    39550000
         MNOTE  12,'IHB351 ''PCELLCT'' SPECIFIED AS A REGISTER IS INVAL+39600000
               ID.&NOTEXT'                                              39650000
&ERROR   SETA   12                                                      39700000
.*                                                                      39750000
.SBUILD6 ANOP                                                           39800000
         AIF ('&ISCELL' EQ '').SBUILD7          SCELL NOT SPECIFIED     39850000
         AIF ('&ISCELL'(1,1) NE '(').SBUILD7    SCELL NOT A REGISTER    39900000
         MNOTE  12,'IHB351 ''SCELLCT'' SPECIFIED AS A REGISTER IS INVAL+39950000
               ID.&NOTEXT'                                              40000000
&ERROR   SETA   12                                                      40050000
.*                                                                      40100000
.SBUILD7 ANOP                                                           40150000
         AIF ('&ICSIZE' EQ '').SBUILD8          CSIZE NOT SPECIFIED     40200000
         AIF ('&ICSIZE'(1,1) NE '(').SBUILD8    CSIZE NOT A REGISTER    40250000
         MNOTE  12,'IHB351 ''CSIZE'' SPECIFIED AS A REGISTER IS INVALID+40300000
               .&NOTEXT'                                                40350000
&ERROR   SETA   12                                                      40400000
.*                                                                      40450000
.SBUILD8 ANOP                                                           40500000
         AIF ('&ISP' EQ '').SBUILDB             SP NOT SPECIFIED        40550000
         AIF ('&ISP'(1,1) NE '(').SBUILDB       SP NOT A REGISTER       40600000
         MNOTE  12,'IHB351 ''SP'' SPECIFIED AS A REGISTER IS INVALID,&N+40650000
               OTEXT'                                                   40700000
&ERROR   SETA   12                                                      40750000
         AGO    .SBUILDB                                                40800000
.*                                                                      40850000
.SBUILDX ANOP                                                           40900000
         AIF ('&IMF' NE '').SBUILDB                                     40950000
.********************************************************************** 41000000
.*                                                                      41050000
.*       BUILD IN THE STANDARD FORM IS SPECIFIED.  PCELLCT AND CSIZE    41100000
.*       MUST BE SPECIFIED                                              41150000
.*                                                                      41200000
.********************************************************************** 41250000
         AIF ('&IPCELL' NE '').SBUILDY                                  41300000
         MNOTE  12,'IHB313 ''PCELLCT''&NOTSUP.&NOTEXT'                  41350000
&ERROR   SETA   12                                                      41400000
.SBUILDY ANOP                                                           41450000
         AIF ('&ICSIZE' NE '').SBUILDB                                  41500000
         MNOTE  12,'IHB313 ''CSIZE''&NOTSUP.&NOTEXT'                    41550000
&ERROR   SETA   12                                                      41600000
.*                                                                      41650000
.SBUILDB ANOP                                                           41700000
.********************************************************************** 41750000
.*                                                                      41800000
.*       IF NO ERRORS WERE ENCOUNTERED SO FAR, BUILD UP THE BIT         41850000
.*       INDICATORS NEEDED FOR BUILD.                                   41900000
.*                                                                      41950000
.********************************************************************** 42000000
         AIF (&ERROR  NE  0 ).SEMEND                                    42050000
.********************************************************************** 42100000
.*       BUILD UP THE BIT INDICATORS                                    42150000
.********************************************************************** 42200000
&IBFLAG  SETC   ''''.'&IBANY'.'&IBLOC'.'&IBTCB'.'&IBKEY'.'&IBHDR'.'&IBO+42250000
               WN'.''''                                            @L2A 42300000
&IBFLAGA SETC   '''&IB64.&IBBNDRY.000000'''                        @L3A 42325000
&IBFLAG2 SETC   ''''.'&IBANY'.'&IBLOC'.'&IBTCB'.'&IBKEY'.'&IBHDR'.'&IBO+42350000
               WN'.'&IB64.&IBBNDRY.000000'''                       @L3C 42400000
.SEMEND  ANOP                                                           42450000
.********************************************************************** 42500000
.GENTEXT ANOP                                                           42550000
.********************************************************************** 42600000
.*       GENERATE ASSEMBLER CODE                                        42650000
.********************************************************************** 42700000
         AIF (&ERROR EQ 0).GEN1                                         42750000
         MEXIT                                                          42800000
.GEN1    ANOP                                                           42850000
         AIF ('&INAME' EQ '').GEN1A        NO LABEL TO BE GENERATED     42862400
&INAME   DS     0H                                                      42874800
.GEN1A   ANOP                                                           42887200
         AIF ('&IFUNC' EQ 'BUILD').GBUILD  IS THIS THE BUILD FUNCTION   42900000
.********************************************************************** 42950000
.*                                                                      43000000
.*       NOT THE BUILD FUNCTION, I.E., EITHER GET, DELETE, OR FREE      43050000
.*                                                                      43100000
.********************************************************************** 43150000
         AIF ('&IFUNC' EQ 'DELETE' AND '&ILINK' NE 'BRANCH').GEN2       43200000
         AIF ('&IREGS' EQ 'USE').GGDF   REGISTERS ARE TO BE USED        43250000
.********************************************************************** 43300000
.*       SAVE THE REGISTERS PRIOR TO USE                                43350000
.********************************************************************** 43400000
.GEN2    ANOP                                                           43441600
         AIF ('&IFUNC' NE 'DELETE').GEN3 NOT THE DELETE LINKAGE(SYSTEM) 43483200
         ESAR   15                .SAVE SECONDARY ASN                   43524800
.GEN3    ANOP                                                           43566400
         STM    15,12,16(13)      .SAVE REGISTERS                       43608000
.GGDF    ANOP                      ASSIGN CELL POOL ADDRESS TO REG 1    43650000
.********************************************************************** 43700000
.*                                                                      43750000
.*     CPID CAN EITHER BE A RX-TYPE ADDRESS CONTAINING THE CELL POOL    43800000
.*     ID, OR A REGISTER CONTAINING THE CELL POOL ID                    43850000
.*                                                                      43900000
.********************************************************************** 43950000
         AIF ('&ICPID'(1,1) EQ '(').GGDF1 REGISTER SPECIFICATION        44000000
         L      1,&ICPID          .CELL POOL ID                         44050000
         AGO    .GGDF2             CONTINUE PROCESSING                  44091600
.GGDF1   ANOP                      CELL POOL ADDRESS IS IN A REGISTER   44133200
&ICPID   SETC   '&ICPID'(2,K'&ICPID-2)  STRIP PARENS                    44174800
         AIF ('&ICPID' EQ '1').GGDF2 REGISTER SPECIFICATION IS 1        44216400
         LR     1,&ICPID          .CELL POOL ID                         44258000
.*                                                                      44300000
.GGDF2   ANOP                                                           44350000
         AIF ('&IFUNC' EQ 'DELETE').GDELETE THE DELETE FUNCTION         44400000
         AIF ('&IFUNC' EQ 'FREE').GFREE     THE FREE FUNCTION           44450000
.GET     ANOP                               THE GET FUNCTION            44500000
.********************************************************************** 44550000
.*                                                                      44600000
.*       GET FUNCTION WAS SPECIFIED                                     44650000
.*                                                                      44700000
.********************************************************************** 44750000
         AIF ('&IUC' EQ 'U').GGET1     A UNCONDITIONAL REQUEST          44800000
.********************************************************************** 44850000
.*       GET CONDTIONAL FUNCTION WAS SPECIFIED                          44900000
.*       ADDRESS IS IN CVTCPGTC                                         44950000
.********************************************************************** 45000000
         L      15,16(0,0)        .ADDRESS OF CVT POINTER FIELD         45050000
         L      15,1132(0,15)     .ADDRESS OF GET CONDITIONAL ROUTINE   45100000
         BASR   14,15             .GET CONDITIONAL REQUEST IGVCPGTC     45150000
         AGO    .GGET3                                                  45200000
.GGET1   ANOP                                                           45250000
.********************************************************************** 45300000
.*       GET UNCONDTIONAL FUNCTION WAS SPECIFIED                        45350000
.*       TEST IS SYSTEM LINKAGE IS TO BE USED                           45400000
.********************************************************************** 45450000
         AIF ('&ILINK' EQ 'SYSTEM' OR '&ILINK' EQ '').GGET2             45500000
.********************************************************************** 45550000
.*       GET UNCONDITIONAL FUNCTION USING BRANCH LINKAGE                45600000
.*       ADDRESS IS IN CVTCPGUB                                         45650000
.********************************************************************** 45700000
         L      15,16(0,0)        .ADDRESS OF CVT POINTER FIELD         45750000
         L      15,1124(0,15)     .ADDRESS OF GET UNCOND ROUTINE        45800000
         BASR   14,15             .GET UNCONDITONAL REQUEST IGVCPGUB    45850000
         AGO    .GGET3                                                  45900000
.*                                                                      45950000
.GGET2   ANOP                                                           46000000
.********************************************************************** 46050000
.*       GET UNCONDTIONAL FUNCTION WITH SYSTEM LINKAGE                  46100000
.*       ADDRESS IS IN CVTCPGUP                                         46150000
.********************************************************************** 46200000
         L      15,16(0,0)        .ADDRESS OF CVT POINTER FIELD         46250000
         AIF ('&IREGS' EQ 'USE').GGET2A                                 46260000
         L      15,1172(0,15)     .ADDRESS OF GET UNCOND ROUTINE        46270000
         AGO    .GGET2B                                                 46280000
.GGET2A  ANOP                                                           46290000
         L      15,1128(0,15)     .ADDRESS OF GET UNCOND ROUTINE        46300000
.GGET2B  ANOP                                                           46333300
         BASR   14,15             .GET UNCONDITONAL REQUEST IGVCPGUP    46366600
.GGET3   ANOP                                                           46400000
         AIF ('&IREGS' EQ 'USE').GGET4   REGISTERS ARE TO BE USED       46450000
.********************************************************************** 46500000
.*       RESTORE THE REGISTERS                                          46550000
.********************************************************************** 46600000
         AIF ('&IREGS' EQ 'USE').GGET4   REGISTERS ARE TO BE USED       46633300
         LM     2,12,28(13)       .RESTORE REGISTERS                    46666600
.********************************************************************** 46700000
.* SAVE CELL ADDRESS IF NECESSARY, CELL MUST HAVE BEEN SPECIFIED        46750000
.* AS A REGISTER.                                                       46800000
.********************************************************************** 46850000
.GGET4   ANOP                                                           46900000
         AIF ('&ICELL' EQ '').GGET6  DO NOT SAVE CELL ADDRESS           46950000
         AIF ('&ICELL'(1,1) NE '(').GGET5   NOT A REGISTER              46972200
&ICELL   SETC   '&ICELL'(2,K'&ICELL-2)  STRIP PARENS                    46994400
         AIF ('&ICELL' EQ '1').GGET6  PUT VALUE IN REGISTER 1           47016600
         LR     &ICELL,1          .SAVE ADDRESS OF CELL OBTAINED        47038800
.GGET6   ANOP                                                           47061000
         MEXIT                     DONE WITH PROCESSING                 47083200
.GGET5   ANOP                                                           47105400
         ST     1,&ICELL          .SAVE ADDRESS OF CELL OBTAINED        47127600
         MEXIT                     DONE WITH PROCESSING                 47150000
.*                                                                      47200000
.GFREE   ANOP FREE FUNCTION                                             47250000
.********************************************************************** 47300000
.*                                                                      47350000
.* FREE FUNCTION - SET UP IN REGISTER 1 THE ADDRESS OF THE CELL TO      47400000
.* BE FREED AND THEN CALL THE FREE ROUTINE.                             47450000
.* ADDRESS IS IN CVTCPFRE                                               47500000
.*                                                                      47550000
.********************************************************************** 47600000
         AIF ('&ICELL'(1,1) EQ '(').GFREE1 REGISTER SPECIFICATION       47650000
         L      0,&ICELL          .ADDRESS OF CELL TO BE FREED          47700000
         AGO    .GFREE2            CONTINUE PROCESSING                  47750000
.*                                                                      47800000
.GFREE1  ANOP                       CELL ADDRESS IS IN A REGISTER       47850000
&ICELL   SETC   '&ICELL'(2,K'&ICELL-2)  STRIP PARENS                    47900000
         AIF ('&ICELL' EQ '0').GFREE2 REG SPECIFICATION IS 0            47950000
         LR     0,&ICELL          .ADDRESS OF CELL TO BE FREED          47992800
.*                                                                      48035600
.GFREE2  ANOP                      CALL THE FREE ROUTINE                48078400
         L      15,16(0,0)        .ADDRESS OF CVT POINTER FIELD         48121200
         L      15,1136(0,15)     .ADDRESS OF FREE ROUTINE              48164000
         BASR   14,15             .FREE REQUEST IGVCPFRE                48206800
         AGO    .DONE                                                   48250000
.********************************************************************** 48300000
.*                                                                      48350000
.* DELETE FUNCTION                                                      48400000
.*                                                                      48450000
.********************************************************************** 48500000
.GDELETE ANOP              DELETE FUNCTION                              48550000
         AIF ('&ILINK' NE 'BRANCH').GDEL1     SYSTEM LINKAGE            48600000
.********************************************************************** 48650000
.*       DELETE FUNCTION WITH BRANCH LINKAGE                            48700000
.*       ADDRESS IS IN CVTCPDLB                                         48750000
.********************************************************************** 48800000
         L      15,16(0,0)        .ADDRESS OF CVT POINTER FIELD         48850000
         L      15,1156(0,15)     .ADDRESS OF DELETE ROUTINE            48868100
         BASR   14,15             .DELETE REQUEST IGVCPDLB              48886200
.DONE    ANOP                                                           48904300
         AIF ('&IREGS' EQ 'USE').GDONE   REGISTERS ARE TO BE USED       48922400
.********************************************************************** 48940500
.*       RESTORE THE REGISTERS                                          48958600
.********************************************************************** 48976700
         LM     2,12,28(13)        .RESTORE REGISTERS                   48994800
.GDONE   ANOP                                                           49012900
         MEXIT                     MACRO IS COMPLETE                    49031000
.*                                                                      49050000
.GDEL1   ANOP              DELETE SYSTEM LINKAGE                        49100000
.********************************************************************** 49150000
.*       DELETE FUNCTION WITH SYSTEM LINKAGE                            49200000
.********************************************************************** 49250000
         L      2,16(0,0)         .CVT ADDRESS                          49300000
         L      2,772(,2)         .ADDRESS SYSTEM LINKAGE TABLE         49350000
         L      2,84(,2)          .OBTAIN PC NUMBER                     49400000
         PC     0(2)              .PC TO IGVCPDLP                       49450000
         L      2,16(0,13)        .RESTORE SECONDARY ASN                49475000
         SSAR   2                 .RESTORE SECONDARY ASN                49500000
         LM     2,12,28(13)       .RESTORE REGISTERS                    49525000
         MEXIT                     MACRO IS COMPLETE                    49550000
.********************************************************************** 49600000
.*                                                                      49650000
.GBUILD  ANOP         ******BUILD FUNCTION ******                       49700000
.*                                                                      49750000
.********************************************************************** 49800000
         AIF ('&IMF' EQ 'E').GEXEC       EXECUTE FORM OF BUILD          49850000
         AIF ('&IMF' EQ 'L').GBDCL       LIST FORM OF BUILD             49900000
.GBSTD   ANOP                      STANDARD FORM OF BUILD               49950000
.********************************************************************** 50000000
.*                                                                      50050000
.*       STANDARD FORM OF BUILD- DECLARE, INITIALIZE AND INVOKE         50100000
.*                                                                      50150000
.********************************************************************** 50200000
.GBSTD1  ANOP                                                           50350000
         BAS    1,*+48            .BRANCH AROUND PARAMETER LIST         50400000
.GBDCL   ANOP                      LIST FORM OF BUILD                   50450000
.********************************************************************** 50500000
.*       LIST FORM OF BUILD - BUILD THE DECLARE                         50550000
.*       AND STANDARD FORM OF THE DECLARE                               50600000
.********************************************************************** 50650000
         AIF ('&IPCELL' EQ '').GBLISTA   PRIMARY CELL CT NOT SPECIFIED  50700000
         AIF ('&IPCELL'(1,1) NE '(').GBLIST1 NOT A REGISTER             50750000
.GBLISTA ANOP                                                           50800000
         DC     AL4(0)            .PRIMARY CELL COUNT                   50850000
         AGO    .GBLISTB                                                50900000
.GBLIST1 ANOP                                                           50950000
         DC     AL4(&IPCELL)      .PRIMARY CELL COUNT                   51000000
.*                                                                      51050000
.GBLISTB ANOP                                                           51100000
         AIF ('&ISCELL' EQ '').GBLISTC  SECONDARY CELL CT NOT SPECIFIED 51150000
         AIF ('&ISCELL'(1,1) NE '(').GBLIST2 NOT A REGISTER             51200000
.GBLISTC ANOP                                                           51250000
         DC     AL4(0)            .SECONDARY CELL COUNT                 51300000
         AGO    .GBLISTD                                                51350000
.GBLIST2 ANOP                                                           51400000
         DC     AL4(&ISCELL)      .SECONDARY CELL COUNT                 51450000
.*                                                                      51500000
.GBLISTD ANOP                                                           51550000
         AIF ('&ICSIZE' EQ '').GBLISTZ   CELL SIZE NOT SPECIFIED        51600000
         AIF ('&ICSIZE'(1,1) NE '(').GBLIST3     NOT A REGISTER         51650000
.GBLISTZ ANOP                                                           51700000
         DC     AL4(0)            .CELL SIZE                            51750000
         AGO    .GBLISTE                                                51800000
.GBLIST3 ANOP                                                           51850000
         DC     AL4(&ICSIZE)      .CELL SIZE                            51900000
.*                                                                      51950000
.GBLISTE ANOP                                                           52000000
         AIF ('&ISP' EQ '').GBLISTF   SUBPOOL NOTSPECIFIED              52050000
         AIF ('&ISP'(1,1) NE '(').GBLIST4     NOT A REGISTER            52100000
.GBLISTF ANOP                                                           52150000
         DC     AL1(0)            .SUBPOOL ID                           52200000
         AGO   .GBLISTG                                                 52250000
.GBLIST4 ANOP                                                           52300000
         DC     AL1(&ISP)         .SUBPOOL ID                           52350000
.*                                                                      52400000
.GBLISTG ANOP                                                           52450000
         AIF ('&IKEY' EQ '').GBLISTH   KEY NOT SPECIFIED                52500000
         AIF ('&IKEY'(1,1) NE '(').GBLIST5 NOT A REGISTER               52550000
.GBLISTH ANOP                                                           52600000
         DC     AL1(0)            .KEY                                  52650000
         DC     BL2&IBFLAG2       .FLAGS                                52700000
         AGO    .GBLISTI                                                52750000
.GBLIST5 ANOP                                                           52800000
         DC     AL1(&IKEY)        .KEY                                  52850000
         DC     BL2&IBFLAG2       .FLAGS                                52900000
.*                                                                      52950000
.GBLISTI ANOP                                                           53000000
         DC     AL4(0)            .TCB ADDRESS                          53050000
.*                                                                      53100000
.GBLISTK ANOP                                                           53150000
         AIF ('&IHDR' EQ '').GBLIST8   HDR NOT SPECIFIED                53200000
         AIF ('&IHDR'(1,1) EQ '''').GBLIST7     A CHAR CONSTANT         53250000
.GBLIST8 ANOP                                                           53300000
         DC     XL24'00'          .HEADER                               53350000
.*                                                                      53400000
         AGO    .GDCLEND                                                53450000
.GBLIST7 ANOP                                                           53500000
         DC     CL24&IHDR         .HEADER                               53550000
.*                                                                      53600000
.GDCLEND ANOP                                                           53650000
.********************************************************************** 53700000
.*                                                                      53750000
.*       LIST FORM OF THE DECLARE ONLY REQUIRES THE DECLARE TO BE       53800000
.*       GENERATED                                                      54300000
.*                                                                      54350000
.********************************************************************** 54400000
         AIF ('&IMF' EQ 'L').GDONE       LIST FORM OF BUILD             54450000
.********************************************************************** 54500000
.*                                                                      54550000
.*       THE STANDARD FORM OF BUILD HAS GOT REGISTER 1 ALREADY          54600000
.*       POINTING TO THE PARAMETER LIST.  NEXT INITIALIZE THE           54650000
.*       LIST AND CALL THE APPROPRIATE ROUTINE                          54700000
.*                                                                      54750000
.********************************************************************** 54800000
.LSAVE   ANOP                                                           54825000
         AIF ('&IPCELL' EQ '').SINIT2                                   54850000
         AIF ('&IPCELL'(1,1) NE '(').SINIT2                             54900000
.*       MUST BE A REGISTER                                             54950000
&IPCELL  SETC   '&IPCELL'(2,K'&IPCELL-2)  STRIP PARENS                  55000000
         ST     &IPCELL,0(0,1) .MOVE PRIMARY CELL COUNT TO PARMLIST     55025000
.*                                                                      55050000
.SINIT2  ANOP                                                           55100000
         AIF ('&ISCELL' EQ '').SINIT3                                   55150000
         AIF ('&ISCELL'(1,1) NE '(').SINIT3                             55200000
.*       MUST BE A REGISTER                                             55250000
&ISCELL  SETC   '&ISCELL'(2,K'&ISCELL-2)  STRIP PARENS                  55300000
         ST     &ISCELL,4(0,1) .MOVE SECONDARY COUNT TO PARMLIST        55325000
.*                                                                      55350000
.SINIT3  ANOP                                                           55400000
         AIF ('&ICSIZE' EQ '').SINIT4                                   55450000
         AIF ('&ICSIZE'(1,1) NE '(').SINIT4                             55500000
.*       MUST BE A REGISTER                                             55550000
&ICSIZE  SETC   '&ICSIZE'(2,K'&ICSIZE-2)  STRIP PARENS                  55600000
         ST     &ICSIZE,8(0,1) .MOVE CELL SIZE TO PARMLIST              55625000
.*                                                                      55650000
.SINIT4  ANOP                                                           55700000
.*                                                                      55750000
.*       CHECK  SUBPOOL AND KEY PROCESSING                              55800000
.*       MUST BE A REGISTER FOR ANY WORK TO BE DONE.  NO FLAG           55850000
.*       PROCESSING IS NECESSARY SINCE IT WAS DONE IN THE DECLARE.      55900000
.*                                                                      55950000
         AIF ('&ISP' EQ '').SINITB1        SP NOT SPECIFIED             56000000
         AIF ('&ISP'(1,1) NE '(').SINITB1  NOT IN A REGISTER            56050000
.*                                                                      56100000
.*                  SUBPOOL CHANGE REQUIRED                             56150000
.*                                                                      56200000
&ISP     SETC   '&ISP'(2,K'&ISP-2)  STRIP PARENS                        56250000
         STC    &ISP,12(0,1)      .STORE SUBPOOL ID IN PARMLIST         56275000
.SINITB1 ANOP                                                           56300000
         AIF ('&IKEY' EQ '').SINIT5      KEY NOT SPECIFIED              56350000
         AIF ('&IKEY'(1,1) NE '(').SINIT5  NOT A REGISTER               56400000
.*                                                                      56450000
.*                  KEY  CHANGE REQUIRED                                56500000
.*                                                                      56550000
&IKEY    SETC   '&IKEY'(2,K'&IKEY-2)  STRIP PARENS                      56600000
         STC    &IKEY,13(0,1)      .STORE KEY IN PARMLIST               56626900
.*                                                                      56653800
.SINIT5  ANOP                      CHECK TCB PARAMETER                  56680700
         AIF ('&ITCB' EQ '').SINIT6 TCB NOT SPECIFIED                   56707600
         AIF ('&ITCB'(1,1) NE '(').SINIT51  NOT A REGISTER              56734500
.*       A REGISTER                                                     56761400
&ITCB    SETC   '&ITCB'(2,K'&ITCB-2)  STRIP PARENS                      56788300
         ST     &ITCB,16(0,1) .MOVE TCB ADDR TO PARMLIST                56815200
         AGO    .SINIT6                                                 56842100
.SINIT51 ANOP                      NOT A REGISTER                       56869000
         L      14,&ITCB     .TCB ADDRESS                               56895900
         ST     14,16(0,1)   .MOVE TCB ADDR TO PARMLIST                 56922800
.*                                                                      56950000
.SINIT6  ANOP                                                           57000000
.*                                                                      57050000
.*       SET UP HEADER IF SPECIFIED                                     57100000
.*                                                                      57150000
         AIF ('&IHDR' EQ '').GCALL          NO HEADER INFORMATION       57200000
         AIF ('&IHDR'(1,1) EQ '''').GCALL CHARACTER CONSTANT HEADER     57250000
         AIF ('&IHDR'(1,1) EQ '(').SINIT7  HDR ADDRESS IN A REGISTER    57300000
.*                                                                      57350000
.* RX-TYPE ADDRESS REPRESENTING THE HEADER                              57400000
.*                                                                      57450000
         MVC    20(24,1),&IHDR    .MOVE HEADER TO PARAMETER LIST        57500000
         AGO    .GCALL             GENERATE CALL TO ROUTINE             57600000
.*                                                                      57650000
.SINIT7  ANOP HEADER ADDRESS IN A REGISTER                              57700000
.*                                                                      57750000
         MVC    20(24,1),0&IHDR   .MOVE HEADER TO PARAMETER LIST        57800000
         AGO    .GCALL             GENERATE CALL TO ROUTINE             57850000
.*                                                                      57900000
.GEXEC   ANOP                                                           57950000
.********************************************************************** 58000000
.*                                                                      58050000
.* EXECUTE FORM OF BUILD                                                58100000
.*                                                                      58150000
.********************************************************************** 58200000
         AIF ('&IMF2'(1,1) EQ '(').GEXEC2                               58588800
         LA     1,&IMF2           .PARAMETER LIST ADDRESS               58633200
         AGO    .GINIT1                                                 58677600
.GEXEC2  ANOP                      PARAMETER LIST ADDRESS IN A REG      58722000
&IMF2    SETC   '&IMF2'(2,K'&IMF2-2)  STRIP PARENS                      58766400
         AIF ('&IMF2' EQ '1').GINIT1 ALREADY IN REGISTER 1              58810800
         LR     1,&IMF2           .PARAMETER LIST ADDRESS               58855200
.GINIT1  ANOP                                                           58900000
.GEXEC1  ANOP                                                           58925000
.*                                                                      58950000
.*     GENERATE CODE TO SET UP THE PRIMARY CELL COUNT, IF NECESSARY     59000000
.*                                                                      59050000
         AIF ('&IPCELL' EQ '').GINIT2                                   59100000
         AIF ('&IPCELL'(1,1) EQ '(').GINIT1B  A REGISTER                59150000
         AIF (T'&IPCELL NE 'N').GINIT1A       NOT A NUMBER              59200000
         AIF (&IPCELL LE 4095).GINIT1C        LESS THAN 4095            59250000
.GINIT1A ANOP                      NOT A NUMBER                         59300000
         L      14,=A(&IPCELL)    .PRIMARY CELL COUNT                   59350000
         ST     14,0(0,1)         .MOVE COUNT IN PARM LIST              59400000
         AGO    .GINIT2            CONTINUE INITIALIZATION              59450000
.GINIT1B ANOP                      A REGISTER                           59500000
&IPCELL  SETC   '&IPCELL'(2,K'&IPCELL-2)  STRIP PARENS                  59550000
         ST     &IPCELL,0(0,1) .MOVE PRIMARY CELL COUNT TO PARMLIST     59600000
         AGO    .GINIT2            CONTINUE INITIALIZATION              59650000
.GINIT1C ANOP                      A NUMBER LESS THAN 4095              59700000
         LA     14,&IPCELL.(0,0)  .MOVE PRIMARY CELL COUNT              59750000
         ST     14,0(0,1)         .MOVE PRIMARY CELL COUNT TO PARMLIST  59800000
.*                                                                      59900000
.*     GENERATE CODE TO SET UP THE SECONDARY CELL COUNT, IF NECESSARY   59950000
.*                                                                      60000000
.GINIT2  ANOP                                                           60050000
         AIF ('&ISCELL' EQ '').GINIT3  SCELLCT NOT SPECIFIED            60100000
         AIF ('&ISCELL'(1,1) EQ '(').GINIT2B  A REGISTER                60150000
         AIF (T'&ISCELL NE 'N').GINIT2A       NOT A NUMBER              60200000
         AIF (&ISCELL LE 4095).GINIT2C        LESS THAN 4095            60250000
.GINIT2A ANOP                      NOT A NUMBER                         60300000
         L      14,=A(&ISCELL)    .SECONDARY CELL COUNT                 60350000
         ST     14,4(0,1)         .MOVE COUNT IN PARM LIST              60400000
         AGO    .GINIT3            CONTINUE INITIALIZATION              60450000
.GINIT2B ANOP                      A REGISTER                           60500000
&ISCELL  SETC   '&ISCELL'(2,K'&ISCELL-2)  STRIP PARENS                  60550000
         ST     &ISCELL,4(0,1) .MOVE SECONDARY COUNT TO PARMLIST        60600000
         AGO    .GINIT3            CONTINUE INITIALIZATION              60650000
.GINIT2C ANOP                      A NUMBER LESS THAN 4095              60700000
         LA     14,&ISCELL.(0,0)  .MOVE SECONDARY CELL COUNT            60750000
         ST     14,4(0,1)         .MOVE SECONDARY COUNT TO PARMLIST     60800000
.*                                                                      60900000
.*     GENERATE CODE TO SET UP THE CELL SIZE, IF NECESSARY              60950000
.*                                                                      61000000
.GINIT3  ANOP                                                           61050000
         AIF ('&ICSIZE' EQ '').GINIT4                                   61100000
         AIF ('&ICSIZE'(1,1) EQ '(').GINIT3B  A REGISTER                61200000
         AIF (T'&ICSIZE NE 'N').GINIT3A       NOT A NUMBER              61250000
         AIF (&ICSIZE LE 4095).GINIT3C        LESS THAN 4095            61300000
.GINIT3A ANOP                      NOT A NUMBER                         61350000
         L      14,=A(&ICSIZE)    .CELL SIZE                            61400000
         ST     14,8(0,1)         .MOVE SIZE IN PARM LIST               61450000
         AGO    .GINIT4            CONTINUE INITIALIZATION              61500000
.GINIT3B ANOP                      A REGISTER                           61550000
&ICSIZE  SETC   '&ICSIZE'(2,K'&ICSIZE-2)  STRIP PARENS                  61600000
         ST     &ICSIZE,8(0,1) .MOVE CELL SIZE TO PARMLIST              61650000
         AGO    .GINIT4            CONTINUE INITIALIZATION              61700000
.GINIT3C ANOP                      A NUMBER LESS THAN 4095              61750000
         LA     14,&ICSIZE.(0,0)  .MOVE CELL SIZE                       61800000
         ST     14,8(0,1)         .MOVE CELL SIZE TO PARMLIST           61850000
.*                                                                      61950000
.*     GENERATE CODE TO SET UP THE SUBPOOL NUMBER AND THE KEY NUMBER.   62000000
.*     IF NECESSARY.                                                    62050000
.*                                                                      62100000
.GINIT4  ANOP                                                           62150000
         AIF ('&ISP' EQ '').GINIT4Z        NO SUBPOOL SPECIFIED         62200000
         AIF ('&ISP'(1,1) EQ '(').GINIT4B  A REGISTER                   62250000
         AIF (T'&ISP EQ 'N').GINIT4C       A NUMBER                     62300000
.GINIT4A ANOP                      NOT A NUMBER                         62350000
         L      14,=A(&ISP)       .SUBPOOL                              62400000
         STC    14,12(0,1)        .MOVE SP IN PARM LIST                 62450000
         AGO    .GINIT4Z           CONTINUE INITIALIZATION              62500000
.GINIT4B ANOP                      A REGISTER                           62550000
&ISP     SETC   '&ISP'(2,K'&ISP-2)  STRIP PARENS                        62600000
         STC    &ISP,12(0,1)      .MOVE SP TO PARMLIST                  62650000
         AGO    .GINIT4Z           CONTINUE INITIALIZATION              62700000
.GINIT4C ANOP                      A NUMBER LESS THAN 256               62750000
         MVI    12(1),&ISP        .MOVE SP TO PARMLIST                  62800000
.GINIT4Z ANOP                                                           62850000
         AIF ('&IKEY' EQ '').GINIT42  NO SUBPOOL SPECIFIED              62900000
         AIF ('&IKEY'(1,1) EQ '(').GINIT4Y  A REGISTER                  62950000
         AIF (T'&IKEY EQ 'N').GINIT4W       A NUMBER LESS THAN 16       63000000
.GINIT4X ANOP                      NOT A NUMBER                         63050000
         L      14,=A(&IKEY)      .KEY                                  63100000
         STC    14,13(0,1)        .MOVE KEY IN PARM LIST                63150000
         AGO    .GINIT42           CONTINUE INITIALIZATION              63200000
.GINIT4Y ANOP                      A REGISTER                           63250000
&IKEY    SETC   '&IKEY'(2,K'&IKEY-2)  STRIP PARENS                      63300000
         STC    &IKEY,13(0,1)      .MOVE KEY TO PARMLIST                63350000
         AGO    .GINIT42           CONTINUE INITIALIZATION              63400000
.GINIT4W ANOP                      A NUMBER LESS THAN 4095              63450000
         MVI    13(1),&IKEY       .MOVE KEY TO PARMLIST                 63500000
.*                                                                      65500000
.*     GENERATE CODE TO SET UP THE FLAG INDICATORS, IF NECESSARY        65550000
.*                                                                      65600000
.GINIT42 ANOP SET UP FLAGS                                              65650000
         AIF ('&LOC' EQ '' AND '&ITCB' EQ '' AND '&IKEY' EQ '' AND     +65700000
               '&IHDR' EQ '' AND '&OWNER' EQ '').GINIT6 NO FLAG        +65705300
                                           CHANGES                 @L3C 65710600
.*                                                                      65715900
.* If LOC or OWNER is specified (or BOTH), it may be necessary          65716600
.* to clear out portions of the parameter list prior to ORing in        65717300
.* the proper bits. When the OR value is represented by all 1's,        65718000
.* it is not necessary to AND out the bits. This is the case for        65718700
.* LOC=(31,31) or OWNER=SYSTEM. In those cases, the AND is not          65719400
.* done for those bits.                                                 65720100
.*                                                                      65720800
         AIF   ('&LOC' EQ '' AND '&OWNER' EQ '').GINIT44           @L2A 65721500
         AIF   ('&LOC' EQ '' OR '&OWNER' EQ '').GINIT46            @L2A 65722800
.*                                                                      65730400
.*     Both LOC and OWNER changed, so must zero out both in parmlist    65738000
.*     unless LOC(31,31) LOC(31,64) or OWNER(SYSTEM)                    65745600
.*                                                                      65753200
         AIF   ('&IBANY' EQ '1' AND '&IBLOC' EQ '11').GINIT46      @L2A 65760800
         AIF   ('&IBOWN' EQ '11').GINIT46                          @L2A 65768400
         NI    14(1),X'1C'        .ZERO OUT LOC and OWNER bits     @L2A 65776000
         AGO   .GINIT44            Turn on flags                   @L2A 65783600
.GINIT46 ANOP                      TEST FOR ONE FLAG ONLY               65791200
         AIF ('&LOC' EQ '').GINIT43        LOC NOT CHANGED              65800000
.*                                                                      65850000
.*     LOC changed so must zero it out in parmlist                      65883300
.*     if not LOC=(31,31) or LOC=(31,64)                                65916600
.*                                                                      65950000
         AIF ('&IBANY' EQ '1' AND '&IBLOC' EQ '11').GINIT43             66000000
         NI    14(1),X'1F'        .ZERO OUT LOC BITS               @L2A 66050000
.GINIT43 ANOP                      OR IN FLAGS                          66100000
         AIF ('&OWNER' EQ '').GINIT44        OWNER NOT CHANGED     @L2A 66105500
.*                                                                      66111000
.*   OWNER changed so must zero it out in parmlist if not OWNER=SYSTEM  66116500
.*                                                                      66122000
         AIF ('&IBOWN' EQ '11').GINIT44                            @L2A 66127500
         NI    14(1),X'FC'        .ZERO OUT OWNER BITS             @L2A 66133000
.GINIT44 ANOP                      OR IN FLAGS                     @L2A 66138500
         AIF   ('&IBFLAG'(2,9) EQ '00000000').GINIT5               @L2A 66144000
         OI    14(1),B&IBFLAG     .SET REQUIRED INDICATORS              66150000
         AGO    .GINIT5            CONTINUE INITIALIZATION              66200000
.*                                                                      66550000
.*     GENERATE CODE TO SET UP THE TCB ADDRESS, IF NECESSARY            66600000
.*                                                                      66650000
.GINIT5  ANOP                      SP NOT SPECIFIED                     66700000
         AIF   ('&IBFLAGA'(2,9) EQ '00000000').GINIT5A             @L3A 66710000
         OI    15(1),B&IBFLAGA    .SET REQUIRED INDICATORS         @L3A 66720000
         AGO    .GINIT5A           CONTINUE INITIALIZATION         @L3A 66730000
.GINIT5A ANOP                      No 2nd flags                    @L3A 66740000
         AIF ('&ITCB' EQ '').GINIT6                                     66750000
         AIF ('&ITCB'(1,1) EQ '(').GINIT5B  A REGISTER                  66800000
         L      14,=A(&ITCB)      .TCB ADDRESS                          66850000
         ST     14,16(0,1)        .MOVE TCB ADDR TO PARM LIST           66883300
.*                                                            @ZA92248  66916600
         AGO    .GINIT6            CONTINUE INITIALIZATION              66950000
.GINIT5B ANOP                      A REGISTER                           67000000
&ITCB    SETC   '&ITCB'(2,K'&ITCB-2)  STRIP PARENS                      67050000
         ST     &ITCB,16(0,1) .MOVE TCB ADDR TO PARMLIST                67100000
.*                                                                      67250000
.*     GENERATE CODE TO SET UP THE HEADER, IF NECESSARY                 67300000
.*                                                                      67350000
.GINIT6  ANOP                                                           67400000
.*                                                                      67450000
.*      PROCESS HEADER                                                  67500000
.*                                                                      67550000
         AIF ('&IHDR' EQ '').GCALL          NO HEADER INFORMATION       67600000
         AIF ('&IHDR'(1,1) NE '''').GINIT7    NOT A CHARACTER CONSTANT  67650000
.*                                                                      67700000
.*      CHARACTER CONSTANT HEADER                                       67750000
.*                                                                      67800000
&IHDR    SETC   '&IHDR'(2,K'&IHDR-2)    STRIP QUOTES                    67850000
&IHDR    SETC   '&IHDR'.'                        '''                    67862500
&IHDR    SETC   ''''.'&IHDR'(1,24).''''                                 67875000
         MVC    20(24,1),=C&IHDR        .MOVE HDR TO PARMLIST           67887500
         AGO    .GCALL                                                  67900000
.GINIT7  ANOP                      NOT A CHARACTER CONSTANT             67950000
         AIF ('&IHDR'(1,1) EQ '(').GINIT8  HDR ADDR IN A REGISTER       68000000
.*                                                                      68050000
.*      RX-TYPE ADDRESS REPRESENTING THE HEADER                         68100000
.*                                                                      68150000
         MVC    20(24,1),&IHDR    .MOVE HEADER TO PARAMETER LIST        68200000
         AGO    .GCALL             GENERATE CALL TO ROUTINE             68250000
.GINIT8  ANOP                      HDR ADDRESS IN A REGISTER            68300000
         MVC    20(24,1),0&IHDR   .MOVE HEADER TO PARAMETER LIST        68350000
.GCALL   ANOP                                                           68450000
.********************************************************************** 68500000
.*                                                                      68550000
.*   GENERATE CALL TO THE APPROPRIATE BUILD ROUTINE                     68600000
.*                                                                      68650000
.********************************************************************** 68700000
         AIF ('&ILINK' NE 'BRANCH').GCALL1   SYSTEM LINKAGE             68750000
.********************************************************************** 68800000
.*       BUILD  FUNCTION WITH BRANCH LINKAGE                            68850000
.*       ADDRESS IS IN CVTCPBDB                                         68900000
.********************************************************************** 68950000
         L      15,16(0,0)        .ADDRESS OF CVT POINTER FIELD         69000000
         L      15,1152(0,15)     .ADDRESS OF BUILD  ROUTINE            69050000
         BASR   14,15             .BUILD  REQUEST                       69100000
         AGO    .GCALL4                                                 69150000
.********************************************************************** 69200000
.GCALL1  ANOP              BUILD  SYSTEM LINKAGE                        69250000
.********************************************************************** 69300000
         ESAR   15                .SAVE SECONDARY ASN                   69316600
         STM    15,12,16(13)      .SAVE REGISTERS                       69333200
         L      2,16(0,0)         .CVT ADDRESS                          69350000
         L      2,772(,2)         .ADDRESS SYSTEM LINKAGE TABLE         69400000
         L      2,76(,2)          .OBTAIN PC NUMBER                     69450000
         PC     0(2)              .PC TO IGVCPBDP                       69500000
         L      2,16(0,13)        .RESTORE SECONDARY ASN                69525000
         SSAR   2                 .RESTORE SECONDARY ASN                69550000
         LM     1,12,24(13)       .RESTORE REGISTERS                    69575000
.GCALL4  ANOP                                                           69600000
         AIF ('&ICPID' EQ '').GCALL3  DO NOT SAVE CELL POOL ID          69650000
         AIF ('&ICPID'(1,1) EQ '(').GCALL2 SPECIFIED AS A REGISTER      69700000
         ST     0,&ICPID          .SAVE CELL POOL ID                    69750000
         MEXIT                                                          69800000
.GCALL2  ANOP                                                           69850000
&ICPID   SETC   '&ICPID'(2,K'&ICPID-2)  STRIP PARENS                    69900000
         AIF ('&ICPID' EQ '0').GCALL3 SPECIFIED AS REGISTER 0           69950000
         LR     &ICPID,0          .SAVE CELL POOL ID                    70000000
         MEXIT                     MACRO IS COMPLETE                    70050000
.GCALL3  ANOP                                                           70100000
         MEXIT                     MACRO IS COMPLETE                    70550000
.*                                                                      70551600
.********************************************************************** 70553200
.*                                                                      70554800
.* This routine is called when the LIST function was not specified.     70556400
.* It makes sure that none of the keywords that are only allowed with   70558000
.* LIST have been specified.                                     @D1A   70559600
.*                                                                      70561200
.********************************************************************** 70562800
.*                                                                      70564400
.NOLISTK ANOP                      Entry to "subroutine"         @D1A   70566000
.*                                                                      70569200
         AIF ('&WORKAREA' EQ '').NOLIST1  Jump if WORKAREA not          70570800
.*                                        specified              @D1A   70572400
         MNOTE 12,'IHB323 ''WORKAREA''&IINVAL''&IFUNC''.&NOTEXT' @D1A   70572900
&ERROR   SETA  12                  Set error code                @D1A   70573400
.*                                                                      70574000
.NOLIST1 ANOP                      Here to check whether VERIFY         70575600
.*                                 was specified                 @D1A   70577200
         AIF ('&VERIFY' EQ '').NOLIST2    Jump if VERIFY not            70577800
.*                                        specified              @D1A   70578400
         MNOTE 12,'IHB323 ''VERIFY''&IINVAL''&IFUNC''.&NOTEXT'   @D1A   70579000
&ERROR   SETA  12                  Set error code                @D1A   70579600
.*                                                                      70580400
.NOLIST2 ANOP                                                    @D1A   70580800
         AGO .RNOLIST               Return                       @D1A   70581200
.*                                                                      70581600
.********************************************************************** 70582000
.*                                                                      70583600
.* This routine is called when the LIST parameter was specified.  It    70584100
.* takes care of all the processing for a CPOOL LIST request.    @D1A   70584600
.*                                                                      70585200
.********************************************************************** 70591600
.*                                                                      70593200
.CPLIST  ANOP                      Entry to "subroutine"         @D1A   70594800
.*                                                                      70596400
&IFUNC   SETC 'LIST'               Note that LIST was specified  @D1A   70596500
.*                                                                      70596600
.* Check to make sure that only the parameters allowed with LIST        70596700
.* are specified.                                                @D1A   70596800
.*                                                                      70596900
         AGO .LSTONLY                                                   70597000
.RLSTONL ANOP                      Return point for LSTONLY      @D1A   70597100
.*                                                                      70597200
.* Validate the LIST keywords.                                   @D1A   70597300
.*                                                                      70597400
         AGO .VALKEY                                                    70597500
.RVALKEY ANOP                      Return point for VALKEY       @D1A   70597600
.*                                                                      70597700
.* Generate code if there were no severe errors                  @D1A   70597800
.*                                                                      70597900
         AIF (&ERROR NE 0).CPLST1  Branch if there were errors   @D1A   70598000
         AGO .GENCDE                                                    70598100
.RGENCDE ANOP                      Return point for GENCDE       @D1A   70598200
.CPLST1  ANOP                                                           70598300
.*                                                                      70598400
         MEXIT                     We're all finished            @D1A   70598500
.*                                                                      70598600
.********************************************************************** 70598700
.*                                                                      70598800
.* This routine checks to make sure that only the parameters allowed    70598900
.* with LIST are specified.                                      @D1A   70599000
.*                                                                      70599100
.********************************************************************** 70599200
.*                                                                      70599300
.LSTONLY ANOP                      Entry to "subroutine"         @D1A   70599400
.*                                                                      70599500
         AIF (N'&SYSLIST LE 1 AND N'&TYPE LE 1).LSTONL1 Jump if not     70599600
.*                                     too many pos. parms       @D1A   70599700
         MNOTE 12,'&TAG TOO MANY POSITIONAL PARAMETERS SPECIFIED.' @P1C 70599800
&ERROR   SETA  12                  Set error code                @D1A   70599900
.*                                                                      70600000
.LSTONL1 ANOP                      See whether PCELLCT was spec. @D1A   70600100
         AIF ('&PCELLCT' EQ '').LSTONL2 Jump if PCELLCT not spec @D1A   70600200
.*                                                               @D1A   70600300
         MNOTE 12,'&TAG PCELLCT &NOTWLIST'                       @D1A   70600400
.*                                                                      70600500
&ERROR   SETA  12                  Set error code                @D1A   70600600
.*                                                                      70600700
.LSTONL2 ANOP                      See whether SCELLCT was spec. @D1A   70600800
         AIF ('&SCELLCT' EQ '').LSTONL3 Jump if SCELLCT not spec @D1A   70600900
.*                                                               @D1A   70601000
         MNOTE 12,'&TAG SCELLCT &NOTWLIST'                       @D1A   70601100
.*                                                                      70601200
&ERROR   SETA  12                  Set error code                @D1A   70601300
.*                                                                      70601400
.LSTONL3 ANOP                      See whether CSIZE was spec.   @D1A   70601500
         AIF ('&CSIZE' EQ '').LSTONL4 Jump if CSIZE not spec.    @D1A   70601600
.*                                                               @D1A   70601700
         MNOTE 12,'&TAG CSIZE &NOTWLIST'                         @D1A   70601800
.*                                                                      70601900
&ERROR   SETA  12                  Set error code                @D1A   70602000
.*                                                                      70602100
.LSTONL4 ANOP                      See whether SP was spec.      @D1A   70602200
         AIF ('&SP' EQ '').LSTONL5 Jump if SP not spec.          @D1A   70602300
.*                                                               @D1A   70602400
         MNOTE 12,'&TAG SP &NOTWLIST'                            @D1A   70602500
.*                                                                      70602600
&ERROR   SETA  12                  Set error code                @D1A   70602700
.*                                                                      70602800
.LSTONL5 ANOP                      See whether LOC was spec.     @D1A   70602900
         AIF ('&LOC' EQ '').LSTONL6 Jump if LOC not spec.        @D1A   70603000
.*                                                               @D1A   70603100
         MNOTE 12,'&TAG LOC &NOTWLIST'                           @D1A   70603200
.*                                                                      70603300
&ERROR   SETA  12                  Set error code                @D1A   70603400
.*                                                                      70603500
.LSTONL6 ANOP                      See whether CELL was spec.    @D1A   70603600
         AIF ('&CELL' EQ '').LSTONL7 Jump if CELL not spec.      @D1A   70603700
.*                                                               @D1A   70603800
         MNOTE 12,'&TAG CELL &NOTWLIST'                          @D1A   70603900
.*                                                                      70604000
&ERROR   SETA  12                  Set error code                @D1A   70604100
.*                                                                      70604200
.LSTONL7 ANOP                      See whether KEY was spec.     @D1A   70604300
         AIF ('&KEY' EQ '').LSTONL8 Jump if KEY not spec.        @D1A   70604400
.*                                                               @D1A   70604500
         MNOTE 12,'&TAG KEY &NOTWLIST'                           @D1A   70604600
.*                                                                      70604700
&ERROR   SETA  12                  Set error code                @D1A   70604800
.*                                                                      70604900
.LSTONL8 ANOP                      See whether TCB was spec.     @D1A   70605000
         AIF ('&TCB' EQ '').LSTONL9 Jump if TCB not spec.        @D1A   70605100
.*                                                               @D1A   70605200
         MNOTE 12,'&TAG TCB &NOTWLIST'                           @D1A   70605300
.*                                                                      70605400
&ERROR   SETA  12                  Set error code                @D1A   70605500
.*                                                                      70605600
.LSTONL9 ANOP                      See whether HDR was spec.     @D1A   70605700
         AIF ('&HDR' EQ '').LSTON10 Jump if HDR not spec.        @D1A   70605800
.*                                                               @D1A   70605900
         MNOTE 12,'&TAG HDR &NOTWLIST'                           @D1A   70606000
.*                                                                      70606100
&ERROR   SETA  12                  Set error code                @D1A   70606200
.*                                                                      70606300
.LSTON10 ANOP                      See whether LINKAGE was spec. @D1A   70606400
         AIF ('&LINKAGE' EQ '').LSTON11 Jump if LINKAGE not spec. @D1A  70606500
.*                                                               @D1A   70606600
         MNOTE 12,'&TAG LINKAGE &NOTWLIST'                       @D1A   70606700
.*                                                                      70606800
&ERROR   SETA  12                  Set error code                @D1A   70606900
.*                                                                      70607000
.LSTON11 ANOP                      See whether MF was spec.      @D1A   70607100
         AIF ('&MF' EQ '').LSTON12 Jump if MF not spec.          @D1A   70607200
.*                                                               @D1A   70607300
         MNOTE 12,'&TAG MF &NOTWLIST'                            @D1A   70607400
.*                                                                      70607500
&ERROR   SETA  12                  Set error code                @D1A   70607600
.*                                                                      70607700
.LSTON12 ANOP                      See whether REGS was spec.    @D1A   70607800
         AIF ('&REGS' EQ '').LSTON13 Jump if REGS not spec.      @D1A   70607900
.*                                                               @D1A   70608000
         MNOTE 12,'&TAG REGS &NOTWLIST'                          @D1A   70608100
.*                                                                      70608200
&ERROR   SETA  12                  Set error code                @D1A   70608300
.*                                                                      70608400
.LSTON13 ANOP                                                           70608500
         AGO   .RLSTONL            Return                        @D1A   70608600
.*                                                                      70608700
.*                                                                      70608800
.********************************************************************** 70608900
.*                                                                      70609000
.* This routine validates the CPOOL LIST keywords and assigns their     70609100
.* values to the appropriate internal variables.  If an error is        70609200
.* detected, ERROR is set.                                       @D1A   70609300
.*                                                                      70609400
.********************************************************************** 70609500
.*                                                                      70609600
.VALKEY  ANOP                      Entry to "subroutine"         @D1A   70609700
.*                                                                      70609800
         AGO .CKCPID               Check the CPID keyword        @D1A   70609900
.RCKCPID ANOP                      Return point for CKCPID       @D1A   70610000
.*                                                                      70610100
         AGO .CKVER                Check the VERIFY keyword      @D1A   70610200
.RCKVER  ANOP                      Return point for CKVER        @D1A   70610300
.*                                                                      70610400
         AGO .CKWRK                Check the WORKAREA keyword    @D1A   70610500
.RCKWRK  ANOP                      Return point for CKWORK       @D1A   70610600
.*                                                                      70610700
         AGO .RVALKEY              Return                        @D1A   70610800
.*                                                                      70610900
.********************************************************************** 70611000
.*                                                                      70611100
.* This routine validates the CPID parameter.                    @D1A   70611200
.*                                                                      70611300
.********************************************************************** 70611400
.*                                                                      70611500
.CKCPID  ANOP                      Entry to "subroutine"         @D1A   70611600
.*                                                                      70611700
         AIF ('&CPID' EQ '').NOCPID Branch if CPID not specified @D1A   70611800
.*                                                                      70611900
.* If execution reaches this point, CPID was specified.                 70612000
.* Note that since we let the user specify the CPID in a register,      70612100
.* things get rather tricky here.  We have to allow the user to         70612200
.* specify the CPID in a register (e.g. "CPID=(2)"), and we don't       70612300
.* want to lose the outer parentheses when setting ICPID if that        70612400
.* is the case.  However, we don't want to be fooled by things like     70612500
.* "()", "(X,Y)", "(,Z)", and so forth.                                 70612600
.*                                                                      70612700
&ERRFLAG SETA &FALSE               Note no errors so far         @D1A   70612800
&ICPID   SETC '&CPID'              Get the CPID                  @D1A   70612900
         AIF ('&CPID(1)' NE '').CKCPID1 Branch if the first argument    70613000
.*                                      with CPID is not blank   @D1A   70613100
.*                                                                      70613200
.* Here if the first argument specified is blank                 @D1A   70613300
.*                                                                      70613400
&ERROR   SETA 12                   Set error code                @D1A   70613500
&ERRFLAG SETA &TRUE                Note error with CPID          @D1A   70613600
         AIF (N'&CPID GT 1).CKCPID2 Branch if more than one arg  @D1A   70613700
         MNOTE 12,'&TAG &ARGWITH CPID IS BLANK.'                 @P1C   70613800
         AGO  .CKCPID3             Branch around other MNOTE     @D1A   70613900
.CKCPID2 MNOTE 12,'&TAG &ARG1WITH CPID IS BLANK.'                @P1C   70614000
.*                                                                      70614100
.CKCPID3 ANOP                      Check for too many arguments  @D1A   70614200
.CKCPID1 ANOP                      Check for too many arguments  @D1A   70614300
         AIF (N'&CPID EQ 1).CKCPID4 Branch if not too many       @D1A   70614400
.*                                                                      70614500
.* Here if too many arguments were specified.                    @D1A   70614600
.*                                                                      70614700
         MNOTE 4,' &TAG &TOOMANY CPID PARAMETER.'                @P1C   70614900
         AIF (&ERRFLAG EQ &TRUE).CKCPID5 Branch if we had errors @D1A   70615000
.*                                                                      70615100
.* Here if the only error was too many arguments                 @D1A   70615200
.*                                                                      70615300
&ICPID   SETC '&CPID(1)'           Truncate                      @D1A   70615400
         MNOTE 4,'&NTAG  CPID &TRUNC CPID=&ICPID.'               @D1A   70615500
.CKCPID5 ANOP                                                    @D1A   70615600
.CKCPID4 ANOP                                                    @D1A   70615700
.*                                                                      70615800
.* If CPID was not completely blank, we'll end up here                  70615900
.* eventually.                                                   @D1A   70616000
.*                                                                      70616100
         AGO  .ECKCPID             Branch to end of routine      @D1A   70616200
.NOCPID  ANOP                      Here if no CPID specified     @D1A   70616300
         MNOTE 12,'&TAG CPID MUST BE SPECIFIED WITH LIST.'       @P1C   70616400
&ERROR   SETA 12                   Set error code                @D1A   70616500
.ECKCPID ANOP                      End of CKCPID                 @D1A   70616600
         AGO .RCKCPID              Return                        @D1A   70616700
.*                                                                      70616800
.********************************************************************** 70616900
.*                                                                      70617000
.* This routine validates the VERIFY parameter.                  @D1A   70617100
.*                                                                      70617200
.********************************************************************** 70617300
.*                                                                      70617400
.CKVER   ANOP                      Entry to "subroutine"         @D1A   70617500
.*                                                                      70617600
         AIF ('&VERIFY' EQ '').NOVER  Branch if VERIFY not spec    @D1A 70617700
.*                                                                      70617800
.* If execution reaches this point, VERIFY was specified.               70617900
.*                                                                      70618000
&ERRFLAG SETA &FALSE               Note no errors so far         @D1A   70618100
&IVERIFY SETC '&VERIFY(1)'         Get first argument            @D1A   70618200
         AIF ('&IVERIFY' NE '').CKVER3   Branch if arg not blank @D1A   70618300
.*                                                                      70618400
.* Here if the first argument specified is blank                 @D1A   70618500
.*                                                                      70618600
&ERROR   SETA 12                   Set error code                @D1A   70618700
&ERRFLAG SETA &TRUE                Note error with VERIFY        @D1A   70618800
         AIF (N'&VERIFY GT 1).CKVER2 Branch if more than one arg @D1A   70618900
         MNOTE 12,'&TAG &ARGWITH VERIFY IS BLANK.'               @P1C   70619000
         AGO  .CKVER3              Branch around other MNOTE     @D1A   70619100
.CKVER2 MNOTE 12,'&TAG &ARG1WITH VERIFY IS BLANK.'               @P1C   70619200
.*                                                                      70619300
.CKVER3 ANOP                       Check for YES or NO           @D1A   70619400
        AIF ('&IVERIFY' EQ 'YES').CKVER1 Branch if YES was given @D1A   70619500
        AIF ('&IVERIFY' EQ 'NO').CKVER1  Branch if NO was given  @D1A   70619600
.*                                                                      70619700
.* Here if the argument given with VERIFY was neither YES nor NO @D1A   70619800
.*                                                                      70619900
&ERROR   SETA 12                   Set error code                @D1A   70620000
&ERRFLAG SETA &TRUE                Note error with VERIFY        @D1A   70620100
         MNOTE 12,'&TAG VERIFY PARAMETER MUST BE YES OR NO.'     @P1C   70620200
.*                                                                      70620300
.CKVER1 ANOP                       Check for too many arguments  @D1A   70620400
         AIF (N'&VERIFY EQ 1).CKVER4 Branch if not too many      @D1A   70620500
.*                                                                      70620600
.* Here if too many arguments were specified.                    @D1A   70620700
.*                                                                      70620800
         MNOTE 4,' &TAG &TOOMANY VERIFY PARAMETER.'              @P1C   70621000
         AIF (&ERRFLAG EQ &TRUE).CKVER5 Branch if we had errors @D1A    70621100
.*                                                                      70621200
.* Here if the only error was too many arguments                 @D1A   70621300
.*                                                                      70621400
         MNOTE 4,'&NTAG  VERIFY &TRUNC VERIFY=&IVERIFY.'         @D1A   70621500
.CKVER5 ANOP                                                     @D1A   70621600
.CKVER4 ANOP                                                     @D1A   70621700
.*                                                                      70621800
.* If VERIFY was not completely blank, we'll end up here                70621900
.* eventually.                                                   @D1A   70622000
.*                                                                      70622100
         AGO  .ECKVER              Branch to end of routine      @D1A   70622200
.NOVER   ANOP                      Here if VERIFY not specified  @D1A   70622300
&IVERIFY SETC 'NO'                 Use the default               @D1A   70622400
.ECKVER ANOP                       End of CKVER                  @D1A   70622500
         AGO .RCKVER               Return                        @D1A   70622600
.*                                                                      70622700
.********************************************************************** 70622800
.*                                                                      70622900
.* This routine validates the WORKAREA parameter.                @D1A   70623000
.*                                                                      70623100
.********************************************************************** 70623200
.*                                                                      70623300
.CKWRK   ANOP                      Entry to "subroutine"         @D1A   70623400
.*                                                                      70623500
         AIF ('&WORKAREA' EQ '').NOWRK Branch if WORKAREA not spec @D1A 70623600
.*                                                                      70623700
.* If execution reaches this point, WORKAREA was specified.             70623800
.*                                                                      70623900
&ERRFLAG SETA &FALSE               Note no errors so far         @D1A   70624000
&IWORK1  SETC '&WORKAREA(1)'       Get first argument            @D1A   70624100
         AIF ('&IWORK1' NE '').CKWRK3    Branch if arg not blank @D1A   70624200
.*                                                                      70624300
.* Here if the first argument specified is blank                 @D1A   70624400
.*                                                                      70624500
&ERROR   SETA 12                   Set error code                @D1A   70624600
&ERRFLAG SETA &TRUE                Note error with WORKAREA      @D1A   70624700
         AIF (N'&WORKAREA GT 1).CKWRK2 Branch if more than one arg @D1A 70624800
         MNOTE 12,'&TAG &ARGWITH WORKAREA IS BLANK.'             @P1C   70624900
         AGO  .CKWRK3              Branch around other MNOTE     @D1A   70625000
.CKWRK2 MNOTE 12,'&TAG &ARG1WITH WORKAREA IS BLANK.'             @P1C   70625100
.*                                                                      70625200
.CKWRK3 ANOP                       Check for a second argument   @D1A   70625300
        AIF (N'&WORKAREA GT 1).CKWRK6 Branch if second arg.      @D1A   70625400
.*                                                                      70625500
.* Here if there is no second argument                           @D1A   70625600
.*                                                                      70625700
&ERROR   SETA 12                   Set error code                @D1A   70625800
&ERRFLAG SETA &TRUE                Note error with WORKAREA      @D1A   70625900
         MNOTE 12,'&TAG THE WORKAREA PARAMETER REQUIRES TWO ARGUMENTS, +70626000
               BUT ONLY ONE IS GIVEN.'                           @D1A   70626100
         AGO .CKWRK7                                             @D1A   70626200
.CKWRK6  ANOP                      Here to check second argument @D1A   70626300
&IWORK2  SETC '&WORKAREA(2)'       Get second argument           @D1A   70626400
         AIF ('&IWORK2' NE '').CKWRK8  Branch if arg not blank   @D1A   70626500
.*                                                                      70626600
.* Here if the second argument was blank                         @D1A   70626700
.*                                                                      70626800
&ERROR   SETA 12                   Set error code                @D1A   70626900
&ERRFLAG SETA &TRUE                Note error with WORKAREA      @D1A   70627000
         MNOTE 12,'&TAG &ARG2WITH WORKAREA IS BLANK.'            @P1C   70627100
.CKWRK8  ANOP                                                           70627200
.CKWRK1  ANOP                      Check for too many arguments  @D1A   70627300
         AIF (N'&WORKAREA EQ 2).CKWRK4 Branch if not too many    @D1A   70627400
.*                                                                      70627500
.* Here if too many arguments were specified.                    @D1A   70627600
.*                                                                      70627700
         MNOTE 4,' &TAG &TOOMANY WORKAREA PARAMETER.'            @P1C   70627900
         AIF (&ERRFLAG EQ &TRUE).CKWRK5 Branch if we had errors @D1A    70628000
.*                                                                      70628100
.* Here if the only error was too many arguments                 @D1A   70628200
.*                                                                      70628300
         MNOTE 4,'&NTAG  WORKAREA &TRUNC WORKAREA=(&IWORK1,&IWORK2).'   70628400
.*                                                               @D1A   70628500
.CKWRK5 ANOP                                                     @D1A   70628600
.CKWRK4 ANOP                                                     @D1A   70628700
.CKWRK7 ANOP                                                     @D1A   70628800
.*                                                                      70628900
.* If WORKAREA was not completely blank, we'll end up here              70629000
.* eventually.                                                   @D1A   70629100
.*                                                                      70629200
         AGO  .ECKWRK              Branch to end of routine      @D1A   70629300
.NOWRK   ANOP                      Here if WORKAREA not spec.    @D1A   70629400
         MNOTE 12,'&TAG WORKAREA MUST BE SPECIFIED WITH LIST.'   @P1C   70629500
&ERROR   SETA 12                   Set error code                @D1A   70629600
.ECKWRK ANOP                       End of CKWRK                  @D1A   70629700
         AGO .RCKWRK               Return                        @D1A   70629800
.*                                                                      70629900
.********************************************************************** 70630000
.*                                                                      70630100
.* This routine generates code for a CPOOL LIST invocation.      @D1A   70630200
.*                                                                      70630300
.********************************************************************** 70630400
.*                                                                      70630500
.GENCDE  ANOP                       Entry to "subroutine"        @D1A   70630600
.*                                                                      70630700
.* Generate code to get a pointer to the work area in                   70630800
.* register 14, and a pointer to the address of the work area in        70630900
.* register 1.                                                   @D1A   70631000
.*                                                                      70631100
         AIF ('&IWORK1'(1,1) EQ '(').GENCDE1 Branch if ptr to    @D1A   70631200
.*                                           work area address is in    70631300
.*                                           a register                 70631400
.*                                                                      70631500
.* Here if the pointer to the pointer to the work area is not in        70631600
.* a register.                                                   @D1A   70631700
.*                                                                      70631800
         LA     1,&IWORK1           Get address of ptr to work area     70631900
         L     14,0(1)              Get address of work area            70632000
         AGO  .GENCDE2                                                  70632100
.*                                                                      70632200
.GENCDE1 ANOP                                                           70632300
.*                                                                      70632400
.* Here if the pointer to the pointer to the work area is in            70632500
.* a register.                                                   @D1A   70632600
.*                                                                      70632700
&WRKAREG SETC '&IWORK1'(2,K'&IWORK1-2) Strip parens off reg name @D1A   70632800
         LR     1,&WRKAREG          Point to parameter list             70632900
         L     14,0(1)              Get address of work area            70633000
.*                                                                      70633100
.GENCDE2 ANOP                                                    @D1A   70633200
.*                                                                      70633300
.* Generate code to set the VERIFY flag.                         @D1A   70633400
.*                                                                      70633500
         AIF ('&IVERIFY' EQ 'NO').GENCDE3 Branch if VERIFY=NO    @D1A   70633700
         OI    16(14),X'80'           Turn on verify flag               70633800
         AGO .GENCDE4                                                   70633900
.GENCDE3 ANOP                       Here if VERIFY=NO                   70634000
         NI    16(14),X'7F'           Turn off verify flag              70634100
.*                                                                      70634200
.GENCDE4 ANOP                                                           70634300
.*                                                                      70634400
.* Generate code to put the CPID into the work area.             @D1A   70634500
.*                                                                      70634600
         AIF ('&ICPID'(1,1) EQ '(').GENCDE5 Branch if CPID in reg @D1A  70634700
.*                                                                      70634800
.* Here if the CPID is not in a register                                70634900
.*                                                                      70635000
         MVC   20(4,14),&ICPID        Put CPID in the work area         70635100
         AGO .GENCDE6                                                   70635200
.*                                                                      70635300
.GENCDE5 ANOP                                                           70635400
.*                                                                      70635500
.* Here if the CPID is in a register                                    70635600
.*                                                                      70635700
&ICPID   SETC '&ICPID'(2,K'&ICPID-2) Strip parens from CPID     @D1A    70635800
         ST    &ICPID,20(,14)        Put CPID in the work area          70635900
.*                                                                      70636000
.GENCDE6 ANOP                                                           70636100
         AIF ('&IWORK2'(1,1) EQ '(').GENCDE7 Branch if work area        70636200
.*                                           length is in a reg  @D1A   70636300
.*                                                                      70636400
.* Here if the work area length is not in a register             @D1A   70636500
.*                                                                      70636600
         AIF (T'&IWORK2 NE 'N').GENCDE9 Branch if not a number   @D1A   70636700
         AIF (&IWORK2 GT 4095).GENCDE9  Or if number but > 4095  @D1A   70636800
         LA    15,&IWORK2            Get length of work area            70636900
         ST    15,24(,14)            Save length of work area           70637000
         AGO   .GENCDE8                                                 70637100
.GENCDE9 ANOP                                                           70637200
         L     15,=A(&IWORK2)        Get length of work area            70637300
         ST    15,24(,14)            Save length of work area           70637400
         AGO .GENCDE8                                                   70637500
.*                                                                      70637600
.* Here if the work area length is in a register.                @D1A   70637700
.*                                                                      70637800
.GENCDE7 ANOP                                                    @D1A   70637900
&WRKLREG SETC '&IWORK2'(2,K'&IWORK2-2) Strip parens off reg name @D1A   70638000
         ST    &WRKLREG,24(4,14)      Store length of work area         70638100
.*                                                                      70638200
.GENCDE8 ANOP                                                    @D1A   70638300
.*                                                                      70638400
.* Generate code for the call to IGVCPLST.                       @D1A   70638500
.*                                                                      70638600
         L     15,16(0,0)           Get address of CVT                  70639800
         L     15,200(0,15)         Get address of SCVT                 70640700
         L     15,100(0,15)         Get addr of Cell Pool List routine  70641600
         BASSM 14,15                Branch to Cell Pool List routine    70642500
         AGO .RGENCDE               Return                       @D1A   70643400
.*                                                                      70644600
.*                                                                      70645800
.*                                                                      70647000
         MEND                                                           70648200
*      */                                                               70650000
* %PLSSKIP:  ;                                                          70700000
*%    CPOOL:                                                            70750000
* MACRO KEYS(U,UNCOND,                   /* UNCONDITIONAL GETMAIN    */ 70800000
*            C,COND,                     /* CONDITIONAL GETMAIN      */ 70850000
*            PCELLCT,                    /* PRIMARY CELL COUNT       */ 70900000
*            SCELLCT,                    /* SECONDARY CELL COUNT     */ 70950000
*            CSIZE,                      /* CELL SIZE                */ 71000000
*            SP,                         /* SUBPOOL ID               */ 71050000
*            LOC,                        /* LOCATION                 */ 71100000
*            CPID,                       /* CELL POOL ID             */ 71150000
*            CELL,                       /* CELL ADDRESS             */ 71200000
*            KEY,                        /* KEY                      */ 71250000
*            TCB,                        /* TCB ADDRESS OR TCB       */ 71300000
*            HDR,                        /* HEADER OR HEADER ADDRESS */ 71350000
*            LINKAGE,                    /* SYSTEM OR BRANCH         */ 71400000
*            MF,                         /* LIST, EXECUTE, MODIFY, OR   71450000
*                                           STANDARD FORM            */ 71500000
*            REGS,                       /* SAVE OR USE REGS     @D1C*/ 71520000
*            WORKAREA,                   /* Work area for LIST   @D1A*/ 71540000
*            VERIFY                      /* Use LRA to verify (for      71560000
*                                           LIST)                @D1A*/ 71580000
*           ,OWNER                       /* OWNER                @L2A*/ 71590000
*            );                                                         71600000
*    ANS('?'|| MACLABEL || 'CPOOLP' || MACLIST || MACKEYS || ';');      71650000
*%END CPOOL;                                                            71700000
