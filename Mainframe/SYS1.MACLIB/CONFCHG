*/**** START OF SPECIFICATIONS **************************************** 00000100
*01* PROPRIETARY STATEMENT:                                           * 00000200
*                                                                     * 00000300
*     5695-047                                                        * 00000400
*     THIS MACRO IS "RESTRICTED MATERIALS OF IBM"                     * 00000500
*     (C) COPYRIGHT IBM CORP. 1990                                    * 00000600
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 00000700
*                                                                     * 00000800
* STATUS= HBB4410                                                     * 00000900
*                                                                     * 00001000
*                                                                     * 00001100
*                                                                     * 00001200
*01* MACRO NAME:  CONFCHG                               -10/24/90-<1> * 00001300
*                                                                     * 00001400
*01* DESCRIPTIVE NAME:  Establish I/O Configuration Change exits      * 00001500
*                                                                     * 00001600
*                                                                     * 00001700
*01* FUNCTION:                                                        * 00001800
*                                                                     * 00001900
*                                                                     * 00002000
*      The CONFCHG macro allows supervisor state programs to request  * 00002100
*      notification of dynamic I/O configuration changes.             * 00002200
*                                                                     * 00002300
*      If the invoker specifies the CHGREQ parameter an exit routine  * 00002400
*      will be established which will receive control whenever a      * 00002500
*      dynamic I/O configuration change is requested that results in  * 00002600
*      a device or device path being deleted.  If the configuration   * 00002700
*      change is subsequently rejected, then this exit will also      * 00002800
*      receive control.                                               * 00002900
*                                                                     * 00003000
*      If the invoker specifies the CHGCOMPL parameter an exit        * 00003100
*      routine will be established which will receive control         * 00003200
*      whenever a dynamic I/O configuration change successfully       * 00003300
*      completes.                                                     * 00003400
*                                                                     * 00003500
*      The Dynamic Configuration Change Data (DCCD) which is mapped   * 00003600
*      by IOSDDCCD is passed to the exit routine.  For the CHGREQ     * 00003700
*      exit, the DCCD will contain a list of the requested I/O        * 00003800
*      configuration changes.  For the CHGCOMPL exit, the DCCD will   * 00003900
*      contain a list of the I/O configuration changes which have     * 00004000
*      just been completed.                                           * 00004100
*                                                                     * 00004200
*      The contents of registers 14 through 1 are altered by the      * 00004300
*      macro expansion.                                               * 00004400
*                                                                     * 00004500
*01* INVOCATION REQUIREMENTS:                                         * 00004600
*                                                                     * 00004700
*                                                                     * 00004800
*      Execution Mode:   Task mode.                                   * 00004900
*                                                                     * 00005000
*      Authorization:    Supervisor state.  Any PSW key.              * 00005100
*                                                                     * 00005200
*      Addressing Mode:  31 bit addressing mode.                      * 00005300
*                                                                     * 00005400
*      ASC mode:         Primary ASC mode.                            * 00005500
*                                                                     * 00005600
*      Serialization:    Enabled.                                     * 00005700
*                                                                     * 00005800
*      Restrictions:     The invoker must not hold any locks.         * 00005900
*                                                                     * 00006000
*                                                                     * 00006100
*01* INVOCATION FORMAT:                                               * 00006200
*                                                                     * 00006300
*[xlabel]  CONFCHG    NOTIFY                                         * 00006400
*                        ,EXIT=xexit                                 * 00006500
*                       [,TOKEN=xtoken]                              * 00006600
*                    ,CANCEL                                         * 00006700
*                         ,TOKEN=xtoken                               * 00006800
*                    ,CHGREQ                                         * 00006900
*                    ,CHGCOMPL                                       * 00007000
*                    [,RETCODE=xretcode]                              * 00007100
*                   [,MF=S]                                          * 00007200
*                   [,MF=(L,xmfctrl,xmfattr|0D)]                   * 00007300
*                   [,MF=(E,xmfctrl,COMPLETE)]                     * 00007400
*                                                                     * 00007500
*                                                                     * 00007600
*      Where:                                                         * 00007700
*                                                                     * 00007800
*                                                                     * 00007900
*      [xlabel]                                                       * 00008000
*          is an optional 1 to 8 alphanumeric character input string, * 00008100
*          starting in column 1, that is the assembler label on the   * 00008200
*          CONFCHG macro.                                             * 00008300
*          DEFAULT: Null label.                                       * 00008400
*                                                                     * 00008500
*                                                                     * 00008600
*                                                                     * 00008700
*      The following is a set of mutually exclusive keys.  This set   * 00008800
*      is required; only one key must be specified.                   * 00008900
*                                                                     * 00009000
*                                                                     * 00009100
*      NOTIFY                                                         * 00009200
*          Request notification of requested or successful I/O        * 00009300
*          configuration changes                                      * 00009400
*                                                                     * 00009500
*                                                                     * 00009600
*          EXIT=xexit                                                 * 00009700
*              is the name (RX-type), or address in register          * 00009800
*              (2)-(12), of a required 4 byte input that contains the * 00009900
*              address of the exit routine.  The exit routine must    * 00010000
*              reside in common storage.                              * 00010100
*                                                                     * 00010200
*                                                                     * 00010300
*                                                                     * 00010400
*          [TOKEN=xtoken]                                             * 00010500
*              is the name (RX-type), or address in register          * 00010600
*              (2)-(12), of an optional 4 character output which is   * 00010700
*              to receive the token identifying the request. This     * 00010800
*              token must be used if CONFCHG will later be issued to  * 00010900
*              cancel the notification request.                       * 00011000
*                                                                     * 00011100
*                                                                     * 00011200
*      CANCEL                                                         * 00011300
*          Cancel a previous notification request                     * 00011400
*                                                                     * 00011500
*                                                                     * 00011600
*          TOKEN=xtoken                                               * 00011700
*              is the name (RX-type), or address in register          * 00011800
*              (2)-(12), of a required 4 character input which        * 00011900
*              contains the token identifying the NOTIFY request to   * 00012000
*              be cancelled.                                          * 00012100
*                                                                     * 00012200
*                                                                     * 00012300
*                                                                     * 00012400
*      End of a set of mutually exclusive required keys.              * 00012500
*                                                                     * 00012600
*                                                                     * 00012700
*                                                                     * 00012800
*      The following is a set of mutually exclusive keys.  This set   * 00012900
*      is required; only one key must be specified.                   * 00013000
*                                                                     * 00013100
*                                                                     * 00013200
*      CHGREQ                                                         * 00013300
*          Specifies that the exit routine is to receive control      * 00013400
*          whenever a dynamic I/O configuration change is requested.  * 00013500
*          Note: If the requested dynamic I/O configuration change is * 00013600
*          subsequently rejected, then the exit routine will also get * 00013700
*          control.                                                   * 00013800
*                                                                     * 00013900
*      CHGCOMPL                                                       * 00014000
*          Specifies that the exit routine is to receive control      * 00014100
*          whenever a dynamic I/O configuration change successfully   * 00014200
*          completes.                                                 * 00014300
*                                                                     * 00014400
*                                                                     * 00014500
*      End of a set of mutually exclusive required keys.              * 00014600
*                                                                     * 00014700
*                                                                     * 00014800
*                                                                     * 00014900
*      [RETCODE=xretcode]                                             * 00015000
*          is the name (RX-type) of an optional fullword output       * 00015100
*          variable, or register (2)-(12), into which the return code * 00015200
*          is to be copied from GPR 15.                               * 00015300
*                                                                     * 00015400
*                                                                     * 00015500
*                                                                     * 00015600
*      [MF=S|L|E]                                                   * 00015700
*          is an optional keyword input which specifies the macro     * 00015800
*          form.                                                      * 00015900
*          DEFAULT: S                                                 * 00016000
*                                                                     * 00016100
*                                                                     * 00016200
*          [MF=S]                                                     * 00016300
*              specifies the standard form of the macro.  The "S"     * 00016400
*              form generates code to put the parameters into an      * 00016500
*              in-line parameter list and invoke the desired service. * 00016600
*              Full checking for required macro keys is done along    * 00016700
*              with supplying defaults for optional parameters that   * 00016800
*              are not specified.                                     * 00016900
*                                                                     * 00017000
*          [MF=(L,xmfctrl,xmfattr|0D)]                              * 00017100
*              specifies the list form of the macro.  The "L" form    * 00017200
*              defines an area to be used for the parameter list.     * 00017300
*              Any other macro parameters are flagged as errors.      * 00017400
*                                                                     * 00017500
*            ,xmfctrl                                                 * 00017600
*              is a required input.  It is the name (RX-type) of a    * 00017700
*              storage area for the parameter list.                   * 00017800
*                                                                     * 00017900
*            ,xmfattr|0D                                            * 00018000
*              is an optional 60 character input  string that varies  * 00018100
*              from 1 to 60 characters, that contains any special     * 00018200
*              attributes for the parameter list.                     * 00018300
*              DEFAULT: 0D which indicates the parameter list is to   * 00018400
*              be aligned on a double word boundary.                  * 00018500
*                                                                     * 00018600
*          [MF=(E,xmfctrl,COMPLETE)]                                * 00018700
*              specifies the execute form of the macro.  The "E" form * 00018800
*              generates code to put the parameters into the          * 00018900
*              parameter list specified by xmfctrl and provides full  * 00019000
*              syntax checking with default setting.                  * 00019100
*                                                                     * 00019200
*            ,xmfctrl                                                 * 00019300
*              is a required input.  It is the name (RX-type), or     * 00019400
*              address in register (2)-(12), of a storage area for    * 00019500
*              the parameter list.                                    * 00019600
*                                                                     * 00019700
*            ,COMPLETE                                              * 00019800
*              is an optional keyword input which specifies the       * 00019900
*              degree of macro parameter syntax checking.             * 00020000
*              DEFAULT: COMPLETE                                      * 00020100
*                                                                     * 00020200
*                                                                     * 00020300
*              COMPLETE   Checking for required macro keys is done    * 00020400
*                        and defaults are supplied for optional       * 00020500
*                        parameters that were not specified.          * 00020600
*                                                                     * 00020700
*                                                                     * 00020800
*                                                                     * 00020900
*                                                                     * 00021000
*01* RETURN CODES:                                                    * 00021100
*                                                                     * 00021200
*                                                                     * 00021300
*                                                                     * 00021400
*                 X'00'     The requested function was successfully   * 00021500
*                           executed.                                 * 00021600
*                                                                     * 00021700
*                 X'04'     Duplicate CONFCHG NOTIFY request.         * 00021800
*                                                                     * 00021900
*                 X'10'     Unexpected error occurred.                * 00022000
*                                                                     * 00022100
*                 X'14'     System is not able to process request.    * 00022200
*                                                                     * 00022300
*                 X'18'     System could not obtain storage.          * 00022400
*                                                                     * 00022500
*                 X'1C'     The token specified on a CANCEL request   * 00022600
*                           was not valid.                            * 00022700
*                                                                     * 00022800
*                                                                     * 00022900
*                                                                     * 00023000
*01* REASON CODES:  None.                                             * 00023100
*                                                                     * 00023200
*01* MODULE TYPE:  ASSEM MACRO                                        * 00023300
*                                                                     * 00023400
*02*   PROCESSOR:  ASSEM                                              * 00023500
*                                                                     * 00023600
*01* COMPONENT:  SC1C3                                                * 00023700
*                                                                     * 00023800
*01* DISTRIBUTION LIBRARY: AMACLIB                                    * 00023900
*                                                                     * 00024000
*01* MACRO USAGE NOTES:                                               * 00024100
*                                                                     * 00024200
*                                                                     * 00024300
*    1.  Printing of the macro expansion is controlled by the ZPRINT  * 00024400
*        global macro variable.  Any value other than 'NO' will       * 00024500
*        result in the macro expansion being printed.  The default is * 00024600
*        'YES'.  The following examples illustrate how the ZPRINT     * 00024700
*        variable should be set.                                      * 00024800
*                                                                     * 00024900
*            &ZPRINT SETC 'YES'          &ZPRINT SETC 'NO'            * 00025000
*                                                                     * 00025100
*                                                                     * 00025200
*01* CHANGE ACTIVITY:                                                 * 00025300
*                                                                     * 00025400
*   Flag LineItem  FMID    Date   ID    Comment                       * 00025500
*                                                                     * 00025600
*    $L0=USERV    HBB4410 900330 PDLS:  Dynamic I/O Configuration     * 00025700
****** END OF SPECIFICATIONS *****************************************/ 00025800
*/********************************************************************* 00025900
         MACRO                                                          00026000
&XLABEL  CONFCHG &EXIT=,&TOKEN=,&RETCODE=,&MF=                          00026100
.*                                                                      00026200
*              MACDATE -10/24/90-<1>                                    00026300
.*                                                                      00026400
.*******************************************************************    00026500
.***AB.02  GLOBAL VARIABLES TO CONTROL PRINT AND CODE GENERATION        00026600
.*******************************************************************    00026700
              GBLC  &ZPRINT     YES=PRINT NO=NO PRINT                   00026800
              GBLC  &ZTEST      YES=TEST NO=NO TEST                     00026900
              GBLC  &ZSYSTEM    PCCODE10, MVS, SAK, VM, XAX             00027000
.*                                                                      00027100
              GBLC  &ZCONFCHG   YES=MACRO USED AT LEAST ONCE            00027200
.*******************************************************************    00027300
.***AB.03  COMMONLY USED LOCAL MACRO VARIABLES                          00027400
.*******************************************************************    00027500
              LCLC  &ZMS        ERROR MESSAGE WORK AREA                 00027600
              LCLC  &ZCNDX      LAST THREE SYSNDX CHARACTERS            00027700
              LCLC  &ZCLNG      USED WHEN LENGTH IS NEEDED              00027800
              LCLC  &ZCGPR      USED WHEN VALUE IS IN A GPR             00027900
              LCLC  &ZCVAL      USED TO CONTAIN FIXED VALUE             00028000
              LCLA  &ZAWRK      USED AS A WORK AREA                     00028100
              LCLA  &ZASIZ      USED FOR SIZE OF VALUE                  00028200
              LCLA  &ZN         NUMERIC WORK VARIABLE                   00028300
              LCLC  &ZC         CHARACTER WORK VARIABLE                 00028400
              LCLA  &ZMACRET    MACRO RETURN CODE                       00028500
&ZMACRET      SETA  0           ASSUME NO ERRORS                        00028600
.*                                                                      00028700
              LCLC  &ZCSYSLIST(255)             NONXKEY, POS ARRAY      00028800
              LCLA  &ZASYSLNDX  WORK INDEX FOR ZCSYSLIST()              00028900
              LCLA  &ZPLLEN     PARAMETER LIST LENGTH                   00029000
.********************************************************************   00029100
.***AB.05  INVOKE MVS MACROS TO CONTROL CODE GENERATION                 00029200
.********************************************************************   00029300
              GBLC  &SYSSPLV    SP LEVEL 1,2,3 -SPLEVEL                 00029400
              GBLC  &SYSASCE    SYSTEM STATE P ANY AR-SYSSTATE          00029500
.*                                                                      00029600
              AIF   (K'&SYSASCE GT 0).ZSYS4     SYS STATE DEFINED       00029700
              AIF   (K'&SYSSPLV GT 0).ZSYS2     SP LEVEL DEFINED        00029800
              SPLEVEL  TEST                                             00029900
.ZSYS2        ANOP  ,                                                   00030000
              AIF   ('&SYSSPLV' EQ '1').ZSYS3   PRE SP 3.1              00030100
              AIF   ('&SYSSPLV' EQ '2').ZSYS3   PRE SP 3.1              00030200
              SYSSTATE TEST                                             00030300
              AGO   .ZSYS4                                              00030400
.ZSYS3        ANOP  ,                                                   00030500
&SYSASCE      SETC  'P'         ASSUME SYSSTATE PRIMARY                 00030600
.ZSYS4        ANOP  ,                                                   00030700
.*******************************************************************    00030800
.***AB.07  DEFINE ALL MACRO VARIABLES                                   00030900
.*******************************************************************    00031000
              LCLC  &XFUNC      ++ VALUE                                00031100
              LCLC  &XNOTIFY    ++ VALUE                                00031200
              LCLC  &XEXIT      ++ NAME                                 00031300
              LCLC  &XTOKEN     ++ NAME                                 00031400
              LCLC  &XCANCEL    ++ VALUE                                00031500
              LCLC  &XTYPE      ++ VALUE                                00031600
              LCLC  &XCHGREQ    ++ VALUE                                00031700
              LCLC  &XCHGCOMPL  ++ VALUE                                00031800
              LCLC  &XRETCODE   ++ NAME                                 00031900
              LCLC  &XMF        ++ VALUE                                00032000
              LCLC  &XMFCTRL    ++ NAME                                 00032100
              LCLC  &XMFATTR    ++ VALUE                                00032200
              LCLC  &XMFSCK     ++ VALUE                                00032300
.*******************************************************************    00032400
.***AB.13  DEFINE MACRO VARIABLES FOR INPUT/OUTPUT PROCESSING           00032500
.*******************************************************************    00032600
              LCLC  &ZXFUNC     ++ INPUT VALUE                          00032700
              LCLC  &ZXNOTIFY   ++ INPUT VALUE                          00032800
              LCLC  &ZXEXIT     ++ INPUT NAME                           00032900
              LCLC  &ZXTOKEN    ++ OUTPUT NAME                          00033000
              LCLC  &ZXCANCEL   ++ INPUT VALUE                          00033100
              LCLC  &ZXTYPE     ++ INPUT VALUE                          00033200
              LCLC  &ZXCHGREQ   ++ INPUT VALUE                          00033300
              LCLC  &ZXCHGCOMPL                 ++ INPUT VALUE          00033400
              LCLC  &ZXRETCODE  ++ OUTPUT NAME                          00033500
              LCLC  &ZXMF       ++ INPUT VALUE                          00033600
              LCLC  &ZXMFCTRL   ++ INPUT NAME                           00033700
              LCLC  &ZXMFATTR   ++ INPUT VALUE                          00033800
              LCLC  &ZXMFSCK    ++ INPUT VALUE                          00033900
.********************************************************************   00034000
.***AG.MF01 PROCESS MF MACRO FORMS                                      00034100
.********************************************************************   00034200
              ACTR  10000                                               00034300
.*------------------------------------------------------------------    00034400
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00034500
&XMF          SETC  ''          INITIALIZE XVARIABLE                    00034600
.*-------------------------------------------------------------------   00034700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00034800
.ZG23         ANOP  ,                                                   00034900
              AIF   ('&MF(1)' NE 'S').ZG24                              00035000
&XMF          SETC  'S'         SET KEYWORD                             00035100
              AIF   (N'&MF LE 1).ZG23A          CK NUM                  00035200
&ZMS          SETC  '"MF='      *KPOSA* MNOTE                           00035300
&ZMS          SETC  '&ZMS.&MF"'                                         00035400
&ZMS          SETC  '&ZMS "MF"'                                         00035500
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00035600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00035700
.ZG23A        ANOP  ,                                                   00035800
.*-------------------------------------------------------------------   00035900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00036000
.ZG24         ANOP  ,                                                   00036100
              AIF   ('&MF(1)' NE 'L').ZG31                              00036200
&XMF          SETC  'L'         SET KEYWORD                             00036300
              AIF   (N'&MF LE 3).ZG24A          CK NUM                  00036400
&ZMS          SETC  '"MF='      *KPOSA* MNOTE                           00036500
&ZMS          SETC  '&ZMS.&MF"'                                         00036600
&ZMS          SETC  '&ZMS "MF"'                                         00036700
              MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'                00036800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00036900
.ZG24A        ANOP  ,                                                   00037000
.*-------------------------------------------------------------------   00037100
.***AG.KKCTL08 -MF(L) SPECIAL CHECK                                     00037200
              AIF   (N'&SYSLIST NE 0).ZG24B     POSITIONALS?            00037300
              AIF   ('&EXIT' NE '').ZG24B       KEYS?                   00037400
              AIF   ('&TOKEN' NE '').ZG24B      KEYS?                   00037500
              AIF   ('&RETCODE' NE '').ZG24B    KEYS?                   00037600
              AGO    .ZG24C     INVOCATION OKAY                         00037700
.ZG24B        ANOP  ,                                                   00037800
&ZMS          SETC  'THE "L" FORM OF "MF" CANNOT'  *MFLA* MNOTE         00037900
&ZMS          SETC  '&ZMS HAVE ANY OTHER KEYWORDS OR'                   00038000
&ZMS          SETC  '&ZMS POSITIONAL PARAMETERS SPECIFIED'              00038100
              MNOTE 8,' &ZMS ON THE INVOCATION.'                        00038200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00038300
.ZG24C        ANOP  ,                                                   00038400
.*-------------------------------------------------------------------   00038500
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00038600
&ZXMFCTRL     SETC  'INPUT'     SET IN/OUTPUT                           00038700
&XMFCTRL      SETC  '&MF(2,1)'  SET XVARIABLE                           00038800
              AIF   (N'&MF(2) GT 1).ZG26B       MULTI PARMS             00038900
&XMFCTRL      SETC  '&MF(2)'    SET XVARIABLE                           00039000
.ZG26B        AIF   (K'&MF(2) GT 0).ZG26C                               00039100
&ZXMFCTRL     SETC  ''          RESET IN/OUTPUT                         00039200
&ZMS          SETC  'WHEN "L" IS SPECIFIED'     *KRQDA*                 00039300
&ZMS          SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'                 00039400
              MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                        00039500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00039600
.ZG26C        ANOP  ,                                                   00039700
.*-------------------------------------------------------------------   00039800
.***AG.KCK01 NAME, OPT RQD INPUT, POS(2) -GPR NOT ALLOWED               00039900
              AIF   (K'&ZXMFCTRL LE 0).ZG26P    NOT I/O                 00040000
              AIF   ('&XMFCTRL'(1,1) NE '(').ZG26P                      00040100
&ZXMFCTRL     SETC  ''          RESET IN/OUTPUT                         00040200
&ZMS          SETC  '"MF='      *KGPRA* MNOTE                           00040300
&ZMS          SETC  '&ZMS.&MF"'                                         00040400
&ZMS          SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'           00040500
              MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 2.'                   00040600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00040700
.ZG26P        ANOP  ,                                                   00040800
.*-------------------------------------------------------------------   00040900
.***AG.KXVAR13 VALUE, OPT INPUT, POS(3) -XVARIABLE                      00041000
&ZXMFATTR     SETC  'INPUT'     SET IN/OUTPUT                           00041100
&XMFATTR      SETC  '0D'        SET DEFAULT                             00041200
              AIF   (K'&MF(3) LE 0).ZG29B       PARM                    00041300
&XMFATTR      SETC  '&MF(3,1)'  SET XVARIABLE                           00041400
              AIF   (N'&MF(3) GT 1).ZG29B       MULTI PARMS             00041500
&XMFATTR      SETC  '&MF(3)'    SET XVARIABLE                           00041600
.ZG29B        ANOP  ,                                                   00041700
.*-------------------------------------------------------------------   00041800
.***AG.KCK01 VALUE, OPT INPUT, POS(3) -GPR NOT ALLOWED                  00041900
              AIF   (K'&ZXMFATTR LE 0).ZG29P    NOT I/O                 00042000
              AIF   ('&XMFATTR'(1,1) NE '(').ZG29P                      00042100
&ZXMFATTR     SETC  ''          RESET IN/OUTPUT                         00042200
&ZMS          SETC  '"MF='      *KGPRA* MNOTE                           00042300
&ZMS          SETC  '&ZMS.&MF"'                                         00042400
&ZMS          SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'           00042500
              MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 3.'                   00042600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00042700
.ZG29P        ANOP  ,                                                   00042800
.*-------------------------------------------------------------------   00042900
.***AG.KCK03 VALUE, OPT INPUT, POS(3) -CHARACTER LENGTH                 00043000
              AIF   (K'&ZXMFATTR LE 0).ZG29S    NOT I/O                 00043100
              AIF   (K'&XMFATTR LE 60).ZG29S    LNG OK                  00043200
&ZXMFATTR     SETC  ''          RESET IN/OUTPUT                         00043300
&ZMS          SETC  '"MF='      *KLNGA* MNOTE                           00043400
&ZMS          SETC  '&ZMS.&MF"'                                         00043500
&ZMS          SETC  '&ZMS ARGUMENT 3 EXCEEDS THE MAXIMUM'               00043600
              MNOTE 8,' &ZMS LENGTH OF 60 CHARACTERS.'                  00043700
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00043800
.ZG29S        ANOP  ,                                                   00043900
.*-------------------------------------------------------------------   00044000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00044100
.ZG31         ANOP  ,                                                   00044200
              AIF   ('&MF(1)' NE 'E').ZG39                              00044300
&XMF          SETC  'E'         SET KEYWORD                             00044400
              AIF   (N'&MF LE 3).ZG31A          CK NUM                  00044500
&ZMS          SETC  '"MF='      *KPOSA* MNOTE                           00044600
&ZMS          SETC  '&ZMS.&MF"'                                         00044700
&ZMS          SETC  '&ZMS "MF"'                                         00044800
              MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'                00044900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00045000
.ZG31A        ANOP  ,                                                   00045100
.*-------------------------------------------------------------------   00045200
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00045300
&ZXMFCTRL     SETC  'INPUT'     SET IN/OUTPUT                           00045400
&XMFCTRL      SETC  '&MF(2,1)'  SET XVARIABLE                           00045500
              AIF   (N'&MF(2) GT 1).ZG33B       MULTI PARMS             00045600
&XMFCTRL      SETC  '&MF(2)'    SET XVARIABLE                           00045700
.ZG33B        AIF   (K'&MF(2) GT 0).ZG33C                               00045800
&ZXMFCTRL     SETC  ''          RESET IN/OUTPUT                         00045900
&ZMS          SETC  'WHEN "E" IS SPECIFIED'     *KRQDA*                 00046000
&ZMS          SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'                 00046100
              MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                        00046200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00046300
.ZG33C        ANOP  ,                                                   00046400
.*-------------------------------------------------------------------   00046500
.***AG.KCK02 NAME, OPT RQD INPUT, POS(2) -GPR OUT OF RANGE              00046600
              AIF   (K'&ZXMFCTRL LE 0).ZG33R    NOT I/O                 00046700
              AIF   ('&XMFCTRL'(1,1) NE '(').ZG33R                      00046800
&ZCGPR        SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)                          00046900
              AIF   ('&ZCGPR'(1,1) NE '0').ZG33P                        00047000
              AIF   (K'&ZCGPR GT 2).ZG33Q                               00047100
              AIF   ('&ZCGPR' EQ '0').ZG33Q                             00047200
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00047300
              AIF   (T'&ZCGPR NE 'N').ZG33Q     INVALID REG NAME        00047400
.ZG33P        ANOP  ,                                                   00047500
              AIF   (T'&ZCGPR NE 'N').ZG33R     NON NUMERIC             00047600
              AIF   ('&ZCGPR' LT '2').ZG33Q                             00047700
              AIF   ('&ZCGPR' LE '12').ZG33R                            00047800
.ZG33Q        ANOP  ,                                                   00047900
&ZMS          SETC  '"MF='      *KGPRA* MNOTE                           00048000
&ZMS          SETC  '&ZMS.&MF"'                                         00048100
&ZMS          SETC  '&ZMS ARGUMENT 2 MUST SPECIFY A REGISTER'           00048200
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00048300
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00048400
.ZG33R        ANOP  ,                                                   00048500
.*-------------------------------------------------------------------   00048600
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00048700
&XMFSCK       SETC  ''          INITIALIZE XVARIABLE                    00048800
.ZG37A   AIF   ('&MF(3)' NE 'COMPLETE').ZG38A                           00048900
&XMFSCK       SETC  'COMPLETE'  SET KEYWORD                             00049000
.*-------------------------------------------------------------------   00049100
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00049200
.ZG38A        AIF   (K'&XMFSCK GT 0).ZG38C      KEYWORD                 00049300
              AIF   (K'&MF(3) LE 0).ZG38B                               00049400
&ZMS          SETC  '"MF='      *KUKWA* MNOTE                           00049500
&ZMS          SETC  '&ZMS.&MF"'                                         00049600
&ZMS          SETC  '&ZMS ARGUMENT 3 IS AN UNKNOWN KEYWORD. '           00049700
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                 00049800
              MNOTE 8,' &ZMS "COMPLETE".'                               00049900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00050000
.ZG38B        ANOP  ,                                                   00050100
&XMFSCK       SETC  'COMPLETE'  SET DEFAULT KEYWORD                     00050200
.ZG38C        ANOP  ,                                                   00050300
&ZXMFSCK      SETC  'INPUT'     SET IN/OUTPUT                           00050400
.*------------------------------------------------------------------    00050500
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00050600
.ZG39         ANOP  ,                                                   00050700
&ZXMF         SETC  'INPUT'     SET IN/OUTPUT                           00050800
              AIF   (K'&XMF GT 0).ZG39E         VALID ARG               00050900
              AIF   (T'&MF EQ 'O').ZG39D        OMITTED                 00051000
&ZASYSLNDX    SETA  0                                                   00051100
.ZG39A        ANOP  ,           POSITIONAL MACRO KEY                    00051200
&ZASYSLNDX    SETA  &ZASYSLNDX+1                                        00051300
              AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG39C                    00051400
              AIF   ('&SYSLIST(&ZASYSLNDX)' NE 'MF').ZG39A              00051500
.ZG39B        ANOP  ,                                                   00051600
&ZXMF         SETC  ''          RESET IN/OUTPUT                         00051700
&ZMS          SETC  'THE "MF" KEY'              *KOPTA* MNOTE           00051800
&ZMS          SETC  '&ZMS MUST CONTAIN ONE'                             00051900
              MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                    00052000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00052100
              AGO   .ZG39E                                              00052200
.ZG39C        ANOP  ,                                                   00052300
&ZXMF         SETC  ''          RESET IN/OUTPUT                         00052400
&ZMS          SETC  '"MF='      *KUKWA* MNOTE                           00052500
&ZMS          SETC  '&ZMS.&MF"'                                         00052600
&ZMS          SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '           00052700
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                 00052800
&ZMS          SETC  '&ZMS "S",'                 VALID KEYWORD           00052900
&ZMS          SETC  '&ZMS "L",'                 VALID KEYWORD           00053000
              MNOTE 8,' &ZMS OR "E".'                                   00053100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00053200
              AGO   .ZG39E                                              00053300
.ZG39D        ANOP  ,                                                   00053400
&XMF          SETC  'S'         SET DEFAULT KEYWORD                     00053500
&XMFSCK       SETC  'COMPLETE'  COMPLETE CHECKING                       00053600
.ZG39E        ANOP  ,                                                   00053700
.********************************************************************   00053800
.***AG.MF02  FULL MACRO SYNTAX CHECKING                                 00053900
.********************************************************************   00054000
              ACTR  10000                                               00054100
.*-------------------------------------------------------------------   00054200
.***AG.MF03 MF=(SLE)                                                    00054300
              AIF   ('&XMF' EQ 'L').ZGMFX                               00054400
.*-------------------------------------------------------------------   00054500
.***AG.KMEKY05 VALUE, RQD INPUT, ME KEYS -NO ARGUMENTS                  00054600
&XFUNC        SETC  ''          INITIALIZE XVARIABLE                    00054700
&ZASYSLNDX    SETA  0                                                   00054800
.ZG2A         ANOP  ,           POSITIONAL KEY SEARCH                   00054900
&ZASYSLNDX    SETA  &ZASYSLNDX+1                NEXT POSITIONAL         00055000
         AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG2B  DONE                    00055100
         AIF   ('&ZCSYSLIST(&ZASYSLNDX)' EQ 'NONXKEY').ZG2A             00055200
         AIF   ('&SYSLIST(&ZASYSLNDX)' NE 'NOTIFY').ZG2A                00055300
&ZCSYSLIST(&ZASYSLNDX) SETC 'NONXKEY'           KEY IS NON-XKEY         00055400
&ZXFUNC       SETC  'INPUT'     SET IN/OUTPUT                           00055500
&XFUNC        SETC  'NOTIFY'    SET XVARIABLE                           00055600
&ZXNOTIFY     SETC  'INPUT'     SET IN/OUTPUT                           00055700
&XNOTIFY      SETC  'NOTIFY'    SET XVARIABLE PARM                      00055800
.ZG2B         ANOP  ,                                                   00055900
.*-------------------------------------------------------------------   00056000
.***AG.KMEKY06 VALUE, RQD INPUT, ME KEYS -NO ARGUMENTS                  00056100
&ZASYSLNDX    SETA  0                                                   00056200
.ZG9A         ANOP  ,           POSITIONAL KEY SEARCH                   00056300
&ZASYSLNDX    SETA  &ZASYSLNDX+1                NEXT POSITIONAL         00056400
         AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG9C  DONE                    00056500
         AIF   ('&ZCSYSLIST(&ZASYSLNDX)' EQ 'NONXKEY').ZG9A             00056600
         AIF   ('&SYSLIST(&ZASYSLNDX)' NE 'CANCEL').ZG9A                00056700
&ZCSYSLIST(&ZASYSLNDX) SETC 'NONXKEY'           KEY IS NON-XKEY         00056800
              AIF   (K'&XFUNC LE 0).ZG9B        VALID                   00056900
&ZMS          SETC  '"CANCEL'   *KMEKA* MNOTE                           00057000
&ZMS          SETC  '&ZMS."'                                            00057100
&ZMS          SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'               00057200
&ZMS          SETC  '&ZMS "&XFUNC"'                                     00057300
              MNOTE 8,' &ZMS KEY.'                                      00057400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00057500
              AGO   .ZG9C                                               00057600
.*                                                                      00057700
.ZG9B         ANOP  ,                                                   00057800
&ZXFUNC       SETC  'INPUT'     SET IN/OUTPUT                           00057900
&XFUNC        SETC  'CANCEL'    SET XVARIABLE                           00058000
&ZXCANCEL     SETC  'INPUT'     SET IN/OUTPUT                           00058100
&XCANCEL      SETC  'CANCEL'    SET XVARIABLE PARM                      00058200
.ZG9C         ANOP  ,                                                   00058300
.*------------------------------------------------------------------    00058400
.***AG.KMEKY09 VALUE, RQD INPUT, ME KEYS -CHECK IF KEY ENTERED          00058500
              AIF   (K'&XFUNC GT 0).ZG13B                               00058600
&ZXFUNC       SETC  ''          RESET IN/OUTPUT                         00058700
&ZXNOTIFY     SETC  ''          RESET IN/OUTPUT                         00058800
&XFUNC        SETC  ''          ENSURE NULL                             00058900
&XNOTIFY      SETC  ''          ENSURE NULL                             00059000
&ZMS          SETC  'ONE OF THE FOLLOWING'      *KMERA* MNOTE           00059100
&ZMS          SETC  '&ZMS MUTUALLY EXCLUSIVE KEY(S) IS REQUIRED:'       00059200
&ZMS          SETC  '&ZMS "NOTIFY"'             VALID ME KEY            00059300
              MNOTE 8,' &ZMS OR "CANCEL".'                              00059400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00059500
.ZG13B        ANOP  ,                                                   00059600
.*-------------------------------------------------------------------   00059700
.***AG.KMEKY13 VALUE, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES          00059800
.ZG2          AIF   ('&XFUNC' NE 'NOTIFY').ZG9                          00059900
.*-------------------------------------------------------------------   00060000
.***AG.KCK02 VALUE, RQD INPUT, ME KEYS -GPR OUT OF RANGE                00060100
              AIF   (K'&ZXNOTIFY LE 0).ZG2R     NOT I/O                 00060200
              AIF   ('&XNOTIFY'(1,1) NE '(').ZG2R                       00060300
&ZCGPR        SETC  '&XNOTIFY'(2,K'&XNOTIFY-2)                          00060400
              AIF   ('&ZCGPR'(1,1) NE '0').ZG2P                         00060500
              AIF   (K'&ZCGPR GT 2).ZG2Q                                00060600
              AIF   ('&ZCGPR' EQ '0').ZG2Q                              00060700
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00060800
              AIF   (T'&ZCGPR NE 'N').ZG2Q      INVALID REG NAME        00060900
.ZG2P         ANOP  ,                                                   00061000
              AIF   (T'&ZCGPR NE 'N').ZG2R      NON NUMERIC             00061100
              AIF   ('&ZCGPR' LT '2').ZG2Q                              00061200
              AIF   ('&ZCGPR' LE '12').ZG2R                             00061300
.ZG2Q         ANOP  ,                                                   00061400
&ZMS          SETC  '"NOTIFY='  *KGPRA* MNOTE                           00061500
&ZMS          SETC  '&ZMS.&NOTIFY"'                                     00061600
&ZMS          SETC  '&ZMS ARGUMENT 0 MUST SPECIFY A REGISTER'           00061700
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00061800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00061900
.ZG2R         ANOP  ,                                                   00062000
.*----------------------------------------------------------------***   00062100
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00062200
              AIF   (N'&EXIT LE 1).ZG4A         CK NUM                  00062300
&ZMS          SETC  '"EXIT='    *KPOSA* MNOTE                           00062400
&ZMS          SETC  '&ZMS.&EXIT"'                                       00062500
&ZMS          SETC  '&ZMS "EXIT"'                                       00062600
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00062700
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00062800
.ZG4A         ANOP  ,                                                   00062900
.*-------------------------------------------------------------------   00063000
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00063100
&ZXEXIT       SETC  'INPUT'     SET IN/OUTPUT                           00063200
&XEXIT        SETC  '&EXIT(1)'  SET XVARIABLE                           00063300
              AIF   (N'&EXIT GT 1).ZG4B         MULTI PARMS             00063400
&XEXIT        SETC  '&EXIT'     SET XVARIABLE                           00063500
.ZG4B         AIF   (K'&EXIT(1) GT 0).ZG4C                              00063600
&ZXEXIT       SETC  ''          RESET IN/OUTPUT                         00063700
&ZMS          SETC  ' '         *KRQDA*                                 00063800
&ZMS          SETC  '&ZMS "EXIT" KEY AND ITS ARGUMENT'                  00063900
              MNOTE 8,' &ZMS ARE REQUIRED.'                             00064000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00064100
.ZG4C         ANOP  ,                                                   00064200
.*-------------------------------------------------------------------   00064300
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00064400
              AIF   (K'&ZXEXIT LE 0).ZG4R       NOT I/O                 00064500
              AIF   ('&XEXIT'(1,1) NE '(').ZG4R                         00064600
&ZCGPR        SETC  '&XEXIT'(2,K'&XEXIT-2)                              00064700
              AIF   ('&ZCGPR'(1,1) NE '0').ZG4P                         00064800
              AIF   (K'&ZCGPR GT 2).ZG4Q                                00064900
              AIF   ('&ZCGPR' EQ '0').ZG4Q                              00065000
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00065100
              AIF   (T'&ZCGPR NE 'N').ZG4Q      INVALID REG NAME        00065200
.ZG4P         ANOP  ,                                                   00065300
              AIF   (T'&ZCGPR NE 'N').ZG4R      NON NUMERIC             00065400
              AIF   ('&ZCGPR' LT '2').ZG4Q                              00065500
              AIF   ('&ZCGPR' LE '12').ZG4R                             00065600
.ZG4Q         ANOP  ,                                                   00065700
&ZMS          SETC  '"EXIT='    *KGPRA* MNOTE                           00065800
&ZMS          SETC  '&ZMS.&EXIT"'                                       00065900
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00066000
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00066100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00066200
.ZG4R         ANOP  ,                                                   00066300
.*----------------------------------------------------------------***   00066400
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00066500
              AIF   (N'&TOKEN LE 1).ZG7A        CK NUM                  00066600
&ZMS          SETC  '"TOKEN='   *KPOSA* MNOTE                           00066700
&ZMS          SETC  '&ZMS.&TOKEN"'                                      00066800
&ZMS          SETC  '&ZMS "TOKEN"'                                      00066900
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00067000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00067100
.ZG7A         ANOP  ,                                                   00067200
.*-------------------------------------------------------------------   00067300
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00067400
              AIF   (K'&TOKEN(1) LE 0).ZG7C     NO PARM                 00067500
&ZXTOKEN      SETC  'OUTPUT'    SET OUTPUT                              00067600
&XTOKEN       SETC  '&TOKEN(1)'                 SET XVARIABLE           00067700
              AIF   (N'&TOKEN GT 1).ZG7C        MULTIPLE PARMS          00067800
&XTOKEN       SETC  '&TOKEN'    SET XVARIABLE                           00067900
.ZG7C         ANOP  ,                                                   00068000
.*-------------------------------------------------------------------   00068100
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00068200
              AIF   (K'&ZXTOKEN LE 0).ZG7R      NOT I/O                 00068300
              AIF   ('&XTOKEN'(1,1) NE '(').ZG7R                        00068400
&ZCGPR        SETC  '&XTOKEN'(2,K'&XTOKEN-2)                            00068500
              AIF   ('&ZCGPR'(1,1) NE '0').ZG7P                         00068600
              AIF   (K'&ZCGPR GT 2).ZG7Q                                00068700
              AIF   ('&ZCGPR' EQ '0').ZG7Q                              00068800
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00068900
              AIF   (T'&ZCGPR NE 'N').ZG7Q      INVALID REG NAME        00069000
.ZG7P         ANOP  ,                                                   00069100
              AIF   (T'&ZCGPR NE 'N').ZG7R      NON NUMERIC             00069200
              AIF   ('&ZCGPR' LT '2').ZG7Q                              00069300
              AIF   ('&ZCGPR' LE '12').ZG7R                             00069400
.ZG7Q         ANOP  ,                                                   00069500
&ZMS          SETC  '"TOKEN='   *KGPRA* MNOTE                           00069600
&ZMS          SETC  '&ZMS.&TOKEN"'                                      00069700
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00069800
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00069900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00070000
.ZG7R         ANOP  ,                                                   00070100
.*-------------------------------------------------------------------   00070200
.***AG.KMEKY13 VALUE, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES          00070300
.ZG9          AIF   ('&XFUNC' NE 'CANCEL').ZG13                         00070400
.*-------------------------------------------------------------------   00070500
.***AG.KMEKY14 VALUE, RQD INPUT, ME KEYS -DISALLOWED KEYS               00070600
&ZCVAL        SETC ''           ERROR KEY FIELD                         00070700
.ZG9I0        AIF   (K'&EXIT LE 0).ZG9I1                                00070800
&ZCVAL        SETC '&ZCVAL EXIT'                DISALLOWED KEY          00070900
.ZG9I1        AIF   (K'&ZCVAL LE 0).ZG9J        KEY                     00071000
&ZCVAL        SETC '&ZCVAL'(2,K'&ZCVAL-1)                               00071100
&ZMS          SETC  '"CANCEL'   *KMEIA* MNOTE                           00071200
&ZMS          SETC  '&ZMS."'                                            00071300
&ZMS          SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'                00071400
              MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'                00071500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00071600
.ZG9J         ANOP  ,                                                   00071700
.*-------------------------------------------------------------------   00071800
.***AG.KCK02 VALUE, RQD INPUT, ME KEYS -GPR OUT OF RANGE                00071900
              AIF   (K'&ZXCANCEL LE 0).ZG9R     NOT I/O                 00072000
              AIF   ('&XCANCEL'(1,1) NE '(').ZG9R                       00072100
&ZCGPR        SETC  '&XCANCEL'(2,K'&XCANCEL-2)                          00072200
              AIF   ('&ZCGPR'(1,1) NE '0').ZG9P                         00072300
              AIF   (K'&ZCGPR GT 2).ZG9Q                                00072400
              AIF   ('&ZCGPR' EQ '0').ZG9Q                              00072500
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00072600
              AIF   (T'&ZCGPR NE 'N').ZG9Q      INVALID REG NAME        00072700
.ZG9P         ANOP  ,                                                   00072800
              AIF   (T'&ZCGPR NE 'N').ZG9R      NON NUMERIC             00072900
              AIF   ('&ZCGPR' LT '2').ZG9Q                              00073000
              AIF   ('&ZCGPR' LE '12').ZG9R                             00073100
.ZG9Q         ANOP  ,                                                   00073200
&ZMS          SETC  '"CANCEL='  *KGPRA* MNOTE                           00073300
&ZMS          SETC  '&ZMS.&CANCEL"'                                     00073400
&ZMS          SETC  '&ZMS ARGUMENT 0 MUST SPECIFY A REGISTER'           00073500
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00073600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00073700
.ZG9R         ANOP  ,                                                   00073800
.*----------------------------------------------------------------***   00073900
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00074000
              AIF   (N'&TOKEN LE 1).ZG11A       CK NUM                  00074100
&ZMS          SETC  '"TOKEN='   *KPOSA* MNOTE                           00074200
&ZMS          SETC  '&ZMS.&TOKEN"'                                      00074300
&ZMS          SETC  '&ZMS "TOKEN"'                                      00074400
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00074500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00074600
.ZG11A        ANOP  ,                                                   00074700
.*-------------------------------------------------------------------   00074800
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00074900
&ZXTOKEN      SETC  'INPUT'     SET IN/OUTPUT                           00075000
&XTOKEN       SETC  '&TOKEN(1)'                 SET XVARIABLE           00075100
              AIF   (N'&TOKEN GT 1).ZG11B       MULTI PARMS             00075200
&XTOKEN       SETC  '&TOKEN'    SET XVARIABLE                           00075300
.ZG11B        AIF   (K'&TOKEN(1) GT 0).ZG11C                            00075400
&ZXTOKEN      SETC  ''          RESET IN/OUTPUT                         00075500
&ZMS          SETC  ' '         *KRQDA*                                 00075600
&ZMS          SETC  '&ZMS "TOKEN" KEY AND ITS ARGUMENT'                 00075700
              MNOTE 8,' &ZMS ARE REQUIRED.'                             00075800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00075900
.ZG11C        ANOP  ,                                                   00076000
.*-------------------------------------------------------------------   00076100
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00076200
              AIF   (K'&ZXTOKEN LE 0).ZG11R     NOT I/O                 00076300
              AIF   ('&XTOKEN'(1,1) NE '(').ZG11R                       00076400
&ZCGPR        SETC  '&XTOKEN'(2,K'&XTOKEN-2)                            00076500
              AIF   ('&ZCGPR'(1,1) NE '0').ZG11P                        00076600
              AIF   (K'&ZCGPR GT 2).ZG11Q                               00076700
              AIF   ('&ZCGPR' EQ '0').ZG11Q                             00076800
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00076900
              AIF   (T'&ZCGPR NE 'N').ZG11Q     INVALID REG NAME        00077000
.ZG11P        ANOP  ,                                                   00077100
              AIF   (T'&ZCGPR NE 'N').ZG11R     NON NUMERIC             00077200
              AIF   ('&ZCGPR' LT '2').ZG11Q                             00077300
              AIF   ('&ZCGPR' LE '12').ZG11R                            00077400
.ZG11Q        ANOP  ,                                                   00077500
&ZMS          SETC  '"TOKEN='   *KGPRA* MNOTE                           00077600
&ZMS          SETC  '&ZMS.&TOKEN"'                                      00077700
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00077800
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00077900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00078000
.ZG11R        ANOP  ,                                                   00078100
.*-------------------------------------------------------------------   00078200
.***AG.KMEKY15 VALUE, RQD INPUT, ME KEYS -END                           00078300
.ZG13         ANOP  ,           END MUTUALLY EXCLUSIVE KEYS             00078400
.*-------------------------------------------------------------------   00078500
.***AG.KMEKY05 VALUE, RQD INPUT, ME KEYS -NO ARGUMENTS                  00078600
&XTYPE        SETC  ''          INITIALIZE XVARIABLE                    00078700
&ZASYSLNDX    SETA  0                                                   00078800
.ZG15A        ANOP  ,           POSITIONAL KEY SEARCH                   00078900
&ZASYSLNDX    SETA  &ZASYSLNDX+1                NEXT POSITIONAL         00079000
         AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG15B  DONE                   00079100
         AIF   ('&ZCSYSLIST(&ZASYSLNDX)' EQ 'NONXKEY').ZG15A            00079200
         AIF   ('&SYSLIST(&ZASYSLNDX)' NE 'CHGREQ').ZG15A               00079300
&ZCSYSLIST(&ZASYSLNDX) SETC 'NONXKEY'           KEY IS NON-XKEY         00079400
&ZXTYPE       SETC  'INPUT'     SET IN/OUTPUT                           00079500
&XTYPE        SETC  'CHGREQ'    SET XVARIABLE                           00079600
&ZXCHGREQ     SETC  'INPUT'     SET IN/OUTPUT                           00079700
&XCHGREQ      SETC  'CHGREQ'    SET XVARIABLE PARM                      00079800
.ZG15B        ANOP  ,                                                   00079900
.*-------------------------------------------------------------------   00080000
.***AG.KMEKY06 VALUE, RQD INPUT, ME KEYS -NO ARGUMENTS                  00080100
&ZASYSLNDX    SETA  0                                                   00080200
.ZG16A        ANOP  ,           POSITIONAL KEY SEARCH                   00080300
&ZASYSLNDX    SETA  &ZASYSLNDX+1                NEXT POSITIONAL         00080400
         AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG16C  DONE                   00080500
         AIF   ('&ZCSYSLIST(&ZASYSLNDX)' EQ 'NONXKEY').ZG16A            00080600
         AIF   ('&SYSLIST(&ZASYSLNDX)' NE 'CHGCOMPL').ZG16A             00080700
&ZCSYSLIST(&ZASYSLNDX) SETC 'NONXKEY'           KEY IS NON-XKEY         00080800
              AIF   (K'&XTYPE LE 0).ZG16B       VALID                   00080900
&ZMS          SETC  '"CHGCOMPL'                 *KMEKA* MNOTE           00081000
&ZMS          SETC  '&ZMS."'                                            00081100
&ZMS          SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'               00081200
&ZMS          SETC  '&ZMS "&XTYPE"'                                     00081300
              MNOTE 8,' &ZMS KEY.'                                      00081400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00081500
              AGO   .ZG16C                                              00081600
.*                                                                      00081700
.ZG16B        ANOP  ,                                                   00081800
&ZXTYPE       SETC  'INPUT'     SET IN/OUTPUT                           00081900
&XTYPE        SETC  'CHGCOMPL'  SET XVARIABLE                           00082000
&ZXCHGCOMPL   SETC  'INPUT'     SET IN/OUTPUT                           00082100
&XCHGCOMPL    SETC  'CHGCOMPL'  SET XVARIABLE PARM                      00082200
.ZG16C        ANOP  ,                                                   00082300
.*------------------------------------------------------------------    00082400
.***AG.KMEKY09 VALUE, RQD INPUT, ME KEYS -CHECK IF KEY ENTERED          00082500
              AIF   (K'&XTYPE GT 0).ZG17B                               00082600
&ZXTYPE       SETC  ''          RESET IN/OUTPUT                         00082700
&ZXCHGREQ     SETC  ''          RESET IN/OUTPUT                         00082800
&XTYPE        SETC  ''          ENSURE NULL                             00082900
&XCHGREQ      SETC  ''          ENSURE NULL                             00083000
&ZMS          SETC  'ONE OF THE FOLLOWING'      *KMERA* MNOTE           00083100
&ZMS          SETC  '&ZMS MUTUALLY EXCLUSIVE KEY(S) IS REQUIRED:'       00083200
&ZMS          SETC  '&ZMS "CHGREQ"'             VALID ME KEY            00083300
              MNOTE 8,' &ZMS OR "CHGCOMPL".'                            00083400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00083500
.ZG17B        ANOP  ,                                                   00083600
.*-------------------------------------------------------------------   00083700
.***AG.KMEKY13 VALUE, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES          00083800
.ZG15         AIF   ('&XTYPE' NE 'CHGREQ').ZG16                         00083900
.*-------------------------------------------------------------------   00084000
.***AG.KCK02 VALUE, RQD INPUT, ME KEYS -GPR OUT OF RANGE                00084100
              AIF   (K'&ZXCHGREQ LE 0).ZG15R    NOT I/O                 00084200
              AIF   ('&XCHGREQ'(1,1) NE '(').ZG15R                      00084300
&ZCGPR        SETC  '&XCHGREQ'(2,K'&XCHGREQ-2)                          00084400
              AIF   ('&ZCGPR'(1,1) NE '0').ZG15P                        00084500
              AIF   (K'&ZCGPR GT 2).ZG15Q                               00084600
              AIF   ('&ZCGPR' EQ '0').ZG15Q                             00084700
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00084800
              AIF   (T'&ZCGPR NE 'N').ZG15Q     INVALID REG NAME        00084900
.ZG15P        ANOP  ,                                                   00085000
              AIF   (T'&ZCGPR NE 'N').ZG15R     NON NUMERIC             00085100
              AIF   ('&ZCGPR' LT '2').ZG15Q                             00085200
              AIF   ('&ZCGPR' LE '12').ZG15R                            00085300
.ZG15Q        ANOP  ,                                                   00085400
&ZMS          SETC  '"CHGREQ='  *KGPRA* MNOTE                           00085500
&ZMS          SETC  '&ZMS.&CHGREQ"'                                     00085600
&ZMS          SETC  '&ZMS ARGUMENT 0 MUST SPECIFY A REGISTER'           00085700
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00085800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00085900
.ZG15R        ANOP  ,                                                   00086000
.*-------------------------------------------------------------------   00086100
.***AG.KMEKY13 VALUE, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES          00086200
.ZG16         AIF   ('&XTYPE' NE 'CHGCOMPL').ZG17                       00086300
.*-------------------------------------------------------------------   00086400
.***AG.KCK02 VALUE, RQD INPUT, ME KEYS -GPR OUT OF RANGE                00086500
              AIF   (K'&ZXCHGCOMPL LE 0).ZG16R  NOT I/O                 00086600
              AIF   ('&XCHGCOMPL'(1,1) NE '(').ZG16R                    00086700
&ZCGPR        SETC  '&XCHGCOMPL'(2,K'&XCHGCOMPL-2)                      00086800
              AIF   ('&ZCGPR'(1,1) NE '0').ZG16P                        00086900
              AIF   (K'&ZCGPR GT 2).ZG16Q                               00087000
              AIF   ('&ZCGPR' EQ '0').ZG16Q                             00087100
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00087200
              AIF   (T'&ZCGPR NE 'N').ZG16Q     INVALID REG NAME        00087300
.ZG16P        ANOP  ,                                                   00087400
              AIF   (T'&ZCGPR NE 'N').ZG16R     NON NUMERIC             00087500
              AIF   ('&ZCGPR' LT '2').ZG16Q                             00087600
              AIF   ('&ZCGPR' LE '12').ZG16R                            00087700
.ZG16Q        ANOP  ,                                                   00087800
&ZMS          SETC  '"CHGCOMPL='                *KGPRA* MNOTE           00087900
&ZMS          SETC  '&ZMS.&CHGCOMPL"'                                   00088000
&ZMS          SETC  '&ZMS ARGUMENT 0 MUST SPECIFY A REGISTER'           00088100
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00088200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00088300
.ZG16R        ANOP  ,                                                   00088400
.*-------------------------------------------------------------------   00088500
.***AG.KMEKY15 VALUE, RQD INPUT, ME KEYS -END                           00088600
.ZG17         ANOP  ,           END MUTUALLY EXCLUSIVE KEYS             00088700
.*----------------------------------------------------------------***   00088800
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00088900
              AIF   (N'&RETCODE LE 1).ZG19A     CK NUM                  00089000
&ZMS          SETC  '"RETCODE='                 *KPOSA* MNOTE           00089100
&ZMS          SETC  '&ZMS.&RETCODE"'                                    00089200
&ZMS          SETC  '&ZMS "RETCODE"'                                    00089300
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00089400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00089500
.ZG19A        ANOP  ,                                                   00089600
.*-------------------------------------------------------------------   00089700
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00089800
              AIF   (K'&RETCODE(1) LE 0).ZG19C  NO PARM                 00089900
&ZXRETCODE    SETC  'OUTPUT'    SET OUTPUT                              00090000
&XRETCODE     SETC  '&RETCODE(1)'               SET XVARIABLE           00090100
              AIF   (N'&RETCODE GT 1).ZG19C     MULTIPLE PARMS          00090200
&XRETCODE     SETC  '&RETCODE'  SET XVARIABLE                           00090300
.ZG19C        ANOP  ,                                                   00090400
.*-------------------------------------------------------------------   00090500
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00090600
              AIF   (K'&ZXRETCODE LE 0).ZG19R   NOT I/O                 00090700
              AIF   ('&XRETCODE'(1,1) NE '(').ZG19R                     00090800
&ZCGPR        SETC  '&XRETCODE'(2,K'&XRETCODE-2)                        00090900
              AIF   ('&ZCGPR'(1,1) NE '0').ZG19P                        00091000
              AIF   (K'&ZCGPR GT 2).ZG19Q                               00091100
              AIF   ('&ZCGPR' EQ '0').ZG19Q                             00091200
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00091300
              AIF   (T'&ZCGPR NE 'N').ZG19Q     INVALID REG NAME        00091400
.ZG19P        ANOP  ,                                                   00091500
              AIF   (T'&ZCGPR NE 'N').ZG19R     NON NUMERIC             00091600
              AIF   ('&ZCGPR' LT '2').ZG19Q                             00091700
              AIF   ('&ZCGPR' LE '12').ZG19R                            00091800
.ZG19Q        ANOP  ,                                                   00091900
&ZMS          SETC  '"RETCODE='                 *KGPRA* MNOTE           00092000
&ZMS          SETC  '&ZMS.&RETCODE"'                                    00092100
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00092200
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00092300
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00092400
.ZG19R        ANOP  ,                                                   00092500
.******************************************************************     00092600
.***AH.P00 CHECK STANDALONE POSITIONAL VARIABLES                        00092700
.******************************************************************     00092800
              ACTR  10000                                               00092900
.*-------------------------------------------------------------------   00093000
.***AH.P03 EXTRA POSITIONALS AMONG NON-X KEYS                           00093100
&ZCVAL        SETC  ''          ERROR FIELD                             00093200
&ZAWRK        SETA  0           POSITIONAL COUNTER                      00093300
&ZASYSLNDX    SETA  0           NON-X KEY COUNTER                       00093400
.ZGLIST2      ANOP  ,                                                   00093500
&ZASYSLNDX    SETA  &ZASYSLNDX+1                NEXT NON-X KEY          00093600
         AIF   (&ZASYSLNDX GT N'&SYSLIST).ZGLIST3  DONE                 00093700
         AIF   ('&ZCSYSLIST(&ZASYSLNDX)' EQ 'NONXKEY').ZGLIST2          00093800
&ZAWRK        SETA  &ZAWRK+1    NEXT POSITIONAL                         00093900
              AIF   (&ZAWRK LE 0).ZGLIST2                               00094000
&ZCVAL        SETC '&ZCVAL,&SYSLIST(&ZASYSLNDX)'  EXTRA                 00094100
              AGO   .ZGLIST2                                            00094200
.*                                                                      00094300
.ZGLIST3  AIF  (K'&ZCVAL LE 0).ZGLISTX                                  00094400
&ZCVAL        SETC '&ZCVAL'(2,K'&ZCVAL-1)       STRIP COMMA             00094500
&ZMS          SETC  'POSITIONAL ARGUMENT(S),'   *PPOSA* MNOTE           00094600
&ZMS          SETC  '&ZMS "&ZCVAL"'                                     00094700
&ZMS          SETC  '&ZMS CANNOT BE USED.'                              00094800
&ZMS          SETC  '&ZMS NO POSITIONAL ARGUMENTS'                      00094900
              MNOTE 8,' &ZMS ARE ALLOWED.'                              00095000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00095100
.ZGLISTX      ANOP  ,                                                   00095200
&ZASYSLNDX    SETA  0                                                   00095300
.*-------------------------------------------------------------------   00095400
.***AG.MF04 MF=(SLE)                                                    00095500
.ZGMFX        ANOP  ,           END OF FULL SYNTAX CHECK                00095600
.*******************************************************************    00095700
.***AE.ZMR01 NO CODE GENERATED IF ERRORS DETECTED                       00095800
.*******************************************************************    00095900
              AIF   (&ZMACRET NE 0).ZLX2        ERROR DETECTED          00096000
.*******************************************************************    00096100
.***AE.01  START OF CONFCHG MACRO CODE                                  00096200
.*******************************************************************    00096300
              LCLC  &M0M0001                 LABEL NAME                 00096400
&M0M0001      SETC  '&XLABEL'                SET LABEL                  00096500
              AIF   (K'&XLABEL NE 0).XLAB2                              00096600
&M0M0001      SETC  'M00M&SYSNDX'            DEFAULT LABEL              00096700
.*                                                                      00096800
.XLAB2        ANOP  ,                                                   00096900
&M0M0001 DS    0H                             CONFCHG-1                 00097000
.*******************************************************************    00097100
.***AE.PR01 PRINT CONTROLS, DEFAULT IS YES                              00097200
.*******************************************************************    00097300
              PUSH  PRINT                                               00097400
              AIF   ('&ZPRINT' NE 'NO').ZPRINTX  TURN PRINT ON          00097500
              PRINT OFF         ++ PR01                                 00097600
              AGO   .ZPRNTXX                                            00097700
.ZPRINTX      PRINT ON                                                  00097800
.ZPRNTXX      ANOP  ,                                                   00097900
.********************************************************************   00098000
.***AL.L01 INTERNAL ARRAY TO PRODUCE FORMATTED CODE                     00098100
.********************************************************************   00098200
                      LCLA  &ZOPN          LIST INSTRUCTION INDEX       00098300
                      LCLA  &ZOPN1         INVOCATION INDEX             00098400
                      LCLC  &ZOPL(4095)    LABEL                        00098500
                      LCLC  &ZOPO(4095)    OPERATION                    00098600
                      LCLC  &ZOPV(4095)    VALUE                        00098700
                      LCLC  &ZOPD(4095)    DESCRIPTION                  00098800
.*                                                                      00098900
&ZOPN                 SETA  0              INITIAL INST INDEX VALUE     00099000
.******************************************************************     00099100
.***AL.L10 CONFCHG FMT=LIST MF=S|L PARAMETERS                           00099200
.******************************************************************     00099300
                      AIF   ('&XMF' EQ 'L').ZLMFSL2                     00099400
                      AIF   ('&XMF' NE 'S').ZLMFSLX                     00099500
&XMFCTRL              SETC  '#Z'.'&SYSNDX'(2,3).'A'                     00099600
&XMFATTR              SETC  '0D'                                        00099700
.*                                                                      00099800
&ZOPN                 SETA  &ZOPN+1                                     00099900
&ZOPL(&ZOPN)          SETC  ' '                                         00100000
&ZOPO(&ZOPN)          SETC  'B'                                         00100100
&ZOPV(&ZOPN)          SETC  '&XMFCTRL.S'                                00100200
&ZOPD(&ZOPN)          SETC  '++ CONFCHG ARG PARMS'                      00100300
.*                                                                      00100400
&ZOPN                 SETA  &ZOPN+1                                     00100500
&ZOPL(&ZOPN)          SETC  ' '                                         00100600
&ZOPO(&ZOPN)          SETC  'SPACE'                                     00100700
&ZOPV(&ZOPN)          SETC  '1'                                         00100800
&ZOPD(&ZOPN)          SETC  ' '                                         00100900
.*                                                                      00101000
.ZLMFSL2              ANOP  ,                                           00101100
.*-------------------------------------------------------------------   00101200
.***AM.L01  CONFCHG FMT=LIST PARAMETERS                                 00101300
&ZOPN                 SETA &ZOPN+1                                      00101400
&ZOPL(&ZOPN)          SETC '&XMFCTRL'                                   00101500
&ZOPO(&ZOPN)          SETC 'DS'                                         00101600
&ZOPV(&ZOPN)          SETC '&XMFATTR'                                   00101700
&ZOPD(&ZOPN)          SETC '++ CONFCHG PARM LIST'                       00101800
.*-------------------------------------------------------------------   00101900
.***AM.L02 XVERSION XL1                                                 00102000
&ZOPN                 SETA &ZOPN+1                                      00102100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XVERSION'                         00102200
&ZOPO(&ZOPN)          SETC 'DS'                                         00102300
&ZOPV(&ZOPN)          SETC 'XL1'                                        00102400
&ZOPD(&ZOPN)          SETC '++ INPUT XVERSION'                          00102500
.*-------------------------------------------------------------------   00102600
.***AM.L03 XFLAGS BL.8                                                  00102700
&ZOPN                 SETA &ZOPN+1                                      00102800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XFLAGS'                           00102900
&ZOPO(&ZOPN)          SETC 'DS'                                         00103000
&ZOPV(&ZOPN)          SETC 'BL.8'                                       00103100
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             00103200
.*                                                                      00103300
&ZOPN                 SETA  &ZOPN+1                                     00103400
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_NOTIFY'                  00103500
&ZOPO(&ZOPN)          SETC  'EQU'                                       00103600
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             00103700
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               00103800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).NOTIFY'                       00103900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00104000
.*                                                                      00104100
&ZOPN                 SETA  &ZOPN+1                                     00104200
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_CHGREQ'                  00104300
&ZOPO(&ZOPN)          SETC  'EQU'                                       00104400
&ZOPV(&ZOPN)          SETC  'B''01000000'''                             00104500
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               00104600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).CHGREQ'                       00104700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00104800
.*-------------------------------------------------------------------   00104900
.***AM.L09  XRESERVED1 CL2                                              00105000
&ZOPN                 SETA &ZOPN+1                                      00105100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRESERVED1'                       00105200
&ZOPO(&ZOPN)          SETC 'DS'                                         00105300
&ZOPV(&ZOPN)          SETC 'CL2'                                        00105400
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XRESERVED1'                 00105500
.*-------------------------------------------------------------------   00105600
.***AM.L09  XTOKEN CL4                                                  00105700
&ZOPN                 SETA &ZOPN+1                                      00105800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XTOKEN'                           00105900
&ZOPO(&ZOPN)          SETC 'DS'                                         00106000
&ZOPV(&ZOPN)          SETC 'CL4'                                        00106100
&ZOPD(&ZOPN)          SETC '++ &ZXTOKEN  XTOKEN'                        00106200
.*-------------------------------------------------------------------   00106300
.***AM.L09  XEXIT A                                                     00106400
&ZOPN                 SETA &ZOPN+1                                      00106500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XEXIT'                            00106600
&ZOPO(&ZOPN)          SETC 'DS'                                         00106700
&ZOPV(&ZOPN)          SETC 'A'                                          00106800
&ZOPD(&ZOPN)          SETC '++ &ZXEXIT  XEXIT'                          00106900
.*-------------------------------------------------------------------   00107000
.***AM.L10 END OF CONFCHG LIST PARAMETERS                               00107100
&ZOPN                 SETA &ZOPN+1                                      00107200
&ZOPL(&ZOPN)          SETC '&XMFCTRL.L'                                 00107300
&ZOPO(&ZOPN)          SETC 'EQU'                                        00107400
&ZOPV(&ZOPN)          SETC '*-&XMFCTRL'                                 00107500
&ZOPD(&ZOPN)          SETC '++ LENGTH OF PLIST'                         00107600
.*                                                                      00107700
&ZOPN                 SETA &ZOPN+1                                      00107800
&ZOPL(&ZOPN)          SETC ' '                                          00107900
&ZOPO(&ZOPN)          SETC 'SPACE'                                      00108000
&ZOPV(&ZOPN)          SETC '1'                                          00108100
&ZOPD(&ZOPN)          SETC ' '                                          00108200
.*-------------------------------------------------------------------   00108300
.***AL.L12 CONFCHG FMT=LIST MF=S|L PARAMETERS                           00108400
                      AIF   ('&XMF' EQ 'L').ZMFLX  DONE IF MF=L         00108500
.*                                                                      00108600
&ZOPN                 SETA  &ZOPN+1                                     00108700
&ZOPL(&ZOPN)          SETC  '&XMFCTRL.S'                                00108800
&ZOPO(&ZOPN)          SETC  'DC'                                        00108900
&ZOPV(&ZOPN)          SETC  '0H''0'''                                   00109000
&ZOPD(&ZOPN)          SETC  '++ CONFCHG ARG PARMS'                      00109100
.*                                                                      00109200
.ZLMFSLX              ANOP  ,                                           00109300
.*-------------------------------------------------------------------   00109400
.***AL.L13 SET ZPLLEN TO ITS APPROPRIATE VALUE                          00109500
&ZPLLEN               SETA 12                                           00109600
.*                                                                      00109700
.******************************************************************     00109800
.***AI.L01 CONFCHG FMT=LIST FILL IN PARAMETER AREA                      00109900
.******************************************************************     00110000
                      ACTR  10000                                       00110100
&ZCVAL                SETC  'LA'           ASSUME XA MODE               00110200
                      AIF   ('&SYSASCE' EQ 'P').ZIMFXA  SYSTATE PRI     00110300
&ZCVAL                SETC  'LAE'          XAX MODE                     00110400
.ZIMFXA               ANOP ,                                            00110500
.*                                                                      00110600
                      AIF   ('&XMFCTRL'(1,1) NE '(').ZIMFN2  NOT GPR    00110700
&ZCGPR                SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)  GET GPR         00110800
                      AIF   ('&ZCGPR' EQ 'GPR1').ZIMFNX                 00110900
                      AIF   ('&ZCGPR' EQ 'GPR01').ZIMFNX                00111000
                      AIF   ('&ZCGPR' EQ 'REG1').ZIMFNX                 00111100
                      AIF   ('&ZCGPR' EQ 'REG01').ZIMFNX                00111200
                      AIF   ('&ZCGPR' EQ 'R1').ZIMFNX                   00111300
                      AIF   ('&ZCGPR' EQ '1').ZIMFNX                    00111400
                      AIF   ('&ZCGPR' EQ '01').ZIMFNX                   00111500
&ZOPN                 SETA  &ZOPN+1                                     00111600
&ZOPL(&ZOPN)          SETC  ' '                                         00111700
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00111800
&ZOPV(&ZOPN)          SETC  '1,0(,&ZCGPR)'                              00111900
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00112000
                      AGO   .ZIMFNX                                     00112100
.*                                                                      00112200
.ZIMFN2               ANOP ,                                            00112300
&ZOPN                 SETA  &ZOPN+1                                     00112400
&ZOPL(&ZOPN)          SETC  ' '                                         00112500
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00112600
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL'                                00112700
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00112800
.ZIMFNX               ANOP ,                                            00112900
.********************************************************************   00113000
.***AI.L02 CONFCHG FMT=LIST INITIALIZE PARAMETER AREA                   00113100
.********************************************************************   00113200
.***AI.L03 MF=(SLE)                                                     00113300
                      AIF   ('&XMF' EQ 'L').ZIMFLX                      00113400
.*                                                                      00113500
&ZOPN                 SETA  &ZOPN+1                                     00113600
&ZOPL(&ZOPN)          SETC  ' '                                         00113700
&ZOPO(&ZOPN)          SETC  'XC'                                        00113800
&ZOPV(&ZOPN)          SETC  '0(&ZPLLEN,1),0(1)'                         00113900
&ZOPD(&ZOPN)          SETC  '++ INITIALIZE'                             00114000
.ZIMFLX               ANOP  ,                                           00114100
.*-------------------------------------------------------------------   00114200
.***AI.L04A XVERSION XL1                                                00114300
&ZOPN                 SETA  &ZOPN+1                                     00114400
&ZOPL(&ZOPN)          SETC  ' '                                         00114500
&ZOPO(&ZOPN)          SETC  'MVI'                                       00114600
&ZOPV(&ZOPN)          SETC  '0(1),1'                                    00114700
&ZOPD(&ZOPN)          SETC  '++ INPUT XVERSION XL1'                     00114800
.*-------------------------------------------------------------------   00114900
.***AI.L05 XFLAGS BL1                                                   00115000
&ZW                   SETC  ''                                          00115100
&ZCLNG                SETC  ''             RESET BIT ON FLAG            00115200
.*-------------------------------------------------------------------   00115300
.***AI.L08 XFLAGS "NOTIFY"                                              00115400
.***      BL1'1XXXXXXX'                                                 00115500
         AIF   ('&XNOTIFY' EQ '').ZI3A                                  00115600
&ZW                   SETC  '&ZW.1'                                     00115700
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00115800
                      AGO   .ZI3C                                       00115900
.*                                                                      00116000
.ZI3A                 ANOP  ,                                           00116100
&ZW                   SETC  '&ZW.0'                                     00116200
.ZI3C                 ANOP  ,                                           00116300
.*-------------------------------------------------------------------   00116400
.***AI.L08 XFLAGS "CHGREQ"                                              00116500
.***      BL1'X1XXXXXX'                                                 00116600
         AIF   ('&XCHGREQ' EQ '').ZI4A                                  00116700
&ZW                   SETC  '&ZW.1000000'                               00116800
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00116900
                      AGO   .ZI4C                                       00117000
.*                                                                      00117100
.ZI4A                 ANOP  ,                                           00117200
&ZW                   SETC  '&ZW.0000000'                               00117300
.ZI4C                 ANOP  ,                                           00117400
.*-------------------------------------------------------------------   00117500
.***AI.L11 XFLAGS BL1                                                   00117600
                      AIF   ('&ZCLNG' NE 'YES').ZI4E  ALL ZERO BITS     00117700
&ZOPN                 SETA  &ZOPN+1                                     00117800
&ZOPL(&ZOPN)          SETC  ' '                                         00117900
&ZOPO(&ZOPN)          SETC  'OI'                                        00118000
&ZOPV(&ZOPN)          SETC  '1(1),B''&ZW'''                             00118100
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              00118200
.ZI4E                 ANOP  ,                                           00118300
.*-------------------------------------------------------------------   00118400
.***AI.L25  XTOKEN CL4                                                  00118500
                      AIF   ('&ZXTOKEN' EQ '').ZI6E  NOT USED           00118600
                      AIF   ('&ZXTOKEN' EQ 'OUTPUT').ZI6E               00118700
&ZCGPR                SETC  '&XTOKEN'                                   00118800
.*                                                                      00118900
                      AIF   ('&XTOKEN'(1,1) NE '(').ZI6B  NOT GPR       00119000
&ZCGPR   SETC  '0('.'&XTOKEN'(2,K'&XTOKEN-2).')'                        00119100
.ZI6B                 ANOP  ,                                           00119200
.*                                                                      00119300
&ZOPN                 SETA  &ZOPN+1                                     00119400
&ZOPL(&ZOPN)          SETC  ' '                                         00119500
&ZOPO(&ZOPN)          SETC  'MVC'                                       00119600
&ZOPV(&ZOPN)          SETC  '4(4,1),&ZCGPR'                             00119700
&ZOPD(&ZOPN)          SETC  '++ &ZXTOKEN XTOKEN CL4'                    00119800
.*                                                                      00119900
.ZI6E                 ANOP  ,                                           00120000
.*-------------------------------------------------------------------   00120100
.***AI.L25  XEXIT AL4                                                   00120200
                      AIF   ('&ZXEXIT' EQ '').ZI7E  NOT USED            00120300
                      AIF   ('&ZXEXIT' EQ 'OUTPUT').ZI7E                00120400
&ZCGPR                SETC  '&XEXIT'                                    00120500
.*                                                                      00120600
                      AIF   ('&XEXIT'(1,1) NE '(').ZI7B  NOT GPR        00120700
&ZCGPR   SETC  '0('.'&XEXIT'(2,K'&XEXIT-2).')'                          00120800
                      AGO   .ZI7D                                       00120900
.ZI7B                 ANOP  ,                                           00121000
.*                                                                      00121100
&ZC                   SETC  '&XEXIT'(1,1)                               00121200
                      AIF   (T'&ZC NE 'N').ZI7D                         00121300
&ZCGPR                SETC  '=AL4(&XEXIT)'                              00121400
.*                                                                      00121500
.ZI7D                 ANOP  ,                                           00121600
.*                                                                      00121700
&ZOPN                 SETA  &ZOPN+1                                     00121800
&ZOPL(&ZOPN)          SETC  ' '                                         00121900
&ZOPO(&ZOPN)          SETC  'MVC'                                       00122000
&ZOPV(&ZOPN)          SETC  '8(4,1),&ZCGPR'                             00122100
&ZOPD(&ZOPN)          SETC  '++ &ZXEXIT XEXIT AL4'                      00122200
.*                                                                      00122300
.ZI7E                 ANOP  ,                                           00122400
.*-------------------------------------------------------------------   00122500
&ZOPN1                SETA &ZOPN                                        00122600
.*******************************************************************    00122700
.***  PROCESS CONFCHG OUTPUT PARAMETERS                                 00122800
.*******************************************************************    00122900
                      ACTR  10000                                       00123000
.*------------------------------------------------------------------    00123100
.***AO.L02 XTOKEN CL4                                                   00123200
         AIF   ('&ZXTOKEN' EQ 'OUTPUT').ZO6A  OUTPUT                    00123300
         AIF   ('&ZXTOKEN' NE 'INOUT').ZO6C  INOUT                      00123400
.ZO6A    AIF   ('&XTOKEN'(1,1) NE '(').ZO6B  ADDR IN GPR                00123500
&ZCGPR   SETC  '&XTOKEN'(2,K'&XTOKEN-2)                                 00123600
&ZOPN                 SETA  &ZOPN+1                                     00123700
&ZOPL(&ZOPN)          SETC  ' '                                         00123800
&ZOPO(&ZOPN)          SETC  'MVC'                                       00123900
&ZOPV(&ZOPN)          SETC  '0(4,&ZCGPR),4(1)'                          00124000
&ZOPD(&ZOPN)          SETC  '++ XTOKEN CL4'                             00124100
                      AGO   .ZO6C                                       00124200
.*                                                                      00124300
.ZO6B                 ANOP  ,                                           00124400
&ZOPN                 SETA  &ZOPN+1                                     00124500
&ZOPL(&ZOPN)          SETC  ' '                                         00124600
&ZOPO(&ZOPN)          SETC  'MVC'                                       00124700
&ZOPV(&ZOPN)          SETC  '&XTOKEN.(4),4(1)'                          00124800
&ZOPD(&ZOPN)          SETC  '++ XTOKEN CL4'                             00124900
.ZO6C                 ANOP  ,                                           00125000
.*******************************************************************    00125100
.***AO.X02  RETURN CODE PROCESSING                                      00125200
.*******************************************************************    00125300
                      AIF   (N'&RETCODE LE 0).ZMRETX                    00125400
                      AIF   ('&XRETCODE'(1,1) EQ '(').ZMRET2            00125500
                      AIF   ('&XRETCODE' EQ 'GPR15').ZMRETX             00125600
                      AIF   ('&XRETCODE' EQ 'REG15').ZMRETX             00125700
                      AIF   ('&XRETCODE' EQ 'R15').ZMRETX               00125800
                      AIF   ('&XRETCODE' EQ '15').ZMRETX                00125900
&ZOPN                 SETA  &ZOPN+1                                     00126000
&ZOPL(&ZOPN)          SETC  ' '                                         00126100
&ZOPO(&ZOPN)          SETC  'ST'                                        00126200
&ZOPV(&ZOPN)          SETC  '15,&XRETCODE'                              00126300
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00126400
                      AGO   .ZMRETX                                     00126500
.*                                                                      00126600
.ZMRET2               ANOP  ,                                           00126700
&ZCGPR                SETC  '&XRETCODE'(2,K'&XRETCODE-2)                00126800
                      AIF   ('&ZCGPR' EQ 'GPR15').ZMRETX                00126900
                      AIF   ('&ZCGPR' EQ 'REG15').ZMRETX                00127000
                      AIF   ('&ZCGPR' EQ 'R15').ZMRETX                  00127100
                      AIF   ('&ZCGPR' EQ '15').ZMRETX                   00127200
&ZOPN                 SETA  &ZOPN+1                                     00127300
&ZOPL(&ZOPN)          SETC  ' '                                         00127400
&ZOPO(&ZOPN)          SETC  'LR'                                        00127500
&ZOPV(&ZOPN)          SETC  '&ZCGPR,15'                                 00127600
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00127700
.ZMRETX               ANOP  ,                                           00127800
.*******************************************************************    00127900
.***AO.X04  LABEL FOR MF=L PROCESSING                                   00128000
.*******************************************************************    00128100
.ZMFLX                ANOP  ,              MF=L PROCESSING              00128200
.*******************************************************************    00128300
.***AO.X05  FORMAT GENERATED INSTRUCTIONS                               00128400
.*******************************************************************    00128500
                      ACTR  10000                                       00128600
.*                                                                      00128700
                      LCLA  &ZLC           COLUMN POSITION              00128800
                      LCLA  &ZOPX          LIST TABLE INDEX             00128900
                      LCLC  &ZLL           LABEL                        00129000
                      LCLC  &ZLOP          OPERATION                    00129100
                      LCLC  &ZLV           VALUE                        00129200
                      LCLC  &ZLD           DESCRIPTION                  00129300
.*                                                                      00129400
&ZOPX                 SETA  1                                           00129500
.ZL2                  AIF   (&ZOPX GT &ZOPN1).ZLX  B IF DONE            00129600
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00129700
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00129800
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00129900
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00130000
                      AIF   (K'&ZLD LE 0).ZL5                           00130100
&ZLC                  SETA  35             COMMENT COLUMN               00130200
                      AIF   ('&ZLD'(1,1) NE '*').ZL3                    00130300
&ZLC                  SETA  33             COMMMENT COLUMN              00130400
.ZL3                  AIF   (K'&ZLV GE &ZLC-16-1).ZL4                   00130500
&ZLV                  SETC  '&ZLV'.' '                                  00130600
                      AGO   .ZL3                                        00130700
.*                                                                      00130800
.ZL4                  ANOP  ,                                           00130900
&ZLV                  SETC  '&ZLV'.' '                                  00131000
.ZL5                  ANOP  ,                                           00131100
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00131200
.*                                                                      00131300
&ZLL     &ZLOP &ZLV                                                     00131400
.*                                                                      00131500
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00131600
                      AGO   .ZL2           CONTINUE LOOPING             00131700
.*                                                                      00131800
.ZLX                  ANOP  ,                                           00131900
                      AIF   ('&XMF' EQ 'L').ZLINKX  MF=L                00132000
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00132100
.*-----------BAL invocation code-------------                           00132200
.*********************************************************************  00132300
.*                                                                   *  00132400
.*  Link to IOS Configuration Change Exit Handler                    *  00132500
.*                                                                   *  00132600
.*********************************************************************  00132700
         LINK  EP=IOSVCCEH                                              00132800
         LA    1,&XMFCTRL                                               00132900
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00133000
.ZLINKX               ANOP  ,                                           00133100
.*******************************************************************    00133200
.***AP.X01  FORMAT GENERATED CODE                                       00133300
.ZL21                 AIF   (&ZOPX GT &ZOPN).ZLX1  B IF DONE            00133400
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00133500
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00133600
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00133700
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00133800
                      AIF   (K'&ZLD LE 0).ZL51                          00133900
&ZLC                  SETA  35             COMMENT COLUMN               00134000
                      AIF   ('&ZLD'(1,1) NE '*').ZL31                   00134100
&ZLC                  SETA  33             COMMENT COLUMN               00134200
.ZL31                 AIF   (K'&ZLV GE &ZLC-16-1).ZL41                  00134300
&ZLV                  SETC  '&ZLV'.' '                                  00134400
                      AGO   .ZL31                                       00134500
.*                                                                      00134600
.ZL41                 ANOP  ,                                           00134700
&ZLV                  SETC  '&ZLV'.' '                                  00134800
.ZL51                 ANOP  ,                                           00134900
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00135000
.*                                                                      00135100
&ZLL     &ZLOP &ZLV                                                     00135200
.*                                                                      00135300
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00135400
                      AGO   .ZL21          CONTINUE LOOPING             00135500
.*                                                                      00135600
.ZLX1                 ANOP  ,                                           00135700
.*******************************************************************    00135800
.***AP.X02  END OF CONFCHG MACRO                                        00135900
&ZCONFCHG             SETC  'YES'          SET CONFCHG USED             00136000
         POP   PRINT                                                    00136100
*                                            CONFCHG-1                  00136200
         SPACE 1                                                        00136300
.ZLX2                 ANOP  ,                                           00136400
         MEND                                                           00136500
**********************************************************************/ 00136600
*/*PB.OC01 INVOKE MACRO---------------------------------------------*/  00136700
*%CONFCHG: MACRO KEYS(NOTIFY,EXIT,TOKEN,CANCEL,CHGREQ,CHGCOMPL,         00136800
*                 RETCODE,MF);                                          00136900
*  ANS('?'||MACLABEL||' '||'CONFCHGP '||MACLIST||                       00137000
*         ' '||MACKEYS||';') COL(MACLMAR);                              00137100
*%END CONFCHG;                                                          00137200
