*/**** START OF SPECIFICATIONS **************************************** 00000100
*                                                                     * 00000200
*                                                                     * 00000300
*01* MACRO NAME:  IWMSSEL                               -03/20/01-<2> * 00000400
*                                                                     * 00000500
*                                                                     * 00000600
*01* DESCRIPTIVE NAME:  WLM Server Select Service                     * 00000700
*                                                                     * 00000800
*01* PROPRIETARY STATEMENT:                                           * 00000900
*                                                                     * 00001000
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 00001100
*     5645-001 (C) COPYRIGHT IBM CORP. 1997                           * 00001200
*                                                                     * 00001300
* STATUS= HBB6603                                                     * 00001400
*                                                                     * 00001500
*                                                                     * 00001600
*                                                                     * 00001700
*01* FUNCTION:                                                        * 00001800
*                                                                     * 00001900
*                                                                     * 00002000
*      The IWMSSEL service selects the next work request from the     * 00002100
*      queue associated with the caller's application environment.    * 00002200
*      The caller must have previously connected to WLM using the     * 00002300
*      IWMCONN service specifying SERVER_MANAGER=YES.                 * 00002400
*                                                                     * 00002500
*      If there are no queued work requests waiting for selection the * 00002600
*      calling task will be suspended, pending arrival of work to do. * 00002700
*      The caller cannot rely upon asynchronous exits receiving       * 00002800
*      control while the task is suspended.                           * 00002900
*                                                                     * 00003000
*      After a work request is selected, the caller uses the IWMSTBGN * 00003100
*      and IWMSTEND services to indicate the start and end of         * 00003200
*      processing of the request.                                     * 00003300
*                                                                     * 00003400
*01* EXTERNAL CLASSIFICATION:  GUPI                                   * 00003500
*                                                                     * 00003600
*01* END OF EXTERNAL CLASSIFICATION:                                  * 00003700
*                                                                     * 00003800
*01* ENVIRONMENT:                                                     * 00003900
*                                                                     * 00004000
*                                                                     * 00004100
*      Minimum authorization: Problem or Supervisor state.  Any PSW   * 00004200
*                        key.                                         * 00004300
*                                                                     * 00004400
*      Dispatchable unit mode: Task mode.                             * 00004500
*                                                                     * 00004600
*      Cross Memory Mode: PASN=HASN=SASN.                             * 00004700
*                                                                     * 00004800
*      AMODE:            31-bit.                                      * 00004900
*                                                                     * 00005000
*      ASC mode:         Primary.                                     * 00005100
*                                                                     * 00005200
*      Interrupt status: Enabled for I/O and external interrupts.     * 00005300
*                                                                     * 00005400
*      Locks:            No locks held.                               * 00005500
*                                                                     * 00005600
*      Control parameters: Control parameters must be in the primary  * 00005700
*                        address space.                               * 00005800
*                                                                     * 00005900
*                                                                     * 00006000
*                                                                     * 00006100
*01* PROGRAMMING REQUIREMENTS:                                        * 00006200
*                                                                     * 00006300
*                                                                     * 00006400
*    1.  The macro CVT must be included to use this macro.            * 00006500
*                                                                     * 00006600
*    2.  The macro IWMYCON must be included to use this macro.        * 00006700
*                                                                     * 00006800
*    3.  The macro IWMPB must be in the library concatenation, since  * 00006900
*        it is included by IWMYCON.                                   * 00007000
*                                                                     * 00007100
*    4.  Note that the high order halfword of register 0, and the     * 00007200
*        reason code variable when specified, may be non-zero and     * 00007300
*        represents diagnostic data which is NOT part of the external * 00007400
*        interface.  The high order halfword should thus be excluded  * 00007500
*        from comparison with the reason code values described above. * 00007600
*        The constant, IWMRSNCODE_MASK_CONST defined in IWMYCON, may  * 00007700
*        be used for this purpose.                                    * 00007800
*                                                                     * 00007900
*                                                                     * 00008000
*                                                                     * 00008100
*01* RESTRICTIONS:                                                    * 00008200
*                                                                     * 00008300
*                                                                     * 00008400
*    1.  This macro may not be used prior to the completion of WLM    * 00008500
*        address space initialization.                                * 00008600
*                                                                     * 00008700
*    2.  This macro may only be used on MVS/ESA HBB6603 or higher.    * 00008800
*                                                                     * 00008900
*                                                                     * 00009000
*                                                                     * 00009100
*01* INPUT REGISTER INFORMATION:                                      * 00009200
*                                                                     * 00009300
*    Before issuing the IWMSSEL macro, the caller does not have to    * 00009400
*    place any information into any register unless using it in       * 00009500
*    register notation for a particular parameter, or using it as a   * 00009600
*    base register.                                                   * 00009700
*                                                                     * 00009800
*01* OUTPUT REGISTER INFORMATION:                                     * 00009900
*                                                                     * 00010000
*    When control returns to the caller, the GPRs contain:            * 00010100
*                                                                     * 00010200
*                                                                     * 00010300
*    REGISTER  CONTENTS                                               * 00010400
*                                                                     * 00010500
*    0         Reason code if GR15 return code is non-zero            * 00010600
*                                                                     * 00010700
*    1         Used as work registers by the system                   * 00010800
*                                                                     * 00010900
*    2-13      Unchanged                                              * 00011000
*                                                                     * 00011100
*    14        Used as work registers by the system                   * 00011200
*                                                                     * 00011300
*    15        Return code                                            * 00011400
*                                                                     * 00011500
*                                                                     * 00011600
*                                                                     * 00011700
*    When control returns to the caller, the ARs contain:             * 00011800
*                                                                     * 00011900
*                                                                     * 00012000
*    REGISTER  CONTENTS                                               * 00012100
*                                                                     * 00012200
*    0-1       Used as work registers by the system                   * 00012300
*                                                                     * 00012400
*    2-13      Unchanged                                              * 00012500
*                                                                     * 00012600
*    14-15     Used as work registers by the system                   * 00012700
*                                                                     * 00012800
*                                                                     * 00012900
*                                                                     * 00013000
*    Some callers depend on register contents remaining the same      * 00013100
*    before and after issuing a service.  If the system changes the   * 00013200
*    contents of registers on which the caller depends, the caller    * 00013300
*    must save them before issuing the service, and restore them      * 00013400
*    after the system returns control.                                * 00013500
*                                                                     * 00013600
*01* PERFORMANCE IMPLICATIONS:                                        * 00013700
*                                                                     * 00013800
*    None                                                             * 00013900
*                                                                     * 00014000
*01* SYNTAX:                                                          * 00014100
*                                                                     * 00014200
*[xlabel]  IWMSSEL     USERDATA=xuserdata                             * 00014300
*                     ,WLMEUTKN=xwlmeutkn                             * 00014400
*                    [,SERVER_TOKEN=xserver_token]                    * 00014500
*                    [,REGION_TOKEN=xregion_token]                    * 00014600
*                    [,RETCODE=xretcode]                              * 00014700
*                    [,RSNCODE=xrsncode]                              * 00014800
*                    [,PLISTVER=xplistver|IMPLIED_VERSION]          * 00014900
*                   [,MF=S]                                          * 00015000
*                   [,MF=(L,xmfctrl,xmfattr|0D)]                   * 00015100
*                   [,MF=(E,xmfctrl,COMPLETE)]                     * 00015200
*                                                                     * 00015300
*                                                                     * 00015400
*      Where:                                                         * 00015500
*                                                                     * 00015600
*                                                                     * 00015700
*      [xlabel]                                                       * 00015800
*          is an optional symbol, starting in column 1, that is the   * 00015900
*          name on the IWMSSEL macro invocation.  The name must       * 00016000
*          conform to the rules for an ordinary assembler language    * 00016100
*          symbol.                                                    * 00016200
*          DEFAULT: No name.                                          * 00016300
*                                                                     * 00016400
*                                                                     * 00016500
*                                                                     * 00016600
*                                                                     * 00016700
*      USERDATA=xuserdata                                             * 00016800
*          is the name (RS-type), or address in register (2)-(12), of * 00016900
*          a required 16 character output which contains the user     * 00017000
*          data previously passed to WLM via IWMQINS.                 * 00017100
*                                                                     * 00017200
*                                                                     * 00017300
*                                                                     * 00017400
*                                                                     * 00017500
*      WLMEUTKN=xwlmeutkn                                             * 00017600
*          is the name (RS-type), or address in register (2)-(12), of * 00017700
*          a required 8 character output which will receive the       * 00017800
*          execution unit token.  This token must be passed on        * 00017900
*          subsequent IWMSTBGN and IWMSTEND requests.                 * 00018000
*                                                                     * 00018100
*                                                                     * 00018200
*                                                                     * 00018300
*                                                                     * 00018400
*      [SERVER_TOKEN=xserver_token]                                   * 00018500
*          is the name (RS-type), or address in register (2)-(12), of * 00018600
*          an optional 32 character output which contains a server    * 00018700
*          token.  A queueing manager can use the server token to     * 00018800
*          queue secondary work requests to this server task.         * 00018900
*          Secondary work requests are considered to be extensions of * 00019000
*          the work request selected by IWMSSEL.  They are selected   * 00019100
*          using the IWMSSEM macro.  See the IWMSSEM macro for more   * 00019200
*          information.                                               * 00019300
*                                                                     * 00019400
*                                                                     * 00019500
*                                                                     * 00019600
*                                                                     * 00019700
*      [REGION_TOKEN=xregion_token]                                   * 00019800
*          is the name (RS-type), or address in register (2)-(12), of * 00019900
*          an optional 16 character output which contains a region    * 00020000
*          token.  A queueing manager can use the region token to     * 00020100
*          queue work requests to a specific server region. These     * 00020200
*          work requests are considered to belong to a set of the     * 00020300
*          work request all needing access to same status information * 00020400
*          which exists only in the virtual storage of the server     * 00020500
*          region.  They are selected using the IWMSSEL macro.  It is * 00020600
*          assumed that the application uses the service IWMTAFF to   * 00020700
*          tell WLM that temporary affinity to the defined server     * 00020800
*          region exist.                                              * 00020900
*                                                                     * 00021000
*                                                                     * 00021100
*                                                                     * 00021200
*                                                                     * 00021300
*      [RETCODE=xretcode]                                             * 00021400
*          is the name (RS-type) of an optional fullword output       * 00021500
*          variable, or register (2)-(12), into which the return code * 00021600
*          is to be copied from GPR 15.                               * 00021700
*                                                                     * 00021800
*                                                                     * 00021900
*                                                                     * 00022000
*                                                                     * 00022100
*      [RSNCODE=xrsncode]                                             * 00022200
*          is the name (RS-type) of an optional fullword output       * 00022300
*          variable, or register (2)-(12), into which the reason code * 00022400
*          is to be copied from GPR 0.                                * 00022500
*                                                                     * 00022600
*                                                                     * 00022700
*                                                                     * 00022800
*                                                                     * 00022900
*      [PLISTVER=xplistver|IMPLIED_VERSION]                         * 00023000
*          is an optional byte input decimal value in the "0-2" range * 00023100
*          that specifies the macro version.  PLISTVER is the only    * 00023200
*          key allowed on the list form of MF and determines which    * 00023300
*          parameter list is generated.  The macro keys associated    * 00023400
*          with each supported version of the macro are listed in     * 00023500
*          MACRO USAGE NOTE 2.  Note that MAX may be specified        * 00023600
*          instead of a number, and the parameter list will be of the * 00023700
*          largest size currently supported. This size may grow from  * 00023800
*          release to release (thus possibly affecting the amount of  * 00023900
*          storage needed by your program).  If your program can      * 00024000
*          tolerate this, IBM recommends that you always specify MAX  * 00024100
*          when creating the list form parameter list as that will    * 00024200
*          ensure that the list form parameter list is always long    * 00024300
*          enough to hold whatever parameters might be specified on   * 00024400
*          the execute form.                                          * 00024500
*          DEFAULT: IMPLIED_VERSION.  When PLISTVER is omitted, the   * 00024600
*          default is the lowest version which allows all of the      * 00024700
*          parameters specified on the invocation to be processed.    * 00024800
*                                                                     * 00024900
*                                                                     * 00025000
*                                                                     * 00025100
*                                                                     * 00025200
*      [MF=S|L|E]                                                   * 00025300
*          is an optional keyword input which specifies the macro     * 00025400
*          form.                                                      * 00025500
*          DEFAULT: S                                                 * 00025600
*                                                                     * 00025700
*                                                                     * 00025800
*          [MF=S]                                                     * 00025900
*              specifies the standard form of the macro.  The "S"     * 00026000
*              form generates code to put the parameters into an      * 00026100
*              in-line parameter list and invoke the desired service. * 00026200
*              Full checking for required macro keys is done along    * 00026300
*              with supplying defaults for omitted optional           * 00026400
*              parameters.                                            * 00026500
*                                                                     * 00026600
*          [MF=(L,xmfctrl,xmfattr|0D)]                              * 00026700
*              specifies the list form of the macro.  The "L" form    * 00026800
*              defines an area to be used for the parameter list.     * 00026900
*              Only the PLISTVER key may be specified on the          * 00027000
*              invocation.  All other macro parameters are flagged as * 00027100
*              errors.  If PLISTVER is not specified, the original    * 00027200
*              parameter list definition is used.                     * 00027300
*                                                                     * 00027400
*            ,xmfctrl                                                 * 00027500
*              is a required input.  It is the name of a storage area * 00027600
*              for the parameter list.                                * 00027700
*                                                                     * 00027800
*            ,xmfattr|0D                                            * 00027900
*              is an optional 60 character input string that varies   * 00028000
*              from 1 to 60 characters. Use it to force boundary      * 00028100
*              alignment of the parameter list. Use only 0F or 0D.    * 00028200
*              DEFAULT: 0D which forces the parameter list to a       * 00028300
*              doubleword boundary.                                   * 00028400
*                                                                     * 00028500
*          [MF=(E,xmfctrl,COMPLETE)]                                * 00028600
*              specifies the execute form of the macro.  The "E" form * 00028700
*              generates code to put the parameters into the          * 00028800
*              parameter list specified by xmfctrl and provides full  * 00028900
*              syntax checking with default setting.                  * 00029000
*                                                                     * 00029100
*            ,xmfctrl                                                 * 00029200
*              is a required input.  It is the name (RS-type), or     * 00029300
*              address in register (1)-(12), of a storage area for    * 00029400
*              the parameter list.                                    * 00029500
*                                                                     * 00029600
*            ,COMPLETE                                              * 00029700
*              is an optional keyword input which specifies the       * 00029800
*              degree of macro parameter syntax checking.             * 00029900
*              DEFAULT: COMPLETE                                      * 00030000
*                                                                     * 00030100
*                                                                     * 00030200
*              COMPLETE                                               * 00030300
*                  Checking for required macro keys is done and       * 00030400
*                  defaults are supplied for omitted optional         * 00030500
*                  parameters.                                        * 00030600
*                                                                     * 00030700
*                                                                     * 00030800
*                                                                     * 00030900
*                                                                     * 00031000
*                                                                     * 00031100
*                                                                     * 00031200
*                                                                     * 00031300
*01* ABEND CODES:  None.                                              * 00031400
*                                                                     * 00031500
*01* RETURN CODES:                                                    * 00031600
*                                                                     * 00031700
*                                                                     * 00031800
*            0    Name: IwmRetCodeOk                                  * 00031900
*                                                                     * 00032000
*                 Meaning: Successful completion.                     * 00032100
*                                                                     * 00032200
*                 Action: None required.                              * 00032300
*                                                                     * 00032400
*                                                                     * 00032500
*            8    Name: IwmRetCodeInvocError                          * 00032600
*                                                                     * 00032700
*                 Meaning: Invalid invocation environment or          * 00032800
*                 parameters.                                         * 00032900
*                                                                     * 00033000
*                                                                     * 00033100
*                                                                     * 00033200
*                 HEX REASON  MEANING/ACTION                          * 00033300
*                 CODE                                                * 00033400
*                                                                     * 00033500
*                 xxxx0801    Name: IwmRsnCodeSrbMode                 * 00033600
*                                                                     * 00033700
*                             Meaning: Caller is in SRB mode.         * 00033800
*                                                                     * 00033900
*                             Action: Avoid requesting this function  * 00034000
*                             while in SRB mode.                      * 00034100
*                                                                     * 00034200
*                 xxxx0803    Name: IwmRsnCodeDisabled                * 00034300
*                                                                     * 00034400
*                             Meaning: Caller is disabled.            * 00034500
*                                                                     * 00034600
*                             Action: Avoid requesting this function  * 00034700
*                             while disabled.                         * 00034800
*                                                                     * 00034900
*                 xxxx0804    Name: IwmRsnCodeLocked                  * 00035000
*                                                                     * 00035100
*                             Meaning: Caller is locked.              * 00035200
*                                                                     * 00035300
*                             Action: Avoid requesting this function  * 00035400
*                             while locked.                           * 00035500
*                                                                     * 00035600
*                 xxxx080B    Name: IwmRsnCodeBadPl                   * 00035700
*                                                                     * 00035800
*                             Meaning: Error accessing parameter      * 00035900
*                             list.                                   * 00036000
*                                                                     * 00036100
*                             Action: Check for possible storage      * 00036200
*                             overlay.                                * 00036300
*                                                                     * 00036400
*                 xxxx0823    Name: IwmRsnCodeDatoff                  * 00036500
*                                                                     * 00036600
*                             Meaning: Caller invoked service while   * 00036700
*                             DATOFF                                  * 00036800
*                                                                     * 00036900
*                             Action: Avoid requesting this function  * 00037000
*                             in this environment.                    * 00037100
*                                                                     * 00037200
*                 xxxx0824    Name: IwmRsnCodeAmode24                 * 00037300
*                                                                     * 00037400
*                             Meaning: Caller invoked service but was * 00037500
*                             in 24 bit addressing mode.              * 00037600
*                                                                     * 00037700
*                             Action: Request this function only when * 00037800
*                             you are in 31 bit addressing mode.      * 00037900
*                                                                     * 00038000
*                 xxxx0825    Name: IwmRsnCodeAscModeNotPrimary       * 00038100
*                                                                     * 00038200
*                             Meaning: Caller invoked service but was * 00038300
*                             not in primary ASC mode.                * 00038400
*                                                                     * 00038500
*                             Action: Avoid requesting this function  * 00038600
*                             in this environment.                    * 00038700
*                                                                     * 00038800
*                 xxxx0828    Name: IwmRsnCodeBadVersion              * 00038900
*                                                                     * 00039000
*                             Meaning: Version number in parameter    * 00039100
*                             list is not valid.                      * 00039200
*                                                                     * 00039300
*                             Action: Check for possible storage      * 00039400
*                             overlay of the parameter list.          * 00039500
*                                                                     * 00039600
*                 xxxx0840    Name: IwmRsnCodeServiceNotEnabled       * 00039700
*                                                                     * 00039800
*                             Meaning: Caller's space connection is   * 00039900
*                             not enabled for this service.           * 00040000
*                                                                     * 00040100
*                             Action: Make sure that                  * 00040200
*                             SERVER_MANAGER=YES is specified on the  * 00040300
*                             IWMCONN request to enable this service. * 00040400
*                                                                     * 00040500
*                 xxxx0841    Name: IwmRsnCodeXmemMode                * 00040600
*                                                                     * 00040700
*                             Meaning: Caller is in cross-memory      * 00040800
*                             mode.                                   * 00040900
*                                                                     * 00041000
*                             Action: Request this function only when * 00041100
*                             you are not in cross-memory mode.       * 00041200
*                                                                     * 00041300
*                 xxxx0842    Name: IwmRsnCodeNoWLMConnect            * 00041400
*                                                                     * 00041500
*                             Meaning: Caller's space is not          * 00041600
*                             connected to WLM.                       * 00041700
*                                                                     * 00041800
*                             Action:  Invoke the IWMCONN macro       * 00041900
*                             before invoking this macro.             * 00042000
*                                                                     * 00042100
*                 xxxx0854    Name: IwmRsnCodeTooManySelect           * 00042200
*                                                                     * 00042300
*                             Meaning: The caller is attempting to    * 00042400
*                             select more work units than it has      * 00042500
*                             tasks to execute the work.              * 00042600
*                                                                     * 00042700
*                             Action:  Wait until an execution task   * 00042800
*                             has issued IWMSTEND before attempting   * 00042900
*                             to select more work units.              * 00043000
*                                                                     * 00043100
*                 xxxx0864    Name: IwmRsnCodeSecondaryWorkExists     * 00043200
*                                                                     * 00043300
*                             Meaning: There are secondary work       * 00043400
*                             requests queued to this server task.    * 00043500
*                             The caller was expected to process them * 00043600
*                             using IWMSSEM before calling IWMSSEL.   * 00043700
*                                                                     * 00043800
*                             Action:  Select all secondary work      * 00043900
*                             requests before issuing IWMSSEL.        * 00044000
*                                                                     * 00044100
*                                                                     * 00044200
*                                                                     * 00044300
*                                                                     * 00044400
*            C    Name: IwmRetCodeEnvError                            * 00044500
*                                                                     * 00044600
*                 Meaning: Environmental error.                       * 00044700
*                                                                     * 00044800
*                                                                     * 00044900
*                                                                     * 00045000
*                 HEX REASON  MEANING/ACTION                          * 00045100
*                 CODE                                                * 00045200
*                                                                     * 00045300
*                 xxxx0C01    Name: IwmRsnCodeNoStg                   * 00045400
*                                                                     * 00045500
*                             Meaning: Storage is not available for   * 00045600
*                             the request.                            * 00045700
*                                                                     * 00045800
*                             Action: Caller must disconnect by       * 00045900
*                             invoking the IWMDISC macro.             * 00046000
*                                                                     * 00046100
*                 xxxx0C14    Name: IwmRsnCodeNoWorkShutDown          * 00046200
*                                                                     * 00046300
*                             Meaning: No work selected. Caller is to * 00046400
*                             shutdown.                               * 00046500
*                                                                     * 00046600
*                             Action: Caller must disconnect by       * 00046700
*                             invoking the IWMDISC macro.             * 00046800
*                                                                     * 00046900
*                                                                     * 00047000
*                                                                     * 00047100
*                                                                     * 00047200
*            10   Name: IwmRetCodeCompError                           * 00047300
*                                                                     * 00047400
*                 Meaning: Component error.                           * 00047500
*                                                                     * 00047600
*                 Action: Contact your system programmer.             * 00047700
*                                                                     * 00047800
*                                                                     * 00047900
*                                                                     * 00048000
*                                                                     * 00048100
*01* REASON CODES:                                                    * 00048200
*                                                                     * 00048300
*       A unique reason code will be returned whenever the return     * 00048400
*       code is non-zero.  Reason codes, as appropriate, are defined  * 00048500
*       under their corresponding return code.  Reason code and       * 00048600
*       return code constants are defined within IWMYCON.  Note that  * 00048700
*       the high order halfword of register 0, and the reason code    * 00048800
*       variable when specified, may be non-zero and represents       * 00048900
*       diagnostic data which is NOT part of the external interface.  * 00049000
*       The high order halfword should thus be excluded from          * 00049100
*       comparison with the reason code values described above.  The  * 00049200
*       constant, IWMRSNCODE_MASK_CONST defined in IWMYCON, may be    * 00049300
*       used for this purpose.                                        * 00049400
*                                                                     * 00049500
*01* MODULE TYPE:  ASSEM MACRO                                        * 00049600
*                                                                     * 00049700
*02*   PROCESSOR:  ASSEM                                              * 00049800
*                                                                     * 00049900
*01* COMPONENT:  SCWLM                                                * 00050000
*                                                                     * 00050100
*01* DISTRIBUTION LIBRARY: AMACLIB                                    * 00050200
*                                                                     * 00050300
*01* EXAMPLES:                                                        * 00050400
*                                                                     * 00050500
*    To select a work request from the WLM queue manager queues:      * 00050600
*                                                                     * 00050700
*               IWMSSEL USERDATA=USERDATA,                          X * 00050800
*                     WLMEUTKN=WLMEUTKN,RETCODE=RC,RSNCODE=RSN        * 00050900
*      *                                                              * 00051000
*      * Storage areas                                                * 00051100
*      *                                                              * 00051200
*      USERDATA DS    CL16            Contains the user-defined data  * 00051300
*      *                              that was passed to IWMQINS      * 00051400
*      WLMEUTKN DS    CL8             Work unit token that must be    * 00051500
*      *                              passed to IWMSTBGN and IWMSTEND * 00051600
*      RC       DS    F               Return code                     * 00051700
*      RSN      DS    F               Reason code                     * 00051800
*                                                                     * 00051900
*                                                                     * 00052000
*01* MACRO USAGE NOTES:                                               * 00052100
*                                                                     * 00052200
*                                                                     * 00052300
*    1.  Printing of the macro expansion is controlled by the ZPRINT  * 00052400
*        global macro variable.  Any value other than 'NO' will       * 00052500
*        result in the macro expansion being printed.  The default is * 00052600
*        'YES'.  The following examples illustrate how the ZPRINT     * 00052700
*        variable should be set.                                      * 00052800
*                                                                     * 00052900
*                    GBLC &ZPRINT                                     * 00053000
*            &ZPRINT SETC 'YES'          &ZPRINT SETC 'NO'            * 00053100
*                                                                     * 00053200
*                                                                     * 00053300
*    2.  The  IWMSSEL macro supports multiple versions. The macro key * 00053400
*        list  below  contains the version level in which the key was * 00053500
*        first  introduced.  Positionals  are  identified by the word * 00053600
*        'Positional'  followed by the numeric value of its position. * 00053700
*        Nested  positionals  are  preceded  by their outer key.  The * 00053800
*        lowest value represents the original version and the highest * 00053900
*        value  represents  the  most  recent  version of the IWMSSEL * 00054000
*        macro.    When  specifying  PLISTVER,  be sure that it is at * 00054100
*        least  as high as the highest version number of all the keys * 00054200
*        being used.                                                  * 00054300
*                                                                     * 00054400
*        VERSION   KEY                                                * 00054500
*                                                                     * 00054600
*              0      USERDATA                                        * 00054700
*                     WLMEUTKN                                        * 00054800
*              1      SERVER_TOKEN                                    * 00054900
*              2      REGION_TOKEN                                    * 00055000
*                                                                     * 00055100
*                                                                     * 00055200
*                                                                     * 00055300
*01* CHANGE ACTIVITY:                                                 * 00055400
*                                                                     * 00055500
*   Flag LineItem  FMID    Date   ID    Comment                       * 00055600
*                                                                     * 00055700
*    $L0=WLMP     HBB6603 950216 PD88RK:  DB2 Stored SQL Procedure    * 00055800
*    $L1=WLMP     HBB6603 950331 PD88GD:  DB2 Stored SQL Procedure    * 00055900
*    $L2=WLMP     HBB6603 950426 PD88GD:  DB2 Stored SQL Procedure    * 00056000
*    $L3=WLMP     HBB6603 951207 PD88DB:  PQC0461                     * 00056100
*    $L4=WLMP     HBB6603 960703 PD88DB:  PQC1624                     * 00056200
*    $L5=WLMP     HBB6605 970528 B9HAGD:  Business object server      * 00056300
*    $L6=OW45238  HBB6608 000615 B9HARV:  Temporal Affinity Support   * 00056400
****** END OF SPECIFICATIONS *****************************************/ 00056500
*/* TLINE 1 *********************************************************** 00056600
         MACRO                                                          00056700
&XLABEL  IWMSSEL &USERDATA=,&WLMEUTKN=,&SERVER_TOKEN=,&REGION_TOKEN=,  *00056800
               &RETCODE=,&RSNCODE=,&PLISTVER=,&MF=                      00056900
.*                                                                      00057000
*                  MACDATE -03/20/01-<2>                                00057100
.*                                                                      00057200
.*******************************************************************    00057300
.***AB.02  GLOBAL VARIABLES TO CONTROL PRINT AND CODE GENERATION        00057400
.*******************************************************************    00057500
                  GBLC  &ZPRINT     YES=PRINT NO=NO PRINT               00057600
                  GBLC  &ZTEST      YES=TEST NO=NO TEST                 00057700
                  GBLC  &ZSYSTEM    PCCODE10, MVS, SAK, VM, XAX         00057800
.*                                                                      00057900
                  GBLC  &ZIWMSSEL   YES=MACRO USED AT LEAST ONCE        00058000
.*******************************************************************    00058100
.***AB.03  COMMONLY USED LOCAL MACRO VARIABLES                          00058200
.*******************************************************************    00058300
                  LCLC  &ZMS        ERROR MESSAGE WORK AREA             00058400
                  LCLC  &ZCNDX      LAST THREE SYSNDX CHARACTERS        00058500
                  LCLC  &ZCLNG      USED WHEN LENGTH IS NEEDED          00058600
                  LCLC  &ZCGPR      USED WHEN VALUE IS IN A GPR         00058700
                  LCLC  &ZCVAL      USED TO CONTAIN FIXED VALUE         00058800
                  LCLA  &ZAWRK      USED AS A WORK AREA                 00058900
                  LCLA  &ZASIZ      USED FOR SIZE OF VALUE              00059000
                  LCLA  &ZN         NUMERIC WORK VARIABLE               00059100
                  LCLC  &ZC         CHARACTER WORK VARIABLE             00059200
                  LCLC  &ZTLC       CHARACTER TOO LONG VARIABLE         00059300
                  LCLA  &ZTLA       VALUE TOO LONG VARIABLE             00059400
                  LCLA  &ZMACRET    MACRO RETURN CODE                   00059500
&ZMACRET          SETA  0           ASSUME NO ERRORS                    00059600
.*                                                                      00059700
                  LCLC  &ZCSYSLIST(255)         NONXKEY, POS ARRAY      00059800
                  LCLA  &ZASYSLNDX  WORK INDEX FOR ZCSYSLIST()          00059900
                  LCLA  &ZPLLEN     PARAMETER LIST LENGTH               00060000
                  LCLC  &ZENDBASEPL             End of base PL          00060100
                  LCLA  &ZPLWORKA   PARAMETER LIST LENGTH               00060200
.*******************************************************************    00060300
.***AB.04  MACRO VARIABLES FOR RANGES AND SETS OF ARGUMENTS             00060400
.*******************************************************************    00060500
                  LCLA  &ZI         INDEX FOR ARRAY                     00060600
                  LCLA  &ZJ         INDEX FOR PARMS                     00060700
                  LCLA  &ZK         INDEX FOR PARSE                     00060800
                  LCLA  &ZLO        LOW RANGE VALUE                     00060900
                  LCLA  &ZHI        HIGH RANGE VALUE                    00061000
                  LCLC  &ZW         WORK AREA FOR PARM                  00061100
.********************************************************************   00061200
.***AB.05  INVOKE MVS MACROS TO CONTROL CODE GENERATION                 00061300
.********************************************************************   00061400
                  GBLC  &SYSSPLV    SP LEVEL 1,2,3 -SPLEVEL             00061500
                  GBLC  &SYSASCE    SYSTEM STATE P ANY AR-SYSSTATE      00061600
                  GBLA  &SYSALVL    SYSSTATE ARCHLVL                    00061700
.*                                                                      00061800
                  AIF   (K'&SYSASCE GT 0).ZSYS4  SYS STATE DEFINED      00061900
                  AIF   (K'&SYSSPLV GT 0).ZSYS2  SP LEVEL DEFINED       00062000
                  SPLEVEL  TEST                                         00062100
.ZSYS2            ANOP  ,                                               00062200
                  AIF   ('&SYSSPLV' EQ '1').ZSYS3  PRE SP 3.1           00062300
                  AIF   ('&SYSSPLV' EQ '2').ZSYS3  PRE SP 3.1           00062400
                  SYSSTATE TEST                                         00062500
                  AGO   .ZSYS4                                          00062600
.ZSYS3            ANOP  ,                                               00062700
&SYSASCE          SETC  'P'         ASSUME SYSSTATE PRIMARY             00062800
.ZSYS4            ANOP  ,                                               00062900
.*******************************************************************    00063000
.***AB.07  DEFINE ALL MACRO VARIABLES                                   00063100
.*******************************************************************    00063200
                  LCLC  &XUSERDATA  ++ NAME                             00063300
                  LCLC  &XWLMEUTKN  ++ NAME                             00063400
                  LCLC  &XSERVER_TOKEN          ++ NAME                 00063500
                  LCLC  &XREGION_TOKEN          ++ NAME                 00063600
                  LCLC  &XRETCODE   ++ NAME                             00063700
                  LCLC  &XRSNCODE   ++ NAME                             00063800
                  LCLA  &XPLISTVER  ++ VALUE                            00063900
                  LCLC  &XMF        ++ VALUE                            00064000
                  LCLC  &XMFCTRL    ++ NAME                             00064100
                  LCLC  &XMFATTR    ++ VALUE                            00064200
                  LCLC  &XMFSCK     ++ VALUE                            00064300
.*******************************************************************    00064400
.***AB.13  DEFINE MACRO VARIABLES FOR INPUT/OUTPUT PROCESSING           00064500
.*******************************************************************    00064600
                  LCLC  &ZXUSERDATA             ++ OUTPUT NAME          00064700
                  LCLC  &ZXWLMEUTKN             ++ OUTPUT NAME          00064800
                  LCLC  &ZXSERVER_TOKEN         ++ OUTPUT NAME          00064900
                  LCLC  &ZXREGION_TOKEN         ++ OUTPUT NAME          00065000
                  LCLC  &ZXRETCODE  ++ OUTPUT NAME                      00065100
                  LCLC  &ZXRSNCODE  ++ OUTPUT NAME                      00065200
                  LCLC  &ZXPLISTVER             ++ INPUT VALUE          00065300
                  LCLC  &ZXMF       ++ INPUT VALUE                      00065400
                  LCLC  &ZXMFCTRL   ++ INPUT NAME                       00065500
                  LCLC  &ZXMFATTR   ++ INPUT VALUE                      00065600
                  LCLC  &ZXMFSCK    ++ INPUT VALUE                      00065700
.********************************************************************   00065800
.***AC.PLV01  PROCESS PLISTVER                                      *   00065900
.********************************************************************   00066000
&XPLISTVER      SETA  0                                                 00066100
                AIF   (K'&PLISTVER(1) LE 0).ZPLV0                       00066200
                AIF   ('&PLISTVER(1)' NE 'MAX').ZPLV0                   00066300
&XPLISTVER      SETA  2                                                 00066400
.ZPLV0          ANOP  ,                                                 00066500
.*                                                                      00066600
                AIF   ('&SERVER_TOKEN' EQ '').ZPLV1E                    00066700
                AIF   (&XPLISTVER GE 1).ZPLV1E                          00066800
&XPLISTVER      SETA  1                                                 00066900
.ZPLV1E         ANOP  ,                                                 00067000
.*                                                                      00067100
                AIF   ('&REGION_TOKEN' EQ '').ZPLV2E                    00067200
                AIF   (&XPLISTVER GE 2).ZPLV2E                          00067300
&XPLISTVER      SETA  2                                                 00067400
.ZPLV2E         ANOP  ,                                                 00067500
.*                                                                      00067600
                AIF   (K'&PLISTVER(1) LE 0).ZPVCKE                      00067700
                AIF   ('&PLISTVER(1)' EQ 'IMPLIED_VERSION').ZPVCKE      00067800
                AIF   ('&PLISTVER(1)' EQ 'MAX').ZPVCKE                  00067900
.*-------------------------------------------------------------------   00068000
                AIF   (N'&PLISTVER LE 1).ZPVCK3  CK NUM                 00068100
&ZMS            SETC  '"PLISTVER='         *KPOSA* MNOTE                00068200
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00068300
&ZMS            SETC  '&ZMS "PLISTVER"'                                 00068400
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00068500
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00068600
                AGO   .ZPVCK2                                           00068700
.ZPVCK3         ANOP  ,                                                 00068800
.*-------------------------------------------------------------------   00068900
                AIF   ('&PLISTVER'(1,1) NE '(').ZPVCK2                  00069000
&ZMS            SETC  '"PLISTVER='         *KGPRA* MNOTE                00069100
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00069200
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         00069300
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'                 00069400
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00069500
                AGO   .ZPVCKE                                           00069600
.ZPVCK2         ANOP  ,                                                 00069700
.*-------------------------------------------------------------------   00069800
&ZCVAL          SETC  '&PLISTVER(1)'                                    00069900
                AIF   ('&ZCVAL'(1,1) EQ '(').ZPVCKE  IN GPR             00070000
                AIF   (T'&ZCVAL NE 'N').ZPVCK6  NUMERIC ERR             00070100
&ZN             SETA   &PLISTVER(1)        CONVERT TO ARITHMETIC        00070200
                AIF   (&ZN LT 0).ZPVCK6    TOO LOW                      00070300
                AIF   (&ZN LE 2).ZPVCK4A   NOT HIGH                     00070400
.ZPVCK6         ANOP  ,                                                 00070500
&ZMS            SETC  '"PLISTVER='         *KRNGA* MNOTE                00070600
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00070700
&ZMS            SETC  '&ZMS THE RANGE IS "0-2"'                         00070800
                MNOTE 8,' &ZMS FOR ARGUMENT 1.'                         00070900
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00071000
&XPLISTVER      SETA  2                                                 00071100
                AGO   .ZPVCKE                                           00071200
.*-------------------------------------------------------------------   00071300
.ZPVCK4A        ANOP  ,                                                 00071400
                AIF   (&ZN GE &XPLISTVER).ZPVCK4                        00071500
&ZMS            SETC  'PLISTVER='          *KVALA* MNOTE                00071600
&ZMS            SETC  '&ZMS.&PLISTVER(1)'                               00071700
&ZMS            SETC  '&ZMS., BUT PLISTVER OF'                          00071800
&ZMS            SETC  '&ZMS &XPLISTVER'                                 00071900
                MNOTE 8,' &ZMS IS REQUIRED.'                            00072000
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00072100
                AGO   .ZPVCK5                                           00072200
.ZPVCK4         ANOP  ,                                                 00072300
&XPLISTVER      SETA  &PLISTVER(1)                                      00072400
.ZPVCK5         ANOP  ,                                                 00072500
.ZPVCKE         ANOP  ,                                                 00072600
.********************************************************************   00072700
.***AG.MF01 PROCESS MF MACRO FORMS                                      00072800
.********************************************************************   00072900
                  ACTR  10000                                           00073000
.*------------------------------------------------------------------    00073100
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00073200
&XMF              SETC  ''          INITIALIZE XVARIABLE                00073300
.*-------------------------------------------------------------------   00073400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00073500
.ZG24             ANOP  ,                                               00073600
&ZTLC             SETC 'S'                                              00073700
                  AIF   ('&MF(1)' NE '&ZTLC').ZG25                      00073800
&XMF              SETC  'S'         SET KEYWORD                         00073900
                  AIF   (N'&MF LE 1).ZG24A      CK NUM                  00074000
&ZMS              SETC  '"MF='      *KPOSA* MNOTE                       00074100
&ZMS              SETC  '&ZMS.&MF"'                                     00074200
&ZMS              SETC  '&ZMS "MF"'                                     00074300
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00074400
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00074500
.ZG24A            ANOP  ,                                               00074600
.*-------------------------------------------------------------------   00074700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00074800
.ZG25             ANOP  ,                                               00074900
&ZTLC             SETC 'L'                                              00075000
                  AIF   ('&MF(1)' NE '&ZTLC').ZG32                      00075100
&XMF              SETC  'L'         SET KEYWORD                         00075200
                  AIF   (N'&MF LE 3).ZG25A      CK NUM                  00075300
&ZMS              SETC  '"MF='      *KPOSA* MNOTE                       00075400
&ZMS              SETC  '&ZMS.&MF"'                                     00075500
&ZMS              SETC  '&ZMS "MF"'                                     00075600
                  MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'            00075700
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00075800
.ZG25A            ANOP  ,                                               00075900
.*-------------------------------------------------------------------   00076000
.***AG.KKCTL08 -MF(L) SPECIAL CHECK                                     00076100
                  AIF   (N'&SYSLIST NE 0).ZG25B  POSITIONALS?           00076200
                  AIF   ('&USERDATA' NE '').ZG25B  KEYS?                00076300
                  AIF   ('&WLMEUTKN' NE '').ZG25B  KEYS?                00076400
                  AIF   ('&SERVER_TOKEN' NE '').ZG25B  KEYS?            00076500
                  AIF   ('&REGION_TOKEN' NE '').ZG25B  KEYS?            00076600
                  AIF   ('&RETCODE' NE '').ZG25B  KEYS?                 00076700
                  AIF   ('&RSNCODE' NE '').ZG25B  KEYS?                 00076800
                  AGO    .ZG25C     INVOCATION OKAY                     00076900
.ZG25B            ANOP  ,                                               00077000
&ZMS              SETC  'THE "L" FORM OF "MF"'  *MFLA* MNOTE            00077100
&ZMS              SETC  '&ZMS CAN ONLY HAVE'                            00077200
&ZMS              SETC  '&ZMS THE "PLISTVER" KEY'                       00077300
                  MNOTE 8,' &ZMS SPECIFIED ON THE INVOCATION.'          00077400
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00077500
.ZG25C            ANOP  ,                                               00077600
.*-------------------------------------------------------------------   00077700
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00077800
&ZXMFCTRL         SETC  'INPUT'     SET IN/OUTPUT                       00077900
&XMFCTRL          SETC  '&MF(2,1)'  SET XVARIABLE                       00078000
                  AIF   (N'&MF(2) GT 1).ZG27B   MULTI PARMS             00078100
&XMFCTRL          SETC  '&MF(2)'    SET XVARIABLE                       00078200
.ZG27B            AIF   (K'&MF(2) GT 0).ZG27C                           00078300
&ZXMFCTRL         SETC  ''          RESET IN/OUTPUT                     00078400
&ZMS              SETC  'WHEN "L" IS SPECIFIED'  *KRQDA*                00078500
&ZMS              SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'             00078600
                  MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                    00078700
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00078800
.ZG27C            ANOP  ,                                               00078900
.*-------------------------------------------------------------------   00079000
.***AG.KCK01 NAME, OPT RQD INPUT, POS(2) -GPR NOT ALLOWED               00079100
                  AIF   (K'&ZXMFCTRL LE 0).ZG27P  NOT I/O               00079200
                  AIF   ('&XMFCTRL'(1,1) NE '(').ZG27P                  00079300
&ZXMFCTRL         SETC  ''          RESET IN/OUTPUT                     00079400
&ZMS              SETC  '"MF='      *KGPRA* MNOTE                       00079500
&ZMS              SETC  '&ZMS.&MF"'                                     00079600
&ZMS              SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'       00079700
                  MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 2.'               00079800
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00079900
.ZG27P            ANOP  ,                                               00080000
.*-------------------------------------------------------------------   00080100
.***AG.KXVAR13 VALUE, OPT INPUT, POS(3) -XVARIABLE                      00080200
&ZXMFATTR         SETC  'INPUT'     SET IN/OUTPUT                       00080300
&XMFATTR          SETC  '0D'                                            00080400
                  AIF   (K'&MF(3) LE 0).ZG30B   PARM                    00080500
&XMFATTR          SETC  '&MF(3,1)'  SET XVARIABLE                       00080600
                  AIF   (N'&MF(3) GT 1).ZG30B   MULTI PARMS             00080700
&XMFATTR          SETC  '&MF(3)'    SET XVARIABLE                       00080800
.ZG30B            ANOP  ,                                               00080900
.*-------------------------------------------------------------------   00081000
.***AG.KCK01 VALUE, OPT INPUT, POS(3) -GPR NOT ALLOWED                  00081100
                  AIF   (K'&ZXMFATTR LE 0).ZG30P  NOT I/O               00081200
                  AIF   ('&XMFATTR'(1,1) NE '(').ZG30P                  00081300
&ZXMFATTR         SETC  ''          RESET IN/OUTPUT                     00081400
&ZMS              SETC  '"MF='      *KGPRA* MNOTE                       00081500
&ZMS              SETC  '&ZMS.&MF"'                                     00081600
&ZMS              SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'       00081700
                  MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 3.'               00081800
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00081900
.ZG30P            ANOP  ,                                               00082000
.*-------------------------------------------------------------------   00082100
.***AG.KCK03 VALUE, OPT INPUT, POS(3) -CHARACTER LENGTH                 00082200
                  AIF   (K'&ZXMFATTR LE 0).ZG30S  NOT I/O               00082300
                  AIF   (K'&XMFATTR LE 60).ZG30S  LNG OK                00082400
&ZXMFATTR         SETC  ''          RESET IN/OUTPUT                     00082500
&ZMS              SETC  '"MF='      *KLNGA* MNOTE                       00082600
&ZMS              SETC  '&ZMS.&MF"'                                     00082700
&ZMS              SETC  '&ZMS ARGUMENT 3 EXCEEDS THE MAXIMUM'           00082800
                  MNOTE 8,' &ZMS LENGTH OF 60 CHARACTERS.'              00082900
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00083000
.ZG30S            ANOP  ,                                               00083100
.*-------------------------------------------------------------------   00083200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00083300
.ZG32             ANOP  ,                                               00083400
&ZTLC             SETC 'E'                                              00083500
                  AIF   ('&MF(1)' NE '&ZTLC').ZG40                      00083600
&XMF              SETC  'E'         SET KEYWORD                         00083700
                  AIF   (N'&MF LE 3).ZG32A      CK NUM                  00083800
&ZMS              SETC  '"MF='      *KPOSA* MNOTE                       00083900
&ZMS              SETC  '&ZMS.&MF"'                                     00084000
&ZMS              SETC  '&ZMS "MF"'                                     00084100
                  MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'            00084200
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00084300
.ZG32A            ANOP  ,                                               00084400
.*-------------------------------------------------------------------   00084500
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00084600
&ZXMFCTRL         SETC  'INPUT'     SET IN/OUTPUT                       00084700
&XMFCTRL          SETC  '&MF(2,1)'  SET XVARIABLE                       00084800
                  AIF   (N'&MF(2) GT 1).ZG34B   MULTI PARMS             00084900
&XMFCTRL          SETC  '&MF(2)'    SET XVARIABLE                       00085000
.ZG34B            AIF   (K'&MF(2) GT 0).ZG34C                           00085100
&ZXMFCTRL         SETC  ''          RESET IN/OUTPUT                     00085200
&ZMS              SETC  'WHEN "E" IS SPECIFIED'  *KRQDA*                00085300
&ZMS              SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'             00085400
                  MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                    00085500
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00085600
.ZG34C            ANOP  ,                                               00085700
.*-------------------------------------------------------------------   00085800
.***AG.KCK02 NAME, OPT RQD INPUT, POS(2) -GPR OUT OF RANGE              00085900
                  AIF   (K'&ZXMFCTRL LE 0).ZG34R  NOT I/O               00086000
                  AIF   ('&XMFCTRL'(1,1) NE '(').ZG34R                  00086100
&ZCGPR            SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)                      00086200
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG34P                    00086300
                  AIF   (K'&ZCGPR GT 2).ZG34Q                           00086400
                  AIF   ('&ZCGPR' EQ '0').ZG34Q                         00086500
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00086600
                  AIF   (T'&ZCGPR NE 'N').ZG34Q  INVALID REG NAME       00086700
.ZG34P            ANOP  ,                                               00086800
                  AIF   (T'&ZCGPR NE 'N').ZG34R  NON NUMERIC            00086900
                  AIF   ('&ZCGPR' LT '1').ZG34Q                         00087000
                  AIF   ('&ZCGPR' LE '12').ZG34R                        00087100
.ZG34Q            ANOP  ,                                               00087200
&ZMS              SETC  '"MF='      *KGPRA* MNOTE                       00087300
&ZMS              SETC  '&ZMS.&MF"'                                     00087400
&ZMS              SETC  '&ZMS ARGUMENT 2 MUST SPECIFY A REGISTER'       00087500
                  MNOTE 8,' &ZMS IN THE RANGE (1)-(12).'                00087600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00087700
.ZG34R            ANOP  ,                                               00087800
.*-------------------------------------------------------------------   00087900
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00088000
&XMFSCK           SETC  ''          INITIALIZE XVARIABLE                00088100
.ZG38A   AIF   ('&MF(3)' NE 'COMPLETE').ZG39A                           00088200
&XMFSCK           SETC  'COMPLETE'  SET KEYWORD                         00088300
.*-------------------------------------------------------------------   00088400
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00088500
.ZG39A            AIF   (K'&XMFSCK GT 0).ZG39C  KEYWORD                 00088600
                  AIF   (K'&MF(3) LE 0).ZG39B                           00088700
&ZMS              SETC  '"MF='      *KUKWA* MNOTE                       00088800
&ZMS              SETC  '&ZMS.&MF"'                                     00088900
&ZMS              SETC  '&ZMS ARGUMENT 3 IS AN UNKNOWN KEYWORD. '       00089000
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00089100
&ZMS              SETC  '&ZMS "COMPLETE".'                              00089200
                  MNOTE 8,' &ZMS '                                      00089300
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00089400
.ZG39B            ANOP  ,                                               00089500
&XMFSCK           SETC  'COMPLETE'  SET DEFAULT KEYWORD                 00089600
.ZG39C            ANOP  ,                                               00089700
&ZXMFSCK          SETC  'INPUT'     SET IN/OUTPUT                       00089800
.*------------------------------------------------------------------    00089900
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00090000
.ZG40             ANOP  ,                                               00090100
&ZXMF             SETC  'INPUT'     SET IN/OUTPUT                       00090200
                  AIF   (K'&XMF GT 0).ZG40E     VALID ARG               00090300
                  AIF   (T'&MF EQ 'O').ZG40D    OMITTED                 00090400
&ZASYSLNDX        SETA  0                                               00090500
.ZG40A            ANOP  ,           POSITIONAL MACRO KEY                00090600
&ZASYSLNDX        SETA  &ZASYSLNDX+1                                    00090700
                  AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG40C                00090800
&ZTLC             SETC 'MF'                                             00090900
                  AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG40A       00091000
.ZG40B            ANOP  ,                                               00091100
&ZXMF             SETC  ''          RESET IN/OUTPUT                     00091200
&ZMS              SETC  'THE "MF" KEY'          *KOPTA* MNOTE           00091300
&ZMS              SETC  '&ZMS MUST CONTAIN ONE'                         00091400
                  MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                00091500
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00091600
                  AGO   .ZG40E                                          00091700
.ZG40C            ANOP  ,                                               00091800
&ZXMF             SETC  ''          RESET IN/OUTPUT                     00091900
&ZMS              SETC  '"MF='      *KUKWA* MNOTE                       00092000
&ZMS              SETC  '&ZMS.&MF"'                                     00092100
&ZMS              SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '       00092200
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00092300
&ZMS              SETC  '&ZMS "S",'                                     00092400
&ZMS              SETC  '&ZMS "L",'                                     00092500
&ZMS              SETC  '&ZMS OR "E".'                                  00092600
                  MNOTE 8,' &ZMS '                                      00092700
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00092800
                  AGO   .ZG40E                                          00092900
.ZG40D            ANOP  ,                                               00093000
&XMF              SETC  'S'         SET DEFAULT KEYWORD                 00093100
&XMFSCK           SETC  'COMPLETE'  COMPLETE CHECKING                   00093200
.ZG40E            ANOP  ,                                               00093300
.********************************************************************   00093400
.***AG.MF02  FULL MACRO SYNTAX CHECKING                                 00093500
.********************************************************************   00093600
                  ACTR  10000                                           00093700
.*-------------------------------------------------------------------   00093800
.***AG.MF03 MF=(SLE)                                                    00093900
                  AIF   ('&XMF' EQ 'L').ZGMFX                           00094000
.*----------------------------------------------------------------***   00094100
.***AG.KXVAR05 NAME, RQD OUTPUT, KEYS -XVARIABLE KEY                    00094200
                  AIF   (N'&USERDATA LE 1).ZG2A  CK NUM                 00094300
&ZMS              SETC  '"USERDATA='            *KPOSA* MNOTE           00094400
&ZMS              SETC  '&ZMS.&USERDATA"'                               00094500
&ZMS              SETC  '&ZMS "USERDATA"'                               00094600
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00094700
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00094800
.ZG2A             ANOP  ,                                               00094900
.*-------------------------------------------------------------------   00095000
.***AG.KXVAR06 NAME, RQD OUTPUT, KEYS -XVARIABLE                        00095100
&ZXUSERDATA       SETC  'OUTPUT'    SET IN/OUTPUT                       00095200
&XUSERDATA        SETC  '&USERDATA(1)'          SET XVARIABLE           00095300
                  AIF   (N'&USERDATA GT 1).ZG2B  MULTI PARMS            00095400
&XUSERDATA        SETC  '&USERDATA'             SET XVARIABLE           00095500
.ZG2B             AIF   (K'&USERDATA(1) GT 0).ZG2C                      00095600
&ZXUSERDATA       SETC  ''          RESET IN/OUTPUT                     00095700
&ZMS              SETC  ' '         *KRQDA*                             00095800
&ZMS              SETC  '&ZMS "USERDATA" KEY AND ITS'                   00095900
                  MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                00096000
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00096100
.ZG2C             ANOP  ,                                               00096200
.*-------------------------------------------------------------------   00096300
.***AG.KCK02 NAME, RQD OUTPUT, KEYS -GPR OUT OF RANGE                   00096400
                  AIF   (K'&ZXUSERDATA LE 0).ZG2R  NOT I/O              00096500
                  AIF   ('&XUSERDATA'(1,1) NE '(').ZG2R                 00096600
&ZCGPR            SETC  '&XUSERDATA'(2,K'&XUSERDATA-2)                  00096700
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG2P                     00096800
                  AIF   (K'&ZCGPR GT 2).ZG2Q                            00096900
                  AIF   ('&ZCGPR' EQ '0').ZG2Q                          00097000
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00097100
                  AIF   (T'&ZCGPR NE 'N').ZG2Q  INVALID REG NAME        00097200
.ZG2P             ANOP  ,                                               00097300
                  AIF   (T'&ZCGPR NE 'N').ZG2R  NON NUMERIC             00097400
                  AIF   ('&ZCGPR' LT '2').ZG2Q                          00097500
                  AIF   ('&ZCGPR' LE '12').ZG2R                         00097600
.ZG2Q             ANOP  ,                                               00097700
&ZMS              SETC  '"USERDATA='            *KGPRA* MNOTE           00097800
&ZMS              SETC  '&ZMS.&USERDATA"'                               00097900
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00098000
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00098100
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00098200
.ZG2R             ANOP  ,                                               00098300
.*----------------------------------------------------------------***   00098400
.***AG.KXVAR05 NAME, RQD OUTPUT, KEYS -XVARIABLE KEY                    00098500
                  AIF   (N'&WLMEUTKN LE 1).ZG5A  CK NUM                 00098600
&ZMS              SETC  '"WLMEUTKN='            *KPOSA* MNOTE           00098700
&ZMS              SETC  '&ZMS.&WLMEUTKN"'                               00098800
&ZMS              SETC  '&ZMS "WLMEUTKN"'                               00098900
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00099000
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00099100
.ZG5A             ANOP  ,                                               00099200
.*-------------------------------------------------------------------   00099300
.***AG.KXVAR06 NAME, RQD OUTPUT, KEYS -XVARIABLE                        00099400
&ZXWLMEUTKN       SETC  'OUTPUT'    SET IN/OUTPUT                       00099500
&XWLMEUTKN        SETC  '&WLMEUTKN(1)'          SET XVARIABLE           00099600
                  AIF   (N'&WLMEUTKN GT 1).ZG5B  MULTI PARMS            00099700
&XWLMEUTKN        SETC  '&WLMEUTKN'             SET XVARIABLE           00099800
.ZG5B             AIF   (K'&WLMEUTKN(1) GT 0).ZG5C                      00099900
&ZXWLMEUTKN       SETC  ''          RESET IN/OUTPUT                     00100000
&ZMS              SETC  ' '         *KRQDA*                             00100100
&ZMS              SETC  '&ZMS "WLMEUTKN" KEY AND ITS'                   00100200
                  MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                00100300
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00100400
.ZG5C             ANOP  ,                                               00100500
.*-------------------------------------------------------------------   00100600
.***AG.KCK02 NAME, RQD OUTPUT, KEYS -GPR OUT OF RANGE                   00100700
                  AIF   (K'&ZXWLMEUTKN LE 0).ZG5R  NOT I/O              00100800
                  AIF   ('&XWLMEUTKN'(1,1) NE '(').ZG5R                 00100900
&ZCGPR            SETC  '&XWLMEUTKN'(2,K'&XWLMEUTKN-2)                  00101000
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG5P                     00101100
                  AIF   (K'&ZCGPR GT 2).ZG5Q                            00101200
                  AIF   ('&ZCGPR' EQ '0').ZG5Q                          00101300
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00101400
                  AIF   (T'&ZCGPR NE 'N').ZG5Q  INVALID REG NAME        00101500
.ZG5P             ANOP  ,                                               00101600
                  AIF   (T'&ZCGPR NE 'N').ZG5R  NON NUMERIC             00101700
                  AIF   ('&ZCGPR' LT '2').ZG5Q                          00101800
                  AIF   ('&ZCGPR' LE '12').ZG5R                         00101900
.ZG5Q             ANOP  ,                                               00102000
&ZMS              SETC  '"WLMEUTKN='            *KGPRA* MNOTE           00102100
&ZMS              SETC  '&ZMS.&WLMEUTKN"'                               00102200
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00102300
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00102400
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00102500
.ZG5R             ANOP  ,                                               00102600
.*----------------------------------------------------------------***   00102700
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00102800
                  AIF   (N'&SERVER_TOKEN LE 1).ZG8A  CK NUM             00102900
&ZMS              SETC  '"SERVER_TOKEN='        *KPOSA* MNOTE           00103000
&ZMS              SETC  '&ZMS.&SERVER_TOKEN"'                           00103100
&ZMS              SETC  '&ZMS "SERVER_TOKEN"'                           00103200
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00103300
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00103400
.ZG8A             ANOP  ,                                               00103500
.*-------------------------------------------------------------------   00103600
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00103700
                  AIF   (K'&SERVER_TOKEN(1) LE 0).ZG8C  NO PARM         00103800
&ZXSERVER_TOKEN   SETC  'OUTPUT'    SET OUTPUT                          00103900
&XSERVER_TOKEN    SETC  '&SERVER_TOKEN(1)'      SET XVARIABLE           00104000
                  AIF   (N'&SERVER_TOKEN GT 1).ZG8C                     00104100
&XSERVER_TOKEN    SETC  '&SERVER_TOKEN'         SET XVARIABLE           00104200
.ZG8C             ANOP  ,                                               00104300
.*-------------------------------------------------------------------   00104400
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00104500
                  AIF   (K'&ZXSERVER_TOKEN LE 0).ZG8R  NOT I/O          00104600
                  AIF   ('&XSERVER_TOKEN'(1,1) NE '(').ZG8R             00104700
&ZCGPR            SETC  '&XSERVER_TOKEN'(2,K'&XSERVER_TOKEN-2)          00104800
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG8P                     00104900
                  AIF   (K'&ZCGPR GT 2).ZG8Q                            00105000
                  AIF   ('&ZCGPR' EQ '0').ZG8Q                          00105100
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00105200
                  AIF   (T'&ZCGPR NE 'N').ZG8Q  INVALID REG NAME        00105300
.ZG8P             ANOP  ,                                               00105400
                  AIF   (T'&ZCGPR NE 'N').ZG8R  NON NUMERIC             00105500
                  AIF   ('&ZCGPR' LT '2').ZG8Q                          00105600
                  AIF   ('&ZCGPR' LE '12').ZG8R                         00105700
.ZG8Q             ANOP  ,                                               00105800
&ZMS              SETC  '"SERVER_TOKEN='        *KGPRA* MNOTE           00105900
&ZMS              SETC  '&ZMS.&SERVER_TOKEN"'                           00106000
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00106100
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00106200
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00106300
.ZG8R             ANOP  ,                                               00106400
.*----------------------------------------------------------------***   00106500
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00106600
                  AIF   (N'&REGION_TOKEN LE 1).ZG11A  CK NUM            00106700
&ZMS              SETC  '"REGION_TOKEN='        *KPOSA* MNOTE           00106800
&ZMS              SETC  '&ZMS.&REGION_TOKEN"'                           00106900
&ZMS              SETC  '&ZMS "REGION_TOKEN"'                           00107000
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00107100
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00107200
.ZG11A            ANOP  ,                                               00107300
.*-------------------------------------------------------------------   00107400
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00107500
                  AIF   (K'&REGION_TOKEN(1) LE 0).ZG11C  NO PARM        00107600
&ZXREGION_TOKEN   SETC  'OUTPUT'    SET OUTPUT                          00107700
&XREGION_TOKEN    SETC  '&REGION_TOKEN(1)'      SET XVARIABLE           00107800
                  AIF   (N'&REGION_TOKEN GT 1).ZG11C                    00107900
&XREGION_TOKEN    SETC  '&REGION_TOKEN'         SET XVARIABLE           00108000
.ZG11C            ANOP  ,                                               00108100
.*-------------------------------------------------------------------   00108200
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00108300
                  AIF   (K'&ZXREGION_TOKEN LE 0).ZG11R  NOT I/O         00108400
                  AIF   ('&XREGION_TOKEN'(1,1) NE '(').ZG11R            00108500
&ZCGPR            SETC  '&XREGION_TOKEN'(2,K'&XREGION_TOKEN-2)          00108600
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG11P                    00108700
                  AIF   (K'&ZCGPR GT 2).ZG11Q                           00108800
                  AIF   ('&ZCGPR' EQ '0').ZG11Q                         00108900
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00109000
                  AIF   (T'&ZCGPR NE 'N').ZG11Q  INVALID REG NAME       00109100
.ZG11P            ANOP  ,                                               00109200
                  AIF   (T'&ZCGPR NE 'N').ZG11R  NON NUMERIC            00109300
                  AIF   ('&ZCGPR' LT '2').ZG11Q                         00109400
                  AIF   ('&ZCGPR' LE '12').ZG11R                        00109500
.ZG11Q            ANOP  ,                                               00109600
&ZMS              SETC  '"REGION_TOKEN='        *KGPRA* MNOTE           00109700
&ZMS              SETC  '&ZMS.&REGION_TOKEN"'                           00109800
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00109900
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00110000
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00110100
.ZG11R            ANOP  ,                                               00110200
.*----------------------------------------------------------------***   00110300
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00110400
                  AIF   (N'&RETCODE LE 1).ZG14A  CK NUM                 00110500
&ZMS              SETC  '"RETCODE='             *KPOSA* MNOTE           00110600
&ZMS              SETC  '&ZMS.&RETCODE"'                                00110700
&ZMS              SETC  '&ZMS "RETCODE"'                                00110800
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00110900
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00111000
.ZG14A            ANOP  ,                                               00111100
.*-------------------------------------------------------------------   00111200
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00111300
                  AIF   (K'&RETCODE(1) LE 0).ZG14C  NO PARM             00111400
&ZXRETCODE        SETC  'OUTPUT'    SET OUTPUT                          00111500
&XRETCODE         SETC  '&RETCODE(1)'           SET XVARIABLE           00111600
                  AIF   (N'&RETCODE GT 1).ZG14C                         00111700
&XRETCODE         SETC  '&RETCODE'  SET XVARIABLE                       00111800
.ZG14C            ANOP  ,                                               00111900
.*-------------------------------------------------------------------   00112000
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00112100
                  AIF   (K'&ZXRETCODE LE 0).ZG14R  NOT I/O              00112200
                  AIF   ('&XRETCODE'(1,1) NE '(').ZG14R                 00112300
&ZCGPR            SETC  '&XRETCODE'(2,K'&XRETCODE-2)                    00112400
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG14P                    00112500
                  AIF   (K'&ZCGPR GT 2).ZG14Q                           00112600
                  AIF   ('&ZCGPR' EQ '0').ZG14Q                         00112700
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00112800
                  AIF   (T'&ZCGPR NE 'N').ZG14Q  INVALID REG NAME       00112900
.ZG14P            ANOP  ,                                               00113000
                  AIF   (T'&ZCGPR NE 'N').ZG14R  NON NUMERIC            00113100
                  AIF   ('&ZCGPR' LT '2').ZG14Q                         00113200
                  AIF   ('&ZCGPR' LE '12').ZG14R                        00113300
.ZG14Q            ANOP  ,                                               00113400
&ZMS              SETC  '"RETCODE='             *KGPRA* MNOTE           00113500
&ZMS              SETC  '&ZMS.&RETCODE"'                                00113600
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00113700
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00113800
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00113900
.ZG14R            ANOP  ,                                               00114000
.*----------------------------------------------------------------***   00114100
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00114200
                  AIF   (N'&RSNCODE LE 1).ZG17A  CK NUM                 00114300
&ZMS              SETC  '"RSNCODE='             *KPOSA* MNOTE           00114400
&ZMS              SETC  '&ZMS.&RSNCODE"'                                00114500
&ZMS              SETC  '&ZMS "RSNCODE"'                                00114600
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00114700
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00114800
.ZG17A            ANOP  ,                                               00114900
.*-------------------------------------------------------------------   00115000
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00115100
                  AIF   (K'&RSNCODE(1) LE 0).ZG17C  NO PARM             00115200
&ZXRSNCODE        SETC  'OUTPUT'    SET OUTPUT                          00115300
&XRSNCODE         SETC  '&RSNCODE(1)'           SET XVARIABLE           00115400
                  AIF   (N'&RSNCODE GT 1).ZG17C                         00115500
&XRSNCODE         SETC  '&RSNCODE'  SET XVARIABLE                       00115600
.ZG17C            ANOP  ,                                               00115700
.*-------------------------------------------------------------------   00115800
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00115900
                  AIF   (K'&ZXRSNCODE LE 0).ZG17R  NOT I/O              00116000
                  AIF   ('&XRSNCODE'(1,1) NE '(').ZG17R                 00116100
&ZCGPR            SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                    00116200
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG17P                    00116300
                  AIF   (K'&ZCGPR GT 2).ZG17Q                           00116400
                  AIF   ('&ZCGPR' EQ '0').ZG17Q                         00116500
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00116600
                  AIF   (T'&ZCGPR NE 'N').ZG17Q  INVALID REG NAME       00116700
.ZG17P            ANOP  ,                                               00116800
                  AIF   (T'&ZCGPR NE 'N').ZG17R  NON NUMERIC            00116900
                  AIF   ('&ZCGPR' LT '2').ZG17Q                         00117000
                  AIF   ('&ZCGPR' LE '12').ZG17R                        00117100
.ZG17Q            ANOP  ,                                               00117200
&ZMS              SETC  '"RSNCODE='             *KGPRA* MNOTE           00117300
&ZMS              SETC  '&ZMS.&RSNCODE"'                                00117400
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00117500
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00117600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00117700
.ZG17R            ANOP  ,                                               00117800
.******************************************************************     00117900
.***AH.P00 CHECK STANDALONE POSITIONAL VARIABLES                        00118000
.******************************************************************     00118100
                  ACTR  10000                                           00118200
.*----------------------------------------------------------------***   00118300
.***AH.P02 EXTRA POSITIONALS                                            00118400
                  AIF   (N'&SYSLIST LE 0).ZGLISTX  NO EXTRAS            00118500
                  AIF   (N'&SYSLIST NE 2).ZGLISTX1  NOT NULL            00118600
                  AIF   ('&SYSLIST(1)' NE '').ZGLISTX1  NOT NULL        00118700
                  AIF   ('&SYSLIST(2)' EQ '').ZGLISTX  NOT NULL         00118800
.ZGLISTX1         ANOP  ,                                               00118900
&ZCVAL            SETC  ''          ERROR FIELD                         00119000
&ZAWRK            SETA  0           POSITIONAL NUMBER                   00119100
.ZGLIST2          ANOP  ,                                               00119200
&ZAWRK            SETA  &ZAWRK+1    NEXT POSITIONAL                     00119300
                  AIF   (&ZAWRK GT N'&SYSLIST).ZGLIST3  DONE            00119400
&ZCVAL            SETC '&ZCVAL,&SYSLIST(&ZAWRK)'  EXTRA                 00119500
                  AGO   .ZGLIST2                                        00119600
.*                                                                      00119700
.ZGLIST3          ANOP  ,                                               00119800
&ZCVAL            SETC '&ZCVAL'(2,K'&ZCVAL-1)   STRIP COMMA             00119900
&ZMS              SETC  'POSITIONAL ARGUMENT(S),'  *PPOSA* MNOTE        00120000
&ZMS              SETC  '&ZMS "&ZCVAL"'                                 00120100
&ZMS              SETC  '&ZMS CANNOT BE USED.'                          00120200
&ZMS              SETC  '&ZMS NO POSITIONAL ARGUMENTS'                  00120300
                  MNOTE 8,' &ZMS ARE ALLOWED.'                          00120400
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00120500
.ZGLISTX          ANOP  ,                                               00120600
&ZASYSLNDX        SETA  0                                               00120700
.*-------------------------------------------------------------------   00120800
.***AG.MF04 MF=(SLE)                                                    00120900
.ZGMFX            ANOP  ,           END OF FULL SYNTAX CHECK            00121000
.*******************************************************************    00121100
.***AE.ZMR01 NO CODE GENERATED IF ERRORS DETECTED                       00121200
.*******************************************************************    00121300
                  AIF   (&ZMACRET NE 0).ZLX2    ERROR DETECTED          00121400
.*******************************************************************    00121500
.***AE.01  START OF IWMSSEL MACRO CODE                                  00121600
.*******************************************************************    00121700
                  LCLC  &M0M0001                 NAME                   00121800
&M0M0001          SETC  '&XLABEL'                SET NAME               00121900
                  AIF   (K'&XLABEL NE 0).XLAB2                          00122000
&M0M0001          SETC  'M00M&SYSNDX'            DEFAULT NAME           00122100
.*                                                                      00122200
.XLAB2            ANOP  ,                                               00122300
                  AIF   ('&XMF' EQ 'L').XLAB3                           00122400
&M0M0001 DS    0H                             IWMSSEL-2                 00122500
.XLAB3            ANOP  ,                                               00122600
.*******************************************************************    00122700
.***AE.PR01 PRINT CONTROLS, DEFAULT IS YES                              00122800
.*******************************************************************    00122900
              PUSH  PRINT                                               00123000
                  AIF   ('&ZPRINT' NE 'NO').ZPRINTX  TURN PRINT ON      00123100
                  PRINT OFF         ++ PR01                             00123200
                  AGO   .ZPRNTXX                                        00123300
.ZPRINTX          PRINT ON                                              00123400
.ZPRNTXX          ANOP  ,                                               00123500
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00123600
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00123700
.********************************************************************   00123800
.***AL.L01 INTERNAL ARRAY TO PRODUCE FORMATTED CODE                     00123900
.********************************************************************   00124000
                      LCLA  &ZOPN          LIST INSTRUCTION INDEX       00124100
                      LCLA  &ZOPN1         INVOCATION INDEX             00124200
                      LCLC  &ZOPL(4095)    LABEL                        00124300
                      LCLC  &ZOPO(4095)    OPERATION                    00124400
                      LCLC  &ZOPV(4095)    VALUE                        00124500
                      LCLC  &ZOPD(4095)    DESCRIPTION                  00124600
.*                                                                      00124700
&ZOPN                 SETA  0              INITIAL INST INDEX VALUE     00124800
.******************************************************************     00124900
.***AL.L10 IWMSSEL FMT=LIST MF=S|L PARAMETERS                           00125000
.******************************************************************     00125100
                      AIF   ('&XMF' EQ 'L').ZLMFSL2                     00125200
                      AIF   ('&XMF' NE 'S').ZLMFSLX                     00125300
&XMFCTRL              SETC  '#Z'.'&SYSNDX'(1,4).'A'                     00125400
&XMFATTR              SETC  '0D'                                        00125500
.*                                                                      00125600
&ZOPN                 SETA  &ZOPN+1                                     00125700
&ZOPL(&ZOPN)          SETC  ' '                                         00125800
                      AIF   (&SYSALVL NE 0).ZALVL6A                     00125900
&ZOPO(&ZOPN)          SETC  'B'                                         00126000
&ZOPV(&ZOPN)          SETC  '&XMFCTRL.S'                                00126100
                      AGO   .ZALVL6B                                    00126200
.ZALVL6A              ANOP                                              00126300
&ZOPO(&ZOPN)          SETC  'BRAS'                                      00126400
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL.S'                              00126500
.ZALVL6B              ANOP                                              00126600
&ZOPD(&ZOPN)          SETC  '++ IWMSSEL ARG PARMS'                      00126700
.*                                                                      00126800
&ZOPN                 SETA  &ZOPN+1                                     00126900
&ZOPL(&ZOPN)          SETC  ' '                                         00127000
&ZOPO(&ZOPN)          SETC  'SPACE'                                     00127100
&ZOPV(&ZOPN)          SETC  '1'                                         00127200
&ZOPD(&ZOPN)          SETC  ' '                                         00127300
.*                                                                      00127400
.ZLMFSL2              ANOP  ,                                           00127500
.*-------------------------------------------------------------------   00127600
.***AM.L00  IWMSSEL FMT=LIST name                                       00127700
                      AIF   ('&XMF' NE 'L').ZLMFSL2M                    00127800
&ZOPN                 SETA &ZOPN+1                                      00127900
&ZOPL(&ZOPN)          SETC '&M0M0001'                                   00128000
&ZOPO(&ZOPN)          SETC 'EQU'                                        00128100
&ZOPV(&ZOPN)          SETC '&XMFCTRL'                                   00128200
&ZOPD(&ZOPN)          SETC '++ IWMSSEL NAME'                            00128300
.ZLMFSL2M             ANOP  ,                                           00128400
.*-------------------------------------------------------------------   00128500
.***AM.L01  IWMSSEL FMT=LIST PARAMETERS                                 00128600
&ZOPN                 SETA &ZOPN+1                                      00128700
&ZOPL(&ZOPN)          SETC '&XMFCTRL'                                   00128800
&ZOPO(&ZOPN)          SETC 'DS'                                         00128900
&ZOPV(&ZOPN)          SETC '&XMFATTR'                                   00129000
&ZOPD(&ZOPN)          SETC '++ IWMSSEL PARM LIST'                       00129100
.*-------------------------------------------------------------------   00129200
.***AM.L02 XVERSION XL1                                                 00129300
&ZOPN                 SETA &ZOPN+1                                      00129400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XVERSION'                         00129500
&ZOPO(&ZOPN)          SETC 'DS'                                         00129600
&ZOPV(&ZOPN)          SETC 'XL1'                                        00129700
&ZOPD(&ZOPN)          SETC '++ INPUT XVERSION'                          00129800
.*-------------------------------------------------------------------   00129900
.***AM.L09  XRSV0001 CL1                                                00130000
&ZOPN                 SETA &ZOPN+1                                      00130100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0001'                         00130200
&ZOPO(&ZOPN)          SETC 'DS'                                         00130300
&ZOPV(&ZOPN)          SETC 'CL1'                                        00130400
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV0001'                      00130500
.*-------------------------------------------------------------------   00130600
.***AM.L09  XPLISTLEN XL2                                               00130700
&ZOPN                 SETA &ZOPN+1                                      00130800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XPLISTLEN'                        00130900
&ZOPO(&ZOPN)          SETC 'DS'                                         00131000
&ZOPV(&ZOPN)          SETC 'XL2'                                        00131100
&ZOPD(&ZOPN)          SETC '++ INPUT  XPLISTLEN'                        00131200
.*-------------------------------------------------------------------   00131300
.***AM.L09  XUSERDATA CL16                                              00131400
&ZOPN                 SETA &ZOPN+1                                      00131500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XUSERDATA'                        00131600
&ZOPO(&ZOPN)          SETC 'DS'                                         00131700
&ZOPV(&ZOPN)          SETC 'CL16'                                       00131800
&ZOPD(&ZOPN)          SETC '++ &ZXUSERDATA  XUSERDATA'                  00131900
.*-------------------------------------------------------------------   00132000
.***AM.L09  XWLMEUTKN CL8                                               00132100
&ZOPN                 SETA &ZOPN+1                                      00132200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XWLMEUTKN'                        00132300
&ZOPO(&ZOPN)          SETC 'DS'                                         00132400
&ZOPV(&ZOPN)          SETC 'CL8'                                        00132500
&ZOPD(&ZOPN)          SETC '++ &ZXWLMEUTKN  XWLMEUTKN'                  00132600
.*-------------------------------------------------------------------   00132700
.***AM.L09  XRSV001C CL8                                                00132800
&ZOPN                 SETA &ZOPN+1                                      00132900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV001C'                         00133000
&ZOPO(&ZOPN)          SETC 'DS'                                         00133100
&ZOPV(&ZOPN)          SETC 'CL8'                                        00133200
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV001C'                      00133300
.*-------------------------------------------------------------------   00133400
.***AM.L09  XRSV0024 CL4                                                00133500
&ZOPN                 SETA &ZOPN+1                                      00133600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0024'                         00133700
&ZOPO(&ZOPN)          SETC 'DS'                                         00133800
&ZOPV(&ZOPN)          SETC 'CL4'                                        00133900
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV0024'                      00134000
.*-------------------------------------------------------------------   00134100
.***AM.MLM2 SAVED LOCATION COUNTER                                      00134200
                      AIF  (&XPLISTVER GE 1).ZL8LA                      00134300
                      AIF  ('&ZENDBASEPL' NE '').ZL8LA                  00134400
&ZENDBASEPL           SETC 'YES'                                        00134500
&ZOPN                 SETA &ZOPN+1                                      00134600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._PL_END'                           00134700
&ZOPO(&ZOPN)          SETC 'EQU'                                        00134800
&ZOPV(&ZOPN)          SETC '*'                                          00134900
&ZOPD(&ZOPN)          SETC '++ END OF BASE PLIST'                       00135000
.ZL8LA                ANOP  ,                                           00135100
.*-------------------------------------------------------------------   00135200
.***AM.LVER1                                                            00135300
                      AIF  (&XPLISTVER LT 1).ZL8L                       00135400
.*-------------------------------------------------------------------   00135500
.*-------------------------------------------------------------------   00135600
.***AM.L09  XSERVER_TOKEN CL32                                          00135700
&ZOPN                 SETA &ZOPN+1                                      00135800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSERVER_TOKEN'                    00135900
&ZOPO(&ZOPN)          SETC 'DS'                                         00136000
&ZOPV(&ZOPN)          SETC 'CL32'                                       00136100
&ZOPD(&ZOPN)          SETC '++ &ZXSERVER_TOKEN  XSERVER_TOKEN'          00136200
.*-------------------------------------------------------------------   00136300
.***AM.LVER2                                                            00136400
.ZL8L                 ANOP  ,                                           00136500
.*-------------------------------------------------------------------   00136600
.*-------------------------------------------------------------------   00136700
.***AM.MLM2 SAVED LOCATION COUNTER                                      00136800
                      AIF  (&XPLISTVER GE 2).ZL9LA                      00136900
                      AIF  ('&ZENDBASEPL' NE '').ZL9LA                  00137000
&ZENDBASEPL           SETC 'YES'                                        00137100
&ZOPN                 SETA &ZOPN+1                                      00137200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._PL_END'                           00137300
&ZOPO(&ZOPN)          SETC 'EQU'                                        00137400
&ZOPV(&ZOPN)          SETC '*'                                          00137500
&ZOPD(&ZOPN)          SETC '++ END OF BASE PLIST'                       00137600
.ZL9LA                ANOP  ,                                           00137700
.*-------------------------------------------------------------------   00137800
.***AM.LVER1                                                            00137900
                      AIF  (&XPLISTVER LT 2).ZL9L                       00138000
.*-------------------------------------------------------------------   00138100
.*-------------------------------------------------------------------   00138200
.***AM.L09  XREGION_TOKEN CL16                                          00138300
&ZOPN                 SETA &ZOPN+1                                      00138400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XREGION_TOKEN'                    00138500
&ZOPO(&ZOPN)          SETC 'DS'                                         00138600
&ZOPV(&ZOPN)          SETC 'CL16'                                       00138700
&ZOPD(&ZOPN)          SETC '++ &ZXREGION_TOKEN  XREGION_TOKEN'          00138800
.*-------------------------------------------------------------------   00138900
.***AM.LVER2                                                            00139000
.ZL9L                 ANOP  ,                                           00139100
.*-------------------------------------------------------------------   00139200
.*-------------------------------------------------------------------   00139300
.***AM.L10 END OF IWMSSEL LIST PARAMETERS                               00139400
&ZOPN                 SETA &ZOPN+1                                      00139500
&ZOPL(&ZOPN)          SETC '&XMFCTRL.L'                                 00139600
&ZOPO(&ZOPN)          SETC 'EQU'                                        00139700
&ZOPV(&ZOPN)          SETC '*-&XMFCTRL'                                 00139800
&ZOPD(&ZOPN)          SETC '++ LENGTH OF PLIST'                         00139900
.*                                                                      00140000
&ZOPN                 SETA &ZOPN+1                                      00140100
&ZOPL(&ZOPN)          SETC ' '                                          00140200
&ZOPO(&ZOPN)          SETC 'SPACE'                                      00140300
&ZOPV(&ZOPN)          SETC '1'                                          00140400
&ZOPD(&ZOPN)          SETC ' '                                          00140500
.*-------------------------------------------------------------------   00140600
.***AL.L12 IWMSSEL FMT=LIST MF=S|L PARAMETERS                           00140700
                      AIF   ('&XMF' EQ 'L').ZMFLX  DONE IF MF=L         00140800
.*                                                                      00140900
&ZOPN                 SETA  &ZOPN+1                                     00141000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL.S'                                00141100
&ZOPO(&ZOPN)          SETC  'DC'                                        00141200
&ZOPV(&ZOPN)          SETC  '0H''0'''                                   00141300
&ZOPD(&ZOPN)          SETC  '++ IWMSSEL ARG PARMS'                      00141400
.*                                                                      00141500
.ZLMFSLX              ANOP  ,                                           00141600
.*-------------------------------------------------------------------   00141700
.***AL.L13 SET ZPLLEN TO ITS APPROPRIATE VALUE                          00141800
&ZPLLEN               SETA 40                                           00141900
.*                                                                      00142000
                      AIF  (&XPLISTVER LT 1).ZLLEN2Z                    00142100
&ZPLLEN               SETA 72                                           00142200
.ZLLEN2Z              ANOP  ,                                           00142300
.*                                                                      00142400
                      AIF  (&XPLISTVER LT 2).ZLLEN3Z                    00142500
&ZPLLEN               SETA 88                                           00142600
.ZLLEN3Z              ANOP  ,                                           00142700
.*                                                                      00142800
.******************************************************************     00142900
.***AI.L01 IWMSSEL FMT=LIST FILL IN PARAMETER AREA                      00143000
.******************************************************************     00143100
                      ACTR  10000                                       00143200
&ZCVAL                SETC  'LA'           ASSUME XA MODE               00143300
                      AIF   ('&SYSASCE' EQ 'P').ZIMFXA  SYSSTATE PRI    00143400
&ZCVAL                SETC  'LAE'          XAX MODE                     00143500
.ZIMFXA               ANOP ,                                            00143600
.*                                                                      00143700
                      AIF   ('&XMFCTRL'(1,1) NE '(').ZIMFN2  NOT GPR    00143800
&ZCGPR                SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)  GET GPR         00143900
                      AIF   ('&ZCGPR' EQ 'GPR1').ZIMFNX                 00144000
                      AIF   ('&ZCGPR' EQ 'GPR01').ZIMFNX                00144100
                      AIF   ('&ZCGPR' EQ 'REG1').ZIMFNX                 00144200
                      AIF   ('&ZCGPR' EQ 'REG01').ZIMFNX                00144300
                      AIF   ('&ZCGPR' EQ 'R1').ZIMFNX                   00144400
                      AIF   ('&ZCGPR' EQ '1').ZIMFNX                    00144500
                      AIF   ('&ZCGPR' EQ '01').ZIMFNX                   00144600
&ZOPN                 SETA  &ZOPN+1                                     00144700
&ZOPL(&ZOPN)          SETC  ' '                                         00144800
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00144900
&ZOPV(&ZOPN)          SETC  '1,0(,&ZCGPR)'                              00145000
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00145100
                      AGO   .ZIMFNX                                     00145200
.*                                                                      00145300
.ZIMFN2               ANOP ,                                            00145400
                      AIF   (&SYSALVL EQ 0).ZIMFNX1                     00145500
                      AIF   ('&XMF' NE 'S').ZIMFNX1                     00145600
                      AIF   ('&ZCVAL' NE 'LAE').ZIMFNX                  00145700
&ZOPN                 SETA  &ZOPN+1                                     00145800
&ZOPL(&ZOPN)          SETC  ' '                                         00145900
&ZOPO(&ZOPN)          SETC  'LAE'                                       00146000
&ZOPV(&ZOPN)          SETC  '1,0(1,0)'                                  00146100
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00146200
                      AGO   .ZIMFNX                                     00146300
.ZIMFNX1              ANOP ,                                            00146400
&ZOPN                 SETA  &ZOPN+1                                     00146500
&ZOPL(&ZOPN)          SETC  ' '                                         00146600
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00146700
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL'                                00146800
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00146900
.ZIMFNX               ANOP ,                                            00147000
.********************************************************************   00147100
.***AI.L02 IWMSSEL FMT=LIST INITIALIZE PARAMETER AREA                   00147200
.********************************************************************   00147300
.***AI.L03 MF=(SLE)                                                     00147400
                      AIF   ('&XMF' EQ 'L').ZIMFLX                      00147500
.*                                                                      00147600
&ZOPN                 SETA  &ZOPN+1                                     00147700
&ZOPL(&ZOPN)          SETC  ' '                                         00147800
&ZOPO(&ZOPN)          SETC  'XC'                                        00147900
&ZOPV(&ZOPN)          SETC  '0(&ZPLLEN,1),0(1)'                         00148000
&ZOPD(&ZOPN)          SETC  '++ INITIALIZE'                             00148100
.ZIMFLX               ANOP  ,                                           00148200
.*-------------------------------------------------------------------   00148300
.***AI.L04B XVERSION XL1                                                00148400
                      AIF   (&XPLISTVER EQ 0).ZIMFVZ                    00148500
&ZOPN                 SETA  &ZOPN+1                                     00148600
&ZOPL(&ZOPN)          SETC  ' '                                         00148700
&ZOPO(&ZOPN)          SETC  'MVI'                                       00148800
&ZOPV(&ZOPN)          SETC  '0(1),&XPLISTVER'                           00148900
&ZOPD(&ZOPN)          SETC  '++ INPUT XVERSION XL1'                     00149000
.ZIMFVZ               ANOP  ,                                           00149100
.*-------------------------------------------------------------------   00149200
.***AI.L04 XPLISTLEN XL2                                                00149300
&ZOPN                 SETA  &ZOPN+1                                     00149400
&ZOPL(&ZOPN)          SETC  ' '                                         00149500
&ZOPO(&ZOPN)          SETC  'MVC'                                       00149600
&ZOPV(&ZOPN)          SETC  '2(2,1),=AL2(&ZPLLEN)'                      00149700
&ZOPD(&ZOPN)          SETC  '++ INPUT XPLISTLEN XL2'                    00149800
.*-------------------------------------------------------------------   00149900
&ZOPN1                SETA &ZOPN                                        00150000
.*******************************************************************    00150100
.***  PROCESS IWMSSEL OUTPUT PARAMETERS                                 00150200
.*******************************************************************    00150300
                      ACTR  10000                                       00150400
.*------------------------------------------------------------------    00150500
.***AO.L02 XUSERDATA CL16                                               00150600
         AIF   ('&ZXUSERDATA' EQ 'OUTPUT').ZO4A  OUTPUT                 00150700
         AIF   ('&ZXUSERDATA' NE 'INOUT').ZO4C  INOUT                   00150800
.ZO4A    AIF   ('&XUSERDATA'(1,1) NE '(').ZO4B  ADDR IN GPR             00150900
&ZCGPR   SETC  '&XUSERDATA'(2,K'&XUSERDATA-2)                           00151000
&ZOPN                 SETA  &ZOPN+1                                     00151100
&ZOPL(&ZOPN)          SETC  ' '                                         00151200
&ZOPO(&ZOPN)          SETC  'MVC'                                       00151300
&ZOPV(&ZOPN)          SETC  '0(16,&ZCGPR),4(1)'                         00151400
&ZOPD(&ZOPN)          SETC  '++ XUSERDATA CL16'                         00151500
                      AGO   .ZO4C                                       00151600
.*                                                                      00151700
.ZO4B                 ANOP  ,                                           00151800
&ZAWRK   SETA  K'&XUSERDATA                                             00151900
         AIF   ('&XUSERDATA'(&ZAWRK,1) NE ')').ZO4G                     00152000
&ZN      SETA  2                                                        00152100
.ZO4H    ANOP                                                           00152200
         AIF   (&ZN GE &ZAWRK).ZO4G                                     00152300
         AIF   ('&XUSERDATA'(&ZN,1) NE '(').ZO4I                        00152400
&ZC      SETC  '&XUSERDATA'(1,&ZN).'16'.','                             00152500
&ZC      SETC  '&ZC'.'&XUSERDATA'(&ZN+1,&ZAWRK-&ZN).',4(1)'             00152600
         AGO   .ZO4J                                                    00152700
.ZO4I    ANOP                                                           00152800
&ZN      SETA  &ZN+1                                                    00152900
         AGO   .ZO4H                                                    00153000
.ZO4G    ANOP                                                           00153100
&ZC      SETC  '&XUSERDATA.(16),4(1)'                                   00153200
.ZO4J    ANOP                                                           00153300
&ZOPN                 SETA  &ZOPN+1                                     00153400
&ZOPL(&ZOPN)          SETC  ' '                                         00153500
&ZOPO(&ZOPN)          SETC  'MVC'                                       00153600
&ZOPV(&ZOPN)          SETC  '&ZC'                                       00153700
&ZOPD(&ZOPN)          SETC  '++ XUSERDATA CL16'                         00153800
.ZO4C                 ANOP  ,                                           00153900
.*------------------------------------------------------------------    00154000
.***AO.L02 XWLMEUTKN CL8                                                00154100
         AIF   ('&ZXWLMEUTKN' EQ 'OUTPUT').ZO5A  OUTPUT                 00154200
         AIF   ('&ZXWLMEUTKN' NE 'INOUT').ZO5C  INOUT                   00154300
.ZO5A    AIF   ('&XWLMEUTKN'(1,1) NE '(').ZO5B  ADDR IN GPR             00154400
&ZCGPR   SETC  '&XWLMEUTKN'(2,K'&XWLMEUTKN-2)                           00154500
&ZOPN                 SETA  &ZOPN+1                                     00154600
&ZOPL(&ZOPN)          SETC  ' '                                         00154700
&ZOPO(&ZOPN)          SETC  'MVC'                                       00154800
&ZOPV(&ZOPN)          SETC  '0(8,&ZCGPR),20(1)'                         00154900
&ZOPD(&ZOPN)          SETC  '++ XWLMEUTKN CL8'                          00155000
                      AGO   .ZO5C                                       00155100
.*                                                                      00155200
.ZO5B                 ANOP  ,                                           00155300
&ZAWRK   SETA  K'&XWLMEUTKN                                             00155400
         AIF   ('&XWLMEUTKN'(&ZAWRK,1) NE ')').ZO5G                     00155500
&ZN      SETA  2                                                        00155600
.ZO5H    ANOP                                                           00155700
         AIF   (&ZN GE &ZAWRK).ZO5G                                     00155800
         AIF   ('&XWLMEUTKN'(&ZN,1) NE '(').ZO5I                        00155900
&ZC      SETC  '&XWLMEUTKN'(1,&ZN).'8'.','                              00156000
&ZC      SETC  '&ZC'.'&XWLMEUTKN'(&ZN+1,&ZAWRK-&ZN).',20(1)'            00156100
         AGO   .ZO5J                                                    00156200
.ZO5I    ANOP                                                           00156300
&ZN      SETA  &ZN+1                                                    00156400
         AGO   .ZO5H                                                    00156500
.ZO5G    ANOP                                                           00156600
&ZC      SETC  '&XWLMEUTKN.(8),20(1)'                                   00156700
.ZO5J    ANOP                                                           00156800
&ZOPN                 SETA  &ZOPN+1                                     00156900
&ZOPL(&ZOPN)          SETC  ' '                                         00157000
&ZOPO(&ZOPN)          SETC  'MVC'                                       00157100
&ZOPV(&ZOPN)          SETC  '&ZC'                                       00157200
&ZOPD(&ZOPN)          SETC  '++ XWLMEUTKN CL8'                          00157300
.ZO5C                 ANOP  ,                                           00157400
.*------------------------------------------------------------------    00157500
.***AO.LVER01                                                           00157600
                      AIF  (&XPLISTVER LT 1).ZO8Z  PLVER                00157700
.*------------------------------------------------------------------    00157800
.***AO.L02 XSERVER_TOKEN CL32                                           00157900
         AIF   ('&ZXSERVER_TOKEN' EQ 'OUTPUT').ZO8A  OUTPUT             00158000
         AIF   ('&ZXSERVER_TOKEN' NE 'INOUT').ZO8C  INOUT               00158100
.ZO8A    AIF   ('&XSERVER_TOKEN'(1,1) NE '(').ZO8B  ADDR IN GPR         00158200
&ZCGPR   SETC  '&XSERVER_TOKEN'(2,K'&XSERVER_TOKEN-2)                   00158300
&ZOPN                 SETA  &ZOPN+1                                     00158400
&ZOPL(&ZOPN)          SETC  ' '                                         00158500
&ZOPO(&ZOPN)          SETC  'MVC'                                       00158600
&ZOPV(&ZOPN)          SETC  '0(32,&ZCGPR),40(1)'                        00158700
&ZOPD(&ZOPN)          SETC  '++ XSERVER_TOKEN CL32'                     00158800
                      AGO   .ZO8C                                       00158900
.*                                                                      00159000
.ZO8B                 ANOP  ,                                           00159100
&ZAWRK   SETA  K'&XSERVER_TOKEN                                         00159200
         AIF   ('&XSERVER_TOKEN'(&ZAWRK,1) NE ')').ZO8G                 00159300
&ZN      SETA  2                                                        00159400
.ZO8H    ANOP                                                           00159500
         AIF   (&ZN GE &ZAWRK).ZO8G                                     00159600
         AIF   ('&XSERVER_TOKEN'(&ZN,1) NE '(').ZO8I                    00159700
&ZC      SETC  '&XSERVER_TOKEN'(1,&ZN).'32'.','                         00159800
&ZC      SETC  '&ZC'.'&XSERVER_TOKEN'(&ZN+1,&ZAWRK-&ZN).',40(1)'        00159900
         AGO   .ZO8J                                                    00160000
.ZO8I    ANOP                                                           00160100
&ZN      SETA  &ZN+1                                                    00160200
         AGO   .ZO8H                                                    00160300
.ZO8G    ANOP                                                           00160400
&ZC      SETC  '&XSERVER_TOKEN.(32),40(1)'                              00160500
.ZO8J    ANOP                                                           00160600
&ZOPN                 SETA  &ZOPN+1                                     00160700
&ZOPL(&ZOPN)          SETC  ' '                                         00160800
&ZOPO(&ZOPN)          SETC  'MVC'                                       00160900
&ZOPV(&ZOPN)          SETC  '&ZC'                                       00161000
&ZOPD(&ZOPN)          SETC  '++ XSERVER_TOKEN CL32'                     00161100
.ZO8C                 ANOP  ,                                           00161200
.*------------------------------------------------------------------    00161300
.***AO.LVER02                                                           00161400
.ZO8Z                 ANOP  ,                                           00161500
.*------------------------------------------------------------------    00161600
.***AO.LVER01                                                           00161700
                      AIF  (&XPLISTVER LT 2).ZO9Z  PLVER                00161800
.*------------------------------------------------------------------    00161900
.***AO.L02 XREGION_TOKEN CL16                                           00162000
         AIF   ('&ZXREGION_TOKEN' EQ 'OUTPUT').ZO9A  OUTPUT             00162100
         AIF   ('&ZXREGION_TOKEN' NE 'INOUT').ZO9C  INOUT               00162200
.ZO9A    AIF   ('&XREGION_TOKEN'(1,1) NE '(').ZO9B  ADDR IN GPR         00162300
&ZCGPR   SETC  '&XREGION_TOKEN'(2,K'&XREGION_TOKEN-2)                   00162400
&ZOPN                 SETA  &ZOPN+1                                     00162500
&ZOPL(&ZOPN)          SETC  ' '                                         00162600
&ZOPO(&ZOPN)          SETC  'MVC'                                       00162700
&ZOPV(&ZOPN)          SETC  '0(16,&ZCGPR),72(1)'                        00162800
&ZOPD(&ZOPN)          SETC  '++ XREGION_TOKEN CL16'                     00162900
                      AGO   .ZO9C                                       00163000
.*                                                                      00163100
.ZO9B                 ANOP  ,                                           00163200
&ZAWRK   SETA  K'&XREGION_TOKEN                                         00163300
         AIF   ('&XREGION_TOKEN'(&ZAWRK,1) NE ')').ZO9G                 00163400
&ZN      SETA  2                                                        00163500
.ZO9H    ANOP                                                           00163600
         AIF   (&ZN GE &ZAWRK).ZO9G                                     00163700
         AIF   ('&XREGION_TOKEN'(&ZN,1) NE '(').ZO9I                    00163800
&ZC      SETC  '&XREGION_TOKEN'(1,&ZN).'16'.','                         00163900
&ZC      SETC  '&ZC'.'&XREGION_TOKEN'(&ZN+1,&ZAWRK-&ZN).',72(1)'        00164000
         AGO   .ZO9J                                                    00164100
.ZO9I    ANOP                                                           00164200
&ZN      SETA  &ZN+1                                                    00164300
         AGO   .ZO9H                                                    00164400
.ZO9G    ANOP                                                           00164500
&ZC      SETC  '&XREGION_TOKEN.(16),72(1)'                              00164600
.ZO9J    ANOP                                                           00164700
&ZOPN                 SETA  &ZOPN+1                                     00164800
&ZOPL(&ZOPN)          SETC  ' '                                         00164900
&ZOPO(&ZOPN)          SETC  'MVC'                                       00165000
&ZOPV(&ZOPN)          SETC  '&ZC'                                       00165100
&ZOPD(&ZOPN)          SETC  '++ XREGION_TOKEN CL16'                     00165200
.ZO9C                 ANOP  ,                                           00165300
.*------------------------------------------------------------------    00165400
.***AO.LVER02                                                           00165500
.ZO9Z                 ANOP  ,                                           00165600
.*******************************************************************    00165700
.***AO.X02  RETURN CODE PROCESSING                                      00165800
.*******************************************************************    00165900
                      AIF   (N'&RETCODE LE 0).ZMRETX                    00166000
                      AIF   ('&XRETCODE'(1,1) EQ '(').ZMRET2            00166100
                      AIF   ('&XRETCODE' EQ 'GPR15').ZMRETX             00166200
                      AIF   ('&XRETCODE' EQ 'REG15').ZMRETX             00166300
                      AIF   ('&XRETCODE' EQ 'R15').ZMRETX               00166400
                      AIF   ('&XRETCODE' EQ '15').ZMRETX                00166500
&ZOPN                 SETA  &ZOPN+1                                     00166600
&ZOPL(&ZOPN)          SETC  ' '                                         00166700
&ZOPO(&ZOPN)          SETC  'ST'                                        00166800
&ZOPV(&ZOPN)          SETC  '15,&XRETCODE'                              00166900
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00167000
                      AGO   .ZMRETX                                     00167100
.*                                                                      00167200
.ZMRET2               ANOP  ,                                           00167300
&ZCGPR                SETC  '&XRETCODE'(2,K'&XRETCODE-2)                00167400
                      AIF   ('&ZCGPR' EQ 'GPR15').ZMRETX                00167500
                      AIF   ('&ZCGPR' EQ 'REG15').ZMRETX                00167600
                      AIF   ('&ZCGPR' EQ 'R15').ZMRETX                  00167700
                      AIF   ('&ZCGPR' EQ '15').ZMRETX                   00167800
&ZOPN                 SETA  &ZOPN+1                                     00167900
&ZOPL(&ZOPN)          SETC  ' '                                         00168000
&ZOPO(&ZOPN)          SETC  'LR'                                        00168100
&ZOPV(&ZOPN)          SETC  '&ZCGPR,15'                                 00168200
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00168300
.ZMRETX               ANOP  ,                                           00168400
.*******************************************************************    00168500
.***AO.X03  REASON CODE PROCESSING                                      00168600
.*******************************************************************    00168700
                      AIF   (N'&RSNCODE LE 0).ZMRSNX                    00168800
                      AIF   ('&XRSNCODE'(1,1) EQ '(').ZMRSN2            00168900
                      AIF   ('&XRSNCODE' EQ 'GPR0').ZMRSNX              00169000
                      AIF   ('&XRSNCODE' EQ 'GPR00').ZMRSNX             00169100
                      AIF   ('&XRSNCODE' EQ 'REG0').ZMRSNX              00169200
                      AIF   ('&XRSNCODE' EQ 'REG00').ZMRSNX             00169300
                      AIF   ('&XRSNCODE' EQ 'R0').ZMRSNX                00169400
                      AIF   ('&XRSNCODE' EQ '0').ZMRSNX                 00169500
                      AIF   ('&XRSNCODE' EQ '00').ZMRSNX                00169600
&ZOPN                 SETA  &ZOPN+1                                     00169700
&ZOPL(&ZOPN)          SETC  ' '                                         00169800
&ZOPO(&ZOPN)          SETC  'ST'                                        00169900
&ZOPV(&ZOPN)          SETC  '0,&XRSNCODE'                               00170000
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00170100
                      AGO   .ZMRSNX                                     00170200
.*                                                                      00170300
.ZMRSN2               ANOP  ,                                           00170400
&ZCGPR                SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                00170500
                      AIF   ('&ZCGPR' EQ 'GPR0').ZMRSNX                 00170600
                      AIF   ('&ZCGPR' EQ 'GPR00').ZMRSNX                00170700
                      AIF   ('&ZCGPR' EQ 'REG0').ZMRSNX                 00170800
                      AIF   ('&ZCGPR' EQ 'REG00').ZMRSNX                00170900
                      AIF   ('&ZCGPR' EQ 'R0').ZMRSNX                   00171000
                      AIF   ('&ZCGPR' EQ '0').ZMRSNX                    00171100
                      AIF   ('&ZCGPR' EQ '00').ZMRSNX                   00171200
&ZOPN                 SETA  &ZOPN+1                                     00171300
&ZOPL(&ZOPN)          SETC  ' '                                         00171400
&ZOPO(&ZOPN)          SETC  'LR'                                        00171500
&ZOPV(&ZOPN)          SETC  '&ZCGPR,0'                                  00171600
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00171700
.ZMRSNX               ANOP  ,                                           00171800
.*******************************************************************    00171900
.***AO.X04  LABEL FOR MF=L PROCESSING                                   00172000
.*******************************************************************    00172100
.ZMFLX                ANOP  ,              MF=L PROCESSING              00172200
.*******************************************************************    00172300
.***AO.X05  FORMAT GENERATED INSTRUCTIONS                               00172400
.*******************************************************************    00172500
                      ACTR  10000                                       00172600
.*                                                                      00172700
                      LCLA  &ZLC           COLUMN POSITION              00172800
                      LCLA  &ZOPX          LIST TABLE INDEX             00172900
                      LCLC  &ZLL           LABEL                        00173000
                      LCLC  &ZLOP          OPERATION                    00173100
                      LCLC  &ZLV           VALUE                        00173200
                      LCLC  &ZLD           DESCRIPTION                  00173300
.*                                                                      00173400
&ZOPX                 SETA  1                                           00173500
.ZL2                  AIF   (&ZOPX GT &ZOPN1).ZLX  B IF DONE            00173600
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00173700
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00173800
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00173900
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00174000
                      AIF   (K'&ZLD LE 0).ZL5                           00174100
&ZLC                  SETA  35             COMMENT COLUMN               00174200
                      AIF   ('&ZLD'(1,1) NE '*').ZL3                    00174300
&ZLC                  SETA  33             COMMMENT COLUMN              00174400
.ZL3                  AIF   (K'&ZLV GE &ZLC-16-1).ZL4                   00174500
&ZLV                  SETC  '&ZLV'.' '                                  00174600
                      AGO   .ZL3                                        00174700
.*                                                                      00174800
.ZL4                  ANOP  ,                                           00174900
&ZLV                  SETC  '&ZLV'.' '                                  00175000
.ZL5                  ANOP  ,                                           00175100
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00175200
.*                                                                      00175300
&ZLL     &ZLOP &ZLV                                                     00175400
.*                                                                      00175500
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00175600
                      AGO   .ZL2           CONTINUE LOOPING             00175700
.*                                                                      00175800
.ZLX                  ANOP  ,                                           00175900
                      AIF   ('&XMF' EQ 'L').ZLINKX  MF=L                00176000
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00176100
         L     14,16(0,0)              GET CVT ADDRESS                  00176200
         L     14,772(14,0)            GET SFT ADDRESS                  00176300
         L     14,380(14,0)            GET LX FOR SERVICE ROUTINE       00176400
         LA    15,42                   GET EX FOR SERVICE ROUTINE       00176500
         OR    14,15                   GET PC NUMBER                    00176600
         PC    0(14)                                                    00176700
END&SYSNDX DS    0H                    END LABEL                        00176800
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00176900
.ZLINKX               ANOP  ,                                           00177000
.*******************************************************************    00177100
.***AP.X01  FORMAT GENERATED CODE                                       00177200
.ZL21                 AIF   (&ZOPX GT &ZOPN).ZLX1  B IF DONE            00177300
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00177400
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00177500
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00177600
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00177700
                      AIF   (K'&ZLD LE 0).ZL51                          00177800
&ZLC                  SETA  35             COMMENT COLUMN               00177900
                      AIF   ('&ZLD'(1,1) NE '*').ZL31                   00178000
&ZLC                  SETA  33             COMMENT COLUMN               00178100
.ZL31                 AIF   (K'&ZLV GE &ZLC-16-1).ZL41                  00178200
&ZLV                  SETC  '&ZLV'.' '                                  00178300
                      AGO   .ZL31                                       00178400
.*                                                                      00178500
.ZL41                 ANOP  ,                                           00178600
&ZLV                  SETC  '&ZLV'.' '                                  00178700
.ZL51                 ANOP  ,                                           00178800
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00178900
.*                                                                      00179000
&ZLL     &ZLOP &ZLV                                                     00179100
.*                                                                      00179200
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00179300
                      AGO   .ZL21          CONTINUE LOOPING             00179400
.*                                                                      00179500
.ZLX1                 ANOP  ,                                           00179600
.*******************************************************************    00179700
.***AP.X02  END OF IWMSSEL MACRO                                        00179800
&ZIWMSSEL             SETC  'YES'          SET IWMSSEL USED             00179900
         POP   PRINT                                                    00180000
*                                            IWMSSEL-2                  00180100
         SPACE 1                                                        00180200
.ZLX2                 ANOP  ,                                           00180300
         MEND                                                           00180400
**********************************************************************/ 00180500
*/*PB.OC01 INVOKE MACRO---------------------------------------------*/  00180600
*%IWMSSEL: MACRO KEYS(USERDATA,WLMEUTKN,SERVER_TOKEN,REGION_TOKEN,      00180700
*                 RETCODE,RSNCODE,PLISTVER,MF);                         00180800
*  ANS('?'||MACLABEL||' '||'IWMSSELP '||MACLIST||                       00180900
*         ' '||MACKEYS||';') COL(MACLMAR);                              00181000
*%END IWMSSEL;                                                          00181100
