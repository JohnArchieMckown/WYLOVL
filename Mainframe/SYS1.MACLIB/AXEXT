*  /* START OF SPECIFICATIONS ***************************************** 00050000
*                                                                     * 00100000
*01*  MODULE-NAME = AXEXT                                             * 00150000
*                                                                     * 00200000
*01*  MACDATE = 93.170                                                * 00250000
*                                                                     * 00280000
*01*  DESCRIPTIVE-NAME = AUTHORIZATION INDEX EXTRACT MACRO            * 00310000
*                                                                     * 00340000
*01*  COPYRIGHT =                                                     * 00375000
*            5655-068                                                 * 00410000
*            THIS MODULE IS "RESTRICTED MATERIALS OF IBM"             * 00445000
*            (C)COPYRIGHT IBM CORP. 1980, 1993                        * 00480000
*            LICENSED MATERIALS - PROPERTY OF IBM                     * 00515000
*                                                                     * 00550000
*01*  STATUS = HBB5510                                            @P1C* 00583300
*                                                                     * 00616600
*                                                                     * 00650000
*01*  FUNCTION = INTERFACE TO THE AXEXT SERVICE                       * 00700000
*                                                                     * 00750000
*01*  MODULE-TYPE = MACRO                                             * 00800000
*                                                                     * 00850000
*01*  PROCESSOR = ASSEMBLER,PL/S-III (BILINGUAL)              @ZM50111* 00900000
*                                                                     * 00937500
*01*  MACROS = IHBERMAC                                               * 00975000
*                                                                     * 01012500
*01*  CHANGE ACTIVITY =       NEW FOR OS/VS2 JBB1226.                 * 01050000
*                             UPDATE BOTH BAL AND PL/S MACDATE        * 01068700
*                             WHENEVER THIS MACRO IS CHANGED.         * 01087500
*                             THE S/D CODE IS @G387PXX.               * 01125000
*             VS50111 - (PL/S) FORCE RC=12 ON NULL ASID(1)    @ZM50111* 01162500
*             PBB0031 - (PL/S) PTR NOTATION CHECKS INVALID.   @ZMB0031* 01181200
*             OY24359 - CHECK FOR NO PARMS, BUT COMMENTS      @YA24359* 01190600
*           $P1=PIG1968,HBB5510,930616,PDXB: Savearea                 * 01195300
*                                                                     * 01200000
*01*  MNOTES = IHB002 INVALID ASID OPERAND - ___                      * 01250000
*              IHB027 EXCESSIVE POSITIONAL PARAMETERS SPECIFIED       * 01300000
*                                                                     * 01350000
*01*  PL/S MSGS = AS FOLLOWS:                                         * 01400000
*     AHA0033 ASID - '_' - HAS TOO MANY ARGUMENTS.                    * 01450000
*             NO TEXT IS GENERATED.                                   * 01500000
*     AHA0053 THE MACLIST '_' IS NOT ALLOWED. NO TEXT IS GENERATED.   * 01550000
*     AHA0073 ASID(1) MAY NOT BE NULL. NO TEXT IS GENERATED.          * 01600000
*                                                                     * 01650000
*A000000-999999                                                @G387PXX 01700000
***** END OF SPECIFICATIONS ******************************************* 01800000
         MACRO                                                          01850000
&LABL    AXEXT &ASID=,     OPTIONAL ASID REG (DEFAULT = PASID) (INPUT) X01900000
               &RELATED=   OPTIONAL VALUE FOR DOCUMENTATION             01950000
.********************************************************************** 02050000
.*       DECLARE ARITHMETIC VARIABLES                                 * 02100000
.********************************************************************** 02150000
         LCLA  &A          GENERAL USAGE LOCAL ARITH. VAR.              02200000
.********************************************************************** 02250000
.*       DECLARE BIT VARIABLES                                        * 02300000
.********************************************************************** 02350000
         LCLB  &ASID0      SPECIAL REGISTER 0 NOTATION WAS SPECIFIED    02400000
.*                         FOR THE 'ASID' PARAMETER.                    02450000
.********************************************************************** 02500000
.*       DECLARE CHARACTER VARIABLES                                  * 02550000
.********************************************************************** 02600000
         LCLC  &ASIDV      HOLDS VALUE OF ASID FOR USE IN INSTRUCTIONS. 02650000
         LCLC  &LT1        LOAD TYPE 1 - THIS VARIABLE WILL BE:         02700000
.*                              'R' IF ASID IS SUPPLIED IN A REG        02750000
.*                           OR 'H' IF ASID IS AN RX FORM HALFWD ADDR   02800000
         LCLC  &OPERAND    HOLDS OPERAND STRINGS FOR MNOTES             02850000
         LCLC  &OPVAL      HOLDS OPERAND VALUES FOR MNOTES              02900000
.********************************************************************** 02950000
.*       PUT OUT BAL MACDATE COMMENT LINE REGARDLESS OF ERRORS.       * 03000000
.********************************************************************** 03050000
*              MACDATE = 80.122                                         03100000
.********************************************************************** 03200000
.*       INITIALIZE BIT VARIABLES                                     * 03250000
.********************************************************************** 03300000
&ASID0   SETB  0           INDICATE NOT SPECIAL REG 0 INPUT PARM        03350000
.*                                                                      03400000
.********************************************************************** 03450000
.*       CHECK FOR EXTRANEOUS POSITIONAL PARMS                        * 03500000
.********************************************************************** 03550000
         AIF   ( '&SYSLIST(1)' NE '').ERR027                   @YA24359 03600000
.********************************************************************** 03650000
.*       VALIDATE ASID PARAMETER IF PRESENT                           * 03700000
.********************************************************************** 03750000
&OPERAND SETC  'ASID'                   SET FOR POSSIBLE ERROR MSGS     03800000
&OPVAL   SETC  '&ASID'                  SET FOR POSSIBLE ERROR MSGS     03850000
         AIF   (T'&ASID EQ 'O').OK99    ASID NOT SPEC'D - USE DEFAULT   03900000
         AIF   ('&ASID' EQ '').ERR002   INVALID ASID OPERAND            03950000
.*   DETERMINE WHETHER ASID ADDRESS IS RX OR REG TYPE                   04000000
         AIF   ('&ASID'(1,1) EQ '(').OK11     BRANCH IF REG TYPE        04050000
&ASIDV   SETC  '&ASID'                  SET VALUE FOR USE IN INST.      04100000
&LT1     SETC  'H'                      SET TO 'H' FOR RX TYPE ADDR     04150000
         AGO   .OK99                    GO GENERATE INTERFACE CODE      04200000
.OK11    ANOP                                                           04250000
&LT1     SETC  'R'                      SET TO 'R' FOR REG              04300000
&ASIDV   SETC  '&ASID(1)'               EXTRACT REGISTER NAME           04350000
         AIF   (N'&ASID NE 1).ERR002    BR IF INVALID REG FORM          04400000
         AIF   ('&ASIDV' NE '0').OK99   BR IF NOT SPECIAL REG 0         04450000
&ASID0   SETB  1                        INDICATE SPECIAL REG 0 USED     04500000
.********************************************************************** 04550000
.*       GENERATE INTERFACE CODE                                      * 04600000
.********************************************************************** 04650000
.OK99    ANOP                                                           04700000
&LABL    DC    0H'0'                .AXEXT XM SERVICE PC                04750000
         STM   14,12,12(13)         .SAVE CALLER'S REGS                 04770000
         AIF   (T'&ASID EQ 'O').OK99C   ASID NOT SPEC'D - USE DEFAULT   04800000
         AIF   ('&LT1' EQ 'R').OK99B    BR IF ASID WAS REG FORM         04850000
         SLR   0,0                  .CLEAR PARM REG 0                   04900000
         ICM   0,3,&ASIDV           .INSERT ASID VALUE IN PARM REG      04950000
         AGO   .OK99D                   BR TO COMMON INTERFACE CODE     05000000
.OK99B   AIF   (&ASID0 EQ 1).OK99D      SKIP REG0 LOAD IF SPECIAL REG   05050000
.*                                      NOTATION WAS SPECIFIED          05100000
         LR    0,&ASIDV             .SET REG0 TO ASID VALUE             05150000
         AGO   .OK99D                                                   05200000
.OK99C   ANOP                                                           05250000
         EPAR  0                    .SET REG0 TO PRIMARY ASID VALUE     05300000
.OK99D   ANOP                                                           05350000
         SLR   1,1                  .PARM REG 1 MUST BE ZERO            05400000
         ESAR  2                    .EXTRACT SASID                      05416600
         ST    2,16(,13)            .SAVE SASID IN REG 15 SLOT          05433200
         L     2,16(0,0)            .GET ADDR OF CVT                    05450000
         L     2,772(,2)            .GET ADDR OF SYSTEM FUNCTION TABLE  05490000
         L     2,32(,2)             .GET LX/EX FOR AXEXT                05530000
         PC    0(2)                 .PC TO AXEXT SERVICE                05570000
         L     2,16(,13)            .EXTRACT SAVED SASID                05596600
         SSAR  2                    .RESTORE SASID                      05623200
         LM    2,12,28(13)          .RESTORE REGS 2-12                  05650000
         L     14,12(,13)           .RESTORE REG 14                     05700000
         MEXIT                                                          05750000
.********************************************************************** 05800000
.*       PROCESS ERROR CONDITIONS                                     * 05850000
.********************************************************************** 05900000
.ERR002  ANOP SEV 12 MNOTE -- IHB002 - INVALID &OPERAND OPERAND &OPVAL  05950000
         IHBERMAC 1001,&OPERAND,&OPVAL                                  06000000
         MEXIT                                                          06050000
.ERR027  ANOP SEV 12 MNOTE -- IHB027 - EXCESSIVE POSITIONAL PARAMETERS  06100000
         IHBERMAC 238                                                   06150000
         MEND                                                           06200000
* */                                                                    06250000
*@EJECT;                                                                06300000
*%AXEXT:                                                                06350000
*        MACRO KEYS(ASID,RELATED);                                      06400000
*/********************************************************************/ 06450000
*/*                DEFINE EXTERNAL MACRO VARIABLES                   */ 06500000
*/********************************************************************/ 06550000
* DECLARE                                                               06600000
*   EHAREGS   CHARACTER EXT, /* CONTAINS DECLARED REGISTER NUMBERS.  */ 06650000
*   EHAMAPS   CHARACTER EXT; /* CONTAINS REQUESTS FOR MAPPINGS.      */ 06700000
*/********************************************************************/ 06750000
*/*                DEFINE INTERNAL MACRO VARIABLES                   */ 06800000
*/********************************************************************/ 06850000
* DECLARE CC       FIXED;    /* STARTING COLUMN FOR PL/S COMMENTS    */ 06900000
* DECLARE IVDOCMT  CHAR;     /* COMMENT FOR DO AND END LINES.        */ 07150000
* DECLARE IVINDNT2 FIXED;    /* STARTING COLUMN FOR ALL ANSWER TEXT  */ 07200000
*                            /*   EXCEPT DO AND END STATEMENTS.      */ 07250000
* DECLARE IVLP1    FIXED;    /* LEFT  PAREN COL FOR ASID REG         */ 07300000
* DECLARE IVRC     FIXED;    /* RETURN CODE TO DETERMINE IF TEXT WILL*/ 07350000
*                            /* BE GENERATED.                        */ 07400000
* DECLARE IVRP1    FIXED;    /* RIGHT PAREN COL FOR ASID REG         */ 07450000
*/********************************************************************/ 07500000
*/*                INITIALIZE INTERNAL MACRO VARIABLES                  07550000
*/********************************************************************/ 07600000
* CC         = MACRMAR-35;   /* COMMENTS COLUMN (DEFAULT= 72-35 = 37)*/ 07620000
* IVDOCMT    = ' AXEXT';                                                07650000
*                            /* START OF DO-END COMMENT--NO KEYS YET */ 07850000
* IVINDNT2   = MACCOL + 2;   /* SET INDENTATION MARGIN.              */ 07900000
* IVLP1      = INDEX(ASID(1),'('); /* GET POSITION OF LEFT PAREN     */ 07950000
*                            /* NOTE: A NON-ZERO VALUE FOR IVLP1     */ 08000000
*                            /* INDICATES A POINTER FORM EXPRESSION. */ 08050000
* IVRC       = 0;            /* SET CODE TO GENERATE TEXT            */ 08100000
* IF IVLP1=1 THEN            /* IF POINTER NOTATION          @ZMB0031*/ 08150000
*   DO;                      /* POINTER NOTATION.            @ZMB0031*/ 08154100
*     IVRP1=LENGTH(ASID(1)); /* GET LAST CHAR OF SUBLIST     @ZMB0031*/ 08158200
*     IF ASID(1,IVRP1:IVRP1)^=')' THEN /* IF NOT A RIGHT                08162300
*                                         PARENTHESIS        @ZMB0031*/ 08166400
*       IVRP1=IVLP1;         /* FORCE 'NOT-SPECIFIED' ERROR  @ZMB0031*/ 08170500
*   END;                     /* POINTER NOTATION.            @ZMB0031*/ 08174600
* ELSE                       /* NOT POINTER NOTATION.        @ZMB0031*/ 08178700
*   DO;                      /* NOT POINTER NOTATION.        @ZMB0031*/ 08182800
*     IVLP1=0;               /* NOT POINTER NOTATION.        @ZMB0031*/ 08186900
*     IVRP1=0;               /* NOT POINTER NOTATION.        @ZMB0031*/ 08191000
*   END;                     /* NOT POINTER NOTATION.        @ZMB0031*/ 08195100
*/********************************************************************/ 08200000
*/*                CHECK FOR MACLIST                                 */ 08250000
*/********************************************************************/ 08300000
* IF MACLIST ^= ''           /* MACLIST SUPPLIED?                    */ 08450000
*   THEN DO;                 /* YES -                                */ 08500000
*     IVRC = 12;             /*       PREVENT TEXT GENERATION        */ 08550000
*     ANS MSG('AHA0053 THE MACLIST '||QUOTE(MACLIST)||                  08600000
*             ' IS NOT ALLOWED. NO TEXT IS GENERATED.');                08650000
*                            /*       INDICATE MACLIST IN DO-COMMENT.*/ 08700000
*     IVDOCMT = IVDOCMT||' '||MACLIST;                                  08750000
*   END;                     /* END - MACLIST SPECIFIED.             */ 08800000
*/********************************************************************/ 08850000
*/*                PROCESS ASID KEYWORD                              */ 08900000
*/********************************************************************/ 08950000
* IF ASID ^= ''              /* ASID SPECIFIED?                      */ 09050000
*   THEN DO;                 /* YES - ADD KEYWD TO COMMENT           */ 09100000
*     IVDOCMT = IVDOCMT||' ASID'||ASID;                                 09150000
*     IF ASID(1) ^= '' &     /* WAS ARGUMENT SPECIFIED?      @ZM50111*/ 09300000
*       ((IVLP1=0 & IVRP1=0)|/* AND NOT POINTER FORM         @ZM50111*/ 09325000
*       (IVLP1+1 <= IVRP1-1))/* AND NOT = '()' ?             @ZM50111*/ 09337500
*       THEN DO;             /* YES - ASID(1) SPECIFIED              */ 09350000
*         IF NUMBER(ASID) > 1 /* TOO MANY ASID ARGS?                 */ 09400000
*           THEN DO;         /* YES - ISSUE AHA0033                  */ 09450000
*             ANS MSG('AHA0033 ASID - '||ASID||                         09500000
*                      ' - HAS TOO MANY ARGUMENTS. '||                  09550000
*                      'NO TEXT IS GENERATED.');                        09600000
*             IVRC = 12;     /* KILL TEXT GENERATION                 */ 09650000
*           END;             /* NUMBER(ASID) > 1                     */ 09700000
*       END;                 /* ASID(1) SPECIFIED                    */ 10250000
*       ELSE DO;             /* NO ARGUMENT-ISSUE AHA0013            */ 10300000
*         ANS MSG('AHA0073 ASID(1) MAY NOT BE NULL. '||                 10350000
*                 'NO TEXT IS GENERATED.');                             10400000
*         IVRC = 12;         /* KILL TEXT GENERATION                 */ 10450000
*       END;                 /* NO ASID ARGUMENT                     */ 10500000
*   END;                     /* ASID KEYWORD SPECIFIED               */ 10550000
*/********************************************************************/ 10600000
*/*                PROCESS 'RELATED' KEYWORD                         */ 10650000
*/********************************************************************/ 10700000
* IF RELATED ^= ''           /* IF RELATED WAS SPECIFIED             */ 10750000
*   THEN                     /* ADD KEYWORD TO DO COMMENT            */ 10800000
*     IVDOCMT=IVDOCMT||' RELATED'||RELATED;                             10850000
*/********************************************************************/ 11400000
*/*   INDICATE EPILOG IS TO PRODUCE STANDARD SAVEAREA MAPPING.       */ 11450000
*/********************************************************************/ 11500000
* IF INDEX(EHAMAPS,'SA@')=0   /* IF SA@ MAPPING NOT PREVIOUSLY       */ 11550000
*   THEN                      /* REQUESTED THEN INDICATE REQUEST     */ 11600000
*     EHAMAPS = EHAMAPS||'SA@,'; /* NOTE: COMMAS SEPERATE REQUESTS   */ 11650000
*/********************************************************************/ 11800000
*/*   INDICATE EPILOG IS TO PROVIDE ACCESS TO XM SERVICES.           */ 11850000
*/********************************************************************/ 11900000
* IF INDEX(EHAMAPS,'XM@')=0   /* IF XM SERVICES NOT PREVIOUSLY       */ 11950000
*   THEN                      /* REQUESTED THEN INDICATE REQUEST     */ 12000000
*     EHAMAPS = EHAMAPS||'XM@,'; /* NOTE: COMMAS SEPERATE REQUESTS   */ 12050000
*/********************************************************************/ 12100000
*/*                PUT OUT LABELS (IF ANY)                           */ 12140000
*/********************************************************************/ 12180000
* IF MACLABEL ^= ''          /* ANY LABELS SPECIFIED?                */ 12220000
*   THEN                     /* YES - PUT THEM OUT.                  */ 12260000
*     ANS(MACLABEL) COL(MACLMAR);                                       12300000
*/********************************************************************/ 12340000
*/*     PUT OUT DO STATEMENT                                         */ 12380000
*/********************************************************************/ 12420000
* IVDOCMT=IVDOCMT||' MACDATE(80.122) '; /* ADD MACDATE TO COMMENT    */ 12460000
*                            /*       GENERATE THE DO STATEMENT.     */ 12500000
*   ANS('DO; '||COMMENT(IVDOCMT)) COL(MACCOL);                          12540000
*/********************************************************************/ 12580000
*/*                DETERMINE IF TEXT SHOULD BE PRODUCED              */ 12620000
*/********************************************************************/ 12660000
* IF IVRC > 4                /* ANY SEVERE ERRORS?                   */ 12700000
*   THEN                     /* YES -                                */ 12740000
*     GOTO LHA09000;         /*       EXIT - NO TEXT PRODUCED.       */ 12780000
*/********************************************************************/ 12820000
*/*                DEFINE REGISTER NAMES                             */ 12860000
*/********************************************************************/ 12900000
* IF INDEX(EHAREGS,'00F')=0  /* REGISTER 0 PREVIOUSLY DEFINED?       */ 13100000
*   THEN                     /* NO  -                                */ 13150000
*     EHAREGS=EHAREGS||'00F';/*       DEFINE IT.                     */ 13200000
* IF INDEX(EHAREGS,'01P')=0  /* REGISTER 1 PREVIOUSLY DEFINED?       */ 13250000
*   THEN                     /* NO  -                                */ 13300000
*     EHAREGS=EHAREGS||'01P';/*       DEFINE IT.                     */ 13350000
* IF INDEX(EHAREGS,'02P')=0  /* REGISTER 2 PREVIOUSLY DEFINED?       */ 13400000
*   THEN                     /* NO  -                                */ 13450000
*     EHAREGS=EHAREGS||'02P';/*       DEFINE IT.                     */ 13500000
* IF INDEX(EHAREGS,'12P')=0  /* REGISTER 12 PREVIOUSLY DEFINED?      */ 13550000
*   THEN                     /* NO  -                                */ 13600000
*     EHAREGS=EHAREGS||'12P';/*       DEFINE IT.                     */ 13650000
* IF INDEX(EHAREGS,'13P')=0  /* REGISTER 13 PREVIOUSLY DEFINED?      */ 13700000
*   THEN                     /* NO  -                                */ 13750000
*     EHAREGS=EHAREGS||'13P';/*       DEFINE IT.                     */ 13800000
* IF INDEX(EHAREGS,'14P')=0  /* REGISTER 14 PREVIOUSLY DEFINED?      */ 13850000
*   THEN                     /* NO  -                                */ 13900000
*     EHAREGS=EHAREGS||'14P';/*       DEFINE IT.                     */ 13950000
* IF INDEX(EHAREGS,'15F')=0  /* FIXED REG 15 PREVIOUSLY DEFINED?     */ 14000000
*   THEN                     /* NO  -                                */ 14050000
*     EHAREGS=EHAREGS||'15F';/*       DEFINE IT.                     */ 14100000
*/********************************************************************/ 14150000
*/*                GENERATE LINKAGE TO AXEXT SERVICE                 */ 14200000
*/********************************************************************/ 14250000
* ANS('RESPECIFY')                                COL(IVINDNT2);        14400000
* ANS('(GPR00F,')                                 COL(IVINDNT2+1);      14450000
* ANS('GPR01P,')                                  COL(IVINDNT2+2);      14500000
* ANS('GPR02P,')                                  COL(IVINDNT2+2);      14550000
* ANS('GPR13P,')                                  COL(IVINDNT2+2);      14580000
* ANS('GPR14P,')                                  COL(IVINDNT2+2);      14610000
* ANS('GPR15F) RESTRICTED;')                      COL(IVINDNT2+2);      14640000
* ANS('STM(GPR14P,GPR12P,SA@G1412);')             COL(IVINDNT2);        14670000
* ANS(COMMENT(' SAVE CALLER''S REGS            ')) COL(CC);             14700000
* IF ASID(1) = ''            /* IF ASID NOT SPECIFIED                */ 14730000
*   THEN DO;                 /* DEFAULT TO PASID BY USING EPAR INST. */ 14760000
*     ANS('EPAR(GPR00F);')                        COL(IVINDNT2);        14790000
*     ANS(COMMENT(' ASID TO PARM REG 0 (PASID)')) COL(CC);              14820000
*     GOTO LHA08000;                                                    14900000
*   END;                                                                14950000
* IF IVLP1 ^= 1              /* IF NOT POINTER FORM ADDRESS  @ZMB0031*/ 15000000
*   THEN DO;                                                            15050000
*     ANS('GPR00F='||ASID(1)||';')                COL(IVINDNT2);        15100000
*     ANS(COMMENT(' ASID TO PARM REG 0        ')) COL(CC);              15150000
*   END;                                                                15200000
*   ELSE DO;                                                            15250000
*     ANS('GPR00F='||ASID(1,IVLP1+1:IVRP1-1)||';') COL(IVINDNT2);       15300000
*     ANS(COMMENT(' ASID TO PARM REG 0        '))  COL(CC);             15350000
*   END;                                                                15400000
*LHA08000:                                                              15450000
* ANS('GPR01P=0;')                                COL(IVINDNT2);        15500000
* ANS(COMMENT(' PARM REG 1 MUST BE ZERO       ')) COL(CC);              15550000
* ANS('ESAR(SA@GPR15);')                          COL(IVINDNT2);        15566600
* ANS(COMMENT('SAVE SASID                     ')) COL(CC);              15583200
* ANS('GPR02P=XM@(9);')                           COL(IVINDNT2);        15600000
* ANS(COMMENT(' GET LX/EX FOR AXEXT FROM SFT  ')) COL(CC);              15650000
* ANS('GEN (DS 0H);') COL(IVINDNT2);  /* MAKE PL/AS USE SAVEAREA @P1A*/ 15675000
* ANS('PC(GPR02P);')                              COL(IVINDNT2);        15700000
* ANS(COMMENT(' PC TO AXEXT SERVICE           ')) COL(CC);              15750000
* ANS('SSAR(SA@GPR15);')                          COL(IVINDNT2);        15766600
* ANS(COMMENT('RESTORE SASID                  ')) COL(CC);              15783200
* ANS('LM(GPR02P,GPR12P,SA@G0212);')              COL(IVINDNT2);        15800000
* ANS(COMMENT(' RESTORE REGS 2-12             ')) COL(CC);              15850000
* ANS('GPR14P=SA@GPR14;')                         COL(IVINDNT2);        15900000
* ANS(COMMENT(' RESTORE REG 14                ')) COL(CC);              15950000
* ANS('RESPECIFY')                                COL(IVINDNT2);        16000000
* ANS('(GPR00F,')                                 COL(IVINDNT2+1);      16050000
* ANS('GPR01P,')                                  COL(IVINDNT2+2);      16100000
* ANS('GPR02P,')                                  COL(IVINDNT2+2);      16150000
* ANS('GPR13P,')                                  COL(IVINDNT2+2);      16250000
* ANS('GPR14P,')                                  COL(IVINDNT2+2);      16300000
* ANS('GPR15F) UNRESTRICTED;')                    COL(IVINDNT2+2);      16350000
*/********************************************************************/ 16400000
*/*                CLOSE OUT DO GROUP AND RETURN                     */ 16450000
*/********************************************************************/ 16500000
*LHA09000:                   /* CLOSE OUT DO GROUP.                  */ 16550000
* ANS('END; ') COL(MACCOL);                                             16600000
* RETURN CODE(IVRC);                                                    16650000
*/********************************************************************/ 16850000
*/*                END OF AXEXT MACRO                                */ 16900000
*/********************************************************************/ 16950000
* % END AXEXT;                                                          17000013
