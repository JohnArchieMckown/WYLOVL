*/**** START OF SPECIFICATIONS **************************************** 00000100
*                                                                     * 00000200
*                                                                     * 00000300
*01* MACRO NAME:  IXLLOCK                               -02/26/99-<2> * 00000400
*                                                                     * 00000500
*                                                                     * 00000600
*01* DESCRIPTIVE NAME:  XES Lock Structure Services                   * 00000700
*                                                                     * 00000800
*01* PROPRIETARY STATEMENT:                                           * 00000900
*                                                                     * 00001000
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 00001100
*     THIS MACRO IS "RESTRICTED MATERIALS OF IBM"                     * 00001200
*     5645-001 (C) COPYRIGHT IBM CORP. 1994, 1996                     * 00001300
*                                                                     * 00001400
* STATUS= JBB6602                                                     * 00001500
*                                                                     * 00001600
*                                                                     * 00001700
*                                                                     * 00001800
*01* FUNCTION:                                                        * 00001900
*                                                                     * 00002000
*                                                                     * 00002100
*      IXLLOCK provides an interface to request lock structure        * 00002200
*      services against user-defined logical resources on a           * 00002300
*      sysplex-wide scope.                                            * 00002400
*                                                                     * 00002500
*      The following services are provided:                           * 00002600
*                                                                     * 00002700
*                                                                     * 00002800
*      OBTAIN   OBTAIN shared or exclusive ownership of a resource    * 00002900
*               that is not currently owned or pending ownership by   * 00003000
*               this connected user and optionally assign additional  * 00003100
*               user-defined ownership attributes.                    * 00003200
*                                                                     * 00003300
*      ALTER    ALTER the attributes of an owned resource or replace  * 00003400
*               a previous OBTAIN or ALTER request which is pending   * 00003500
*               on the CONTENTION exit resource request queue with a  * 00003600
*               more current request.                                 * 00003700
*                                                                     * 00003800
*      RELEASE  RELEASE ownership of a resource. Similar to the ALTER * 00003900
*               option, a connected user may request to RELEASE a     * 00004000
*               resource for which it has not yet received the        * 00004100
*               results of a previous request to OBTAIN or ALTER. If  * 00004200
*               an outstanding request has been left pending on the   * 00004300
*               CONTENTION exit resource request queue, it may be     * 00004400
*               replaced by the more current request to RELEASE.      * 00004500
*                                                                     * 00004600
*      PROCESSMULT Process multiple resource requests with a single   * 00004700
*               IXLLOCK invocation. The individual requests are       * 00004800
*               specified via Lock Request Blocks which are passed in * 00004900
*               an input buffer. Note, only a subset of the options   * 00005000
*               supported on the IXLLOCK interface are supported by   * 00005100
*               the PROCESSMULT option. Please consult the IXLYLRB    * 00005200
*               mapping macro for information on valid requests and   * 00005300
*               options.                                              * 00005400
*                                                                     * 00005500
*                                                                     * 00005600
*                                                                     * 00005700
*                                                                     * 00005800
*      o   RELATED USER EXITS                                         * 00005900
*                                                                     * 00006000
*          While the IXLLOCK service is the vehicle by which          * 00006100
*          connected users can request the use of logical resources,  * 00006200
*          XES may require the input of selected connected users in   * 00006300
*          order to complete request processing. This communication   * 00006400
*          is achieved via the execution of predefined user-exits,    * 00006500
*          the addresses of which are required inputs to the IXLCONN  * 00006600
*          service. The following provides an overview of the user    * 00006700
*          exits and the associated processing required to accomplish * 00006800
*          locking functions.                                         * 00006900
*                                                                     * 00007000
*                                                                     * 00007100
*          -   Contention Exit                                        * 00007200
*                                                                     * 00007300
*               A resource request queue is defined as a resource and * 00007400
*              the set of owners/requestors for that resource along   * 00007500
*              with their respective owned/requested states.  The     * 00007600
*              composite state of the request queue is defined in     * 00007700
*              relation to the entries on the request queue. The      * 00007800
*              composite state of the request queue can be said to be * 00007900
*              in one of the following states:                        * 00008000
*                                                                     * 00008100
*                                                                     * 00008200
*              1.  Free                                               * 00008300
*                                                                     * 00008400
*                   The request queue for a resource is said to be in * 00008500
*                  the "Free" state if there are currently no owners  * 00008600
*                  or requests to own the specified resource.         * 00008700
*                                                                     * 00008800
*              2.  Shared                                             * 00008900
*                                                                     * 00009000
*                   The composite state is said to be "Shared" when   * 00009100
*                  all ownership and requests to own the resource are * 00009200
*                  in the shared state.                               * 00009300
*                                                                     * 00009400
*              3.  Exclusive                                          * 00009500
*                                                                     * 00009600
*                  If the composite state is not "Free" or "Shared",  * 00009700
*                  the request queue is considered to be in the       * 00009800
*                  "Exclusive" state.                                 * 00009900
*                                                                     * 00010000
*                                                                     * 00010100
*                                                                     * 00010200
*              When a connected user requests to own a resource in a  * 00010300
*              state that is incompatible with the current composite  * 00010400
*              state of the resource request queue, the resource is   * 00010500
*              said to be "in contention".  Upon recognizing a        * 00010600
*              resource to be "in contention", XES chooses a          * 00010700
*              connected user to manage the resource and percolates   * 00010800
*              management responsibilities to that connector.         * 00010900
*              Percolation is defined as the process of presenting a  * 00011000
*              resource request and the associated request queue to a * 00011100
*              connected user via executing the user's CONTENTION     * 00011200
*              exit.  Please see the Contention exit parameter list,  * 00011300
*              mapped by IXLYCEPL, for further info regarding input   * 00011400
*              to and usage of the CONTENTION exit.  Once a connected * 00011500
*              user has been chosen to manage a resource, that user   * 00011600
*              will remain the manager of that resource until the "in * 00011700
*              contention" condition is relieved. If a connected user * 00011800
*              should disconnect or terminate abnormally while it is  * 00011900
*              the manager of an "in contention" resource, management * 00012000
*              responsibilities will be re-assigned to another        * 00012100
*              connected user by XES.                                 * 00012200
*                                                                     * 00012300
*              The following matrix illustrates the rules used by XES * 00012400
*              for determining compatibility when considering the     * 00012500
*              effect of a new request in regard to the current       * 00012600
*              composite state of the resource request queue. Please  * 00012700
*              note, a "C" indicates a compatible state and an "X"    * 00012800
*              indicates an incompatible state:                       * 00012900
*                                                                     * 00013000
*                     ---------------------------------------         * 00013100
*                     |Composite -->  | FREE | SHARE | EXCL |         * 00013200
*                     | State         |      |       |      |         * 00013300
*                     |---------------|------|-------|------|         * 00013400
*                     |Requested      |      |       |      |         * 00013500
*                     | State#        |      |       |      |         * 00013600
*                     |      |        |      |       |      |         * 00013700
*                     |      v        |      |       |      |         * 00013800
*                     |---------------|------|-------|------|         * 00013900
*                     |        SHARE  |  C   |   C   |  X   |         * 00014000
*                     |---------------|------|-------|------|         * 00014100
*                     |         EXCL  |  C   |   X   |  X   |         * 00014200
*                     ---------------------------------------         * 00014300
*                                                                     * 00014400
*              Once assigned resource management responsibilities, a  * 00014500
*              connected user's CONTENTION exit could potentially     * 00014600
*              elect to perform one or more of the following          * 00014700
*              actions...                                             * 00014800
*                                                                     * 00014900
*                                                                     * 00015000
*              --  Grant or Deny pending request(s) to obtain or      * 00015100
*                  alter the resource.                                * 00015200
*                                                                     * 00015300
*                  Although a resource request has been determined to * 00015400
*                  be incompatible according to the rules enforced by * 00015500
*                  XES, the connected user may determine after        * 00015600
*                  examining the user data associated with the        * 00015700
*                  resources on the request queue that the request is * 00015800
*                  indeed compatible within the rules of the          * 00015900
*                  connected users protocol.  Through the             * 00016000
*                  exploitation of user data capabilities, connected  * 00016100
*                  users can implement locking protocols supporting   * 00016200
*                  user-defined states exceeding the XES supported    * 00016300
*                  states of shared and exclusive.                    * 00016400
*                                                                     * 00016500
*                  Please note, along with the ability to grant or    * 00016600
*                  deny resource requests, the CONTENTION exit may    * 00016700
*                  also modify the attributes of the request (i.e.    * 00016800
*                  grant a request with user data different than what * 00016900
*                  was requested on the IXLLOCK invocation).          * 00017000
*                                                                     * 00017100
*              --  Modify the ownership characteristics of one or     * 00017200
*                  more of the current resource owners                * 00017300
*                                                                     * 00017400
*                  The CONTENTION exit may choose to update the state * 00017500
*                  and/or user data in which a connected user         * 00017600
*                  currently owns the resource. Any connected user    * 00017700
*                  whose ownership of a resource has been regranted   * 00017800
*                  in this fashion will be informed of the update via * 00017900
*                  execution of its COMPLETE exit.                    * 00018000
*                                                                     * 00018100
*              --  Notify a current resource owner that contention    * 00018200
*                  exists                                             * 00018300
*                                                                     * 00018400
*                  The CONTENTION exit may choose to notify one or    * 00018500
*                  more connected users that contention exists for a  * 00018600
*                  resource that it currently owns by executing the   * 00018700
*                  NOTIFY exit(s) of those users.  Services are       * 00018800
*                  provided which allow connected users to modify     * 00018900
*                  their ownership interest from within the  NOTIFY   * 00019000
*                  exit. After the specified NOTIFY exits have been   * 00019100
*                  executed, the resultant resource request queue is  * 00019200
*                  presented to the CONTENTION exit.  Through the use * 00019300
*                  of the NOTIFY exit, connected users can implement  * 00019400
*                  protocols which allow for negotiation of lock      * 00019500
*                  ownership among owners and requestors.             * 00019600
*                                                                     * 00019700
*              --  Take no action on the pending request              * 00019800
*                                                                     * 00019900
*                  At the time the contention exit is presented with  * 00020000
*                  a new request, the connected user may decide not   * 00020100
*                  to grant or deny the request immediately. In this  * 00020200
*                  case, the contention exit can leave the request    * 00020300
*                  pending on the resource request queue. The user    * 00020400
*                  may decide to take action on the request during a  * 00020500
*                  subsequent invocation of the exit.  Please see the * 00020600
*                  Contention exit parameter list, mapped by          * 00020700
*                  IXLYCEPL, for further info regarding when the      * 00020800
*                  CONTENTION exit is invoked.                        * 00020900
*                                                                     * 00021000
*                                                                     * 00021100
*                                                                     * 00021200
*          -   Notify Exit                                            * 00021300
*                                                                     * 00021400
*              A connected user's NOTIFY exit may be executed to      * 00021500
*              inform the user that contention exists for a resource  * 00021600
*              that it currently owns. Execution of the NOTIFY exit   * 00021700
*              may only be requested by the CONTENTION exit of the    * 00021800
*              connected user who has been chosen to manage           * 00021900
*              contention of the specified resource. The NOTIFY exit  * 00022000
*              receives as input a copy of the resource request queue * 00022100
*              containing information regarding all the current       * 00022200
*              owners and requestors of the resource.  Please see the * 00022300
*              Notify exit parameter list, mapped by IXLYNEPL, for    * 00022400
*              further info regarding input to the NOTIFY exit.       * 00022500
*              Although not required to do so, the connected user may * 00022600
*              choose to invoke the IXLSYNCH service to synchronously * 00022700
*              update its interest in the resource and possibly       * 00022800
*              eliminate the contention.                              * 00022900
*                                                                     * 00023000
*          -   Complete Exit                                          * 00023100
*                                                                     * 00023200
*              The IXLLOCK service allows a connected user to specify * 00023300
*              via the MODE keyword how a request is to be processed  * 00023400
*              if it is not able to be immediately completed by XES.  * 00023500
*              When a connected user specifies MODE(SYNCEXIT) and the * 00023600
*              request is unable to be completed immediately, XES     * 00023700
*              processes the request asynchronously and reports the   * 00023800
*              results to the connected user's COMPLETE exit.  The    * 00023900
*              COMPLETE exit is also executed to inform a connected   * 00024000
*              user that its ownership interest has been regranted by * 00024100
*              the CONTENTION exit of the connected user who has been * 00024200
*              assigned contention management responsibilities by     * 00024300
*              XES.  Please see the Complete exit parameter list,     * 00024400
*              mapped by IXLYCMPL, for further info regarding input   * 00024500
*              to the COMPLETE exit.                                  * 00024600
*                                                                     * 00024700
*          -   Event Exit                                             * 00024800
*                                                                     * 00024900
*                                                                     * 00025000
*              The EVENT exit is the mechanism by which error and     * 00025100
*              status conditions are reported to connected users.     * 00025200
*              Unlike the previously described user exits,            * 00025300
*              locking-specific functions are not performed by the    * 00025400
*              EVENT exit, however, the use of this exit should be    * 00025500
*              considered when designing a locking protocol. To be    * 00025600
*              more specific, XES requires that active connectors     * 00025700
*              acknowledge the termination of a related connected     * 00025800
*              user before performing cleanup functions for that      * 00025900
*              user. This implies that XES will not be able to        * 00026000
*              re-assign resource management responsibilities for a   * 00026100
*              connector who terminates while assigned these          * 00026200
*              responsibilities until all the appropriate responses   * 00026300
*              have been received.  This further implies that any     * 00026400
*              outstanding IXLLOCK requests for resources being       * 00026500
*              managed by the terminating connected user may not be   * 00026600
*              able to be completed until management of those         * 00026700
*              resources is able to be re-assigned to an active       * 00026800
*              connected user.  For the above stated reason, a        * 00026900
*              connected user should be aware that delaying           * 00027000
*              confirmation of XES events while awaiting completion   * 00027100
*              of outstanding requests may result in deadlock         * 00027200
*              scenarios.  Please note, XES does not support the      * 00027300
*              detection or resolution of deadlock scenarios and the  * 00027400
*              prevention of such occurrences is the responsibility   * 00027500
*              of the connected users of XES services.                * 00027600
*                                                                     * 00027700
*                                                                     * 00027800
*                                                                     * 00027900
*      o   Miscellaneous information                                  * 00028000
*                                                                     * 00028100
*          XES always attempts to process IXLLOCK requests            * 00028200
*          immediately, regardless of the value supplied by the user  * 00028300
*          on the MODE keyword, however, this is not always possible. * 00028400
*          The reasons why request processing may experience delays   * 00028500
*          range from connected-user-controlled conditions (such as   * 00028600
*          resource contention) to conditions which are not           * 00028700
*          controllable by the connected user (such as internal XES   * 00028800
*          serialization could not immediately be obtained).          * 00028900
*                                                                     * 00029000
*          The phrase "when request completion is reported            * 00029100
*          synchronously" is used throughout the descriptions of the  * 00029200
*          IXLLOCK service keywords. This term refers to the          * 00029300
*          following:                                                 * 00029400
*                                                                     * 00029500
*                                                                     * 00029600
*          -   IXLLOCK requests specifying MODE(SYNCSUSPEND).         * 00029700
*                                                                     * 00029800
*              If XES experiences delays while processing these type  * 00029900
*              of requests, the caller will be suspended until the    * 00030000
*              request is able to be completed. Callers using the     * 00030100
*              MODE(SYNCSUSPEND) will always receive control at the   * 00030200
*              next sequential instruction with the request complete  * 00030300
*              and the final disposition determined.                  * 00030400
*                                                                     * 00030500
*          -   IXLLOCK requests specifying MODE(SYNCEXIT) or          * 00030600
*              MODE(NORESPONSE) which were not required to be         * 00030700
*              processed asynchronously.                              * 00030800
*                                                                     * 00030900
*              If XES experiences a delay while processing requests   * 00031000
*              of these types, return and reason codes are provided   * 00031100
*              to the invoker indicating that the request will be     * 00031200
*              processed asynchronously and request completion will   * 00031300
*              be reported via the specified mechanism (i.e. COMPLETE * 00031400
*              exit) as appropriate.  If no such delays are           * 00031500
*              experienced, control is returned to the caller at the  * 00031600
*              next sequential instruction following the IXLLOCK      * 00031700
*              invocation with the request complete and the final     * 00031800
*              disposition determined.                                * 00031900
*                                                                     * 00032000
*          -   IXLLOCK requests specifying MODE(SYNCFAIL) which were  * 00032100
*              not required to be processed asynchronously.           * 00032200
*                                                                     * 00032300
*              If XES experiences a delay while processing a request  * 00032400
*              of this type, the request is cancelled and return and  * 00032500
*              reason codes are provided to the invoker indicating    * 00032600
*              that the request was unable to be completed without    * 00032700
*              delays.                                                * 00032800
*                                                                     * 00032900
*              If no such delays are experienced, control is returned * 00033000
*              to the caller at the next sequential instruction       * 00033100
*              following the IXLLOCK invocation with the request      * 00033200
*              complete and the final disposition determined.         * 00033300
*                                                                     * 00033400
*                                                                     * 00033500
*                                                                     * 00033600
*                                                                     * 00033700
*                                                                     * 00033800
*01* EXTERNAL CLASSIFICATION:  GUPI                                   * 00033900
*                                                                     * 00034000
*01* END OF EXTERNAL CLASSIFICATION:                                  * 00034100
*                                                                     * 00034200
*01* ENVIRONMENT:                                                     * 00034300
*                                                                     * 00034400
*                                                                     * 00034500
*      Dispatchable unit mode: Task or SRB mode.                      * 00034600
*                                                                     * 00034700
*      Minimum authorization: Supervisor State and PSW key 0.         * 00034800
*                                                                     * 00034900
*      AMODE:            31-bit.                                      * 00035000
*                                                                     * 00035100
*      ASC mode:         Primary or Access Register.                  * 00035200
*                                                                     * 00035300
*                        Addressability notes:                        * 00035400
*                                                                     * 00035500
*                                                                     * 00035600
*                        1.  Primary equal to the requestor's primary * 00035700
*                            at the time of the connect to the lock   * 00035800
*                            structure.                               * 00035900
*                                                                     * 00036000
*                        2.  Any secondary or home address spaces are * 00036100
*                            allowed.                                 * 00036200
*                                                                     * 00036300
*                                                                     * 00036400
*                                                                     * 00036500
*      Serialization:                                                 * 00036600
*                                                                     * 00036700
*                                                                     * 00036800
*                        o   Enabled and unlocked.                    * 00036900
*                                                                     * 00037000
*                                                                     * 00037100
*                                                                     * 00037200
*      Restrictions:                                                  * 00037300
*                                                                     * 00037400
*                                                                     * 00037500
*                        1.  The caller's parameter list must be      * 00037600
*                            addressable in the caller's primary      * 00037700
*                            address space.                           * 00037800
*                                                                     * 00037900
*                        2.  The caller must provide a 144-byte       * 00038000
*                            savearea that starts on a word boundary  * 00038100
*                            and is addressable in the caller's       * 00038200
*                            primary address space.                   * 00038300
*                                                                     * 00038400
*                        3.  If the caller is running in Access       * 00038500
*                            Register ASC mode and specifies a macro  * 00038600
*                            parameter using explicit register        * 00038700
*                            notation the access register             * 00038800
*                            corresponding to the general register    * 00038900
*                            must appropriately qualify the general   * 00039000
*                            register.                                * 00039100
*                                                                     * 00039200
*                        4.  The REQBUFFER storage must exist in      * 00039300
*                            fixed or disabled reference storage that * 00039400
*                            is addressable from the invokers primary * 00039500
*                            address space.                           * 00039600
*                                                                     * 00039700
*                        5.  When the Rnamelen keyword is used, the   * 00039800
*                            input RNAME must exist in storage within * 00039900
*                            the caller's primary address space.      * 00040000
*                                                                     * 00040100
*                                                                     * 00040200
*                                                                     * 00040300
*                                                                     * 00040400
*                                                                     * 00040500
*01* PROGRAMMING REQUIREMENTS:                                        * 00040600
*                                                                     * 00040700
*                                                                     * 00040800
*    1.  Access Register mode invokers must specify SYSSTATE          * 00040900
*        ASCENV=AR prior to invoking this macro.                      * 00041000
*                                                                     * 00041100
*                                                                     * 00041200
*                                                                     * 00041300
*01* INPUT REGISTER INFORMATION:                                      * 00041400
*                                                                     * 00041500
*    Upon invocation, general purpose register (GPR) 13 must contain  * 00041600
*    the address of a 144-byte savearea to be used by XES. With the   * 00041700
*    exception of register (GPR) 13, the caller does not have to      * 00041800
*    place any information into any register (GPR) or access register * 00041900
*    (AR) unless using it in register notation for a particular       * 00042000
*    parameter, or using it as a base register.                       * 00042100
*                                                                     * 00042200
*    If the caller is running in Access Register ASC mode then it is  * 00042300
*    the responsibility of that caller to insure that access register * 00042400
*    (AR) 13 correctly qualifies the savearea contained in register   * 00042500
*    (GPR) 13.  This implies that Access Register (AR) mode callers   * 00042600
*    must insure that access register (AR) 13 contains zero           * 00042700
*    (indicating that the savearea is addressable in the primary      * 00042800
*    address space) prior to invocation.                              * 00042900
*                                                                     * 00043000
*01* OUTPUT REGISTER INFORMATION:                                     * 00043100
*                                                                     * 00043200
*    When control returns to the caller, the GPRs contain:            * 00043300
*                                                                     * 00043400
*                                                                     * 00043500
*    REGISTER  CONTENTS                                               * 00043600
*                                                                     * 00043700
*    0         Reason code                                            * 00043800
*                                                                     * 00043900
*    1         Used as work register by the system                    * 00044000
*                                                                     * 00044100
*    2-13      Unchanged                                              * 00044200
*                                                                     * 00044300
*    14        Used as work register by the system.                   * 00044400
*                                                                     * 00044500
*    15        Return code                                            * 00044600
*                                                                     * 00044700
*                                                                     * 00044800
*                                                                     * 00044900
*    When control returns to the caller, the ARs contain:             * 00045000
*                                                                     * 00045100
*                                                                     * 00045200
*    REGISTER  CONTENTS                                               * 00045300
*                                                                     * 00045400
*    0-1       Used as work registers by the system                   * 00045500
*                                                                     * 00045600
*    2-12      Unchanged                                              * 00045700
*                                                                     * 00045800
*    13        Used as work register by the system when invoked by    * 00045900
*              Primary mode caller. Unchanged when invoked by Access  * 00046000
*              Register (AR) mode caller.                             * 00046100
*                                                                     * 00046200
*    14-15     Used as work registers by the system.                  * 00046300
*                                                                     * 00046400
*                                                                     * 00046500
*                                                                     * 00046600
*01* PERFORMANCE IMPLICATIONS:                                        * 00046700
*                                                                     * 00046800
*    None                                                             * 00046900
*                                                                     * 00047000
*01* SYNTAX:                                                          * 00047100
*                                                                     * 00047200
*[xlabel]  IXLLOCK     CONTOKEN=xcontoken                             * 00047300
*                    ,REQUEST=OBTAIN                                 * 00047400
*                   |     ,RNAME=xrname                               * 00047500
*                   |    [,RNAMELEN=xrnamelen|NO_RNAMELEN]          * 00047600
*                   |     ,HASHVAL=xhashval                           * 00047700
*                   |    [,LOCKDATA=xlockdata|ALL_ZEROES]           * 00047800
*                   |   [,STATE=SHR]                                 * 00047900
*                   |   [,STATE=EXCL]                                * 00048000
*                   |   [,STATE=VALUE                                * 00048100
*                   |         ,STATEVAL=xstateval]                    * 00048200
*                   |    [,UDATAVAL=xudataval|ALL_ZEROES]           * 00048300
*                   |   [,RDATA=NORDATA]                             * 00048400
*                   |   [,RDATA=WRITE                                * 00048500
*                   |   |     ,RDATAVAL=xrdataval                     * 00048600
*                   |   |    [,ENTRYID=xentryid]                      * 00048700
*                   |   |    [,ENTRYCOUNT=xentrycount]]               * 00048800
*                   |   [,RDATA=REACQUIRE                            * 00048900
*                   |         ,ENTRYID=xentryid                       * 00049000
*                   |        [,CONID=xconid|NO_CONID]               * 00049100
*                   |       [,UPDATERDATA=NO]                        * 00049200
*                   |       [,UPDATERDATA=YES                        * 00049300
*                   |             ,RDATAVAL=xrdataval]]               * 00049400
*                   |   [,MODE=SYNCSUSPEND]                          * 00049500
*                   |   [,MODE=SYNCEXIT]                             * 00049600
*                   |   [,MODE=SYNCFAIL]                             * 00049700
*                   |   [,MODE=VALUE                                 * 00049800
*                   |         ,MODEVAL=xmodeval]                      * 00049900
*                    ,REQUEST=ALTER                                  * 00050000
*                   |     ,RNAME=xrname                               * 00050100
*                   |    [,RNAMELEN=xrnamelen|NO_RNAMELEN]          * 00050200
*                   |     ,HASHVAL=xhashval                           * 00050300
*                   |   [,STATE=SHR]                                 * 00050400
*                   |   [,STATE=EXCL]                                * 00050500
*                   |   [,STATE=VALUE                                * 00050600
*                   |         ,STATEVAL=xstateval]                    * 00050700
*                   |    [,UDATAVAL=xudataval|ALL_ZEROES]           * 00050800
*                   |   [,RDATA=UNCHANGED]                           * 00050900
*                   |   [,RDATA=DELETE]                              * 00051000
*                   |   [,RDATA=WRITE                                * 00051100
*                   |         ,RDATAVAL=xrdataval                     * 00051200
*                   |         ,ENTRYID=xentryid                       * 00051300
*                   |        [,ENTRYCOUNT=xentrycount]]               * 00051400
*                   |   [,MODE=SYNCSUSPEND]                          * 00051500
*                   |   [,MODE=SYNCEXIT]                             * 00051600
*                   |   [,MODE=SYNCFAIL]                             * 00051700
*                   |   [,MODE=VALUE                                 * 00051800
*                   |         ,MODEVAL=xmodeval]                      * 00051900
*                    ,REQUEST=RELEASE                                * 00052000
*                   |     ,RNAME=xrname                               * 00052100
*                   |    [,RNAMELEN=xrnamelen|NO_RNAMELEN]          * 00052200
*                   |     ,HASHVAL=xhashval                           * 00052300
*                   |    [,UDATAVAL=xudataval|ALL_ZEROES]           * 00052400
*                   |   [,RDATA=DELETE]                              * 00052500
*                   |   [,RDATA=KEEP                                 * 00052600
*                   |       [,UPDATERDATA=NO]                        * 00052700
*                   |       [,UPDATERDATA=YES                        * 00052800
*                   |             ,RDATAVAL=xrdataval]]               * 00052900
*                   |   [,MODE=SYNCSUSPEND]                          * 00053000
*                   |   [,MODE=SYNCEXIT]                             * 00053100
*                   |   [,MODE=NORESPONSE]                           * 00053200
*                   |   [,MODE=VALUE                                 * 00053300
*                   |         ,MODEVAL=xmodeval]                      * 00053400
*                    ,REQUEST=PROCESSMULT                            * 00053500
*                         ,REQBUFFER=xreqbuffer                       * 00053600
*                         ,REQNUM=xreqnum                             * 00053700
*                        [,REQPROC=xreqproc]                          * 00053800
*                    [,RETCODE=xretcode]                              * 00053900
*                    [,RSNCODE=xrsncode]                              * 00054000
*                    [,PLISTVER=xplistver|IMPLIED_VERSION]          * 00054100
*                   [,MF=S]                                          * 00054200
*                   [,MF=(L,xmfctrl,xmfattr|0D)]                   * 00054300
*                   [,MF=(E,xmfctrl,COMPLETE)]                     * 00054400
*                                                                     * 00054500
*                                                                     * 00054600
*      Where:                                                         * 00054700
*                                                                     * 00054800
*                                                                     * 00054900
*      [xlabel]                                                       * 00055000
*          is an optional symbol, starting in column 1, that is the   * 00055100
*          name on the IXLLOCK macro invocation.  The name must       * 00055200
*          conform to the rules for an ordinary assembler language    * 00055300
*          symbol.                                                    * 00055400
*          DEFAULT: No name.                                          * 00055500
*                                                                     * 00055600
*                                                                     * 00055700
*                                                                     * 00055800
*                                                                     * 00055900
*      CONTOKEN=xcontoken                                             * 00056000
*          is the name (RS-type), or address in register (2)-(12), of * 00056100
*          a required 16 character input field that contains the      * 00056200
*          CONNECT token returned in the answer area by the IXLCONN   * 00056300
*          service. The CONTOKEN uniquely identifies the user's       * 00056400
*          connection to a lock structure.                            * 00056500
*                                                                     * 00056600
*                                                                     * 00056700
*                                                                     * 00056800
*                                                                     * 00056900
*      REQUEST=OBTAIN|ALTER|RELEASE|PROCESSMULT                     * 00057000
*          is a required keyword input that indicates the type of     * 00057100
*          operation requested.                                       * 00057200
*                                                                     * 00057300
*                                                                     * 00057400
*          REQUEST=OBTAIN                                             * 00057500
*              specifies that the connected user is requesting to     * 00057600
*              obtain ownership of the resource identified by the     * 00057700
*              input Resource Name, Length, and Hash Value.           * 00057800
*                                                                     * 00057900
*                                                                     * 00058000
*              RNAME=xrname                                           * 00058100
*                  is the name (RS-type), or address in register      * 00058200
*                  (2)-(12), of a required character input containing * 00058300
*                  the resource name for which this request is being  * 00058400
*                  processed. The resource name and length along with * 00058500
*                  the hash value serve to fully qualify an IXLLOCK   * 00058600
*                  resource.                                          * 00058700
*                                                                     * 00058800
*                                                                     * 00058900
*                                                                     * 00059000
*                                                                     * 00059100
*              [RNAMELEN=xrnamelen|NO_RNAMELEN]                     * 00059200
*                  is the name (RS-type), or address in register      * 00059300
*                  (2)-(12), of an optional fullword input that       * 00059400
*                  specifies the length in bytes of the resource name * 00059500
*                  for which this request is being processed. The     * 00059600
*                  resource name and length along with the hash value * 00059700
*                  serve to fully qualify an IXLLOCK resource.        * 00059800
*                  Please note, the Rnamelen keyword is only valid    * 00059900
*                  for requests that are issued against a lock        * 00060000
*                  structure which has variable length resource names * 00060100
*                  in effect (see the RNAMELEN keyword on the IXLCONN * 00060200
*                  macro for details on allocating a lock structure   * 00060300
*                  with variable length resource names). Requests     * 00060400
*                  which specify this keyword against lock structures * 00060500
*                  which do not have variable length resource names   * 00060600
*                  in effect will be rejected with return and reason  * 00060700
*                  codes indicating the error.  When specified, the   * 00060800
*                  value supplied for RNAMELEN must be between 1 and  * 00060900
*                  300 inclusive. When the RNAMELEN keyword is not    * 00061000
*                  specified the length of the resource name defaults * 00061100
*                  to 64 bytes.                                       * 00061200
*                  DEFAULT: NO_RNAMELEN                               * 00061300
*                                                                     * 00061400
*                                                                     * 00061500
*                                                                     * 00061600
*                                                                     * 00061700
*              HASHVAL=xhashval                                       * 00061800
*                  is the name (RS-type), or address in register      * 00061900
*                  (2)-(12), of a required fullword input that        * 00062000
*                  specifies the hash value associated with the       * 00062100
*                  resource name.  The hash value along with the      * 00062200
*                  resource name and length serve to fully qualify an * 00062300
*                  IXLLOCK resource.  The method of producing the     * 00062400
*                  hash value is completely at the discretion of the  * 00062500
*                  connected user.  Typically, the value provided for * 00062600
*                  this keyword is the output of a user-defined       * 00062700
*                  hashing algorithm that receives a Resource name as * 00062800
*                  input.                                             * 00062900
*                                                                     * 00063000
*                                                                     * 00063100
*                                                                     * 00063200
*                                                                     * 00063300
*              [LOCKDATA=xlockdata|ALL_ZEROES]                      * 00063400
*                  is the name (RS-type), or address in register      * 00063500
*                  (2)-(12), of an optional 8 character input         * 00063600
*                  variable that contains user-defined data to be     * 00063700
*                  associated with this resource.  The contents of    * 00063800
*                  LOCKDATA is at the discretion of the connected     * 00063900
*                  user and has no meaning to the system.  The        * 00064000
*                  associated LOCKDATA is presented to this connected * 00064100
*                  user's COMPLETE exit if the OBTAIN request is      * 00064200
*                  processed asynchronously. The LOCKDATA is also     * 00064300
*                  presented to the COMPLETE and NOTIFY exits as they * 00064400
*                  are invoked to inform the user of subsequent       * 00064500
*                  updates (i.e. Completion of requests to alter this * 00064600
*                  resource) and status regarding the owned resource. * 00064700
*                  DEFAULT: ALL_ZEROES                                * 00064800
*                                                                     * 00064900
*                                                                     * 00065000
*                                                                     * 00065100
*                                                                     * 00065200
*              [STATE=SHR|EXCL|VALUE]                               * 00065300
*                  is an optional keyword input indicating the STATE  * 00065400
*                  in which the connected user is requesting to own   * 00065500
*                  the resource. Please note, the OBTAIN request may  * 00065600
*                  be granted by the CONTENTION exit with a STATE     * 00065700
*                  different than what was requested.  If a user's    * 00065800
*                  protocol is exploiting the capability for the      * 00065900
*                  CONTENTION exit to grant requests with a STATE     * 00066000
*                  different than requested, it is recommended that   * 00066100
*                  STATE(VALUE) be specified for this option to       * 00066200
*                  insure that an output variable will be available   * 00066300
*                  to contain the resultant state when request        * 00066400
*                  completion is reported synchronously.              * 00066500
*                  DEFAULT: SHR                                       * 00066600
*                                                                     * 00066700
*                                                                     * 00066800
*                  [STATE=SHR]                                        * 00066900
*                      specifies that the connected user is           * 00067000
*                      requesting to own the resource in a shared     * 00067100
*                      state.                                         * 00067200
*                                                                     * 00067300
*                  [STATE=EXCL]                                       * 00067400
*                      specifies that the connected user is           * 00067500
*                      requesting to own the resource in an exclusive * 00067600
*                      state.                                         * 00067700
*                                                                     * 00067800
*                  [STATE=VALUE                                       * 00067900
*                      The user will provide a value, via the         * 00068000
*                      STATEVAL keyword, indicating the requested     * 00068100
*                      ownership state.                               * 00068200
*                                                                     * 00068300
*                                                                     * 00068400
*                      STATEVAL=xstateval]                            * 00068500
*                          is the name (RS-type), or address in       * 00068600
*                          register (2)-(12), of a required byte      * 00068700
*                          input/output variable that contains a      * 00068800
*                          value indicating the desired ownership     * 00068900
*                          state.  The value provided must be         * 00069000
*                          equivalent to the constants provided in    * 00069100
*                          the IXLYCON macro indicating Shared or     * 00069200
*                          Exclusive state. (See IXLSTATE...          * 00069300
*                          constants in the IXLYCON macro for more    * 00069400
*                          information). Please note, if a value      * 00069500
*                          other than the IXLYCON constants for       * 00069600
*                          Shared or Exclusive is specified, the      * 00069700
*                          resource will be requested in the default  * 00069800
*                          STATE of Share.                            * 00069900
*                                                                     * 00070000
*                          Upon successful, synchronous request       * 00070100
*                          completion, the input variable will        * 00070200
*                          contain the state in which ownership of    * 00070300
*                          the resource was granted.                  * 00070400
*                                                                     * 00070500
*                                                                     * 00070600
*                                                                     * 00070700
*                                                                     * 00070800
*                                                                     * 00070900
*                                                                     * 00071000
*                                                                     * 00071100
*                                                                     * 00071200
*              [UDATAVAL=xudataval|ALL_ZEROES]                      * 00071300
*                  is the name (RS-type), or address in register      * 00071400
*                  (2)-(12), of an optional 64 character input/output * 00071500
*                  variable that contains user-defined data to be     * 00071600
*                  associated with the resource.  The contents of     * 00071700
*                  UDATAVAL is at the discretion of the connected     * 00071800
*                  user and has no meaning to the system.  Please     * 00071900
*                  note, the contents of the UDATAVAL may be modified * 00072000
*                  by the CONTENTION exit as part of granting or      * 00072100
*                  denying the request.                               * 00072200
*                                                                     * 00072300
*                  If request completion is reported to the connected * 00072400
*                  user synchronously, the input variable (if         * 00072500
*                  specified) will contain the resultant user data    * 00072600
*                  value.                                             * 00072700
*                  DEFAULT: ALL_ZEROES                                * 00072800
*                                                                     * 00072900
*                                                                     * 00073000
*                                                                     * 00073100
*                                                                     * 00073200
*              [RDATA=NORDATA|WRITE|REACQUIRE                       * 00073300
*                  is an optional keyword input that specifies what   * 00073400
*                  record data operation, if any, is to be performed  * 00073500
*                  as part of obtaining the specified resource.       * 00073600
*                  Please note, specification of the WRITE or         * 00073700
*                  REACQUIRE options will result in a parameter error * 00073800
*                  if the lock structure indicated by the input       * 00073900
*                  CONTOKEN does not provide recording capabilities.  * 00074000
*                  DEFAULT: NORDATA                                   * 00074100
*                                                                     * 00074200
*                                                                     * 00074300
*                  [RDATA=NORDATA]                                    * 00074400
*                      indicates that no record data entry is to be   * 00074500
*                      allocated and associated with the specified    * 00074600
*                      resource.                                      * 00074700
*                                                                     * 00074800
*                  [RDATA=WRITE                                       * 00074900
*                      indicates to allocate a record data entry to   * 00075000
*                      be associated with the owned resource.  Note   * 00075100
*                      that the record data entry will be created     * 00075200
*                      with a record data type (RDATATYPE) of zero.   * 00075300
*                                                                     * 00075400
*                                                                     * 00075500
*                      RDATAVAL=xrdataval                             * 00075600
*                          is the name (RS-type), or address in       * 00075700
*                          register (2)-(12), of a required 64        * 00075800
*                          character input/output variable that       * 00075900
*                          contains user-defined data to be written   * 00076000
*                          to the record data entry. The contents of  * 00076100
*                          RDATAVAL is at the discretion of the       * 00076200
*                          connected user and has no meaning to the   * 00076300
*                          system.  The CONTENTION exit may modify    * 00076400
*                          the value that is to be written to the     * 00076500
*                          record data entry as part of granting the  * 00076600
*                          request.                                   * 00076700
*                                                                     * 00076800
*                          If completion of the OBTAIN request is     * 00076900
*                          presented to the user synchronously, the   * 00077000
*                          input variable will contain the resultant  * 00077100
*                          record data value.                         * 00077200
*                                                                     * 00077300
*                                                                     * 00077400
*                                                                     * 00077500
*                                                                     * 00077600
*                      [ENTRYID=xentryid]                             * 00077700
*                          is the name (RS-type), or address in       * 00077800
*                          register (2)-(12), of an optional 12       * 00077900
*                          character output variable which will upon  * 00078000
*                          successful, synchronous request completion * 00078100
*                          contain the unique identifier assigned to  * 00078200
*                          the record data entry. If the request is   * 00078300
*                          unsuccessful or being processed            * 00078400
*                          asynchronously (in which case the results  * 00078500
*                          will be presented to the user's COMPLETE   * 00078600
*                          exit) the content of this output variable  * 00078700
*                          is not valid.                              * 00078800
*                                                                     * 00078900
*                                                                     * 00079000
*                                                                     * 00079100
*                                                                     * 00079200
*                      [ENTRYCOUNT=xentrycount]]                      * 00079300
*                          is the name (RS-type), or address in       * 00079400
*                          register (2)-(12), of an optional fullword * 00079500
*                          output variable that upon successful,      * 00079600
*                          synchronous request completion contains    * 00079700
*                          the number of record data entries in the   * 00079800
*                          structure which are currently in-use. This * 00079900
*                          value is analogous to the IXLYAMDSTRL_LSEC * 00080000
*                          field that is returned by the XES          * 00080100
*                          Accounting and Measurement service, IXLMG. * 00080200
*                          The value returned in the ENTRYCOUNT area  * 00080300
*                          can be used in conjunction with the value  * 00080400
*                          indicating the maximum number of record    * 00080500
*                          data entries which is supported by the     * 00080600
*                          allocated Lock Structure to monitor        * 00080700
*                          structure capacity and anticipate          * 00080800
*                          "structure full" conditions.  The maximum  * 00080900
*                          number of record data entries supported by * 00081000
*                          the lock structure is returned in the      * 00081100
*                          answer area by the IXLCONN service and is  * 00081200
*                          also retrievable via the IXLMG service.    * 00081300
*                          Please note, if the request is             * 00081400
*                          unsuccessful or being processed            * 00081500
*                          asynchronously (in which case the results  * 00081600
*                          will be presented to the user's COMPLETE   * 00081700
*                          exit) the content of this output variable  * 00081800
*                          is not valid.                              * 00081900
*                                                                     * 00082000
*                                                                     * 00082100
*                                                                     * 00082200
*                  [RDATA=REACQUIRE                                   * 00082300
*                      indicates to reacquire the record data entry   * 00082400
*                      identified by the ENTRYID keyword. Although    * 00082500
*                      the use of this option is not limited to       * 00082600
*                      recovery scenarios, it is intended to aid in   * 00082700
*                      recovery of resources during such instances.   * 00082800
*                      For example...                                 * 00082900
*                                                                     * 00083000
*                                                                     * 00083100
*                      o   Upon re-connecting, a previously           * 00083200
*                          failed-persistent connected user of        * 00083300
*                          locking services may re-obtain resources   * 00083400
*                          that were held by its previous instance    * 00083500
*                          and reacquire the existing record table    * 00083600
*                          entries to be associated with the new      * 00083700
*                          instances of ownership. The user could     * 00083800
*                          potentially use the UPDATERDATA suboption  * 00083900
*                          to update the contents of the reacquired   * 00084000
*                          record data entries to reflect updated     * 00084100
*                          state information.                         * 00084200
*                                                                     * 00084300
*                      o   A connected user of locking services fails * 00084400
*                          such that the related surviving users wish * 00084500
*                          to recover the resources held by the       * 00084600
*                          failing user. The survivors may wish to    * 00084700
*                          obtain the specified resources while       * 00084800
*                          reacquiring the associated record data     * 00084900
*                          entries from the failed connector. The     * 00085000
*                          surviving connectors could potentially     * 00085100
*                          exploit the CONID suboption to coordinate  * 00085200
*                          their processing.                          * 00085300
*                                                                     * 00085400
*                                                                     * 00085500
*                                                                     * 00085600
*                                                                     * 00085700
*                      ENTRYID=xentryid                               * 00085800
*                          is the name (RS-type), or address in       * 00085900
*                          register (2)-(12), of a required 12        * 00086000
*                          character input variable containing the    * 00086100
*                          unique identifier of the record data entry * 00086200
*                          to be reacquired.  The entry with this     * 00086300
*                          identifier must already exist. Information * 00086400
*                          about Record data Entries (including entry * 00086500
*                          identifiers) is retrievable via the XES    * 00086600
*                          Record Table service, IXLRT.               * 00086700
*                                                                     * 00086800
*                                                                     * 00086900
*                                                                     * 00087000
*                                                                     * 00087100
*                      [CONID=xconid|NO_CONID]                      * 00087200
*                          is the name (RS-type), or address in       * 00087300
*                          register (2)-(12), of an optional byte     * 00087400
*                          input variable that contains the           * 00087500
*                          connection identifier that is to be used   * 00087600
*                          to identify the connection from whom the   * 00087700
*                          record data entry is being reacquired. If  * 00087800
*                          the record data entry designated by the    * 00087900
*                          ENTRYID keyword is not associated with the * 00088000
*                          connection specified by the CONID keyword, * 00088100
*                          the IXLLOCK request will fail.  When a     * 00088200
*                          record data entry is successfully          * 00088300
*                          reacquired, it will become associated with * 00088400
*                          the reacquiring connected user.            * 00088500
*                          DEFAULT: NO_CONID                          * 00088600
*                                                                     * 00088700
*                                                                     * 00088800
*                                                                     * 00088900
*                                                                     * 00089000
*                      [UPDATERDATA=NO|YES]]                        * 00089100
*                          is an optional keyword input that          * 00089200
*                          indicates whether to update the contents   * 00089300
*                          of the record data entry at the time it is * 00089400
*                          reacquired.                                * 00089500
*                          DEFAULT: NO                                * 00089600
*                                                                     * 00089700
*                                                                     * 00089800
*                          [UPDATERDATA=NO]                           * 00089900
*                              indicates to not update the record     * 00090000
*                              data entry                             * 00090100
*                                                                     * 00090200
*                          [UPDATERDATA=YES                           * 00090300
*                              indicates to update the record data    * 00090400
*                              entry with the data specified by the   * 00090500
*                              RDATAVAL keyword                       * 00090600
*                                                                     * 00090700
*                                                                     * 00090800
*                              RDATAVAL=xrdataval]]                   * 00090900
*                                  is the name (RS-type), or address  * 00091000
*                                  in register (2)-(12), of a         * 00091100
*                                  required 64 character input/output * 00091200
*                                  variable that contains             * 00091300
*                                  user-defined data to be written to * 00091400
*                                  the record data entry. The         * 00091500
*                                  contents of RDATAVAL is at the     * 00091600
*                                  discretion of the connected user   * 00091700
*                                  and has no meaning to the system.  * 00091800
*                                  The CONTENTION exit may modify the * 00091900
*                                  value that is to be written to the * 00092000
*                                  record data entry as part of       * 00092100
*                                  granting the request.              * 00092200
*                                                                     * 00092300
*                                  If completion of the request is    * 00092400
*                                  presented to the user              * 00092500
*                                  synchronously, the input variable  * 00092600
*                                  will contain the resultant record  * 00092700
*                                  data value.                        * 00092800
*                                                                     * 00092900
*                                                                     * 00093000
*                                                                     * 00093100
*                                                                     * 00093200
*                                                                     * 00093300
*                                                                     * 00093400
*                                                                     * 00093500
*                                                                     * 00093600
*                                                                     * 00093700
*                                                                     * 00093800
*                                                                     * 00093900
*                                                                     * 00094000
*              [MODE=SYNCSUSPEND|SYNCEXIT|SYNCFAIL|VALUE]           * 00094100
*                  is an optional keyword input that specifies how    * 00094200
*                  the request should be processed if it is not able  * 00094300
*                  to be serviced immediately. If the request is able * 00094400
*                  to be processed immediately, the MODE keyword is   * 00094500
*                  ignored and control is returned to the invoker     * 00094600
*                  with all information regarding the completed       * 00094700
*                  request.                                           * 00094800
*                  DEFAULT: SYNCSUSPEND                               * 00094900
*                                                                     * 00095000
*                                                                     * 00095100
*                  [MODE=SYNCSUSPEND]                                 * 00095200
*                      requests that the OBTAIN request be processed  * 00095300
*                      synchronously.  Control is not returned to the * 00095400
*                      invoker until the request is complete.  If     * 00095500
*                      necessary the caller will be suspended until   * 00095600
*                      the request completes.                         * 00095700
*                                                                     * 00095800
*                  [MODE=SYNCEXIT]                                    * 00095900
*                      requests that the OBTAIN request be processed  * 00096000
*                      asynchronously.  Return and reason codes are   * 00096100
*                      returned to the invoker indicating that the    * 00096200
*                      request will be processed in this manner.      * 00096300
*                      Request completion is reported via the         * 00096400
*                      connected user's Complete Exit.  The connected * 00096500
*                      user-specified COMPLETE exit may be  given     * 00096600
*                      control before  control  returns  to the next  * 00096700
*                      sequential instruction after the connected     * 00096800
*                      user's IXLLOCK request.                        * 00096900
*                                                                     * 00097000
*                  [MODE=SYNCFAIL]                                    * 00097100
*                      requests that the OBTAIN request be cancelled. * 00097200
*                      Return and reason codes are returned to the    * 00097300
*                      invoker indicating that the request was unable * 00097400
*                      to be processed without delays.                * 00097500
*                                                                     * 00097600
*                  [MODE=VALUE                                        * 00097700
*                      The user will provide a value, via the MODEVAL * 00097800
*                      keyword, indicating the requested mode.        * 00097900
*                                                                     * 00098000
*                                                                     * 00098100
*                      MODEVAL=xmodeval]                              * 00098200
*                          is the name (RS-type), or address in       * 00098300
*                          register (2)-(12), of a required byte      * 00098400
*                          input variable that contains a value       * 00098500
*                          indicating the desired mode.  The value    * 00098600
*                          provided must be equivalent to the         * 00098700
*                          constants provided in the IXLYCON macro    * 00098800
*                          indicating the mode.  (See IXLMODE...      * 00098900
*                          constants in the IXLYCON macro for more    * 00099000
*                          information).                              * 00099100
*                                                                     * 00099200
*                                                                     * 00099300
*                                                                     * 00099400
*                                                                     * 00099500
*                                                                     * 00099600
*                                                                     * 00099700
*                                                                     * 00099800
*          REQUEST=ALTER                                              * 00099900
*              specifies that the connected user is requesting to     * 00100000
*              alter one or more of the attributes of a resource that * 00100100
*              it currently owns. The ALTER option may also be used   * 00100200
*              to replace a previous OBTAIN or ALTER request that is  * 00100300
*              currently pending on the CONTENTION exit resource      * 00100400
*              request queue with a more current request.             * 00100500
*                                                                     * 00100600
*                                                                     * 00100700
*              RNAME=xrname                                           * 00100800
*                  is the name (RS-type), or address in register      * 00100900
*                  (2)-(12), of a required character input containing * 00101000
*                  the name of the resource in which the user is      * 00101100
*                  requesting to Alter its interest.  The resource    * 00101200
*                  name and length along with the hash value serve to * 00101300
*                  fully qualify an IXLLOCK resource.                 * 00101400
*                                                                     * 00101500
*                                                                     * 00101600
*                                                                     * 00101700
*                                                                     * 00101800
*              [RNAMELEN=xrnamelen|NO_RNAMELEN]                     * 00101900
*                  is the name (RS-type), or address in register      * 00102000
*                  (2)-(12), of an optional fullword input that       * 00102100
*                  specifies the length in bytes of the resource name * 00102200
*                  for which this request is being processed. The     * 00102300
*                  resource name and length along with the hash value * 00102400
*                  serve to fully qualify an IXLLOCK resource.        * 00102500
*                  Please note, the Rnamelen keyword is only valid    * 00102600
*                  for requests that are issued against a lock        * 00102700
*                  structure which has variable length resource names * 00102800
*                  in effect (see the RNAMELEN keyword on the IXLCONN * 00102900
*                  macro for details on allocating a lock structure   * 00103000
*                  with variable length resource names). Requests     * 00103100
*                  which specify this keyword against lock structures * 00103200
*                  which do not have variable length resource names   * 00103300
*                  in effect will be rejected with return and reason  * 00103400
*                  codes indicating the error.  When specified, the   * 00103500
*                  value supplied for RNAMELEN must be between 1 and  * 00103600
*                  300 inclusive. When the RNAMELEN keyword is not    * 00103700
*                  specified the length of the resource name defaults * 00103800
*                  to 64 bytes.                                       * 00103900
*                  DEFAULT: NO_RNAMELEN                               * 00104000
*                                                                     * 00104100
*                                                                     * 00104200
*                                                                     * 00104300
*                                                                     * 00104400
*              HASHVAL=xhashval                                       * 00104500
*                  is the name (RS-type), or address in register      * 00104600
*                  (2)-(12), of a required fullword input that        * 00104700
*                  specifies the hash value associated with the       * 00104800
*                  resource name.  The hash value along with the      * 00104900
*                  resource name and length serves to fully qualify   * 00105000
*                  an IXLLOCK resource.  The method of producing the  * 00105100
*                  hash value is completely at the discretion of the  * 00105200
*                  connected user.  Typically, the value provided for * 00105300
*                  this keyword is the output of a user-defined       * 00105400
*                  hashing algorithm that receives a Resource name as * 00105500
*                  input.                                             * 00105600
*                                                                     * 00105700
*                                                                     * 00105800
*                                                                     * 00105900
*                                                                     * 00106000
*              [STATE=SHR|EXCL|VALUE]                               * 00106100
*                  is an optional keyword input indicating the STATE  * 00106200
*                  in which the connected user is requesting to own   * 00106300
*                  the resource. Please note, the ALTER request may   * 00106400
*                  be granted by the CONTENTION exit with a STATE     * 00106500
*                  different than what was requested.  If a user's    * 00106600
*                  protocol is exploiting the capability for the      * 00106700
*                  CONTENTION exit to grant a request with a STATE    * 00106800
*                  different than requested, it is recommended that   * 00106900
*                  STATE(VALUE) be specified for this option to       * 00107000
*                  insure that an output variable will be available   * 00107100
*                  to contain the resultant state when request        * 00107200
*                  completion is reported synchronously.              * 00107300
*                  DEFAULT: SHR                                       * 00107400
*                                                                     * 00107500
*                                                                     * 00107600
*                  [STATE=SHR]                                        * 00107700
*                      specifies that the connected user is           * 00107800
*                      requesting to own the resource in a shared     * 00107900
*                      state.                                         * 00108000
*                                                                     * 00108100
*                  [STATE=EXCL]                                       * 00108200
*                      specifies that the connected user is           * 00108300
*                      requesting to own the resource in an exclusive * 00108400
*                      state.                                         * 00108500
*                                                                     * 00108600
*                  [STATE=VALUE                                       * 00108700
*                      The STATEVAL key was used, instead, to specify * 00108800
*                      the ownership state.                           * 00108900
*                                                                     * 00109000
*                                                                     * 00109100
*                      STATEVAL=xstateval]                            * 00109200
*                          is the name (RS-type), or address in       * 00109300
*                          register (2)-(12), of a required byte      * 00109400
*                          input/output that specifies a value        * 00109500
*                          indicating the desired ownership state.    * 00109600
*                          The value of this field must be equivalent * 00109700
*                          to the constants provided in the IXLYCON   * 00109800
*                          macro indicating Shared or Exclusive       * 00109900
*                          state. (See IXLSTATE... constants in the   * 00110000
*                          IXLYCON macro for more information).       * 00110100
*                          Please note, if a value not equal to       * 00110200
*                          Shared or Exclusive is specified, the      * 00110300
*                          resource will be requested in the default  * 00110400
*                          STATE of Share.                            * 00110500
*                                                                     * 00110600
*                          If request completion is reported          * 00110700
*                          synchronously, the input variable will     * 00110800
*                          contain the state in which ownership of    * 00110900
*                          the resource was granted.                  * 00111000
*                                                                     * 00111100
*                                                                     * 00111200
*                                                                     * 00111300
*                                                                     * 00111400
*                                                                     * 00111500
*                                                                     * 00111600
*                                                                     * 00111700
*                                                                     * 00111800
*              [UDATAVAL=xudataval|ALL_ZEROES]                      * 00111900
*                  is the name (RS-type), or address in register      * 00112000
*                  (2)-(12), of an optional 64 character input/output * 00112100
*                  variable that contains user-defined data to be     * 00112200
*                  associated with the resource.  The contents of     * 00112300
*                  UDATAVAL is at the discretion of the connected     * 00112400
*                  user and has no meaning to the system.  Please     * 00112500
*                  note, the contents of the UDATAVAL may be modified * 00112600
*                  by the CONTENTION exit as part of granting or      * 00112700
*                  denying the request.                               * 00112800
*                                                                     * 00112900
*                  If request completion is reported to the connected * 00113000
*                  user synchronously, the input variable (if         * 00113100
*                  specified) will contain the resultant user data    * 00113200
*                  value.                                             * 00113300
*                  DEFAULT: ALL_ZEROES                                * 00113400
*                                                                     * 00113500
*                                                                     * 00113600
*                                                                     * 00113700
*                                                                     * 00113800
*              [RDATA=UNCHANGED|DELETE|WRITE]                       * 00113900
*                  is an optional keyword input that specifies what   * 00114000
*                  record data operation, if any, is to be performed  * 00114100
*                  as part of altering the specified resource.        * 00114200
*                  Please note, specification of the WRITE or DELETE  * 00114300
*                  options will result in a parameter error if the    * 00114400
*                  lock structure indicated by the input CONTOKEN     * 00114500
*                  does not provide recording capabilities.           * 00114600
*                  DEFAULT: UNCHANGED                                 * 00114700
*                                                                     * 00114800
*                                                                     * 00114900
*                  [RDATA=UNCHANGED]                                  * 00115000
*                      indicates that the record data associated with * 00115100
*                      this resource, if any, is not to be changed.   * 00115200
*                                                                     * 00115300
*                  [RDATA=DELETE]                                     * 00115400
*                      indicates to delete the record data entry      * 00115500
*                      associated with this resource. If no record    * 00115600
*                      data entry is currently allocated and          * 00115700
*                      associated with this resource, this keyword is * 00115800
*                      ignored.                                       * 00115900
*                                                                     * 00116000
*                  [RDATA=WRITE                                       * 00116100
*                      indicates to update the record data entry with * 00116200
*                      the data specified by the RDATAVAL keyword.    * 00116300
*                      If a record data entry is currently associated * 00116400
*                      with the resource, its contents will be        * 00116500
*                      updated. Otherwise a new entry will be         * 00116600
*                      allocated.  Note that, when a record data      * 00116700
*                      entry is created,  it will be created with a   * 00116800
*                      record data type (RDATATYPE) of zero.          * 00116900
*                                                                     * 00117000
*                                                                     * 00117100
*                      RDATAVAL=xrdataval                             * 00117200
*                          is the name (RS-type), or address in       * 00117300
*                          register (2)-(12), of a required 64        * 00117400
*                          character input/output variable that       * 00117500
*                          contains user-defined data to be written   * 00117600
*                          to the record data entry. The contents of  * 00117700
*                          RDATAVAL is at the discretion of the       * 00117800
*                          connected user and has no meaning to the   * 00117900
*                          system.  The CONTENTION exit may modify    * 00118000
*                          the value that is to be written to the     * 00118100
*                          record data entry as part of granting the  * 00118200
*                          request.                                   * 00118300
*                                                                     * 00118400
*                          If completion of the request is presented  * 00118500
*                          to the user synchronously, the input       * 00118600
*                          variable will contain the resultant record * 00118700
*                          data value.                                * 00118800
*                                                                     * 00118900
*                                                                     * 00119000
*                                                                     * 00119100
*                                                                     * 00119200
*                      ENTRYID=xentryid                               * 00119300
*                          is the name (RS-type), or address in       * 00119400
*                          register (2)-(12), of a required 12        * 00119500
*                          character output variable which will upon  * 00119600
*                          successful, synchronous request completion * 00119700
*                          contain the unique identifier assigned to  * 00119800
*                          the record data entry.  If a new record    * 00119900
*                          data entry was allocated by this request,  * 00120000
*                          the identifier indicates the newly         * 00120100
*                          allocated entry.  If the request resulted  * 00120200
*                          in the update of an existing record data   * 00120300
*                          entry that had been associated with this   * 00120400
*                          resource via a previous OBTAIN or ALTER    * 00120500
*                          request, the identifier indicates the      * 00120600
*                          updated entry.  If the request is          * 00120700
*                          unsuccessful or being processed            * 00120800
*                          asynchronously (in which case the results  * 00120900
*                          will be presented to the user's COMPLETE   * 00121000
*                          exit) the content of this output variable  * 00121100
*                          is not valid.                              * 00121200
*                                                                     * 00121300
*                                                                     * 00121400
*                                                                     * 00121500
*                                                                     * 00121600
*                      [ENTRYCOUNT=xentrycount]]                      * 00121700
*                          is the name (RS-type), or address in       * 00121800
*                          register (2)-(12), of an optional fullword * 00121900
*                          output variable that contains the number   * 00122000
*                          of record data entries in the structure    * 00122100
*                          which are currently in-use.  This value is * 00122200
*                          only returned if a new record data entry   * 00122300
*                          was allocated by this request and its      * 00122400
*                          value is analogous to the IXLYAMDSTRL_LSEC * 00122500
*                          field that is returned by the XES          * 00122600
*                          Accounting and Measurement service, IXLMG. * 00122700
*                          The value returned in the ENTRYCOUNT area  * 00122800
*                          can be used in conjunction with the        * 00122900
*                          maximum number of record data entries      * 00123000
*                          supported by the Lock structure value to   * 00123100
*                          monitor capacity.  The maximum number of   * 00123200
*                          record data entries is returned in the     * 00123300
*                          answer area by the IXLCONN service and is  * 00123400
*                          also retrievable via the IXLMG service.    * 00123500
*                                                                     * 00123600
*                                                                     * 00123700
*                                                                     * 00123800
*                                                                     * 00123900
*                                                                     * 00124000
*                                                                     * 00124100
*                                                                     * 00124200
*                                                                     * 00124300
*              [MODE=SYNCSUSPEND|SYNCEXIT|SYNCFAIL|VALUE]           * 00124400
*                  is an optional keyword input that specifies how    * 00124500
*                  the request should be processed if it is not able  * 00124600
*                  to be serviced immediately. If the request is able * 00124700
*                  to be processed immediately, the MODE keyword is   * 00124800
*                  ignored and control is returned to the invoker     * 00124900
*                  with all information regarding the completed       * 00125000
*                  request.                                           * 00125100
*                  DEFAULT: SYNCSUSPEND                               * 00125200
*                                                                     * 00125300
*                                                                     * 00125400
*                  [MODE=SYNCSUSPEND]                                 * 00125500
*                      requests that the ALTER request be processed   * 00125600
*                      synchronously.  Control is not returned to the * 00125700
*                      invoker until the request is complete.  If     * 00125800
*                      necessary the caller will be suspended until   * 00125900
*                      the request completes.                         * 00126000
*                                                                     * 00126100
*                  [MODE=SYNCEXIT]                                    * 00126200
*                      requests that the ALTER request be processed   * 00126300
*                      asynchronously.  Return and reason codes are   * 00126400
*                      returned to the invoker indicating that the    * 00126500
*                      request will be processed in this manner.      * 00126600
*                      Request completion is reported via the         * 00126700
*                      connected user's Complete Exit.  The connected * 00126800
*                      user-specified COMPLETE exit may be  given     * 00126900
*                      control before  control  returns  to the next  * 00127000
*                      sequential instruction after the connected     * 00127100
*                      user's IXLLOCK request.                        * 00127200
*                                                                     * 00127300
*                  [MODE=SYNCFAIL]                                    * 00127400
*                      requests that the ALTER request be cancelled.  * 00127500
*                      Return and reason codes are returned to the    * 00127600
*                      invoker indicating that the request was unable * 00127700
*                      to be processed without delays.                * 00127800
*                                                                     * 00127900
*                  [MODE=VALUE                                        * 00128000
*                      The user will provide a value, via the MODEVAL * 00128100
*                      keyword, indicating the requested mode.        * 00128200
*                                                                     * 00128300
*                                                                     * 00128400
*                      MODEVAL=xmodeval]                              * 00128500
*                          is the name (RS-type), or address in       * 00128600
*                          register (2)-(12), of a required byte      * 00128700
*                          input variable that contains a value       * 00128800
*                          indicating the desired mode.  The value    * 00128900
*                          provided must be equivalent to the         * 00129000
*                          constants provided in the IXLYCON macro    * 00129100
*                          indicating the mode.  (See IXLMODE...      * 00129200
*                          constants in the IXLYCON macro for more    * 00129300
*                          information).                              * 00129400
*                                                                     * 00129500
*                                                                     * 00129600
*                                                                     * 00129700
*                                                                     * 00129800
*                                                                     * 00129900
*                                                                     * 00130000
*                                                                     * 00130100
*          REQUEST=RELEASE                                            * 00130200
*              specifies that the connected user is requesting to     * 00130300
*              release ownership of the resource.                     * 00130400
*                                                                     * 00130500
*                                                                     * 00130600
*              RNAME=xrname                                           * 00130700
*                  is the name (RS-type), or address in register      * 00130800
*                  (2)-(12), of a required character input containing * 00130900
*                  the resource name for which this request is being  * 00131000
*                  processed. The resource name and length along with * 00131100
*                  the hash value serves to fully qualify an IXLLOCK  * 00131200
*                  resource.                                          * 00131300
*                                                                     * 00131400
*                                                                     * 00131500
*                                                                     * 00131600
*                                                                     * 00131700
*              [RNAMELEN=xrnamelen|NO_RNAMELEN]                     * 00131800
*                  is the name (RS-type), or address in register      * 00131900
*                  (2)-(12), of an optional fullword input that       * 00132000
*                  specifies the length in bytes of the resource name * 00132100
*                  for which this request is being processed. The     * 00132200
*                  resource name and length along with the hash value * 00132300
*                  serve to fully qualify an IXLLOCK resource.        * 00132400
*                  Please note, the Rnamelen keyword is only valid    * 00132500
*                  for requests that are issued against a lock        * 00132600
*                  structure which has variable length resource names * 00132700
*                  in effect (see the RNAMELEN keyword on the IXLCONN * 00132800
*                  macro for details on allocating a lock structure   * 00132900
*                  with variable length resource names). Requests     * 00133000
*                  which specify this keyword against lock structures * 00133100
*                  which do not have variable length resource names   * 00133200
*                  in effect will be rejected with return and reason  * 00133300
*                  codes indicating the error.  When specified, the   * 00133400
*                  value supplied for RNAMELEN must be between 1 and  * 00133500
*                  300 inclusive. When the RNAMELEN keyword is not    * 00133600
*                  specified the length of the resource name defaults * 00133700
*                  to 64 bytes.                                       * 00133800
*                  DEFAULT: NO_RNAMELEN                               * 00133900
*                                                                     * 00134000
*                                                                     * 00134100
*                                                                     * 00134200
*                                                                     * 00134300
*              HASHVAL=xhashval                                       * 00134400
*                  is the name (RS-type), or address in register      * 00134500
*                  (2)-(12), of a required fullword input that        * 00134600
*                  specifies the hash value associated with the       * 00134700
*                  resource name.  The hash value along with the      * 00134800
*                  resource name and length serves to fully qualify   * 00134900
*                  an IXLLOCK resource.  The method of producing the  * 00135000
*                  hash value is completely at the discretion of the  * 00135100
*                  connected user.  Typically, the value provided for * 00135200
*                  this keyword is the output of a user-defined       * 00135300
*                  hashing algorithm that receives a Resource name as * 00135400
*                  input.                                             * 00135500
*                                                                     * 00135600
*                                                                     * 00135700
*                                                                     * 00135800
*                                                                     * 00135900
*              [UDATAVAL=xudataval|ALL_ZEROES]                      * 00136000
*                  is the name (RS-type), or address in register      * 00136100
*                  (2)-(12), of an optional 64 character input/output * 00136200
*                  variable that contains user-defined data to be     * 00136300
*                  associated with the resource.  The contents of     * 00136400
*                  UDATAVAL is at the discretion of the connected     * 00136500
*                  user and has no meaning to the system.  While a    * 00136600
*                  RELEASE request can not be denied by the           * 00136700
*                  CONTENTION exit, the contents of the user data     * 00136800
*                  associated with the request may be modified.       * 00136900
*                                                                     * 00137000
*                  If request completion is reported to the connected * 00137100
*                  user synchronously, the input variable (if         * 00137200
*                  specified) will contain the resultant user data    * 00137300
*                  value.                                             * 00137400
*                  DEFAULT: ALL_ZEROES                                * 00137500
*                                                                     * 00137600
*                                                                     * 00137700
*                                                                     * 00137800
*                                                                     * 00137900
*              [RDATA=DELETE|KEEP                                   * 00138000
*                  is an optional keyword input that specifies the    * 00138100
*                  disposition of the record data entry associated    * 00138200
*                  with this resource                                 * 00138300
*                  DEFAULT: DELETE                                    * 00138400
*                                                                     * 00138500
*                                                                     * 00138600
*                  [RDATA=DELETE]                                     * 00138700
*                      indicates to delete the record data entry      * 00138800
*                      associated with this resource. If no record    * 00138900
*                      data entry is associated with this resource,   * 00139000
*                      this keyword is ignored.                       * 00139100
*                                                                     * 00139200
*                  [RDATA=KEEP                                        * 00139300
*                      indicates to keep the record data entry        * 00139400
*                      associated with this resource even though      * 00139500
*                      ownership of the resource is being             * 00139600
*                      relinquished.  Please note, the record data    * 00139700
*                      entry that was kept may eventually be          * 00139800
*                      re-associated with a new resource via the      * 00139900
*                      REACQUIRE option of IXLLOCK REQUEST(OBTAIN) or * 00140000
*                      manipulated via the XES record data service,   * 00140100
*                      IXLRT. If the KEEP option is specified and no  * 00140200
*                      associated record data entry exists,           * 00140300
*                      informational return and reason codes will be  * 00140400
*                      returned to the invoker.                       * 00140500
*                                                                     * 00140600
*                                                                     * 00140700
*                      [UPDATERDATA=NO|YES]]                        * 00140800
*                          is an optional keyword input that          * 00140900
*                          indicates whether to update the contents   * 00141000
*                          of the record data entry that has been     * 00141100
*                          kept                                       * 00141200
*                          DEFAULT: NO                                * 00141300
*                                                                     * 00141400
*                                                                     * 00141500
*                          [UPDATERDATA=NO]                           * 00141600
*                              indicates to not update the record     * 00141700
*                              data entry                             * 00141800
*                                                                     * 00141900
*                          [UPDATERDATA=YES                           * 00142000
*                              indicates to update the record data    * 00142100
*                              entry with the data specified by the   * 00142200
*                              RDATAVAL keyword                       * 00142300
*                                                                     * 00142400
*                                                                     * 00142500
*                              RDATAVAL=xrdataval]]                   * 00142600
*                                  is the name (RS-type), or address  * 00142700
*                                  in register (2)-(12), of a         * 00142800
*                                  required 64 character input/output * 00142900
*                                  variable that contains             * 00143000
*                                  user-defined data to be written to * 00143100
*                                  the record data entry. The         * 00143200
*                                  contents of RDATAVAL is at the     * 00143300
*                                  discretion of the connected user   * 00143400
*                                  and has no meaning to the system.  * 00143500
*                                  The CONTENTION exit may modify the * 00143600
*                                  value that is to be written to the * 00143700
*                                  record data entry as part of       * 00143800
*                                  granting the request.              * 00143900
*                                                                     * 00144000
*                                  If completion of the request is    * 00144100
*                                  presented to the user              * 00144200
*                                  synchronously, the RDATAVAL area   * 00144300
*                                  will be updated with the resultant * 00144400
*                                  record data value.                 * 00144500
*                                                                     * 00144600
*                                                                     * 00144700
*                                                                     * 00144800
*                                                                     * 00144900
*                                                                     * 00145000
*                                                                     * 00145100
*                                                                     * 00145200
*                                                                     * 00145300
*                                                                     * 00145400
*                                                                     * 00145500
*                                                                     * 00145600
*                                                                     * 00145700
*              [MODE=SYNCSUSPEND|SYNCEXIT|NORESPONSE|VALUE]         * 00145800
*                  is an optional keyword input that specifies how    * 00145900
*                  the request should be processed if it is not able  * 00146000
*                  to be serviced immediately. If the request is able * 00146100
*                  to be processed immediately, the MODE keyword is   * 00146200
*                  ignored and control is returned to the invoker     * 00146300
*                  with all information regarding the completed       * 00146400
*                  request.                                           * 00146500
*                  DEFAULT: SYNCSUSPEND                               * 00146600
*                                                                     * 00146700
*                                                                     * 00146800
*                  [MODE=SYNCSUSPEND]                                 * 00146900
*                      requests that the RELEASErequest be processed  * 00147000
*                      synchronously.  Control is not returned to the * 00147100
*                      invoker until the request is complete.  If     * 00147200
*                      necessary the caller will be suspended until   * 00147300
*                      the request completes.                         * 00147400
*                                                                     * 00147500
*                  [MODE=SYNCEXIT]                                    * 00147600
*                      requests that the RELEASE request be processed * 00147700
*                      asynchronously.  Return and reason codes are   * 00147800
*                      returned to the invoker indicating that the    * 00147900
*                      request will be processed in this manner.      * 00148000
*                      Request completion is reported via the         * 00148100
*                      connected user's Complete Exit.  The connected * 00148200
*                      user-specified COMPLETE exit may be  given     * 00148300
*                      control before  control  returns  to the next  * 00148400
*                      sequential instruction after the connected     * 00148500
*                      user's IXLLOCK request.                        * 00148600
*                                                                     * 00148700
*                  [MODE=NORESPONSE]                                  * 00148800
*                      indicates that the requestor does not want to  * 00148900
*                      be informed when the RELEASE request is        * 00149000
*                      complete.  Return and reason codes are         * 00149100
*                      returned to the invoker indicating that the    * 00149200
*                      request will be processed asynchronously,      * 00149300
*                      however, the connected user's COMPLETE exit    * 00149400
*                      will NOT be invoked to report request          * 00149500
*                      completion.                                    * 00149600
*                                                                     * 00149700
*                  [MODE=VALUE                                        * 00149800
*                      The user will provide a value, via the MODEVAL * 00149900
*                      keyword, indicating the requested mode.        * 00150000
*                                                                     * 00150100
*                                                                     * 00150200
*                      MODEVAL=xmodeval]                              * 00150300
*                          is the name (RS-type), or address in       * 00150400
*                          register (2)-(12), of a required byte      * 00150500
*                          input variable that contains a value       * 00150600
*                          indicating the desired mode.  The value    * 00150700
*                          provided must be equivalent to the         * 00150800
*                          constants provided in the IXLYCON macro    * 00150900
*                          indicating the mode.  (See IXLMODE...      * 00151000
*                          constants in the IXLYCON macro for more    * 00151100
*                          information).                              * 00151200
*                                                                     * 00151300
*                                                                     * 00151400
*                                                                     * 00151500
*                                                                     * 00151600
*                                                                     * 00151700
*                                                                     * 00151800
*                                                                     * 00151900
*          REQUEST=PROCESSMULT                                        * 00152000
*              specifies that multiple resource requests be           * 00152100
*              performed. The individual requests are specified via   * 00152200
*              Lock Request Blocks, mapped by IXLYLRB, which are      * 00152300
*              contained in the REQBUFFER storage area.  Note, only a * 00152400
*              subset of the request types supported on the IXLLOCK   * 00152500
*              interface are supported by the PROCESSMULT option.     * 00152600
*              Please consult the IXLYLRB mapping macro for           * 00152700
*              information on valid request options.                  * 00152800
*                                                                     * 00152900
*              Each request in the REQBUFFER will be processed in the * 00153000
*              order in which it appears in the list.                 * 00153100
*                                                                     * 00153200
*              The PROCESSMULT request type is valid only for a       * 00153300
*              structure allocated in a CFLEVEL=2 coupling facility.  * 00153400
*                                                                     * 00153500
*              If XES encounters an error while accessing a Lock      * 00153600
*              Request Block then processing for the command will be  * 00153700
*              halted and return and reason codes will be provided to * 00153800
*              the invoker indicating this occurrence. The number of  * 00153900
*              Lock Request Blocks that were processed by XES may be  * 00154000
*              optionally obtained via the REQPROC keyword.           * 00154100
*                                                                     * 00154200
*              Return and reason codes indicating the disposition of  * 00154300
*              each processed request in the REQBUFFER is returned in * 00154400
*              the Lock Request Block corresponding to that request.  * 00154500
*                                                                     * 00154600
*                                                                     * 00154700
*              REQBUFFER=xreqbuffer                                   * 00154800
*                  is a required input.  It is the name (RS-type), or * 00154900
*                  address in register (2)-(12), of a virtual storage * 00155000
*                  area containing a list of Lock Request Blocks      * 00155100
*                  corresponding to resource requests. The REQBUFFER  * 00155200
*                  storage area must exist in fixed or disabled       * 00155300
*                  reference storage.  There may be 1 to 128 Lock     * 00155400
*                  Request Blocks passed in the list.  The REQBUFFER  * 00155500
*                  storage must exist in fixed or disabled reference  * 00155600
*                  storage that is addressable from the invokers      * 00155700
*                  primary address space.                             * 00155800
*                                                                     * 00155900
*                                                                     * 00156000
*                                                                     * 00156100
*                                                                     * 00156200
*              REQNUM=xreqnum                                         * 00156300
*                  is the name (RS-type), or address in register      * 00156400
*                  (2)-(12), of a required halfword input variable    * 00156500
*                  specifying the number of Lock Request Blocks in    * 00156600
*                  the REQBUFFER list.                                * 00156700
*                                                                     * 00156800
*                  REQNUM values must be in the range of 1 to 128.    * 00156900
*                                                                     * 00157000
*                                                                     * 00157100
*                                                                     * 00157200
*                                                                     * 00157300
*              [REQPROC=xreqproc]                                     * 00157400
*                  is the name (RS-type), or address in register      * 00157500
*                  (2)-(12), of an optional halfword output variable  * 00157600
*                  that indicates the number of Lock Request Blocks   * 00157700
*                  that were processed by XES. If XES is forced to    * 00157800
*                  terminate its processing of the request list (i.e. * 00157900
*                  error accessing REQBUFFER, etc.)  then the number  * 00158000
*                  of Lock Request Blocks that were processed prior   * 00158100
*                  to the error is returned. If all Lock Request      * 00158200
*                  Blocks were processed then this variable will be   * 00158300
*                  equal to the value specified by the REQNUM         * 00158400
*                  keyword.  The state of the Lock Request Blocks     * 00158500
*                  after REQPROC ARE IN AN INDETERMINATE STATE.       * 00158600
*                                                                     * 00158700
*                                                                     * 00158800
*                                                                     * 00158900
*                                                                     * 00159000
*                                                                     * 00159100
*                                                                     * 00159200
*                                                                     * 00159300
*                                                                     * 00159400
*      [RETCODE=xretcode]                                             * 00159500
*          is the name (RS-type) of an optional fullword output       * 00159600
*          variable, or register (2)-(12), into which the return code * 00159700
*          is to be copied from GPR 15.                               * 00159800
*                                                                     * 00159900
*                                                                     * 00160000
*                                                                     * 00160100
*                                                                     * 00160200
*      [RSNCODE=xrsncode]                                             * 00160300
*          is the name (RS-type) of an optional fullword output       * 00160400
*          variable, or register (2)-(12), into which the reason code * 00160500
*          is to be copied from GPR 0.                                * 00160600
*                                                                     * 00160700
*                                                                     * 00160800
*                                                                     * 00160900
*                                                                     * 00161000
*      [PLISTVER=xplistver|IMPLIED_VERSION]                         * 00161100
*          is an optional byte input decimal value in the "0-2" range * 00161200
*          that specifies the macro version.  PLISTVER is the only    * 00161300
*          key allowed on the list form of MF and determines which    * 00161400
*          parameter list is generated.  The macro keys associated    * 00161500
*          with each supported version of the macro are listed in     * 00161600
*          MACRO USAGE NOTE 2.  Note that MAX may be specified        * 00161700
*          instead of a number, and the parameter list will be of the * 00161800
*          largest size currently supported. This size may grow from  * 00161900
*          release to release (thus possibly affecting the amount of  * 00162000
*          storage needed by your program).  If your program can      * 00162100
*          tolerate this, IBM recommends that you always specify MAX  * 00162200
*          when creating the list form parameter list as that will    * 00162300
*          ensure that the list form parameter list is always long    * 00162400
*          enough to hold whatever parameters might be specified on   * 00162500
*          the execute form.                                          * 00162600
*          DEFAULT: IMPLIED_VERSION.  When PLISTVER is omitted, the   * 00162700
*          default is the lowest version which allows all of the      * 00162800
*          parameters specified on the invocation to be processed.    * 00162900
*                                                                     * 00163000
*                                                                     * 00163100
*                                                                     * 00163200
*                                                                     * 00163300
*      [MF=S|L|E]                                                   * 00163400
*          is an optional keyword input which specifies the macro     * 00163500
*          form.                                                      * 00163600
*          DEFAULT: S                                                 * 00163700
*                                                                     * 00163800
*                                                                     * 00163900
*          [MF=S]                                                     * 00164000
*              specifies the standard form of the macro.  The "S"     * 00164100
*              form generates code to put the parameters into an      * 00164200
*              in-line parameter list and invoke the desired service. * 00164300
*              Full checking for required macro keys is done along    * 00164400
*              with supplying defaults for omitted optional           * 00164500
*              parameters.                                            * 00164600
*                                                                     * 00164700
*          [MF=(L,xmfctrl,xmfattr|0D)]                              * 00164800
*              specifies the list form of the macro.  The "L" form    * 00164900
*              defines an area to be used for the parameter list.     * 00165000
*              Only the PLISTVER key may be specified on the          * 00165100
*              invocation.  All other macro parameters are flagged as * 00165200
*              errors.  If PLISTVER is not specified, the original    * 00165300
*              parameter list definition is used.                     * 00165400
*                                                                     * 00165500
*            ,xmfctrl                                                 * 00165600
*              is a required input.  It is the name of a storage area * 00165700
*              for the parameter list.                                * 00165800
*                                                                     * 00165900
*            ,xmfattr|0D                                            * 00166000
*              is an optional 60 character input string that varies   * 00166100
*              from 1 to 60 characters. Use it to force boundary      * 00166200
*              alignment of the parameter list. Use only 0F or 0D.    * 00166300
*              DEFAULT: 0D which forces the parameter list to a       * 00166400
*              doubleword boundary.                                   * 00166500
*                                                                     * 00166600
*          [MF=(E,xmfctrl,COMPLETE)]                                * 00166700
*              specifies the execute form of the macro.  The "E" form * 00166800
*              generates code to put the parameters into the          * 00166900
*              parameter list specified by xmfctrl and provides full  * 00167000
*              syntax checking with default setting.                  * 00167100
*                                                                     * 00167200
*            ,xmfctrl                                                 * 00167300
*              is a required input.  It is the name (RS-type), or     * 00167400
*              address in register (1)-(12), of a storage area for    * 00167500
*              the parameter list.                                    * 00167600
*                                                                     * 00167700
*            ,COMPLETE                                              * 00167800
*              is an optional keyword input which specifies the       * 00167900
*              degree of macro parameter syntax checking.             * 00168000
*              DEFAULT: COMPLETE                                      * 00168100
*                                                                     * 00168200
*                                                                     * 00168300
*              COMPLETE                                               * 00168400
*                  Checking for required macro keys is done and       * 00168500
*                  defaults are supplied for omitted optional         * 00168600
*                  parameters.                                        * 00168700
*                                                                     * 00168800
*                                                                     * 00168900
*                                                                     * 00169000
*                                                                     * 00169100
*                                                                     * 00169200
*                                                                     * 00169300
*                                                                     * 00169400
*01* RETURN CODES:                                                    * 00169500
*                                                                     * 00169600
*                                                                     * 00169700
*       0         IxlRetCodeOk:  Successful completion. IXLLOCK       * 00169800
*                 request successful.                                 * 00169900
*                                                                     * 00170000
*                                                                     * 00170100
*                                                                     * 00170200
*       4         IxlRetCodeWarning:  Warning.  The request           * 00170300
*                 completed, but with exceptional circumstances.      * 00170400
*                                                                     * 00170500
*                 HEX REASON   MEANING                                * 00170600
*                 CODE                                                * 00170700
*                                                                     * 00170800
*                                                                     * 00170900
*                 xxxx0402    IxlRsnCodeAsynch:  Request will be      * 00171000
*                             completed asynchronously. If            * 00171100
*                             MODE(SYNCEXIT) was specified, request   * 00171200
*                             completion will be reported via the     * 00171300
*                             connected user's COMPLETE exit. For     * 00171400
*                             IXLLOCK RELEASE requests that specified * 00171500
*                             MODE(NORESPONSE), request completion    * 00171600
*                             will NOT be reported to the connected   * 00171700
*                             user.                                   * 00171800
*                                                                     * 00171900
*                 xxxx0418    IxlRsnCodeNoElementToKeep:  The IXLLOCK * 00172000
*                             RELEASE request is successful. The User * 00172100
*                             specified to KEEP the record data entry * 00172200
*                             associated with the resource, but there * 00172300
*                             was no entry to KEEP.                   * 00172400
*                                                                     * 00172500
*                 xxxx0419    IxlRsnCodeNoUpDateOnKeep:  The IXLLOCK  * 00172600
*                             RELEASE request is successful. The User * 00172700
*                             specified to keep the associated record * 00172800
*                             data entry and update its contents.     * 00172900
*                             The entry was kept but its contents     * 00173000
*                             were unable to be updated.              * 00173100
*                                                                     * 00173200
*                 xxxx0424    IxlRsncodeNoDeleteOnRelease:  The       * 00173300
*                             IXLLOCK RELEASE request is successful.  * 00173400
*                             The User specified to delete the        * 00173500
*                             associated record data entry, but the   * 00173600
*                             entry was unable to be deleted.         * 00173700
*                                                                     * 00173800
*                                                                     * 00173900
*                                                                     * 00174000
*                                                                     * 00174100
*       8         IxlRetCodeParmError:  Error.  The request cannot be * 00174200
*                 completed due to a user error.                      * 00174300
*                                                                     * 00174400
*                 HEX REASON   MEANING                                * 00174500
*                 CODE                                                * 00174600
*                                                                     * 00174700
*                                                                     * 00174800
*                 xxxx0801    IxlRsnCodeBadParmlist:  Unable to       * 00174900
*                             access caller's parameter list          * 00175000
*                                                                     * 00175100
*                 xxxx0804    IxlRsnCodeBadVersion#:  The version     * 00175200
*                             number in the parameter list is not     * 00175300
*                             valid.  This usually indicates that the * 00175400
*                             level of the macro is incompatible with * 00175500
*                             the level of the XES service code.      * 00175600
*                                                                     * 00175700
*                 xxxx0807    IxlRsnCodeNotEnabled: Caller was not    * 00175800
*                             enabled.                                * 00175900
*                                                                     * 00176000
*                 xxxx080A    IxlRsnCodeBadContoken:  The input       * 00176100
*                             contoken is not valid. The contoken may * 00176200
*                             no longer be valid for one of the       * 00176300
*                             following reasons:  disconnect has      * 00176400
*                             occurred, EOT of the connector's task,  * 00176500
*                             input contoken is not the contoken      * 00176600
*                             returned from IXLCONN, the request was  * 00176700
*                             issued outside the connector's address  * 00176800
*                             space, or the contoken has been         * 00176900
*                             invalidated for rebuild.                * 00177000
*                                                                     * 00177100
*                 xxxx0810    IxlRsnCodeResourceNotFound:  Resource   * 00177200
*                             specified on REQUEST(ALTER) or          * 00177300
*                             REQUEST(RELEASE) is not owned or        * 00177400
*                             pending ownership.  Please note, this   * 00177500
*                             condition can occur when the request to * 00177600
*                             Obtain ownership failed or was denied   * 00177700
*                             by the CONTENTION exit of the connected * 00177800
*                             user who has been selected to manage    * 00177900
*                             the resource contention.                * 00178000
*                                                                     * 00178100
*                 xxxx0812    IxlRsnCodeAlreadyOwned:  Resource       * 00178200
*                             specified on REQUEST(OBTAIN) is already * 00178300
*                             owned.                                  * 00178400
*                                                                     * 00178500
*                 xxxx0813    IxlRsnCodeAlreadyPending:  Resource     * 00178600
*                             specified on REQUEST(OBTAIN) is already * 00178700
*                             pending ownership.                      * 00178800
*                                                                     * 00178900
*                 xxxx0816    IxlRsnCodeNoRtExists:  A request which  * 00179000
*                             indicated to WRITE or REACQUIRE a       * 00179100
*                             record data entry was unable to be      * 00179200
*                             processed due to recording not being    * 00179300
*                             active in the lock structure indicated  * 00179400
*                             by the input contoken. For recording to * 00179500
*                             be active, the first user to connect to * 00179600
*                             the lock structure must have specified  * 00179700
*                             RECORD(YES) on its IXLCONN invocation.  * 00179800
*                                                                     * 00179900
*                 xxxx0817    IxlRsnCodeBadConId:  The request to     * 00180000
*                             conditionally reacquire an existing     * 00180100
*                             record data entry based on the          * 00180200
*                             connection in which it is associated    * 00180300
*                             has failed because the record data      * 00180400
*                             entry to be reacquired was not          * 00180500
*                             associated with the connection          * 00180600
*                             indicated by the input CONID keyword.   * 00180700
*                                                                     * 00180800
*                 xxxx0818    IxlRsnCodeNotLockStr:  The contoken     * 00180900
*                             specified does not represent a lock     * 00181000
*                             structure                               * 00181100
*                                                                     * 00181200
*                 xxxx0844    IxlRsnCodeBadId:  The attempt to        * 00181300
*                             REACQUIRE and existing record data      * 00181400
*                             entry has failed because the input      * 00181500
*                             ENTRYID does not designate an existing  * 00181600
*                             record data entry.                      * 00181700
*                                                                     * 00181800
*                 xxxx0876    IxlRsnCodeBadReqNum:  The REQNUM value  * 00181900
*                             specified on an IXLLOCK                 * 00182000
*                             REQUEST(PROCESSMULT) invocation is not  * 00182100
*                             valid. The value must be between 1 and  * 00182200
*                             128 inclusive.  Processing is halted    * 00182300
*                             with no entries in the REQBUFFER having * 00182400
*                             been processed.                         * 00182500
*                                                                     * 00182600
*                 xxxx0877    IxlRsnCodeBadLRBType:  A Lock Request   * 00182700
*                             Block that was inputted on an IXLLOCK   * 00182800
*                             REQUEST(PROCESSMULT) has a value in the * 00182900
*                             LRB_XType field that is not supported   * 00183000
*                             by this level of the service routine.   * 00183100
*                             Processing of the LRBs in the REQBUFFER * 00183200
*                             is halted. If specified, REQPROC will   * 00183300
*                             contain the number of Lock Request      * 00183400
*                             Blocks that were processed completely.  * 00183500
*                                                                     * 00183600
*                 xxxx0878    IxlRsnCodeBadReqBuffer:  XES            * 00183700
*                             encountered an error while attempting   * 00183800
*                             to access storage in the REQBUFFER. If  * 00183900
*                             specified, REQPROC will contain the     * 00184000
*                             number of Lock Request Blocks that were * 00184100
*                             processed completely.                   * 00184200
*                                                                     * 00184300
*                 xxxx0879    IxlRsnCodeBadModeVal:  The MODEVAL      * 00184400
*                             value specified on an IXLLOCK           * 00184500
*                             invocation is not valid.  The value     * 00184600
*                             provided must be equivalent to the      * 00184700
*                             constants provided in the IXLYCON macro * 00184800
*                             indicating possible modes.  (See        * 00184900
*                             IXLMODE... constants in the IXLYCON     * 00185000
*                             macro for more information).            * 00185100
*                                                                     * 00185200
*                 xxxx087A    IxlRsnCodeBadRnameLen:  The RNAMELEN    * 00185300
*                             specified on an IXLLOCK invocation is   * 00185400
*                             not valid. Valid lengths are 1 to 300.  * 00185500
*                                                                     * 00185600
*                 xxxx087B    IxlRsnCodeNoVarRname:  An IXLLOCK       * 00185700
*                             request which specified a variable      * 00185800
*                             length resource name is not valid       * 00185900
*                             because the variable length name        * 00186000
*                             feature is not in effect for the lock   * 00186100
*                             structure represented by the input      * 00186200
*                             contoken.  Please consult the RNAMELEN  * 00186300
*                             keyword on the IXLCONN macro for        * 00186400
*                             information on allocating a lock        * 00186500
*                             structure with this attribute.          * 00186600
*                                                                     * 00186700
*                                                                     * 00186800
*                                                                     * 00186900
*                                                                     * 00187000
*       C         IxlRetCodeEnvError:  Environmental problem.         * 00187100
*                                                                     * 00187200
*                 HEX REASON  MEANING                                 * 00187300
*                                                                     * 00187400
*                 CODE                                                * 00187500
*                                                                     * 00187600
*                                                                     * 00187700
*                 xxxx0C06    IxlRsnCodeNoConn:  No Connectivity to   * 00187800
*                             the Lock structure.  This may occur due * 00187900
*                             to operator commands such as VARY PATH  * 00188000
*                             OFFLINE or CONFIG CHP OFFLINE or        * 00188100
*                             hardware errors such as facility or     * 00188200
*                             path failures.  The contoken will be    * 00188300
*                             invalidated.  The user should           * 00188400
*                             disconnect or rebuild.                  * 00188500
*                                                                     * 00188600
*                 xxxx0C0B    IxlRsnCodeRtFull:  Record portion of    * 00188700
*                             the lock structure is full              * 00188800
*                                                                     * 00188900
*                 xxxx0C0D    IxlRsnCodeSuperseded:  Obtain or Alter  * 00189000
*                             request has been superseded (i.e.       * 00189100
*                             cancelled) by a more current request    * 00189200
*                             for the resource.                       * 00189300
*                                                                     * 00189400
*                 xxxx0C0F    IxlRsnCodeDenied:  Obtain or Alter      * 00189500
*                             request is not granted.  Resource       * 00189600
*                             request is denied (i.e., canceled) by a * 00189700
*                             related connected user that is managing * 00189800
*                             the contention environment for the      * 00189900
*                             resource.                               * 00190000
*                                                                     * 00190100
*                 xxxx0C13    IxlRsnCodeReqPurged:  Prior to          * 00190200
*                             completion of the request, the request  * 00190300
*                             was purged.  Reasons: the connector     * 00190400
*                             failed, the connector disconnected, the * 00190500
*                             requestor failed, the request was       * 00190600
*                             purged by IXLPURGE, or requests were    * 00190700
*                             purged when the connector provided an   * 00190800
*                             IXLEERSP response for the Rebuild Stop  * 00190900
*                             or Rebuild Cleanup event.               * 00191000
*                                                                     * 00191100
*                 xxxx0C25    IxlRsnCodeStrFailure:  Prior to         * 00191200
*                             completion of the request, the lock     * 00191300
*                             structure failed.                       * 00191400
*                                                                     * 00191500
*                 xxxx0C4C    IxlRsnCodeResourceNoLongerOwned:  An    * 00191600
*                             Ixllock Alter or Ixllock Release        * 00191700
*                             request for a resource failed because   * 00191800
*                             the resource is no longer owned.        * 00191900
*                                                                     * 00192000
*                 xxxx0C68    IxlRsnCodeBadReqCFLevel:  The request   * 00192100
*                             type is not permitted for the level of  * 00192200
*                             coupling facility in which the target   * 00192300
*                             structure is allocated.                 * 00192400
*                                                                     * 00192500
*                 xxxx0C69    IxlRsnCodeNoDelay:  An IXLLOCK request  * 00192600
*                             in which the user specified             * 00192700
*                             MODE(SYNCFAIL) encountered a delay. The * 00192800
*                             request is cancelled.                   * 00192900
*                                                                     * 00193000
*                 FFFFFFFF    IxlRsnCodeNotAvailable:  XES functions  * 00193100
*                             are not available.  This can be because * 00193200
*                             the hardware necessary to provide XES   * 00193300
*                             functions is not present.               * 00193400
*                                                                     * 00193500
*                                                                     * 00193600
*                                                                     * 00193700
*                                                                     * 00193800
*       10        IxlRetCodeCompError:  XES processing failure.  The  * 00193900
*                 state of the involved structure and the disposition * 00194000
*                 of the request are unpredictable.                   * 00194100
*                                                                     * 00194200
*                                                                     * 00194300
*                                                                     * 00194400
*01* REASON CODES:                                                    * 00194500
*                                                                     * 00194600
*       Reason codes, as appropriate, are defined under their         * 00194700
*       corresponding return code.  Reason code and return code       * 00194800
*       constants are defined within the IXLYCON macro.               * 00194900
*                                                                     * 00195000
*01* MODULE TYPE:  ASSEM MACRO                                        * 00195100
*                                                                     * 00195200
*02*   PROCESSOR:  ASSEM                                              * 00195300
*                                                                     * 00195400
*01* COMPONENT:  SCIXL                                                * 00195500
*                                                                     * 00195600
*01* DISTRIBUTION LIBRARY: AMACLIB                                    * 00195700
*                                                                     * 00195800
*01* MACRO USAGE NOTES:                                               * 00195900
*                                                                     * 00196000
*                                                                     * 00196100
*    1.  Printing of the macro expansion is controlled by the ZPRINT  * 00196200
*        global macro variable.  Any value other than 'NO' will       * 00196300
*        result in the macro expansion being printed.  The default is * 00196400
*        'YES'.  The following examples illustrate how the ZPRINT     * 00196500
*        variable should be set.                                      * 00196600
*                                                                     * 00196700
*                    GBLC &ZPRINT                                     * 00196800
*            &ZPRINT SETC 'YES'          &ZPRINT SETC 'NO'            * 00196900
*                                                                     * 00197000
*                                                                     * 00197100
*    2.  The  IXLLOCK macro supports multiple versions. The macro key * 00197200
*        list  below  contains the version level in which the key was * 00197300
*        first  introduced.  Positionals  are  identified by the word * 00197400
*        'Positional'  followed by the numeric value of its position. * 00197500
*        Nested  positionals  are  preceded  by their outer key.  The * 00197600
*        lowest value represents the original version and the highest * 00197700
*        value  represents  the  most  recent  version of the IXLLOCK * 00197800
*        macro.    When  specifying  PLISTVER,  be sure that it is at * 00197900
*        least  as high as the highest version number of all the keys * 00198000
*        being used.                                                  * 00198100
*                                                                     * 00198200
*        VERSION   KEY                                                * 00198300
*                                                                     * 00198400
*              0      CONID                                           * 00198500
*                     CONTOKEN                                        * 00198600
*                     ENTRYCOUNT                                      * 00198700
*                     ENTRYID                                         * 00198800
*                     HASHVAL                                         * 00198900
*                     LOCKDATA                                        * 00199000
*                     MODE                                            * 00199100
*                     RDATA                                           * 00199200
*                     RDATAVAL                                        * 00199300
*                     REQUEST                                         * 00199400
*                     RNAME                                           * 00199500
*                     STATE                                           * 00199600
*                     STATEVAL                                        * 00199700
*                     UDATAVAL                                        * 00199800
*                     UPDATERDATA                                     * 00199900
*              1      MODEVAL                                         * 00200000
*                     REQBUFFER                                       * 00200100
*                     REQNUM                                          * 00200200
*                     REQPROC                                         * 00200300
*              2      RNAMELEN                                        * 00200400
*                                                                     * 00200500
*    3.  Specification  of  REQUEST(PROCESSMULT) or MODE(SYNCFAIL) or * 00200600
*        MODE(VALUE)  ON  AN  IXLLOCK  INVOCATION  WILL RESULT IN THE * 00200700
*        GENERATION  OF  A VERSION 1 LEVEL PARAMETER LIST.  USERS WHO * 00200800
*        EXPLICITLY   SPECIFY  PLISTVER  SHOULD  CONSIDER  THIS  WHEN * 00200900
*        SUPPLYING A VALUE FOR THAT KEYWORD.                          * 00201000
*                                                                     * 00201100
*                                                                     * 00201200
*                                                                     * 00201300
*01* CHANGE ACTIVITY:                                                 * 00201400
*                                                                     * 00201500
*   FLAG LINEITEM  FMID    DATE   ID    COMMENT                       * 00201600
*                                                                     * 00201700
*    $L0=SYSLKSMG HBB5510 900112 PD00XB:  LOCKING SUPPORT             * 00201800
*    $L2=SYSLKSRQ HBB5510 910920 PD00T8:  INCREASE SIZE OF UDATAVAL   * 00201900
*                                         TO 64 BYTES PER SPEC REVIEW * 00202000
*                                         COMMENTS                    * 00202100
*    $D2=DIG0018  HBB5510 920401 PD00EO:  CHANGE LOCKMODE KEYWORD TO  * 00202200
*                                         MODE TO BE CONSISTENT WITH  * 00202300
*                                         OTHER IXL EXTERNAL MACROS   * 00202400
*                                         PER >4K SUPPORT             * 00202500
*    $D3=DIG0018  HBB5510 930325 PD00T8:  CHANGE LINKAGE TO BRANCH    * 00202600
*                                         ENTERED                     * 00202700
*    $L1=SYSLKSRQ HBB5510 930325 PD00EO:  RESTRUCTURE PLIST FOR       * 00202800
*                                         PERFORMANCE. ADD EVENT      * 00202900
*                                         FIELD TO PLIST.  PROVIDE    * 00203000
*                                         MAPPINGS OF MULTIPLE FIELDS * 00203100
*                                         TO AID IN COPYING.          * 00203200
*    $D4=DIG0039  HBB5510 930325 PD00EO:  UPDATE KEYWORDS IN SUPPORT  * 00203300
*                                         OF ABILITY TO CHANGE        * 00203400
*                                         RDATAVAL IN THE CONTENTION  * 00203500
*                                         EXIT.                       * 00203600
*    $D5=DIG0162  HBB5510 930909 PD00EO:  ADD ENTRYCOUNT KEYWORD      * 00203700
*    $P1=PIG3706  HBB5510 931119 PD00AO:  EXPAND RSNCODE DESCRIPTIONS * 00203800
*    $P2=PIG5106  HBB5510 940124 PD00CJ:  ADDED SYSSTATE TO PROLOGUE  * 00203900
*    $L2=SYSLKSRQ HBB5510 940121 PD00EO:  HAVE MACRO SWITCH TO AR     * 00204000
*                                         MODE RATHER THAN LETTING    * 00204100
*                                         SERVICE ROUTINE DO THIS     * 00204200
*    $P3=PIG5178  HBB5510 940314 PD00EO:  PERFORMANCE                 * 00204300
*    $O1=OW11619  HBB5510 950415 PD00EO:  MUST CLEAR AR13 WHEN        * 00204400
*                                         INVOKED BY PRIMARY MODE     * 00204500
*                                         CALLERS                     * 00204600
*    $O2=OW15590  HBB5520 950909 PD00EO:  ADD MODE(SYNCFAIL),         * 00204700
*                                         REQUEST(PROCESSMULT) AND    * 00204800
*                                         MODEVAL KEYWORDS.           * 00204900
*    $P4=PSD0647  JBB6602 960201 PD00EO:  ADD IXLRSNCODENOVARRNAME    * 00205000
*                                         RETURN CODE TO PROLOG.      * 00205100
*    $P5=PSD0633  JBB6602 960201 PD00EO:  FURTHER UPDATES FOR         * 00205200
*                                         RNAMELEN.                   * 00205300
*    $P6=PSD1087  JBB6602 960601 PD00EO:  HANDLE SPECIFICATION OF     * 00205400
*                                         DEFAULT FOR RNAMELEN        * 00205500
*                                         KEYWORD.                    * 00205600
*    $03=OW33342  HBB5520 980414 PD00FR:  VSAM RT SUPPORT             * 00205700
*    $P7=PWK0016  HBB6608 980818 PD00S7:  ADD                         * 00205800
*                                         IXLRSNCODERESOURCENOLONGERO * 00205900
*                                         WNED RETURN CODE TO PROLOG. * 00206000
*    $P8=PWK0178  HBB6608 980818 PD00S7:  FIX FOR PWK0016             * 00206100
****** END OF SPECIFICATIONS *****************************************/ 00206200
*/* TLINE 1 *********************************************************** 00206300
         MACRO                                                          00206400
&XLABEL  IXLLOCK &CONTOKEN=,&REQUEST=,&RNAME=,&RNAMELEN=,&HASHVAL=,    *00206500
               &LOCKDATA=,&STATE=,&STATEVAL=,&UDATAVAL=,&RDATA=,       *00206600
               &RDATAVAL=,&ENTRYID=,&ENTRYCOUNT=,&CONID=,&UPDATERDATA=,*00206700
               &MODE=,&MODEVAL=,&REQBUFFER=,&REQNUM=,&REQPROC=,        *00206800
               &RETCODE=,&RSNCODE=,&PLISTVER=,&MF=                      00206900
.*                                                                      00207000
*                 MACDATE -02/26/99-<2>                                 00207100
.*                                                                      00207200
.*******************************************************************    00207300
.***AB.02  GLOBAL VARIABLES TO CONTROL PRINT AND CODE GENERATION        00207400
.*******************************************************************    00207500
                 GBLC  &ZPRINT     YES=PRINT NO=NO PRINT                00207600
                 GBLC  &ZTEST      YES=TEST NO=NO TEST                  00207700
                 GBLC  &ZSYSTEM    PCCODE10, MVS, SAK, VM, XAX          00207800
.*                                                                      00207900
                 GBLC  &ZIXLLOCK   YES=MACRO USED AT LEAST ONCE         00208000
.*******************************************************************    00208100
.***AB.03  COMMONLY USED LOCAL MACRO VARIABLES                          00208200
.*******************************************************************    00208300
                 LCLC  &ZMS        ERROR MESSAGE WORK AREA              00208400
                 LCLC  &ZCNDX      LAST THREE SYSNDX CHARACTERS         00208500
                 LCLC  &ZCLNG      USED WHEN LENGTH IS NEEDED           00208600
                 LCLC  &ZCGPR      USED WHEN VALUE IS IN A GPR          00208700
                 LCLC  &ZCVAL      USED TO CONTAIN FIXED VALUE          00208800
                 LCLA  &ZAWRK      USED AS A WORK AREA                  00208900
                 LCLA  &ZASIZ      USED FOR SIZE OF VALUE               00209000
                 LCLA  &ZN         NUMERIC WORK VARIABLE                00209100
                 LCLC  &ZC         CHARACTER WORK VARIABLE              00209200
                 LCLC  &ZTLC       CHARACTER TOO LONG VARIABLE          00209300
                 LCLA  &ZTLA       VALUE TOO LONG VARIABLE              00209400
                 LCLA  &ZMACRET    MACRO RETURN CODE                    00209500
&ZMACRET         SETA  0           ASSUME NO ERRORS                     00209600
.*                                                                      00209700
                 LCLC  &ZCSYSLIST(255)          NONXKEY, POS ARRAY      00209800
                 LCLA  &ZASYSLNDX  WORK INDEX FOR ZCSYSLIST()           00209900
                 LCLA  &ZPLLEN     PARAMETER LIST LENGTH                00210000
                 LCLC  &ZENDBASEPL              END OF BASE PL          00210100
                 LCLA  &ZPLWORKA   PARAMETER LIST LENGTH                00210200
.*******************************************************************    00210300
.***AB.04  MACRO VARIABLES FOR RANGES AND SETS OF ARGUMENTS             00210400
.*******************************************************************    00210500
                 LCLA  &ZI         INDEX FOR ARRAY                      00210600
                 LCLA  &ZJ         INDEX FOR PARMS                      00210700
                 LCLA  &ZK         INDEX FOR PARSE                      00210800
                 LCLA  &ZLO        LOW RANGE VALUE                      00210900
                 LCLA  &ZHI        HIGH RANGE VALUE                     00211000
                 LCLC  &ZW         WORK AREA FOR PARM                   00211100
.********************************************************************   00211200
.***AB.05  INVOKE MVS MACROS TO CONTROL CODE GENERATION                 00211300
.********************************************************************   00211400
                 GBLC  &SYSSPLV    SP LEVEL 1,2,3 -SPLEVEL              00211500
                 GBLC  &SYSASCE    SYSTEM STATE P ANY AR-SYSSTATE       00211600
.*                                                                      00211700
                 AIF   (K'&SYSASCE GT 0).ZSYS4  SYS STATE DEFINED       00211800
                 AIF   (K'&SYSSPLV GT 0).ZSYS2  SP LEVEL DEFINED        00211900
                 SPLEVEL  TEST                                          00212000
.ZSYS2           ANOP  ,                                                00212100
                 AIF   ('&SYSSPLV' EQ '1').ZSYS3  PRE SP 3.1            00212200
                 AIF   ('&SYSSPLV' EQ '2').ZSYS3  PRE SP 3.1            00212300
                 SYSSTATE TEST                                          00212400
                 AGO   .ZSYS4                                           00212500
.ZSYS3           ANOP  ,                                                00212600
&SYSASCE         SETC  'P'         ASSUME SYSSTATE PRIMARY              00212700
.ZSYS4           ANOP  ,                                                00212800
.*******************************************************************    00212900
.***AB.07  DEFINE ALL MACRO VARIABLES                                   00213000
.*******************************************************************    00213100
                 LCLC  &XCONTOKEN  ++ NAME                              00213200
                 LCLC  &XREQUEST   ++ VALUE                             00213300
                 LCLC  &XRNAME     ++ NAME                              00213400
                 LCLC  &XRNAMELEN  ++ NAME                              00213500
                 LCLC  &XHASHVAL   ++ NAME                              00213600
                 LCLC  &XLOCKDATA  ++ NAME                              00213700
                 LCLC  &XSTATE     ++ VALUE                             00213800
                 LCLC  &XSTATEVAL  ++ NAME                              00213900
                 LCLC  &XUDATAVAL  ++ NAME                              00214000
                 LCLC  &XRDATA     ++ VALUE                             00214100
                 LCLC  &XRDATAVAL  ++ NAME                              00214200
                 LCLC  &XENTRYID   ++ NAME                              00214300
                 LCLC  &XENTRYCOUNT             ++ NAME                 00214400
                 LCLC  &XCONID     ++ NAME                              00214500
                 LCLC  &XUPDATERDATA            ++ VALUE                00214600
                 LCLC  &XMODE      ++ VALUE                             00214700
                 LCLC  &XMODEVAL   ++ NAME                              00214800
                 LCLC  &XREQBUFFER              ++ NAME                 00214900
                 LCLC  &XREQNUM    ++ NAME                              00215000
                 LCLC  &XREQPROC   ++ NAME                              00215100
                 LCLC  &XRETCODE   ++ NAME                              00215200
                 LCLC  &XRSNCODE   ++ NAME                              00215300
                 LCLA  &XPLISTVER  ++ VALUE                             00215400
                 LCLC  &XMF        ++ VALUE                             00215500
                 LCLC  &XMFCTRL    ++ NAME                              00215600
                 LCLC  &XMFATTR    ++ VALUE                             00215700
                 LCLC  &XMFSCK     ++ VALUE                             00215800
.*******************************************************************    00215900
.***AB.13  DEFINE MACRO VARIABLES FOR INPUT/OUTPUT PROCESSING           00216000
.*******************************************************************    00216100
                 LCLC  &ZXCONTOKEN              ++ INPUT NAME           00216200
                 LCLC  &ZXREQUEST  ++ INPUT VALUE                       00216300
                 LCLC  &ZXRNAME    ++ INPUT NAME                        00216400
                 LCLC  &ZXRNAMELEN              ++ INPUT NAME           00216500
                 LCLC  &ZXHASHVAL  ++ INPUT NAME                        00216600
                 LCLC  &ZXLOCKDATA              ++ INPUT NAME           00216700
                 LCLC  &ZXSTATE    ++ INPUT VALUE                       00216800
                 LCLC  &ZXSTATEVAL              ++ INOUT NAME           00216900
                 LCLC  &ZXUDATAVAL              ++ INOUT NAME           00217000
                 LCLC  &ZXRDATA    ++ INPUT VALUE                       00217100
                 LCLC  &ZXRDATAVAL              ++ INOUT NAME           00217200
                 LCLC  &ZXENTRYID  ++ OUTPUT NAME                       00217300
                 LCLC  &ZXENTRYCOUNT            ++ OUTPUT NAME          00217400
                 LCLC  &ZXCONID    ++ INPUT NAME                        00217500
                 LCLC  &ZXUPDATERDATA           ++ INPUT VALUE          00217600
                 LCLC  &ZXMODE     ++ INPUT VALUE                       00217700
                 LCLC  &ZXMODEVAL  ++ INPUT NAME                        00217800
                 LCLC  &ZXREQBUFFER             ++ INPUT NAME           00217900
                 LCLC  &ZXREQNUM   ++ INPUT NAME                        00218000
                 LCLC  &ZXREQPROC  ++ OUTPUT NAME                       00218100
                 LCLC  &ZXRETCODE  ++ OUTPUT NAME                       00218200
                 LCLC  &ZXRSNCODE  ++ OUTPUT NAME                       00218300
                 LCLC  &ZXPLISTVER              ++ INPUT VALUE          00218400
                 LCLC  &ZXMF       ++ INPUT VALUE                       00218500
                 LCLC  &ZXMFCTRL   ++ INPUT NAME                        00218600
                 LCLC  &ZXMFATTR   ++ INPUT VALUE                       00218700
                 LCLC  &ZXMFSCK    ++ INPUT VALUE                       00218800
.********************************************************************   00218900
.***AC.PLV01  PROCESS PLISTVER                                      *   00219000
.********************************************************************   00219100
&XPLISTVER      SETA  0                                                 00219200
                AIF   (K'&PLISTVER(1) LE 0).ZPLV0                       00219300
                AIF   ('&PLISTVER(1)' NE 'MAX').ZPLV0                   00219400
&XPLISTVER      SETA  2                                                 00219500
.ZPLV0          ANOP  ,                                                 00219600
.*                                                                      00219700
                AIF   ('&RNAMELEN' EQ '').ZPLV1E                        00219800
                AIF   (&XPLISTVER GE 2).ZPLV1E                          00219900
&XPLISTVER      SETA  2                                                 00220000
.ZPLV1E         ANOP  ,                                                 00220100
.*                                                                      00220200
                AIF   ('&MODEVAL' EQ '').ZPLV2E                         00220300
                AIF   (&XPLISTVER GE 1).ZPLV2E                          00220400
&XPLISTVER      SETA  1                                                 00220500
.ZPLV2E         ANOP  ,                                                 00220600
.*                                                                      00220700
                AIF   ('&RNAMELEN' EQ '').ZPLV3E                        00220800
                AIF   (&XPLISTVER GE 2).ZPLV3E                          00220900
&XPLISTVER      SETA  2                                                 00221000
.ZPLV3E         ANOP  ,                                                 00221100
.*                                                                      00221200
                AIF   ('&MODEVAL' EQ '').ZPLV4E                         00221300
                AIF   (&XPLISTVER GE 1).ZPLV4E                          00221400
&XPLISTVER      SETA  1                                                 00221500
.ZPLV4E         ANOP  ,                                                 00221600
.*                                                                      00221700
                AIF   ('&RNAMELEN' EQ '').ZPLV5E                        00221800
                AIF   (&XPLISTVER GE 2).ZPLV5E                          00221900
&XPLISTVER      SETA  2                                                 00222000
.ZPLV5E         ANOP  ,                                                 00222100
.*                                                                      00222200
                AIF   ('&MODEVAL' EQ '').ZPLV6E                         00222300
                AIF   (&XPLISTVER GE 1).ZPLV6E                          00222400
&XPLISTVER      SETA  1                                                 00222500
.ZPLV6E         ANOP  ,                                                 00222600
.*                                                                      00222700
                AIF   ('&REQBUFFER' EQ '').ZPLV7E                       00222800
                AIF   (&XPLISTVER GE 1).ZPLV7E                          00222900
&XPLISTVER      SETA  1                                                 00223000
.ZPLV7E         ANOP  ,                                                 00223100
.*                                                                      00223200
                AIF   ('&REQNUM' EQ '').ZPLV8E                          00223300
                AIF   (&XPLISTVER GE 1).ZPLV8E                          00223400
&XPLISTVER      SETA  1                                                 00223500
.ZPLV8E         ANOP  ,                                                 00223600
.*                                                                      00223700
                AIF   ('&REQPROC' EQ '').ZPLV9E                         00223800
                AIF   (&XPLISTVER GE 1).ZPLV9E                          00223900
&XPLISTVER      SETA  1                                                 00224000
.ZPLV9E         ANOP  ,                                                 00224100
.*                                                                      00224200
                AIF   (K'&PLISTVER(1) LE 0).ZPVCKE                      00224300
                AIF   ('&PLISTVER(1)' EQ 'IMPLIED_VERSION').ZPVCKE      00224400
                AIF   ('&PLISTVER(1)' EQ 'MAX').ZPVCKE                  00224500
.*-------------------------------------------------------------------   00224600
                AIF   (N'&PLISTVER LE 1).ZPVCK3  CK NUM                 00224700
&ZMS            SETC  '"PLISTVER='         *KPOSA* MNOTE                00224800
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00224900
&ZMS            SETC  '&ZMS "PLISTVER"'                                 00225000
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00225100
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00225200
                AGO   .ZPVCK2                                           00225300
.ZPVCK3         ANOP  ,                                                 00225400
.*-------------------------------------------------------------------   00225500
                AIF   ('&PLISTVER'(1,1) NE '(').ZPVCK2                  00225600
&ZMS            SETC  '"PLISTVER='         *KGPRA* MNOTE                00225700
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00225800
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         00225900
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'                 00226000
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00226100
                AGO   .ZPVCKE                                           00226200
.ZPVCK2         ANOP  ,                                                 00226300
.*-------------------------------------------------------------------   00226400
&ZCVAL          SETC  '&PLISTVER(1)'                                    00226500
                AIF   ('&ZCVAL'(1,1) EQ '(').ZPVCKE  IN GPR             00226600
                AIF   (T'&ZCVAL NE 'N').ZPVCK6  NUMERIC ERR             00226700
&ZN             SETA   &PLISTVER(1)        CONVERT TO ARITHMETIC        00226800
                AIF   (&ZN LT 0).ZPVCK6    TOO LOW                      00226900
                AIF   (&ZN LE 2).ZPVCK4A   NOT HIGH                     00227000
.ZPVCK6         ANOP  ,                                                 00227100
&ZMS            SETC  '"PLISTVER='         *KRNGA* MNOTE                00227200
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00227300
&ZMS            SETC  '&ZMS THE RANGE IS "0-2"'                         00227400
                MNOTE 8,' &ZMS FOR ARGUMENT 1.'                         00227500
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00227600
&XPLISTVER      SETA  2                                                 00227700
                AGO   .ZPVCKE                                           00227800
.*-------------------------------------------------------------------   00227900
.ZPVCK4A        ANOP  ,                                                 00228000
                AIF   (&ZN GE &XPLISTVER).ZPVCK4                        00228100
&ZMS            SETC  'PLISTVER='          *KVALA* MNOTE                00228200
&ZMS            SETC  '&ZMS.&PLISTVER(1)'                               00228300
&ZMS            SETC  '&ZMS., BUT PLISTVER OF'                          00228400
&ZMS            SETC  '&ZMS &XPLISTVER'                                 00228500
                MNOTE 8,' &ZMS IS REQUIRED.'                            00228600
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00228700
                AGO   .ZPVCK5                                           00228800
.ZPVCK4         ANOP  ,                                                 00228900
&XPLISTVER      SETA  &PLISTVER(1)                                      00229000
.ZPVCK5         ANOP  ,                                                 00229100
.ZPVCKE         ANOP  ,                                                 00229200
.********************************************************************   00229300
.***AG.MF01 PROCESS MF MACRO FORMS                                      00229400
.********************************************************************   00229500
                 ACTR  10000                                            00229600
.*------------------------------------------------------------------    00229700
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00229800
&XMF             SETC  ''          INITIALIZE XVARIABLE                 00229900
.*-------------------------------------------------------------------   00230000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00230100
.ZG175           ANOP  ,                                                00230200
&ZTLC            SETC 'S'                                               00230300
                 AIF   ('&MF(1)' NE '&ZTLC').ZG176                      00230400
&XMF             SETC  'S'         SET KEYWORD                          00230500
                 AIF   (N'&MF LE 1).ZG175A      CK NUM                  00230600
&ZMS             SETC  '"MF='      *KPOSA* MNOTE                        00230700
&ZMS             SETC  '&ZMS.&MF"'                                      00230800
&ZMS             SETC  '&ZMS "MF"'                                      00230900
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00231000
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00231100
.ZG175A          ANOP  ,                                                00231200
.*-------------------------------------------------------------------   00231300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00231400
.ZG176           ANOP  ,                                                00231500
&ZTLC            SETC 'L'                                               00231600
                 AIF   ('&MF(1)' NE '&ZTLC').ZG183                      00231700
&XMF             SETC  'L'         SET KEYWORD                          00231800
                 AIF   (N'&MF LE 3).ZG176A      CK NUM                  00231900
&ZMS             SETC  '"MF='      *KPOSA* MNOTE                        00232000
&ZMS             SETC  '&ZMS.&MF"'                                      00232100
&ZMS             SETC  '&ZMS "MF"'                                      00232200
                 MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'             00232300
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00232400
.ZG176A          ANOP  ,                                                00232500
.*-------------------------------------------------------------------   00232600
.***AG.KKCTL08 -MF(L) SPECIAL CHECK                                     00232700
                 AIF   (N'&SYSLIST NE 0).ZG176B  POSITIONALS?           00232800
                 AIF   ('&CONTOKEN' NE '').ZG176B  KEYS?                00232900
                 AIF   ('&REQUEST' NE '').ZG176B  KEYS?                 00233000
                 AIF   ('&RNAME' NE '').ZG176B  KEYS?                   00233100
                 AIF   ('&RNAMELEN' NE '').ZG176B  KEYS?                00233200
                 AIF   ('&HASHVAL' NE '').ZG176B  KEYS?                 00233300
                 AIF   ('&LOCKDATA' NE '').ZG176B  KEYS?                00233400
                 AIF   ('&STATE' NE '').ZG176B  KEYS?                   00233500
                 AIF   ('&STATEVAL' NE '').ZG176B  KEYS?                00233600
                 AIF   ('&UDATAVAL' NE '').ZG176B  KEYS?                00233700
                 AIF   ('&RDATA' NE '').ZG176B  KEYS?                   00233800
                 AIF   ('&RDATAVAL' NE '').ZG176B  KEYS?                00233900
                 AIF   ('&ENTRYID' NE '').ZG176B  KEYS?                 00234000
                 AIF   ('&ENTRYCOUNT' NE '').ZG176B  KEYS?              00234100
                 AIF   ('&CONID' NE '').ZG176B  KEYS?                   00234200
                 AIF   ('&UPDATERDATA' NE '').ZG176B  KEYS?             00234300
                 AIF   ('&MODE' NE '').ZG176B   KEYS?                   00234400
                 AIF   ('&MODEVAL' NE '').ZG176B  KEYS?                 00234500
                 AIF   ('&REQBUFFER' NE '').ZG176B  KEYS?               00234600
                 AIF   ('&REQNUM' NE '').ZG176B  KEYS?                  00234700
                 AIF   ('&REQPROC' NE '').ZG176B  KEYS?                 00234800
                 AIF   ('&RETCODE' NE '').ZG176B  KEYS?                 00234900
                 AIF   ('&RSNCODE' NE '').ZG176B  KEYS?                 00235000
                 AGO    .ZG176C    INVOCATION OKAY                      00235100
.ZG176B          ANOP  ,                                                00235200
&ZMS             SETC  'THE "L" FORM OF "MF"'   *MFLA* MNOTE            00235300
&ZMS             SETC  '&ZMS CAN ONLY HAVE'                             00235400
&ZMS             SETC  '&ZMS THE "PLISTVER" KEY'                        00235500
                 MNOTE 8,' &ZMS SPECIFIED ON THE INVOCATION.'           00235600
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00235700
.ZG176C          ANOP  ,                                                00235800
.*-------------------------------------------------------------------   00235900
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00236000
&ZXMFCTRL        SETC  'INPUT'     SET IN/OUTPUT                        00236100
&XMFCTRL         SETC  '&MF(2,1)'  SET XVARIABLE                        00236200
                 AIF   (N'&MF(2) GT 1).ZG178B   MULTI PARMS             00236300
&XMFCTRL         SETC  '&MF(2)'    SET XVARIABLE                        00236400
.ZG178B          AIF   (K'&MF(2) GT 0).ZG178C                           00236500
&ZXMFCTRL        SETC  ''          RESET IN/OUTPUT                      00236600
&ZMS             SETC  'WHEN "L" IS SPECIFIED'  *KRQDA*                 00236700
&ZMS             SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'              00236800
                 MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                     00236900
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00237000
.ZG178C          ANOP  ,                                                00237100
.*-------------------------------------------------------------------   00237200
.***AG.KCK01 NAME, OPT RQD INPUT, POS(2) -GPR NOT ALLOWED               00237300
                 AIF   (K'&ZXMFCTRL LE 0).ZG178P  NOT I/O               00237400
                 AIF   ('&XMFCTRL'(1,1) NE '(').ZG178P                  00237500
&ZXMFCTRL        SETC  ''          RESET IN/OUTPUT                      00237600
&ZMS             SETC  '"MF='      *KGPRA* MNOTE                        00237700
&ZMS             SETC  '&ZMS.&MF"'                                      00237800
&ZMS             SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'        00237900
                 MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 2.'                00238000
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00238100
.ZG178P          ANOP  ,                                                00238200
.*-------------------------------------------------------------------   00238300
.***AG.KXVAR13 VALUE, OPT INPUT, POS(3) -XVARIABLE                      00238400
&ZXMFATTR        SETC  'INPUT'     SET IN/OUTPUT                        00238500
&XMFATTR         SETC  '0D'                                             00238600
                 AIF   (K'&MF(3) LE 0).ZG181B   PARM                    00238700
&XMFATTR         SETC  '&MF(3,1)'  SET XVARIABLE                        00238800
                 AIF   (N'&MF(3) GT 1).ZG181B   MULTI PARMS             00238900
&XMFATTR         SETC  '&MF(3)'    SET XVARIABLE                        00239000
.ZG181B          ANOP  ,                                                00239100
.*-------------------------------------------------------------------   00239200
.***AG.KCK01 VALUE, OPT INPUT, POS(3) -GPR NOT ALLOWED                  00239300
                 AIF   (K'&ZXMFATTR LE 0).ZG181P  NOT I/O               00239400
                 AIF   ('&XMFATTR'(1,1) NE '(').ZG181P                  00239500
&ZXMFATTR        SETC  ''          RESET IN/OUTPUT                      00239600
&ZMS             SETC  '"MF='      *KGPRA* MNOTE                        00239700
&ZMS             SETC  '&ZMS.&MF"'                                      00239800
&ZMS             SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'        00239900
                 MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 3.'                00240000
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00240100
.ZG181P          ANOP  ,                                                00240200
.*-------------------------------------------------------------------   00240300
.***AG.KCK03 VALUE, OPT INPUT, POS(3) -CHARACTER LENGTH                 00240400
                 AIF   (K'&ZXMFATTR LE 0).ZG181S  NOT I/O               00240500
                 AIF   (K'&XMFATTR LE 60).ZG181S  LNG OK                00240600
&ZXMFATTR        SETC  ''          RESET IN/OUTPUT                      00240700
&ZMS             SETC  '"MF='      *KLNGA* MNOTE                        00240800
&ZMS             SETC  '&ZMS.&MF"'                                      00240900
&ZMS             SETC  '&ZMS ARGUMENT 3 EXCEEDS THE MAXIMUM'            00241000
                 MNOTE 8,' &ZMS LENGTH OF 60 CHARACTERS.'               00241100
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00241200
.ZG181S          ANOP  ,                                                00241300
.*-------------------------------------------------------------------   00241400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00241500
.ZG183           ANOP  ,                                                00241600
&ZTLC            SETC 'E'                                               00241700
                 AIF   ('&MF(1)' NE '&ZTLC').ZG191                      00241800
&XMF             SETC  'E'         SET KEYWORD                          00241900
                 AIF   (N'&MF LE 3).ZG183A      CK NUM                  00242000
&ZMS             SETC  '"MF='      *KPOSA* MNOTE                        00242100
&ZMS             SETC  '&ZMS.&MF"'                                      00242200
&ZMS             SETC  '&ZMS "MF"'                                      00242300
                 MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'             00242400
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00242500
.ZG183A          ANOP  ,                                                00242600
.*-------------------------------------------------------------------   00242700
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00242800
&ZXMFCTRL        SETC  'INPUT'     SET IN/OUTPUT                        00242900
&XMFCTRL         SETC  '&MF(2,1)'  SET XVARIABLE                        00243000
                 AIF   (N'&MF(2) GT 1).ZG185B   MULTI PARMS             00243100
&XMFCTRL         SETC  '&MF(2)'    SET XVARIABLE                        00243200
.ZG185B          AIF   (K'&MF(2) GT 0).ZG185C                           00243300
&ZXMFCTRL        SETC  ''          RESET IN/OUTPUT                      00243400
&ZMS             SETC  'WHEN "E" IS SPECIFIED'  *KRQDA*                 00243500
&ZMS             SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'              00243600
                 MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                     00243700
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00243800
.ZG185C          ANOP  ,                                                00243900
.*-------------------------------------------------------------------   00244000
.***AG.KCK02 NAME, OPT RQD INPUT, POS(2) -GPR OUT OF RANGE              00244100
                 AIF   (K'&ZXMFCTRL LE 0).ZG185R  NOT I/O               00244200
                 AIF   ('&XMFCTRL'(1,1) NE '(').ZG185R                  00244300
&ZCGPR           SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)                       00244400
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG185P                    00244500
                 AIF   (K'&ZCGPR GT 2).ZG185Q                           00244600
                 AIF   ('&ZCGPR' EQ '0').ZG185Q                         00244700
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00244800
                 AIF   (T'&ZCGPR NE 'N').ZG185Q  INVALID REG NAME       00244900
.ZG185P          ANOP  ,                                                00245000
                 AIF   (T'&ZCGPR NE 'N').ZG185R  NON NUMERIC            00245100
                 AIF   ('&ZCGPR' LT '1').ZG185Q                         00245200
                 AIF   ('&ZCGPR' LE '12').ZG185R                        00245300
.ZG185Q          ANOP  ,                                                00245400
&ZMS             SETC  '"MF='      *KGPRA* MNOTE                        00245500
&ZMS             SETC  '&ZMS.&MF"'                                      00245600
&ZMS             SETC  '&ZMS ARGUMENT 2 MUST SPECIFY A REGISTER'        00245700
                 MNOTE 8,' &ZMS IN THE RANGE (1)-(12).'                 00245800
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00245900
.ZG185R          ANOP  ,                                                00246000
.*-------------------------------------------------------------------   00246100
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00246200
&XMFSCK          SETC  ''          INITIALIZE XVARIABLE                 00246300
.ZG189A   AIF   ('&MF(3)' NE 'COMPLETE').ZG190A                         00246400
&XMFSCK          SETC  'COMPLETE'  SET KEYWORD                          00246500
.*-------------------------------------------------------------------   00246600
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00246700
.ZG190A          AIF   (K'&XMFSCK GT 0).ZG190C  KEYWORD                 00246800
                 AIF   (K'&MF(3) LE 0).ZG190B                           00246900
&ZMS             SETC  '"MF='      *KUKWA* MNOTE                        00247000
&ZMS             SETC  '&ZMS.&MF"'                                      00247100
&ZMS             SETC  '&ZMS ARGUMENT 3 IS AN UNKNOWN KEYWORD. '        00247200
&ZMS             SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'              00247300
&ZMS             SETC  '&ZMS "COMPLETE".'                               00247400
                 MNOTE 8,' &ZMS '                                       00247500
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00247600
.ZG190B          ANOP  ,                                                00247700
&XMFSCK          SETC  'COMPLETE'  SET DEFAULT KEYWORD                  00247800
.ZG190C          ANOP  ,                                                00247900
&ZXMFSCK         SETC  'INPUT'     SET IN/OUTPUT                        00248000
.*------------------------------------------------------------------    00248100
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00248200
.ZG191           ANOP  ,                                                00248300
&ZXMF            SETC  'INPUT'     SET IN/OUTPUT                        00248400
                 AIF   (K'&XMF GT 0).ZG191E     VALID ARG               00248500
                 AIF   (T'&MF EQ 'O').ZG191D    OMITTED                 00248600
&ZASYSLNDX       SETA  0                                                00248700
.ZG191A          ANOP  ,           POSITIONAL MACRO KEY                 00248800
&ZASYSLNDX       SETA  &ZASYSLNDX+1                                     00248900
                 AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG191C                00249000
&ZTLC            SETC 'MF'                                              00249100
                 AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG191A       00249200
.ZG191B          ANOP  ,                                                00249300
&ZXMF            SETC  ''          RESET IN/OUTPUT                      00249400
&ZMS             SETC  'THE "MF" KEY'           *KOPTA* MNOTE           00249500
&ZMS             SETC  '&ZMS MUST CONTAIN ONE'                          00249600
                 MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                 00249700
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00249800
                 AGO   .ZG191E                                          00249900
.ZG191C          ANOP  ,                                                00250000
&ZXMF            SETC  ''          RESET IN/OUTPUT                      00250100
&ZMS             SETC  '"MF='      *KUKWA* MNOTE                        00250200
&ZMS             SETC  '&ZMS.&MF"'                                      00250300
&ZMS             SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '        00250400
&ZMS             SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'              00250500
&ZMS             SETC  '&ZMS "S",'                                      00250600
&ZMS             SETC  '&ZMS "L",'                                      00250700
&ZMS             SETC  '&ZMS OR "E".'                                   00250800
                 MNOTE 8,' &ZMS '                                       00250900
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00251000
                 AGO   .ZG191E                                          00251100
.ZG191D          ANOP  ,                                                00251200
&XMF             SETC  'S'         SET DEFAULT KEYWORD                  00251300
&XMFSCK          SETC  'COMPLETE'  COMPLETE CHECKING                    00251400
.ZG191E          ANOP  ,                                                00251500
.********************************************************************   00251600
.***AG.MF02  FULL MACRO SYNTAX CHECKING                                 00251700
.********************************************************************   00251800
                 ACTR  10000                                            00251900
.*-------------------------------------------------------------------   00252000
.***AG.MF03 MF=(SLE)                                                    00252100
                 AIF   ('&XMF' EQ 'L').ZGMFX                            00252200
.*----------------------------------------------------------------***   00252300
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00252400
                 AIF   (N'&CONTOKEN LE 1).ZG2A  CK NUM                  00252500
&ZMS             SETC  '"CONTOKEN='             *KPOSA* MNOTE           00252600
&ZMS             SETC  '&ZMS.&CONTOKEN"'                                00252700
&ZMS             SETC  '&ZMS "CONTOKEN"'                                00252800
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00252900
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00253000
.ZG2A            ANOP  ,                                                00253100
.*-------------------------------------------------------------------   00253200
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00253300
&ZXCONTOKEN      SETC  'INPUT'     SET IN/OUTPUT                        00253400
&XCONTOKEN       SETC  '&CONTOKEN(1)'           SET XVARIABLE           00253500
                 AIF   (N'&CONTOKEN GT 1).ZG2B  MULTI PARMS             00253600
&XCONTOKEN       SETC  '&CONTOKEN'              SET XVARIABLE           00253700
.ZG2B            AIF   (K'&CONTOKEN(1) GT 0).ZG2C                       00253800
&ZXCONTOKEN      SETC  ''          RESET IN/OUTPUT                      00253900
&ZMS             SETC  ' '         *KRQDA*                              00254000
&ZMS             SETC  '&ZMS "CONTOKEN" KEY AND ITS'                    00254100
                 MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                 00254200
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00254300
.ZG2C            ANOP  ,                                                00254400
.*-------------------------------------------------------------------   00254500
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00254600
                 AIF   (K'&ZXCONTOKEN LE 0).ZG2R  NOT I/O               00254700
                 AIF   ('&XCONTOKEN'(1,1) NE '(').ZG2R                  00254800
&ZCGPR           SETC  '&XCONTOKEN'(2,K'&XCONTOKEN-2)                   00254900
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG2P                      00255000
                 AIF   (K'&ZCGPR GT 2).ZG2Q                             00255100
                 AIF   ('&ZCGPR' EQ '0').ZG2Q                           00255200
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00255300
                 AIF   (T'&ZCGPR NE 'N').ZG2Q   INVALID REG NAME        00255400
.ZG2P            ANOP  ,                                                00255500
                 AIF   (T'&ZCGPR NE 'N').ZG2R   NON NUMERIC             00255600
                 AIF   ('&ZCGPR' LT '2').ZG2Q                           00255700
                 AIF   ('&ZCGPR' LE '12').ZG2R                          00255800
.ZG2Q            ANOP  ,                                                00255900
&ZMS             SETC  '"CONTOKEN='             *KGPRA* MNOTE           00256000
&ZMS             SETC  '&ZMS.&CONTOKEN"'                                00256100
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00256200
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00256300
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00256400
.ZG2R            ANOP  ,                                                00256500
.*------------------------------------------------------------------    00256600
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00256700
&XREQUEST        SETC  ''          INITIALIZE XVARIABLE                 00256800
.*-------------------------------------------------------------------   00256900
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00257000
.ZG6             ANOP  ,                                                00257100
                 AIF   (K'&REQUEST(1) LE 0).ZG6A                        00257200
&ZTLC            SETC 'OBTAIN'                                          00257300
                 AIF   ('&REQUEST(1)' NE '&ZTLC').ZG70                  00257400
&XREQUEST        SETC  'OBTAIN'    SET KEYWORD                          00257500
                 AIF   (N'&REQUEST LE 1).ZG6A   CK NUM                  00257600
&ZMS             SETC  '"REQUEST='              *KPOSA* MNOTE           00257700
&ZMS             SETC  '&ZMS.&REQUEST"'                                 00257800
&ZMS             SETC  '&ZMS "REQUEST"'                                 00257900
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00258000
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00258100
.ZG6A            ANOP  ,                                                00258200
.*------------------------------------------------------------------    00258300
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00258400
&ZCVAL           SETC ''           CLEAR ERROR KEY ACCUMULATOR          00258500
.ZG6A0           AIF   (K'&REQBUFFER LE 0).ZG6A1  OK                    00258600
&ZCVAL           SETC '&ZCVAL REQBUFFER'        INCORRECT KEY USED      00258700
.ZG6A1           AIF   (K'&REQNUM LE 0).ZG6A2   OK                      00258800
&ZCVAL           SETC '&ZCVAL REQNUM'           INCORRECT KEY USED      00258900
.ZG6A2           AIF   (K'&REQPROC LE 0).ZG6A3  OK                      00259000
&ZCVAL           SETC '&ZCVAL REQPROC'          INCORRECT KEY USED      00259100
.ZG6A3           AIF   (K'&ZCVAL LE 0).ZG6A4    OK                      00259200
&ZCVAL           SETC '&ZCVAL'(2,K'&ZCVAL-1)                            00259300
&ZMS             SETC  '"REQUEST'  *KMEIA* MNOTE                        00259400
&ZMS             SETC  '&ZMS.=&REQUEST"'                                00259500
&ZMS             SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'             00259600
                 MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'             00259700
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00259800
.ZG6A4           ANOP  ,                                                00259900
.*----------------------------------------------------------------***   00260000
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00260100
                 AIF   (N'&RNAME LE 1).ZG8A     CK NUM                  00260200
&ZMS             SETC  '"RNAME='   *KPOSA* MNOTE                        00260300
&ZMS             SETC  '&ZMS.&RNAME"'                                   00260400
&ZMS             SETC  '&ZMS "RNAME"'                                   00260500
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00260600
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00260700
.ZG8A            ANOP  ,                                                00260800
.*-------------------------------------------------------------------   00260900
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00261000
&ZXRNAME         SETC  'INPUT'     SET IN/OUTPUT                        00261100
&XRNAME          SETC  '&RNAME(1)'              SET XVARIABLE           00261200
                 AIF   (N'&RNAME GT 1).ZG8B     MULTI PARMS             00261300
&XRNAME          SETC  '&RNAME'    SET XVARIABLE                        00261400
.ZG8B            AIF   (K'&RNAME(1) GT 0).ZG8C                          00261500
&ZXRNAME         SETC  ''          RESET IN/OUTPUT                      00261600
&ZMS             SETC  ' '         *KRQDA*                              00261700
&ZMS             SETC  '&ZMS "RNAME" KEY AND ITS'                       00261800
                 MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                 00261900
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00262000
.ZG8C            ANOP  ,                                                00262100
.*-------------------------------------------------------------------   00262200
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00262300
                 AIF   (K'&ZXRNAME LE 0).ZG8R   NOT I/O                 00262400
                 AIF   ('&XRNAME'(1,1) NE '(').ZG8R                     00262500
&ZCGPR           SETC  '&XRNAME'(2,K'&XRNAME-2)                         00262600
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG8P                      00262700
                 AIF   (K'&ZCGPR GT 2).ZG8Q                             00262800
                 AIF   ('&ZCGPR' EQ '0').ZG8Q                           00262900
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00263000
                 AIF   (T'&ZCGPR NE 'N').ZG8Q   INVALID REG NAME        00263100
.ZG8P            ANOP  ,                                                00263200
                 AIF   (T'&ZCGPR NE 'N').ZG8R   NON NUMERIC             00263300
                 AIF   ('&ZCGPR' LT '2').ZG8Q                           00263400
                 AIF   ('&ZCGPR' LE '12').ZG8R                          00263500
.ZG8Q            ANOP  ,                                                00263600
&ZMS             SETC  '"RNAME='   *KGPRA* MNOTE                        00263700
&ZMS             SETC  '&ZMS.&RNAME"'                                   00263800
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00263900
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00264000
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00264100
.ZG8R            ANOP  ,                                                00264200
.*----------------------------------------------------------------***   00264300
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00264400
                 AIF   (N'&RNAMELEN LE 1).ZG11A  CK NUM                 00264500
&ZMS             SETC  '"RNAMELEN='             *KPOSA* MNOTE           00264600
&ZMS             SETC  '&ZMS.&RNAMELEN"'                                00264700
&ZMS             SETC  '&ZMS "RNAMELEN"'                                00264800
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00264900
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00265000
.ZG11A           ANOP  ,                                                00265100
.*-------------------------------------------------------------------   00265200
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00265300
&ZXRNAMELEN      SETC  'INPUT'     SET IN/OUTPUT                        00265400
&XRNAMELEN       SETC  'NO_RNAMELEN'                                    00265500
                 AIF   (K'&RNAMELEN(1) LE 0).ZG11B  PARM                00265600
&XRNAMELEN       SETC  '&RNAMELEN(1)'           SET XVARIABLE           00265700
                 AIF   (N'&RNAMELEN GT 1).ZG11B  MULTI PARMS            00265800
&XRNAMELEN       SETC  '&RNAMELEN'              SET XVARIABLE           00265900
.ZG11B           ANOP  ,                                                00266000
.*-------------------------------------------------------------------   00266100
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00266200
                 AIF   (K'&ZXRNAMELEN LE 0).ZG11R  NOT I/O              00266300
         AIF   ('&XRNAMELEN' EQ 'NO_RNAMELEN').ZG11R                    00266400
                 AIF   ('&XRNAMELEN'(1,1) NE '(').ZG11R                 00266500
&ZCGPR           SETC  '&XRNAMELEN'(2,K'&XRNAMELEN-2)                   00266600
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG11P                     00266700
                 AIF   (K'&ZCGPR GT 2).ZG11Q                            00266800
                 AIF   ('&ZCGPR' EQ '0').ZG11Q                          00266900
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00267000
                 AIF   (T'&ZCGPR NE 'N').ZG11Q  INVALID REG NAME        00267100
.ZG11P           ANOP  ,                                                00267200
                 AIF   (T'&ZCGPR NE 'N').ZG11R  NON NUMERIC             00267300
                 AIF   ('&ZCGPR' LT '2').ZG11Q                          00267400
                 AIF   ('&ZCGPR' LE '12').ZG11R                         00267500
.ZG11Q           ANOP  ,                                                00267600
&ZMS             SETC  '"RNAMELEN='             *KGPRA* MNOTE           00267700
&ZMS             SETC  '&ZMS.&RNAMELEN"'                                00267800
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00267900
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00268000
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00268100
.ZG11R           ANOP  ,                                                00268200
.*----------------------------------------------------------------***   00268300
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00268400
                 AIF   (N'&HASHVAL LE 1).ZG14A  CK NUM                  00268500
&ZMS             SETC  '"HASHVAL='              *KPOSA* MNOTE           00268600
&ZMS             SETC  '&ZMS.&HASHVAL"'                                 00268700
&ZMS             SETC  '&ZMS "HASHVAL"'                                 00268800
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00268900
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00269000
.ZG14A           ANOP  ,                                                00269100
.*-------------------------------------------------------------------   00269200
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00269300
&ZXHASHVAL       SETC  'INPUT'     SET IN/OUTPUT                        00269400
&XHASHVAL        SETC  '&HASHVAL(1)'            SET XVARIABLE           00269500
                 AIF   (N'&HASHVAL GT 1).ZG14B  MULTI PARMS             00269600
&XHASHVAL        SETC  '&HASHVAL'  SET XVARIABLE                        00269700
.ZG14B           AIF   (K'&HASHVAL(1) GT 0).ZG14C                       00269800
&ZXHASHVAL       SETC  ''          RESET IN/OUTPUT                      00269900
&ZMS             SETC  ' '         *KRQDA*                              00270000
&ZMS             SETC  '&ZMS "HASHVAL" KEY AND ITS'                     00270100
                 MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                 00270200
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00270300
.ZG14C           ANOP  ,                                                00270400
.*-------------------------------------------------------------------   00270500
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00270600
                 AIF   (K'&ZXHASHVAL LE 0).ZG14R  NOT I/O               00270700
                 AIF   ('&XHASHVAL'(1,1) NE '(').ZG14R                  00270800
&ZCGPR           SETC  '&XHASHVAL'(2,K'&XHASHVAL-2)                     00270900
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG14P                     00271000
                 AIF   (K'&ZCGPR GT 2).ZG14Q                            00271100
                 AIF   ('&ZCGPR' EQ '0').ZG14Q                          00271200
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00271300
                 AIF   (T'&ZCGPR NE 'N').ZG14Q  INVALID REG NAME        00271400
.ZG14P           ANOP  ,                                                00271500
                 AIF   (T'&ZCGPR NE 'N').ZG14R  NON NUMERIC             00271600
                 AIF   ('&ZCGPR' LT '2').ZG14Q                          00271700
                 AIF   ('&ZCGPR' LE '12').ZG14R                         00271800
.ZG14Q           ANOP  ,                                                00271900
&ZMS             SETC  '"HASHVAL='              *KGPRA* MNOTE           00272000
&ZMS             SETC  '&ZMS.&HASHVAL"'                                 00272100
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00272200
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00272300
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00272400
.ZG14R           ANOP  ,                                                00272500
.*----------------------------------------------------------------***   00272600
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00272700
                 AIF   (N'&LOCKDATA LE 1).ZG17A  CK NUM                 00272800
&ZMS             SETC  '"LOCKDATA='             *KPOSA* MNOTE           00272900
&ZMS             SETC  '&ZMS.&LOCKDATA"'                                00273000
&ZMS             SETC  '&ZMS "LOCKDATA"'                                00273100
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00273200
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00273300
.ZG17A           ANOP  ,                                                00273400
.*-------------------------------------------------------------------   00273500
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00273600
&ZXLOCKDATA      SETC  'INPUT'     SET IN/OUTPUT                        00273700
&XLOCKDATA       SETC  'ALL_ZEROES'                                     00273800
                 AIF   (K'&LOCKDATA(1) LE 0).ZG17B  PARM                00273900
&XLOCKDATA       SETC  '&LOCKDATA(1)'           SET XVARIABLE           00274000
                 AIF   (N'&LOCKDATA GT 1).ZG17B  MULTI PARMS            00274100
&XLOCKDATA       SETC  '&LOCKDATA'              SET XVARIABLE           00274200
.ZG17B           ANOP  ,                                                00274300
.*-------------------------------------------------------------------   00274400
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00274500
                 AIF   (K'&ZXLOCKDATA LE 0).ZG17R  NOT I/O              00274600
         AIF   ('&XLOCKDATA' EQ 'ALL_ZEROES').ZG17R                     00274700
                 AIF   ('&XLOCKDATA'(1,1) NE '(').ZG17R                 00274800
&ZCGPR           SETC  '&XLOCKDATA'(2,K'&XLOCKDATA-2)                   00274900
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG17P                     00275000
                 AIF   (K'&ZCGPR GT 2).ZG17Q                            00275100
                 AIF   ('&ZCGPR' EQ '0').ZG17Q                          00275200
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00275300
                 AIF   (T'&ZCGPR NE 'N').ZG17Q  INVALID REG NAME        00275400
.ZG17P           ANOP  ,                                                00275500
                 AIF   (T'&ZCGPR NE 'N').ZG17R  NON NUMERIC             00275600
                 AIF   ('&ZCGPR' LT '2').ZG17Q                          00275700
                 AIF   ('&ZCGPR' LE '12').ZG17R                         00275800
.ZG17Q           ANOP  ,                                                00275900
&ZMS             SETC  '"LOCKDATA='             *KGPRA* MNOTE           00276000
&ZMS             SETC  '&ZMS.&LOCKDATA"'                                00276100
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00276200
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00276300
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00276400
.ZG17R           ANOP  ,                                                00276500
.*------------------------------------------------------------------    00276600
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00276700
&XSTATE          SETC  ''          INITIALIZE XVARIABLE                 00276800
.*-------------------------------------------------------------------   00276900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00277000
.ZG21            ANOP  ,                                                00277100
                 AIF   (K'&STATE(1) LE 0).ZG21A                         00277200
&ZTLC            SETC 'SHR'                                             00277300
                 AIF   ('&STATE(1)' NE '&ZTLC').ZG22                    00277400
&XSTATE          SETC  'SHR'       SET KEYWORD                          00277500
                 AIF   (N'&STATE LE 1).ZG21A    CK NUM                  00277600
&ZMS             SETC  '"STATE='   *KPOSA* MNOTE                        00277700
&ZMS             SETC  '&ZMS.&STATE"'                                   00277800
&ZMS             SETC  '&ZMS "STATE"'                                   00277900
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00278000
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00278100
.ZG21A           ANOP  ,                                                00278200
.*------------------------------------------------------------------    00278300
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00278400
&ZCVAL           SETC ''           CLEAR ERROR KEY ACCUMULATOR          00278500
.ZG21A0          AIF   (K'&STATEVAL LE 0).ZG21A1  OK                    00278600
&ZCVAL           SETC '&ZCVAL STATEVAL'         INCORRECT KEY USED      00278700
.ZG21A1          AIF   (K'&ZCVAL LE 0).ZG21A2   OK                      00278800
&ZCVAL           SETC '&ZCVAL'(2,K'&ZCVAL-1)                            00278900
&ZMS             SETC  '"STATE'    *KMEIA* MNOTE                        00279000
&ZMS             SETC  '&ZMS.=&STATE"'                                  00279100
&ZMS             SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'             00279200
                 MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'             00279300
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00279400
.ZG21A2          ANOP  ,                                                00279500
.*-------------------------------------------------------------------   00279600
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00279700
.ZG22            ANOP  ,                                                00279800
&ZTLC            SETC 'EXCL'                                            00279900
                 AIF   ('&STATE(1)' NE '&ZTLC').ZG23                    00280000
&XSTATE          SETC  'EXCL'      SET KEYWORD                          00280100
                 AIF   (N'&STATE LE 1).ZG22A    CK NUM                  00280200
&ZMS             SETC  '"STATE='   *KPOSA* MNOTE                        00280300
&ZMS             SETC  '&ZMS.&STATE"'                                   00280400
&ZMS             SETC  '&ZMS "STATE"'                                   00280500
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00280600
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00280700
.ZG22A           ANOP  ,                                                00280800
.*------------------------------------------------------------------    00280900
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00281000
&ZCVAL           SETC ''           CLEAR ERROR KEY ACCUMULATOR          00281100
.ZG22A0          AIF   (K'&STATEVAL LE 0).ZG22A1  OK                    00281200
&ZCVAL           SETC '&ZCVAL STATEVAL'         INCORRECT KEY USED      00281300
.ZG22A1          AIF   (K'&ZCVAL LE 0).ZG22A2   OK                      00281400
&ZCVAL           SETC '&ZCVAL'(2,K'&ZCVAL-1)                            00281500
&ZMS             SETC  '"STATE'    *KMEIA* MNOTE                        00281600
&ZMS             SETC  '&ZMS.=&STATE"'                                  00281700
&ZMS             SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'             00281800
                 MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'             00281900
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00282000
.ZG22A2          ANOP  ,                                                00282100
.*-------------------------------------------------------------------   00282200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00282300
.ZG23            ANOP  ,                                                00282400
&ZTLC            SETC 'VALUE'                                           00282500
                 AIF   ('&STATE(1)' NE '&ZTLC').ZG27                    00282600
&XSTATE          SETC  'VALUE'     SET KEYWORD                          00282700
                 AIF   (N'&STATE LE 1).ZG23A    CK NUM                  00282800
&ZMS             SETC  '"STATE='   *KPOSA* MNOTE                        00282900
&ZMS             SETC  '&ZMS.&STATE"'                                   00283000
&ZMS             SETC  '&ZMS "STATE"'                                   00283100
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00283200
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00283300
.ZG23A           ANOP  ,                                                00283400
.*----------------------------------------------------------------***   00283500
.***AG.KXVAR05 NAME, OPT RQD INOUT, KEYS -XVARIABLE KEY                 00283600
                 AIF   (N'&STATEVAL LE 1).ZG25A  CK NUM                 00283700
&ZMS             SETC  '"STATEVAL='             *KPOSA* MNOTE           00283800
&ZMS             SETC  '&ZMS.&STATEVAL"'                                00283900
&ZMS             SETC  '&ZMS "STATEVAL"'                                00284000
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00284100
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00284200
.ZG25A           ANOP  ,                                                00284300
.*-------------------------------------------------------------------   00284400
.***AG.KXVAR06 NAME, OPT RQD INOUT, KEYS -XVARIABLE                     00284500
&ZXSTATEVAL      SETC  'INOUT'     SET IN/OUTPUT                        00284600
&XSTATEVAL       SETC  '&STATEVAL(1)'           SET XVARIABLE           00284700
                 AIF   (N'&STATEVAL GT 1).ZG25B  MULTI PARMS            00284800
&XSTATEVAL       SETC  '&STATEVAL'              SET XVARIABLE           00284900
.ZG25B           AIF   (K'&STATEVAL(1) GT 0).ZG25C                      00285000
&ZXSTATEVAL      SETC  ''          RESET IN/OUTPUT                      00285100
&ZMS             SETC  ' '         *KRQDA*                              00285200
&ZMS             SETC  '&ZMS "STATEVAL" KEY AND ITS'                    00285300
                 MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                 00285400
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00285500
.ZG25C           ANOP  ,                                                00285600
.*-------------------------------------------------------------------   00285700
.***AG.KCK02 NAME, OPT RQD INOUT, KEYS -GPR OUT OF RANGE                00285800
                 AIF   (K'&ZXSTATEVAL LE 0).ZG25R  NOT I/O              00285900
                 AIF   ('&XSTATEVAL'(1,1) NE '(').ZG25R                 00286000
&ZCGPR           SETC  '&XSTATEVAL'(2,K'&XSTATEVAL-2)                   00286100
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG25P                     00286200
                 AIF   (K'&ZCGPR GT 2).ZG25Q                            00286300
                 AIF   ('&ZCGPR' EQ '0').ZG25Q                          00286400
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00286500
                 AIF   (T'&ZCGPR NE 'N').ZG25Q  INVALID REG NAME        00286600
.ZG25P           ANOP  ,                                                00286700
                 AIF   (T'&ZCGPR NE 'N').ZG25R  NON NUMERIC             00286800
                 AIF   ('&ZCGPR' LT '2').ZG25Q                          00286900
                 AIF   ('&ZCGPR' LE '12').ZG25R                         00287000
.ZG25Q           ANOP  ,                                                00287100
&ZMS             SETC  '"STATEVAL='             *KGPRA* MNOTE           00287200
&ZMS             SETC  '&ZMS.&STATEVAL"'                                00287300
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00287400
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00287500
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00287600
.ZG25R           ANOP  ,                                                00287700
.*------------------------------------------------------------------    00287800
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00287900
.ZG27            ANOP  ,                                                00288000
&ZXSTATE         SETC  'INPUT'     SET IN/OUTPUT                        00288100
                 AIF   (K'&XSTATE GT 0).ZG27E   VALID ARG               00288200
                 AIF   (T'&STATE EQ 'O').ZG27D  OMITTED                 00288300
&ZASYSLNDX       SETA  0                                                00288400
.ZG27A           ANOP  ,           POSITIONAL MACRO KEY                 00288500
&ZASYSLNDX       SETA  &ZASYSLNDX+1                                     00288600
                 AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG27C                 00288700
&ZTLC            SETC 'STATE'                                           00288800
                 AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG27A        00288900
.ZG27B           ANOP  ,                                                00289000
&ZXSTATE         SETC  ''          RESET IN/OUTPUT                      00289100
&ZMS             SETC  'THE "STATE" KEY'        *KOPTA* MNOTE           00289200
&ZMS             SETC  '&ZMS MUST CONTAIN ONE'                          00289300
                 MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                 00289400
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00289500
                 AGO   .ZG27E                                           00289600
.ZG27C           ANOP  ,                                                00289700
&ZXSTATE         SETC  ''          RESET IN/OUTPUT                      00289800
&ZMS             SETC  '"STATE='   *KUKWA* MNOTE                        00289900
&ZMS             SETC  '&ZMS.&STATE"'                                   00290000
&ZMS             SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '        00290100
&ZMS             SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'              00290200
&ZMS             SETC  '&ZMS "SHR",'                                    00290300
&ZMS             SETC  '&ZMS "EXCL",'                                   00290400
&ZMS             SETC  '&ZMS OR "VALUE".'                               00290500
                 MNOTE 8,' &ZMS '                                       00290600
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00290700
                 AGO   .ZG27E                                           00290800
.ZG27D           ANOP  ,                                                00290900
&XSTATE          SETC  'SHR'       SET DEFAULT KEYWORD                  00291000
.ZG27E           ANOP  ,                                                00291100
.*----------------------------------------------------------------***   00291200
.***AG.KXVAR05 NAME, OPT INOUT, KEYS -XVARIABLE KEY                     00291300
                 AIF   (N'&UDATAVAL LE 1).ZG29A  CK NUM                 00291400
&ZMS             SETC  '"UDATAVAL='             *KPOSA* MNOTE           00291500
&ZMS             SETC  '&ZMS.&UDATAVAL"'                                00291600
&ZMS             SETC  '&ZMS "UDATAVAL"'                                00291700
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00291800
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00291900
.ZG29A           ANOP  ,                                                00292000
.*-------------------------------------------------------------------   00292100
.***AG.KXVAR13 NAME, OPT INOUT, KEYS -XVARIABLE                         00292200
&ZXUDATAVAL      SETC  'INOUT'     SET IN/OUTPUT                        00292300
&XUDATAVAL       SETC  'ALL_ZEROES'                                     00292400
                 AIF   (K'&UDATAVAL(1) LE 0).ZG29B  PARM                00292500
&XUDATAVAL       SETC  '&UDATAVAL(1)'           SET XVARIABLE           00292600
                 AIF   (N'&UDATAVAL GT 1).ZG29B  MULTI PARMS            00292700
&XUDATAVAL       SETC  '&UDATAVAL'              SET XVARIABLE           00292800
.ZG29B           ANOP  ,                                                00292900
.*-------------------------------------------------------------------   00293000
.***AG.KCK02 NAME, OPT INOUT, KEYS -GPR OUT OF RANGE                    00293100
                 AIF   (K'&ZXUDATAVAL LE 0).ZG29R  NOT I/O              00293200
         AIF   ('&XUDATAVAL' EQ 'ALL_ZEROES').ZG29R                     00293300
                 AIF   ('&XUDATAVAL'(1,1) NE '(').ZG29R                 00293400
&ZCGPR           SETC  '&XUDATAVAL'(2,K'&XUDATAVAL-2)                   00293500
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG29P                     00293600
                 AIF   (K'&ZCGPR GT 2).ZG29Q                            00293700
                 AIF   ('&ZCGPR' EQ '0').ZG29Q                          00293800
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00293900
                 AIF   (T'&ZCGPR NE 'N').ZG29Q  INVALID REG NAME        00294000
.ZG29P           ANOP  ,                                                00294100
                 AIF   (T'&ZCGPR NE 'N').ZG29R  NON NUMERIC             00294200
                 AIF   ('&ZCGPR' LT '2').ZG29Q                          00294300
                 AIF   ('&ZCGPR' LE '12').ZG29R                         00294400
.ZG29Q           ANOP  ,                                                00294500
&ZMS             SETC  '"UDATAVAL='             *KGPRA* MNOTE           00294600
&ZMS             SETC  '&ZMS.&UDATAVAL"'                                00294700
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00294800
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00294900
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00295000
.ZG29R           ANOP  ,                                                00295100
.*------------------------------------------------------------------    00295200
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00295300
&XRDATA          SETC  ''          INITIALIZE XVARIABLE                 00295400
.*-------------------------------------------------------------------   00295500
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00295600
.ZG33            ANOP  ,                                                00295700
                 AIF   (K'&RDATA(1) LE 0).ZG33A                         00295800
&ZTLC            SETC 'NORDATA'                                         00295900
                 AIF   ('&RDATA(1)' NE '&ZTLC').ZG34                    00296000
&XRDATA          SETC  'NORDATA'   SET KEYWORD                          00296100
                 AIF   (N'&RDATA LE 1).ZG33A    CK NUM                  00296200
&ZMS             SETC  '"RDATA='   *KPOSA* MNOTE                        00296300
&ZMS             SETC  '&ZMS.&RDATA"'                                   00296400
&ZMS             SETC  '&ZMS "RDATA"'                                   00296500
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00296600
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00296700
.ZG33A           ANOP  ,                                                00296800
.*------------------------------------------------------------------    00296900
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00297000
&ZCVAL           SETC ''           CLEAR ERROR KEY ACCUMULATOR          00297100
.ZG33A0          AIF   (K'&RDATAVAL LE 0).ZG33A1  OK                    00297200
&ZCVAL           SETC '&ZCVAL RDATAVAL'         INCORRECT KEY USED      00297300
.ZG33A1          AIF   (K'&ENTRYID LE 0).ZG33A2  OK                     00297400
&ZCVAL           SETC '&ZCVAL ENTRYID'          INCORRECT KEY USED      00297500
.ZG33A2          AIF   (K'&ENTRYCOUNT LE 0).ZG33A3  OK                  00297600
&ZCVAL           SETC '&ZCVAL ENTRYCOUNT'       INCORRECT KEY USED      00297700
.ZG33A3          AIF   (K'&CONID LE 0).ZG33A4   OK                      00297800
&ZCVAL           SETC '&ZCVAL CONID'            INCORRECT KEY USED      00297900
.ZG33A4          AIF   (K'&UPDATERDATA LE 0).ZG33A5  OK                 00298000
&ZCVAL           SETC '&ZCVAL UPDATERDATA'      INCORRECT KEY USED      00298100
.ZG33A5          AIF   (K'&ZCVAL LE 0).ZG33A6   OK                      00298200
&ZCVAL           SETC '&ZCVAL'(2,K'&ZCVAL-1)                            00298300
&ZMS             SETC  '"RDATA'    *KMEIA* MNOTE                        00298400
&ZMS             SETC  '&ZMS.=&RDATA"'                                  00298500
&ZMS             SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'             00298600
                 MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'             00298700
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00298800
.ZG33A6          ANOP  ,                                                00298900
.*-------------------------------------------------------------------   00299000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00299100
.ZG34            ANOP  ,                                                00299200
&ZTLC            SETC 'WRITE'                                           00299300
                 AIF   ('&RDATA(1)' NE '&ZTLC').ZG44                    00299400
&XRDATA          SETC  'WRITE'     SET KEYWORD                          00299500
                 AIF   (N'&RDATA LE 1).ZG34A    CK NUM                  00299600
&ZMS             SETC  '"RDATA='   *KPOSA* MNOTE                        00299700
&ZMS             SETC  '&ZMS.&RDATA"'                                   00299800
&ZMS             SETC  '&ZMS "RDATA"'                                   00299900
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00300000
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00300100
.ZG34A           ANOP  ,                                                00300200
.*------------------------------------------------------------------    00300300
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00300400
&ZCVAL           SETC ''           CLEAR ERROR KEY ACCUMULATOR          00300500
.ZG34A0          AIF   (K'&CONID LE 0).ZG34A1   OK                      00300600
&ZCVAL           SETC '&ZCVAL CONID'            INCORRECT KEY USED      00300700
.ZG34A1          AIF   (K'&UPDATERDATA LE 0).ZG34A2  OK                 00300800
&ZCVAL           SETC '&ZCVAL UPDATERDATA'      INCORRECT KEY USED      00300900
.ZG34A2          AIF   (K'&ZCVAL LE 0).ZG34A3   OK                      00301000
&ZCVAL           SETC '&ZCVAL'(2,K'&ZCVAL-1)                            00301100
&ZMS             SETC  '"RDATA'    *KMEIA* MNOTE                        00301200
&ZMS             SETC  '&ZMS.=&RDATA"'                                  00301300
&ZMS             SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'             00301400
                 MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'             00301500
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00301600
.ZG34A3          ANOP  ,                                                00301700
.*----------------------------------------------------------------***   00301800
.***AG.KXVAR05 NAME, OPT RQD INOUT, KEYS -XVARIABLE KEY                 00301900
                 AIF   (N'&RDATAVAL LE 1).ZG36A  CK NUM                 00302000
&ZMS             SETC  '"RDATAVAL='             *KPOSA* MNOTE           00302100
&ZMS             SETC  '&ZMS.&RDATAVAL"'                                00302200
&ZMS             SETC  '&ZMS "RDATAVAL"'                                00302300
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00302400
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00302500
.ZG36A           ANOP  ,                                                00302600
.*-------------------------------------------------------------------   00302700
.***AG.KXVAR06 NAME, OPT RQD INOUT, KEYS -XVARIABLE                     00302800
&ZXRDATAVAL      SETC  'INOUT'     SET IN/OUTPUT                        00302900
&XRDATAVAL       SETC  '&RDATAVAL(1)'           SET XVARIABLE           00303000
                 AIF   (N'&RDATAVAL GT 1).ZG36B  MULTI PARMS            00303100
&XRDATAVAL       SETC  '&RDATAVAL'              SET XVARIABLE           00303200
.ZG36B           AIF   (K'&RDATAVAL(1) GT 0).ZG36C                      00303300
&ZXRDATAVAL      SETC  ''          RESET IN/OUTPUT                      00303400
&ZMS             SETC  ' '         *KRQDA*                              00303500
&ZMS             SETC  '&ZMS "RDATAVAL" KEY AND ITS'                    00303600
                 MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                 00303700
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00303800
.ZG36C           ANOP  ,                                                00303900
.*-------------------------------------------------------------------   00304000
.***AG.KCK02 NAME, OPT RQD INOUT, KEYS -GPR OUT OF RANGE                00304100
                 AIF   (K'&ZXRDATAVAL LE 0).ZG36R  NOT I/O              00304200
                 AIF   ('&XRDATAVAL'(1,1) NE '(').ZG36R                 00304300
&ZCGPR           SETC  '&XRDATAVAL'(2,K'&XRDATAVAL-2)                   00304400
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG36P                     00304500
                 AIF   (K'&ZCGPR GT 2).ZG36Q                            00304600
                 AIF   ('&ZCGPR' EQ '0').ZG36Q                          00304700
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00304800
                 AIF   (T'&ZCGPR NE 'N').ZG36Q  INVALID REG NAME        00304900
.ZG36P           ANOP  ,                                                00305000
                 AIF   (T'&ZCGPR NE 'N').ZG36R  NON NUMERIC             00305100
                 AIF   ('&ZCGPR' LT '2').ZG36Q                          00305200
                 AIF   ('&ZCGPR' LE '12').ZG36R                         00305300
.ZG36Q           ANOP  ,                                                00305400
&ZMS             SETC  '"RDATAVAL='             *KGPRA* MNOTE           00305500
&ZMS             SETC  '&ZMS.&RDATAVAL"'                                00305600
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00305700
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00305800
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00305900
.ZG36R           ANOP  ,                                                00306000
.*----------------------------------------------------------------***   00306100
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00306200
                 AIF   (N'&ENTRYID LE 1).ZG39A  CK NUM                  00306300
&ZMS             SETC  '"ENTRYID='              *KPOSA* MNOTE           00306400
&ZMS             SETC  '&ZMS.&ENTRYID"'                                 00306500
&ZMS             SETC  '&ZMS "ENTRYID"'                                 00306600
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00306700
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00306800
.ZG39A           ANOP  ,                                                00306900
.*-------------------------------------------------------------------   00307000
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00307100
                 AIF   (K'&ENTRYID(1) LE 0).ZG39C  NO PARM              00307200
&ZXENTRYID       SETC  'OUTPUT'    SET OUTPUT                           00307300
&XENTRYID        SETC  '&ENTRYID(1)'            SET XVARIABLE           00307400
                 AIF   (N'&ENTRYID GT 1).ZG39C                          00307500
&XENTRYID        SETC  '&ENTRYID'  SET XVARIABLE                        00307600
.ZG39C           ANOP  ,                                                00307700
.*-------------------------------------------------------------------   00307800
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00307900
                 AIF   (K'&ZXENTRYID LE 0).ZG39R  NOT I/O               00308000
                 AIF   ('&XENTRYID'(1,1) NE '(').ZG39R                  00308100
&ZCGPR           SETC  '&XENTRYID'(2,K'&XENTRYID-2)                     00308200
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG39P                     00308300
                 AIF   (K'&ZCGPR GT 2).ZG39Q                            00308400
                 AIF   ('&ZCGPR' EQ '0').ZG39Q                          00308500
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00308600
                 AIF   (T'&ZCGPR NE 'N').ZG39Q  INVALID REG NAME        00308700
.ZG39P           ANOP  ,                                                00308800
                 AIF   (T'&ZCGPR NE 'N').ZG39R  NON NUMERIC             00308900
                 AIF   ('&ZCGPR' LT '2').ZG39Q                          00309000
                 AIF   ('&ZCGPR' LE '12').ZG39R                         00309100
.ZG39Q           ANOP  ,                                                00309200
&ZMS             SETC  '"ENTRYID='              *KGPRA* MNOTE           00309300
&ZMS             SETC  '&ZMS.&ENTRYID"'                                 00309400
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00309500
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00309600
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00309700
.ZG39R           ANOP  ,                                                00309800
.*----------------------------------------------------------------***   00309900
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00310000
                 AIF   (N'&ENTRYCOUNT LE 1).ZG42A  CK NUM               00310100
&ZMS             SETC  '"ENTRYCOUNT='           *KPOSA* MNOTE           00310200
&ZMS             SETC  '&ZMS.&ENTRYCOUNT"'                              00310300
&ZMS             SETC  '&ZMS "ENTRYCOUNT"'                              00310400
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00310500
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00310600
.ZG42A           ANOP  ,                                                00310700
.*-------------------------------------------------------------------   00310800
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00310900
                 AIF   (K'&ENTRYCOUNT(1) LE 0).ZG42C  NO PARM           00311000
&ZXENTRYCOUNT    SETC  'OUTPUT'    SET OUTPUT                           00311100
&XENTRYCOUNT     SETC  '&ENTRYCOUNT(1)'         SET XVARIABLE           00311200
                 AIF   (N'&ENTRYCOUNT GT 1).ZG42C                       00311300
&XENTRYCOUNT     SETC  '&ENTRYCOUNT'            SET XVARIABLE           00311400
.ZG42C           ANOP  ,                                                00311500
.*-------------------------------------------------------------------   00311600
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00311700
                 AIF   (K'&ZXENTRYCOUNT LE 0).ZG42R  NOT I/O            00311800
                 AIF   ('&XENTRYCOUNT'(1,1) NE '(').ZG42R               00311900
&ZCGPR           SETC  '&XENTRYCOUNT'(2,K'&XENTRYCOUNT-2)               00312000
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG42P                     00312100
                 AIF   (K'&ZCGPR GT 2).ZG42Q                            00312200
                 AIF   ('&ZCGPR' EQ '0').ZG42Q                          00312300
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00312400
                 AIF   (T'&ZCGPR NE 'N').ZG42Q  INVALID REG NAME        00312500
.ZG42P           ANOP  ,                                                00312600
                 AIF   (T'&ZCGPR NE 'N').ZG42R  NON NUMERIC             00312700
                 AIF   ('&ZCGPR' LT '2').ZG42Q                          00312800
                 AIF   ('&ZCGPR' LE '12').ZG42R                         00312900
.ZG42Q           ANOP  ,                                                00313000
&ZMS             SETC  '"ENTRYCOUNT='           *KGPRA* MNOTE           00313100
&ZMS             SETC  '&ZMS.&ENTRYCOUNT"'                              00313200
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00313300
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00313400
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00313500
.ZG42R           ANOP  ,                                                00313600
.*-------------------------------------------------------------------   00313700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00313800
.ZG44            ANOP  ,                                                00313900
&ZTLC            SETC 'REACQUIRE'                                       00314000
                 AIF   ('&RDATA(1)' NE '&ZTLC').ZG59                    00314100
&XRDATA          SETC  'REACQUIRE'              SET KEYWORD             00314200
                 AIF   (N'&RDATA LE 1).ZG44A    CK NUM                  00314300
&ZMS             SETC  '"RDATA='   *KPOSA* MNOTE                        00314400
&ZMS             SETC  '&ZMS.&RDATA"'                                   00314500
&ZMS             SETC  '&ZMS "RDATA"'                                   00314600
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00314700
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00314800
.ZG44A           ANOP  ,                                                00314900
.*------------------------------------------------------------------    00315000
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00315100
&ZCVAL           SETC ''           CLEAR ERROR KEY ACCUMULATOR          00315200
.ZG44A0          AIF   (K'&ENTRYCOUNT LE 0).ZG44A1  OK                  00315300
&ZCVAL           SETC '&ZCVAL ENTRYCOUNT'       INCORRECT KEY USED      00315400
.ZG44A1          AIF   (K'&ZCVAL LE 0).ZG44A2   OK                      00315500
&ZCVAL           SETC '&ZCVAL'(2,K'&ZCVAL-1)                            00315600
&ZMS             SETC  '"RDATA'    *KMEIA* MNOTE                        00315700
&ZMS             SETC  '&ZMS.=&RDATA"'                                  00315800
&ZMS             SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'             00315900
                 MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'             00316000
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00316100
.ZG44A2          ANOP  ,                                                00316200
.*----------------------------------------------------------------***   00316300
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00316400
                 AIF   (N'&ENTRYID LE 1).ZG46A  CK NUM                  00316500
&ZMS             SETC  '"ENTRYID='              *KPOSA* MNOTE           00316600
&ZMS             SETC  '&ZMS.&ENTRYID"'                                 00316700
&ZMS             SETC  '&ZMS "ENTRYID"'                                 00316800
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00316900
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00317000
.ZG46A           ANOP  ,                                                00317100
.*-------------------------------------------------------------------   00317200
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00317300
&ZXENTRYID       SETC  'INPUT'     SET IN/OUTPUT                        00317400
&XENTRYID        SETC  '&ENTRYID(1)'            SET XVARIABLE           00317500
                 AIF   (N'&ENTRYID GT 1).ZG46B  MULTI PARMS             00317600
&XENTRYID        SETC  '&ENTRYID'  SET XVARIABLE                        00317700
.ZG46B           AIF   (K'&ENTRYID(1) GT 0).ZG46C                       00317800
&ZXENTRYID       SETC  ''          RESET IN/OUTPUT                      00317900
&ZMS             SETC  ' '         *KRQDA*                              00318000
&ZMS             SETC  '&ZMS "ENTRYID" KEY AND ITS'                     00318100
                 MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                 00318200
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00318300
.ZG46C           ANOP  ,                                                00318400
.*-------------------------------------------------------------------   00318500
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                00318600
                 AIF   (K'&ZXENTRYID LE 0).ZG46R  NOT I/O               00318700
                 AIF   ('&XENTRYID'(1,1) NE '(').ZG46R                  00318800
&ZCGPR           SETC  '&XENTRYID'(2,K'&XENTRYID-2)                     00318900
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG46P                     00319000
                 AIF   (K'&ZCGPR GT 2).ZG46Q                            00319100
                 AIF   ('&ZCGPR' EQ '0').ZG46Q                          00319200
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00319300
                 AIF   (T'&ZCGPR NE 'N').ZG46Q  INVALID REG NAME        00319400
.ZG46P           ANOP  ,                                                00319500
                 AIF   (T'&ZCGPR NE 'N').ZG46R  NON NUMERIC             00319600
                 AIF   ('&ZCGPR' LT '2').ZG46Q                          00319700
                 AIF   ('&ZCGPR' LE '12').ZG46R                         00319800
.ZG46Q           ANOP  ,                                                00319900
&ZMS             SETC  '"ENTRYID='              *KGPRA* MNOTE           00320000
&ZMS             SETC  '&ZMS.&ENTRYID"'                                 00320100
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00320200
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00320300
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00320400
.ZG46R           ANOP  ,                                                00320500
.*----------------------------------------------------------------***   00320600
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00320700
                 AIF   (N'&CONID LE 1).ZG49A    CK NUM                  00320800
&ZMS             SETC  '"CONID='   *KPOSA* MNOTE                        00320900
&ZMS             SETC  '&ZMS.&CONID"'                                   00321000
&ZMS             SETC  '&ZMS "CONID"'                                   00321100
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00321200
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00321300
.ZG49A           ANOP  ,                                                00321400
.*-------------------------------------------------------------------   00321500
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00321600
&ZXCONID         SETC  'INPUT'     SET IN/OUTPUT                        00321700
&XCONID          SETC  'NO_CONID'                                       00321800
                 AIF   (K'&CONID(1) LE 0).ZG49B  PARM                   00321900
&XCONID          SETC  '&CONID(1)'              SET XVARIABLE           00322000
                 AIF   (N'&CONID GT 1).ZG49B    MULTI PARMS             00322100
&XCONID          SETC  '&CONID'    SET XVARIABLE                        00322200
.ZG49B           ANOP  ,                                                00322300
.*-------------------------------------------------------------------   00322400
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00322500
                 AIF   (K'&ZXCONID LE 0).ZG49R  NOT I/O                 00322600
         AIF   ('&XCONID' EQ 'NO_CONID').ZG49R                          00322700
                 AIF   ('&XCONID'(1,1) NE '(').ZG49R                    00322800
&ZCGPR           SETC  '&XCONID'(2,K'&XCONID-2)                         00322900
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG49P                     00323000
                 AIF   (K'&ZCGPR GT 2).ZG49Q                            00323100
                 AIF   ('&ZCGPR' EQ '0').ZG49Q                          00323200
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00323300
                 AIF   (T'&ZCGPR NE 'N').ZG49Q  INVALID REG NAME        00323400
.ZG49P           ANOP  ,                                                00323500
                 AIF   (T'&ZCGPR NE 'N').ZG49R  NON NUMERIC             00323600
                 AIF   ('&ZCGPR' LT '2').ZG49Q                          00323700
                 AIF   ('&ZCGPR' LE '12').ZG49R                         00323800
.ZG49Q           ANOP  ,                                                00323900
&ZMS             SETC  '"CONID='   *KGPRA* MNOTE                        00324000
&ZMS             SETC  '&ZMS.&CONID"'                                   00324100
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00324200
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00324300
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00324400
.ZG49R           ANOP  ,                                                00324500
.*------------------------------------------------------------------    00324600
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00324700
&XUPDATERDATA    SETC  ''          INITIALIZE XVARIABLE                 00324800
.*-------------------------------------------------------------------   00324900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00325000
.ZG53            ANOP  ,                                                00325100
                 AIF   (K'&UPDATERDATA(1) LE 0).ZG53A                   00325200
&ZTLC            SETC 'NO'                                              00325300
                 AIF   ('&UPDATERDATA(1)' NE '&ZTLC').ZG54              00325400
&XUPDATERDATA    SETC  'NO'        SET KEYWORD                          00325500
                 AIF   (N'&UPDATERDATA LE 1).ZG53A  CK NUM              00325600
&ZMS             SETC  '"UPDATERDATA='          *KPOSA* MNOTE           00325700
&ZMS             SETC  '&ZMS.&UPDATERDATA"'                             00325800
&ZMS             SETC  '&ZMS "UPDATERDATA"'                             00325900
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00326000
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00326100
.ZG53A           ANOP  ,                                                00326200
.*------------------------------------------------------------------    00326300
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00326400
&ZCVAL           SETC ''           CLEAR ERROR KEY ACCUMULATOR          00326500
.ZG53A0          AIF   (K'&RDATAVAL LE 0).ZG53A1  OK                    00326600
&ZCVAL           SETC '&ZCVAL RDATAVAL'         INCORRECT KEY USED      00326700
.ZG53A1          AIF   (K'&ZCVAL LE 0).ZG53A2   OK                      00326800
&ZCVAL           SETC '&ZCVAL'(2,K'&ZCVAL-1)                            00326900
&ZMS             SETC  '"UPDATERDATA'           *KMEIA* MNOTE           00327000
&ZMS             SETC  '&ZMS.=&UPDATERDATA"'                            00327100
&ZMS             SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'             00327200
                 MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'             00327300
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00327400
.ZG53A2          ANOP  ,                                                00327500
.*-------------------------------------------------------------------   00327600
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00327700
.ZG54            ANOP  ,                                                00327800
&ZTLC            SETC 'YES'                                             00327900
                 AIF   ('&UPDATERDATA(1)' NE '&ZTLC').ZG58              00328000
&XUPDATERDATA    SETC  'YES'       SET KEYWORD                          00328100
                 AIF   (N'&UPDATERDATA LE 1).ZG54A  CK NUM              00328200
&ZMS             SETC  '"UPDATERDATA='          *KPOSA* MNOTE           00328300
&ZMS             SETC  '&ZMS.&UPDATERDATA"'                             00328400
&ZMS             SETC  '&ZMS "UPDATERDATA"'                             00328500
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00328600
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00328700
.ZG54A           ANOP  ,                                                00328800
.*----------------------------------------------------------------***   00328900
.***AG.KXVAR05 NAME, OPT RQD INOUT, KEYS -XVARIABLE KEY                 00329000
                 AIF   (N'&RDATAVAL LE 1).ZG56A  CK NUM                 00329100
&ZMS             SETC  '"RDATAVAL='             *KPOSA* MNOTE           00329200
&ZMS             SETC  '&ZMS.&RDATAVAL"'                                00329300
&ZMS             SETC  '&ZMS "RDATAVAL"'                                00329400
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00329500
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00329600
.ZG56A           ANOP  ,                                                00329700
.*-------------------------------------------------------------------   00329800
.***AG.KXVAR06 NAME, OPT RQD INOUT, KEYS -XVARIABLE                     00329900
&ZXRDATAVAL      SETC  'INOUT'     SET IN/OUTPUT                        00330000
&XRDATAVAL       SETC  '&RDATAVAL(1)'           SET XVARIABLE           00330100
                 AIF   (N'&RDATAVAL GT 1).ZG56B  MULTI PARMS            00330200
&XRDATAVAL       SETC  '&RDATAVAL'              SET XVARIABLE           00330300
.ZG56B           AIF   (K'&RDATAVAL(1) GT 0).ZG56C                      00330400
&ZXRDATAVAL      SETC  ''          RESET IN/OUTPUT                      00330500
&ZMS             SETC  ' '         *KRQDA*                              00330600
&ZMS             SETC  '&ZMS "RDATAVAL" KEY AND ITS'                    00330700
                 MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                 00330800
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00330900
.ZG56C           ANOP  ,                                                00331000
.*-------------------------------------------------------------------   00331100
.***AG.KCK02 NAME, OPT RQD INOUT, KEYS -GPR OUT OF RANGE                00331200
                 AIF   (K'&ZXRDATAVAL LE 0).ZG56R  NOT I/O              00331300
                 AIF   ('&XRDATAVAL'(1,1) NE '(').ZG56R                 00331400
&ZCGPR           SETC  '&XRDATAVAL'(2,K'&XRDATAVAL-2)                   00331500
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG56P                     00331600
                 AIF   (K'&ZCGPR GT 2).ZG56Q                            00331700
                 AIF   ('&ZCGPR' EQ '0').ZG56Q                          00331800
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00331900
                 AIF   (T'&ZCGPR NE 'N').ZG56Q  INVALID REG NAME        00332000
.ZG56P           ANOP  ,                                                00332100
                 AIF   (T'&ZCGPR NE 'N').ZG56R  NON NUMERIC             00332200
                 AIF   ('&ZCGPR' LT '2').ZG56Q                          00332300
                 AIF   ('&ZCGPR' LE '12').ZG56R                         00332400
.ZG56Q           ANOP  ,                                                00332500
&ZMS             SETC  '"RDATAVAL='             *KGPRA* MNOTE           00332600
&ZMS             SETC  '&ZMS.&RDATAVAL"'                                00332700
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00332800
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00332900
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00333000
.ZG56R           ANOP  ,                                                00333100
.*------------------------------------------------------------------    00333200
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00333300
.ZG58            ANOP  ,                                                00333400
&ZXUPDATERDATA   SETC  'INPUT'     SET IN/OUTPUT                        00333500
                 AIF   (K'&XUPDATERDATA GT 0).ZG58E  VALID ARG          00333600
                 AIF   (T'&UPDATERDATA EQ 'O').ZG58D  OMITTED           00333700
&ZASYSLNDX       SETA  0                                                00333800
.ZG58A           ANOP  ,           POSITIONAL MACRO KEY                 00333900
&ZASYSLNDX       SETA  &ZASYSLNDX+1                                     00334000
                 AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG58C                 00334100
&ZTLC            SETC 'UPDATERDATA'                                     00334200
                 AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG58A        00334300
.ZG58B           ANOP  ,                                                00334400
&ZXUPDATERDATA   SETC  ''          RESET IN/OUTPUT                      00334500
&ZMS             SETC  'THE "UPDATERDATA" KEY'  *KOPTA* MNOTE           00334600
&ZMS             SETC  '&ZMS MUST CONTAIN ONE'                          00334700
                 MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                 00334800
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00334900
                 AGO   .ZG58E                                           00335000
.ZG58C           ANOP  ,                                                00335100
&ZXUPDATERDATA   SETC  ''          RESET IN/OUTPUT                      00335200
&ZMS             SETC  '"UPDATERDATA='          *KUKWA* MNOTE           00335300
&ZMS             SETC  '&ZMS.&UPDATERDATA"'                             00335400
&ZMS             SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '        00335500
&ZMS             SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'              00335600
&ZMS             SETC  '&ZMS "NO"'                                      00335700
&ZMS             SETC  '&ZMS OR "YES".'                                 00335800
                 MNOTE 8,' &ZMS '                                       00335900
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00336000
                 AGO   .ZG58E                                           00336100
.ZG58D           ANOP  ,                                                00336200
&XUPDATERDATA    SETC  'NO'        SET DEFAULT KEYWORD                  00336300
.ZG58E           ANOP  ,                                                00336400
.*------------------------------------------------------------------    00336500
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00336600
.ZG59            ANOP  ,                                                00336700
&ZXRDATA         SETC  'INPUT'     SET IN/OUTPUT                        00336800
                 AIF   (K'&XRDATA GT 0).ZG59E   VALID ARG               00336900
                 AIF   (T'&RDATA EQ 'O').ZG59D  OMITTED                 00337000
&ZASYSLNDX       SETA  0                                                00337100
.ZG59A           ANOP  ,           POSITIONAL MACRO KEY                 00337200
&ZASYSLNDX       SETA  &ZASYSLNDX+1                                     00337300
                 AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG59C                 00337400
&ZTLC            SETC 'RDATA'                                           00337500
                 AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG59A        00337600
.ZG59B           ANOP  ,                                                00337700
&ZXRDATA         SETC  ''          RESET IN/OUTPUT                      00337800
&ZMS             SETC  'THE "RDATA" KEY'        *KOPTA* MNOTE           00337900
&ZMS             SETC  '&ZMS MUST CONTAIN ONE'                          00338000
                 MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                 00338100
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00338200
                 AGO   .ZG59E                                           00338300
.ZG59C           ANOP  ,                                                00338400
&ZXRDATA         SETC  ''          RESET IN/OUTPUT                      00338500
&ZMS             SETC  '"RDATA='   *KUKWA* MNOTE                        00338600
&ZMS             SETC  '&ZMS.&RDATA"'                                   00338700
&ZMS             SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '        00338800
&ZMS             SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'              00338900
&ZMS             SETC  '&ZMS "NORDATA",'                                00339000
&ZMS             SETC  '&ZMS "WRITE",'                                  00339100
&ZMS             SETC  '&ZMS OR "REACQUIRE".'                           00339200
                 MNOTE 8,' &ZMS '                                       00339300
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00339400
                 AGO   .ZG59E                                           00339500
.ZG59D           ANOP  ,                                                00339600
&XRDATA          SETC  'NORDATA'   SET DEFAULT KEYWORD                  00339700
.ZG59E           ANOP  ,                                                00339800
.*------------------------------------------------------------------    00339900
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00340000
&XMODE           SETC  ''          INITIALIZE XVARIABLE                 00340100
.*-------------------------------------------------------------------   00340200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00340300
.ZG62            ANOP  ,                                                00340400
                 AIF   (K'&MODE(1) LE 0).ZG62A                          00340500
&ZTLC            SETC 'SYNCSUSPEND'                                     00340600
                 AIF   ('&MODE(1)' NE '&ZTLC').ZG63                     00340700
&XMODE           SETC  'SYNCSUSPEND'            SET KEYWORD             00340800
                 AIF   (N'&MODE LE 1).ZG62A     CK NUM                  00340900
&ZMS             SETC  '"MODE='    *KPOSA* MNOTE                        00341000
&ZMS             SETC  '&ZMS.&MODE"'                                    00341100
&ZMS             SETC  '&ZMS "MODE"'                                    00341200
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00341300
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00341400
.ZG62A           ANOP  ,                                                00341500
.*------------------------------------------------------------------    00341600
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00341700
&ZCVAL           SETC ''           CLEAR ERROR KEY ACCUMULATOR          00341800
.ZG62A0          AIF   (K'&MODEVAL LE 0).ZG62A1  OK                     00341900
&ZCVAL           SETC '&ZCVAL MODEVAL'          INCORRECT KEY USED      00342000
.ZG62A1          AIF   (K'&ZCVAL LE 0).ZG62A2   OK                      00342100
&ZCVAL           SETC '&ZCVAL'(2,K'&ZCVAL-1)                            00342200
&ZMS             SETC  '"MODE'     *KMEIA* MNOTE                        00342300
&ZMS             SETC  '&ZMS.=&MODE"'                                   00342400
&ZMS             SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'             00342500
                 MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'             00342600
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00342700
.ZG62A2          ANOP  ,                                                00342800
.*-------------------------------------------------------------------   00342900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00343000
.ZG63            ANOP  ,                                                00343100
&ZTLC            SETC 'SYNCEXIT'                                        00343200
                 AIF   ('&MODE(1)' NE '&ZTLC').ZG64                     00343300
&XMODE           SETC  'SYNCEXIT'  SET KEYWORD                          00343400
                 AIF   (N'&MODE LE 1).ZG63A     CK NUM                  00343500
&ZMS             SETC  '"MODE='    *KPOSA* MNOTE                        00343600
&ZMS             SETC  '&ZMS.&MODE"'                                    00343700
&ZMS             SETC  '&ZMS "MODE"'                                    00343800
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00343900
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00344000
.ZG63A           ANOP  ,                                                00344100
.*------------------------------------------------------------------    00344200
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00344300
&ZCVAL           SETC ''           CLEAR ERROR KEY ACCUMULATOR          00344400
.ZG63A0          AIF   (K'&MODEVAL LE 0).ZG63A1  OK                     00344500
&ZCVAL           SETC '&ZCVAL MODEVAL'          INCORRECT KEY USED      00344600
.ZG63A1          AIF   (K'&ZCVAL LE 0).ZG63A2   OK                      00344700
&ZCVAL           SETC '&ZCVAL'(2,K'&ZCVAL-1)                            00344800
&ZMS             SETC  '"MODE'     *KMEIA* MNOTE                        00344900
&ZMS             SETC  '&ZMS.=&MODE"'                                   00345000
&ZMS             SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'             00345100
                 MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'             00345200
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00345300
.ZG63A2          ANOP  ,                                                00345400
.*-------------------------------------------------------------------   00345500
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00345600
.ZG64            ANOP  ,                                                00345700
&ZTLC            SETC 'SYNCFAIL'                                        00345800
                 AIF   ('&MODE(1)' NE '&ZTLC').ZG65                     00345900
&XMODE           SETC  'SYNCFAIL'  SET KEYWORD                          00346000
                 AIF   (N'&MODE LE 1).ZG64A     CK NUM                  00346100
&ZMS             SETC  '"MODE='    *KPOSA* MNOTE                        00346200
&ZMS             SETC  '&ZMS.&MODE"'                                    00346300
&ZMS             SETC  '&ZMS "MODE"'                                    00346400
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00346500
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00346600
.ZG64A           ANOP  ,                                                00346700
.*------------------------------------------------------------------    00346800
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00346900
&ZCVAL           SETC ''           CLEAR ERROR KEY ACCUMULATOR          00347000
.ZG64A0          AIF   (K'&MODEVAL LE 0).ZG64A1  OK                     00347100
&ZCVAL           SETC '&ZCVAL MODEVAL'          INCORRECT KEY USED      00347200
.ZG64A1          AIF   (K'&ZCVAL LE 0).ZG64A2   OK                      00347300
&ZCVAL           SETC '&ZCVAL'(2,K'&ZCVAL-1)                            00347400
&ZMS             SETC  '"MODE'     *KMEIA* MNOTE                        00347500
&ZMS             SETC  '&ZMS.=&MODE"'                                   00347600
&ZMS             SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'             00347700
                 MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'             00347800
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00347900
.ZG64A2          ANOP  ,                                                00348000
.*-------------------------------------------------------------------   00348100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00348200
.ZG65            ANOP  ,                                                00348300
&ZTLC            SETC 'VALUE'                                           00348400
                 AIF   ('&MODE(1)' NE '&ZTLC').ZG69                     00348500
&XMODE           SETC  'VALUE'     SET KEYWORD                          00348600
                 AIF   (N'&MODE LE 1).ZG65A     CK NUM                  00348700
&ZMS             SETC  '"MODE='    *KPOSA* MNOTE                        00348800
&ZMS             SETC  '&ZMS.&MODE"'                                    00348900
&ZMS             SETC  '&ZMS "MODE"'                                    00349000
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00349100
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00349200
.ZG65A           ANOP  ,                                                00349300
.*----------------------------------------------------------------***   00349400
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00349500
                 AIF   (N'&MODEVAL LE 1).ZG67A  CK NUM                  00349600
&ZMS             SETC  '"MODEVAL='              *KPOSA* MNOTE           00349700
&ZMS             SETC  '&ZMS.&MODEVAL"'                                 00349800
&ZMS             SETC  '&ZMS "MODEVAL"'                                 00349900
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00350000
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00350100
.ZG67A           ANOP  ,                                                00350200
.*-------------------------------------------------------------------   00350300
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00350400
&ZXMODEVAL       SETC  'INPUT'     SET IN/OUTPUT                        00350500
&XMODEVAL        SETC  '&MODEVAL(1)'            SET XVARIABLE           00350600
                 AIF   (N'&MODEVAL GT 1).ZG67B  MULTI PARMS             00350700
&XMODEVAL        SETC  '&MODEVAL'  SET XVARIABLE                        00350800
.ZG67B           AIF   (K'&MODEVAL(1) GT 0).ZG67C                       00350900
&ZXMODEVAL       SETC  ''          RESET IN/OUTPUT                      00351000
&ZMS             SETC  ' '         *KRQDA*                              00351100
&ZMS             SETC  '&ZMS "MODEVAL" KEY AND ITS'                     00351200
                 MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                 00351300
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00351400
.ZG67C           ANOP  ,                                                00351500
.*-------------------------------------------------------------------   00351600
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                00351700
                 AIF   (K'&ZXMODEVAL LE 0).ZG67R  NOT I/O               00351800
                 AIF   ('&XMODEVAL'(1,1) NE '(').ZG67R                  00351900
&ZCGPR           SETC  '&XMODEVAL'(2,K'&XMODEVAL-2)                     00352000
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG67P                     00352100
                 AIF   (K'&ZCGPR GT 2).ZG67Q                            00352200
                 AIF   ('&ZCGPR' EQ '0').ZG67Q                          00352300
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00352400
                 AIF   (T'&ZCGPR NE 'N').ZG67Q  INVALID REG NAME        00352500
.ZG67P           ANOP  ,                                                00352600
                 AIF   (T'&ZCGPR NE 'N').ZG67R  NON NUMERIC             00352700
                 AIF   ('&ZCGPR' LT '2').ZG67Q                          00352800
                 AIF   ('&ZCGPR' LE '12').ZG67R                         00352900
.ZG67Q           ANOP  ,                                                00353000
&ZMS             SETC  '"MODEVAL='              *KGPRA* MNOTE           00353100
&ZMS             SETC  '&ZMS.&MODEVAL"'                                 00353200
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00353300
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00353400
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00353500
.ZG67R           ANOP  ,                                                00353600
.*------------------------------------------------------------------    00353700
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00353800
.ZG69            ANOP  ,                                                00353900
&ZXMODE          SETC  'INPUT'     SET IN/OUTPUT                        00354000
                 AIF   (K'&XMODE GT 0).ZG69E    VALID ARG               00354100
                 AIF   (T'&MODE EQ 'O').ZG69D   OMITTED                 00354200
&ZASYSLNDX       SETA  0                                                00354300
.ZG69A           ANOP  ,           POSITIONAL MACRO KEY                 00354400
&ZASYSLNDX       SETA  &ZASYSLNDX+1                                     00354500
                 AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG69C                 00354600
&ZTLC            SETC 'MODE'                                            00354700
                 AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG69A        00354800
.ZG69B           ANOP  ,                                                00354900
&ZXMODE          SETC  ''          RESET IN/OUTPUT                      00355000
&ZMS             SETC  'THE "MODE" KEY'         *KOPTA* MNOTE           00355100
&ZMS             SETC  '&ZMS MUST CONTAIN ONE'                          00355200
                 MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                 00355300
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00355400
                 AGO   .ZG69E                                           00355500
.ZG69C           ANOP  ,                                                00355600
&ZXMODE          SETC  ''          RESET IN/OUTPUT                      00355700
&ZMS             SETC  '"MODE='    *KUKWA* MNOTE                        00355800
&ZMS             SETC  '&ZMS.&MODE"'                                    00355900
&ZMS             SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '        00356000
&ZMS             SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'              00356100
&ZMS             SETC  '&ZMS "SYNCSUSPEND",'                            00356200
&ZMS             SETC  '&ZMS "SYNCEXIT",'                               00356300
&ZMS             SETC  '&ZMS "SYNCFAIL",'                               00356400
&ZMS             SETC  '&ZMS OR "VALUE".'                               00356500
                 MNOTE 8,' &ZMS '                                       00356600
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00356700
                 AGO   .ZG69E                                           00356800
.ZG69D           ANOP  ,                                                00356900
&XMODE           SETC  'SYNCSUSPEND'            SET DEFAULT KEYWORD     00357000
.ZG69E           ANOP  ,                                                00357100
.*-------------------------------------------------------------------   00357200
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00357300
.ZG70            ANOP  ,                                                00357400
&ZTLC            SETC 'ALTER'                                           00357500
                 AIF   ('&REQUEST(1)' NE '&ZTLC').ZG117                 00357600
&XREQUEST        SETC  'ALTER'     SET KEYWORD                          00357700
                 AIF   (N'&REQUEST LE 1).ZG70A  CK NUM                  00357800
&ZMS             SETC  '"REQUEST='              *KPOSA* MNOTE           00357900
&ZMS             SETC  '&ZMS.&REQUEST"'                                 00358000
&ZMS             SETC  '&ZMS "REQUEST"'                                 00358100
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00358200
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00358300
.ZG70A           ANOP  ,                                                00358400
.*------------------------------------------------------------------    00358500
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00358600
&ZCVAL           SETC ''           CLEAR ERROR KEY ACCUMULATOR          00358700
.ZG70A0          AIF   (K'&LOCKDATA LE 0).ZG70A1  OK                    00358800
&ZCVAL           SETC '&ZCVAL LOCKDATA'         INCORRECT KEY USED      00358900
.ZG70A1          AIF   (K'&CONID LE 0).ZG70A2   OK                      00359000
&ZCVAL           SETC '&ZCVAL CONID'            INCORRECT KEY USED      00359100
.ZG70A2          AIF   (K'&UPDATERDATA LE 0).ZG70A3  OK                 00359200
&ZCVAL           SETC '&ZCVAL UPDATERDATA'      INCORRECT KEY USED      00359300
.ZG70A3          AIF   (K'&REQBUFFER LE 0).ZG70A4  OK                   00359400
&ZCVAL           SETC '&ZCVAL REQBUFFER'        INCORRECT KEY USED      00359500
.ZG70A4          AIF   (K'&REQNUM LE 0).ZG70A5  OK                      00359600
&ZCVAL           SETC '&ZCVAL REQNUM'           INCORRECT KEY USED      00359700
.ZG70A5          AIF   (K'&REQPROC LE 0).ZG70A6  OK                     00359800
&ZCVAL           SETC '&ZCVAL REQPROC'          INCORRECT KEY USED      00359900
.ZG70A6          AIF   (K'&ZCVAL LE 0).ZG70A7   OK                      00360000
&ZCVAL           SETC '&ZCVAL'(2,K'&ZCVAL-1)                            00360100
&ZMS             SETC  '"REQUEST'  *KMEIA* MNOTE                        00360200
&ZMS             SETC  '&ZMS.=&REQUEST"'                                00360300
&ZMS             SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'             00360400
                 MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'             00360500
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00360600
.ZG70A7          ANOP  ,                                                00360700
.*----------------------------------------------------------------***   00360800
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00360900
                 AIF   (N'&RNAME LE 1).ZG72A    CK NUM                  00361000
&ZMS             SETC  '"RNAME='   *KPOSA* MNOTE                        00361100
&ZMS             SETC  '&ZMS.&RNAME"'                                   00361200
&ZMS             SETC  '&ZMS "RNAME"'                                   00361300
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00361400
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00361500
.ZG72A           ANOP  ,                                                00361600
.*-------------------------------------------------------------------   00361700
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00361800
&ZXRNAME         SETC  'INPUT'     SET IN/OUTPUT                        00361900
&XRNAME          SETC  '&RNAME(1)'              SET XVARIABLE           00362000
                 AIF   (N'&RNAME GT 1).ZG72B    MULTI PARMS             00362100
&XRNAME          SETC  '&RNAME'    SET XVARIABLE                        00362200
.ZG72B           AIF   (K'&RNAME(1) GT 0).ZG72C                         00362300
&ZXRNAME         SETC  ''          RESET IN/OUTPUT                      00362400
&ZMS             SETC  ' '         *KRQDA*                              00362500
&ZMS             SETC  '&ZMS "RNAME" KEY AND ITS'                       00362600
                 MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                 00362700
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00362800
.ZG72C           ANOP  ,                                                00362900
.*-------------------------------------------------------------------   00363000
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00363100
                 AIF   (K'&ZXRNAME LE 0).ZG72R  NOT I/O                 00363200
                 AIF   ('&XRNAME'(1,1) NE '(').ZG72R                    00363300
&ZCGPR           SETC  '&XRNAME'(2,K'&XRNAME-2)                         00363400
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG72P                     00363500
                 AIF   (K'&ZCGPR GT 2).ZG72Q                            00363600
                 AIF   ('&ZCGPR' EQ '0').ZG72Q                          00363700
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00363800
                 AIF   (T'&ZCGPR NE 'N').ZG72Q  INVALID REG NAME        00363900
.ZG72P           ANOP  ,                                                00364000
                 AIF   (T'&ZCGPR NE 'N').ZG72R  NON NUMERIC             00364100
                 AIF   ('&ZCGPR' LT '2').ZG72Q                          00364200
                 AIF   ('&ZCGPR' LE '12').ZG72R                         00364300
.ZG72Q           ANOP  ,                                                00364400
&ZMS             SETC  '"RNAME='   *KGPRA* MNOTE                        00364500
&ZMS             SETC  '&ZMS.&RNAME"'                                   00364600
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00364700
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00364800
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00364900
.ZG72R           ANOP  ,                                                00365000
.*----------------------------------------------------------------***   00365100
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00365200
                 AIF   (N'&RNAMELEN LE 1).ZG75A  CK NUM                 00365300
&ZMS             SETC  '"RNAMELEN='             *KPOSA* MNOTE           00365400
&ZMS             SETC  '&ZMS.&RNAMELEN"'                                00365500
&ZMS             SETC  '&ZMS "RNAMELEN"'                                00365600
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00365700
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00365800
.ZG75A           ANOP  ,                                                00365900
.*-------------------------------------------------------------------   00366000
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00366100
&ZXRNAMELEN      SETC  'INPUT'     SET IN/OUTPUT                        00366200
&XRNAMELEN       SETC  'NO_RNAMELEN'                                    00366300
                 AIF   (K'&RNAMELEN(1) LE 0).ZG75B  PARM                00366400
&XRNAMELEN       SETC  '&RNAMELEN(1)'           SET XVARIABLE           00366500
                 AIF   (N'&RNAMELEN GT 1).ZG75B  MULTI PARMS            00366600
&XRNAMELEN       SETC  '&RNAMELEN'              SET XVARIABLE           00366700
.ZG75B           ANOP  ,                                                00366800
.*-------------------------------------------------------------------   00366900
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00367000
                 AIF   (K'&ZXRNAMELEN LE 0).ZG75R  NOT I/O              00367100
         AIF   ('&XRNAMELEN' EQ 'NO_RNAMELEN').ZG75R                    00367200
                 AIF   ('&XRNAMELEN'(1,1) NE '(').ZG75R                 00367300
&ZCGPR           SETC  '&XRNAMELEN'(2,K'&XRNAMELEN-2)                   00367400
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG75P                     00367500
                 AIF   (K'&ZCGPR GT 2).ZG75Q                            00367600
                 AIF   ('&ZCGPR' EQ '0').ZG75Q                          00367700
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00367800
                 AIF   (T'&ZCGPR NE 'N').ZG75Q  INVALID REG NAME        00367900
.ZG75P           ANOP  ,                                                00368000
                 AIF   (T'&ZCGPR NE 'N').ZG75R  NON NUMERIC             00368100
                 AIF   ('&ZCGPR' LT '2').ZG75Q                          00368200
                 AIF   ('&ZCGPR' LE '12').ZG75R                         00368300
.ZG75Q           ANOP  ,                                                00368400
&ZMS             SETC  '"RNAMELEN='             *KGPRA* MNOTE           00368500
&ZMS             SETC  '&ZMS.&RNAMELEN"'                                00368600
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00368700
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00368800
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00368900
.ZG75R           ANOP  ,                                                00369000
.*----------------------------------------------------------------***   00369100
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00369200
                 AIF   (N'&HASHVAL LE 1).ZG78A  CK NUM                  00369300
&ZMS             SETC  '"HASHVAL='              *KPOSA* MNOTE           00369400
&ZMS             SETC  '&ZMS.&HASHVAL"'                                 00369500
&ZMS             SETC  '&ZMS "HASHVAL"'                                 00369600
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00369700
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00369800
.ZG78A           ANOP  ,                                                00369900
.*-------------------------------------------------------------------   00370000
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00370100
&ZXHASHVAL       SETC  'INPUT'     SET IN/OUTPUT                        00370200
&XHASHVAL        SETC  '&HASHVAL(1)'            SET XVARIABLE           00370300
                 AIF   (N'&HASHVAL GT 1).ZG78B  MULTI PARMS             00370400
&XHASHVAL        SETC  '&HASHVAL'  SET XVARIABLE                        00370500
.ZG78B           AIF   (K'&HASHVAL(1) GT 0).ZG78C                       00370600
&ZXHASHVAL       SETC  ''          RESET IN/OUTPUT                      00370700
&ZMS             SETC  ' '         *KRQDA*                              00370800
&ZMS             SETC  '&ZMS "HASHVAL" KEY AND ITS'                     00370900
                 MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                 00371000
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00371100
.ZG78C           ANOP  ,                                                00371200
.*-------------------------------------------------------------------   00371300
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00371400
                 AIF   (K'&ZXHASHVAL LE 0).ZG78R  NOT I/O               00371500
                 AIF   ('&XHASHVAL'(1,1) NE '(').ZG78R                  00371600
&ZCGPR           SETC  '&XHASHVAL'(2,K'&XHASHVAL-2)                     00371700
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG78P                     00371800
                 AIF   (K'&ZCGPR GT 2).ZG78Q                            00371900
                 AIF   ('&ZCGPR' EQ '0').ZG78Q                          00372000
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00372100
                 AIF   (T'&ZCGPR NE 'N').ZG78Q  INVALID REG NAME        00372200
.ZG78P           ANOP  ,                                                00372300
                 AIF   (T'&ZCGPR NE 'N').ZG78R  NON NUMERIC             00372400
                 AIF   ('&ZCGPR' LT '2').ZG78Q                          00372500
                 AIF   ('&ZCGPR' LE '12').ZG78R                         00372600
.ZG78Q           ANOP  ,                                                00372700
&ZMS             SETC  '"HASHVAL='              *KGPRA* MNOTE           00372800
&ZMS             SETC  '&ZMS.&HASHVAL"'                                 00372900
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00373000
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00373100
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00373200
.ZG78R           ANOP  ,                                                00373300
.*------------------------------------------------------------------    00373400
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00373500
&XSTATE          SETC  ''          INITIALIZE XVARIABLE                 00373600
.*-------------------------------------------------------------------   00373700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00373800
.ZG82            ANOP  ,                                                00373900
                 AIF   (K'&STATE(1) LE 0).ZG82A                         00374000
&ZTLC            SETC 'SHR'                                             00374100
                 AIF   ('&STATE(1)' NE '&ZTLC').ZG83                    00374200
&XSTATE          SETC  'SHR'       SET KEYWORD                          00374300
                 AIF   (N'&STATE LE 1).ZG82A    CK NUM                  00374400
&ZMS             SETC  '"STATE='   *KPOSA* MNOTE                        00374500
&ZMS             SETC  '&ZMS.&STATE"'                                   00374600
&ZMS             SETC  '&ZMS "STATE"'                                   00374700
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00374800
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00374900
.ZG82A           ANOP  ,                                                00375000
.*------------------------------------------------------------------    00375100
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00375200
&ZCVAL           SETC ''           CLEAR ERROR KEY ACCUMULATOR          00375300
.ZG82A0          AIF   (K'&STATEVAL LE 0).ZG82A1  OK                    00375400
&ZCVAL           SETC '&ZCVAL STATEVAL'         INCORRECT KEY USED      00375500
.ZG82A1          AIF   (K'&ZCVAL LE 0).ZG82A2   OK                      00375600
&ZCVAL           SETC '&ZCVAL'(2,K'&ZCVAL-1)                            00375700
&ZMS             SETC  '"STATE'    *KMEIA* MNOTE                        00375800
&ZMS             SETC  '&ZMS.=&STATE"'                                  00375900
&ZMS             SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'             00376000
                 MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'             00376100
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00376200
.ZG82A2          ANOP  ,                                                00376300
.*-------------------------------------------------------------------   00376400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00376500
.ZG83            ANOP  ,                                                00376600
&ZTLC            SETC 'EXCL'                                            00376700
                 AIF   ('&STATE(1)' NE '&ZTLC').ZG84                    00376800
&XSTATE          SETC  'EXCL'      SET KEYWORD                          00376900
                 AIF   (N'&STATE LE 1).ZG83A    CK NUM                  00377000
&ZMS             SETC  '"STATE='   *KPOSA* MNOTE                        00377100
&ZMS             SETC  '&ZMS.&STATE"'                                   00377200
&ZMS             SETC  '&ZMS "STATE"'                                   00377300
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00377400
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00377500
.ZG83A           ANOP  ,                                                00377600
.*------------------------------------------------------------------    00377700
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00377800
&ZCVAL           SETC ''           CLEAR ERROR KEY ACCUMULATOR          00377900
.ZG83A0          AIF   (K'&STATEVAL LE 0).ZG83A1  OK                    00378000
&ZCVAL           SETC '&ZCVAL STATEVAL'         INCORRECT KEY USED      00378100
.ZG83A1          AIF   (K'&ZCVAL LE 0).ZG83A2   OK                      00378200
&ZCVAL           SETC '&ZCVAL'(2,K'&ZCVAL-1)                            00378300
&ZMS             SETC  '"STATE'    *KMEIA* MNOTE                        00378400
&ZMS             SETC  '&ZMS.=&STATE"'                                  00378500
&ZMS             SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'             00378600
                 MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'             00378700
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00378800
.ZG83A2          ANOP  ,                                                00378900
.*-------------------------------------------------------------------   00379000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00379100
.ZG84            ANOP  ,                                                00379200
&ZTLC            SETC 'VALUE'                                           00379300
                 AIF   ('&STATE(1)' NE '&ZTLC').ZG88                    00379400
&XSTATE          SETC  'VALUE'     SET KEYWORD                          00379500
                 AIF   (N'&STATE LE 1).ZG84A    CK NUM                  00379600
&ZMS             SETC  '"STATE='   *KPOSA* MNOTE                        00379700
&ZMS             SETC  '&ZMS.&STATE"'                                   00379800
&ZMS             SETC  '&ZMS "STATE"'                                   00379900
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00380000
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00380100
.ZG84A           ANOP  ,                                                00380200
.*----------------------------------------------------------------***   00380300
.***AG.KXVAR05 NAME, OPT RQD INOUT, KEYS -XVARIABLE KEY                 00380400
                 AIF   (N'&STATEVAL LE 1).ZG86A  CK NUM                 00380500
&ZMS             SETC  '"STATEVAL='             *KPOSA* MNOTE           00380600
&ZMS             SETC  '&ZMS.&STATEVAL"'                                00380700
&ZMS             SETC  '&ZMS "STATEVAL"'                                00380800
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00380900
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00381000
.ZG86A           ANOP  ,                                                00381100
.*-------------------------------------------------------------------   00381200
.***AG.KXVAR06 NAME, OPT RQD INOUT, KEYS -XVARIABLE                     00381300
&ZXSTATEVAL      SETC  'INOUT'     SET IN/OUTPUT                        00381400
&XSTATEVAL       SETC  '&STATEVAL(1)'           SET XVARIABLE           00381500
                 AIF   (N'&STATEVAL GT 1).ZG86B  MULTI PARMS            00381600
&XSTATEVAL       SETC  '&STATEVAL'              SET XVARIABLE           00381700
.ZG86B           AIF   (K'&STATEVAL(1) GT 0).ZG86C                      00381800
&ZXSTATEVAL      SETC  ''          RESET IN/OUTPUT                      00381900
&ZMS             SETC  ' '         *KRQDA*                              00382000
&ZMS             SETC  '&ZMS "STATEVAL" KEY AND ITS'                    00382100
                 MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                 00382200
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00382300
.ZG86C           ANOP  ,                                                00382400
.*-------------------------------------------------------------------   00382500
.***AG.KCK02 NAME, OPT RQD INOUT, KEYS -GPR OUT OF RANGE                00382600
                 AIF   (K'&ZXSTATEVAL LE 0).ZG86R  NOT I/O              00382700
                 AIF   ('&XSTATEVAL'(1,1) NE '(').ZG86R                 00382800
&ZCGPR           SETC  '&XSTATEVAL'(2,K'&XSTATEVAL-2)                   00382900
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG86P                     00383000
                 AIF   (K'&ZCGPR GT 2).ZG86Q                            00383100
                 AIF   ('&ZCGPR' EQ '0').ZG86Q                          00383200
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00383300
                 AIF   (T'&ZCGPR NE 'N').ZG86Q  INVALID REG NAME        00383400
.ZG86P           ANOP  ,                                                00383500
                 AIF   (T'&ZCGPR NE 'N').ZG86R  NON NUMERIC             00383600
                 AIF   ('&ZCGPR' LT '2').ZG86Q                          00383700
                 AIF   ('&ZCGPR' LE '12').ZG86R                         00383800
.ZG86Q           ANOP  ,                                                00383900
&ZMS             SETC  '"STATEVAL='             *KGPRA* MNOTE           00384000
&ZMS             SETC  '&ZMS.&STATEVAL"'                                00384100
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00384200
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00384300
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00384400
.ZG86R           ANOP  ,                                                00384500
.*------------------------------------------------------------------    00384600
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00384700
.ZG88            ANOP  ,                                                00384800
&ZXSTATE         SETC  'INPUT'     SET IN/OUTPUT                        00384900
                 AIF   (K'&XSTATE GT 0).ZG88E   VALID ARG               00385000
                 AIF   (T'&STATE EQ 'O').ZG88D  OMITTED                 00385100
&ZASYSLNDX       SETA  0                                                00385200
.ZG88A           ANOP  ,           POSITIONAL MACRO KEY                 00385300
&ZASYSLNDX       SETA  &ZASYSLNDX+1                                     00385400
                 AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG88C                 00385500
&ZTLC            SETC 'STATE'                                           00385600
                 AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG88A        00385700
.ZG88B           ANOP  ,                                                00385800
&ZXSTATE         SETC  ''          RESET IN/OUTPUT                      00385900
&ZMS             SETC  'THE "STATE" KEY'        *KOPTA* MNOTE           00386000
&ZMS             SETC  '&ZMS MUST CONTAIN ONE'                          00386100
                 MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                 00386200
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00386300
                 AGO   .ZG88E                                           00386400
.ZG88C           ANOP  ,                                                00386500
&ZXSTATE         SETC  ''          RESET IN/OUTPUT                      00386600
&ZMS             SETC  '"STATE='   *KUKWA* MNOTE                        00386700
&ZMS             SETC  '&ZMS.&STATE"'                                   00386800
&ZMS             SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '        00386900
&ZMS             SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'              00387000
&ZMS             SETC  '&ZMS "SHR",'                                    00387100
&ZMS             SETC  '&ZMS "EXCL",'                                   00387200
&ZMS             SETC  '&ZMS OR "VALUE".'                               00387300
                 MNOTE 8,' &ZMS '                                       00387400
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00387500
                 AGO   .ZG88E                                           00387600
.ZG88D           ANOP  ,                                                00387700
&XSTATE          SETC  'SHR'       SET DEFAULT KEYWORD                  00387800
.ZG88E           ANOP  ,                                                00387900
.*----------------------------------------------------------------***   00388000
.***AG.KXVAR05 NAME, OPT INOUT, KEYS -XVARIABLE KEY                     00388100
                 AIF   (N'&UDATAVAL LE 1).ZG90A  CK NUM                 00388200
&ZMS             SETC  '"UDATAVAL='             *KPOSA* MNOTE           00388300
&ZMS             SETC  '&ZMS.&UDATAVAL"'                                00388400
&ZMS             SETC  '&ZMS "UDATAVAL"'                                00388500
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00388600
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00388700
.ZG90A           ANOP  ,                                                00388800
.*-------------------------------------------------------------------   00388900
.***AG.KXVAR13 NAME, OPT INOUT, KEYS -XVARIABLE                         00389000
&ZXUDATAVAL      SETC  'INOUT'     SET IN/OUTPUT                        00389100
&XUDATAVAL       SETC  'ALL_ZEROES'                                     00389200
                 AIF   (K'&UDATAVAL(1) LE 0).ZG90B  PARM                00389300
&XUDATAVAL       SETC  '&UDATAVAL(1)'           SET XVARIABLE           00389400
                 AIF   (N'&UDATAVAL GT 1).ZG90B  MULTI PARMS            00389500
&XUDATAVAL       SETC  '&UDATAVAL'              SET XVARIABLE           00389600
.ZG90B           ANOP  ,                                                00389700
.*-------------------------------------------------------------------   00389800
.***AG.KCK02 NAME, OPT INOUT, KEYS -GPR OUT OF RANGE                    00389900
                 AIF   (K'&ZXUDATAVAL LE 0).ZG90R  NOT I/O              00390000
         AIF   ('&XUDATAVAL' EQ 'ALL_ZEROES').ZG90R                     00390100
                 AIF   ('&XUDATAVAL'(1,1) NE '(').ZG90R                 00390200
&ZCGPR           SETC  '&XUDATAVAL'(2,K'&XUDATAVAL-2)                   00390300
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG90P                     00390400
                 AIF   (K'&ZCGPR GT 2).ZG90Q                            00390500
                 AIF   ('&ZCGPR' EQ '0').ZG90Q                          00390600
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00390700
                 AIF   (T'&ZCGPR NE 'N').ZG90Q  INVALID REG NAME        00390800
.ZG90P           ANOP  ,                                                00390900
                 AIF   (T'&ZCGPR NE 'N').ZG90R  NON NUMERIC             00391000
                 AIF   ('&ZCGPR' LT '2').ZG90Q                          00391100
                 AIF   ('&ZCGPR' LE '12').ZG90R                         00391200
.ZG90Q           ANOP  ,                                                00391300
&ZMS             SETC  '"UDATAVAL='             *KGPRA* MNOTE           00391400
&ZMS             SETC  '&ZMS.&UDATAVAL"'                                00391500
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00391600
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00391700
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00391800
.ZG90R           ANOP  ,                                                00391900
.*------------------------------------------------------------------    00392000
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00392100
&XRDATA          SETC  ''          INITIALIZE XVARIABLE                 00392200
.*-------------------------------------------------------------------   00392300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00392400
.ZG94            ANOP  ,                                                00392500
                 AIF   (K'&RDATA(1) LE 0).ZG94A                         00392600
&ZTLC            SETC 'UNCHANGED'                                       00392700
                 AIF   ('&RDATA(1)' NE '&ZTLC').ZG95                    00392800
&XRDATA          SETC  'UNCHANGED'              SET KEYWORD             00392900
                 AIF   (N'&RDATA LE 1).ZG94A    CK NUM                  00393000
&ZMS             SETC  '"RDATA='   *KPOSA* MNOTE                        00393100
&ZMS             SETC  '&ZMS.&RDATA"'                                   00393200
&ZMS             SETC  '&ZMS "RDATA"'                                   00393300
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00393400
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00393500
.ZG94A           ANOP  ,                                                00393600
.*------------------------------------------------------------------    00393700
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00393800
&ZCVAL           SETC ''           CLEAR ERROR KEY ACCUMULATOR          00393900
.ZG94A0          AIF   (K'&RDATAVAL LE 0).ZG94A1  OK                    00394000
&ZCVAL           SETC '&ZCVAL RDATAVAL'         INCORRECT KEY USED      00394100
.ZG94A1          AIF   (K'&ENTRYID LE 0).ZG94A2  OK                     00394200
&ZCVAL           SETC '&ZCVAL ENTRYID'          INCORRECT KEY USED      00394300
.ZG94A2          AIF   (K'&ENTRYCOUNT LE 0).ZG94A3  OK                  00394400
&ZCVAL           SETC '&ZCVAL ENTRYCOUNT'       INCORRECT KEY USED      00394500
.ZG94A3          AIF   (K'&ZCVAL LE 0).ZG94A4   OK                      00394600
&ZCVAL           SETC '&ZCVAL'(2,K'&ZCVAL-1)                            00394700
&ZMS             SETC  '"RDATA'    *KMEIA* MNOTE                        00394800
&ZMS             SETC  '&ZMS.=&RDATA"'                                  00394900
&ZMS             SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'             00395000
                 MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'             00395100
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00395200
.ZG94A4          ANOP  ,                                                00395300
.*-------------------------------------------------------------------   00395400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00395500
.ZG95            ANOP  ,                                                00395600
&ZTLC            SETC 'DELETE'                                          00395700
                 AIF   ('&RDATA(1)' NE '&ZTLC').ZG96                    00395800
&XRDATA          SETC  'DELETE'    SET KEYWORD                          00395900
                 AIF   (N'&RDATA LE 1).ZG95A    CK NUM                  00396000
&ZMS             SETC  '"RDATA='   *KPOSA* MNOTE                        00396100
&ZMS             SETC  '&ZMS.&RDATA"'                                   00396200
&ZMS             SETC  '&ZMS "RDATA"'                                   00396300
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00396400
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00396500
.ZG95A           ANOP  ,                                                00396600
.*------------------------------------------------------------------    00396700
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00396800
&ZCVAL           SETC ''           CLEAR ERROR KEY ACCUMULATOR          00396900
.ZG95A0          AIF   (K'&RDATAVAL LE 0).ZG95A1  OK                    00397000
&ZCVAL           SETC '&ZCVAL RDATAVAL'         INCORRECT KEY USED      00397100
.ZG95A1          AIF   (K'&ENTRYID LE 0).ZG95A2  OK                     00397200
&ZCVAL           SETC '&ZCVAL ENTRYID'          INCORRECT KEY USED      00397300
.ZG95A2          AIF   (K'&ENTRYCOUNT LE 0).ZG95A3  OK                  00397400
&ZCVAL           SETC '&ZCVAL ENTRYCOUNT'       INCORRECT KEY USED      00397500
.ZG95A3          AIF   (K'&ZCVAL LE 0).ZG95A4   OK                      00397600
&ZCVAL           SETC '&ZCVAL'(2,K'&ZCVAL-1)                            00397700
&ZMS             SETC  '"RDATA'    *KMEIA* MNOTE                        00397800
&ZMS             SETC  '&ZMS.=&RDATA"'                                  00397900
&ZMS             SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'             00398000
                 MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'             00398100
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00398200
.ZG95A4          ANOP  ,                                                00398300
.*-------------------------------------------------------------------   00398400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00398500
.ZG96            ANOP  ,                                                00398600
&ZTLC            SETC 'WRITE'                                           00398700
                 AIF   ('&RDATA(1)' NE '&ZTLC').ZG106                   00398800
&XRDATA          SETC  'WRITE'     SET KEYWORD                          00398900
                 AIF   (N'&RDATA LE 1).ZG96A    CK NUM                  00399000
&ZMS             SETC  '"RDATA='   *KPOSA* MNOTE                        00399100
&ZMS             SETC  '&ZMS.&RDATA"'                                   00399200
&ZMS             SETC  '&ZMS "RDATA"'                                   00399300
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00399400
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00399500
.ZG96A           ANOP  ,                                                00399600
.*----------------------------------------------------------------***   00399700
.***AG.KXVAR05 NAME, OPT RQD INOUT, KEYS -XVARIABLE KEY                 00399800
                 AIF   (N'&RDATAVAL LE 1).ZG98A  CK NUM                 00399900
&ZMS             SETC  '"RDATAVAL='             *KPOSA* MNOTE           00400000
&ZMS             SETC  '&ZMS.&RDATAVAL"'                                00400100
&ZMS             SETC  '&ZMS "RDATAVAL"'                                00400200
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00400300
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00400400
.ZG98A           ANOP  ,                                                00400500
.*-------------------------------------------------------------------   00400600
.***AG.KXVAR06 NAME, OPT RQD INOUT, KEYS -XVARIABLE                     00400700
&ZXRDATAVAL      SETC  'INOUT'     SET IN/OUTPUT                        00400800
&XRDATAVAL       SETC  '&RDATAVAL(1)'           SET XVARIABLE           00400900
                 AIF   (N'&RDATAVAL GT 1).ZG98B  MULTI PARMS            00401000
&XRDATAVAL       SETC  '&RDATAVAL'              SET XVARIABLE           00401100
.ZG98B           AIF   (K'&RDATAVAL(1) GT 0).ZG98C                      00401200
&ZXRDATAVAL      SETC  ''          RESET IN/OUTPUT                      00401300
&ZMS             SETC  ' '         *KRQDA*                              00401400
&ZMS             SETC  '&ZMS "RDATAVAL" KEY AND ITS'                    00401500
                 MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                 00401600
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00401700
.ZG98C           ANOP  ,                                                00401800
.*-------------------------------------------------------------------   00401900
.***AG.KCK02 NAME, OPT RQD INOUT, KEYS -GPR OUT OF RANGE                00402000
                 AIF   (K'&ZXRDATAVAL LE 0).ZG98R  NOT I/O              00402100
                 AIF   ('&XRDATAVAL'(1,1) NE '(').ZG98R                 00402200
&ZCGPR           SETC  '&XRDATAVAL'(2,K'&XRDATAVAL-2)                   00402300
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG98P                     00402400
                 AIF   (K'&ZCGPR GT 2).ZG98Q                            00402500
                 AIF   ('&ZCGPR' EQ '0').ZG98Q                          00402600
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00402700
                 AIF   (T'&ZCGPR NE 'N').ZG98Q  INVALID REG NAME        00402800
.ZG98P           ANOP  ,                                                00402900
                 AIF   (T'&ZCGPR NE 'N').ZG98R  NON NUMERIC             00403000
                 AIF   ('&ZCGPR' LT '2').ZG98Q                          00403100
                 AIF   ('&ZCGPR' LE '12').ZG98R                         00403200
.ZG98Q           ANOP  ,                                                00403300
&ZMS             SETC  '"RDATAVAL='             *KGPRA* MNOTE           00403400
&ZMS             SETC  '&ZMS.&RDATAVAL"'                                00403500
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00403600
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00403700
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00403800
.ZG98R           ANOP  ,                                                00403900
.*----------------------------------------------------------------***   00404000
.***AG.KXVAR05 NAME, OPT RQD OUTPUT, KEYS -XVARIABLE KEY                00404100
                 AIF   (N'&ENTRYID LE 1).ZG101A  CK NUM                 00404200
&ZMS             SETC  '"ENTRYID='              *KPOSA* MNOTE           00404300
&ZMS             SETC  '&ZMS.&ENTRYID"'                                 00404400
&ZMS             SETC  '&ZMS "ENTRYID"'                                 00404500
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00404600
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00404700
.ZG101A          ANOP  ,                                                00404800
.*-------------------------------------------------------------------   00404900
.***AG.KXVAR06 NAME, OPT RQD OUTPUT, KEYS -XVARIABLE                    00405000
&ZXENTRYID       SETC  'OUTPUT'    SET IN/OUTPUT                        00405100
&XENTRYID        SETC  '&ENTRYID(1)'            SET XVARIABLE           00405200
                 AIF   (N'&ENTRYID GT 1).ZG101B  MULTI PARMS            00405300
&XENTRYID        SETC  '&ENTRYID'  SET XVARIABLE                        00405400
.ZG101B          AIF   (K'&ENTRYID(1) GT 0).ZG101C                      00405500
&ZXENTRYID       SETC  ''          RESET IN/OUTPUT                      00405600
&ZMS             SETC  ' '         *KRQDA*                              00405700
&ZMS             SETC  '&ZMS "ENTRYID" KEY AND ITS'                     00405800
                 MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                 00405900
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00406000
.ZG101C          ANOP  ,                                                00406100
.*-------------------------------------------------------------------   00406200
.***AG.KCK02 NAME, OPT RQD OUTPUT, KEYS -GPR OUT OF RANGE               00406300
                 AIF   (K'&ZXENTRYID LE 0).ZG101R  NOT I/O              00406400
                 AIF   ('&XENTRYID'(1,1) NE '(').ZG101R                 00406500
&ZCGPR           SETC  '&XENTRYID'(2,K'&XENTRYID-2)                     00406600
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG101P                    00406700
                 AIF   (K'&ZCGPR GT 2).ZG101Q                           00406800
                 AIF   ('&ZCGPR' EQ '0').ZG101Q                         00406900
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00407000
                 AIF   (T'&ZCGPR NE 'N').ZG101Q  INVALID REG NAME       00407100
.ZG101P          ANOP  ,                                                00407200
                 AIF   (T'&ZCGPR NE 'N').ZG101R  NON NUMERIC            00407300
                 AIF   ('&ZCGPR' LT '2').ZG101Q                         00407400
                 AIF   ('&ZCGPR' LE '12').ZG101R                        00407500
.ZG101Q          ANOP  ,                                                00407600
&ZMS             SETC  '"ENTRYID='              *KGPRA* MNOTE           00407700
&ZMS             SETC  '&ZMS.&ENTRYID"'                                 00407800
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00407900
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00408000
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00408100
.ZG101R          ANOP  ,                                                00408200
.*----------------------------------------------------------------***   00408300
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00408400
                 AIF   (N'&ENTRYCOUNT LE 1).ZG104A  CK NUM              00408500
&ZMS             SETC  '"ENTRYCOUNT='           *KPOSA* MNOTE           00408600
&ZMS             SETC  '&ZMS.&ENTRYCOUNT"'                              00408700
&ZMS             SETC  '&ZMS "ENTRYCOUNT"'                              00408800
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00408900
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00409000
.ZG104A          ANOP  ,                                                00409100
.*-------------------------------------------------------------------   00409200
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00409300
                 AIF   (K'&ENTRYCOUNT(1) LE 0).ZG104C  NO PARM          00409400
&ZXENTRYCOUNT    SETC  'OUTPUT'    SET OUTPUT                           00409500
&XENTRYCOUNT     SETC  '&ENTRYCOUNT(1)'         SET XVARIABLE           00409600
                 AIF   (N'&ENTRYCOUNT GT 1).ZG104C                      00409700
&XENTRYCOUNT     SETC  '&ENTRYCOUNT'            SET XVARIABLE           00409800
.ZG104C          ANOP  ,                                                00409900
.*-------------------------------------------------------------------   00410000
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00410100
                 AIF   (K'&ZXENTRYCOUNT LE 0).ZG104R  NOT I/O           00410200
                 AIF   ('&XENTRYCOUNT'(1,1) NE '(').ZG104R              00410300
&ZCGPR           SETC  '&XENTRYCOUNT'(2,K'&XENTRYCOUNT-2)               00410400
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG104P                    00410500
                 AIF   (K'&ZCGPR GT 2).ZG104Q                           00410600
                 AIF   ('&ZCGPR' EQ '0').ZG104Q                         00410700
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00410800
                 AIF   (T'&ZCGPR NE 'N').ZG104Q  INVALID REG NAME       00410900
.ZG104P          ANOP  ,                                                00411000
                 AIF   (T'&ZCGPR NE 'N').ZG104R  NON NUMERIC            00411100
                 AIF   ('&ZCGPR' LT '2').ZG104Q                         00411200
                 AIF   ('&ZCGPR' LE '12').ZG104R                        00411300
.ZG104Q          ANOP  ,                                                00411400
&ZMS             SETC  '"ENTRYCOUNT='           *KGPRA* MNOTE           00411500
&ZMS             SETC  '&ZMS.&ENTRYCOUNT"'                              00411600
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00411700
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00411800
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00411900
.ZG104R          ANOP  ,                                                00412000
.*------------------------------------------------------------------    00412100
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00412200
.ZG106           ANOP  ,                                                00412300
&ZXRDATA         SETC  'INPUT'     SET IN/OUTPUT                        00412400
                 AIF   (K'&XRDATA GT 0).ZG106E  VALID ARG               00412500
                 AIF   (T'&RDATA EQ 'O').ZG106D  OMITTED                00412600
&ZASYSLNDX       SETA  0                                                00412700
.ZG106A          ANOP  ,           POSITIONAL MACRO KEY                 00412800
&ZASYSLNDX       SETA  &ZASYSLNDX+1                                     00412900
                 AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG106C                00413000
&ZTLC            SETC 'RDATA'                                           00413100
                 AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG106A       00413200
.ZG106B          ANOP  ,                                                00413300
&ZXRDATA         SETC  ''          RESET IN/OUTPUT                      00413400
&ZMS             SETC  'THE "RDATA" KEY'        *KOPTA* MNOTE           00413500
&ZMS             SETC  '&ZMS MUST CONTAIN ONE'                          00413600
                 MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                 00413700
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00413800
                 AGO   .ZG106E                                          00413900
.ZG106C          ANOP  ,                                                00414000
&ZXRDATA         SETC  ''          RESET IN/OUTPUT                      00414100
&ZMS             SETC  '"RDATA='   *KUKWA* MNOTE                        00414200
&ZMS             SETC  '&ZMS.&RDATA"'                                   00414300
&ZMS             SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '        00414400
&ZMS             SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'              00414500
&ZMS             SETC  '&ZMS "UNCHANGED",'                              00414600
&ZMS             SETC  '&ZMS "DELETE",'                                 00414700
&ZMS             SETC  '&ZMS OR "WRITE".'                               00414800
                 MNOTE 8,' &ZMS '                                       00414900
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00415000
                 AGO   .ZG106E                                          00415100
.ZG106D          ANOP  ,                                                00415200
&XRDATA          SETC  'UNCHANGED'              SET DEFAULT KEYWORD     00415300
.ZG106E          ANOP  ,                                                00415400
.*------------------------------------------------------------------    00415500
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00415600
&XMODE           SETC  ''          INITIALIZE XVARIABLE                 00415700
.*-------------------------------------------------------------------   00415800
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00415900
.ZG109           ANOP  ,                                                00416000
                 AIF   (K'&MODE(1) LE 0).ZG109A                         00416100
&ZTLC            SETC 'SYNCSUSPEND'                                     00416200
                 AIF   ('&MODE(1)' NE '&ZTLC').ZG110                    00416300
&XMODE           SETC  'SYNCSUSPEND'            SET KEYWORD             00416400
                 AIF   (N'&MODE LE 1).ZG109A    CK NUM                  00416500
&ZMS             SETC  '"MODE='    *KPOSA* MNOTE                        00416600
&ZMS             SETC  '&ZMS.&MODE"'                                    00416700
&ZMS             SETC  '&ZMS "MODE"'                                    00416800
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00416900
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00417000
.ZG109A          ANOP  ,                                                00417100
.*------------------------------------------------------------------    00417200
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00417300
&ZCVAL           SETC ''           CLEAR ERROR KEY ACCUMULATOR          00417400
.ZG109A0         AIF   (K'&MODEVAL LE 0).ZG109A1  OK                    00417500
&ZCVAL           SETC '&ZCVAL MODEVAL'          INCORRECT KEY USED      00417600
.ZG109A1         AIF   (K'&ZCVAL LE 0).ZG109A2  OK                      00417700
&ZCVAL           SETC '&ZCVAL'(2,K'&ZCVAL-1)                            00417800
&ZMS             SETC  '"MODE'     *KMEIA* MNOTE                        00417900
&ZMS             SETC  '&ZMS.=&MODE"'                                   00418000
&ZMS             SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'             00418100
                 MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'             00418200
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00418300
.ZG109A2         ANOP  ,                                                00418400
.*-------------------------------------------------------------------   00418500
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00418600
.ZG110           ANOP  ,                                                00418700
&ZTLC            SETC 'SYNCEXIT'                                        00418800
                 AIF   ('&MODE(1)' NE '&ZTLC').ZG111                    00418900
&XMODE           SETC  'SYNCEXIT'  SET KEYWORD                          00419000
                 AIF   (N'&MODE LE 1).ZG110A    CK NUM                  00419100
&ZMS             SETC  '"MODE='    *KPOSA* MNOTE                        00419200
&ZMS             SETC  '&ZMS.&MODE"'                                    00419300
&ZMS             SETC  '&ZMS "MODE"'                                    00419400
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00419500
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00419600
.ZG110A          ANOP  ,                                                00419700
.*------------------------------------------------------------------    00419800
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00419900
&ZCVAL           SETC ''           CLEAR ERROR KEY ACCUMULATOR          00420000
.ZG110A0         AIF   (K'&MODEVAL LE 0).ZG110A1  OK                    00420100
&ZCVAL           SETC '&ZCVAL MODEVAL'          INCORRECT KEY USED      00420200
.ZG110A1         AIF   (K'&ZCVAL LE 0).ZG110A2  OK                      00420300
&ZCVAL           SETC '&ZCVAL'(2,K'&ZCVAL-1)                            00420400
&ZMS             SETC  '"MODE'     *KMEIA* MNOTE                        00420500
&ZMS             SETC  '&ZMS.=&MODE"'                                   00420600
&ZMS             SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'             00420700
                 MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'             00420800
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00420900
.ZG110A2         ANOP  ,                                                00421000
.*-------------------------------------------------------------------   00421100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00421200
.ZG111           ANOP  ,                                                00421300
&ZTLC            SETC 'SYNCFAIL'                                        00421400
                 AIF   ('&MODE(1)' NE '&ZTLC').ZG112                    00421500
&XMODE           SETC  'SYNCFAIL'  SET KEYWORD                          00421600
                 AIF   (N'&MODE LE 1).ZG111A    CK NUM                  00421700
&ZMS             SETC  '"MODE='    *KPOSA* MNOTE                        00421800
&ZMS             SETC  '&ZMS.&MODE"'                                    00421900
&ZMS             SETC  '&ZMS "MODE"'                                    00422000
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00422100
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00422200
.ZG111A          ANOP  ,                                                00422300
.*------------------------------------------------------------------    00422400
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00422500
&ZCVAL           SETC ''           CLEAR ERROR KEY ACCUMULATOR          00422600
.ZG111A0         AIF   (K'&MODEVAL LE 0).ZG111A1  OK                    00422700
&ZCVAL           SETC '&ZCVAL MODEVAL'          INCORRECT KEY USED      00422800
.ZG111A1         AIF   (K'&ZCVAL LE 0).ZG111A2  OK                      00422900
&ZCVAL           SETC '&ZCVAL'(2,K'&ZCVAL-1)                            00423000
&ZMS             SETC  '"MODE'     *KMEIA* MNOTE                        00423100
&ZMS             SETC  '&ZMS.=&MODE"'                                   00423200
&ZMS             SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'             00423300
                 MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'             00423400
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00423500
.ZG111A2         ANOP  ,                                                00423600
.*-------------------------------------------------------------------   00423700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00423800
.ZG112           ANOP  ,                                                00423900
&ZTLC            SETC 'VALUE'                                           00424000
                 AIF   ('&MODE(1)' NE '&ZTLC').ZG116                    00424100
&XMODE           SETC  'VALUE'     SET KEYWORD                          00424200
                 AIF   (N'&MODE LE 1).ZG112A    CK NUM                  00424300
&ZMS             SETC  '"MODE='    *KPOSA* MNOTE                        00424400
&ZMS             SETC  '&ZMS.&MODE"'                                    00424500
&ZMS             SETC  '&ZMS "MODE"'                                    00424600
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00424700
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00424800
.ZG112A          ANOP  ,                                                00424900
.*----------------------------------------------------------------***   00425000
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00425100
                 AIF   (N'&MODEVAL LE 1).ZG114A  CK NUM                 00425200
&ZMS             SETC  '"MODEVAL='              *KPOSA* MNOTE           00425300
&ZMS             SETC  '&ZMS.&MODEVAL"'                                 00425400
&ZMS             SETC  '&ZMS "MODEVAL"'                                 00425500
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00425600
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00425700
.ZG114A          ANOP  ,                                                00425800
.*-------------------------------------------------------------------   00425900
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00426000
&ZXMODEVAL       SETC  'INPUT'     SET IN/OUTPUT                        00426100
&XMODEVAL        SETC  '&MODEVAL(1)'            SET XVARIABLE           00426200
                 AIF   (N'&MODEVAL GT 1).ZG114B  MULTI PARMS            00426300
&XMODEVAL        SETC  '&MODEVAL'  SET XVARIABLE                        00426400
.ZG114B          AIF   (K'&MODEVAL(1) GT 0).ZG114C                      00426500
&ZXMODEVAL       SETC  ''          RESET IN/OUTPUT                      00426600
&ZMS             SETC  'WHEN "VALUE" IS SPECIFIED'  *KRQDA*             00426700
&ZMS             SETC  '&ZMS , "MODEVAL" KEY AND ITS'                   00426800
                 MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                 00426900
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00427000
.ZG114C          ANOP  ,                                                00427100
.*-------------------------------------------------------------------   00427200
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                00427300
                 AIF   (K'&ZXMODEVAL LE 0).ZG114R  NOT I/O              00427400
                 AIF   ('&XMODEVAL'(1,1) NE '(').ZG114R                 00427500
&ZCGPR           SETC  '&XMODEVAL'(2,K'&XMODEVAL-2)                     00427600
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG114P                    00427700
                 AIF   (K'&ZCGPR GT 2).ZG114Q                           00427800
                 AIF   ('&ZCGPR' EQ '0').ZG114Q                         00427900
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00428000
                 AIF   (T'&ZCGPR NE 'N').ZG114Q  INVALID REG NAME       00428100
.ZG114P          ANOP  ,                                                00428200
                 AIF   (T'&ZCGPR NE 'N').ZG114R  NON NUMERIC            00428300
                 AIF   ('&ZCGPR' LT '2').ZG114Q                         00428400
                 AIF   ('&ZCGPR' LE '12').ZG114R                        00428500
.ZG114Q          ANOP  ,                                                00428600
&ZMS             SETC  '"MODEVAL='              *KGPRA* MNOTE           00428700
&ZMS             SETC  '&ZMS.&MODEVAL"'                                 00428800
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00428900
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00429000
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00429100
.ZG114R          ANOP  ,                                                00429200
.*------------------------------------------------------------------    00429300
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00429400
.ZG116           ANOP  ,                                                00429500
&ZXMODE          SETC  'INPUT'     SET IN/OUTPUT                        00429600
                 AIF   (K'&XMODE GT 0).ZG116E   VALID ARG               00429700
                 AIF   (T'&MODE EQ 'O').ZG116D  OMITTED                 00429800
&ZASYSLNDX       SETA  0                                                00429900
.ZG116A          ANOP  ,           POSITIONAL MACRO KEY                 00430000
&ZASYSLNDX       SETA  &ZASYSLNDX+1                                     00430100
                 AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG116C                00430200
&ZTLC            SETC 'MODE'                                            00430300
                 AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG116A       00430400
.ZG116B          ANOP  ,                                                00430500
&ZXMODE          SETC  ''          RESET IN/OUTPUT                      00430600
&ZMS             SETC  'THE "MODE" KEY'         *KOPTA* MNOTE           00430700
&ZMS             SETC  '&ZMS MUST CONTAIN ONE'                          00430800
                 MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                 00430900
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00431000
                 AGO   .ZG116E                                          00431100
.ZG116C          ANOP  ,                                                00431200
&ZXMODE          SETC  ''          RESET IN/OUTPUT                      00431300
&ZMS             SETC  '"MODE='    *KUKWA* MNOTE                        00431400
&ZMS             SETC  '&ZMS.&MODE"'                                    00431500
&ZMS             SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '        00431600
&ZMS             SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'              00431700
&ZMS             SETC  '&ZMS "SYNCSUSPEND",'                            00431800
&ZMS             SETC  '&ZMS "SYNCEXIT",'                               00431900
&ZMS             SETC  '&ZMS "SYNCFAIL",'                               00432000
&ZMS             SETC  '&ZMS OR "VALUE".'                               00432100
                 MNOTE 8,' &ZMS '                                       00432200
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00432300
                 AGO   .ZG116E                                          00432400
.ZG116D          ANOP  ,                                                00432500
&XMODE           SETC  'SYNCSUSPEND'            SET DEFAULT KEYWORD     00432600
.ZG116E          ANOP  ,                                                00432700
.*-------------------------------------------------------------------   00432800
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00432900
.ZG117           ANOP  ,                                                00433000
&ZTLC            SETC 'RELEASE'                                         00433100
                 AIF   ('&REQUEST(1)' NE '&ZTLC').ZG153                 00433200
&XREQUEST        SETC  'RELEASE'   SET KEYWORD                          00433300
                 AIF   (N'&REQUEST LE 1).ZG117A  CK NUM                 00433400
&ZMS             SETC  '"REQUEST='              *KPOSA* MNOTE           00433500
&ZMS             SETC  '&ZMS.&REQUEST"'                                 00433600
&ZMS             SETC  '&ZMS "REQUEST"'                                 00433700
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00433800
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00433900
.ZG117A          ANOP  ,                                                00434000
.*------------------------------------------------------------------    00434100
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00434200
&ZCVAL           SETC ''           CLEAR ERROR KEY ACCUMULATOR          00434300
.ZG117A0         AIF   (K'&LOCKDATA LE 0).ZG117A1  OK                   00434400
&ZCVAL           SETC '&ZCVAL LOCKDATA'         INCORRECT KEY USED      00434500
.ZG117A1         AIF   (K'&STATE LE 0).ZG117A2  OK                      00434600
&ZCVAL           SETC '&ZCVAL STATE'            INCORRECT KEY USED      00434700
.ZG117A2         AIF   (K'&STATEVAL LE 0).ZG117A3  OK                   00434800
&ZCVAL           SETC '&ZCVAL STATEVAL'         INCORRECT KEY USED      00434900
.ZG117A3         AIF   (K'&ENTRYID LE 0).ZG117A4  OK                    00435000
&ZCVAL           SETC '&ZCVAL ENTRYID'          INCORRECT KEY USED      00435100
.ZG117A4         AIF   (K'&ENTRYCOUNT LE 0).ZG117A5  OK                 00435200
&ZCVAL           SETC '&ZCVAL ENTRYCOUNT'       INCORRECT KEY USED      00435300
.ZG117A5         AIF   (K'&CONID LE 0).ZG117A6  OK                      00435400
&ZCVAL           SETC '&ZCVAL CONID'            INCORRECT KEY USED      00435500
.ZG117A6         AIF   (K'&REQBUFFER LE 0).ZG117A7  OK                  00435600
&ZCVAL           SETC '&ZCVAL REQBUFFER'        INCORRECT KEY USED      00435700
.ZG117A7         AIF   (K'&REQNUM LE 0).ZG117A8  OK                     00435800
&ZCVAL           SETC '&ZCVAL REQNUM'           INCORRECT KEY USED      00435900
.ZG117A8         AIF   (K'&REQPROC LE 0).ZG117A9  OK                    00436000
&ZCVAL           SETC '&ZCVAL REQPROC'          INCORRECT KEY USED      00436100
.ZG117A9         AIF   (K'&ZCVAL LE 0).ZG117A10  OK                     00436200
&ZCVAL           SETC '&ZCVAL'(2,K'&ZCVAL-1)                            00436300
&ZMS             SETC  '"REQUEST'  *KMEIA* MNOTE                        00436400
&ZMS             SETC  '&ZMS.=&REQUEST"'                                00436500
&ZMS             SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'             00436600
                 MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'             00436700
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00436800
.ZG117A10        ANOP  ,                                                00436900
.*----------------------------------------------------------------***   00437000
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00437100
                 AIF   (N'&RNAME LE 1).ZG119A   CK NUM                  00437200
&ZMS             SETC  '"RNAME='   *KPOSA* MNOTE                        00437300
&ZMS             SETC  '&ZMS.&RNAME"'                                   00437400
&ZMS             SETC  '&ZMS "RNAME"'                                   00437500
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00437600
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00437700
.ZG119A          ANOP  ,                                                00437800
.*-------------------------------------------------------------------   00437900
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00438000
&ZXRNAME         SETC  'INPUT'     SET IN/OUTPUT                        00438100
&XRNAME          SETC  '&RNAME(1)'              SET XVARIABLE           00438200
                 AIF   (N'&RNAME GT 1).ZG119B   MULTI PARMS             00438300
&XRNAME          SETC  '&RNAME'    SET XVARIABLE                        00438400
.ZG119B          AIF   (K'&RNAME(1) GT 0).ZG119C                        00438500
&ZXRNAME         SETC  ''          RESET IN/OUTPUT                      00438600
&ZMS             SETC  ' '         *KRQDA*                              00438700
&ZMS             SETC  '&ZMS "RNAME" KEY AND ITS'                       00438800
                 MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                 00438900
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00439000
.ZG119C          ANOP  ,                                                00439100
.*-------------------------------------------------------------------   00439200
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00439300
                 AIF   (K'&ZXRNAME LE 0).ZG119R  NOT I/O                00439400
                 AIF   ('&XRNAME'(1,1) NE '(').ZG119R                   00439500
&ZCGPR           SETC  '&XRNAME'(2,K'&XRNAME-2)                         00439600
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG119P                    00439700
                 AIF   (K'&ZCGPR GT 2).ZG119Q                           00439800
                 AIF   ('&ZCGPR' EQ '0').ZG119Q                         00439900
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00440000
                 AIF   (T'&ZCGPR NE 'N').ZG119Q  INVALID REG NAME       00440100
.ZG119P          ANOP  ,                                                00440200
                 AIF   (T'&ZCGPR NE 'N').ZG119R  NON NUMERIC            00440300
                 AIF   ('&ZCGPR' LT '2').ZG119Q                         00440400
                 AIF   ('&ZCGPR' LE '12').ZG119R                        00440500
.ZG119Q          ANOP  ,                                                00440600
&ZMS             SETC  '"RNAME='   *KGPRA* MNOTE                        00440700
&ZMS             SETC  '&ZMS.&RNAME"'                                   00440800
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00440900
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00441000
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00441100
.ZG119R          ANOP  ,                                                00441200
.*----------------------------------------------------------------***   00441300
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00441400
                 AIF   (N'&RNAMELEN LE 1).ZG122A  CK NUM                00441500
&ZMS             SETC  '"RNAMELEN='             *KPOSA* MNOTE           00441600
&ZMS             SETC  '&ZMS.&RNAMELEN"'                                00441700
&ZMS             SETC  '&ZMS "RNAMELEN"'                                00441800
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00441900
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00442000
.ZG122A          ANOP  ,                                                00442100
.*-------------------------------------------------------------------   00442200
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00442300
&ZXRNAMELEN      SETC  'INPUT'     SET IN/OUTPUT                        00442400
&XRNAMELEN       SETC  'NO_RNAMELEN'                                    00442500
                 AIF   (K'&RNAMELEN(1) LE 0).ZG122B  PARM               00442600
&XRNAMELEN       SETC  '&RNAMELEN(1)'           SET XVARIABLE           00442700
                 AIF   (N'&RNAMELEN GT 1).ZG122B  MULTI PARMS           00442800
&XRNAMELEN       SETC  '&RNAMELEN'              SET XVARIABLE           00442900
.ZG122B          ANOP  ,                                                00443000
.*-------------------------------------------------------------------   00443100
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00443200
                 AIF   (K'&ZXRNAMELEN LE 0).ZG122R  NOT I/O             00443300
         AIF   ('&XRNAMELEN' EQ 'NO_RNAMELEN').ZG122R                   00443400
                 AIF   ('&XRNAMELEN'(1,1) NE '(').ZG122R                00443500
&ZCGPR           SETC  '&XRNAMELEN'(2,K'&XRNAMELEN-2)                   00443600
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG122P                    00443700
                 AIF   (K'&ZCGPR GT 2).ZG122Q                           00443800
                 AIF   ('&ZCGPR' EQ '0').ZG122Q                         00443900
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00444000
                 AIF   (T'&ZCGPR NE 'N').ZG122Q  INVALID REG NAME       00444100
.ZG122P          ANOP  ,                                                00444200
                 AIF   (T'&ZCGPR NE 'N').ZG122R  NON NUMERIC            00444300
                 AIF   ('&ZCGPR' LT '2').ZG122Q                         00444400
                 AIF   ('&ZCGPR' LE '12').ZG122R                        00444500
.ZG122Q          ANOP  ,                                                00444600
&ZMS             SETC  '"RNAMELEN='             *KGPRA* MNOTE           00444700
&ZMS             SETC  '&ZMS.&RNAMELEN"'                                00444800
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00444900
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00445000
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00445100
.ZG122R          ANOP  ,                                                00445200
.*----------------------------------------------------------------***   00445300
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00445400
                 AIF   (N'&HASHVAL LE 1).ZG125A  CK NUM                 00445500
&ZMS             SETC  '"HASHVAL='              *KPOSA* MNOTE           00445600
&ZMS             SETC  '&ZMS.&HASHVAL"'                                 00445700
&ZMS             SETC  '&ZMS "HASHVAL"'                                 00445800
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00445900
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00446000
.ZG125A          ANOP  ,                                                00446100
.*-------------------------------------------------------------------   00446200
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00446300
&ZXHASHVAL       SETC  'INPUT'     SET IN/OUTPUT                        00446400
&XHASHVAL        SETC  '&HASHVAL(1)'            SET XVARIABLE           00446500
                 AIF   (N'&HASHVAL GT 1).ZG125B  MULTI PARMS            00446600
&XHASHVAL        SETC  '&HASHVAL'  SET XVARIABLE                        00446700
.ZG125B          AIF   (K'&HASHVAL(1) GT 0).ZG125C                      00446800
&ZXHASHVAL       SETC  ''          RESET IN/OUTPUT                      00446900
&ZMS             SETC  ' '         *KRQDA*                              00447000
&ZMS             SETC  '&ZMS "HASHVAL" KEY AND ITS'                     00447100
                 MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                 00447200
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00447300
.ZG125C          ANOP  ,                                                00447400
.*-------------------------------------------------------------------   00447500
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00447600
                 AIF   (K'&ZXHASHVAL LE 0).ZG125R  NOT I/O              00447700
                 AIF   ('&XHASHVAL'(1,1) NE '(').ZG125R                 00447800
&ZCGPR           SETC  '&XHASHVAL'(2,K'&XHASHVAL-2)                     00447900
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG125P                    00448000
                 AIF   (K'&ZCGPR GT 2).ZG125Q                           00448100
                 AIF   ('&ZCGPR' EQ '0').ZG125Q                         00448200
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00448300
                 AIF   (T'&ZCGPR NE 'N').ZG125Q  INVALID REG NAME       00448400
.ZG125P          ANOP  ,                                                00448500
                 AIF   (T'&ZCGPR NE 'N').ZG125R  NON NUMERIC            00448600
                 AIF   ('&ZCGPR' LT '2').ZG125Q                         00448700
                 AIF   ('&ZCGPR' LE '12').ZG125R                        00448800
.ZG125Q          ANOP  ,                                                00448900
&ZMS             SETC  '"HASHVAL='              *KGPRA* MNOTE           00449000
&ZMS             SETC  '&ZMS.&HASHVAL"'                                 00449100
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00449200
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00449300
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00449400
.ZG125R          ANOP  ,                                                00449500
.*----------------------------------------------------------------***   00449600
.***AG.KXVAR05 NAME, OPT INOUT, KEYS -XVARIABLE KEY                     00449700
                 AIF   (N'&UDATAVAL LE 1).ZG128A  CK NUM                00449800
&ZMS             SETC  '"UDATAVAL='             *KPOSA* MNOTE           00449900
&ZMS             SETC  '&ZMS.&UDATAVAL"'                                00450000
&ZMS             SETC  '&ZMS "UDATAVAL"'                                00450100
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00450200
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00450300
.ZG128A          ANOP  ,                                                00450400
.*-------------------------------------------------------------------   00450500
.***AG.KXVAR13 NAME, OPT INOUT, KEYS -XVARIABLE                         00450600
&ZXUDATAVAL      SETC  'INOUT'     SET IN/OUTPUT                        00450700
&XUDATAVAL       SETC  'ALL_ZEROES'                                     00450800
                 AIF   (K'&UDATAVAL(1) LE 0).ZG128B  PARM               00450900
&XUDATAVAL       SETC  '&UDATAVAL(1)'           SET XVARIABLE           00451000
                 AIF   (N'&UDATAVAL GT 1).ZG128B  MULTI PARMS           00451100
&XUDATAVAL       SETC  '&UDATAVAL'              SET XVARIABLE           00451200
.ZG128B          ANOP  ,                                                00451300
.*-------------------------------------------------------------------   00451400
.***AG.KCK02 NAME, OPT INOUT, KEYS -GPR OUT OF RANGE                    00451500
                 AIF   (K'&ZXUDATAVAL LE 0).ZG128R  NOT I/O             00451600
         AIF   ('&XUDATAVAL' EQ 'ALL_ZEROES').ZG128R                    00451700
                 AIF   ('&XUDATAVAL'(1,1) NE '(').ZG128R                00451800
&ZCGPR           SETC  '&XUDATAVAL'(2,K'&XUDATAVAL-2)                   00451900
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG128P                    00452000
                 AIF   (K'&ZCGPR GT 2).ZG128Q                           00452100
                 AIF   ('&ZCGPR' EQ '0').ZG128Q                         00452200
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00452300
                 AIF   (T'&ZCGPR NE 'N').ZG128Q  INVALID REG NAME       00452400
.ZG128P          ANOP  ,                                                00452500
                 AIF   (T'&ZCGPR NE 'N').ZG128R  NON NUMERIC            00452600
                 AIF   ('&ZCGPR' LT '2').ZG128Q                         00452700
                 AIF   ('&ZCGPR' LE '12').ZG128R                        00452800
.ZG128Q          ANOP  ,                                                00452900
&ZMS             SETC  '"UDATAVAL='             *KGPRA* MNOTE           00453000
&ZMS             SETC  '&ZMS.&UDATAVAL"'                                00453100
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00453200
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00453300
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00453400
.ZG128R          ANOP  ,                                                00453500
.*------------------------------------------------------------------    00453600
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00453700
&XRDATA          SETC  ''          INITIALIZE XVARIABLE                 00453800
.*-------------------------------------------------------------------   00453900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00454000
.ZG132           ANOP  ,                                                00454100
                 AIF   (K'&RDATA(1) LE 0).ZG132A                        00454200
&ZTLC            SETC 'DELETE'                                          00454300
                 AIF   ('&RDATA(1)' NE '&ZTLC').ZG133                   00454400
&XRDATA          SETC  'DELETE'    SET KEYWORD                          00454500
                 AIF   (N'&RDATA LE 1).ZG132A   CK NUM                  00454600
&ZMS             SETC  '"RDATA='   *KPOSA* MNOTE                        00454700
&ZMS             SETC  '&ZMS.&RDATA"'                                   00454800
&ZMS             SETC  '&ZMS "RDATA"'                                   00454900
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00455000
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00455100
.ZG132A          ANOP  ,                                                00455200
.*------------------------------------------------------------------    00455300
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00455400
&ZCVAL           SETC ''           CLEAR ERROR KEY ACCUMULATOR          00455500
.ZG132A0         AIF   (K'&UPDATERDATA LE 0).ZG132A1  OK                00455600
&ZCVAL           SETC '&ZCVAL UPDATERDATA'      INCORRECT KEY USED      00455700
.ZG132A1         AIF   (K'&RDATAVAL LE 0).ZG132A2  OK                   00455800
&ZCVAL           SETC '&ZCVAL RDATAVAL'         INCORRECT KEY USED      00455900
.ZG132A2         AIF   (K'&ZCVAL LE 0).ZG132A3  OK                      00456000
&ZCVAL           SETC '&ZCVAL'(2,K'&ZCVAL-1)                            00456100
&ZMS             SETC  '"RDATA'    *KMEIA* MNOTE                        00456200
&ZMS             SETC  '&ZMS.=&RDATA"'                                  00456300
&ZMS             SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'             00456400
                 MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'             00456500
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00456600
.ZG132A3         ANOP  ,                                                00456700
.*-------------------------------------------------------------------   00456800
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00456900
.ZG133           ANOP  ,                                                00457000
&ZTLC            SETC 'KEEP'                                            00457100
                 AIF   ('&RDATA(1)' NE '&ZTLC').ZG142                   00457200
&XRDATA          SETC  'KEEP'      SET KEYWORD                          00457300
                 AIF   (N'&RDATA LE 1).ZG133A   CK NUM                  00457400
&ZMS             SETC  '"RDATA='   *KPOSA* MNOTE                        00457500
&ZMS             SETC  '&ZMS.&RDATA"'                                   00457600
&ZMS             SETC  '&ZMS "RDATA"'                                   00457700
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00457800
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00457900
.ZG133A          ANOP  ,                                                00458000
.*------------------------------------------------------------------    00458100
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00458200
&XUPDATERDATA    SETC  ''          INITIALIZE XVARIABLE                 00458300
.*-------------------------------------------------------------------   00458400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00458500
.ZG136           ANOP  ,                                                00458600
                 AIF   (K'&UPDATERDATA(1) LE 0).ZG136A                  00458700
&ZTLC            SETC 'NO'                                              00458800
                 AIF   ('&UPDATERDATA(1)' NE '&ZTLC').ZG137             00458900
&XUPDATERDATA    SETC  'NO'        SET KEYWORD                          00459000
                 AIF   (N'&UPDATERDATA LE 1).ZG136A  CK NUM             00459100
&ZMS             SETC  '"UPDATERDATA='          *KPOSA* MNOTE           00459200
&ZMS             SETC  '&ZMS.&UPDATERDATA"'                             00459300
&ZMS             SETC  '&ZMS "UPDATERDATA"'                             00459400
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00459500
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00459600
.ZG136A          ANOP  ,                                                00459700
.*------------------------------------------------------------------    00459800
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00459900
&ZCVAL           SETC ''           CLEAR ERROR KEY ACCUMULATOR          00460000
.ZG136A0         AIF   (K'&RDATAVAL LE 0).ZG136A1  OK                   00460100
&ZCVAL           SETC '&ZCVAL RDATAVAL'         INCORRECT KEY USED      00460200
.ZG136A1         AIF   (K'&ZCVAL LE 0).ZG136A2  OK                      00460300
&ZCVAL           SETC '&ZCVAL'(2,K'&ZCVAL-1)                            00460400
&ZMS             SETC  '"UPDATERDATA'           *KMEIA* MNOTE           00460500
&ZMS             SETC  '&ZMS.=&UPDATERDATA"'                            00460600
&ZMS             SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'             00460700
                 MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'             00460800
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00460900
.ZG136A2         ANOP  ,                                                00461000
.*-------------------------------------------------------------------   00461100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00461200
.ZG137           ANOP  ,                                                00461300
&ZTLC            SETC 'YES'                                             00461400
                 AIF   ('&UPDATERDATA(1)' NE '&ZTLC').ZG141             00461500
&XUPDATERDATA    SETC  'YES'       SET KEYWORD                          00461600
                 AIF   (N'&UPDATERDATA LE 1).ZG137A  CK NUM             00461700
&ZMS             SETC  '"UPDATERDATA='          *KPOSA* MNOTE           00461800
&ZMS             SETC  '&ZMS.&UPDATERDATA"'                             00461900
&ZMS             SETC  '&ZMS "UPDATERDATA"'                             00462000
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00462100
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00462200
.ZG137A          ANOP  ,                                                00462300
.*----------------------------------------------------------------***   00462400
.***AG.KXVAR05 NAME, OPT RQD INOUT, KEYS -XVARIABLE KEY                 00462500
                 AIF   (N'&RDATAVAL LE 1).ZG139A  CK NUM                00462600
&ZMS             SETC  '"RDATAVAL='             *KPOSA* MNOTE           00462700
&ZMS             SETC  '&ZMS.&RDATAVAL"'                                00462800
&ZMS             SETC  '&ZMS "RDATAVAL"'                                00462900
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00463000
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00463100
.ZG139A          ANOP  ,                                                00463200
.*-------------------------------------------------------------------   00463300
.***AG.KXVAR06 NAME, OPT RQD INOUT, KEYS -XVARIABLE                     00463400
&ZXRDATAVAL      SETC  'INOUT'     SET IN/OUTPUT                        00463500
&XRDATAVAL       SETC  '&RDATAVAL(1)'           SET XVARIABLE           00463600
                 AIF   (N'&RDATAVAL GT 1).ZG139B  MULTI PARMS           00463700
&XRDATAVAL       SETC  '&RDATAVAL'              SET XVARIABLE           00463800
.ZG139B          AIF   (K'&RDATAVAL(1) GT 0).ZG139C                     00463900
&ZXRDATAVAL      SETC  ''          RESET IN/OUTPUT                      00464000
&ZMS             SETC  'WHEN "YES" IS SPECIFIED'  *KRQDA*               00464100
&ZMS             SETC  '&ZMS , "RDATAVAL" KEY AND ITS'                  00464200
                 MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                 00464300
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00464400
.ZG139C          ANOP  ,                                                00464500
.*-------------------------------------------------------------------   00464600
.***AG.KCK02 NAME, OPT RQD INOUT, KEYS -GPR OUT OF RANGE                00464700
                 AIF   (K'&ZXRDATAVAL LE 0).ZG139R  NOT I/O             00464800
                 AIF   ('&XRDATAVAL'(1,1) NE '(').ZG139R                00464900
&ZCGPR           SETC  '&XRDATAVAL'(2,K'&XRDATAVAL-2)                   00465000
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG139P                    00465100
                 AIF   (K'&ZCGPR GT 2).ZG139Q                           00465200
                 AIF   ('&ZCGPR' EQ '0').ZG139Q                         00465300
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00465400
                 AIF   (T'&ZCGPR NE 'N').ZG139Q  INVALID REG NAME       00465500
.ZG139P          ANOP  ,                                                00465600
                 AIF   (T'&ZCGPR NE 'N').ZG139R  NON NUMERIC            00465700
                 AIF   ('&ZCGPR' LT '2').ZG139Q                         00465800
                 AIF   ('&ZCGPR' LE '12').ZG139R                        00465900
.ZG139Q          ANOP  ,                                                00466000
&ZMS             SETC  '"RDATAVAL='             *KGPRA* MNOTE           00466100
&ZMS             SETC  '&ZMS.&RDATAVAL"'                                00466200
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00466300
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00466400
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00466500
.ZG139R          ANOP  ,                                                00466600
.*------------------------------------------------------------------    00466700
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00466800
.ZG141           ANOP  ,                                                00466900
&ZXUPDATERDATA   SETC  'INPUT'     SET IN/OUTPUT                        00467000
                 AIF   (K'&XUPDATERDATA GT 0).ZG141E  VALID ARG         00467100
                 AIF   (T'&UPDATERDATA EQ 'O').ZG141D  OMITTED          00467200
&ZASYSLNDX       SETA  0                                                00467300
.ZG141A          ANOP  ,           POSITIONAL MACRO KEY                 00467400
&ZASYSLNDX       SETA  &ZASYSLNDX+1                                     00467500
                 AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG141C                00467600
&ZTLC            SETC 'UPDATERDATA'                                     00467700
                 AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG141A       00467800
.ZG141B          ANOP  ,                                                00467900
&ZXUPDATERDATA   SETC  ''          RESET IN/OUTPUT                      00468000
&ZMS             SETC  'THE "UPDATERDATA" KEY'  *KOPTA* MNOTE           00468100
&ZMS             SETC  '&ZMS MUST CONTAIN ONE'                          00468200
                 MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                 00468300
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00468400
                 AGO   .ZG141E                                          00468500
.ZG141C          ANOP  ,                                                00468600
&ZXUPDATERDATA   SETC  ''          RESET IN/OUTPUT                      00468700
&ZMS             SETC  '"UPDATERDATA='          *KUKWA* MNOTE           00468800
&ZMS             SETC  '&ZMS.&UPDATERDATA"'                             00468900
&ZMS             SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '        00469000
&ZMS             SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'              00469100
&ZMS             SETC  '&ZMS "NO"'                                      00469200
&ZMS             SETC  '&ZMS OR "YES".'                                 00469300
                 MNOTE 8,' &ZMS '                                       00469400
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00469500
                 AGO   .ZG141E                                          00469600
.ZG141D          ANOP  ,                                                00469700
&XUPDATERDATA    SETC  'NO'        SET DEFAULT KEYWORD                  00469800
.ZG141E          ANOP  ,                                                00469900
.*------------------------------------------------------------------    00470000
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00470100
.ZG142           ANOP  ,                                                00470200
&ZXRDATA         SETC  'INPUT'     SET IN/OUTPUT                        00470300
                 AIF   (K'&XRDATA GT 0).ZG142E  VALID ARG               00470400
                 AIF   (T'&RDATA EQ 'O').ZG142D  OMITTED                00470500
&ZASYSLNDX       SETA  0                                                00470600
.ZG142A          ANOP  ,           POSITIONAL MACRO KEY                 00470700
&ZASYSLNDX       SETA  &ZASYSLNDX+1                                     00470800
                 AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG142C                00470900
&ZTLC            SETC 'RDATA'                                           00471000
                 AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG142A       00471100
.ZG142B          ANOP  ,                                                00471200
&ZXRDATA         SETC  ''          RESET IN/OUTPUT                      00471300
&ZMS             SETC  'THE "RDATA" KEY'        *KOPTA* MNOTE           00471400
&ZMS             SETC  '&ZMS MUST CONTAIN ONE'                          00471500
                 MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                 00471600
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00471700
                 AGO   .ZG142E                                          00471800
.ZG142C          ANOP  ,                                                00471900
&ZXRDATA         SETC  ''          RESET IN/OUTPUT                      00472000
&ZMS             SETC  '"RDATA='   *KUKWA* MNOTE                        00472100
&ZMS             SETC  '&ZMS.&RDATA"'                                   00472200
&ZMS             SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '        00472300
&ZMS             SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'              00472400
&ZMS             SETC  '&ZMS "DELETE"'                                  00472500
&ZMS             SETC  '&ZMS OR "KEEP".'                                00472600
                 MNOTE 8,' &ZMS '                                       00472700
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00472800
                 AGO   .ZG142E                                          00472900
.ZG142D          ANOP  ,                                                00473000
&XRDATA          SETC  'DELETE'    SET DEFAULT KEYWORD                  00473100
.ZG142E          ANOP  ,                                                00473200
.*------------------------------------------------------------------    00473300
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00473400
&XMODE           SETC  ''          INITIALIZE XVARIABLE                 00473500
.*-------------------------------------------------------------------   00473600
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00473700
.ZG145           ANOP  ,                                                00473800
                 AIF   (K'&MODE(1) LE 0).ZG145A                         00473900
&ZTLC            SETC 'SYNCSUSPEND'                                     00474000
                 AIF   ('&MODE(1)' NE '&ZTLC').ZG146                    00474100
&XMODE           SETC  'SYNCSUSPEND'            SET KEYWORD             00474200
                 AIF   (N'&MODE LE 1).ZG145A    CK NUM                  00474300
&ZMS             SETC  '"MODE='    *KPOSA* MNOTE                        00474400
&ZMS             SETC  '&ZMS.&MODE"'                                    00474500
&ZMS             SETC  '&ZMS "MODE"'                                    00474600
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00474700
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00474800
.ZG145A          ANOP  ,                                                00474900
.*------------------------------------------------------------------    00475000
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00475100
&ZCVAL           SETC ''           CLEAR ERROR KEY ACCUMULATOR          00475200
.ZG145A0         AIF   (K'&MODEVAL LE 0).ZG145A1  OK                    00475300
&ZCVAL           SETC '&ZCVAL MODEVAL'          INCORRECT KEY USED      00475400
.ZG145A1         AIF   (K'&ZCVAL LE 0).ZG145A2  OK                      00475500
&ZCVAL           SETC '&ZCVAL'(2,K'&ZCVAL-1)                            00475600
&ZMS             SETC  '"MODE'     *KMEIA* MNOTE                        00475700
&ZMS             SETC  '&ZMS.=&MODE"'                                   00475800
&ZMS             SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'             00475900
                 MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'             00476000
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00476100
.ZG145A2         ANOP  ,                                                00476200
.*-------------------------------------------------------------------   00476300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00476400
.ZG146           ANOP  ,                                                00476500
&ZTLC            SETC 'SYNCEXIT'                                        00476600
                 AIF   ('&MODE(1)' NE '&ZTLC').ZG147                    00476700
&XMODE           SETC  'SYNCEXIT'  SET KEYWORD                          00476800
                 AIF   (N'&MODE LE 1).ZG146A    CK NUM                  00476900
&ZMS             SETC  '"MODE='    *KPOSA* MNOTE                        00477000
&ZMS             SETC  '&ZMS.&MODE"'                                    00477100
&ZMS             SETC  '&ZMS "MODE"'                                    00477200
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00477300
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00477400
.ZG146A          ANOP  ,                                                00477500
.*------------------------------------------------------------------    00477600
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00477700
&ZCVAL           SETC ''           CLEAR ERROR KEY ACCUMULATOR          00477800
.ZG146A0         AIF   (K'&MODEVAL LE 0).ZG146A1  OK                    00477900
&ZCVAL           SETC '&ZCVAL MODEVAL'          INCORRECT KEY USED      00478000
.ZG146A1         AIF   (K'&ZCVAL LE 0).ZG146A2  OK                      00478100
&ZCVAL           SETC '&ZCVAL'(2,K'&ZCVAL-1)                            00478200
&ZMS             SETC  '"MODE'     *KMEIA* MNOTE                        00478300
&ZMS             SETC  '&ZMS.=&MODE"'                                   00478400
&ZMS             SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'             00478500
                 MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'             00478600
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00478700
.ZG146A2         ANOP  ,                                                00478800
.*-------------------------------------------------------------------   00478900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00479000
.ZG147           ANOP  ,                                                00479100
&ZTLC            SETC 'NORESPONSE'                                      00479200
                 AIF   ('&MODE(1)' NE '&ZTLC').ZG148                    00479300
&XMODE           SETC  'NORESPONSE'             SET KEYWORD             00479400
                 AIF   (N'&MODE LE 1).ZG147A    CK NUM                  00479500
&ZMS             SETC  '"MODE='    *KPOSA* MNOTE                        00479600
&ZMS             SETC  '&ZMS.&MODE"'                                    00479700
&ZMS             SETC  '&ZMS "MODE"'                                    00479800
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00479900
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00480000
.ZG147A          ANOP  ,                                                00480100
.*------------------------------------------------------------------    00480200
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00480300
&ZCVAL           SETC ''           CLEAR ERROR KEY ACCUMULATOR          00480400
.ZG147A0         AIF   (K'&MODEVAL LE 0).ZG147A1  OK                    00480500
&ZCVAL           SETC '&ZCVAL MODEVAL'          INCORRECT KEY USED      00480600
.ZG147A1         AIF   (K'&ZCVAL LE 0).ZG147A2  OK                      00480700
&ZCVAL           SETC '&ZCVAL'(2,K'&ZCVAL-1)                            00480800
&ZMS             SETC  '"MODE'     *KMEIA* MNOTE                        00480900
&ZMS             SETC  '&ZMS.=&MODE"'                                   00481000
&ZMS             SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'             00481100
                 MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'             00481200
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00481300
.ZG147A2         ANOP  ,                                                00481400
.*-------------------------------------------------------------------   00481500
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00481600
.ZG148           ANOP  ,                                                00481700
&ZTLC            SETC 'VALUE'                                           00481800
                 AIF   ('&MODE(1)' NE '&ZTLC').ZG152                    00481900
&XMODE           SETC  'VALUE'     SET KEYWORD                          00482000
                 AIF   (N'&MODE LE 1).ZG148A    CK NUM                  00482100
&ZMS             SETC  '"MODE='    *KPOSA* MNOTE                        00482200
&ZMS             SETC  '&ZMS.&MODE"'                                    00482300
&ZMS             SETC  '&ZMS "MODE"'                                    00482400
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00482500
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00482600
.ZG148A          ANOP  ,                                                00482700
.*----------------------------------------------------------------***   00482800
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00482900
                 AIF   (N'&MODEVAL LE 1).ZG150A  CK NUM                 00483000
&ZMS             SETC  '"MODEVAL='              *KPOSA* MNOTE           00483100
&ZMS             SETC  '&ZMS.&MODEVAL"'                                 00483200
&ZMS             SETC  '&ZMS "MODEVAL"'                                 00483300
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00483400
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00483500
.ZG150A          ANOP  ,                                                00483600
.*-------------------------------------------------------------------   00483700
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00483800
&ZXMODEVAL       SETC  'INPUT'     SET IN/OUTPUT                        00483900
&XMODEVAL        SETC  '&MODEVAL(1)'            SET XVARIABLE           00484000
                 AIF   (N'&MODEVAL GT 1).ZG150B  MULTI PARMS            00484100
&XMODEVAL        SETC  '&MODEVAL'  SET XVARIABLE                        00484200
.ZG150B          AIF   (K'&MODEVAL(1) GT 0).ZG150C                      00484300
&ZXMODEVAL       SETC  ''          RESET IN/OUTPUT                      00484400
&ZMS             SETC  'WHEN "VALUE" IS SPECIFIED'  *KRQDA*             00484500
&ZMS             SETC  '&ZMS , "MODEVAL" KEY AND ITS'                   00484600
                 MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                 00484700
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00484800
.ZG150C          ANOP  ,                                                00484900
.*-------------------------------------------------------------------   00485000
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                00485100
                 AIF   (K'&ZXMODEVAL LE 0).ZG150R  NOT I/O              00485200
                 AIF   ('&XMODEVAL'(1,1) NE '(').ZG150R                 00485300
&ZCGPR           SETC  '&XMODEVAL'(2,K'&XMODEVAL-2)                     00485400
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG150P                    00485500
                 AIF   (K'&ZCGPR GT 2).ZG150Q                           00485600
                 AIF   ('&ZCGPR' EQ '0').ZG150Q                         00485700
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00485800
                 AIF   (T'&ZCGPR NE 'N').ZG150Q  INVALID REG NAME       00485900
.ZG150P          ANOP  ,                                                00486000
                 AIF   (T'&ZCGPR NE 'N').ZG150R  NON NUMERIC            00486100
                 AIF   ('&ZCGPR' LT '2').ZG150Q                         00486200
                 AIF   ('&ZCGPR' LE '12').ZG150R                        00486300
.ZG150Q          ANOP  ,                                                00486400
&ZMS             SETC  '"MODEVAL='              *KGPRA* MNOTE           00486500
&ZMS             SETC  '&ZMS.&MODEVAL"'                                 00486600
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00486700
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00486800
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00486900
.ZG150R          ANOP  ,                                                00487000
.*------------------------------------------------------------------    00487100
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00487200
.ZG152           ANOP  ,                                                00487300
&ZXMODE          SETC  'INPUT'     SET IN/OUTPUT                        00487400
                 AIF   (K'&XMODE GT 0).ZG152E   VALID ARG               00487500
                 AIF   (T'&MODE EQ 'O').ZG152D  OMITTED                 00487600
&ZASYSLNDX       SETA  0                                                00487700
.ZG152A          ANOP  ,           POSITIONAL MACRO KEY                 00487800
&ZASYSLNDX       SETA  &ZASYSLNDX+1                                     00487900
                 AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG152C                00488000
&ZTLC            SETC 'MODE'                                            00488100
                 AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG152A       00488200
.ZG152B          ANOP  ,                                                00488300
&ZXMODE          SETC  ''          RESET IN/OUTPUT                      00488400
&ZMS             SETC  'THE "MODE" KEY'         *KOPTA* MNOTE           00488500
&ZMS             SETC  '&ZMS MUST CONTAIN ONE'                          00488600
                 MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                 00488700
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00488800
                 AGO   .ZG152E                                          00488900
.ZG152C          ANOP  ,                                                00489000
&ZXMODE          SETC  ''          RESET IN/OUTPUT                      00489100
&ZMS             SETC  '"MODE='    *KUKWA* MNOTE                        00489200
&ZMS             SETC  '&ZMS.&MODE"'                                    00489300
&ZMS             SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '        00489400
&ZMS             SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'              00489500
&ZMS             SETC  '&ZMS "SYNCSUSPEND",'                            00489600
&ZMS             SETC  '&ZMS "SYNCEXIT",'                               00489700
&ZMS             SETC  '&ZMS "NORESPONSE",'                             00489800
&ZMS             SETC  '&ZMS OR "VALUE".'                               00489900
                 MNOTE 8,' &ZMS '                                       00490000
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00490100
                 AGO   .ZG152E                                          00490200
.ZG152D          ANOP  ,                                                00490300
&XMODE           SETC  'SYNCSUSPEND'            SET DEFAULT KEYWORD     00490400
.ZG152E          ANOP  ,                                                00490500
.*-------------------------------------------------------------------   00490600
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00490700
.ZG153           ANOP  ,                                                00490800
&ZTLC            SETC 'PROCESSMULT'                                     00490900
                 AIF   ('&REQUEST(1)' NE '&ZTLC').ZG163                 00491000
&XREQUEST        SETC  'PROCESSMULT'            SET KEYWORD             00491100
                 AIF   (N'&REQUEST LE 1).ZG153A  CK NUM                 00491200
&ZMS             SETC  '"REQUEST='              *KPOSA* MNOTE           00491300
&ZMS             SETC  '&ZMS.&REQUEST"'                                 00491400
&ZMS             SETC  '&ZMS "REQUEST"'                                 00491500
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00491600
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00491700
.ZG153A          ANOP  ,                                                00491800
.*------------------------------------------------------------------    00491900
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00492000
&ZCVAL           SETC ''           CLEAR ERROR KEY ACCUMULATOR          00492100
.ZG153A0         AIF   (K'&RNAME LE 0).ZG153A1  OK                      00492200
&ZCVAL           SETC '&ZCVAL RNAME'            INCORRECT KEY USED      00492300
.ZG153A1         AIF   (K'&RNAMELEN LE 0).ZG153A2  OK                   00492400
&ZCVAL           SETC '&ZCVAL RNAMELEN'         INCORRECT KEY USED      00492500
.ZG153A2         AIF   (K'&HASHVAL LE 0).ZG153A3  OK                    00492600
&ZCVAL           SETC '&ZCVAL HASHVAL'          INCORRECT KEY USED      00492700
.ZG153A3         AIF   (K'&LOCKDATA LE 0).ZG153A4  OK                   00492800
&ZCVAL           SETC '&ZCVAL LOCKDATA'         INCORRECT KEY USED      00492900
.ZG153A4         AIF   (K'&STATE LE 0).ZG153A5  OK                      00493000
&ZCVAL           SETC '&ZCVAL STATE'            INCORRECT KEY USED      00493100
.ZG153A5         AIF   (K'&STATEVAL LE 0).ZG153A6  OK                   00493200
&ZCVAL           SETC '&ZCVAL STATEVAL'         INCORRECT KEY USED      00493300
.ZG153A6         AIF   (K'&UDATAVAL LE 0).ZG153A7  OK                   00493400
&ZCVAL           SETC '&ZCVAL UDATAVAL'         INCORRECT KEY USED      00493500
.ZG153A7         AIF   (K'&RDATA LE 0).ZG153A8  OK                      00493600
&ZCVAL           SETC '&ZCVAL RDATA'            INCORRECT KEY USED      00493700
.ZG153A8         AIF   (K'&RDATAVAL LE 0).ZG153A9  OK                   00493800
&ZCVAL           SETC '&ZCVAL RDATAVAL'         INCORRECT KEY USED      00493900
.ZG153A9         AIF   (K'&ENTRYID LE 0).ZG153A10  OK                   00494000
&ZCVAL           SETC '&ZCVAL ENTRYID'          INCORRECT KEY USED      00494100
.ZG153A10        AIF   (K'&ENTRYCOUNT LE 0).ZG153A11  OK                00494200
&ZCVAL           SETC '&ZCVAL ENTRYCOUNT'       INCORRECT KEY USED      00494300
.ZG153A11        AIF   (K'&CONID LE 0).ZG153A12  OK                     00494400
&ZCVAL           SETC '&ZCVAL CONID'            INCORRECT KEY USED      00494500
.ZG153A12        AIF   (K'&UPDATERDATA LE 0).ZG153A13  OK               00494600
&ZCVAL           SETC '&ZCVAL UPDATERDATA'      INCORRECT KEY USED      00494700
.ZG153A13        AIF   (K'&MODE LE 0).ZG153A14  OK                      00494800
&ZCVAL           SETC '&ZCVAL MODE'             INCORRECT KEY USED      00494900
.ZG153A14        AIF   (K'&MODEVAL LE 0).ZG153A15  OK                   00495000
&ZCVAL           SETC '&ZCVAL MODEVAL'          INCORRECT KEY USED      00495100
.ZG153A15        AIF   (K'&ZCVAL LE 0).ZG153A16  OK                     00495200
&ZCVAL           SETC '&ZCVAL'(2,K'&ZCVAL-1)                            00495300
&ZMS             SETC  '"REQUEST'  *KMEIA* MNOTE                        00495400
&ZMS             SETC  '&ZMS.=&REQUEST"'                                00495500
&ZMS             SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'             00495600
                 MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'             00495700
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00495800
.ZG153A16        ANOP  ,                                                00495900
.*----------------------------------------------------------------***   00496000
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00496100
                 AIF   (N'&REQBUFFER LE 1).ZG155A  CK NUM               00496200
&ZMS             SETC  '"REQBUFFER='            *KPOSA* MNOTE           00496300
&ZMS             SETC  '&ZMS.&REQBUFFER"'                               00496400
&ZMS             SETC  '&ZMS "REQBUFFER"'                               00496500
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00496600
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00496700
.ZG155A          ANOP  ,                                                00496800
.*-------------------------------------------------------------------   00496900
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00497000
&ZXREQBUFFER     SETC  'INPUT'     SET IN/OUTPUT                        00497100
&XREQBUFFER      SETC  '&REQBUFFER(1)'          SET XVARIABLE           00497200
                 AIF   (N'&REQBUFFER GT 1).ZG155B  MULTI PARMS          00497300
&XREQBUFFER      SETC  '&REQBUFFER'             SET XVARIABLE           00497400
.ZG155B          AIF   (K'&REQBUFFER(1) GT 0).ZG155C                    00497500
&ZXREQBUFFER     SETC  ''          RESET IN/OUTPUT                      00497600
&ZMS             SETC  ' '         *KRQDA*                              00497700
&ZMS             SETC  '&ZMS "REQBUFFER" KEY AND ITS'                   00497800
                 MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                 00497900
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00498000
.ZG155C          ANOP  ,                                                00498100
.*-------------------------------------------------------------------   00498200
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00498300
                 AIF   (K'&ZXREQBUFFER LE 0).ZG155R  NOT I/O            00498400
                 AIF   ('&XREQBUFFER'(1,1) NE '(').ZG155R               00498500
&ZCGPR           SETC  '&XREQBUFFER'(2,K'&XREQBUFFER-2)                 00498600
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG155P                    00498700
                 AIF   (K'&ZCGPR GT 2).ZG155Q                           00498800
                 AIF   ('&ZCGPR' EQ '0').ZG155Q                         00498900
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00499000
                 AIF   (T'&ZCGPR NE 'N').ZG155Q  INVALID REG NAME       00499100
.ZG155P          ANOP  ,                                                00499200
                 AIF   (T'&ZCGPR NE 'N').ZG155R  NON NUMERIC            00499300
                 AIF   ('&ZCGPR' LT '2').ZG155Q                         00499400
                 AIF   ('&ZCGPR' LE '12').ZG155R                        00499500
.ZG155Q          ANOP  ,                                                00499600
&ZMS             SETC  '"REQBUFFER='            *KGPRA* MNOTE           00499700
&ZMS             SETC  '&ZMS.&REQBUFFER"'                               00499800
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00499900
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00500000
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00500100
.ZG155R          ANOP  ,                                                00500200
.*----------------------------------------------------------------***   00500300
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00500400
                 AIF   (N'&REQNUM LE 1).ZG158A  CK NUM                  00500500
&ZMS             SETC  '"REQNUM='  *KPOSA* MNOTE                        00500600
&ZMS             SETC  '&ZMS.&REQNUM"'                                  00500700
&ZMS             SETC  '&ZMS "REQNUM"'                                  00500800
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00500900
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00501000
.ZG158A          ANOP  ,                                                00501100
.*-------------------------------------------------------------------   00501200
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00501300
&ZXREQNUM        SETC  'INPUT'     SET IN/OUTPUT                        00501400
&XREQNUM         SETC  '&REQNUM(1)'             SET XVARIABLE           00501500
                 AIF   (N'&REQNUM GT 1).ZG158B  MULTI PARMS             00501600
&XREQNUM         SETC  '&REQNUM'   SET XVARIABLE                        00501700
.ZG158B          AIF   (K'&REQNUM(1) GT 0).ZG158C                       00501800
&ZXREQNUM        SETC  ''          RESET IN/OUTPUT                      00501900
&ZMS             SETC  ' '         *KRQDA*                              00502000
&ZMS             SETC  '&ZMS "REQNUM" KEY AND ITS'                      00502100
                 MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                 00502200
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00502300
.ZG158C          ANOP  ,                                                00502400
.*-------------------------------------------------------------------   00502500
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00502600
                 AIF   (K'&ZXREQNUM LE 0).ZG158R  NOT I/O               00502700
                 AIF   ('&XREQNUM'(1,1) NE '(').ZG158R                  00502800
&ZCGPR           SETC  '&XREQNUM'(2,K'&XREQNUM-2)                       00502900
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG158P                    00503000
                 AIF   (K'&ZCGPR GT 2).ZG158Q                           00503100
                 AIF   ('&ZCGPR' EQ '0').ZG158Q                         00503200
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00503300
                 AIF   (T'&ZCGPR NE 'N').ZG158Q  INVALID REG NAME       00503400
.ZG158P          ANOP  ,                                                00503500
                 AIF   (T'&ZCGPR NE 'N').ZG158R  NON NUMERIC            00503600
                 AIF   ('&ZCGPR' LT '2').ZG158Q                         00503700
                 AIF   ('&ZCGPR' LE '12').ZG158R                        00503800
.ZG158Q          ANOP  ,                                                00503900
&ZMS             SETC  '"REQNUM='  *KGPRA* MNOTE                        00504000
&ZMS             SETC  '&ZMS.&REQNUM"'                                  00504100
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00504200
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00504300
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00504400
.ZG158R          ANOP  ,                                                00504500
.*----------------------------------------------------------------***   00504600
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00504700
                 AIF   (N'&REQPROC LE 1).ZG161A  CK NUM                 00504800
&ZMS             SETC  '"REQPROC='              *KPOSA* MNOTE           00504900
&ZMS             SETC  '&ZMS.&REQPROC"'                                 00505000
&ZMS             SETC  '&ZMS "REQPROC"'                                 00505100
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00505200
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00505300
.ZG161A          ANOP  ,                                                00505400
.*-------------------------------------------------------------------   00505500
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00505600
                 AIF   (K'&REQPROC(1) LE 0).ZG161C  NO PARM             00505700
&ZXREQPROC       SETC  'OUTPUT'    SET OUTPUT                           00505800
&XREQPROC        SETC  '&REQPROC(1)'            SET XVARIABLE           00505900
                 AIF   (N'&REQPROC GT 1).ZG161C                         00506000
&XREQPROC        SETC  '&REQPROC'  SET XVARIABLE                        00506100
.ZG161C          ANOP  ,                                                00506200
.*-------------------------------------------------------------------   00506300
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00506400
                 AIF   (K'&ZXREQPROC LE 0).ZG161R  NOT I/O              00506500
                 AIF   ('&XREQPROC'(1,1) NE '(').ZG161R                 00506600
&ZCGPR           SETC  '&XREQPROC'(2,K'&XREQPROC-2)                     00506700
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG161P                    00506800
                 AIF   (K'&ZCGPR GT 2).ZG161Q                           00506900
                 AIF   ('&ZCGPR' EQ '0').ZG161Q                         00507000
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00507100
                 AIF   (T'&ZCGPR NE 'N').ZG161Q  INVALID REG NAME       00507200
.ZG161P          ANOP  ,                                                00507300
                 AIF   (T'&ZCGPR NE 'N').ZG161R  NON NUMERIC            00507400
                 AIF   ('&ZCGPR' LT '2').ZG161Q                         00507500
                 AIF   ('&ZCGPR' LE '12').ZG161R                        00507600
.ZG161Q          ANOP  ,                                                00507700
&ZMS             SETC  '"REQPROC='              *KGPRA* MNOTE           00507800
&ZMS             SETC  '&ZMS.&REQPROC"'                                 00507900
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00508000
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00508100
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00508200
.ZG161R          ANOP  ,                                                00508300
.*------------------------------------------------------------------    00508400
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00508500
.ZG163           ANOP  ,                                                00508600
&ZXREQUEST       SETC  'INPUT'     SET IN/OUTPUT                        00508700
                 AIF   (K'&XREQUEST GT 0).ZG163E  VALID ARG             00508800
                 AIF   (T'&REQUEST EQ 'O').ZG163D  OMITTED              00508900
&ZASYSLNDX       SETA  0                                                00509000
.ZG163A          ANOP  ,           POSITIONAL MACRO KEY                 00509100
&ZASYSLNDX       SETA  &ZASYSLNDX+1                                     00509200
                 AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG163C                00509300
&ZTLC            SETC 'REQUEST'                                         00509400
                 AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG163A       00509500
.ZG163B          ANOP  ,                                                00509600
&ZXREQUEST       SETC  ''          RESET IN/OUTPUT                      00509700
&ZMS             SETC  'THE "REQUEST" KEY'      *KOPTA* MNOTE           00509800
&ZMS             SETC  '&ZMS MUST CONTAIN ONE'                          00509900
                 MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                 00510000
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00510100
                 AGO   .ZG163E                                          00510200
.ZG163C          ANOP  ,                                                00510300
&ZXREQUEST       SETC  ''          RESET IN/OUTPUT                      00510400
&ZMS             SETC  '"REQUEST='              *KUKWA* MNOTE           00510500
&ZMS             SETC  '&ZMS.&REQUEST"'                                 00510600
&ZMS             SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '        00510700
&ZMS             SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'              00510800
&ZMS             SETC  '&ZMS "OBTAIN",'                                 00510900
&ZMS             SETC  '&ZMS "ALTER",'                                  00511000
&ZMS             SETC  '&ZMS "RELEASE",'                                00511100
&ZMS             SETC  '&ZMS OR "PROCESSMULT".'                         00511200
                 MNOTE 8,' &ZMS '                                       00511300
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00511400
                 AGO   .ZG163E                                          00511500
.ZG163D          ANOP  ,                                                00511600
&XREQUEST        SETC  'OBTAIN'    SET DEFAULT KEYWORD                  00511700
.ZG163E          ANOP  ,                                                00511800
.*------------------------------------------------------------------    00511900
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00512000
                 AIF   (K'&REQUEST(1) GT 0).ZG163F  PARM                00512100
&XREQUEST        SETC  ''          ENSURE NULL KEYWORD                  00512200
&ZXREQUEST       SETC  ''          RESET IN/OUTPUT                      00512300
&ZMS             SETC  'THE'                                            00512400
&ZMS             SETC  '&ZMS "REQUEST" KEY AND ITS'                     00512500
&ZMS             SETC  '&ZMS ARGUMENT ARE REQUIRED.'                    00512600
&ZMS             SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'              00512700
&ZMS             SETC  '&ZMS "OBTAIN",'                                 00512800
&ZMS             SETC  '&ZMS "ALTER",'                                  00512900
&ZMS             SETC  '&ZMS "RELEASE",'                                00513000
&ZMS             SETC  '&ZMS OR "PROCESSMULT".'                         00513100
                 MNOTE 8,' &ZMS '                                       00513200
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00513300
.ZG163F          ANOP  ,                                                00513400
.*----------------------------------------------------------------***   00513500
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00513600
                 AIF   (N'&RETCODE LE 1).ZG165A  CK NUM                 00513700
&ZMS             SETC  '"RETCODE='              *KPOSA* MNOTE           00513800
&ZMS             SETC  '&ZMS.&RETCODE"'                                 00513900
&ZMS             SETC  '&ZMS "RETCODE"'                                 00514000
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00514100
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00514200
.ZG165A          ANOP  ,                                                00514300
.*-------------------------------------------------------------------   00514400
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00514500
                 AIF   (K'&RETCODE(1) LE 0).ZG165C  NO PARM             00514600
&ZXRETCODE       SETC  'OUTPUT'    SET OUTPUT                           00514700
&XRETCODE        SETC  '&RETCODE(1)'            SET XVARIABLE           00514800
                 AIF   (N'&RETCODE GT 1).ZG165C                         00514900
&XRETCODE        SETC  '&RETCODE'  SET XVARIABLE                        00515000
.ZG165C          ANOP  ,                                                00515100
.*-------------------------------------------------------------------   00515200
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00515300
                 AIF   (K'&ZXRETCODE LE 0).ZG165R  NOT I/O              00515400
                 AIF   ('&XRETCODE'(1,1) NE '(').ZG165R                 00515500
&ZCGPR           SETC  '&XRETCODE'(2,K'&XRETCODE-2)                     00515600
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG165P                    00515700
                 AIF   (K'&ZCGPR GT 2).ZG165Q                           00515800
                 AIF   ('&ZCGPR' EQ '0').ZG165Q                         00515900
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00516000
                 AIF   (T'&ZCGPR NE 'N').ZG165Q  INVALID REG NAME       00516100
.ZG165P          ANOP  ,                                                00516200
                 AIF   (T'&ZCGPR NE 'N').ZG165R  NON NUMERIC            00516300
                 AIF   ('&ZCGPR' LT '2').ZG165Q                         00516400
                 AIF   ('&ZCGPR' LE '12').ZG165R                        00516500
.ZG165Q          ANOP  ,                                                00516600
&ZMS             SETC  '"RETCODE='              *KGPRA* MNOTE           00516700
&ZMS             SETC  '&ZMS.&RETCODE"'                                 00516800
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00516900
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00517000
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00517100
.ZG165R          ANOP  ,                                                00517200
.*----------------------------------------------------------------***   00517300
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00517400
                 AIF   (N'&RSNCODE LE 1).ZG168A  CK NUM                 00517500
&ZMS             SETC  '"RSNCODE='              *KPOSA* MNOTE           00517600
&ZMS             SETC  '&ZMS.&RSNCODE"'                                 00517700
&ZMS             SETC  '&ZMS "RSNCODE"'                                 00517800
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00517900
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00518000
.ZG168A          ANOP  ,                                                00518100
.*-------------------------------------------------------------------   00518200
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00518300
                 AIF   (K'&RSNCODE(1) LE 0).ZG168C  NO PARM             00518400
&ZXRSNCODE       SETC  'OUTPUT'    SET OUTPUT                           00518500
&XRSNCODE        SETC  '&RSNCODE(1)'            SET XVARIABLE           00518600
                 AIF   (N'&RSNCODE GT 1).ZG168C                         00518700
&XRSNCODE        SETC  '&RSNCODE'  SET XVARIABLE                        00518800
.ZG168C          ANOP  ,                                                00518900
.*-------------------------------------------------------------------   00519000
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00519100
                 AIF   (K'&ZXRSNCODE LE 0).ZG168R  NOT I/O              00519200
                 AIF   ('&XRSNCODE'(1,1) NE '(').ZG168R                 00519300
&ZCGPR           SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                     00519400
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG168P                    00519500
                 AIF   (K'&ZCGPR GT 2).ZG168Q                           00519600
                 AIF   ('&ZCGPR' EQ '0').ZG168Q                         00519700
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00519800
                 AIF   (T'&ZCGPR NE 'N').ZG168Q  INVALID REG NAME       00519900
.ZG168P          ANOP  ,                                                00520000
                 AIF   (T'&ZCGPR NE 'N').ZG168R  NON NUMERIC            00520100
                 AIF   ('&ZCGPR' LT '2').ZG168Q                         00520200
                 AIF   ('&ZCGPR' LE '12').ZG168R                        00520300
.ZG168Q          ANOP  ,                                                00520400
&ZMS             SETC  '"RSNCODE='              *KGPRA* MNOTE           00520500
&ZMS             SETC  '&ZMS.&RSNCODE"'                                 00520600
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00520700
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00520800
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00520900
.ZG168R          ANOP  ,                                                00521000
.******************************************************************     00521100
.***AH.P00 CHECK STANDALONE POSITIONAL VARIABLES                        00521200
.******************************************************************     00521300
                 ACTR  10000                                            00521400
.*----------------------------------------------------------------***   00521500
.***AH.P02 EXTRA POSITIONALS                                            00521600
                 AIF   (N'&SYSLIST LE 0).ZGLISTX  NO EXTRAS             00521700
                 AIF   (N'&SYSLIST NE 2).ZGLISTX1  NOT NULL             00521800
                 AIF   ('&SYSLIST(1)' NE '').ZGLISTX1  NOT NULL         00521900
                 AIF   ('&SYSLIST(2)' EQ '').ZGLISTX  NOT NULL          00522000
.ZGLISTX1        ANOP  ,                                                00522100
&ZCVAL           SETC  ''          ERROR FIELD                          00522200
&ZAWRK           SETA  0           POSITIONAL NUMBER                    00522300
.ZGLIST2         ANOP  ,                                                00522400
&ZAWRK           SETA  &ZAWRK+1    NEXT POSITIONAL                      00522500
                 AIF   (&ZAWRK GT N'&SYSLIST).ZGLIST3  DONE             00522600
&ZCVAL           SETC '&ZCVAL,&SYSLIST(&ZAWRK)'  EXTRA                  00522700
                 AGO   .ZGLIST2                                         00522800
.*                                                                      00522900
.ZGLIST3         ANOP  ,                                                00523000
&ZCVAL           SETC '&ZCVAL'(2,K'&ZCVAL-1)    STRIP COMMA             00523100
&ZMS             SETC  'POSITIONAL ARGUMENT(S),'  *PPOSA* MNOTE         00523200
&ZMS             SETC  '&ZMS "&ZCVAL"'                                  00523300
&ZMS             SETC  '&ZMS CANNOT BE USED.'                           00523400
&ZMS             SETC  '&ZMS NO POSITIONAL ARGUMENTS'                   00523500
                 MNOTE 8,' &ZMS ARE ALLOWED.'                           00523600
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00523700
.ZGLISTX         ANOP  ,                                                00523800
&ZASYSLNDX       SETA  0                                                00523900
.*-------------------------------------------------------------------   00524000
.***AG.MF04 MF=(SLE)                                                    00524100
.ZGMFX           ANOP  ,           END OF FULL SYNTAX CHECK             00524200
.*******************************************************************    00524300
.***AE.ZMR01 NO CODE GENERATED IF ERRORS DETECTED                       00524400
.*******************************************************************    00524500
                 AIF   (&ZMACRET NE 0).ZLX2     ERROR DETECTED          00524600
.*******************************************************************    00524700
.***AE.01  START OF IXLLOCK MACRO CODE                                  00524800
.*******************************************************************    00524900
                 LCLC  &M0M0001                 NAME                    00525000
&M0M0001         SETC  '&XLABEL'                SET NAME                00525100
                 AIF   (K'&XLABEL NE 0).XLAB2                           00525200
&M0M0001         SETC  'M00M&SYSNDX'            DEFAULT NAME            00525300
.*                                                                      00525400
.XLAB2           ANOP  ,                                                00525500
                 AIF   ('&XMF' EQ 'L').XLAB3                            00525600
&M0M0001 DS    0H                             IXLLOCK-2                 00525700
.XLAB3           ANOP  ,                                                00525800
.*******************************************************************    00525900
.***AE.PR01 PRINT CONTROLS, DEFAULT IS YES                              00526000
.*******************************************************************    00526100
              PUSH  PRINT                                               00526200
                 AIF   ('&ZPRINT' NE 'NO').ZPRINTX  TURN PRINT ON       00526300
                 PRINT OFF         ++ PR01                              00526400
                 AGO   .ZPRNTXX                                         00526500
.ZPRINTX         PRINT ON                                               00526600
.ZPRNTXX         ANOP  ,                                                00526700
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00526800
.**------------------------------------------------------------------** 00526900
.** START OF USER MACASM CODE                                        ** 00527000
.**------------------------------------------------------------------** 00527100
.*                                                                      00527200
.*  CERTAIN INPUTS TO THE IXLLOCK SERVICE MAY BE CHANGED AS             00527300
.*  PART OF GRANTING A REQUEST. SPECIFICALLY, THESE FIELDS              00527400
.*  ARE...                                                              00527500
.*                                                                      00527600
.*        - STATEVAL                                                    00527700
.*        - UDATAVAL                                                    00527800
.*        - RDATAVAL                                                    00527900
.*                                                                      00528000
.*  BASICALLY, THESE FIELDS CAN BE CHANGED BY THE CONTENTION            00528100
.*  EXIT. THEREFORE, WE WANT TO COPY THESE VALUES BACK TO THE           00528200
.*  CALLER'S VARIABLES IN CASES WHERE THIS COULD HAVE HAPPENED.         00528300
.*  IF A REQUEST GOES TO THE CONTENTION EXIT, THE USER HAS TOLD         00528400
.*  US WHICH MODE HE WISHES TO WAIT IN. IF HE SAYS SYNCSUSPEND          00528500
.*  THEN THERE IS A POTENTIAL THAT THE CHANGED VALUES WILL              00528600
.*  NEED TO BE COPIED BACK TO THE CALLERS VARIABLES AT                  00528700
.*  THE NEXT SEQUENTIAL INSTRUCTION AFTER THE CALL. IF HE               00528800
.*  HAS SAID SYNCEXIT, NORESPONSE THEN THE REQUEST EITHER               00528900
.*  COMPLETED IMMEDIATELY UNDER THE USER WITH NO CONTENTION             00529000
.*  (AND THEREFORE NO POSSIBILITY OF ANY CHANGES BEING MADE).           00529100
.*  THEREFORE WE NEED NOT WORRY ABOUT COPYING BACK VALUES               00529200
.*  IN THE SYNCEXIT, NORESPONSE CASE CAUSE ANY POTENTIAL                00529300
.*  CHANGES EITHER SHOW UP IN THE COMPLETE EXIT OR NOT AT               00529400
.*  ALL.                                                                00529500
.*                                                                      00529600
.*    HERE IS WHAT WE DO IN THE CODE BELOW. WE DECLARE THE              00529700
.*  CHANGEABLE FIELDS IN THE AMG SOURCE AS INPUT/OUTPUT.                00529800
.*  THIS MAKES AMG THINK THAT THESE ARE ALWAYS INPUT/OUTPUT.            00529900
.*  HOWEVER, WE ARE SOMEWHAT SLIMY HERE IN THAT WE KNOW                 00530000
.*  THAT AMG CHECKS THE ZXSTATEVAL FIELDS ETC TO SEE IF                 00530100
.*  THEY ARE INPUTS OR INOUTS. IF WE DECIDE BASED ON THE                00530200
.*  MODE THAT WE DONT NEED TO UPDATE (SYNCEXIT, NORESPONSE)             00530300
.*  THEN WE JUST SET THE FIELDS TO MAKE AMG THINKS THEY                 00530400
.*  ARE INPUTS BEFORE IT GENERATES THE OUTPUT CODE BELOW.               00530500
.*                                                                      00530600
.*************************************************************          00530700
         AIF   ('&XMODE' EQ 'SYNCSUSPEND').DOOUT                        00530800
         AIF   ('&ZXSTATEVAL' EQ '').NOSTATE  NOT USED                  00530900
&ZXSTATEVAL      SETC  'INPUT'   MAKE AMG NOT GENERATE OUTPUT CODE      00531000
.NOSTATE ANOP                                                           00531100
         AIF   ('&ZXUDATAVAL' EQ '').NOUDATA  NOT USED                  00531200
&ZXUDATAVAL      SETC  'INPUT'   MAKE AMG NOT GENERATE OUTPUT CODE      00531300
.NOUDATA ANOP                                                           00531400
         AIF   ('&ZXRDATAVAL' EQ '').NORDATA  NOT USED                  00531500
&ZXRDATAVAL      SETC  'INPUT'   MAKE AMG NOT GENERATE OUTPUT CODE      00531600
.NORDATA ANOP                                                           00531700
.DOOUT ANOP                                                             00531800
.**------------------------------------------------------------------** 00531900
.**  DETERMINE THE PARAMETER LIST VERSION                        @O2A** 00532000
.**------------------------------------------------------------------** 00532100
.*                                                                      00532200
         LCLA  &LOCKPLVERS                                         @O2A 00532300
.*                                                                      00532400
         AIF   (&XPLISTVER LE 1).SETPLVERSONE                      @O2A 00532500
&LOCKPLVERS SETA  &XPLISTVER                                       @O2A 00532600
         AGO   .SETPLVERSEND                                       @O2A 00532700
.*                                                                      00532800
.SETPLVERSONE ANOP ,                                                    00532900
         AIF   (&XPLISTVER        NE 1              AND                *00533000
                 '&XREQUEST'      NE 'PROCESSMULT'  AND                *00533100
                 '&XMODE'         NE 'SYNCFAIL').SETPLVERSZERO     @O2A 00533200
&LOCKPLVERS SETA  1                                                @O2A 00533300
         AGO   .SETPLVERSEND                                       @O2A 00533400
.*                                                                      00533500
.SETPLVERSZERO ANOP ,                                              @O2A 00533600
&LOCKPLVERS SETA  0                                                @O2A 00533700
.SETPLVERSEND ANOP ,                                               @O2A 00533800
.*                                                                      00533900
         AIF   (K'&PLISTVER(1) LE 0                      OR            *00534000
                '&PLISTVER(1)' EQ 'IMPLIED_VERSION'      OR            *00534100
                &XPLISTVER     GE &LOCKPLVERS).SETPLVERSUPDATE     @O2A 00534200
         MNOTE 8,' PLISTVER=&PLISTVER(1), BUT PLISTVER OF 1 IS REQUIRED*00534300
               .'                                                       00534400
&ZMACRET SETA  8                                                   @O2A 00534500
         AGO   .SETPLVERSEND2                                      @O2A 00534600
.*                                                                      00534700
.SETPLVERSUPDATE ANOP ,                                            @O2A 00534800
&XPLISTVER  SETA  &LOCKPLVERS                                      @O2A 00534900
.SETPLVERSEND2 ANOP ,                                              @O2A 00535000
.*                                                                      00535100
.**------------------------------------------------------------------** 00535200
.**  END OF USER MACASM CODE                                         ** 00535300
.**------------------------------------------------------------------** 00535400
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00535500
.********************************************************************   00535600
.***AL.L01 INTERNAL ARRAY TO PRODUCE FORMATTED CODE                     00535700
.********************************************************************   00535800
                      LCLA  &ZOPN          LIST INSTRUCTION INDEX       00535900
                      LCLA  &ZOPN1         INVOCATION INDEX             00536000
                      LCLC  &ZOPL(4095)    LABEL                        00536100
                      LCLC  &ZOPO(4095)    OPERATION                    00536200
                      LCLC  &ZOPV(4095)    VALUE                        00536300
                      LCLC  &ZOPD(4095)    DESCRIPTION                  00536400
.*                                                                      00536500
&ZOPN                 SETA  0              INITIAL INST INDEX VALUE     00536600
.******************************************************************     00536700
.***AL.L10 IXLLOCK FMT=LIST MF=S|L PARAMETERS                           00536800
.******************************************************************     00536900
                      AIF   ('&XMF' EQ 'L').ZLMFSL2                     00537000
                      AIF   ('&XMF' NE 'S').ZLMFSLX                     00537100
&XMFCTRL              SETC  '#Z'.'&SYSNDX'(1,4).'A'                     00537200
&XMFATTR              SETC  '0D'                                        00537300
.*                                                                      00537400
&ZOPN                 SETA  &ZOPN+1                                     00537500
&ZOPL(&ZOPN)          SETC  ' '                                         00537600
&ZOPO(&ZOPN)          SETC  'B'                                         00537700
&ZOPV(&ZOPN)          SETC  '&XMFCTRL.S'                                00537800
&ZOPD(&ZOPN)          SETC  '++ IXLLOCK ARG PARMS'                      00537900
.*                                                                      00538000
&ZOPN                 SETA  &ZOPN+1                                     00538100
&ZOPL(&ZOPN)          SETC  ' '                                         00538200
&ZOPO(&ZOPN)          SETC  'SPACE'                                     00538300
&ZOPV(&ZOPN)          SETC  '1'                                         00538400
&ZOPD(&ZOPN)          SETC  ' '                                         00538500
.*                                                                      00538600
.ZLMFSL2              ANOP  ,                                           00538700
.*-------------------------------------------------------------------   00538800
.***AM.L00  IXLLOCK FMT=LIST NAME                                       00538900
                      AIF   ('&XMF' NE 'L').ZLMFSL2M                    00539000
&ZOPN                 SETA &ZOPN+1                                      00539100
&ZOPL(&ZOPN)          SETC '&M0M0001'                                   00539200
&ZOPO(&ZOPN)          SETC 'EQU'                                        00539300
&ZOPV(&ZOPN)          SETC '&XMFCTRL'                                   00539400
&ZOPD(&ZOPN)          SETC '++ IXLLOCK NAME'                            00539500
.ZLMFSL2M             ANOP  ,                                           00539600
.*-------------------------------------------------------------------   00539700
.***AM.L01  IXLLOCK FMT=LIST PARAMETERS                                 00539800
&ZOPN                 SETA &ZOPN+1                                      00539900
&ZOPL(&ZOPN)          SETC '&XMFCTRL'                                   00540000
&ZOPO(&ZOPN)          SETC 'DS'                                         00540100
&ZOPV(&ZOPN)          SETC '&XMFATTR'                                   00540200
&ZOPD(&ZOPN)          SETC '++ IXLLOCK PARM LIST'                       00540300
.*-------------------------------------------------------------------   00540400
.***AM.L02 XVERSION XL1                                                 00540500
&ZOPN                 SETA &ZOPN+1                                      00540600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XVERSION'                         00540700
&ZOPO(&ZOPN)          SETC 'DS'                                         00540800
&ZOPV(&ZOPN)          SETC 'XL1'                                        00540900
&ZOPD(&ZOPN)          SETC '++ INPUT XVERSION'                          00541000
.*-------------------------------------------------------------------   00541100
.***AM.L09  XRSV001 CL2                                                 00541200
&ZOPN                 SETA &ZOPN+1                                      00541300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV001'                          00541400
&ZOPO(&ZOPN)          SETC 'DS'                                         00541500
&ZOPV(&ZOPN)          SETC 'CL2'                                        00541600
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV001'                       00541700
.*-------------------------------------------------------------------   00541800
.***AM.L03 XREQUESTFLAGS BL.8                                           00541900
&ZOPN                 SETA &ZOPN+1                                      00542000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XREQUESTFLAGS'                    00542100
&ZOPO(&ZOPN)          SETC 'DS'                                         00542200
&ZOPV(&ZOPN)          SETC 'BL.8'                                       00542300
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             00542400
.*                                                                      00542500
&ZOPN                 SETA  &ZOPN+1                                     00542600
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_RNAMELEN'                00542700
&ZOPO(&ZOPN)          SETC  'EQU'                                       00542800
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             00542900
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               00543000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).RNAMELEN'                     00543100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00543200
.*-------------------------------------------------------------------   00543300
.***AM.L09  XCONTOKEN CL16                                              00543400
&ZOPN                 SETA &ZOPN+1                                      00543500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCONTOKEN'                        00543600
&ZOPO(&ZOPN)          SETC 'DS'                                         00543700
&ZOPV(&ZOPN)          SETC 'CL16'                                       00543800
&ZOPD(&ZOPN)          SETC '++ &ZXCONTOKEN  XCONTOKEN'                  00543900
.*-------------------------------------------------------------------   00544000
.***AM.L09  XVARAREA1 CL64                                              00544100
&ZOPN                 SETA &ZOPN+1                                      00544200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XVARAREA1'                        00544300
&ZOPO(&ZOPN)          SETC 'DS'                                         00544400
&ZOPV(&ZOPN)          SETC 'CL64'                                       00544500
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XVARAREA1'                  00544600
.*-------------------------------------------------------------------   00544700
.***AM.L09  XHASHVAL F                                                  00544800
&ZOPN                 SETA &ZOPN+1                                      00544900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XHASHVAL'                         00545000
&ZOPO(&ZOPN)          SETC 'DS'                                         00545100
&ZOPV(&ZOPN)          SETC 'F'                                          00545200
&ZOPD(&ZOPN)          SETC '++ &ZXHASHVAL  XHASHVAL'                    00545300
.*-------------------------------------------------------------------   00545400
.***AM.L05 XSTATE XL1                                                   00545500
&ZOPN                 SETA &ZOPN+1                                      00545600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSTATE'                           00545700
&ZOPO(&ZOPN)          SETC 'DS'                                         00545800
&ZOPV(&ZOPN)          SETC 'XL1'                                        00545900
&ZOPD(&ZOPN)          SETC '++ &ZXSTATE XSTATE'                         00546000
.*                                                                      00546100
&ZOPN                 SETA  &ZOPN+1                                     00546200
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XSTATE_SHR'                      00546300
&ZOPO(&ZOPN)          SETC  'EQU'                                       00546400
&ZOPV(&ZOPN)          SETC  '1'                                         00546500
&ZOPD(&ZOPN)          SETC  '++ XSTATE.'                                00546600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).SHR'                          00546700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00546800
.*                                                                      00546900
&ZOPN                 SETA  &ZOPN+1                                     00547000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XSTATE_EXCL'                     00547100
&ZOPO(&ZOPN)          SETC  'EQU'                                       00547200
&ZOPV(&ZOPN)          SETC  '2'                                         00547300
&ZOPD(&ZOPN)          SETC  '++ XSTATE.'                                00547400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).EXCL'                         00547500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00547600
.*-------------------------------------------------------------------   00547700
.***AM.L09  XUDATAVAL CL64                                              00547800
&ZOPN                 SETA &ZOPN+1                                      00547900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XUDATAVAL'                        00548000
&ZOPO(&ZOPN)          SETC 'DS'                                         00548100
&ZOPV(&ZOPN)          SETC 'CL64'                                       00548200
&ZOPD(&ZOPN)          SETC '++ &ZXUDATAVAL  XUDATAVAL'                  00548300
.*-------------------------------------------------------------------   00548400
.***AM.L09  XRSV002 CL3                                                 00548500
&ZOPN                 SETA &ZOPN+1                                      00548600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV002'                          00548700
&ZOPO(&ZOPN)          SETC 'DS'                                         00548800
&ZOPV(&ZOPN)          SETC 'CL3'                                        00548900
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV002'                       00549000
.*-------------------------------------------------------------------   00549100
.***AM.L09  XRDATAVAL CL64                                              00549200
&ZOPN                 SETA &ZOPN+1                                      00549300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRDATAVAL'                        00549400
&ZOPO(&ZOPN)          SETC 'DS'                                         00549500
&ZOPV(&ZOPN)          SETC 'CL64'                                       00549600
&ZOPD(&ZOPN)          SETC '++ &ZXRDATAVAL  XRDATAVAL'                  00549700
.*-------------------------------------------------------------------   00549800
.***AM.L09  XENTRYID CL12                                               00549900
&ZOPN                 SETA &ZOPN+1                                      00550000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XENTRYID'                         00550100
&ZOPO(&ZOPN)          SETC 'DS'                                         00550200
&ZOPV(&ZOPN)          SETC 'CL12'                                       00550300
&ZOPD(&ZOPN)          SETC '++ &ZXENTRYID  XENTRYID'                    00550400
.*-------------------------------------------------------------------   00550500
.***AM.L09  XLOCKDATA CL8                                               00550600
&ZOPN                 SETA &ZOPN+1                                      00550700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XLOCKDATA'                        00550800
&ZOPO(&ZOPN)          SETC 'DS'                                         00550900
&ZOPV(&ZOPN)          SETC 'CL8'                                        00551000
&ZOPD(&ZOPN)          SETC '++ &ZXLOCKDATA  XLOCKDATA'                  00551100
.*-------------------------------------------------------------------   00551200
.***AM.L05 XMODE XL1                                                    00551300
&ZOPN                 SETA &ZOPN+1                                      00551400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMODE'                            00551500
&ZOPO(&ZOPN)          SETC 'DS'                                         00551600
&ZOPV(&ZOPN)          SETC 'XL1'                                        00551700
&ZOPD(&ZOPN)          SETC '++ &ZXMODE XMODE'                           00551800
.*                                                                      00551900
&ZOPN                 SETA  &ZOPN+1                                     00552000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XMODE_SYNCEXIT'                  00552100
&ZOPO(&ZOPN)          SETC  'EQU'                                       00552200
&ZOPV(&ZOPN)          SETC  '0'                                         00552300
&ZOPD(&ZOPN)          SETC  '++ XMODE.'                                 00552400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).SYNCEXIT'                     00552500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00552600
.*                                                                      00552700
&ZOPN                 SETA  &ZOPN+1                                     00552800
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XMODE_NORESPONSE'                00552900
&ZOPO(&ZOPN)          SETC  'EQU'                                       00553000
&ZOPV(&ZOPN)          SETC  '1'                                         00553100
&ZOPD(&ZOPN)          SETC  '++ XMODE.'                                 00553200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).NORESPONSE'                   00553300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00553400
.*                                                                      00553500
&ZOPN                 SETA  &ZOPN+1                                     00553600
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XMODE_SYNCSUSPEND'               00553700
&ZOPO(&ZOPN)          SETC  'EQU'                                       00553800
&ZOPV(&ZOPN)          SETC  '2'                                         00553900
&ZOPD(&ZOPN)          SETC  '++ XMODE.'                                 00554000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).SYNCSUSPEND'                  00554100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00554200
.*                                                                      00554300
&ZOPN                 SETA  &ZOPN+1                                     00554400
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XMODE_SYNCFAIL'                  00554500
&ZOPO(&ZOPN)          SETC  'EQU'                                       00554600
&ZOPV(&ZOPN)          SETC  '3'                                         00554700
&ZOPD(&ZOPN)          SETC  '++ XMODE.'                                 00554800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).SYNCFAIL'                     00554900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00555000
.*-------------------------------------------------------------------   00555100
.***AM.L09  XEVENT XL1                                                  00555200
&ZOPN                 SETA &ZOPN+1                                      00555300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XEVENT'                           00555400
&ZOPO(&ZOPN)          SETC 'DS'                                         00555500
&ZOPV(&ZOPN)          SETC 'XL1'                                        00555600
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XEVENT'                     00555700
.*-------------------------------------------------------------------   00555800
.***AM.L03 XRDATA BL.8                                                  00555900
&ZOPN                 SETA &ZOPN+1                                      00556000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRDATA'                           00556100
&ZOPO(&ZOPN)          SETC 'DS'                                         00556200
&ZOPV(&ZOPN)          SETC 'BL.8'                                       00556300
&ZOPD(&ZOPN)          SETC '++ INPUT'                                   00556400
.*                                                                      00556500
&ZOPN                 SETA  &ZOPN+1                                     00556600
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XRDATA_UNCHANGED'                00556700
&ZOPO(&ZOPN)          SETC  'EQU'                                       00556800
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             00556900
&ZOPD(&ZOPN)          SETC  '++ XRDATA.'                                00557000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).UNCHANGED'                    00557100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00557200
.*                                                                      00557300
&ZOPN                 SETA  &ZOPN+1                                     00557400
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XRDATA_NORDATA'                  00557500
&ZOPO(&ZOPN)          SETC  'EQU'                                       00557600
&ZOPV(&ZOPN)          SETC  'B''01000000'''                             00557700
&ZOPD(&ZOPN)          SETC  '++ XRDATA.'                                00557800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).NORDATA'                      00557900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00558000
.*                                                                      00558100
&ZOPN                 SETA  &ZOPN+1                                     00558200
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XRDATA_DELETE'                   00558300
&ZOPO(&ZOPN)          SETC  'EQU'                                       00558400
&ZOPV(&ZOPN)          SETC  'B''00100000'''                             00558500
&ZOPD(&ZOPN)          SETC  '++ XRDATA.'                                00558600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).DELETE'                       00558700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00558800
.*                                                                      00558900
&ZOPN                 SETA  &ZOPN+1                                     00559000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XRDATA_WRITE'                    00559100
&ZOPO(&ZOPN)          SETC  'EQU'                                       00559200
&ZOPV(&ZOPN)          SETC  'B''00010000'''                             00559300
&ZOPD(&ZOPN)          SETC  '++ XRDATA.'                                00559400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).WRITE'                        00559500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00559600
.*                                                                      00559700
&ZOPN                 SETA  &ZOPN+1                                     00559800
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XRDATA_REACQUIRE'                00559900
&ZOPO(&ZOPN)          SETC  'EQU'                                       00560000
&ZOPV(&ZOPN)          SETC  'B''00001000'''                             00560100
&ZOPD(&ZOPN)          SETC  '++ XRDATA.'                                00560200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).REACQUIRE'                    00560300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00560400
.*                                                                      00560500
&ZOPN                 SETA  &ZOPN+1                                     00560600
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XRDATA_KEEP'                     00560700
&ZOPO(&ZOPN)          SETC  'EQU'                                       00560800
&ZOPV(&ZOPN)          SETC  'B''00000100'''                             00560900
&ZOPD(&ZOPN)          SETC  '++ XRDATA.'                                00561000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).KEEP'                         00561100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00561200
.*                                                                      00561300
&ZOPN                 SETA  &ZOPN+1                                     00561400
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XUPDATERDATA_YES'                00561500
&ZOPO(&ZOPN)          SETC  'EQU'                                       00561600
&ZOPV(&ZOPN)          SETC  'B''00000010'''                             00561700
&ZOPD(&ZOPN)          SETC  '++ XUPDATERDATA.'                          00561800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).YES'                          00561900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00562000
.*                                                                      00562100
&ZOPN                 SETA  &ZOPN+1                                     00562200
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XUPDATERDATA_NO'                 00562300
&ZOPO(&ZOPN)          SETC  'EQU'                                       00562400
&ZOPV(&ZOPN)          SETC  'B''00000001'''                             00562500
&ZOPD(&ZOPN)          SETC  '++ XUPDATERDATA.'                          00562600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).NO'                           00562700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00562800
.*-------------------------------------------------------------------   00562900
.***AM.L09  XCONID XL1                                                  00563000
&ZOPN                 SETA &ZOPN+1                                      00563100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCONID'                           00563200
&ZOPO(&ZOPN)          SETC 'DS'                                         00563300
&ZOPV(&ZOPN)          SETC 'XL1'                                        00563400
&ZOPD(&ZOPN)          SETC '++ &ZXCONID  XCONID'                        00563500
.*-------------------------------------------------------------------   00563600
.***AM.L09  XENTRYCOUNT F                                               00563700
&ZOPN                 SETA &ZOPN+1                                      00563800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XENTRYCOUNT'                      00563900
&ZOPO(&ZOPN)          SETC 'DS'                                         00564000
&ZOPV(&ZOPN)          SETC 'F'                                          00564100
&ZOPD(&ZOPN)          SETC '++ &ZXENTRYCOUNT  XENTRYCOUNT'              00564200
.*-------------------------------------------------------------------   00564300
.***AM.L09  XSTARTCONT BL.32                                            00564400
&ZOPN                 SETA &ZOPN+1                                      00564500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSTARTCONT'                       00564600
&ZOPO(&ZOPN)          SETC 'DS'                                         00564700
&ZOPV(&ZOPN)          SETC 'BL.32'                                      00564800
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XSTARTCONT'                 00564900
.*-------------------------------------------------------------------   00565000
.***AM.L09  XRNAMELEN F                                                 00565100
&ZOPN                 SETA &ZOPN+1                                      00565200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRNAMELEN'                        00565300
&ZOPO(&ZOPN)          SETC 'DS'                                         00565400
&ZOPV(&ZOPN)          SETC 'F'                                          00565500
&ZOPD(&ZOPN)          SETC '++ &ZXRNAMELEN  XRNAMELEN'                  00565600
.*-------------------------------------------------------------------   00565700
.***AM.MLM1 SAVED LOCATION COUNTER                                      00565800
                      AIF  ('&ZENDBASEPL' NE '').ZL34LB                 00565900
&ZENDBASEPL           SETC 'YES'                                        00566000
&ZOPN                 SETA &ZOPN+1                                      00566100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._PL_END'                           00566200
&ZOPO(&ZOPN)          SETC 'EQU'                                        00566300
&ZOPV(&ZOPN)          SETC '*'                                          00566400
&ZOPD(&ZOPN)          SETC '++ END OF BASE PLIST'                       00566500
.ZL34LB               ANOP  ,                                           00566600
.*-------------------------------------------------------------------   00566700
.***AM.PJR1 DEFINED ON XSTATE                                           00566800
&ZOPN                 SETA &ZOPN+1                                      00566900
&ZOPL(&ZOPN)          SETC ' '                                          00567000
&ZOPO(&ZOPN)          SETC 'ORG'                                        00567100
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+88'                               00567200
&ZOPD(&ZOPN)          SETC ' '                                          00567300
.*-------------------------------------------------------------------   00567400
.***AM.L09  XSTATEVAL XL1                                               00567500
&ZOPN                 SETA &ZOPN+1                                      00567600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSTATEVAL'                        00567700
&ZOPO(&ZOPN)          SETC 'DS'                                         00567800
&ZOPV(&ZOPN)          SETC 'XL1'                                        00567900
&ZOPD(&ZOPN)          SETC '++ &ZXSTATEVAL  XSTATEVAL'                  00568000
.*-------------------------------------------------------------------   00568100
.***AM.PJR1 DEFINED ON XMODE                                            00568200
&ZOPN                 SETA &ZOPN+1                                      00568300
&ZOPL(&ZOPN)          SETC ' '                                          00568400
&ZOPO(&ZOPN)          SETC 'ORG'                                        00568500
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+240'                              00568600
&ZOPD(&ZOPN)          SETC ' '                                          00568700
.*-------------------------------------------------------------------   00568800
.***AM.L09  XMODEVAL XL1                                                00568900
&ZOPN                 SETA &ZOPN+1                                      00569000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMODEVAL'                         00569100
&ZOPO(&ZOPN)          SETC 'DS'                                         00569200
&ZOPV(&ZOPN)          SETC 'XL1'                                        00569300
&ZOPD(&ZOPN)          SETC '++ &ZXMODEVAL  XMODEVAL'                    00569400
.*-------------------------------------------------------------------   00569500
.***AM.PJR1 DEFINED ON XVARAREA1                                        00569600
&ZOPN                 SETA &ZOPN+1                                      00569700
&ZOPL(&ZOPN)          SETC ' '                                          00569800
&ZOPO(&ZOPN)          SETC 'ORG'                                        00569900
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+20'                               00570000
&ZOPD(&ZOPN)          SETC ' '                                          00570100
.*-------------------------------------------------------------------   00570200
.***AM.L09  XINLINERNAME CL64                                           00570300
&ZOPN                 SETA &ZOPN+1                                      00570400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XINLINERNAME'                     00570500
&ZOPO(&ZOPN)          SETC 'DS'                                         00570600
&ZOPV(&ZOPN)          SETC 'CL64'                                       00570700
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XINLINERNAME'               00570800
.*-------------------------------------------------------------------   00570900
.***AM.PJR1 DEFINED ON XVARAREA1                                        00571000
&ZOPN                 SETA &ZOPN+1                                      00571100
&ZOPL(&ZOPN)          SETC ' '                                          00571200
&ZOPO(&ZOPN)          SETC 'ORG'                                        00571300
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+20'                               00571400
&ZOPD(&ZOPN)          SETC ' '                                          00571500
.*-------------------------------------------------------------------   00571600
.***AM.L09  XRNAMEADDR A                                                00571700
&ZOPN                 SETA &ZOPN+1                                      00571800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRNAMEADDR'                       00571900
&ZOPO(&ZOPN)          SETC 'DS'                                         00572000
&ZOPV(&ZOPN)          SETC 'A'                                          00572100
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XRNAMEADDR'                 00572200
.*-------------------------------------------------------------------   00572300
.***AM.PJR1 DEFINED ON XVARAREA1                                        00572400
&ZOPN                 SETA &ZOPN+1                                      00572500
&ZOPL(&ZOPN)          SETC ' '                                          00572600
&ZOPO(&ZOPN)          SETC 'ORG'                                        00572700
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+20'                               00572800
&ZOPD(&ZOPN)          SETC ' '                                          00572900
.*-------------------------------------------------------------------   00573000
.***AM.L09  XREQBUFFER A                                                00573100
&ZOPN                 SETA &ZOPN+1                                      00573200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XREQBUFFER'                       00573300
&ZOPO(&ZOPN)          SETC 'DS'                                         00573400
&ZOPV(&ZOPN)          SETC 'A'                                          00573500
&ZOPD(&ZOPN)          SETC '++ &ZXREQBUFFER  XREQBUFFER'                00573600
.*-------------------------------------------------------------------   00573700
.***AM.L09 ALET XREQBUFFER F                                            00573800
&ZOPN                 SETA &ZOPN+1                                      00573900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XREQBUFFER_ALET'                  00574000
&ZOPO(&ZOPN)          SETC 'DS'                                         00574100
&ZOPV(&ZOPN)          SETC 'F'                                          00574200
&ZOPD(&ZOPN)          SETC '++ &ZXREQBUFFER ALET XREQBUFFER'            00574300
.*-------------------------------------------------------------------   00574400
.***AM.L09  XREQNUM XL2                                                 00574500
&ZOPN                 SETA &ZOPN+1                                      00574600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XREQNUM'                          00574700
&ZOPO(&ZOPN)          SETC 'DS'                                         00574800
&ZOPV(&ZOPN)          SETC 'XL2'                                        00574900
&ZOPD(&ZOPN)          SETC '++ &ZXREQNUM  XREQNUM'                      00575000
.*-------------------------------------------------------------------   00575100
.***AM.L09  XREQPROC XL2                                                00575200
&ZOPN                 SETA &ZOPN+1                                      00575300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XREQPROC'                         00575400
&ZOPO(&ZOPN)          SETC 'DS'                                         00575500
&ZOPV(&ZOPN)          SETC 'XL2'                                        00575600
&ZOPD(&ZOPN)          SETC '++ &ZXREQPROC  XREQPROC'                    00575700
&ZOPN                 SETA &ZOPN+1                                      00575800
&ZOPL(&ZOPN)          SETC ' '                                          00575900
&ZOPO(&ZOPN)          SETC 'ORG'                                        00576000
&ZOPV(&ZOPN)          SETC '&XMFCTRL._PL_END'                           00576100
&ZOPD(&ZOPN)          SETC 'RESET LOCATION COUNTER'                     00576200
.*-------------------------------------------------------------------   00576300
.***AM.L10 END OF IXLLOCK LIST PARAMETERS                               00576400
&ZOPN                 SETA &ZOPN+1                                      00576500
&ZOPL(&ZOPN)          SETC '&XMFCTRL.L'                                 00576600
&ZOPO(&ZOPN)          SETC 'EQU'                                        00576700
&ZOPV(&ZOPN)          SETC '*-&XMFCTRL'                                 00576800
&ZOPD(&ZOPN)          SETC '++ LENGTH OF PLIST'                         00576900
.*                                                                      00577000
&ZOPN                 SETA &ZOPN+1                                      00577100
&ZOPL(&ZOPN)          SETC ' '                                          00577200
&ZOPO(&ZOPN)          SETC 'SPACE'                                      00577300
&ZOPV(&ZOPN)          SETC '1'                                          00577400
&ZOPD(&ZOPN)          SETC ' '                                          00577500
.*-------------------------------------------------------------------   00577600
.***AL.L12 IXLLOCK FMT=LIST MF=S|L PARAMETERS                           00577700
                      AIF   ('&XMF' EQ 'L').ZMFLX  DONE IF MF=L         00577800
.*                                                                      00577900
&ZOPN                 SETA  &ZOPN+1                                     00578000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL.S'                                00578100
&ZOPO(&ZOPN)          SETC  'DC'                                        00578200
&ZOPV(&ZOPN)          SETC  '0H''0'''                                   00578300
&ZOPD(&ZOPN)          SETC  '++ IXLLOCK ARG PARMS'                      00578400
.*                                                                      00578500
.ZLMFSLX              ANOP  ,                                           00578600
.*-------------------------------------------------------------------   00578700
.***AL.L13 SET ZPLLEN TO ITS APPROPRIATE VALUE                          00578800
&ZPLLEN               SETA 256                                          00578900
.*                                                                      00579000
.******************************************************************     00579100
.***AI.L01 IXLLOCK FMT=LIST FILL IN PARAMETER AREA                      00579200
.******************************************************************     00579300
                      ACTR  10000                                       00579400
&ZCVAL                SETC  'LA'           ASSUME XA MODE               00579500
                      AIF   ('&SYSASCE' EQ 'P').ZIMFXA  SYSSTATE PRI    00579600
&ZCVAL                SETC  'LAE'          XAX MODE                     00579700
.ZIMFXA               ANOP ,                                            00579800
.*                                                                      00579900
                      AIF   ('&XMFCTRL'(1,1) NE '(').ZIMFN2  NOT GPR    00580000
&ZCGPR                SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)  GET GPR         00580100
                      AIF   ('&ZCGPR' EQ 'GPR1').ZIMFNX                 00580200
                      AIF   ('&ZCGPR' EQ 'GPR01').ZIMFNX                00580300
                      AIF   ('&ZCGPR' EQ 'REG1').ZIMFNX                 00580400
                      AIF   ('&ZCGPR' EQ 'REG01').ZIMFNX                00580500
                      AIF   ('&ZCGPR' EQ 'R1').ZIMFNX                   00580600
                      AIF   ('&ZCGPR' EQ '1').ZIMFNX                    00580700
                      AIF   ('&ZCGPR' EQ '01').ZIMFNX                   00580800
&ZOPN                 SETA  &ZOPN+1                                     00580900
&ZOPL(&ZOPN)          SETC  ' '                                         00581000
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00581100
&ZOPV(&ZOPN)          SETC  '1,0(,&ZCGPR)'                              00581200
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00581300
                      AGO   .ZIMFNX                                     00581400
.*                                                                      00581500
.ZIMFN2               ANOP ,                                            00581600
&ZOPN                 SETA  &ZOPN+1                                     00581700
&ZOPL(&ZOPN)          SETC  ' '                                         00581800
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00581900
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL'                                00582000
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00582100
.ZIMFNX               ANOP ,                                            00582200
.********************************************************************   00582300
.***AI.L02 IXLLOCK FMT=LIST INITIALIZE PARAMETER AREA                   00582400
.********************************************************************   00582500
.***AI.L03 MF=(SLE)                                                     00582600
                      AIF   ('&XMF' EQ 'L').ZIMFLX                      00582700
.*                                                                      00582800
&ZOPN                 SETA  &ZOPN+1                                     00582900
&ZOPL(&ZOPN)          SETC  ' '                                         00583000
&ZOPO(&ZOPN)          SETC  'XC'                                        00583100
&ZOPV(&ZOPN)          SETC  '0(&ZPLLEN,1),0(1)'                         00583200
&ZOPD(&ZOPN)          SETC  '++ INITIALIZE'                             00583300
.ZIMFLX               ANOP  ,                                           00583400
.*-------------------------------------------------------------------   00583500
.***AI.L04A XVERSION XL1                                                00583600
                      AIF   (&XPLISTVER EQ 0).ZIMFVW                    00583700
&ZOPN                 SETA  &ZOPN+1                                     00583800
&ZOPL(&ZOPN)          SETC  ' '                                         00583900
&ZOPO(&ZOPN)          SETC  'MVI'                                       00584000
&ZOPV(&ZOPN)          SETC  '0(1),&XPLISTVER'                           00584100
&ZOPD(&ZOPN)          SETC  '++ INPUT XVERSION XL1'                     00584200
.ZIMFVW               ANOP  ,                                           00584300
.*-------------------------------------------------------------------   00584400
.***AI.L05 XREQUESTFLAGS BL1                                            00584500
&ZW                   SETC  ''                                          00584600
&ZCLNG                SETC  ''             RESET BIT ON FLAG            00584700
.*-------------------------------------------------------------------   00584800
.***AI.L08 XREQUESTFLAGS "RNAMELEN"                                     00584900
.***      BL1'1XXXXXXX'                                                 00585000
         AIF   ('&RNAMELEN' EQ '').ZI4A                                 00585100
         AIF   ('&RNAMELEN' EQ 'NO_RNAMELEN').ZI4A                      00585200
         AIF   ('&RNAMELEN' EQ 'NO_RNAMELEN').ZI4A                      00585300
         AIF   ('&RNAMELEN' EQ 'NO_RNAMELEN').ZI4A                      00585400
&ZW                   SETC  '&ZW.10000000'                              00585500
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00585600
                      AGO   .ZI4C                                       00585700
.*                                                                      00585800
.ZI4A                 ANOP  ,                                           00585900
&ZW                   SETC  '&ZW.00000000'                              00586000
.ZI4C                 ANOP  ,                                           00586100
.*-------------------------------------------------------------------   00586200
.***AI.L11 XREQUESTFLAGS BL1                                            00586300
                      AIF   ('&ZCLNG' NE 'YES').ZI4E  ALL ZERO BITS     00586400
&ZOPN                 SETA  &ZOPN+1                                     00586500
&ZOPL(&ZOPN)          SETC  ' '                                         00586600
&ZOPO(&ZOPN)          SETC  'OI'                                        00586700
&ZOPV(&ZOPN)          SETC  '3(1),B''&ZW'''                             00586800
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              00586900
.ZI4E                 ANOP  ,                                           00587000
.*-------------------------------------------------------------------   00587100
.***AI.L25  XCONTOKEN CL16                                              00587200
                      AIF   ('&ZXCONTOKEN' EQ '').ZI5E                  00587300
                      AIF   ('&ZXCONTOKEN' EQ 'OUTPUT').ZI5E            00587400
&ZCGPR                SETC  '&XCONTOKEN'                                00587500
.*                                                                      00587600
                      AIF   ('&XCONTOKEN'(1,1) NE '(').ZI5B             00587700
&ZCGPR   SETC  '0('.'&XCONTOKEN'(2,K'&XCONTOKEN-2).')'                  00587800
.ZI5B                 ANOP  ,                                           00587900
.*                                                                      00588000
&ZOPN                 SETA  &ZOPN+1                                     00588100
&ZOPL(&ZOPN)          SETC  ' '                                         00588200
&ZOPO(&ZOPN)          SETC  'MVC'                                       00588300
&ZOPV(&ZOPN)          SETC  '4(16,1),&ZCGPR'                            00588400
&ZOPD(&ZOPN)          SETC  '++ &ZXCONTOKEN XCONTOKEN'                  00588500
.*                                                                      00588600
.ZI5E                 ANOP  ,                                           00588700
.*-------------------------------------------------------------------   00588800
.***AI.L25  XHASHVAL F                                                  00588900
                      AIF   ('&ZXHASHVAL' EQ '').ZI7E                   00589000
                      AIF   ('&ZXHASHVAL' EQ 'OUTPUT').ZI7E             00589100
&ZCGPR                SETC  '&XHASHVAL'                                 00589200
.*                                                                      00589300
                      AIF   ('&XHASHVAL'(1,1) NE '(').ZI7B              00589400
&ZCGPR   SETC  '0('.'&XHASHVAL'(2,K'&XHASHVAL-2).')'                    00589500
                      AGO   .ZI7D                                       00589600
.ZI7B                 ANOP  ,                                           00589700
.*                                                                      00589800
&ZC                   SETC  '&XHASHVAL'(1,1)                            00589900
                      AIF   (T'&ZC NE 'N').ZI7D                         00590000
&ZC                   SETC  '&XHASHVAL'                                 00590100
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI7D                00590200
&ZCGPR                SETC  '=FL4''&XHASHVAL'''                         00590300
.*                                                                      00590400
.ZI7D                 ANOP  ,                                           00590500
.*                                                                      00590600
&ZOPN                 SETA  &ZOPN+1                                     00590700
&ZOPL(&ZOPN)          SETC  ' '                                         00590800
&ZOPO(&ZOPN)          SETC  'MVC'                                       00590900
&ZOPV(&ZOPN)          SETC  '84(4,1),&ZCGPR'                            00591000
&ZOPD(&ZOPN)          SETC  '++ &ZXHASHVAL XHASHVAL'                    00591100
.*                                                                      00591200
.ZI7E                 ANOP  ,                                           00591300
.*-------------------------------------------------------------------   00591400
.***AI.L07 XSTATE AL1                                                   00591500
&ZW                   SETC  ''                                          00591600
.*-------------------------------------------------------------------   00591700
.***AI.L15 XSTATE "SHR" AL1                                             00591800
         AIF   ('&XSTATE' NE 'SHR').ZI9A                                00591900
&ZW                   SETC  '1'                                         00592000
.ZI9A                 ANOP  ,                                           00592100
.*-------------------------------------------------------------------   00592200
.***AI.L15 XSTATE "EXCL" AL1                                            00592300
         AIF   ('&XSTATE' NE 'EXCL').ZI10A                              00592400
&ZW                   SETC  '2'                                         00592500
.ZI10A                ANOP  ,                                           00592600
.*-------------------------------------------------------------------   00592700
.***AI.L17 XSTATE AL1                                                   00592800
                      AIF   ('&ZW' EQ '0').ZI10B                        00592900
                      AIF   ('&ZW' EQ '').ZI10B                         00593000
.*                                                                      00593100
&ZOPN                 SETA  &ZOPN+1                                     00593200
&ZOPL(&ZOPN)          SETC  ' '                                         00593300
&ZOPO(&ZOPN)          SETC  'MVI'                                       00593400
&ZOPV(&ZOPN)          SETC  '88(1),&ZW'                                 00593500
&ZOPD(&ZOPN)          SETC  '++ &ZXSTATE XSTATE'                        00593600
.ZI10B                ANOP  ,                                           00593700
.*-------------------------------------------------------------------   00593800
.***AI.L18  XUDATAVAL CL64                                              00593900
         AIF   ('&XUDATAVAL' NE 'ALL_ZEROES').ZI11                      00594000
&ZXUDATAVAL           SETC  ''             RESET INPUT/OUTPUT           00594100
.ZI11                 ANOP  ,                                           00594200
.*-------------------------------------------------------------------   00594300
.***AI.L25  XUDATAVAL CL64                                              00594400
                      AIF   ('&ZXUDATAVAL' EQ '').ZI11E                 00594500
                      AIF   ('&ZXUDATAVAL' EQ 'OUTPUT').ZI11E           00594600
&ZCGPR                SETC  '&XUDATAVAL'                                00594700
.*                                                                      00594800
                      AIF   ('&XUDATAVAL'(1,1) NE '(').ZI11B            00594900
&ZCGPR   SETC  '0('.'&XUDATAVAL'(2,K'&XUDATAVAL-2).')'                  00595000
.ZI11B                ANOP  ,                                           00595100
.*                                                                      00595200
&ZOPN                 SETA  &ZOPN+1                                     00595300
&ZOPL(&ZOPN)          SETC  ' '                                         00595400
&ZOPO(&ZOPN)          SETC  'MVC'                                       00595500
&ZOPV(&ZOPN)          SETC  '89(64,1),&ZCGPR'                           00595600
&ZOPD(&ZOPN)          SETC  '++ &ZXUDATAVAL XUDATAVAL'                  00595700
.*                                                                      00595800
.ZI11E                ANOP  ,                                           00595900
.*-------------------------------------------------------------------   00596000
.***AI.L25  XRDATAVAL CL64                                              00596100
                      AIF   ('&ZXRDATAVAL' EQ '').ZI13E                 00596200
                      AIF   ('&ZXRDATAVAL' EQ 'OUTPUT').ZI13E           00596300
&ZCGPR                SETC  '&XRDATAVAL'                                00596400
.*                                                                      00596500
                      AIF   ('&XRDATAVAL'(1,1) NE '(').ZI13B            00596600
&ZCGPR   SETC  '0('.'&XRDATAVAL'(2,K'&XRDATAVAL-2).')'                  00596700
.ZI13B                ANOP  ,                                           00596800
.*                                                                      00596900
&ZOPN                 SETA  &ZOPN+1                                     00597000
&ZOPL(&ZOPN)          SETC  ' '                                         00597100
&ZOPO(&ZOPN)          SETC  'MVC'                                       00597200
&ZOPV(&ZOPN)          SETC  '156(64,1),&ZCGPR'                          00597300
&ZOPD(&ZOPN)          SETC  '++ &ZXRDATAVAL XRDATAVAL'                  00597400
.*                                                                      00597500
.ZI13E                ANOP  ,                                           00597600
.*-------------------------------------------------------------------   00597700
.***AI.L25  XENTRYID CL12                                               00597800
                      AIF   ('&ZXENTRYID' EQ '').ZI14E                  00597900
                      AIF   ('&ZXENTRYID' EQ 'OUTPUT').ZI14E            00598000
&ZCGPR                SETC  '&XENTRYID'                                 00598100
.*                                                                      00598200
                      AIF   ('&XENTRYID'(1,1) NE '(').ZI14B             00598300
&ZCGPR   SETC  '0('.'&XENTRYID'(2,K'&XENTRYID-2).')'                    00598400
.ZI14B                ANOP  ,                                           00598500
.*                                                                      00598600
&ZOPN                 SETA  &ZOPN+1                                     00598700
&ZOPL(&ZOPN)          SETC  ' '                                         00598800
&ZOPO(&ZOPN)          SETC  'MVC'                                       00598900
&ZOPV(&ZOPN)          SETC  '220(12,1),&ZCGPR'                          00599000
&ZOPD(&ZOPN)          SETC  '++ &ZXENTRYID XENTRYID'                    00599100
.*                                                                      00599200
.ZI14E                ANOP  ,                                           00599300
.*-------------------------------------------------------------------   00599400
.***AI.L18  XLOCKDATA CL8                                               00599500
         AIF   ('&XLOCKDATA' NE 'ALL_ZEROES').ZI15                      00599600
&ZXLOCKDATA           SETC  ''             RESET INPUT/OUTPUT           00599700
.ZI15                 ANOP  ,                                           00599800
.*-------------------------------------------------------------------   00599900
.***AI.L25  XLOCKDATA CL8                                               00600000
                      AIF   ('&ZXLOCKDATA' EQ '').ZI15E                 00600100
                      AIF   ('&ZXLOCKDATA' EQ 'OUTPUT').ZI15E           00600200
&ZCGPR                SETC  '&XLOCKDATA'                                00600300
.*                                                                      00600400
                      AIF   ('&XLOCKDATA'(1,1) NE '(').ZI15B            00600500
&ZCGPR   SETC  '0('.'&XLOCKDATA'(2,K'&XLOCKDATA-2).')'                  00600600
.ZI15B                ANOP  ,                                           00600700
.*                                                                      00600800
&ZOPN                 SETA  &ZOPN+1                                     00600900
&ZOPL(&ZOPN)          SETC  ' '                                         00601000
&ZOPO(&ZOPN)          SETC  'MVC'                                       00601100
&ZOPV(&ZOPN)          SETC  '232(8,1),&ZCGPR'                           00601200
&ZOPD(&ZOPN)          SETC  '++ &ZXLOCKDATA XLOCKDATA'                  00601300
.*                                                                      00601400
.ZI15E                ANOP  ,                                           00601500
.*-------------------------------------------------------------------   00601600
.***AI.L07 XMODE AL1                                                    00601700
&ZW                   SETC  ''                                          00601800
.*-------------------------------------------------------------------   00601900
.***AI.L15 XMODE "SYNCEXIT" AL1                                         00602000
         AIF   ('&XMODE' NE 'SYNCEXIT').ZI17A                           00602100
&ZW                   SETC  '0'                                         00602200
.ZI17A                ANOP  ,                                           00602300
.*-------------------------------------------------------------------   00602400
.***AI.L15 XMODE "NORESPONSE" AL1                                       00602500
         AIF   ('&XMODE' NE 'NORESPONSE').ZI18A                         00602600
&ZW                   SETC  '1'                                         00602700
.ZI18A                ANOP  ,                                           00602800
.*-------------------------------------------------------------------   00602900
.***AI.L15 XMODE "SYNCSUSPEND" AL1                                      00603000
         AIF   ('&XMODE' NE 'SYNCSUSPEND').ZI19A                        00603100
&ZW                   SETC  '2'                                         00603200
.ZI19A                ANOP  ,                                           00603300
.*-------------------------------------------------------------------   00603400
.***AI.L15 XMODE "SYNCFAIL" AL1                                         00603500
         AIF   ('&XMODE' NE 'SYNCFAIL').ZI20A                           00603600
&ZW                   SETC  '3'                                         00603700
.ZI20A                ANOP  ,                                           00603800
.*-------------------------------------------------------------------   00603900
.***AI.L17 XMODE AL1                                                    00604000
                      AIF   ('&ZW' EQ '0').ZI20B                        00604100
                      AIF   ('&ZW' EQ '').ZI20B                         00604200
.*                                                                      00604300
&ZOPN                 SETA  &ZOPN+1                                     00604400
&ZOPL(&ZOPN)          SETC  ' '                                         00604500
&ZOPO(&ZOPN)          SETC  'MVI'                                       00604600
&ZOPV(&ZOPN)          SETC  '240(1),&ZW'                                00604700
&ZOPD(&ZOPN)          SETC  '++ &ZXMODE XMODE'                          00604800
.ZI20B                ANOP  ,                                           00604900
.*-------------------------------------------------------------------   00605000
.***AI.L05 XRDATA BL1                                                   00605100
&ZW                   SETC  ''                                          00605200
&ZCLNG                SETC  ''             RESET BIT ON FLAG            00605300
.*-------------------------------------------------------------------   00605400
.***AI.L08 XRDATA "UNCHANGED"                                           00605500
.***      BL1'1XXXXXXX'                                                 00605600
         AIF   ('&XRDATA' NE 'UNCHANGED').ZI23A                         00605700
&ZW                   SETC  '&ZW.1'                                     00605800
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00605900
                      AGO   .ZI23C                                      00606000
.*                                                                      00606100
.ZI23A                ANOP  ,                                           00606200
&ZW                   SETC  '&ZW.0'                                     00606300
.ZI23C                ANOP  ,                                           00606400
.*-------------------------------------------------------------------   00606500
.***AI.L08 XRDATA "NORDATA"                                             00606600
.***      BL1'X1XXXXXX'                                                 00606700
         AIF   ('&XRDATA' NE 'NORDATA').ZI24A                           00606800
&ZW                   SETC  '&ZW.1'                                     00606900
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00607000
                      AGO   .ZI24C                                      00607100
.*                                                                      00607200
.ZI24A                ANOP  ,                                           00607300
&ZW                   SETC  '&ZW.0'                                     00607400
.ZI24C                ANOP  ,                                           00607500
.*-------------------------------------------------------------------   00607600
.***AI.L08 XRDATA "DELETE"                                              00607700
.***      BL1'XX1XXXXX'                                                 00607800
         AIF   ('&XRDATA' NE 'DELETE').ZI25A                            00607900
&ZW                   SETC  '&ZW.1'                                     00608000
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00608100
                      AGO   .ZI25C                                      00608200
.*                                                                      00608300
.ZI25A                ANOP  ,                                           00608400
&ZW                   SETC  '&ZW.0'                                     00608500
.ZI25C                ANOP  ,                                           00608600
.*-------------------------------------------------------------------   00608700
.***AI.L08 XRDATA "WRITE"                                               00608800
.***      BL1'XXX1XXXX'                                                 00608900
         AIF   ('&XRDATA' NE 'WRITE').ZI26A                             00609000
&ZW                   SETC  '&ZW.1'                                     00609100
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00609200
                      AGO   .ZI26C                                      00609300
.*                                                                      00609400
.ZI26A                ANOP  ,                                           00609500
&ZW                   SETC  '&ZW.0'                                     00609600
.ZI26C                ANOP  ,                                           00609700
.*-------------------------------------------------------------------   00609800
.***AI.L08 XRDATA "REACQUIRE"                                           00609900
.***      BL1'XXXX1XXX'                                                 00610000
         AIF   ('&XRDATA' NE 'REACQUIRE').ZI27A                         00610100
&ZW                   SETC  '&ZW.1'                                     00610200
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00610300
                      AGO   .ZI27C                                      00610400
.*                                                                      00610500
.ZI27A                ANOP  ,                                           00610600
&ZW                   SETC  '&ZW.0'                                     00610700
.ZI27C                ANOP  ,                                           00610800
.*-------------------------------------------------------------------   00610900
.***AI.L08 XRDATA "KEEP"                                                00611000
.***      BL1'XXXXX1XX'                                                 00611100
         AIF   ('&XRDATA' NE 'KEEP').ZI28A                              00611200
&ZW                   SETC  '&ZW.1'                                     00611300
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00611400
                      AGO   .ZI28C                                      00611500
.*                                                                      00611600
.ZI28A                ANOP  ,                                           00611700
&ZW                   SETC  '&ZW.0'                                     00611800
.ZI28C                ANOP  ,                                           00611900
.*-------------------------------------------------------------------   00612000
.***AI.L08 XRDATA "YES"                                                 00612100
.***      BL1'XXXXXX1X'                                                 00612200
         AIF   ('&XUPDATERDATA' NE 'YES').ZI29A                         00612300
&ZW                   SETC  '&ZW.1'                                     00612400
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00612500
                      AGO   .ZI29C                                      00612600
.*                                                                      00612700
.ZI29A                ANOP  ,                                           00612800
&ZW                   SETC  '&ZW.0'                                     00612900
.ZI29C                ANOP  ,                                           00613000
.*-------------------------------------------------------------------   00613100
.***AI.L08 XRDATA "NO"                                                  00613200
.***      BL1'XXXXXXX1'                                                 00613300
         AIF   ('&XUPDATERDATA' NE 'NO').ZI30A                          00613400
&ZW                   SETC  '&ZW.1'                                     00613500
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00613600
                      AGO   .ZI30C                                      00613700
.*                                                                      00613800
.ZI30A                ANOP  ,                                           00613900
&ZW                   SETC  '&ZW.0'                                     00614000
.ZI30C                ANOP  ,                                           00614100
.*-------------------------------------------------------------------   00614200
.***AI.L11 XRDATA BL1                                                   00614300
                      AIF   ('&ZCLNG' NE 'YES').ZI30E  ALL ZERO BITS    00614400
&ZOPN                 SETA  &ZOPN+1                                     00614500
&ZOPL(&ZOPN)          SETC  ' '                                         00614600
&ZOPO(&ZOPN)          SETC  'OI'                                        00614700
&ZOPV(&ZOPN)          SETC  '242(1),B''&ZW'''                           00614800
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              00614900
.ZI30E                ANOP  ,                                           00615000
.*-------------------------------------------------------------------   00615100
.***AI.L18  XCONID XL1                                                  00615200
         AIF   ('&XCONID' NE 'NO_CONID').ZI31                           00615300
&ZXCONID              SETC  ''             RESET INPUT/OUTPUT           00615400
.ZI31                 ANOP  ,                                           00615500
.*-------------------------------------------------------------------   00615600
.***AI.L25  XCONID XL1                                                  00615700
                      AIF   ('&ZXCONID' EQ '').ZI31E                    00615800
                      AIF   ('&ZXCONID' EQ 'OUTPUT').ZI31E              00615900
&ZCGPR                SETC  '&XCONID'                                   00616000
.*                                                                      00616100
                      AIF   ('&XCONID'(1,1) NE '(').ZI31B               00616200
&ZCGPR   SETC  '0('.'&XCONID'(2,K'&XCONID-2).')'                        00616300
                      AGO   .ZI31D                                      00616400
.ZI31B                ANOP  ,                                           00616500
.*                                                                      00616600
&ZC                   SETC  '&XCONID'(1,1)                              00616700
                      AIF   (T'&ZC NE 'N').ZI31D                        00616800
&ZC                   SETC  '&XCONID'                                   00616900
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI31D               00617000
&ZCGPR                SETC  '=AL1(&XCONID)'                             00617100
.*                                                                      00617200
.ZI31D                ANOP  ,                                           00617300
.*                                                                      00617400
&ZOPN                 SETA  &ZOPN+1                                     00617500
&ZOPL(&ZOPN)          SETC  ' '                                         00617600
&ZOPO(&ZOPN)          SETC  'MVC'                                       00617700
&ZOPV(&ZOPN)          SETC  '243(1,1),&ZCGPR'                           00617800
&ZOPD(&ZOPN)          SETC  '++ &ZXCONID XCONID'                        00617900
.*                                                                      00618000
.ZI31E                ANOP  ,                                           00618100
.*-------------------------------------------------------------------   00618200
.***AI.L18  XRNAMELEN F                                                 00618300
         AIF   ('&XRNAMELEN' NE 'NO_RNAMELEN').ZI34                     00618400
&ZXRNAMELEN           SETC  ''             RESET INPUT/OUTPUT           00618500
.ZI34                 ANOP  ,                                           00618600
.*-------------------------------------------------------------------   00618700
.***AI.L25  XRNAMELEN F                                                 00618800
                      AIF   ('&ZXRNAMELEN' EQ '').ZI34E                 00618900
                      AIF   ('&ZXRNAMELEN' EQ 'OUTPUT').ZI34E           00619000
&ZCGPR                SETC  '&XRNAMELEN'                                00619100
.*                                                                      00619200
                      AIF   ('&XRNAMELEN'(1,1) NE '(').ZI34B            00619300
&ZCGPR   SETC  '0('.'&XRNAMELEN'(2,K'&XRNAMELEN-2).')'                  00619400
                      AGO   .ZI34D                                      00619500
.ZI34B                ANOP  ,                                           00619600
.*                                                                      00619700
&ZC                   SETC  '&XRNAMELEN'(1,1)                           00619800
                      AIF   (T'&ZC NE 'N').ZI34D                        00619900
&ZC                   SETC  '&XRNAMELEN'                                00620000
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI34D               00620100
&ZCGPR                SETC  '=FL4''&XRNAMELEN'''                        00620200
.*                                                                      00620300
.ZI34D                ANOP  ,                                           00620400
.*                                                                      00620500
&ZOPN                 SETA  &ZOPN+1                                     00620600
&ZOPL(&ZOPN)          SETC  ' '                                         00620700
&ZOPO(&ZOPN)          SETC  'MVC'                                       00620800
&ZOPV(&ZOPN)          SETC  '252(4,1),&ZCGPR'                           00620900
&ZOPD(&ZOPN)          SETC  '++ &ZXRNAMELEN XRNAMELEN'                  00621000
.*                                                                      00621100
.ZI34E                ANOP  ,                                           00621200
.*-------------------------------------------------------------------   00621300
.***AI.L25  XSTATEVAL XL1                                               00621400
                      AIF   ('&ZXSTATEVAL' EQ '').ZI36E                 00621500
                      AIF   ('&ZXSTATEVAL' EQ 'OUTPUT').ZI36E           00621600
&ZCGPR                SETC  '&XSTATEVAL'                                00621700
.*                                                                      00621800
                      AIF   ('&XSTATEVAL'(1,1) NE '(').ZI36B            00621900
&ZCGPR   SETC  '0('.'&XSTATEVAL'(2,K'&XSTATEVAL-2).')'                  00622000
                      AGO   .ZI36D                                      00622100
.ZI36B                ANOP  ,                                           00622200
.*                                                                      00622300
&ZC                   SETC  '&XSTATEVAL'(1,1)                           00622400
                      AIF   (T'&ZC NE 'N').ZI36D                        00622500
&ZC                   SETC  '&XSTATEVAL'                                00622600
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI36D               00622700
&ZCGPR                SETC  '=AL1(&XSTATEVAL)'                          00622800
.*                                                                      00622900
.ZI36D                ANOP  ,                                           00623000
.*                                                                      00623100
&ZOPN                 SETA  &ZOPN+1                                     00623200
&ZOPL(&ZOPN)          SETC  ' '                                         00623300
&ZOPO(&ZOPN)          SETC  'MVC'                                       00623400
&ZOPV(&ZOPN)          SETC  '88(1,1),&ZCGPR'                            00623500
&ZOPD(&ZOPN)          SETC  '++ &ZXSTATEVAL XSTATEVAL'                  00623600
.*                                                                      00623700
.ZI36E                ANOP  ,                                           00623800
.*-------------------------------------------------------------------   00623900
.***AI.L25  XMODEVAL XL1                                                00624000
                      AIF   ('&ZXMODEVAL' EQ '').ZI38E                  00624100
                      AIF   ('&ZXMODEVAL' EQ 'OUTPUT').ZI38E            00624200
&ZCGPR                SETC  '&XMODEVAL'                                 00624300
.*                                                                      00624400
                      AIF   ('&XMODEVAL'(1,1) NE '(').ZI38B             00624500
&ZCGPR   SETC  '0('.'&XMODEVAL'(2,K'&XMODEVAL-2).')'                    00624600
                      AGO   .ZI38D                                      00624700
.ZI38B                ANOP  ,                                           00624800
.*                                                                      00624900
&ZC                   SETC  '&XMODEVAL'(1,1)                            00625000
                      AIF   (T'&ZC NE 'N').ZI38D                        00625100
&ZC                   SETC  '&XMODEVAL'                                 00625200
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI38D               00625300
&ZCGPR                SETC  '=AL1(&XMODEVAL)'                           00625400
.*                                                                      00625500
.ZI38D                ANOP  ,                                           00625600
.*                                                                      00625700
&ZOPN                 SETA  &ZOPN+1                                     00625800
&ZOPL(&ZOPN)          SETC  ' '                                         00625900
&ZOPO(&ZOPN)          SETC  'MVC'                                       00626000
&ZOPV(&ZOPN)          SETC  '240(1,1),&ZCGPR'                           00626100
&ZOPD(&ZOPN)          SETC  '++ &ZXMODEVAL XMODEVAL'                    00626200
.*                                                                      00626300
.ZI38E                ANOP  ,                                           00626400
.*-------------------------------------------------------------------   00626500
.***AI.L19  XREQBUFFER A                                                00626600
                      AIF   ('&ZXREQBUFFER' EQ '').ZI44H                00626700
&ZCLNG                SETC  '&XREQBUFFER'                               00626800
&ZCGPR                SETC  '14'                                        00626900
         AIF   ('&XREQBUFFER'(1,1) EQ '(').ZI44F  IN GPR                00627000
.*                                                                      00627100
&ZOPN                 SETA  &ZOPN+1                                     00627200
&ZOPL(&ZOPN)          SETC  ' '                                         00627300
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00627400
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00627500
&ZOPD(&ZOPN)          SETC  '++ &ZXREQBUFFER XREQBUFFER'                00627600
.*                                                                      00627700
                      AGO   .ZI44G                                      00627800
.*                                                                      00627900
.ZI44F                ANOP  ,                                           00628000
&ZCGPR   SETC  '&XREQBUFFER'(2,K'&XREQBUFFER-2)                         00628100
.*                                                                      00628200
.ZI44G                ANOP  ,                                           00628300
.*                                                                      00628400
&ZOPN                 SETA  &ZOPN+1                                     00628500
&ZOPL(&ZOPN)          SETC  ' '                                         00628600
&ZOPO(&ZOPN)          SETC  'ST'                                        00628700
&ZOPV(&ZOPN)          SETC  '&ZCGPR,20(,1)'                             00628800
&ZOPD(&ZOPN)          SETC  '++ &ZXREQBUFFER XREQBUFFER'                00628900
.*                                                                      00629000
.ZI44H                ANOP  ,                                           00629100
.*-------------------------------------------------------------------   00629200
.***AI.L23 ALET XREQBUFFER F                                            00629300
         AIF   ('&ZXREQBUFFER' EQ '').ZI45G                             00629400
         AIF   ('&SYSASCE' EQ 'P').ZI45G   SYSSTATE PRIMARY             00629500
&ZCLNG                SETC  '&XREQBUFFER'                               00629600
         AIF   ('&XREQBUFFER'(1,1) EQ '(').ZI45E  IN AR                 00629700
.*                                                                      00629800
&ZCGPR                SETC  '14'                                        00629900
                      AGO   .ZI45F                                      00630000
.*                                                                      00630100
.ZI45E                ANOP  ,                                           00630200
&ZCGPR   SETC  '&XREQBUFFER'(2,K'&XREQBUFFER-2)                         00630300
.*                                                                      00630400
.ZI45F                ANOP  ,                                           00630500
.*                                                                      00630600
&ZOPN                 SETA  &ZOPN+1                                     00630700
&ZOPL(&ZOPN)          SETC  ' '                                         00630800
&ZOPO(&ZOPN)          SETC  'STAM'                                      00630900
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCGPR,24(1)'                       00631000
&ZOPD(&ZOPN)          SETC  '++ &ZXREQBUFFER XREQBUFFER'                00631100
.*                                                                      00631200
.ZI45G                ANOP  ,                                           00631300
.*-------------------------------------------------------------------   00631400
.***AI.L25  XREQNUM XL2                                                 00631500
                      AIF   ('&ZXREQNUM' EQ '').ZI46E                   00631600
                      AIF   ('&ZXREQNUM' EQ 'OUTPUT').ZI46E             00631700
&ZCGPR                SETC  '&XREQNUM'                                  00631800
.*                                                                      00631900
                      AIF   ('&XREQNUM'(1,1) NE '(').ZI46B              00632000
&ZCGPR   SETC  '0('.'&XREQNUM'(2,K'&XREQNUM-2).')'                      00632100
                      AGO   .ZI46D                                      00632200
.ZI46B                ANOP  ,                                           00632300
.*                                                                      00632400
&ZC                   SETC  '&XREQNUM'(1,1)                             00632500
                      AIF   (T'&ZC NE 'N').ZI46D                        00632600
&ZC                   SETC  '&XREQNUM'                                  00632700
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI46D               00632800
&ZCGPR                SETC  '=FL2''&XREQNUM'''                          00632900
.*                                                                      00633000
.ZI46D                ANOP  ,                                           00633100
.*                                                                      00633200
&ZOPN                 SETA  &ZOPN+1                                     00633300
&ZOPL(&ZOPN)          SETC  ' '                                         00633400
&ZOPO(&ZOPN)          SETC  'MVC'                                       00633500
&ZOPV(&ZOPN)          SETC  '28(2,1),&ZCGPR'                            00633600
&ZOPD(&ZOPN)          SETC  '++ &ZXREQNUM XREQNUM'                      00633700
.*                                                                      00633800
.ZI46E                ANOP  ,                                           00633900
.*-------------------------------------------------------------------   00634000
&ZOPN1                SETA &ZOPN                                        00634100
.*******************************************************************    00634200
.***  PROCESS IXLLOCK OUTPUT PARAMETERS                                 00634300
.*******************************************************************    00634400
                      ACTR  10000                                       00634500
.*------------------------------------------------------------------    00634600
.***AO.L01 XUDATAVAL CL64                                               00634700
        AIF   ('&XUDATAVAL' NE 'ALL_ZEROES').ZO11                       00634800
&ZXUDATAVAL           SETC  ''             RESET OUTPUT/INOUT           00634900
.ZO11                 ANOP  ,                                           00635000
.*------------------------------------------------------------------    00635100
.***AO.L02 XUDATAVAL CL64                                               00635200
         AIF   ('&XUDATAVAL' NE 'ALL_ZEROES').ZO11D  CK DEF             00635300
         AIF   ('&ZXUDATAVAL' NE 'OUTPUT').ZO11C  CK DEF                00635400
.ZO11D                ANOP  ,                                           00635500
         AIF   ('&ZXUDATAVAL' EQ 'OUTPUT').ZO11A  OUTPUT                00635600
         AIF   ('&ZXUDATAVAL' NE 'INOUT').ZO11C  INOUT                  00635700
.ZO11A    AIF   ('&XUDATAVAL'(1,1) NE '(').ZO11B  ADDR IN GPR           00635800
&ZCGPR   SETC  '&XUDATAVAL'(2,K'&XUDATAVAL-2)                           00635900
&ZOPN                 SETA  &ZOPN+1                                     00636000
&ZOPL(&ZOPN)          SETC  ' '                                         00636100
&ZOPO(&ZOPN)          SETC  'MVC'                                       00636200
&ZOPV(&ZOPN)          SETC  '0(64,&ZCGPR),89(1)'                        00636300
&ZOPD(&ZOPN)          SETC  '++ XUDATAVAL CL64'                         00636400
                      AGO   .ZO11C                                      00636500
.*                                                                      00636600
.ZO11B                ANOP  ,                                           00636700
&ZAWRK   SETA  K'&XUDATAVAL                                             00636800
         AIF   ('&XUDATAVAL'(&ZAWRK,1) NE ')').ZO11G                    00636900
&ZN      SETA  2                                                        00637000
.ZO11H    ANOP                                                          00637100
         AIF   (&ZN GE &ZAWRK).ZO11G                                    00637200
         AIF   ('&XUDATAVAL'(&ZN,1) NE '(').ZO11I                       00637300
&ZC      SETC  '&XUDATAVAL'(1,&ZN).'64'.','                             00637400
&ZC      SETC  '&ZC'.'&XUDATAVAL'(&ZN+1,&ZAWRK-&ZN).',89(1)'            00637500
         AGO   .ZO11J                                                   00637600
.ZO11I    ANOP                                                          00637700
&ZN      SETA  &ZN+1                                                    00637800
         AGO   .ZO11H                                                   00637900
.ZO11G    ANOP                                                          00638000
&ZC      SETC  '&XUDATAVAL.(64),89(1)'                                  00638100
.ZO11J    ANOP                                                          00638200
&ZOPN                 SETA  &ZOPN+1                                     00638300
&ZOPL(&ZOPN)          SETC  ' '                                         00638400
&ZOPO(&ZOPN)          SETC  'MVC'                                       00638500
&ZOPV(&ZOPN)          SETC  '&ZC'                                       00638600
&ZOPD(&ZOPN)          SETC  '++ XUDATAVAL CL64'                         00638700
.ZO11C                ANOP  ,                                           00638800
.*------------------------------------------------------------------    00638900
.***AO.L02 XRDATAVAL CL64                                               00639000
         AIF   ('&ZXRDATAVAL' EQ 'OUTPUT').ZO13A  OUTPUT                00639100
         AIF   ('&ZXRDATAVAL' NE 'INOUT').ZO13C  INOUT                  00639200
.ZO13A    AIF   ('&XRDATAVAL'(1,1) NE '(').ZO13B  ADDR IN GPR           00639300
&ZCGPR   SETC  '&XRDATAVAL'(2,K'&XRDATAVAL-2)                           00639400
&ZOPN                 SETA  &ZOPN+1                                     00639500
&ZOPL(&ZOPN)          SETC  ' '                                         00639600
&ZOPO(&ZOPN)          SETC  'MVC'                                       00639700
&ZOPV(&ZOPN)          SETC  '0(64,&ZCGPR),156(1)'                       00639800
&ZOPD(&ZOPN)          SETC  '++ XRDATAVAL CL64'                         00639900
                      AGO   .ZO13C                                      00640000
.*                                                                      00640100
.ZO13B                ANOP  ,                                           00640200
&ZAWRK   SETA  K'&XRDATAVAL                                             00640300
         AIF   ('&XRDATAVAL'(&ZAWRK,1) NE ')').ZO13G                    00640400
&ZN      SETA  2                                                        00640500
.ZO13H    ANOP                                                          00640600
         AIF   (&ZN GE &ZAWRK).ZO13G                                    00640700
         AIF   ('&XRDATAVAL'(&ZN,1) NE '(').ZO13I                       00640800
&ZC      SETC  '&XRDATAVAL'(1,&ZN).'64'.','                             00640900
&ZC      SETC  '&ZC'.'&XRDATAVAL'(&ZN+1,&ZAWRK-&ZN).',156(1)'           00641000
         AGO   .ZO13J                                                   00641100
.ZO13I    ANOP                                                          00641200
&ZN      SETA  &ZN+1                                                    00641300
         AGO   .ZO13H                                                   00641400
.ZO13G    ANOP                                                          00641500
&ZC      SETC  '&XRDATAVAL.(64),156(1)'                                 00641600
.ZO13J    ANOP                                                          00641700
&ZOPN                 SETA  &ZOPN+1                                     00641800
&ZOPL(&ZOPN)          SETC  ' '                                         00641900
&ZOPO(&ZOPN)          SETC  'MVC'                                       00642000
&ZOPV(&ZOPN)          SETC  '&ZC'                                       00642100
&ZOPD(&ZOPN)          SETC  '++ XRDATAVAL CL64'                         00642200
.ZO13C                ANOP  ,                                           00642300
.*------------------------------------------------------------------    00642400
.***AO.L02 XENTRYID CL12                                                00642500
         AIF   ('&ZXENTRYID' EQ 'OUTPUT').ZO14A  OUTPUT                 00642600
         AIF   ('&ZXENTRYID' NE 'INOUT').ZO14C  INOUT                   00642700
.ZO14A    AIF   ('&XENTRYID'(1,1) NE '(').ZO14B  ADDR IN GPR            00642800
&ZCGPR   SETC  '&XENTRYID'(2,K'&XENTRYID-2)                             00642900
&ZOPN                 SETA  &ZOPN+1                                     00643000
&ZOPL(&ZOPN)          SETC  ' '                                         00643100
&ZOPO(&ZOPN)          SETC  'MVC'                                       00643200
&ZOPV(&ZOPN)          SETC  '0(12,&ZCGPR),220(1)'                       00643300
&ZOPD(&ZOPN)          SETC  '++ XENTRYID CL12'                          00643400
                      AGO   .ZO14C                                      00643500
.*                                                                      00643600
.ZO14B                ANOP  ,                                           00643700
&ZAWRK   SETA  K'&XENTRYID                                              00643800
         AIF   ('&XENTRYID'(&ZAWRK,1) NE ')').ZO14G                     00643900
&ZN      SETA  2                                                        00644000
.ZO14H    ANOP                                                          00644100
         AIF   (&ZN GE &ZAWRK).ZO14G                                    00644200
         AIF   ('&XENTRYID'(&ZN,1) NE '(').ZO14I                        00644300
&ZC      SETC  '&XENTRYID'(1,&ZN).'12'.','                              00644400
&ZC      SETC  '&ZC'.'&XENTRYID'(&ZN+1,&ZAWRK-&ZN).',220(1)'            00644500
         AGO   .ZO14J                                                   00644600
.ZO14I    ANOP                                                          00644700
&ZN      SETA  &ZN+1                                                    00644800
         AGO   .ZO14H                                                   00644900
.ZO14G    ANOP                                                          00645000
&ZC      SETC  '&XENTRYID.(12),220(1)'                                  00645100
.ZO14J    ANOP                                                          00645200
&ZOPN                 SETA  &ZOPN+1                                     00645300
&ZOPL(&ZOPN)          SETC  ' '                                         00645400
&ZOPO(&ZOPN)          SETC  'MVC'                                       00645500
&ZOPV(&ZOPN)          SETC  '&ZC'                                       00645600
&ZOPD(&ZOPN)          SETC  '++ XENTRYID CL12'                          00645700
.ZO14C                ANOP  ,                                           00645800
.*------------------------------------------------------------------    00645900
.***AO.L02 XENTRYCOUNT F                                                00646000
         AIF   ('&ZXENTRYCOUNT' EQ 'OUTPUT').ZO32A  OUTPUT              00646100
         AIF   ('&ZXENTRYCOUNT' NE 'INOUT').ZO32C  INOUT                00646200
.ZO32A    AIF   ('&XENTRYCOUNT'(1,1) NE '(').ZO32B  ADDR IN GPR         00646300
&ZCGPR   SETC  '&XENTRYCOUNT'(2,K'&XENTRYCOUNT-2)                       00646400
&ZOPN                 SETA  &ZOPN+1                                     00646500
&ZOPL(&ZOPN)          SETC  ' '                                         00646600
&ZOPO(&ZOPN)          SETC  'MVC'                                       00646700
&ZOPV(&ZOPN)          SETC  '0(4,&ZCGPR),244(1)'                        00646800
&ZOPD(&ZOPN)          SETC  '++ XENTRYCOUNT F'                          00646900
                      AGO   .ZO32C                                      00647000
.*                                                                      00647100
.ZO32B                ANOP  ,                                           00647200
&ZAWRK   SETA  K'&XENTRYCOUNT                                           00647300
         AIF   ('&XENTRYCOUNT'(&ZAWRK,1) NE ')').ZO32G                  00647400
&ZN      SETA  2                                                        00647500
.ZO32H    ANOP                                                          00647600
         AIF   (&ZN GE &ZAWRK).ZO32G                                    00647700
         AIF   ('&XENTRYCOUNT'(&ZN,1) NE '(').ZO32I                     00647800
&ZC      SETC  '&XENTRYCOUNT'(1,&ZN).'4'.','                            00647900
&ZC      SETC  '&ZC'.'&XENTRYCOUNT'(&ZN+1,&ZAWRK-&ZN).',244(1)'         00648000
         AGO   .ZO32J                                                   00648100
.ZO32I    ANOP                                                          00648200
&ZN      SETA  &ZN+1                                                    00648300
         AGO   .ZO32H                                                   00648400
.ZO32G    ANOP                                                          00648500
&ZC      SETC  '&XENTRYCOUNT.(4),244(1)'                                00648600
.ZO32J    ANOP                                                          00648700
&ZOPN                 SETA  &ZOPN+1                                     00648800
&ZOPL(&ZOPN)          SETC  ' '                                         00648900
&ZOPO(&ZOPN)          SETC  'MVC'                                       00649000
&ZOPV(&ZOPN)          SETC  '&ZC'                                       00649100
&ZOPD(&ZOPN)          SETC  '++ XENTRYCOUNT F'                          00649200
.ZO32C                ANOP  ,                                           00649300
.*------------------------------------------------------------------    00649400
.***AO.L02 XSTATEVAL FL1                                                00649500
         AIF   ('&ZXSTATEVAL' EQ 'OUTPUT').ZO36A  OUTPUT                00649600
         AIF   ('&ZXSTATEVAL' NE 'INOUT').ZO36C  INOUT                  00649700
.ZO36A    AIF   ('&XSTATEVAL'(1,1) NE '(').ZO36B  ADDR IN GPR           00649800
&ZCGPR   SETC  '&XSTATEVAL'(2,K'&XSTATEVAL-2)                           00649900
&ZOPN                 SETA  &ZOPN+1                                     00650000
&ZOPL(&ZOPN)          SETC  ' '                                         00650100
&ZOPO(&ZOPN)          SETC  'MVC'                                       00650200
&ZOPV(&ZOPN)          SETC  '0(1,&ZCGPR),88(1)'                         00650300
&ZOPD(&ZOPN)          SETC  '++ XSTATEVAL FL1'                          00650400
                      AGO   .ZO36C                                      00650500
.*                                                                      00650600
.ZO36B                ANOP  ,                                           00650700
&ZAWRK   SETA  K'&XSTATEVAL                                             00650800
         AIF   ('&XSTATEVAL'(&ZAWRK,1) NE ')').ZO36G                    00650900
&ZN      SETA  2                                                        00651000
.ZO36H    ANOP                                                          00651100
         AIF   (&ZN GE &ZAWRK).ZO36G                                    00651200
         AIF   ('&XSTATEVAL'(&ZN,1) NE '(').ZO36I                       00651300
&ZC      SETC  '&XSTATEVAL'(1,&ZN).'1'.','                              00651400
&ZC      SETC  '&ZC'.'&XSTATEVAL'(&ZN+1,&ZAWRK-&ZN).',88(1)'            00651500
         AGO   .ZO36J                                                   00651600
.ZO36I    ANOP                                                          00651700
&ZN      SETA  &ZN+1                                                    00651800
         AGO   .ZO36H                                                   00651900
.ZO36G    ANOP                                                          00652000
&ZC      SETC  '&XSTATEVAL.(1),88(1)'                                   00652100
.ZO36J    ANOP                                                          00652200
&ZOPN                 SETA  &ZOPN+1                                     00652300
&ZOPL(&ZOPN)          SETC  ' '                                         00652400
&ZOPO(&ZOPN)          SETC  'MVC'                                       00652500
&ZOPV(&ZOPN)          SETC  '&ZC'                                       00652600
&ZOPD(&ZOPN)          SETC  '++ XSTATEVAL FL1'                          00652700
.ZO36C                ANOP  ,                                           00652800
.*------------------------------------------------------------------    00652900
.***AO.L02 XREQPROC FL2                                                 00653000
         AIF   ('&ZXREQPROC' EQ 'OUTPUT').ZO47A  OUTPUT                 00653100
         AIF   ('&ZXREQPROC' NE 'INOUT').ZO47C  INOUT                   00653200
.ZO47A    AIF   ('&XREQPROC'(1,1) NE '(').ZO47B  ADDR IN GPR            00653300
&ZCGPR   SETC  '&XREQPROC'(2,K'&XREQPROC-2)                             00653400
&ZOPN                 SETA  &ZOPN+1                                     00653500
&ZOPL(&ZOPN)          SETC  ' '                                         00653600
&ZOPO(&ZOPN)          SETC  'MVC'                                       00653700
&ZOPV(&ZOPN)          SETC  '0(2,&ZCGPR),30(1)'                         00653800
&ZOPD(&ZOPN)          SETC  '++ XREQPROC FL2'                           00653900
                      AGO   .ZO47C                                      00654000
.*                                                                      00654100
.ZO47B                ANOP  ,                                           00654200
&ZAWRK   SETA  K'&XREQPROC                                              00654300
         AIF   ('&XREQPROC'(&ZAWRK,1) NE ')').ZO47G                     00654400
&ZN      SETA  2                                                        00654500
.ZO47H    ANOP                                                          00654600
         AIF   (&ZN GE &ZAWRK).ZO47G                                    00654700
         AIF   ('&XREQPROC'(&ZN,1) NE '(').ZO47I                        00654800
&ZC      SETC  '&XREQPROC'(1,&ZN).'2'.','                               00654900
&ZC      SETC  '&ZC'.'&XREQPROC'(&ZN+1,&ZAWRK-&ZN).',30(1)'             00655000
         AGO   .ZO47J                                                   00655100
.ZO47I    ANOP                                                          00655200
&ZN      SETA  &ZN+1                                                    00655300
         AGO   .ZO47H                                                   00655400
.ZO47G    ANOP                                                          00655500
&ZC      SETC  '&XREQPROC.(2),30(1)'                                    00655600
.ZO47J    ANOP                                                          00655700
&ZOPN                 SETA  &ZOPN+1                                     00655800
&ZOPL(&ZOPN)          SETC  ' '                                         00655900
&ZOPO(&ZOPN)          SETC  'MVC'                                       00656000
&ZOPV(&ZOPN)          SETC  '&ZC'                                       00656100
&ZOPD(&ZOPN)          SETC  '++ XREQPROC FL2'                           00656200
.ZO47C                ANOP  ,                                           00656300
.*******************************************************************    00656400
.***AO.X02  RETURN CODE PROCESSING                                      00656500
.*******************************************************************    00656600
                      AIF   (N'&RETCODE LE 0).ZMRETX                    00656700
                      AIF   ('&XRETCODE'(1,1) EQ '(').ZMRET2            00656800
                      AIF   ('&XRETCODE' EQ 'GPR15').ZMRETX             00656900
                      AIF   ('&XRETCODE' EQ 'REG15').ZMRETX             00657000
                      AIF   ('&XRETCODE' EQ 'R15').ZMRETX               00657100
                      AIF   ('&XRETCODE' EQ '15').ZMRETX                00657200
&ZOPN                 SETA  &ZOPN+1                                     00657300
&ZOPL(&ZOPN)          SETC  ' '                                         00657400
&ZOPO(&ZOPN)          SETC  'ST'                                        00657500
&ZOPV(&ZOPN)          SETC  '15,&XRETCODE'                              00657600
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00657700
                      AGO   .ZMRETX                                     00657800
.*                                                                      00657900
.ZMRET2               ANOP  ,                                           00658000
&ZCGPR                SETC  '&XRETCODE'(2,K'&XRETCODE-2)                00658100
                      AIF   ('&ZCGPR' EQ 'GPR15').ZMRETX                00658200
                      AIF   ('&ZCGPR' EQ 'REG15').ZMRETX                00658300
                      AIF   ('&ZCGPR' EQ 'R15').ZMRETX                  00658400
                      AIF   ('&ZCGPR' EQ '15').ZMRETX                   00658500
&ZOPN                 SETA  &ZOPN+1                                     00658600
&ZOPL(&ZOPN)          SETC  ' '                                         00658700
&ZOPO(&ZOPN)          SETC  'LR'                                        00658800
&ZOPV(&ZOPN)          SETC  '&ZCGPR,15'                                 00658900
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00659000
.ZMRETX               ANOP  ,                                           00659100
.*******************************************************************    00659200
.***AO.X03  REASON CODE PROCESSING                                      00659300
.*******************************************************************    00659400
                      AIF   (N'&RSNCODE LE 0).ZMRSNX                    00659500
                      AIF   ('&XRSNCODE'(1,1) EQ '(').ZMRSN2            00659600
                      AIF   ('&XRSNCODE' EQ 'GPR0').ZMRSNX              00659700
                      AIF   ('&XRSNCODE' EQ 'GPR00').ZMRSNX             00659800
                      AIF   ('&XRSNCODE' EQ 'REG0').ZMRSNX              00659900
                      AIF   ('&XRSNCODE' EQ 'REG00').ZMRSNX             00660000
                      AIF   ('&XRSNCODE' EQ 'R0').ZMRSNX                00660100
                      AIF   ('&XRSNCODE' EQ '0').ZMRSNX                 00660200
                      AIF   ('&XRSNCODE' EQ '00').ZMRSNX                00660300
&ZOPN                 SETA  &ZOPN+1                                     00660400
&ZOPL(&ZOPN)          SETC  ' '                                         00660500
&ZOPO(&ZOPN)          SETC  'ST'                                        00660600
&ZOPV(&ZOPN)          SETC  '0,&XRSNCODE'                               00660700
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00660800
                      AGO   .ZMRSNX                                     00660900
.*                                                                      00661000
.ZMRSN2               ANOP  ,                                           00661100
&ZCGPR                SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                00661200
                      AIF   ('&ZCGPR' EQ 'GPR0').ZMRSNX                 00661300
                      AIF   ('&ZCGPR' EQ 'GPR00').ZMRSNX                00661400
                      AIF   ('&ZCGPR' EQ 'REG0').ZMRSNX                 00661500
                      AIF   ('&ZCGPR' EQ 'REG00').ZMRSNX                00661600
                      AIF   ('&ZCGPR' EQ 'R0').ZMRSNX                   00661700
                      AIF   ('&ZCGPR' EQ '0').ZMRSNX                    00661800
                      AIF   ('&ZCGPR' EQ '00').ZMRSNX                   00661900
&ZOPN                 SETA  &ZOPN+1                                     00662000
&ZOPL(&ZOPN)          SETC  ' '                                         00662100
&ZOPO(&ZOPN)          SETC  'LR'                                        00662200
&ZOPV(&ZOPN)          SETC  '&ZCGPR,0'                                  00662300
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00662400
.ZMRSNX               ANOP  ,                                           00662500
.*******************************************************************    00662600
.***AO.X04  LABEL FOR MF=L PROCESSING                                   00662700
.*******************************************************************    00662800
.ZMFLX                ANOP  ,              MF=L PROCESSING              00662900
.*******************************************************************    00663000
.***AO.X05  FORMAT GENERATED INSTRUCTIONS                               00663100
.*******************************************************************    00663200
                      ACTR  10000                                       00663300
.*                                                                      00663400
                      LCLA  &ZLC           COLUMN POSITION              00663500
                      LCLA  &ZOPX          LIST TABLE INDEX             00663600
                      LCLC  &ZLL           LABEL                        00663700
                      LCLC  &ZLOP          OPERATION                    00663800
                      LCLC  &ZLV           VALUE                        00663900
                      LCLC  &ZLD           DESCRIPTION                  00664000
.*                                                                      00664100
&ZOPX                 SETA  1                                           00664200
.ZL2                  AIF   (&ZOPX GT &ZOPN1).ZLX  B IF DONE            00664300
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00664400
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00664500
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00664600
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00664700
                      AIF   (K'&ZLD LE 0).ZL5                           00664800
&ZLC                  SETA  35             COMMENT COLUMN               00664900
                      AIF   ('&ZLD'(1,1) NE '*').ZL3                    00665000
&ZLC                  SETA  33             COMMMENT COLUMN              00665100
.ZL3                  AIF   (K'&ZLV GE &ZLC-16-1).ZL4                   00665200
&ZLV                  SETC  '&ZLV'.' '                                  00665300
                      AGO   .ZL3                                        00665400
.*                                                                      00665500
.ZL4                  ANOP  ,                                           00665600
&ZLV                  SETC  '&ZLV'.' '                                  00665700
.ZL5                  ANOP  ,                                           00665800
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00665900
.*                                                                      00666000
&ZLL     &ZLOP &ZLV                                                     00666100
.*                                                                      00666200
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00666300
                      AGO   .ZL2           CONTINUE LOOPING             00666400
.*                                                                      00666500
.ZLX                  ANOP  ,                                           00666600
                      AIF   ('&XMF' EQ 'L').ZLINKX  MF=L                00666700
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00666800
         AIF   ('&XREQUEST' EQ 'PROCESSMULT').DONERLEN            @P5A  00666900
         AIF   ('&XRNAMELEN' EQ 'NO_RNAMELEN').NORLEN1            @P5A  00667000
         LA    14,&XRNAME              ++ GET RNAME ADDRESS       @P5A  00667100
         ST    14,20(,1)                                          @P5A  00667200
         AGO   .DONERLEN                                          @P5A  00667300
.NORLEN1 ANOP                                                     @P5A  00667400
         MVC   20(64,1),&XRNAME        ++ COPY RNAME INLINE       @P5A  00667500
.DONERLEN      ANOP                                               @P5A  00667600
.**------------------------------------------------------------------** 00667700
.**  FILL IN THE EVENT IN THE PARAMETER LIST.  THE EVENT WILL        ** 00667800
.**  BE USED BY THE MAINLINE MODULES (IE. COPIED TO THE RNA AND      ** 00667900
.**  PASSED TO THE GLOBAL MANAGER).                                  ** 00668000
.**                                                                  ** 00668100
.**------------------------------------------------------------------** 00668200
.*                                                                      00668300
         AIF   ('&XREQUEST' NE 'OBTAIN').ALTEREVENT                     00668400
         MVI   241(1),1                OBTAIN EVENT                     00668500
         AGO   .DONEEVENT                                               00668600
.ALTEREVENT    ANOP                                                     00668700
         AIF   ('&XREQUEST' NE 'ALTER').RELEASEEVENT                    00668800
         MVI   241(1),2                ALTER EVENT                      00668900
         AGO   .DONEEVENT                                               00669000
.RELEASEEVENT  ANOP                                                     00669100
         AIF   ('&XREQUEST' NE 'RELEASE').DONEEVENT              @O2A   00669200
         MVI   241(1),3                RELEASE EVENT                    00669300
.DONEEVENT     ANOP                                                     00669400
.**------------------------------------------------------------------** 00669500
.**  GENERATE THE LINKAGE TO THE IXLLOCK ROUTINES                    ** 00669600
.**                                                                  ** 00669700
.**  THE XRAT CONTROL BLOCK (MAPPED BY IXLYXRAT) CONTAINS THE        ** 00669800
.**  ADDRESSES OF ALL THE XES BRANCH ENTERED EXTERNAL SERVICES.      ** 00669900
.**                                                                  ** 00670000
.**------------------------------------------------------------------** 00670100
.*                                                                      00670200
.**  NOTE THAT IN THE FOLLOWING INSTRUCTIONS THE INDEX REGISTER IS   ** 00670300
.**  USED INSTEAD OF THE BASE REGISTER SO THAT ALET TRANSLATION IS   ** 00670400
.**  NOT PERFORMED AND THE CODE WORKS THE SAME IN BOTH PRIMARY AND   ** 00670500
.**  AR MODE.                                                        ** 00670600
.*                                                                      00670700
         L     15,16(0,0)              GET CVT ADDRESS             @D3C 00670800
         L     15,140(15,0)            GET ECVT ADDRESS            @D3C 00670900
         L     15,256(15,0)            GET XRAT ADDRESS            @D3C 00671000
         AIF   ('&XREQUEST' NE 'OBTAIN').BR5                            00671100
         AIF   ('&XRDATA' EQ 'NORDATA').BR1                             00671200
         L     15,20(15,0)             OBTAIN LOCK RDATA ROUTINE   @D3C 00671300
         AGO   .BR3                                                     00671400
.BR1     ANOP                                                           00671500
         L     15,16(15,0)             OBTAIN LOCK ROUTINE         @D3C 00671600
         AGO   .BR3                                                     00671700
.BR5     ANOP                                                           00671800
         AIF   ('&XREQUEST' NE 'RELEASE').BR6                           00671900
         L     15,32(15,0)             RELEASE LOCK ROUTINE        @D3C 00672000
         AGO   .BR3                                                     00672100
.BR6     ANOP                                                           00672200
         AIF   ('&XREQUEST' NE 'ALTER').BRA                        @O2A 00672300
         AIF   ('&XRDATA' EQ 'UNCHANGED').BR8                           00672400
         L     15,8(15,0)              ALTER LOCK RDATA ROUTINE    @D3C 00672500
         AGO   .BR3                                                     00672600
.BR8     ANOP                                                           00672700
         L     15,12(15,0)             ALTER ROUTINE               @D3C 00672800
         AGO   .BR3                                                @O2A 00672900
.BRA     ANOP                                                      @L2A 00673000
         L     15,40(15,0)             BATCH UNLOCK ROUTINE        @O2A 00673100
         AGO   .BR3                                                @O2A 00673200
.BR3     ANOP                                                           00673300
         AIF   ('&SYSASCE' EQ 'AR').BR4 CHECK FOR AR MODE               00673400
         LAE   1,0(1,0)                MAKE SURE AR1  IS CLEARED        00673500
         LAE   13,0(13,0)              MAKE SURE AR13 IS CLEARED   @O1A 00673600
         SAC   512                     SWITCH TO AR MODE           @L2A 00673700
.BR4     ANOP                                                           00673800
         BALR  14,15                   BRANCH TO ROUTINE           @D3C 00673900
         AIF   ('&SYSASCE' EQ 'AR').BR9 CHECK FOR AR MODE          @L2A 00674000
         SAC   0                       SWITCH BACK TO PRIMARY      @L2A 00674100
.BR9     ANOP                                                      @L2A 00674200
.*******************************************************************    00674300
.**    *******   ******   ****  ****    ****      **     *****  ****    00674400
.**  *  *****  *  *****  *  **  ***  **  ***  ******  **  ****  ****    00674500
.**  **  ***       ****  **  *  ***  *******      **  **  ****  ****    00674600
.**  *  ***  ****   ***  ***    ***  **   **  ******    ************    00674700
.**   ****  *******  **  ****   ****   *****      **  ***  ***  ****    00674800
.*******************************************************************    00674900
.**** DANGER HIGH VOLTAGE CODE BELOW *******************************    00675000
.**** DO NOT TOUCH UNLESS WEARING **********************************    00675100
.**** PROPER SAFETY EQUIPMENT **************************************    00675200
.*******************************************************************    00675300
.*  THIS CODE HAND GENERATES THE CODE NEEDED AT RUN TIME TO CHECK  *    00675400
.*  THE ACTUAL MODEVAL TO DETERMINE IF ANY VALUES NEED TO BE       *    00675500
.*  COPIED BACK FROM THE PARMLIST TO THE CALLERS VARIABLES.        *    00675600
.*  SEE THE "GOVERNMENT CHEESE" COMMENT ABOVE FOR MORE DETAILS.    *    00675700
.*******************************************************************    00675800
.*******  NEED TO GENERATE CODE IF MODEVAL WAS SPECIFIED  ******        00675900
.*******  AND ALSO A VARIABLE INPUT WAS SPECIFIED         ******        00676000
         AIF   ('&XMODE' NE 'VALUE').NOVALUE                            00676100
         AIF   ('&ZXSTATEVAL'     EQ ''             AND                *00676200
                 '&ZXUDATAVAL'    EQ ''             AND                *00676300
                 '&ZXRDATAVAL'    EQ '').NOCOPY                         00676400
.*******  CHECK TO SEE IF THIS REQUEST WAS SYSNCSUSPEND   ******        00676500
&ZOPN                 SETA  &ZOPN+1                                     00676600
&ZOPL(&ZOPN)          SETC  ' '                                         00676700
&ZOPO(&ZOPN)          SETC  'CLI'                                       00676800
&ZOPV(&ZOPN)          SETC  '240(1),2'                                  00676900
&ZOPD(&ZOPN)          SETC  '++ SYNCSUSPEND REQUEST?'                   00677000
&ZOPN                 SETA  &ZOPN+1                                     00677100
&ZOPL(&ZOPN)          SETC  ' '                                         00677200
&ZOPO(&ZOPN)          SETC  'BNE'                                       00677300
&ZOPV(&ZOPN)          SETC  'NOTSS&SYSNDX'                              00677400
&ZOPD(&ZOPN)          SETC  '++ NO'                                     00677500
.*******  CHECK TO SEE IF WE NEED TO GENERATE CODE TO COPY BACK ******  00677600
.*******  THE UDATAVAL                                          ******  00677700
         AIF   ('&ZXUDATAVAL' EQ '').UDATADONE NOT USED                 00677800
.***                                                                    00677900
         AIF   ('&XUDATAVAL'(1,1) NE '(').UDATABR0  ADDR IN GPR         00678000
&ZCGPR   SETC  '&XUDATAVAL'(2,K'&XUDATAVAL-2)                           00678100
&ZOPN                 SETA  &ZOPN+1                                     00678200
&ZOPL(&ZOPN)          SETC  ' '                                         00678300
&ZOPO(&ZOPN)          SETC  'MVC'                                       00678400
&ZOPV(&ZOPN)          SETC  '0(64,&ZCGPR),89(1)'                        00678500
&ZOPD(&ZOPN)          SETC  '++ XUDATAVAL CL64'                         00678600
                      AGO   .UDATADONE                                  00678700
.*                                                                      00678800
.UDATABR0           ANOP  ,                                             00678900
&ZAWRK   SETA  K'&XUDATAVAL                                             00679000
         AIF   ('&XUDATAVAL'(&ZAWRK,1) NE ')').UDATABR1                 00679100
&ZN      SETA  2                                                        00679200
.UDATABR4 ANOP                                                          00679300
         AIF   (&ZN GE &ZAWRK).UDATABR1                                 00679400
         AIF   ('&XUDATAVAL'(&ZN,1) NE '(').UDATABR2                    00679500
&ZC      SETC  '&XUDATAVAL'(1,&ZN).'64'.','                             00679600
&ZC      SETC  '&ZC'.'&XUDATAVAL'(&ZN+1,&ZAWRK-&ZN).',89(1)'            00679700
         AGO   .UDATABR3                                                00679800
.UDATABR2 ANOP                                                          00679900
&ZN      SETA  &ZN+1                                                    00680000
         AGO   .UDATABR4                                                00680100
.UDATABR1 ANOP                                                          00680200
&ZC      SETC  '&XUDATAVAL.(64),89(1)'                                  00680300
.UDATABR3 ANOP                                                          00680400
&ZOPN                 SETA  &ZOPN+1                                     00680500
&ZOPL(&ZOPN)          SETC  ' '                                         00680600
&ZOPO(&ZOPN)          SETC  'MVC'                                       00680700
&ZOPV(&ZOPN)          SETC  '&ZC'                                       00680800
&ZOPD(&ZOPN)          SETC  '++ XUDATAVAL CL64'                         00680900
.UDATADONE ANOP                                                         00681000
.*******  CHECK TO SEE IF WE NEED TO GENERATE CODE TO COPY BACK ******  00681100
.*******  THE RDATAVAL                                          ******  00681200
         AIF   ('&ZXRDATAVAL' EQ '').RDATADONE NOT USED                 00681300
         AIF   ('&XRDATAVAL'(1,1) NE '(').RDATABR0 ADDR IN GPR          00681400
&ZCGPR   SETC  '&XRDATAVAL'(2,K'&XRDATAVAL-2)                           00681500
&ZOPN                 SETA  &ZOPN+1                                     00681600
&ZOPL(&ZOPN)          SETC  ' '                                         00681700
&ZOPO(&ZOPN)          SETC  'MVC'                                       00681800
&ZOPV(&ZOPN)          SETC  '0(64,&ZCGPR),156(1)'                       00681900
&ZOPD(&ZOPN)          SETC  '++ XRDATAVAL CL64'                         00682000
                      AGO   .RDATADONE                                  00682100
.*                                                                      00682200
.RDATABR0             ANOP  ,                                           00682300
&ZAWRK   SETA  K'&XRDATAVAL                                             00682400
         AIF   ('&XRDATAVAL'(&ZAWRK,1) NE ')').RDATABR1                 00682500
&ZN      SETA  2                                                        00682600
.RDATABR4 ANOP                                                          00682700
         AIF   (&ZN GE &ZAWRK).RDATABR1                                 00682800
         AIF   ('&XRDATAVAL'(&ZN,1) NE '(').RDATABR2                    00682900
&ZC      SETC  '&XRDATAVAL'(1,&ZN).'64'.','                             00683000
&ZC      SETC  '&ZC'.'&XRDATAVAL'(&ZN+1,&ZAWRK-&ZN).',156(1)'           00683100
         AGO   .RDATABR3                                                00683200
.RDATABR2 ANOP                                                          00683300
&ZN      SETA  &ZN+1                                                    00683400
         AGO   .RDATABR4                                                00683500
.RDATABR1 ANOP                                                          00683600
&ZC      SETC  '&XRDATAVAL.(64),156(1)'                                 00683700
.RDATABR3 ANOP                                                          00683800
&ZOPN                 SETA  &ZOPN+1                                     00683900
&ZOPL(&ZOPN)          SETC  ' '                                         00684000
&ZOPO(&ZOPN)          SETC  'MVC'                                       00684100
&ZOPV(&ZOPN)          SETC  '&ZC'                                       00684200
&ZOPD(&ZOPN)          SETC  '++ XRDATAVAL CL64'                         00684300
.RDATADONE ANOP                                                         00684400
.*******  CHECK TO SEE IF WE NEED TO GENERATE CODE TO COPY BACK ******  00684500
.*******  THE STATEVAL                                          ******  00684600
         AIF   ('&ZXSTATEVAL' EQ '').STATEDONE NOT USED                 00684700
         AIF   ('&XSTATEVAL'(1,1) NE '(').STATEBR0  ADDR IN GPR         00684800
&ZCGPR   SETC  '&XSTATEVAL'(2,K'&XSTATEVAL-2)                           00684900
&ZOPN                 SETA  &ZOPN+1                                     00685000
&ZOPL(&ZOPN)          SETC  ' '                                         00685100
&ZOPO(&ZOPN)          SETC  'MVC'                                       00685200
&ZOPV(&ZOPN)          SETC  '0(1,&ZCGPR),88(1)'                         00685300
&ZOPD(&ZOPN)          SETC  '++ XSTATEVAL FL1'                          00685400
                      AGO   .STATEDONE                                  00685500
.*                                                                      00685600
.STATEBR0             ANOP  ,                                           00685700
&ZAWRK   SETA  K'&XSTATEVAL                                             00685800
         AIF   ('&XSTATEVAL'(&ZAWRK,1) NE ')').STATEBR1                 00685900
&ZN      SETA  2                                                        00686000
.STATEBR2 ANOP                                                          00686100
         AIF   (&ZN GE &ZAWRK).STATEBR1                                 00686200
         AIF   ('&XSTATEVAL'(&ZN,1) NE '(').STATEBR3                    00686300
&ZC      SETC  '&XSTATEVAL'(1,&ZN).'1'.','                              00686400
&ZC      SETC  '&ZC'.'&XSTATEVAL'(&ZN+1,&ZAWRK-&ZN).',88(1)'            00686500
         AGO   .STATEBR4                                                00686600
.STATEBR3 ANOP                                                          00686700
&ZN      SETA  &ZN+1                                                    00686800
         AGO   .STATEBR2                                                00686900
.STATEBR1 ANOP                                                          00687000
&ZC      SETC  '&XSTATEVAL.(1),88(1)'                                   00687100
.STATEBR4 ANOP                                                          00687200
&ZOPN                 SETA  &ZOPN+1                                     00687300
&ZOPL(&ZOPN)          SETC  ' '                                         00687400
&ZOPO(&ZOPN)          SETC  'MVC'                                       00687500
&ZOPV(&ZOPN)          SETC  '&ZC'                                       00687600
&ZOPD(&ZOPN)          SETC  '++ XSTATEVAL FL1'                          00687700
.STATEDONE ANOP                                                         00687800
.**********                                                             00687900
&ZOPN                 SETA  &ZOPN+1                                     00688000
&ZOPL(&ZOPN)          SETC  'NOTSS&SYSNDX'                              00688100
&ZOPO(&ZOPN)          SETC  'DS'                                        00688200
&ZOPV(&ZOPN)          SETC  '0H'                                        00688300
&ZOPD(&ZOPN)          SETC  '++ '                                       00688400
.NOCOPY   ANOP                                                          00688500
.NOVALUE  ANOP                                                          00688600
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00688700
.ZLINKX               ANOP  ,                                           00688800
.*******************************************************************    00688900
.***AP.X01  FORMAT GENERATED CODE                                       00689000
.ZL21                 AIF   (&ZOPX GT &ZOPN).ZLX1  B IF DONE            00689100
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00689200
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00689300
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00689400
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00689500
                      AIF   (K'&ZLD LE 0).ZL51                          00689600
&ZLC                  SETA  35             COMMENT COLUMN               00689700
                      AIF   ('&ZLD'(1,1) NE '*').ZL31                   00689800
&ZLC                  SETA  33             COMMENT COLUMN               00689900
.ZL31                 AIF   (K'&ZLV GE &ZLC-16-1).ZL41                  00690000
&ZLV                  SETC  '&ZLV'.' '                                  00690100
                      AGO   .ZL31                                       00690200
.*                                                                      00690300
.ZL41                 ANOP  ,                                           00690400
&ZLV                  SETC  '&ZLV'.' '                                  00690500
.ZL51                 ANOP  ,                                           00690600
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00690700
.*                                                                      00690800
&ZLL     &ZLOP &ZLV                                                     00690900
.*                                                                      00691000
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00691100
                      AGO   .ZL21          CONTINUE LOOPING             00691200
.*                                                                      00691300
.ZLX1                 ANOP  ,                                           00691400
.*******************************************************************    00691500
.***AP.X02  END OF IXLLOCK MACRO                                        00691600
&ZIXLLOCK             SETC  'YES'          SET IXLLOCK USED             00691700
         POP   PRINT                                                    00691800
*                                            IXLLOCK-2                  00691900
         SPACE 1                                                        00692000
.ZLX2                 ANOP  ,                                           00692100
         MEND                                                           00692200
**********************************************************************/ 00692300
*/*PB.OC01 INVOKE MACRO---------------------------------------------*/  00692400
*%IXLLOCK: MACRO KEYS(CONTOKEN,REQUEST,RNAME,RNAMELEN,HASHVAL,          00692500
*                 LOCKDATA,STATE,STATEVAL,UDATAVAL,RDATA,RDATAVAL,      00692600
*                 ENTRYID,ENTRYCOUNT,CONID,UPDATERDATA,MODE,MODEVAL,    00692700
*                 REQBUFFER,REQNUM,REQPROC,RETCODE,RSNCODE,PLISTVER,    00692800
*                 MF);                                                  00692900
*  ANS('?'||MACLABEL||' '||'IXLLOCKP '||MACLIST||                       00693000
*         ' '||MACKEYS||';') COL(MACLMAR);                              00693100
*%END IXLLOCK;                                                          00693200
