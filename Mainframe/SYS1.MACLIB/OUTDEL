*/********************************************************************/ 00001000
*/*                                                                  */ 00002000
*/* MODULE NAME = IEFDODEL                                           */ 00003000
*/*                                                                  */ 00004000
*/* DESCRIPTIVE NAME = OUTPUT descriptor delete macro                */ 00005000
*/*                                                                  */ 00006000
*/* COPYRIGHT = 5685-001                                             */ 00007000
*/*             THIS MACRO IS "RESTRICTED MATERIALS OF IBM"          */ 00008000
*/*             (C) COPYRIGHT IBM CORP. 1988                         */ 00009000
*/*             LICENSED MATERIALS - PROPERTY OF IBM             @D2C*/ 00010000
*/*                                                                  */ 00013000
*/* STATUS = HBB3310                                             @D2C*/ 00014000
*/*                                                                  */ 00015000
*/* FUNCTION =  The OUTDEL macro is used to declare the parameter    */ 00016000
*/*             list for and invoke Dynamic OUTPUT to delete an      */ 00017000
*/*             OUTPUT descriptor.                                   */ 00018000
*/*                                                                  */ 00019000
*/* OPERATION =                                                      */ 00020000
*/*                                                                  */ 00021000
*/*  1. Initializes the 'errors found' flag to off.                  */ 00022000
*/*                                                                  */ 00023000
*/*  2. Verifies the macro form parameter.                           */ 00024000
*/*                                                                  */ 00025000
*/*  3. If the macro form parameter is valid, does the               */ 00026000
*/*     following:                                                   */ 00027000
*/*                                                                  */ 00028000
*/*     A. If the list macro form is specified, verifies the         */ 00029000
*/*        macro parameter list.  If it is valid, generates          */ 00030000
*/*        the declare for storage.                                  */ 00031000
*/*                                                                  */ 00032000
*/*        The declare for storage consists of 4 bytes to            */ 00033000
*/*        be used as the parameter list pointer, followed           */ 00034000
*/*        by the number of bytes equal to the length of             */ 00035000
*/*        the IEFDOCNL parameter list.                              */ 00036000
*/*                                                                  */ 00037000
*/*     B. Otherwise, the execute macro form is specified.           */ 00038000
*/*        Verifies the execute form parameter list.  If it is       */ 00039000
*/*        valid, generates the code to fill in the Dynamic OUTPUT   */ 00040000
*/*        (SVC 109 function code 33) parameter list and invoke      */ 00041000
*/*        Dynamic OUTPUT. Also, generates code to return output     */ 00042000
*/*        from the SVC to the callers fields as specified           */ 00043000
*/*        by the macro parameters.                                  */ 00044000
*/*                                                                  */ 00045000
*/*  4. Returns from the macro with a return code of 0 for valid     */ 00046000
*/*     invocations of this macro and 12 for invalid invocations.    */ 00047000
*/*                                                                  */ 00048000
*/*     If any errors were found in verifying the parameters in      */ 00049000
*/*     the above processing, issues an error message and            */ 00050000
*/*     continues verification of the remaining parameters, if       */ 00051000
*/*     any. No code is generated (except PLS DO and END             */ 00052000
*/*     statements for the execute form) if errors are detected      */ 00053000
*/*     in the macro parameter list.                                 */ 00054000
*/*                                                                  */ 00055000
*/*  NOTES =                                                         */ 00056000
*/*                                                                  */ 00057000
*/*    DEPENDENCIES =                                                */ 00058000
*/*                                                                  */ 00059000
*/*      The parameter list declared by the list form must be on a   */ 00060000
*/*      full word boundary.                                         */ 00061000
*/*                                                                  */ 00062000
*/*      If the IEFDOCNL parameter list changes, this macro          */ 00063000
*/*      may have to be updated to use the new parameter list.       */ 00064000
*/*                                                                  */ 00065000
*/*      If the IEFDOCNL parameter list length changes the macro     */ 00066000
*/*      variable ILIST_DCL_LENGTH will need to be changed           */ 00067000
*/*      to be initialized to the proper length for the list form    */ 00068000
*/*      declare.                                                    */ 00069000
*/*                                                                  */ 00070000
*/*      PLAS programs using this macro must also use the EPILOG     */ 00071000
*/*      macro.                                                      */ 00072000
*/*                                                                  */ 00073000
*/*      Logic for the PLAS and BAL macros should maintain           */ 00074000
*/*      as much similarity as possible in order to ease future      */ 00075000
*/*      development efforts.                                        */ 00076000
*/*                                                                  */ 00077000
*/*                                                                  */ 00078000
*/*   REGISTER CONVENTIONS =                                         */ 00079000
*/*                                                                  */ 00080000
*/*   The SVC alters registers 0, 1 and 15 on return to the caller.  */ 00081000
*/*                                                                  */ 00082000
*/*   PLAS Version:                                                  */ 00083000
*/*                                                                  */ 00084000
*/*      Registers 0, 1 and 15 are uncoditionally restricted by      */ 00085000
*/*      this macro around the SVC invocation since the SVC          */ 00086000
*/*      always alters these registers.                              */ 00087000
*/*                                                                  */ 00088000
*/*   BAL Version:                                                   */ 00089000
*/*                                                                  */ 00090000
*/*      Registers 0, 1 and 15 are used by the code generated by     */ 00091000
*/*      this macro.                                                 */ 00092000
*/*                                                                  */ 00093000
*/*                                                                  */ 00094000
*/*   PATCH-LABEL = N/A                                              */ 00095000
*/*                                                                  */ 00096000
*/*   MODULE TYPE = MACRO                                            */ 00097000
*/*                                                                  */ 00098000
*/*   PROCESSOR =                                                    */ 00099000
*/*                                                                  */ 00100000
*/*     PLS Version: PL/S 3H                                         */ 00101000
*/*                                                                  */ 00102000
*/*     BAL Version: ASSEMBLER H                                     */ 00103000
*/*                                                                  */ 00104000
*/*   MODULE SIZE = N/A                                              */ 00105000
*/*                                                                  */ 00106000
*/*   ATTRIBUTES = NONE                                              */ 00107000
*/*                                                                  */ 00108000
*/*   ENTRY POINT = N/A                                              */ 00109000
*/*                                                                  */ 00110000
*/*   PURPOSE = SEE FUNCTION                                         */ 00111000
*/*                                                                  */ 00112000
*/*   LINKAGE = N/A                                                  */ 00113000
*/*                                                                  */ 00114000
*/*                                                                  */ 00115000
*/*                                                                  */ 00116000
*/*   METHOD OF INVOCATION=                                          */ 00117000
*/*                                                                  */ 00118000
*/*                                                                  */ 00119000
*/*                                                                  */ 00120000
*/*                                                                  */ 00121000
*/*   _______________________________________________________        */ 00122000
*/*                   PLS VERSION                                    */ 00123000
*/*   _______________________________________________________        */ 00124000
*/*                                                                  */ 00125000
*/*                                                                  */ 00126000
*/*                                                                  */ 00127000
*/*   PLS Macro Interface Syntax, List Form                          */ 00128000
*/*                                                                  */ 00129000
*/*                                                                  */ 00130000
*/*   ? label:  OUTDEL                                               */ 00131000
*/*                                                                  */ 00132000
*/*   MF              (L,parmlist name,attr)                         */ 00133000
*/*                                                                  */ 00134000
*/*                                                                  */ 00135000
*/*                                                                  */ 00136000
*/*                                                                  */ 00137000
*/*   _______________________________________________________        */ 00138000
*/*   _______________________________________________________        */ 00139000
*/*                                                                  */ 00140000
*/*                                                                  */ 00141000
*/*                                                                  */ 00142000
*/*   PLS Macro Interface Syntax, Execute Form                       */ 00143000
*/*                                                                  */ 00144000
*/*                                                                  */ 00145000
*/*   ? label:  OUTDEL                                               */ 00146000
*/*                                                                  */ 00147000
*/*   NAME            (descriptor name)                              */ 00148000
*/*                                                                  */ 00149000
*/*   RETURN_CODE     (return code)                                  */ 00150000
*/*   REASON_CODE     (reason code)                                  */ 00151000
*/*                                                                  */ 00152000
*/*   MF              (E,parmlist name)                              */ 00153000
*/*                                                                  */ 00154000
*/*                                                                  */ 00155000
*/*                                                                  */ 00156000
*/*                                                                  */ 00157000
*/*                                                                  */ 00158000
*/* ________________________________________________________         */ 00159000
*/*                 BAL VERSION                                      */ 00160000
*/* ________________________________________________________         */ 00161000
*/*                                                                  */ 00162000
*/*                                                                  */ 00163000
*/*                                                                  */ 00164000
*/* BAL Macro Interface Syntax, List form                            */ 00165000
*/*                                                                  */ 00166000
*/*                                                                  */ 00167000
*/*      name            name: symbol. Begin name in column 1.       */ 00168000
*/*  b                   one or more blanks                          */ 00169000
*/*  OUTDEL                                                          */ 00170000
*/*  b                   one or more blanks                          */ 00171000
*/*                                                                  */ 00172000
*/*  MF=L                                                            */ 00173000
*/*                                                                  */ 00174000
*/*                                                                  */ 00175000
*/*                                                                  */ 00176000
*/* _____________________________________________________            */ 00177000
*/* _____________________________________________________            */ 00178000
*/*                                                                  */ 00179000
*/*                                                                  */ 00180000
*/*                                                                  */ 00181000
*/* BAL Macro Interface Syntax, Execute form                         */ 00182000
*/*                                                                  */ 00183000
*/*                                                                  */ 00184000
*/*      name            name: symbol. Begin name in column 1.       */ 00185000
*/*  b                   one or more blanks                          */ 00186000
*/*  OUTDEL                                                          */ 00187000
*/*  b                   one or more blanks                          */ 00188000
*/*                                                                  */ 00189000
*/*                                                                  */ 00190000
*/*  NAME=descriptor name addr         descriptor name addr:         */ 00191000
*/*                                    RX-type address, or           */ 00192000
*/*                                    register (2)-(12)             */ 00193000
*/*                                                                  */ 00194000
*/*  ,MF=(E,ctrl prog)                 ctrl addr: RX-type            */ 00195000
*/*                                    address, or register          */ 00196000
*/*                                    (2)-(12)                      */ 00197000
*/*                                                                  */ 00198000
*/*                                                                  */ 00199000
*/*                                                                  */ 00200000
*/*                                                                  */ 00201000
*/*  INPUT =                                                         */ 00202000
*/*                                                                  */ 00203000
*/*                                                                  */ 00204000
*/*                                                                  */ 00205000
*/*                                                                  */ 00206000
*/*  _______________________________________________________         */ 00207000
*/*                    PLS VERSION                                   */ 00208000
*/*  _______________________________________________________         */ 00209000
*/*                                                                  */ 00210000
*/*                                                                  */ 00211000
*/*                                                                  */ 00212000
*/*  The PLS LIST FORM parameters are explained as follows:          */ 00213000
*/*                                                                  */ 00214000
*/*                                                                  */ 00215000
*/*  MF(L,parmlist name,attr)                                        */ 00216000
*/*                                                                  */ 00217000
*/*  specifies the list form of the macro. 'parmlist name'           */ 00218000
*/*  specifies a valid PL/AS variable name. 'attr' specifies the     */ 00219000
*/*  attribute applied to the parameter list. The default is         */ 00220000
*/*  'BDY(WORD)'.  If 'attr' is specified, the caller must insure    */ 00221000
*/*  the declared field is full word aligned. If 'attr' is specified */ 00222000
*/*  as anything other than 'BASED', the caller is responsible for   */ 00223000
*/*  ensuring that the attributes are compatible with the            */ 00224000
*/*  generated source code from the execute form.  MF is a           */ 00225000
*/*  required parameter.  'L' and 'parm list name' are required      */ 00226000
*/*  arguments.  'attr' is optional.                                 */ 00227000
*/*                                                                  */ 00228000
*/*                                                                  */ 00229000
*/*                                                                  */ 00230000
*/*                                                                  */ 00231000
*/*                                                                  */ 00232000
*/*  ________________________________________________________        */ 00233000
*/*  ________________________________________________________        */ 00234000
*/*                                                                  */ 00235000
*/*                                                                  */ 00236000
*/*                                                                  */ 00237000
*/*                                                                  */ 00238000
*/*  The PLS EXECUTE FORM parameters are explained as follows:       */ 00239000
*/*                                                                  */ 00240000
*/*                                                                  */ 00241000
*/*  NAME(descriptor name)                                           */ 00242000
*/*                                                                  */ 00243000
*/*  'descriptor name' specifies the name of an 8 byte PL/AS         */ 00244000
*/*  variable containing the name of the output descriptor to be     */ 00245000
*/*  deleted. It is a required parameter.                            */ 00246000
*/*                                                                  */ 00247000
*/*                                                                  */ 00248000
*/*  RETURN_CODE(return code)                                        */ 00249000
*/*                                                                  */ 00250000
*/*  'return code' specifies a 4 byte PL/AS variable to be           */ 00251000
*/*  assigned the return code. It is an optional parameter.          */ 00252000
*/*                                                                  */ 00253000
*/*                                                                  */ 00254000
*/*  REASON_CODE(reason code)                                        */ 00255000
*/*                                                                  */ 00256000
*/*  'reason code' specifies a 4 byte PL/AS variable to be           */ 00257000
*/*  assigned the reason code. It is an optional parameter.          */ 00258000
*/*                                                                  */ 00259000
*/*                                                                  */ 00260000
*/*  MF(E,parmlist name)                                             */ 00261000
*/*                                                                  */ 00262000
*/*  specifies the execute form of the macro instruction.            */ 00263000
*/*  'parmlist name' specifies the name of the parameter list        */ 00264000
*/*  created by the LIST form of the OUTDEL macro. The parameter     */ 00265000
*/*  list must be aligned on a full word boundary.  MF is a          */ 00266000
*/*  required parameter. Both arguments are required.                */ 00267000
*/*                                                                  */ 00268000
*/*                                                                  */ 00269000
*/*                                                                  */ 00270000
*/*                                                                  */ 00271000
*/*                                                                  */ 00272000
*/*                                                                  */ 00273000
*/*  _________________________________________________________       */ 00274000
*/*                    BAL VERSION                                   */ 00275000
*/*                                                                  */ 00276000
*/*  _________________________________________________________       */ 00277000
*/*                                                                  */ 00278000
*/*                                                                  */ 00279000
*/*                                                                  */ 00280000
*/*                                                                  */ 00281000
*/*  The BAL List Form parameters are explained as follows:          */ 00282000
*/*                                                                  */ 00283000
*/*                                                                  */ 00284000
*/*  name                                                            */ 00285000
*/*                                                                  */ 00286000
*/*  specifies the symbolic name to be assocatiated with the         */ 00287000
*/*  storage declare generated by the list form.  The storage        */ 00288000
*/*  must be on a fullword boundary.                                 */ 00289000
*/*                                                                  */ 00290000
*/*                                                                  */ 00291000
*/*  MF=L                                                            */ 00292000
*/*                                                                  */ 00293000
*/*  specifies the list form of the macro.  It is a required         */ 00294000
*/*  parameter.                                                      */ 00295000
*/*                                                                  */ 00296000
*/*                                                                  */ 00297000
*/*                                                                  */ 00298000
*/*                                                                  */ 00299000
*/*                                                                  */ 00300000
*/* ____________________________________________________________     */ 00301000
*/* ____________________________________________________________     */ 00302000
*/*                                                                  */ 00303000
*/*                                                                  */ 00304000
*/*                                                                  */ 00305000
*/*  The BAL Execute Form parameters are explained as follows:       */ 00306000
*/*                                                                  */ 00307000
*/*                                                                  */ 00308000
*/*  NAME=descriptor name addr                                       */ 00309000
*/*                                                                  */ 00310000
*/*  'descriptor name addr' specifies the address of an 8            */ 00311000
*/*  character field containing the name of the OUTPUT descriptor    */ 00312000
*/*  to be deleted. It is a required parameter.                      */ 00313000
*/*                                                                  */ 00314000
*/*                                                                  */ 00315000
*/*  ,MF=(E,ctrl prog)                                               */ 00316000
*/*                                                                  */ 00317000
*/*  specifies the execute form of the macro instruction using a     */ 00318000
*/*  remote control-program parameter list. 'ctrl prog' is the       */ 00319000
*/*  name of the parameter list defined via the LIST form. It        */ 00320000
*/*  must be aligned on a full word boundary.  MF is a required      */ 00321000
*/*  parameter. Both arguments are required.                         */ 00322000
*/*                                                                  */ 00323000
*/*                                                                  */ 00324000
*/*                                                                  */ 00325000
*/* OUTPUT =                                                         */ 00326000
*/*                                                                  */ 00327000
*/*                                                                  */ 00328000
*/*      For valid invocations of the LIST form:                     */ 00329000
*/*        Generates a declare for the storage for the request       */ 00330000
*/*        table.  A character declare is used. It is put on a       */ 00331000
*/*        full word boundary by default.                            */ 00332000
*/*                                                                  */ 00333000
*/*      For valid invocations of the execute form:                  */ 00334000
*/*        Generates the assignment statements to fill in the        */ 00335000
*/*        LIST form parameter list for the Dynamic OUTPUT delete    */ 00336000
*/*        request. Generates the SVC for Dynamic OUTPUT.            */ 00337000
*/*        Generates assignment statements to return values          */ 00338000
*/*        from the SVC invocation to the callers specified          */ 00339000
*/*        fields, if any.                                           */ 00340000
*/*                                                                  */ 00341000
*/*                                                                  */ 00342000
*/*      PLS VERSION:                                                */ 00343000
*/*                                                                  */ 00344000
*/*      If invalid parameters are detected, only error messages     */ 00345000
*/*      will be generated (with the exception of DO and END         */ 00346000
*/*      statements for the execute form).                           */ 00347000
*/*                                                                  */ 00348000
*/*                                                                  */ 00349000
*/*      BAL VERSION:                                                */ 00350000
*/*                                                                  */ 00351000
*/*      If invalid parameters are detected, only MNOTES will be     */ 00352000
*/*      generated.                                                  */ 00353000
*/*                                                                  */ 00354000
*/*                                                                  */ 00355000
*/*                                                                  */ 00356000
*/*                                                                  */ 00357000
*/*   EXIT - NORMAL =                                                */ 00358000
*/*                                                                  */ 00359000
*/*     CONDITION = NO ERRORS DETECTED                               */ 00360000
*/*                                                                  */ 00361000
*/*     RETURN CODE = 0                                              */ 00362000
*/*                                                                  */ 00363000
*/*                                                                  */ 00364000
*/*                                                                  */ 00365000
*/*   EXIT - ERROR =                                                 */ 00366000
*/*                                                                  */ 00367000
*/*                                                                  */ 00368000
*/*     CONDITIONS =                                                 */ 00369000
*/*                                                                  */ 00370000
*/*        - ERRORS DETECTED IN INPUT PARAMETER LIST:                */ 00371000
*/*                                                                  */ 00372000
*/*          - A positional parameter is specified, but is not       */ 00373000
*/*            allowed.                                              */ 00374000
*/*                                                                  */ 00375000
*/*          - A keyword parameter contains an invalid value         */ 00376000
*/*                                                                  */ 00377000
*/*          - A required keyword parameter is not specified.        */ 00378000
*/*                                                                  */ 00379000
*/*          - A specified keyword parameter is incompatible with    */ 00380000
*/*            the specified macro form.                             */ 00381000
*/*                                                                  */ 00382000
*/*                                                                  */ 00383000
*/*                                                                  */ 00384000
*/*     OUTPUT =                                                     */ 00385000
*/*                                                                  */ 00386000
*/*                                                                  */ 00387000
*/*          - Error messages are issued in the macro source listing */ 00388000
*/*            and in the modified source text.                      */ 00389000
*/*                                                                  */ 00390000
*/*                                                                  */ 00391000
*/*     RETURN CODE = 12  severe error indicated since no source     */ 00392000
*/*                       code is generated if an error is detected  */ 00393000
*/*                                                                  */ 00394000
*/*   EXTERNAL REFERENCES =                                          */ 00395000
*/*                                                                  */ 00396000
*/*     ROUTINES = NONE                                              */ 00397000
*/*                                                                  */ 00398000
*/*     DATA-AREAS = - execute form uses LIST form declare           */ 00399000
*/*                  - execute form sets EPILOG external macro       */ 00400000
*/*                    variable EHAREGS in PLAS version              */ 00401000
*/*                                                                  */ 00402000
*/*     CONTROL-BLOCKS = NONE                                        */ 00403000
*/*                                                                  */ 00404000
*/*                                                                  */ 00405000
*/*   TABLES = NONE                                                  */ 00406000
*/*                                                                  */ 00407000
*/*   EXECUTABLE MACROS = NONE                                       */ 00408000
*/*                                                                  */ 00409000
*/*   SERIALIZATION = N/A                                            */ 00410000
*/*                                                                  */ 00411000
*/*                                                                  */ 00412000
*/*                                                                  */ 00413000
*/*   MESSAGES =                                                     */ 00414000
*/*                                                                  */ 00415000
*/*                                                                  */ 00416000
*/*   AHA010 OUTDEL ERROR:   POSITIONAL PARAMETERS ARE NOT           */ 00417000
*/*   ALLOWED.                                                       */ 00418000
*/*                                                                  */ 00419000
*/*   AHA020 OUTDEL ERROR:   KEYWORD PARAMETER <parm name>           */ 00420000
*/*   SPECIFIED INCORRECTLY.                                         */ 00421000
*/*                                                                  */ 00422000
*/*   AHA030 OUTDEL ERROR:   KEYWORD PARAMETER <parm name>           */ 00423000
*/*   MUST BE SPECIFIED.                                             */ 00424000
*/*                                                                  */ 00425000
*/*   AHA040 OUTDEL ERROR:   KEYWORD PARAMETER<S> <parm name(s)      */ 00426000
*/*   or description> SPECIFIED BUT, MUTUALLY EXCLUSIVE WITH         */ 00427000
*/*   THE <parm name> KEYWORD.                                       */ 00428000
*/*                                                                  */ 00429000
*/*   AHA050 OUTDEL ERROR:  PARAMETER LIST DECLARE NOT GENERATED     */ 00430000
*/*   DUE TO ERRORS FOUND IN THE LIST FORM INVOCATION<.|:  macro     */ 00431000
*/*   invocation>                                                    */ 00432000
*/*                                                                  */ 00433000
*/*                                                                  */ 00434000
*/*   ABEND CODES = N/A                                              */ 00435000
*/*                                                                  */ 00436000
*/*                                                                  */ 00437000
*/*   CHANGE ACTIVITY = P1,P2,D1,D2                              @D2C*/ 00438000
*/*                                                                  */ 00439000
*/* $P1= PC20283 JBB2223 870629 PDJY: Dynamic OUTPUT support         */ 00440000
*/* $P2= PC20411 JBB2223 871005 PDJY: Dynamic OUTPUT support     @P2A*/ 00441000
*/* $D1= DCR0063 JBB2223 880101 PDJY: Dynamic OUTPUT support     @D1A*/ 00441300
*/* $D2= DCR0318 HBB3310 880118 PDJY: Dynamic OUTPUT support     @D2A*/ 00441600
*/*                                                                  */ 00442000
*/********************************************************************/ 00443000
*/* A 000000-999999                                              @P1A*/ 00444000
*/* C Change operand of OR instruction from 4 bytes to 1 byte    @P2A*/ 00445000
*/*   to make both operands the same length.                     @P2A*/ 00446000
*/* D Removed dynamic output support from JBB2223                @D1A*/ 00446300
*/* A Added dynamic output support to HBB3310                    @D2A*/ 00446600
*@EJECT;                                                                00447000
*/********************************************************************/ 00448000
*/*                                                                  */ 00449000
*/* Definition of the macro invocation.                              */ 00450000
*/*                                                                  */ 00451000
*/********************************************************************/ 00452000
*                                                                       00453000
*%OUTDEL: MACRO KEYS( NAME,                                             00454000
*                     RETURN_CODE,  REASON_CODE,                        00455000
*                     MF                                                00456000
*                   );                                                  00457000
*                                                                       00458000
*                                                                       00459000
*                                                                       00460000
*/********************************************************************/ 00461000
*/*                                                                  */ 00462000
*/* Declaration of external macro variables.                         */ 00463000
*/*                                                                  */ 00464000
*/********************************************************************/ 00465000
*                                                                       00466000
*DCL                                                                    00467000
*  EHAREGS CHAR EXTERNAL;              /* Indicates to EPILOG which     00468000
*                                         registers to declare       */ 00469000
*                                                                       00470000
*                                                                       00471000
*/********************************************************************/ 00472000
*/*                                                                  */ 00473000
*/* Declaration of internal macro variables.                         */ 00474000
*/*                                                                  */ 00475000
*/********************************************************************/ 00476000
*                                                                       00477000
*DCL                                                                    00478000
*  IPARML_ERR_FOUND FIXED,             /* Parm list errors found        00479000
*                                         flag                       */ 00480000
*  IRETURN_CODE     FIXED,             /* Sets return code for macro */ 00481000
*  ILIST_DCL_LENGTH  CHAR,             /* Length of field declared by   00482000
*                                         the list form              */ 00483000
*  ICOMCOL          FIXED,             /* Will contain column number    00484000
*                                         to generate line comments  */ 00485000
*  IANS_TEXT1       CHAR,              /* Answer text to be             00486000
*                                         generated                  */ 00487000
*  IANS_TEXT2       CHAR,              /* Answer text to be             00488000
*                                         generated                  */ 00489000
*  IMSG010_TEXT1    CHAR,              /* Text constant for error       00490000
*                                         message 010                */ 00491000
*  IMSG020_TEXT1    CHAR,              /* Text constant for error       00492000
*                                         message 020                */ 00493000
*  IMSG020_TEXT2    CHAR,              /* Text constant for error       00494000
*                                         message 020                */ 00495000
*  IMSG030_TEXT1    CHAR,              /* Text constant for error       00496000
*                                         message 030                */ 00497000
*  IMSG030_TEXT2    CHAR,              /* Text constant for error       00498000
*                                         message 030                */ 00499000
*  IMSG040_TEXT1    CHAR,              /* Text constant for error       00500000
*                                         message 040                */ 00501000
*  IMSG040_TEXT2    CHAR,              /* Text constant for error       00502000
*                                         message 040                */ 00503000
*  IMSG050_TEXT1    CHAR;              /* Text constant for error       00504000
*                                         message 050                */ 00505000
*@EJECT;                                                                00506000
*/********************************************************************/ 00507000
*/*                                                                  */ 00508000
*/* Initialization of constants.                                     */ 00509000
*/*                                                                  */ 00510000
*/********************************************************************/ 00511000
*                                                                       00512000
*  ILIST_DCL_LENGTH = '36';            /* Length of list form declare   00513000
*                                         equals the length of the      00514000
*                                         IEFDOCNL parameter list       00515000
*                                         (36 bytes) plus the length    00516000
*                                         of the parameter list         00517000
*                                         pointer (4 bytes)          */ 00518000
*                                                                       00519000
*  ICOMCOL = 37;                       /* Column at which to generate   00520000
*                                         line commment              */ 00521000
*                                                                       00522000
*/********************************************************************/ 00523000
*/*                                                                  */ 00524000
*/* Initialization of error message text constants that are used     */ 00525000
*/* to build error messages for the detected invalid parameters.     */ 00526000
*/*                                                                  */ 00527000
*/********************************************************************/ 00528000
*                                                                       00529000
*/********************************************************************/ 00530000
*/* Text constants for error message 010.                            */ 00531000
*/********************************************************************/ 00532000
*                                                                       00533000
*IMSG010_TEXT1 =                                                        00534000
*  'AHA010 OUTDEL ERROR:  POSITIONAL PARAMETERS ARE NOT ALLOWED.';      00535000
*                                      /* Text for error message 010 */ 00536000
*                                                                       00537000
*                                                                       00538000
*/********************************************************************/ 00539000
*/* Text constants for error message 020.                            */ 00540000
*/********************************************************************/ 00541000
*                                                                       00542000
*IMSG020_TEXT1 =                                                        00543000
*  'AHA020 OUTDEL ERROR:  KEYWORD PARAMETER ';                          00544000
*                                      /* Text for first part of        00545000
*                                         error message 020          */ 00546000
*                                                                       00547000
*IMSG020_TEXT2 = ' SPECIFIED INCORRECTLY.'; /* Text for second          00548000
*                                         part of error message 020  */ 00549000
*                                                                       00550000
*                                                                       00551000
*/********************************************************************/ 00552000
*/* Text constants for error message 030.                            */ 00553000
*/********************************************************************/ 00554000
*                                                                       00555000
*IMSG030_TEXT1 = 'AHA030 OUTDEL ERROR:  KEYWORD PARAMETER ';            00556000
*                                      /* Text for first part of        00557000
*                                         error message 030          */ 00558000
*                                                                       00559000
*IMSG030_TEXT2 = ' MUST BE SPECIFIED.'; /* Text for second part of      00560000
*                                         error message 030          */ 00561000
*                                                                       00562000
*                                                                       00563000
*/********************************************************************/ 00564000
*/* Text constants for error message 040.                            */ 00565000
*/********************************************************************/ 00566000
*                                                                       00567000
*IMSG040_TEXT1 = 'AHA040 OUTDEL ERROR:  KEYWORD PARAMETER';             00568000
*                                      /* Text for first part of        00569000
*                                         error message 040          */ 00570000
*                                                                       00571000
*IMSG040_TEXT2 = ' SPECIFIED, BUT MUTUALLY EXCLUSIVE WITH ';            00572000
*                                      /* Text for second part of       00573000
*                                         error message 040          */ 00574000
*                                                                       00575000
*                                                                       00576000
*/********************************************************************/ 00577000
*/* Text constants for error message 050.                            */ 00578000
*/********************************************************************/ 00579000
*                                                                       00580000
*IMSG050_TEXT1 =                                                        00581000
*   'AHA050 OUTDEL ERROR:  PARAMETER LIST DECLARE NOT GENERATED ' ||    00582000
*   'DUE TO ERRORS FOUND IN THE LIST FORM INVOCATION';                  00583000
*                                      /* Text for error message 050 */ 00584000
*                                                                       00585000
*                                                                       00586000
*@EJECT;                                                                00587000
*/********************************************************************/ 00588000
*/*                                                                  */ 00589000
*/*               START OF MAINLINE PROCESSING                       */ 00590000
*/*                                                                  */ 00591000
*/********************************************************************/ 00592000
*                                                                       00593000
*                                                                       00594000
*/********************************************************************/ 00595000
*/* Initializes the parameter list error flag to indicate            */ 00596000
*/* errors have not yet been found in the macro parameter list.      */ 00597000
*/********************************************************************/ 00598000
*                                                                       00599000
*IPARML_ERR_FOUND = 0;                 /* Set the parm list errors      00600000
*                                         found flag off             */ 00601000
*                                                                       00602000
*                                                                       00603000
*/********************************************************************/ 00604000
*/* Branches to the routine to verify the MF keyword.                */ 00605000
*/********************************************************************/ 00606000
*                                                                       00607000
*GOTO LHA0010A;                        /* Branch to the VERIFY_MF       00608000
*                                         routine                    */ 00609000
*LHA0010B:;                            /* Label at which to return      00610000
*                                         from the VERIFY_MF routine */ 00611000
*                                                                       00612000
*                                                                       00613000
*/********************************************************************/ 00614000
*/* If the MF keyword is valid, branches to the routine to process   */ 00615000
*/* the macro form specified.                                        */ 00616000
*/********************************************************************/ 00617000
*                                                                       00618000
*IF IPARML_ERR_FOUND = 0 THEN          /* Test if MF was valid       */ 00619000
*  DO;                                 /* MF keyword valid           */ 00620000
*   IF MF(1) = 'L' THEN                /* Test if list macro form    */ 00621000
*    DO;                               /* List macro form            */ 00622000
*      GOTO LHA0020A;                  /* Branch to 'LIST_FORM'         00623000
*                                         routine to process list       00624000
*                                         form invocation            */ 00625000
*      LHA0020B:;                      /* Label at which to return      00626000
*                                         from 'LIST_FORM' routine   */ 00627000
*    END;                              /* List macro form            */ 00628000
*   ELSE                               /* Else, execute macro form   */ 00629000
*    DO;                               /* Execute macro form         */ 00630000
*      GOTO LHA0030A;                  /* Branch to 'EXECUTE_FORM'      00631000
*                                         routine to process execute    00632000
*                                         form invocation            */ 00633000
*      LHA0030B:;                      /* Label at which to return      00634000
*                                         from 'EXECUTE_FORM'routine */ 00635000
*    END;                              /* Execute macro form         */ 00636000
*  END;                                /* MF keyword valid           */ 00637000
*                                                                       00638000
*                                                                       00639000
*/********************************************************************/ 00640000
*/* Returns from the macro with return code 0 for a valid            */ 00641000
*/* invocation, 12 for an invalid invocation.                        */ 00642000
*/********************************************************************/ 00643000
*                                                                       00644000
*IF IPARML_ERR_FOUND = 0 THEN          /* Test if valid invocation   */ 00645000
*  IRETURN_CODE = 0;                   /* Valid macro invocation     */ 00646000
*ELSE                                  /* Else, invalid invocation   */ 00647000
*  IRETURN_CODE = 12;                  /* Invalid invocation         */ 00648000
*                                                                       00649000
*RETURN CODE(IRETURN_CODE);            /* Return from macro          */ 00650000
*@EJECT;                                                                00651000
*/********************************************************************/ 00652000
*/*                                                                  */ 00653000
*/* PROCEDURE NAME: VERIFY_MF                                        */ 00654000
*/*                                                                  */ 00655000
*/* DESCRIPTIVE NAME: Verifies the macro form keyword parameter.     */ 00656000
*/*                                                                  */ 00657000
*/* ENTRY: From mainline processing                                  */ 00658000
*/*                                                                  */ 00659000
*/* INPUT: MF keyword                                                */ 00660000
*/*                                                                  */ 00661000
*/* OUTPUT: For an invalid specification of the MF keyword:          */ 00662000
*/*          a. The parameter list error flag is set on.             */ 00663000
*/*          b. An error message is generated for the invalid        */ 00664000
*/*             condition found.                                     */ 00665000
*/*                                                                  */ 00666000
*/* EXIT: To mainline processing                                     */ 00667000
*/*                                                                  */ 00668000
*/* ROUTINES BRANCHED TO: None                                       */ 00669000
*/*                                                                  */ 00670000
*/********************************************************************/ 00671000
*                                                                       00672000
*LHA0010A:;                            /* Entry point of routine     */ 00673000
*                                                                       00674000
*/********************************************************************/ 00675000
*/* Tests if the MF keyword is specified. If it is specified,        */ 00676000
*/* tests if it has a valid value. If it is invalid or is not        */ 00677000
*/* specified, generates an error message and sets the parameter     */ 00678000
*/* list error flag on.                                              */ 00679000
*/********************************************************************/ 00680000
*                                                                       00681000
*IF MF = '' THEN                       /* Test if MF not specified   */ 00682000
*  DO;                                 /* MF is not specified        */ 00683000
*                                                                       00684000
*    IPARML_ERR_FOUND = 1;             /* Set the parm list errors      00685000
*                                         found flag on              */ 00686000
*                                                                       00687000
*    /****************************************************************/ 00688000
*    /* Generates the error message: AHA030 OUTDEL ERROR: KEYWORD    */ 00689000
*    /* PARAMETER MF MUST BE SPECIFIED.                              */ 00690000
*    /****************************************************************/ 00691000
*                                                                       00692000
*    ANS COL(MACLMAR) NORESCAN ('@SPACE;');  /* Generate code to skip   00693000
*                                         a line in modified source     00694000
*                                         text before error message  */ 00695000
*                                                                       00696000
*    ANS NORESCAN MSG(' ');            /* Generate blank line before    00697000
*                                         macro source listing error    00698000
*                                         message                    */ 00699000
*                                                                       00700000
*    IANS_TEXT1 = IMSG030_TEXT1 || 'MF' || IMSG030_TEXT2;               00701000
*                                      /* Completed text for error      00702000
*                                         message                    */ 00703000
*                                                                       00704000
*    ANS COL(MACLMAR) NORESCAN ('/* ' || IANS_TEXT1 || ' */');          00705000
*                                      /* Generate error message        00706000
*                                         in modified source text    */ 00707000
*                                                                       00708000
*    ANS NORESCAN MSG(IANS_TEXT1);     /* Generate error message in     00709000
*                                         macro source listing       */ 00710000
*                                                                       00711000
*    ANS COL(MACLMAR) NORESCAN ('@SPACE;');  /* Generate code to skip   00712000
*                                         a line in modified source     00713000
*                                         text after error message   */ 00714000
*                                                                       00715000
*  END;                                /* MF is not specified        */ 00716000
*                                                                       00717000
*/********************************************************************/ 00718000
*/* Tests if it is not the case that:                                */ 00719000
*/*   1. The execute form of MF is properly specified.               */ 00720000
*/*      a. the first argument is 'E'                                */ 00721000
*/*      b. the second is not null                                   */ 00722000
*/*      c. there are exactly two arguments                          */ 00723000
*/*   OR                                                             */ 00724000
*/*   2. The list form of MF is properly specified.                  */ 00725000
*/*      a. the first argument is 'L'                                */ 00726000
*/*      b. the second is not null                                   */ 00727000
*/*      c. there are 3 or less arguments                            */ 00728000
*/********************************************************************/ 00729000
*ELSE IF ^( ((MF(1) = 'E') & (MF(2) ^= '') & (NUMBER(MF) = 2)) |        00730000
*           ((MF(1) = 'L') & (MF(2) ^= '') & (NUMBER(MF) <= 3)) ) THEN  00731000
*  DO;                                 /* MF is not valid            */ 00732000
*                                                                       00733000
*    IPARML_ERR_FOUND = 1;             /* Set the parm list errors      00734000
*                                         found flag on              */ 00735000
*                                                                       00736000
*    /****************************************************************/ 00737000
*    /* Generates the error message: AHA020 OUTDEL ERROR: KEYWORD    */ 00738000
*    /* PARAMETER MF SPECIFIED INCORRECTLY.                          */ 00739000
*    /****************************************************************/ 00740000
*                                                                       00741000
*    ANS COL(MACLMAR) NORESCAN ('@SPACE;');  /* Generate code to skip   00742000
*                                         a line in modified source     00743000
*                                         text before error message  */ 00744000
*                                                                       00745000
*    ANS NORESCAN MSG(' ');            /* Generate blank line before    00746000
*                                         macro source listing error    00747000
*                                         message                    */ 00748000
*                                                                       00749000
*    IANS_TEXT1 = IMSG020_TEXT1 || 'MF' || IMSG020_TEXT2;               00750000
*                                      /* Completed text for error      00751000
*                                         message                    */ 00752000
*                                                                       00753000
*    ANS COL(MACLMAR) NORESCAN ('/* ' || IANS_TEXT1 || ' */');          00754000
*                                      /* Generate error message        00755000
*                                         in modified source text    */ 00756000
*                                                                       00757000
*    ANS NORESCAN MSG(IANS_TEXT1);     /* Generate error message        00758000
*                                         in macro source listing    */ 00759000
*                                                                       00760000
*    ANS COL(MACLMAR) NORESCAN ('@SPACE;');  /* Generate code to skip   00761000
*                                         a line in modified source     00762000
*                                         text after error message   */ 00763000
*                                                                       00764000
*  END;                                /* MF is not valid            */ 00765000
*                                                                       00766000
*                                                                       00767000
*/********************************************************************/ 00768000
*/* Returns from this routine to the label just following the        */ 00769000
*/* branch to this routine.                                          */ 00770000
*/********************************************************************/ 00771000
*                                                                       00772000
*GOTO LHA0010B;                        /* Return from VERIFY_MF      */ 00773000
*@EJECT;                                                                00774000
*/********************************************************************/ 00775000
*/*                                                                  */ 00776000
*/* PROCEDURE NAME: LIST_FORM                                        */ 00777000
*/*                                                                  */ 00778000
*/* DESCRIPTIVE NAME: Processes the list form macro invocation.      */ 00779000
*/*                                                                  */ 00780000
*/* OPERATION: 1. Verifies the list form macro parameter list.       */ 00781000
*/*                                                                  */ 00782000
*/*            2. If the parameter list is valid, generates the      */ 00783000
*/*               declare in modified source text for the list       */ 00784000
*/*               form invocation.                                   */ 00785000
*/*                                                                  */ 00786000
*/*            3. If the parameter list is invalid, generates        */ 00787000
*/*               error messages.                                    */ 00788000
*/*                                                                  */ 00789000
*/* ENTRY: From mainline processing                                  */ 00790000
*/*                                                                  */ 00791000
*/* INPUT: Macro parameter list                                      */ 00792000
*/*                                                                  */ 00793000
*/* OUTPUT: 1. For invalid invocations:                              */ 00794000
*/*            a. The parameter list error flag is set on.           */ 00795000
*/*            b. Error messages are generated for the invalid       */ 00796000
*/*               parameters found.                                  */ 00797000
*/*            c. An error message is generated echoing the          */ 00798000
*/*               the macro invocation and indicating the            */ 00799000
*/*               list form declare was not generated.               */ 00800000
*/*                                                                  */ 00801000
*/*         2. For valid invocations:                                */ 00802000
*/*                                                                  */ 00803000
*/*            Generates the declare for storage.  The declare       */ 00804000
*/*            for storage consists of 4 bytes to be used as         */ 00805000
*/*            the parameter list pointer, followed by the           */ 00806000
*/*            number of bytes equal to the length of the            */ 00807000
*/*            IEFDOCNL parameter list.                              */ 00808000
*/*                                                                  */ 00809000
*/*  NOTES: If the IEFDOCNL parameter list length changes the        */ 00810000
*/*         macro variable ILIST_DCL_LENGTH will need to be          */ 00811000
*/*         changed to be initialized to the proper length for       */ 00812000
*/*         the list form declare.                                   */ 00813000
*/*                                                                  */ 00814000
*/* EXIT: To mainline processing                                     */ 00815000
*/*                                                                  */ 00816000
*/* ROUTINES BRANCHED TO: None                                       */ 00817000
*/*                                                                  */ 00818000
*/********************************************************************/ 00819000
*                                                                       00820000
*LHA0020A:;                            /* Entry point of the routine */ 00821000
*                                                                       00822000
*                                                                       00823000
*/********************************************************************/ 00824000
*/* Verifies the list form macro invocation. Checks for              */ 00825000
*/* extraneous, invalid and missing parameters.                      */ 00826000
*/********************************************************************/ 00827000
*                                                                       00828000
*                                                                       00829000
*/********************************************************************/ 00830000
*/*  Positional parameters are not used in the list form             */ 00831000
*/*  invocation. Checks that they are not specified. If they are,    */ 00832000
*/*  then generates the error message 010 and sets the parameter     */ 00833000
*/*  list error flag on.                                             */ 00834000
*/********************************************************************/ 00835000
*                                                                       00836000
*IF MACLIST ^= '' THEN                 /* Test if positional parms   */ 00837000
*  DO;                                 /* Positional parms specified */ 00838000
*                                                                       00839000
*    IPARML_ERR_FOUND = 1;             /* Set the parm list errors      00840000
*                                         found flag on              */ 00841000
*                                                                       00842000
*    /****************************************************************/ 00843000
*    /* Generates the error message: AHA010 OUTDEL ERROR:            */ 00844000
*    /* POSITIONAL PARAMETERS ARE NOT ALLOWED.                       */ 00845000
*    /****************************************************************/ 00846000
*                                                                       00847000
*    ANS COL(MACLMAR) NORESCAN ('@SPACE;');  /* Generate code to skip   00848000
*                                         a line in modified source     00849000
*                                         text before error message  */ 00850000
*                                                                       00851000
*    ANS NORESCAN MSG(' ');            /* Generate blank line before    00852000
*                                         macro source listing error    00853000
*                                         message                    */ 00854000
*                                                                       00855000
*    IANS_TEXT1 = IMSG010_TEXT1;                                        00856000
*                                      /* Completed text for error      00857000
*                                         message                    */ 00858000
*                                                                       00859000
*    ANS COL(MACLMAR) NORESCAN ('/* ' || IANS_TEXT1 || ' */');          00860000
*                                      /* Generate error message        00861000
*                                         in modified source text    */ 00862000
*                                                                       00863000
*    ANS NORESCAN MSG(IANS_TEXT1);     /* Generate error message        00864000
*                                         in macro source listing    */ 00865000
*                                                                       00866000
*    ANS COL(MACLMAR) NORESCAN ('@SPACE;');  /* Generate code to skip   00867000
*                                         a line in modified source     00868000
*                                         text after error message   */ 00869000
*                                                                       00870000
*  END;                                /* Positional parms specified */ 00871000
*                                                                       00872000
*                                                                       00873000
*/********************************************************************/ 00874000
*/* Checks that execute form keyword parameters not used in the      */ 00875000
*/* list form are not specified.  If they are, then generates        */ 00876000
*/* error message 040 and sets the parameter list error flag on.     */ 00877000
*/********************************************************************/ 00878000
*                                                                       00879000
*/* Tests if any execute form parameters not used in the list form      00880000
*   are specified                                                    */ 00881000
*IF (NAME    ^= '') | (RETURN_CODE ^= '') | (REASON_CODE ^= '') THEN    00882000
*                                                                       00883000
*  DO;                                 /* Execute form parms            00884000
*                                         specified                  */ 00885000
*                                                                       00886000
*    IPARML_ERR_FOUND = 1;             /* Set the parm list errors      00887000
*                                         found flag on              */ 00888000
*                                                                       00889000
*    /****************************************************************/ 00890000
*    /* Generates the error message: AHA040 OUTDEL ERROR: KEYWORD    */ 00891000
*    /* PARAMETER(S) FROM THE EXECUTE MACRO FORM SPECIFIED, BUT      */ 00892000
*    /* MUTUALLY EXCLUSIVE WITH THE LIST MACRO FORM.                 */ 00893000
*    /****************************************************************/ 00894000
*                                                                       00895000
*    ANS COL(MACLMAR) NORESCAN ('@SPACE;');  /* Generate code to skip   00896000
*                                         a line in modified source     00897000
*                                         text before error message  */ 00898000
*                                                                       00899000
*    ANS NORESCAN MSG(' ');            /* Generate blank line before    00900000
*                                         macro source listing error    00901000
*                                         message                    */ 00902000
*                                                                       00903000
*    IANS_TEXT1 = IMSG040_TEXT1 || '(S) FROM THE EXECUTE MACRO FORM' || 00904000
*                 IMSG040_TEXT2 || 'THE LIST MACRO FORM.';              00905000
*                                      /* Completed text for error      00906000
*                                         message                    */ 00907000
*                                                                       00908000
*    ANS COL(MACLMAR) NORESCAN ('/* ' || IANS_TEXT1 || ' */');          00909000
*                                      /* Generate error message        00910000
*                                         in modified source text    */ 00911000
*                                                                       00912000
*    ANS NORESCAN MSG(IANS_TEXT1);     /* Generate error message        00913000
*                                         in macro source listing    */ 00914000
*                                                                       00915000
*    ANS COL(MACLMAR) NORESCAN ('@SPACE;');  /* Generate code to skip   00916000
*                                         a line in modified source     00917000
*                                         text after error message   */ 00918000
*                                                                       00919000
*  END;                                /* Execute form parms            00920000
*                                         specified                  */ 00921000
*                                                                       00922000
*                                                                       00923000
*/********************************************************************/ 00924000
*/* If the list form macro parameter list is valid, then             */ 00925000
*/* generates the declare for the Dynamic OUTPUT parameter list.     */ 00926000
*/* If the macro parameter list is invalid, the macro invocation     */ 00927000
*/* is echoed in an error message.                                   */ 00928000
*/********************************************************************/ 00929000
*                                                                       00930000
*IF IPARML_ERR_FOUND = 0 THEN          /* Test if no errors found in    00931000
*                                         the parameter list         */ 00932000
*  DO;                                 /* No errors found in the        00933000
*                                         parameter list             */ 00934000
*                                                                       00935000
*    ANS COL(MACLMAR) NORESCAN (MACLABEL);  /* Echo the macro label  */ 00936000
*                                                                       00937000
*/********************************************************************/ 00938000
*/* Generates the declare for the Dynamic OUTPUT parameter list.     */ 00939000
*/* Uses the label as specified in the second MF argument.  If       */ 00940000
*/* the third MF argument is specified, uses it for the declare      */ 00941000
*/* attribute.                                                       */ 00942000
*/********************************************************************/ 00943000
*                                                                       00944000
*    IF NUMBER(MF) = 3 THEN            /* Test if the third MF          00945000
*                                         argument is specified      */ 00946000
*      IANS_TEXT2 = MF(3);             /* Uses the third MF argument    00947000
*                                         for the declare attribute  */ 00948000
*    ELSE                              /* The third MF argument is      00949000
*                                         not specified              */ 00950000
*      IANS_TEXT2 = 'BOUNDARY(WORD)';  /* Uses the default of boundary  00951000
*                                        word                        */ 00952000
*                                                                       00953000
*    IANS_TEXT1 = 'DCL ' || MF(2) || ' ' || IANS_TEXT2 ||               00954000
*                 ' CHAR(' || ILIST_DCL_LENGTH || ');';                 00955000
*                                      /* Build string for LIST form    00956000
*                                         declare                    */ 00957000
*                                                                       00958000
*    ANSWER COL(MACCOL) SKIP(1) NORESCAN (IANS_TEXT1);                  00959000
*                                      /* Generate LIST form declare */ 00960000
*                                                                       00961000
*    IANS_TEXT1 = ' /* OUTDEL LIST form declare:  ' ||                  00962000
*                 '?' || MACLABEL || ' ' || MACNAME || ' ';             00963000
*                                      /* Build string for first part   00964000
*                                         of line comment on            00965000
*                                         declaration                */ 00966000
*                                                                       00967000
*    ANSWER COL(ICOMCOL) NORESCAN (IANS_TEXT1);                         00968000
*                                      /* Generate line comment      */ 00969000
*                                                                       00970000
*    IANS_TEXT1 = MACLIST || ' ' || MACKEYS || ' */'; /* Build string   00971000
*                                         for second part of comment */ 00972000
*                                                                       00973000
*    ANSWER NORESCAN (IANS_TEXT1);     /* Generate second part of       00974000
*                                         line comment               */ 00975000
*                                                                       00976000
*  END;                                /* No errors found in the        00977000
*                                         parameter list             */ 00978000
*                                                                       00979000
*ELSE                                  /* Errors were found in the      00980000
*                                         parameter list             */ 00981000
*  DO;                                 /* Generate error message     */ 00982000
*                                                                       00983000
*    /****************************************************************/ 00984000
*    /* Generates the error message: AHA050 OUTDEL ERROR:            */ 00985000
*    /* LIST FORM DECLARE NOT GENERATED DUE TO ERRORS FOUND          */ 00986000
*    /* IN THE LIST FORM INVOCATION: <macro invocation>              */ 00987000
*    /* in modified source text. The error message in the macro      */ 00988000
*    /* source listing does not include the macro invocation.        */ 00989000
*    /****************************************************************/ 00990000
*                                                                       00991000
*    ANS COL(MACLMAR) NORESCAN ('@SPACE;');  /* Generate code to        00992000
*                                         skip a line in modified       00993000
*                                         source text before error      00994000
*                                         message                    */ 00995000
*                                                                       00996000
*    ANS NORESCAN MSG(' ');            /* Generate blank line before    00997000
*                                         macro source listing error    00998000
*                                         message                    */ 00999000
*                                                                       01000000
*    IANS_TEXT1 = IMSG050_TEXT1 || ':  ?' || MACLABEL || ' ' ||         01001000
*                 MACNAME || ' ';      /* Build first part of error     01002000
*                                         message for modified source   01003000
*                                         text                       */ 01004000
*                                                                       01005000
*    ANSWER COL(MACLMAR) NORESCAN ('/* ' || IANS_TEXT1);                01006000
*                                      /* Generate first part of        01007000
*                                         error message for modified    01008000
*                                         source text                */ 01009000
*                                                                       01010000
*    ANS NORESCAN MSG(IMSG050_TEXT1 || '.' ); /* Generate error message 01011000
*                                         in macro source listing    */ 01012000
*                                                                       01013000
*    IANS_TEXT1 = MACLIST || ' ' || MACKEYS;                            01014000
*                                      /* Build second part of          01015000
*                                         error message for modified    01016000
*                                         source text                */ 01017000
*                                                                       01018000
*    ANSWER NORESCAN (IANS_TEXT1 || ' */');                             01019000
*                                      /* Generate second part of       01020000
*                                         error message for modified    01021000
*                                         source text                */ 01022000
*                                                                       01023000
*    ANS COL(MACLMAR) NORESCAN ('@SPACE;');  /* Generate code to        01024000
*                                         skip a line in modified       01025000
*                                         source text after error       01026000
*                                         message                    */ 01027000
*                                                                       01028000
*  END;                                /* Generate error message     */ 01029000
*                                                                       01030000
*                                                                       01031000
*/********************************************************************/ 01032000
*/* Returns from the LIST_FORM routine to the label just             */ 01033000
*/* following the branch to this routine.                            */ 01034000
*/********************************************************************/ 01035000
*                                                                       01036000
*GOTO  LHA0020B;                       /* Return from LIST_FORM         01037000
*                                         routine                    */ 01038000
*@EJECT;                                                                01039000
*/********************************************************************/ 01040000
*/*                                                                  */ 01041000
*/* PROCEDURE NAME: EXECUTE_FORM                                     */ 01042000
*/*                                                                  */ 01043000
*/* DESCRIPTIVE NAME: Processes the execute form macro invocation.   */ 01044000
*/*                                                                  */ 01045000
*/* OPERATION: 1. Generates the DO statement with the echo of        */ 01046000
*/*               the macro invocation.                              */ 01047000
*/*                                                                  */ 01048000
*/*            2. Verifies the execute form macro parameter list.    */ 01049000
*/*               The parameter list will be checked for errors      */ 01050000
*/*               which would prevent or interfere with filling      */ 01051000
*/*               in the Dynamic OUTPUT parameter list.              */ 01052000
*/*                                                                  */ 01053000
*/*               A.  Checks that required parameters and            */ 01054000
*/*                   parameters with mutual exclusivity             */ 01055000
*/*                   conditions are properly specified.             */ 01056000
*/*                                                                  */ 01057000
*/*               B.  Verify keyword arguments:                      */ 01058000
*/*                                                                  */ 01059000
*/*                   All the parameters are the 'asis' type of      */ 01060000
*/*                   parameter.  Just checks that the correct       */ 01061000
*/*                   number of parameters are specified.            */ 01062000
*/*                                                                  */ 01063000
*/*                                                                  */ 01064000
*/*            3. If the execute form macro parameter list is        */ 01065000
*/*               valid:                                             */ 01066000
*/*                                                                  */ 01067000
*/*               A. Branches to the routine to generate the code    */ 01068000
*/*                  to fill in the Dynamic OUTPUT parameter         */ 01069000
*/*                  list.                                           */ 01070000
*/*                                                                  */ 01071000
*/*               B. Branches to the routine to generate the code    */ 01072000
*/*                  to establish linkage to the parameter list      */ 01073000
*/*                  and invoke Dynamic OUTPUT.                      */ 01074000
*/*                                                                  */ 01075000
*/*               C. Branches to the routine to generate the code    */ 01076000
*/*                  to return fields from Dynamic OUTPUT, as        */ 01077000
*/*                  specified in the macro parameter list.          */ 01078000
*/*                                                                  */ 01079000
*/*            4. Generates the END statement with the echo of       */ 01080000
*/*               the macro invocation.                              */ 01081000
*/*                                                                  */ 01082000
*/* ENTRY: From mainline processing                                  */ 01083000
*/*                                                                  */ 01084000
*/* INPUT: macro parameter list                                      */ 01085000
*/*                                                                  */ 01086000
*/* OUTPUT: If invalid parameters are detected:                      */ 01087000
*/*          1. The parameter list error flag is set on.             */ 01088000
*/*          2. Error messages are generated.                        */ 01089000
*/*         If the parameter list is valid, code is generated        */ 01090000
*/*         in modified source text.                                 */ 01091000
*/*                                                                  */ 01092000
*/* EXIT: To mainline processing                                     */ 01093000
*/*                                                                  */ 01094000
*/* ROUTINES BRANCHED TO: 1. CHECK_REQUIRED&MUTUAL                   */ 01095000
*/*                       2. CHECK_ARGUMENTS                         */ 01096000
*/*                       3. FILL_IN_PARM_LIST                       */ 01097000
*/*                       4. INVOKE_DYNAMIC_OUTPUT                   */ 01098000
*/*                       5. RETURN_FIELDS                           */ 01099000
*/*                                                                  */ 01100000
*/********************************************************************/ 01101000
*                                                                       01102000
*LHA0030A:;                            /* Entry point of routine     */ 01103000
*                                                                       01104000
*/********************************************************************/ 01105000
*/* Initializes the macro output for the invocation of the           */ 01106000
*/* execute form of the macro.                                       */ 01107000
*/********************************************************************/ 01108000
*                                                                       01109000
*ANSWER(MACLABEL) COLUMN(MACLMAR) NORESCAN; /* Generate label from      01110000
*                                      macro invocation              */ 01111000
*                                                                       01112000
*                                                                       01113000
*ANS NORESCAN SKIP(1) COL(MACCOL) ('DO;'); /* Generate the              01114000
*                                      beginning of the macro DO        01115000
*                                      group                         */ 01116000
*                                                                       01117000
*IANS_TEXT1 = '/* ?' || MACLABEL || ' ' || MACNAME; /* Build            01118000
*                                      first part of comment to echo    01119000
*                                      macro invocation. This is        01120000
*                                      done in two parts to ensure      01121000
*                                      this string does not exceed      01122000
*                                      1000 characters              */  01123000
*                                                                       01124000
*ANS NORESCAN COL(ICOMCOL) (IANS_TEXT1); /* Echo the first part         01125000
*                                      of the macro invocation      */  01126000
*                                                                       01127000
*IANS_TEXT1 = ' ' || MACLIST || ' ' || MACKEYS || ' */'; /* Build       01128000
*                                      second part of macro             01129000
*                                      invocation                   */  01130000
*                                                                       01131000
*ANS NORESCAN (IANS_TEXT1);         /* Echo the remainder of the        01132000
*                                      macro invocation             */  01133000
*                                                                       01134000
*                                                                       01135000
*/********************************************************************/ 01136000
*/* Verifies that required parameters are specified and that         */ 01137000
*/* parameters with mutual exclusivity conditions are properly       */ 01138000
*/* specified.                                                       */ 01139000
*/********************************************************************/ 01140000
*                                                                       01141000
*GOTO LHA0040A;                        /* Branch to                     01142000
*                                         CHECK_REQUIRED&MUTUAL      */ 01143000
*LHA0040B:;                            /* Point of return from          01144000
*                                         CHECK_REQUIRED&MUTUAL      */ 01145000
*                                                                       01146000
*                                                                       01147000
*/********************************************************************/ 01148000
*/* Verify keyword arguments                                         */ 01149000
*/********************************************************************/ 01150000
*                                                                       01151000
*GOTO LHA0050A;                        /* Branch to CHECK_ARGUMENTS  */ 01152000
*LHA0050B:;                            /* Point of return from          01153000
*                                         CHECK_ARGUMENTS            */ 01154000
*                                                                       01155000
*                                                                       01156000
*/********************************************************************/ 01157000
*/* If the execute form parameter list is valid, branches to the     */ 01158000
*/* routines to generate the code to fill in the parameter list      */ 01159000
*/* for Dynamic OUTPUT, invoke Dynamic OUTPUT, and return the        */ 01160000
*/* output fields from Dynamic OUTPUT.                               */ 01161000
*/********************************************************************/ 01162000
*                                                                       01163000
*IF IPARML_ERR_FOUND = 0 THEN           /* Test if the parameter        01164000
*                                          list is valid             */ 01165000
*  DO;                                  /* Parameter list valid      */ 01166000
*    GOTO LHA0060A;                     /* Branch to FILL_IN_PARM_      01167000
*                                          LIST routine              */ 01168000
*    LHA0060B:;                         /* Point at which to return     01169000
*                                          from FILL_IN_PARM_LIST       01170000
*                                          routine                   */ 01171000
*    GOTO LHA0070A;                     /* Branch to INVOKE_DYANMIC_    01172000
*                                          OUTPUT routine            */ 01173000
*    LHA0070B:;                         /* Point at which to return     01174000
*                                          from INVOKE_DYNAMIC_OUTPUT   01175000
*                                          routine                   */ 01176000
*    GOTO LHA0080A;                     /* Branch to RETURN_FIELDS      01177000
*                                          routine                   */ 01178000
*    LHA0080B:;                         /* Point at which to return     01179000
*                                          from RETURN_FIELDS           01180000
*                                          routine                   */ 01181000
*  END;                                 /* Parameter list valid      */ 01182000
*                                                                       01183000
*                                                                       01184000
*/********************************************************************/ 01185000
*/* Final macro output for the execute form of the macro.            */ 01186000
*/********************************************************************/ 01187000
*                                                                       01188000
*ANS NORESCAN SKIP(1) COL(MACCOL) ('END;'); /* Generate the             01189000
*                                      end of the macro DO group     */ 01190000
*                                                                       01191000
*IANS_TEXT1 = '/* ?' || MACLABEL || ' ' || MACNAME; /* Build            01192000
*                                      first part of comment to echo    01193000
*                                      macro invocation. This is        01194000
*                                      done in two parts to ensure      01195000
*                                      this string does not exceed      01196000
*                                      1000 characters              */  01197000
*                                                                       01198000
*ANS NORESCAN COL(ICOMCOL) (IANS_TEXT1); /* Echo the first part         01199000
*                                      of the macro invocation      */  01200000
*                                                                       01201000
*IANS_TEXT1 = ' ' || MACLIST || ' ' || MACKEYS || ' */'; /* Build       01202000
*                                      second part of macro             01203000
*                                      invocation                   */  01204000
*                                                                       01205000
*ANS NORESCAN (IANS_TEXT1);         /* Echo the remainder of the        01206000
*                                      macro invocation             */  01207000
*                                                                       01208000
*                                                                       01209000
*/********************************************************************/ 01210000
*/* Returns from this routine to the label following the branch      */ 01211000
*/* to this routine.                                                 */ 01212000
*/********************************************************************/ 01213000
*                                                                       01214000
*GOTO LHA0030B;                         /* Return from EXEC_FORM        01215000
*                                          routine                   */ 01216000
*@EJECT;                                                                01217000
*/********************************************************************/ 01218000
*/*                                                                  */ 01219000
*/* ROUTINE NAME: CHECK_REQUIRED&MUTUAL                              */ 01220000
*/*                                                                  */ 01221000
*/* FUNCTION: Checks execute macro form parameters that are          */ 01222000
*/*           required                                               */ 01223000
*/*                                                                  */ 01224000
*/* ENTRY: From EXEC_FORM routine                                    */ 01225000
*/*                                                                  */ 01226000
*/* INPUT: NAME keyword parameter, positional parameters             */ 01227000
*/*                                                                  */ 01228000
*/* OUTPUT: If invalid parameters are detected:                      */ 01229000
*/*          1. The parameter list error flag is set on.             */ 01230000
*/*          2. Error messages are generated.                        */ 01231000
*/*                                                                  */ 01232000
*/* EXIT: To EXEC_FORM routine                                       */ 01233000
*/*                                                                  */ 01234000
*/* ROUTINE CALLED: None                                             */ 01235000
*/*                                                                  */ 01236000
*/********************************************************************/ 01237000
*                                                                       01238000
*LHA0040A:;                            /* Entry point of routine     */ 01239000
*                                                                       01240000
*                                                                       01241000
*/********************************************************************/ 01242000
*/*  Positional parameters are not used in the execute form          */ 01243000
*/*  invocation. Checks that they are not specified. If they are,    */ 01244000
*/*  then generates the error message 010 and sets the parameter     */ 01245000
*/*  list error flag on.                                             */ 01246000
*/********************************************************************/ 01247000
*                                                                       01248000
*IF MACLIST ^= '' THEN                 /* Test if positional parms   */ 01249000
*  DO;                                 /* Positional parms specified */ 01250000
*                                                                       01251000
*    IPARML_ERR_FOUND = 1;             /* Set the parm list errors      01252000
*                                         found flag on              */ 01253000
*                                                                       01254000
*    /****************************************************************/ 01255000
*    /* Generates the error message: AHA010 OUTDEL ERROR:            */ 01256000
*    /* POSITIONAL PARAMETERS ARE NOT ALLOWED.                       */ 01257000
*    /****************************************************************/ 01258000
*                                                                       01259000
*    ANS COL(MACLMAR) NORESCAN ('@SPACE;');  /* Generate code to skip   01260000
*                                         a line in modified source     01261000
*                                         text before error message  */ 01262000
*                                                                       01263000
*    ANS NORESCAN MSG(' ');            /* Generate blank line before    01264000
*                                         macro source listing error    01265000
*                                         message                    */ 01266000
*                                                                       01267000
*    IANS_TEXT1 = IMSG010_TEXT1;                                        01268000
*                                      /* Completed text for error      01269000
*                                         message                    */ 01270000
*                                                                       01271000
*    ANS COL(MACLMAR) NORESCAN ('/* ' || IANS_TEXT1 || ' */');          01272000
*                                      /* Generate error message        01273000
*                                         in modified source text    */ 01274000
*                                                                       01275000
*    ANS NORESCAN MSG(IANS_TEXT1);     /* Generate error message        01276000
*                                         in macro source listing    */ 01277000
*                                                                       01278000
*    ANS COL(MACLMAR) NORESCAN ('@SPACE;');  /* Generate code to skip   01279000
*                                         a line in modified source     01280000
*                                         text after error message   */ 01281000
*                                                                       01282000
*  END;                                /* Positional parms specified */ 01283000
*                                                                       01284000
*                                                                       01285000
*/********************************************************************/ 01286000
*/*  The NAME parameter must be specified. If it is not              */ 01287000
*/*  specified, generate error message 030 and set the parameter     */ 01288000
*/*  list error flag on.                                             */ 01289000
*/********************************************************************/ 01290000
*IF (NAME = '') THEN                                                    01291000
*  DO;                                 /* The NAME parameter was not    01292000
*                                         specified                  */ 01293000
*    IPARML_ERR_FOUND = 1;             /* Set the parm list errors      01294000
*                                         found flag on              */ 01295000
*                                                                       01296000
*                                                                       01297000
*    /****************************************************************/ 01298000
*    /* Generates the error message: AHA030 OUTDEL ERROR:            */ 01299000
*    /* KEYWORD PARAMETER 'NAME' MUST BE SPECIFIED.                  */ 01300000
*    /****************************************************************/ 01301000
*                                                                       01302000
*    ANS COL(MACLMAR) NORESCAN ('@SPACE;');  /* Generate code to        01303000
*                                         skip a line in modified       01304000
*                                         source text before error      01305000
*                                         message                    */ 01306000
*                                                                       01307000
*    ANS NORESCAN MSG(' ');            /* Generate blank line before    01308000
*                                         macro source listing error    01309000
*                                         message                    */ 01310000
*                                                                       01311000
*    IANS_TEXT1 = IMSG030_TEXT1 || '''NAME''' ||                        01312000
*                 IMSG030_TEXT2;       /* Completed text for error      01313000
*                                         message                    */ 01314000
*                                                                       01315000
*    ANS COL(MACLMAR) NORESCAN ('/* ' || IANS_TEXT1 || ' */');          01316000
*                                      /* Generate error message        01317000
*                                         in modified source text    */ 01318000
*                                                                       01319000
*    ANS NORESCAN MSG(IANS_TEXT1);     /* Generate error message        01320000
*                                         in macro source listing    */ 01321000
*                                                                       01322000
*  END;                                /* The NAME parameter was not    01323000
*                                         specified                  */ 01324000
*                                                                       01325000
*                                                                       01326000
*/********************************************************************/ 01327000
*/* Returns from the CHECK_REQUIRED&MUTUAL routine. Branches to      */ 01328000
*/* the label just after the branch to this routine.                 */ 01329000
*/********************************************************************/ 01330000
*                                                                       01331000
*GOTO LHA0040B;                        /* Return from CHECK_REQUIRED&   01332000
*                                         MUTUAL routine             */ 01333000
*@EJECT;                                                                01334000
*/********************************************************************/ 01335000
*/*                                                                  */ 01336000
*/* ROUTINE NAME: CHECK_ARGUMENTS                                    */ 01337000
*/*                                                                  */ 01338000
*/* FUNCTION: Verifies that the parameter arguments are properly     */ 01339000
*/*           specified.                                             */ 01340000
*/*                                                                  */ 01341000
*/* ENTRY: From EXEC_FORM                                            */ 01342000
*/*                                                                  */ 01343000
*/* INPUT: Keyword macro parameters (except MF)                      */ 01344000
*/*                                                                  */ 01345000
*/* OUTPUT: If invalid parameters are detected:                      */ 01346000
*/*          1. The parameter list error flag is set on.             */ 01347000
*/*          2. Error messages are generated.                        */ 01348000
*/*                                                                  */ 01349000
*/* EXIT: EXEC_FORM                                                  */ 01350000
*/*                                                                  */ 01351000
*/* ROUTINES BRANCHED TO: None                                       */ 01352000
*/*                                                                  */ 01353000
*/********************************************************************/ 01354000
*                                                                       01355000
*LHA0050A:;                            /* Entry point of routine     */ 01356000
*                                                                       01357000
*/********************************************************************/ 01358000
*/* Verifies the NAME key word parameter field has 1 value, if       */ 01359000
*/* specified.  If it is specified and has zero values or more       */ 01360000
*/* than one value, generates error message 030 and sets the         */ 01361000
*/* parameter list error flag on.                                    */ 01362000
*/*                                                                  */ 01363000
*/* Note: If the macro parameter NAME is specified on the macro      */ 01364000
*/* invocation with no arguments (i.e. as ' NAME ') the NAME         */ 01365000
*/* keyword variable will contain the value 'NAME'.                  */ 01366000
*/********************************************************************/ 01367000
*                                                                       01368000
*IF (NUMBER(NAME) > 1) | (NAME = 'NAME') THEN                           01369000
*                                      /* Test if NAME is specified     01370000
*                                         and has zero or more than     01371000
*                                         one value specified.   See    01372000
*                                         note in block comment         01373000
*                                         above                      */ 01374000
*  DO;                                 /* NAME is specified and has     01375000
*                                         zero or more than one         01376000
*                                         values specified           */ 01377000
*                                                                       01378000
*    IPARML_ERR_FOUND = 1;             /* Set the parm list errors      01379000
*                                         found flag on              */ 01380000
*                                                                       01381000
*    /****************************************************************/ 01382000
*    /* Generates the error message: AHA020 OUTDEL ERROR: KEYWORD    */ 01383000
*    /* PARAMETER 'NAME' SPECIFIED INCORRECTLY.                      */ 01384000
*    /****************************************************************/ 01385000
*                                                                       01386000
*    ANS COL(MACLMAR) NORESCAN ('@SPACE;');  /* Generate code to        01387000
*                                         skip a line in modified       01388000
*                                         source text before error      01389000
*                                         message                    */ 01390000
*                                                                       01391000
*    ANS NORESCAN MSG(' ');            /* Generate blank line before    01392000
*                                         macro source listing error    01393000
*                                         message                    */ 01394000
*                                                                       01395000
*    IANS_TEXT1 = IMSG020_TEXT1 || '''NAME''' || IMSG020_TEXT2;         01396000
*                                      /* Completed text for error      01397000
*                                         message                    */ 01398000
*                                                                       01399000
*    ANS COL(MACLMAR) NORESCAN ('/* ' || IANS_TEXT1 || ' */');          01400000
*                                      /* Generate error message        01401000
*                                         in modified source text    */ 01402000
*                                                                       01403000
*    ANS NORESCAN MSG(IANS_TEXT1);     /* Generate error message        01404000
*                                         in macro source listing    */ 01405000
*                                                                       01406000
*  END;                                /* NAME is specified and has     01407000
*                                         zero or more than one         01408000
*                                         value specified            */ 01409000
*                                                                       01410000
*                                                                       01411000
*/********************************************************************/ 01412000
*/* Verifies the RETURN_CODE key word parameter field has 1          */ 01413000
*/* value, if specified.  If it is specified and has zero values     */ 01414000
*/* or more than one value, generates error message 030 and sets     */ 01415000
*/* the parameter list error flag on.                                */ 01416000
*/********************************************************************/ 01417000
*                                                                       01418000
*IF (NUMBER(RETURN_CODE) > 1) | (RETURN_CODE = 'RETURN_CODE') THEN      01419000
*                                      /* Test if RETURN_CODE is        01420000
*                                         specified and has zero or     01421000
*                                         more than one value        */ 01422000
*                                                                       01423000
*  DO;                                 /* RETURN_CODE is specified and  01424000
*                                         has zero or more than one     01425000
*                                         value                      */ 01426000
*                                                                       01427000
*    IPARML_ERR_FOUND = 1;             /* Set the parm list errors      01428000
*                                         found flag on              */ 01429000
*                                                                       01430000
*    /****************************************************************/ 01431000
*    /* Generates the error message: AHA020 OUTDEL ERROR: KEYWORD    */ 01432000
*    /* PARAMETER RETURN_CODE SPECIFIED INCORRECTLY.                 */ 01433000
*    /****************************************************************/ 01434000
*                                                                       01435000
*    ANS COL(MACLMAR) NORESCAN ('@SPACE;');  /* Generate code to        01436000
*                                         skip a line in modified       01437000
*                                         source text before error      01438000
*                                         message                    */ 01439000
*                                                                       01440000
*    ANS NORESCAN MSG(' ');            /* Generate blank line before    01441000
*                                         macro source listing error    01442000
*                                         message                    */ 01443000
*                                                                       01444000
*    IANS_TEXT1 = IMSG020_TEXT1 || 'RETURN_CODE' || IMSG020_TEXT2;      01445000
*                                      /* Completed text for error      01446000
*                                         message                    */ 01447000
*                                                                       01448000
*    ANS COL(MACLMAR) NORESCAN ('/* ' || IANS_TEXT1 || ' */');          01449000
*                                      /* Generate error message        01450000
*                                         in modified source text    */ 01451000
*                                                                       01452000
*    ANS NORESCAN MSG(IANS_TEXT1);     /* Generate error message        01453000
*                                         in macro source listing    */ 01454000
*                                                                       01455000
*  END;                                /* RETURN_CODE is specified and  01456000
*                                         has zero or more than one     01457000
*                                         value                      */ 01458000
*                                                                       01459000
*                                                                       01460000
*/********************************************************************/ 01461000
*/* Verifies the REASON_CODE key word parameter field has 1          */ 01462000
*/* value, if specified.  If it is specified and has zero values     */ 01463000
*/* or more than one value, generates error message 030 and sets     */ 01464000
*/* the parameter list error flag on.                                */ 01465000
*/********************************************************************/ 01466000
*                                                                       01467000
*IF (NUMBER(REASON_CODE) > 1) | (REASON_CODE = 'REASON_CODE') THEN      01468000
*                                      /* Test if REASON_CODE is        01469000
*                                         specified and has zero or     01470000
*                                         more than one value        */ 01471000
*                                                                       01472000
*  DO;                                 /* REASON_CODE is specified and  01473000
*                                         has zero or more than one     01474000
*                                         value                      */ 01475000
*                                                                       01476000
*    IPARML_ERR_FOUND = 1;             /* Set the parm list errors      01477000
*                                         found flag on              */ 01478000
*                                                                       01479000
*    /****************************************************************/ 01480000
*    /* Generates the error message: AHA020 OUTDEL ERROR: KEYWORD    */ 01481000
*    /* PARAMETER REASON_CODE SPECIFIED INCORRECTLY.                 */ 01482000
*    /****************************************************************/ 01483000
*                                                                       01484000
*    ANS COL(MACLMAR) NORESCAN ('@SPACE;');  /* Generate code to        01485000
*                                         skip a line in modified       01486000
*                                         source text before error      01487000
*                                         message                    */ 01488000
*                                                                       01489000
*    ANS NORESCAN MSG(' ');            /* Generate blank line before    01490000
*                                         macro source listing error    01491000
*                                         message                    */ 01492000
*                                                                       01493000
*    IANS_TEXT1 = IMSG020_TEXT1 || 'REASON_CODE' || IMSG020_TEXT2;      01494000
*                                      /* Completed text for error      01495000
*                                         message                    */ 01496000
*                                                                       01497000
*    ANS COL(MACLMAR) NORESCAN ('/* ' || IANS_TEXT1 || ' */');          01498000
*                                      /* Generate error message        01499000
*                                         in modified source text    */ 01500000
*                                                                       01501000
*    ANS NORESCAN MSG(IANS_TEXT1);     /* Generate error message        01502000
*                                         in macro source listing    */ 01503000
*                                                                       01504000
*  END;                                /* REASON_CODE is specified and  01505000
*                                         has zero or more than one     01506000
*                                         value                      */ 01507000
*                                                                       01508000
*                                                                       01509000
*/********************************************************************/ 01510000
*/* Returns from the CHECK_ARGUMENTS routine. Brances to the         */ 01511000
*/* label just following the branch to this routine.                 */ 01512000
*/********************************************************************/ 01513000
*                                                                       01514000
*GOTO LHA0050B;                        /* Return from CHECK_ARGUMENTS   01515000
*                                         routine                    */ 01516000
*@EJECT;                                                                01517000
*/********************************************************************/ 01518000
*/*                                                                  */ 01519000
*/* PROCEDURE NAME: FILL_IN_PARM_LIST                                */ 01520000
*/*                                                                  */ 01521000
*/* DESCRIPTIVE NAME: Generates code to fill in the Dynamic OUTPUT   */ 01522000
*/*                   parameter list as specified in the macro       */ 01523000
*/*                   keywords.                                      */ 01524000
*/*                                                                  */ 01525000
*/* FUNCTION:   Generates code to:                                   */ 01526000
*/*                                                                  */ 01527000
*/*             1. Zero the parameter list.                          */ 01528000
*/*             2. Fill in the parameter list constant fields.       */ 01529000
*/*             3. Flll in the variable parameter list fields        */ 01530000
*/*                as specified in the macro keywords.               */ 01531000
*/*                                                                  */ 01532000
*/*                                                                  */ 01533000
*/* ENTRY: From EXEC_FORM                                            */ 01534000
*/*                                                                  */ 01535000
*/* INPUT: None                                                      */ 01536000
*/*                                                                  */ 01537000
*/* OUTPUT: Generates answer text assignment statements and          */ 01538000
*/*         accompanying comments to fill in the parameter           */ 01539000
*/*         list as specified in the macro invocation.               */ 01540000
*/*                                                                  */ 01541000
*/*         Sets the EPILOG external macro variable EHAREGS          */ 01542000
*/*                                                                  */ 01543000
*/* EXIT: To EXEC_FORM                                               */ 01544000
*/*                                                                  */ 01545000
*/* ROUTINES BRANCHED TO: none                                       */ 01546000
*/*                                                                  */ 01547000
*/********************************************************************/ 01548000
*                                                                       01549000
*LHA0060A:;                            /* Entry point of routine     */ 01550000
*                                                                       01551000
*                                                                       01552000
*/********************************************************************/ 01553000
*/* Sets the epilog variables for register declares for registers    */ 01554000
*/* 0, 1 and 15. Generate code to restrict these registers.          */ 01555000
*/********************************************************************/ 01556000
*                                                                       01557000
*IF INDEX(EHAREGS,'15F')=0 THEN                                         01558000
*  EHAREGS=EHAREGS || '15F';        /* Have EPILOG generate a           01559000
*                                      declare for register 15       */ 01560000
*IF INDEX(EHAREGS,'01F')=0 THEN                                         01561000
*  EHAREGS=EHAREGS || '01F';        /* Have EPILOG generate a           01562000
*                                      declare for register 1        */ 01563000
*IF INDEX(EHAREGS,'00F')=0 THEN                                         01564000
*  EHAREGS=EHAREGS || '00F';        /* Have EPILOG generate a           01565000
*                                      declare for register 0        */ 01566000
*                                                                       01567000
*ANSWER('RFY (GPR15F,GPR01F,GPR00F) RSTD;') COLUMN(MACCOL+2)            01568000
*      NORESCAN SKIP(2);             /* Generate code to restrict       01569000
*                                       registers 15, 1 and 0. These    01570000
*                                       registers are restricted        01571000
*                                       around the SVC because they     01572000
*                                       may be used by the macro and    01573000
*                                       are always altered by the SVC   01574000
*                                                                   */  01575000
*                                                                       01576000
*                                                                       01577000
*/********************************************************************/ 01578000
*/* Generates code in modified source text to zero the parameter     */ 01579000
*/* list.                                                            */ 01580000
*/********************************************************************/ 01581000
*                                                                       01582000
*IANS_TEXT1 = MF(2) || ' = ' || MF(2) ||  ' && ' || MF(2) || ';';       01583000
*                                      /* Build assignment statement    01584000
*                                         to zero parameter list     */ 01585000
*                                                                       01586000
*ANS COL(MACCOL+2) SKIP(2) NORESCAN (IANS_TEXT1);                       01587000
*                                      /* Generate assignment           01588000
*                                         statement                  */ 01589000
*                                                                       01590000
*IANS_TEXT1 = '/* Zeros parameter list */'; /* Build line comment    */ 01591000
*                                                                       01592000
*ANS COL(ICOMCOL) NORESCAN (IANS_TEXT1); /* Generate line comment    */ 01593000
*                                                                       01594000
*                                                                       01595000
*/********************************************************************/ 01596000
*/* Generates code in modified source text to set the ID field       */ 01597000
*/* in the parameter list.                                           */ 01598000
*/********************************************************************/ 01599000
*                                                                       01600000
*IANS_TEXT1 = MF(2) || '(5:8) = ''DOCN'';';  /* Build assignment        01601000
*                                         statement to set              01602000
*                                         parameter list id          */ 01603000
*                                                                       01604000
*ANS COL(MACCOL+2) SKIP(2) NORESCAN (IANS_TEXT1);                       01605000
*                                      /* Generate assignment           01606000
*                                         statement                  */ 01607000
*                                                                       01608000
*IANS_TEXT1 = '/* Sets parameter list id */'; /* Build line comment  */ 01609000
*                                                                       01610000
*ANS COL(ICOMCOL) NORESCAN (IANS_TEXT1); /* Generate line comment    */ 01611000
*                                                                       01612000
*                                                                       01613000
*/********************************************************************/ 01614000
*/* Generates code in modified source text to set the version        */ 01615000
*/* number in the parameter list.                                    */ 01616000
*/********************************************************************/ 01617000
*                                                                       01618000
*IANS_TEXT1 = MF(2) || '(9:9) = ''01''X;'; /* Build assignment          01619000
*                                         statement to set              01620000
*                                         parameter list version     */ 01621000
*                                                                       01622000
*ANS COL(MACCOL+2) SKIP(2) NORESCAN (IANS_TEXT1);                       01623000
*                                      /* Generate assignment           01624000
*                                         statement                  */ 01625000
*                                                                       01626000
*IANS_TEXT1 = '/* Sets parameter list version number */'; /* Build line 01627000
*                                         comment                    */ 01628000
*                                                                       01629000
*ANS COL(ICOMCOL) NORESCAN (IANS_TEXT1); /* Generate line comment    */ 01630000
*                                                                       01631000
*                                                                       01632000
*/********************************************************************/ 01633000
*/* Generates code in modified source text to set the parameter      */ 01634000
*/* list length field in the parameter list.                         */ 01635000
*/********************************************************************/ 01636000
*                                                                       01637000
*IANS_TEXT1 = MF(2) || '(11:12) = ''0020''X;'; /* Build assignment      01638000
*                                         statement to set              01639000
*                                         parameter list length      */ 01640000
*                                                                       01641000
*ANS COL(MACCOL+2) SKIP(2) NORESCAN (IANS_TEXT1);                       01642000
*                                      /* Generate assignment           01643000
*                                         statement                  */ 01644000
*                                                                       01645000
*IANS_TEXT1 = '/* Sets parameter list length field */'; /* Build line   01646000
*                                         comment                    */ 01647000
*                                                                       01648000
*ANS COL(ICOMCOL) NORESCAN (IANS_TEXT1); /* Generate line comment    */ 01649000
*                                                                       01650000
*                                                                       01651000
*/********************************************************************/ 01652000
*/* Generates code in modified source text to set the delete         */ 01653000
*/* function flag on in the parameter list.                          */ 01654000
*/********************************************************************/ 01655000
*                                                                       01656000
*IANS_TEXT1 = MF(2) || '(10:10) = ''40''X;'; /* Build assignment        01657000
*                                         statement to turn delete      01658000
*                                         function on                */ 01659000
*                                                                       01660000
*ANS COL(MACCOL+2) SKIP(2) NORESCAN (IANS_TEXT1);                       01661000
*                                      /* Generate assignment           01662000
*                                         statement                  */ 01663000
*                                                                       01664000
*IANS_TEXT1 = '/* Sets the delete function bit on */'; /* Build line    01665000
*                                         comment                    */ 01666000
*                                                                       01667000
*ANS COL(ICOMCOL) NORESCAN (IANS_TEXT1); /* Generate line comment    */ 01668000
*                                                                       01669000
*                                                                       01670000
*/********************************************************************/ 01671000
*/* Generates code in modified source text to assign the name field  */ 01672000
*/* to the parameter list if the NAME macro keyword                  */ 01673000
*/* was specified.                                                   */ 01674000
*/********************************************************************/ 01675000
*                                                                       01676000
*IANS_TEXT1 = MF(2) || '(13:20) = ' || NAME(1) || ';';                  01677000
*                                      /* Build assignment statement    01678000
*                                         to assign the name field      01679000
*                                         to the parameter list      */ 01680000
*                                                                       01681000
*ANS COL(MACCOL+2) SKIP(2) NORESCAN (IANS_TEXT1);                       01682000
*                                      /* Generate assignment           01683000
*                                         statement                  */ 01684000
*                                                                       01685000
*IANS_TEXT1 = '/* Assigns NAME macro parameter argument ' ||            01686000
*             'to OUTPUT descriptor name field */';                     01687000
*                                      /* Build line comment         */ 01688000
*                                                                       01689000
*ANS COL(ICOMCOL) NORESCAN (IANS_TEXT1); /* Generate line               01690000
*                                         comment                    */ 01691000
*                                                                       01692000
*                                                                       01693000
*/********************************************************************/ 01694000
*/* Returns from the FILL_IN_PARM_LIST routine. Branches to the      */ 01695000
*/* label just following the branch to this routine.                 */ 01696000
*/********************************************************************/ 01697000
*                                                                       01698000
*GOTO LHA0060B;                        /* Return from FILL_IN_PARM_     01699000
*                                         LIST routine               */ 01700000
*@EJECT;                                                                01701000
*/********************************************************************/ 01702000
*/*                                                                  */ 01703000
*/* PROCEDURE NAME: INVOKE_DYNAMIC_OUTPUT                            */ 01704000
*/*                                                                  */ 01705000
*/* FUNCTION: Generates code in modified source text to establish    */ 01706000
*/*           linkage to the parameter list and to invoke Dynamic    */ 01707000
*/*           OUTPUT.                                                */ 01708000
*/*                                                                  */ 01709000
*/*           1. The first 4 bytes of the list form declare          */ 01710000
*/*              named by MF(2) are used as the pointer              */ 01711000
*/*              to the SVC parameter list. The SVC parameter        */ 01712000
*/*              list is the remaining portion of the                */ 01713000
*/*              list form declare.                                  */ 01714000
*/*                                                                  */ 01715000
*/*              Generates code to set the pointer to the            */ 01716000
*/*              SVC parameter list.                                 */ 01717000
*/*                                                                  */ 01718000
*/*           2. Generates code to set register 1 to point           */ 01719000
*/*              to the pointer to the SVC parameter list.           */ 01720000
*/*                                                                  */ 01721000
*/*           3. Generates code to set register 1 to the             */ 01722000
*/*              SVC function code '33'D.                            */ 01723000
*/*                                                                  */ 01724000
*/*           4. Generates code to invoke SVC 109.                   */ 01725000
*/*                                                                  */ 01726000
*/* ENTRY: From EXEC_FORM                                            */ 01727000
*/*                                                                  */ 01728000
*/* INPUT:  Second argument of MF parameter, parameter list name     */ 01729000
*/*                                                                  */ 01730000
*/* OUTPUT: Generates answer text assignment statements and          */ 01731000
*/*         accompanying comments to establish linkage to the        */ 01732000
*/*         parameter list and to invoke Dynamic OUTPUT.             */ 01733000
*/*                                                                  */ 01734000
*/* EXIT: To EXEC_FORM                                               */ 01735000
*/*                                                                  */ 01736000
*/* ROUTINES CALLED: None                                            */ 01737000
*/*                                                                  */ 01738000
*/********************************************************************/ 01739000
*                                                                       01740000
*LHA0070A:;                            /* Entry point of routine     */ 01741000
*                                                                       01742000
*                                                                       01743000
*/********************************************************************/ 01744000
*/* The first 4 bytes of the list form declare named by MF(2) are    */ 01745000
*/* used as the pointer to the SVC parameter list. The SVC           */ 01746000
*/* parameter list is the remaining portion of the list form         */ 01747000
*/* declare.                                                         */ 01748000
*/*                                                                  */ 01749000
*/* Generates code to set the pointer to the SVC parameter list,     */ 01750000
*/* and turn the pointer's high order bit on.                        */ 01751000
*/*                                                                  */ 01752000
*/********************************************************************/ 01753000
*                                                                       01754000
*IANS_TEXT1 = MF(2) || '(1:4) = ADDR(' || MF(2) || '(5:5));'; /*        01755000
*                                       assignment statement to set     01756000
*                                       the parameter list pointer      01757000
*                                       to point at the parameter       01758000
*                                       list                         */ 01759000
*                                                                       01760000
*ANSWER COL(MACCOL+2) SKIP(2) (IANS_TEXT1); /* Generate assignment      01761000
*                                       statement                    */ 01762000
*                                                                       01763000
*IANS_TEXT1 = '/* Puts address of parameter list in the parameter ' ||  01764000
*           'list pointer field */';   /* Build comment string       */ 01765000
*                                                                       01766000
*ANS NORESCAN COL(ICOMCOL) (IANS_TEXT1); /* Generate the comment     */ 01767000
*                                                                       01768000
*IANS_TEXT1 = MF(2) || '(1:1) = ' || MF(2) || '(1:1)' ||                01769000
*            ' | ''80''X;';          /* Build assignmemt statement      01770000
*                                       to turn on high order bit to    01771000
*                                       indicate end of input           01772000
*                                       parameters               @P2C*/ 01773000
*                                                                       01774000
*ANSWER COL(MACCOL+2) SKIP(2) (IANS_TEXT1); /* Generate assignment      01775000
*                                       statement                    */ 01776000
*                                                                       01777000
*IANS_TEXT1 = '/* Indicates end of pointer list */'; /*                 01778000
*                                       Build comment string         */ 01779000
*                                                                       01780000
* ANS NORESCAN COL(ICOMCOL) (IANS_TEXT1); /* Generate the comment    */ 01781000
*                                                                       01782000
*                                                                       01783000
*/********************************************************************/ 01784000
*/* Generates code in modified source text to have register one      */ 01785000
*/* point at the parameter list pointer.                             */ 01786000
*/********************************************************************/ 01787000
*                                                                       01788000
*IANS_TEXT1 = 'GPR01F = ADDR( ' || MF(2) || '(1:1) );'; /* Build        01789000
*                                       assignment statement to place   01790000
*                                       address in register 1        */ 01791000
*                                                                       01792000
*ANSWER COL(MACCOL+2) SKIP(2) (IANS_TEXT1); /* Generate assignment      01793000
*                                       statement                    */ 01794000
*                                                                       01795000
*IANS_TEXT1 = '/* Puts address of parameter list pointer ' ||           01796000
*           'into register 1 */';    /* Build                           01797000
*                                       comment string               */ 01798000
*                                                                       01799000
*ANS NORESCAN COL(ICOMCOL) (IANS_TEXT1); /* Generate the comment        01800000
*                                                                    */ 01801000
*                                                                       01802000
*/********************************************************************/ 01803000
*/* Generates code in modified source text to assign the SVC         */ 01804000
*/* function code to register 15.                                    */ 01805000
*/********************************************************************/ 01806000
*                                                                       01807000
*ANSWER('GPR15F = 33;') COLUMN(MACCOL+2) NORESCAN SKIP(2); /*           01808000
*                                      Generates the assignment         01809000
*                                      statement to put the function    01810000
*                                      code in register 15          */  01811000
*                                                                       01812000
*IANS_TEXT1 = '/* Puts SVC 109 routing code into register 15 */'; /*    01813000
*                                      Build the comment for the        01814000
*                                      assignment statement         */  01815000
*                                                                       01816000
*                                                                       01817000
*ANS NORESCAN COL(ICOMCOL) (IANS_TEXT1); /* Generate the comment    */  01818000
*                                                                       01819000
*                                                                       01820000
*/*******************************************************************/  01821000
*/* Generate instructions to invoke the SVC                         */  01822000
*/*******************************************************************/  01823000
*                                                                       01824000
*ANSWER('SVC(109);') COLUMN(MACCOL+2) NORESCAN SKIP(2); /*              01825000
*                                       Generate code to issue SVC      01826000
*                                       109                         */  01827000
*                                                                       01828000
*ANSWER('/* Invokes Dynamic OUTPUT SVC */') COLUMN(ICOMCOL)             01829000
*      NORESCAN;                     /* Generate comment            */  01830000
*                                                                       01831000
*                                                                       01832000
*/********************************************************************/ 01833000
*/* Returns from the INVOKE_DYANMIC_OUTPUT routine. Branches to the  */ 01834000
*/* label just after the branch to this routine                      */ 01835000
*/********************************************************************/ 01836000
*                                                                       01837000
*GOTO LHA0070B;                        /* Return from INVOKE_DYNAMIC_   01838000
*                                         OUTPUT                     */ 01839000
*@EJECT;                                                                01840000
*/********************************************************************/ 01841000
*/*                                                                  */ 01842000
*/* PROCEDURE NAME: RETURN_FIELDS                                    */ 01843000
*/*                                                                  */ 01844000
*/* FUNCTION: Generates code to fill in the Dynamic OUTPUT           */ 01845000
*/*           return fields on return from the SVC.                  */ 01846000
*/*           Generates code to unrestrict registers 0, 1 and 15.    */ 01847000
*/*                                                                  */ 01848000
*/* ENTRY: From EXEC_FORM                                            */ 01849000
*/*                                                                  */ 01850000
*/* INPUT: Macro keywords: RETURN_CODE                               */ 01851000
*/*                        REASON_CODE                               */ 01852000
*/*                                                                  */ 01853000
*/* OUTPUT:   Generates code to fill in the Dynamic OUTPUT           */ 01854000
*/*           return fields on return from the SVC.                  */ 01855000
*/*                                                                  */ 01856000
*/* EXIT: To EXEC_FORM                                               */ 01857000
*/*                                                                  */ 01858000
*/* ROUTINES BRANCHED TO: none                                       */ 01859000
*/*                                                                  */ 01860000
*/********************************************************************/ 01861000
*                                                                       01862000
*LHA0080A:;                            /* Entry point of routine     */ 01863000
*                                                                       01864000
*                                                                       01865000
*/********************************************************************/ 01866000
*/* Generates code in modified source text to assign the return      */ 01867000
*/* code to the caller's field if the RETURN_CODE macro keyword      */ 01868000
*/* was specified.                                                   */ 01869000
*/********************************************************************/ 01870000
*                                                                       01871000
*IF RETURN_CODE ^= '' THEN             /* Test if RETURN_CODE was       01872000
*                                         specified                  */ 01873000
*  DO;                                 /* RETURN_CODE was specified  */ 01874000
*    IANS_TEXT1 = RETURN_CODE(1) || ' = GPR15F;';                       01875000
*                                      /* Build assignment statement    01876000
*                                         to put register 15 in the     01877000
*                                         parameter argument         */ 01878000
*                                                                       01879000
*    ANS COL(MACCOL+2) SKIP(2) NORESCAN (IANS_TEXT1);                   01880000
*                                      /* Generate assignment           01881000
*                                         statement                  */ 01882000
*                                                                       01883000
*    IANS_TEXT1 = '/* Assigns register 15 to RETURN_CODE ' ||           01884000
*                 'macro parameter argument */';                        01885000
*                                      /* Build line comment         */ 01886000
*                                                                       01887000
*    ANS COL(ICOMCOL) NORESCAN (IANS_TEXT1); /* Generate line           01888000
*                                         comment                    */ 01889000
*                                                                       01890000
*  END;                                /* RETURN_CODE was specified  */ 01891000
*                                                                       01892000
*                                                                       01893000
*/********************************************************************/ 01894000
*/* Generates code in modified source text to assign register 0 to   */ 01895000
*/* the caller's field if the REASON_CODE macro keyword was          */ 01896000
*/* specified.                                                       */ 01897000
*/********************************************************************/ 01898000
*                                                                       01899000
*IF REASON_CODE ^= '' THEN             /* Test if REASON_CODE was       01900000
*                                         specified                  */ 01901000
*  DO;                                 /* REASON_CODE was specified  */ 01902000
*    IANS_TEXT1 = REASON_CODE(1) || ' = GPR00F;';                       01903000
*                                      /* Build assignment statement    01904000
*                                         to put register 15 in the     01905000
*                                         parameter argument         */ 01906000
*                                                                       01907000
*    ANS COL(MACCOL+2) SKIP(2) NORESCAN (IANS_TEXT1);                   01908000
*                                      /* Generate assignment           01909000
*                                         statement                  */ 01910000
*                                                                       01911000
*    IANS_TEXT1 = '/* Assigns register 0 to REASON_CODE ' ||            01912000
*                 'macro parameter argument */';                        01913000
*                                      /* Build line comment         */ 01914000
*                                                                       01915000
*    ANS COL(ICOMCOL) NORESCAN (IANS_TEXT1); /* Generate line           01916000
*                                         comment                    */ 01917000
*                                                                       01918000
*  END;                                /* REASON_CODE was specified  */ 01919000
*                                                                       01920000
*                                                                       01921000
*ANSWER('RFY (GPR15F,GPR01F,GPR00F) UNRSTD;') COLUMN(MACCOL+2)          01922000
*NORESCAN SKIP(2);                     /* Generate code to unrestrict   01923000
*                                         registers 15, 1 and 0     */  01924000
*                                                                       01925000
*/********************************************************************/ 01926000
*/* Returns from the RETURN_FIELDS routine. Branches to the          */ 01927000
*/* label just after the branch to this routine                      */ 01928000
*/********************************************************************/ 01929000
*                                                                       01930000
*GOTO LHA0080B;                        /* Return from RETURN_FIELDS  */ 01931000
*%END;                                 /* End of macro               */ 01932000
*%GOTO  DOADD3;                                                         01933000
*/*                                                                     01934000
         MACRO                                                          01935000
.********************************************************************** 01936000
.**                                                                  ** 01937000
.** Definition of the macro invocation.                              ** 01938000
.**                                                                  ** 01939000
.********************************************************************** 01940000
&LABEL   OUTDEL &NAME=,&MF=                                             01941000
.*                                                                      01942000
.*                                                                      01943000
.********************************************************************** 01944000
.**                                                                  ** 01945000
.** Declaration of internal macro variables.                         ** 01946000
.**                                                                  ** 01947000
.********************************************************************** 01948000
.*                                                                      01949000
         LCLB  &PARMERR                Parm list errors found flag      01950000
         LCLB  &ERRVAL                 Error value.                     01951000
         LCLA  &ERRCODE                Error code returned.             01952000
         LCLC  &REG                    Register form of parameter       01953000
         LCLC  &DCLLEN                 Length of declare for LIST form  01954000
.*                                     parameter list                   01955000
         LCLC  &NAMEADR                Address of the name field in     01956000
.*                                     the parameter list               01957000
         LCLC  &BLANK                  A blank                          01958000
         LCLC  &MSG010A                Text constant for error msg 010  01959000
         LCLC  &MSG010B                Text constant for error msg 010  01960000
         LCLC  &MSG020A                Text constant for error msg 020  01961000
         LCLC  &MSG020B                Text constant for error msg 020  01962000
         LCLC  &MSG020C                Text constant for error msg 020  01963000
         LCLC  &MSG030A                Text constant for error msg 030  01964000
         LCLC  &MSG030B                Text constant for error msg 030  01965000
         LCLC  &MSG040D                Text constant for error msg 040  01966000
         LCLC  &MSG040E                Text constant for error msg 040  01967000
         LCLC  &MSG040F                Text constant for error msg 040  01968000
         LCLC  &MSG050A                Text constant for error msg 050  01969000
         LCLC  &MSG050B                Text constant for error msg 050  01970000
.*                                                                      01971000
.********************************************************************** 01972000
.**                                                                  ** 01973000
.** Initialization of error message text constants that are used     ** 01974000
.** to build error messages for the detected invalid parameters.     ** 01975000
.**                                                                  ** 01976000
.********************************************************************** 01977000
.*                                                                      01978000
.********************************************************************** 01979000
.** Text constants for error message 010.                            ** 01980000
.********************************************************************** 01981000
.*                                                                      01982000
&MSG010A SETC  'AHA010 OUTDEL ERROR: POSITIONAL PARAMETERS ARE NOT ALLOX01983000
               WED.'                                                    01984000
.*                                                                      01985000
.*                                                                      01986000
.********************************************************************** 01987000
.** Text constants for error message 020.                            ** 01988000
.********************************************************************** 01989000
.*                                                                      01990000
&MSG020A SETC  'AHA020 OUTDEL ERROR: KEYWORD PARAMETER '                01991000
&MSG020B SETC  ' SPECIFIED'                                             01992000
&MSG020C SETC  '                     INCORRECTLY.'                      01993000
.*                                                                      01994000
.*                                                                      01995000
.********************************************************************** 01996000
.** Text constants for error message 030.                            ** 01997000
.********************************************************************** 01998000
.*                                                                      01999000
&MSG030A SETC  'AHA030 OUTDEL ERROR: KEYWORD PARAMETER '                02000000
&MSG030B SETC  '                     MUST BE SPECIFIED.'                02001000
.*                                                                      02002000
.*                                                                      02003000
.********************************************************************** 02004000
.** Text constants for error message 040.                            ** 02005000
.********************************************************************** 02006000
.*                                                                      02007000
&MSG040D SETC  'AHA040 OUTDEL ERROR: KEYWORD PARAMETER(S) FROM THE EXECX02008000
               UTE'                                                     02009000
&MSG040E SETC  '                     MACRO FORM SPECIFIED, BUT MUTUALLYX02010000
               '                                                        02011000
&MSG040F SETC  '                     EXCLUSIVE WITH THE LIST MACRO FORMX02012000
               .'                                                       02013000
.*                                                                      02014000
.*                                                                      02015000
.********************************************************************** 02016000
.** Text constants for error message 050.                            ** 02017000
.********************************************************************** 02018000
.*                                                                      02019000
&MSG050A SETC  'AHA050 OUTDEL ERROR: PARAMETER LIST DECLARE NOT GENERATX02020000
               ED'                                                      02021000
&MSG050B SETC  '                     DUE TO ERRORS FOUND IN THE LIST FOX02022000
               RM'                                                      02023000
&MSG050C SETC  '                     INVOCATION.'                       02024000
.*                                                                      02025000
.*                                                                      02026000
.********************************************************************** 02027000
.** Initialize variables.                                            ** 02028000
.********************************************************************** 02029000
.*                                                                      02030000
&ERRVAL  SETB  1                                                        02031000
&ERRCODE SETA  12                           Return a 12 for any error   02032000
.*                                          found in the macro          02033000
.*                                          invocation.                 02034000
&DCLLEN  SETC  '36'                         Length of LIST form declare 02035000
&BLANK   SETC  ' '                          Blank                       02036000
.*                                                                      02037000
.*                                                                      02038000
.********************************************************************** 02039000
.**                                                                  ** 02040000
.**               START OF MAINLINE PROCESSING                       ** 02041000
.**                                                                  ** 02042000
.********************************************************************** 02043000
.*                                                                      02044000
.*                                                                      02045000
.********************************************************************** 02046000
.** Initializes the parameter list error flag to indicate            ** 02047000
.** errors have not yet been found in the macro parameter list.      ** 02048000
.********************************************************************** 02049000
.*                                                                      02050000
&PARMERR SETB  0                            Set the parm list errors    02051000
.*                                          found flag off              02052000
.*                                                                      02053000
.*                                                                      02054000
.********************************************************************** 02055000
.** Branches to the routine to verify the MF keyword.                ** 02056000
.********************************************************************** 02057000
.*                                                                      02058000
         AGO   .LH0010A                     Branch to the VERIFY_MF     02059000
.*                                          routine.                    02060000
.LH0010B ANOP                               Label at which to return    02061000
.*                                          from the VERIFY_MF routine. 02062000
.*                                                                      02063000
.********************************************************************** 02064000
.** If the MF keyword is valid, branches to the routines to process  ** 02065000
.** the macro form specified.                                        ** 02066000
.********************************************************************** 02067000
.*                                                                      02068000
         AIF   (&PARMERR EQ 0).LH0001T      Test if MF was valid.       02069000
         AGO   .LH0000Z                                                 02070000
.LH0001T ANOP                               MF keyword is valid.        02071000
         AIF   ('&MF' EQ 'L').LH0002T       Test if list macro form     02072000
         AGO   .LH0002E                     is EXECUTE FORM.            02073000
.*                                                                      02074000
.LH0002T ANOP                               List macro form             02075000
         AGO   .LH0020A                     Branch to LIST_FORM         02076000
.*                                          routine to process list     02077000
.*                                          form invocation.            02078000
.LH0020B ANOP                               Label at which to return    02079000
.*                                          from LIST_FORM routine      02080000
         AGO   .LH0000Z                                                 02081000
.*                                                                      02082000
.LH0002E ANOP                               Execute macro form.         02083000
         AGO   .LH0030A                     Branch to EXECUTE_FORM      02084000
.*                                          routine to process execute  02085000
.*                                          invocation.                 02086000
.LH0030B ANOP                               Label at which to return    02087000
.*                                          from EXECUTE_FORM routine   02088000
.*                                                                      02089000
.*                                                                      02090000
.********************************************************************** 02091000
.** Returns from the macro with return code 0 for a valid            ** 02092000
.** invocation, 12 for an invalid invocation.                        ** 02093000
.********************************************************************** 02094000
.*                                                                      02095000
.LH0000Z ANOP                                                           02096000
         MEXIT                                                          02097000
.*                                                                      02098000
.*                                                                      02099000
.*                                                                      02100000
.********************************************************************** 02101000
.**                                                                  ** 02102000
.** PROCEDURE NAME: VERIFY_MF                                        ** 02103000
.**                                                                  ** 02104000
.** DESCRIPTIVE NAME: Verifies the macro form keyword parameter.     ** 02105000
.**                                                                  ** 02106000
.** ENTRY: From mainline processing                                  ** 02107000
.**                                                                  ** 02108000
.** INPUT: MF keyword                                                ** 02109000
.**                                                                  ** 02110000
.** OUTPUT: For an invalid specification of the MF keyword:          ** 02111000
.**          a. The parameter list error flag is set on.             ** 02112000
.**          b. An error message is generated for the invalid        ** 02113000
.**             condition found.                                     ** 02114000
.**                                                                  ** 02115000
.** EXIT: To mainline processing                                     ** 02116000
.**                                                                  ** 02117000
.** ROUTINES BRANCHED TO: None                                       ** 02118000
.**                                                                  ** 02119000
.********************************************************************** 02120000
.*                                                                      02121000
.LH0010A ANOP                               Entry Point of the          02122000
.*                                          routine.                    02123000
.********************************************************************** 02124000
.** Tests if the MF keyword is specified. If it is specified,        ** 02125000
.** tests if it has a valid value. If it is invalid or is not        ** 02126000
.** specified, generates an error message and sets the parameter     ** 02127000
.** list error flag on.                                              ** 02128000
.********************************************************************** 02129000
.*                                                                      02130000
         AIF   (0 NE N'&MF).LH0012          Is the MF keyword           02131000
.*                                          specified?                  02132000
.********************************************************************** 02133000
.** Generates the error message: AHA030 OUTDEL ERROR: KEYWORD        ** 02134000
.** PARAMETER MF MUST BE SPECIFIED.                                  ** 02135000
.********************************************************************** 02136000
.*                                                                      02137000
.LH0011  MNOTE &ERRCODE,'&MSG030A.MF'       NO, MF keyword not          02138000
         MNOTE &ERRCODE,'&MSG030B'          specified.                  02139000
         MNOTE '&BLANK'                                                 02140000
&PARMERR SETB  1                                                        02141000
         AGO   .LH0010Z                                                 02142000
.*                                                                      02143000
.*                                                                      02144000
.********************************************************************** 02145000
.** If the EXECUTE or LIST forms are not properly specified,         ** 02146000
.** generate error message AHA020.                                   ** 02147000
.********************************************************************** 02148000
.LH0012  AIF   ((('&MF(1)' EQ 'E') AND                                 X02149000
               ('&MF(2)' NE '')  AND                                   X02150000
               ('&MF(2)' NE '()') AND                                  X02151000
               (2 EQ N'&MF)) OR                                        X02152000
               ('&MF' EQ 'L')).LH0010Z                                  02153000
.*                                                                      02154000
.********************************************************************** 02155000
.** Generates the error message: AHA020 OUTDEL ERROR: KEYWORD        ** 02156000
.** PARAMETER MF SPECIFIED INCORRECTLY.                              ** 02157000
.********************************************************************** 02158000
.*                                                                      02159000
         MNOTE &ERRCODE,'&MSG020A.MF&MSG020B'                           02160000
         MNOTE &ERRCODE,'&MSG020C'                                      02161000
         MNOTE '&BLANK'                                                 02162000
&PARMERR SETB  1                            Sets the parameter list     02163000
.*                                          error flag on               02164000
.********************************************************************** 02165000
.** Returns from this routine to the label just following the        ** 02166000
.** branch to this routine.                                          ** 02167000
.********************************************************************** 02168000
.*                                                                      02169000
.LH0010Z ANOP                                                           02170000
         AGO   .LH0010B                     Return from VERIFY_MF       02171000
.*                                                                      02172000
.*                                                                      02173000
.********************************************************************** 02174000
.**                                                                  ** 02175000
.** PROCEDURE NAME: LIST_FORM                                        ** 02176000
.**                                                                  ** 02177000
.** DESCRIPTIVE NAME: Processes the list form macro invocation.      ** 02178000
.**                                                                  ** 02179000
.** OPERATION: 1. Verifies the list form macro parameter list.       ** 02180000
.**                                                                  ** 02181000
.**            2. If the parameter list is valid, generates the      ** 02182000
.**               declare in modified source text for the list       ** 02183000
.**               form invocation.                                   ** 02184000
.**                                                                  ** 02185000
.**            3. If the parameter list is invalid, generates        ** 02186000
.**               error messages.                                    ** 02187000
.**                                                                  ** 02188000
.** ENTRY: From mainline processing                                  ** 02189000
.**                                                                  ** 02190000
.** INPUT: Macro parameter list                                      ** 02191000
.**                                                                  ** 02192000
.** OUTPUT: 1. For invalid invocations:                              ** 02193000
.**            a. The parameter list error flag is set on.           ** 02194000
.**            b. Error messages are generated for the invalid       ** 02195000
.**               parameters found.                                  ** 02196000
.**            c. An error message is generated echoing the          ** 02197000
.**               the macro invocation and indicating the            ** 02198000
.**               list form declare was not generated.               ** 02199000
.**                                                                  ** 02200000
.**         2. For valid invocations:                                ** 02201000
.**                                                                  ** 02202000
.**            Generates the declare for storage.  The declare       ** 02203000
.**            for storage consists of 4 bytes to be used as         ** 02204000
.**            the parameter list pointer, followed by the           ** 02205000
.**            number of bytes equal to the length of the            ** 02206000
.**            IEFDOCNL parameter list.                              ** 02207000
.**                                                                  ** 02208000
.**  NOTES: If the IEFDOCNL parameter list length changes the        ** 02209000
.**         macro variable DCLLEN will need to be changed to be      ** 02210000
.**         initialized to the proper length for the list form       ** 02211000
.**         declare.                                                 ** 02212000
.**                                                                  ** 02213000
.** EXIT: To mainline processing                                     ** 02214000
.**                                                                  ** 02215000
.** ROUTINES BRANCHED TO: None                                       ** 02216000
.**                                                                  ** 02217000
.********************************************************************** 02218000
.*                                                                      02219000
.*                                                                      02220000
.LH0020A ANOP                               Entry point of the routine  02221000
.*                                                                      02222000
.********************************************************************** 02223000
.** Verifies the list form macro invocation. Checks for              ** 02224000
.** extraneous, invalid and missing parameters.                      ** 02225000
.********************************************************************** 02226000
.*                                                                      02227000
.********************************************************************** 02228000
.**  Positional parameters are not used in the list form             ** 02229000
.**  invocation. Checks that they are not specified. If they are,    ** 02230000
.**  then generates the error message 010 and sets the parameter     ** 02231000
.**  list error flag on.                                             ** 02232000
.********************************************************************** 02233000
.*                                                                      02234000
         AIF   (0 EQ N'&SYSLIST).LH0021     Any positional parameters?  02235000
.*                                                                      02236000
.********************************************************************** 02237000
.** Generates the error message: AHA010 OUTDEL ERROR:                ** 02238000
.** POSITIONAL PARAMETERS ARE NOT ALLOWED.                           ** 02239000
.********************************************************************** 02240000
.*                                                                      02241000
         MNOTE &ERRCODE,'&MSG010A'          YES, generate error msg.    02242000
         MNOTE '&BLANK'                                                 02243000
&PARMERR SETB  1                            Set error flag.             02244000
.*                                                                      02245000
.*                                                                      02246000
.********************************************************************** 02247000
.** Checks that execute form keyword parameters not used in the      ** 02248000
.** list form are not specified.  If they are, then generates        ** 02249000
.** error message 040 and sets the parameter list error flag on.     ** 02250000
.********************************************************************** 02251000
.*                                                                      02252000
.LH0021  AIF   (0 NE N'&NAME).LH0021A       Was NAME specified?         02253000
         AGO   .LH0025                      No errors found.            02254000
.*                                                                      02255000
.********************************************************************** 02256000
.** Generates the error message: AHA040 OUTDEL ERROR: KEYWORD        ** 02257000
.** PARAMETER(S) FROM THE EXECUTE MACRO FORM SPECIFIED, BUT          ** 02258000
.** MUTUALLY EXCLUSIVE WITH THE LIST MACRO FORM.                     ** 02259000
.********************************************************************** 02260000
.*                                                                      02261000
.LH0021A MNOTE &ERRCODE,'&MSG040D'                                      02262000
         MNOTE &ERRCODE,'&MSG040E'                                      02263000
         MNOTE &ERRCODE,'&MSG040F'                                      02264000
         MNOTE '&BLANK'                                                 02265000
&PARMERR SETB  1                            YES, set error flag.        02266000
.*                                                                      02267000
.*                                                                      02268000
.********************************************************************** 02269000
.** If the list form macro parameter list is valid, then             ** 02270000
.** generates the declare for the Dynamic OUTPUT parameter list.     ** 02271000
.** If the macro parameter list is invalid, the macro invocation     ** 02272000
.** is echoed in an error message.                                   ** 02273000
.********************************************************************** 02274000
.*                                                                      02275000
.LH0025  AIF   (0 EQ &PARMERR).LH0024T                                  02276000
         AGO   .LH0024E                                                 02277000
.*                                                                      02278000
.LH0024T ANOP                               NO errors found in          02279000
.*                                          LIST form                   02280000
.*                                                                      02281000
.********************************************************************** 02282000
.** Generates the declare for the Dynamic OUTPUT parameter list.     ** 02283000
.** Uses the label as specified in the second MF argument.           ** 02284000
.********************************************************************** 02285000
.*                                                                      02286000
         DS   0F                            Force to full word          02287000
&LABEL   DS   CL(&DCLLEN)                   OUTDEL LIST form declare    02288000
         AGO   .LH0020Z                                                 02289000
.*                                                                      02290000
.********************************************************************** 02291000
.** Generates the error message: AHA050 OUTDEL ERROR:                ** 02292000
.** LIST FORM DECLARE NOT GENERATED DUE TO ERRORS FOUND IN THE       ** 02293000
.** LIST FORM INVOCATION, in modified source text.                   ** 02294000
.********************************************************************** 02295000
.*                                                                      02296000
.LH0024E MNOTE &ERRCODE,'&MSG050A'          Errors were found in        02297000
         MNOTE &ERRCODE,'&MSG050B'          LIST form.                  02298000
         MNOTE &ERRCODE,'&MSG050C'                                      02299000
         MNOTE '&BLANK'                                                 02300000
.*                                                                      02301000
.*                                                                      02302000
.********************************************************************** 02303000
.** Returns from the LIST_FORM routine to the label just             ** 02304000
.** following the branch to this routine.                            ** 02305000
.********************************************************************** 02306000
.*                                                                      02307000
.LH0020Z ANOP                                                           02308000
         AGO   .LH0020B                     Return to main routine.     02309000
.*                                                                      02310000
.*                                                                      02311000
.********************************************************************** 02312000
.**                                                                  ** 02313000
.** PROCEDURE NAME: EXECUTE_FORM                                     ** 02314000
.**                                                                  ** 02315000
.** DESCRIPTIVE NAME: Processes the execute form macro invocation.   ** 02316000
.**                                                                  ** 02317000
.** OPERATION: 1. Verifies the execute form macro parameter list.    ** 02318000
.**               The parameter list will be checked for errors      ** 02319000
.**               which would prevent or interfere with filling      ** 02320000
.**               in the Dynamic OUTPUT parameter list.              ** 02321000
.**                                                                  ** 02322000
.**               A.  Checks that required parameters and            ** 02323000
.**                   parameters with mutual exclusivity             ** 02324000
.**                   conditions are properly specified.             ** 02325000
.**                                                                  ** 02326000
.**               B.  Verify keyword arguments:                      ** 02327000
.**                                                                  ** 02328000
.**                   All the parameters are the 'asis' type of      ** 02329000
.**                   parameter.  Just checks that the correct       ** 02330000
.**                   number of parameters are specified.            ** 02331000
.**                                                                  ** 02332000
.**            3. If the execute form macro parameter list is        ** 02333000
.**               valid:                                             ** 02334000
.**                                                                  ** 02335000
.**               A. Branches to the routine to generate the code    ** 02336000
.**                  to fill in the Dynamic OUTPUT parameter         ** 02337000
.**                  list.                                           ** 02338000
.**                                                                  ** 02339000
.**               B. Branches to the routine to generate the code    ** 02340000
.**                  to establish linkage to the parameter list      ** 02341000
.**                  and invoke Dynamic OUTPUT.                      ** 02342000
.**                                                                  ** 02343000
.**               C. Branches to the routine to generate the code    ** 02344000
.**                  to return fields from Dynamic OUTPUT, as        ** 02345000
.**                  specified in the macro parameter list.          ** 02346000
.**                                                                  ** 02347000
.** ENTRY: From mainline processing                                  ** 02348000
.**                                                                  ** 02349000
.** INPUT: macro parameter list                                      ** 02350000
.**                                                                  ** 02351000
.** OUTPUT: If invalid parameters are detected:                      ** 02352000
.**          1. The parameter list error flag is set on.             ** 02353000
.**          2. Error messages are generated.                        ** 02354000
.**         If the parameter list is valid, code is generated        ** 02355000
.**         in modified source text.                                 ** 02356000
.**                                                                  ** 02357000
.** EXIT: To mainline processing                                     ** 02358000
.**                                                                  ** 02359000
.** ROUTINES BRANCHED TO: 1. CHECK_REQUIRED&MUTUAL                   ** 02360000
.**                       2. CHECK_ARGUMENTS                         ** 02361000
.**                       3. FILL_IN_PARM_LIST                       ** 02362000
.**                       4. INVOKE_DYNAMIC_OUTPUT                   ** 02363000
.**                                                                  ** 02364000
.********************************************************************** 02365000
.*                                                                      02366000
.LH0030A ANOP                               Entry point of routine.     02367000
.*                                                                      02368000
.*                                                                      02369000
.********************************************************************** 02370000
.** Verifies that required parameters are specified and that         ** 02371000
.** parameters with mutual exclusivity conditions are properly       ** 02372000
.** specified.                                                       ** 02373000
.********************************************************************** 02374000
.*                                                                      02375000
         AGO   .LH0040A                   Branch to                     02376000
.*                                        CHECK_REQUIRED&MUTUAL         02377000
.LH0040B ANOP                             Point of return from          02378000
.*                                        CHECK_REQUIRED&MUTUAL         02379000
.*                                                                      02380000
.*                                                                      02381000
.********************************************************************** 02382000
.** Verify keyword arguments                                         ** 02383000
.********************************************************************** 02384000
.*                                                                      02385000
         AGO   .LH0050A                   Branch to CHECK_ARGUMENTS     02386000
.LH0050B ANOP                             Point of return from          02387000
.*                                        CHECK_ARGUMENTS               02388000
.*                                                                      02389000
.*                                                                      02390000
.********************************************************************** 02391000
.** If the execute form parameter list is valid, branches to the     ** 02392000
.** routines to generate the code to fill in the parameter list      ** 02393000
.** for Dynamic OUTPUT, invoke Dynamic OUTPUT, and return the        ** 02394000
.** output fields from Dynamic OUTPUT.                               ** 02395000
.********************************************************************** 02396000
.*                                                                      02397000
.*                                                                      02398000
         AIF   (&ERRVAL EQ &PARMERR).LH0030Z                            02399000
.*                                                                      02400000
         AGO   .LH0060A                    Branch to FILL_IN_PARM_      02401000
.*                                         LIST routine                 02402000
.LH0060B ANOP                              Point at which to return     02403000
.*                                         from FILL_IN_PARM_LIST       02404000
.*                                         routine                      02405000
.*                                                                      02406000
         AGO    .LH0070A                   Branch to INVOKE_DYANMIC_    02407000
.*                                         OUTPUT routine               02408000
.LH0070B ANOP                              Point at which to return     02409000
.*                                         from INVOKE_DYNAMIC_OUTPUT   02410000
.*                                         routine                      02411000
.*                                                                      02412000
.*                                                                      02413000
.********************************************************************** 02414000
.** Returns from this routine to the label following the branch      ** 02415000
.** to this routine.                                                 ** 02416000
.********************************************************************** 02417000
.*                                                                      02418000
.LH0030Z ANOP                                                           02419000
         AGO   .LH0030B                     Return to main routine.     02420000
.*                                                                      02421000
.*                                                                      02422000
.********************************************************************** 02423000
.**                                                                  ** 02424000
.** ROUTINE NAME: CHECK_REQUIRED&MUTUAL                              ** 02425000
.**                                                                  ** 02426000
.** FUNCTION: Checks execute macro form parameters that are          ** 02427000
.**           required or have mutual exclusivity conditions.        ** 02428000
.**                                                                  ** 02429000
.** ENTRY: From EXEC_FORM routine                                    ** 02430000
.**                                                                  ** 02431000
.** INPUT: NAME and positional parameters.                           ** 02432000
.**                                                                  ** 02433000
.** OUTPUT: If invalid parameters are detected:                      ** 02434000
.**          1. The parameter list error flag is set on.             ** 02435000
.**          2. Error messages are generated.                        ** 02436000
.**                                                                  ** 02437000
.** EXIT: To EXEC_FORM routine                                       ** 02438000
.**                                                                  ** 02439000
.** ROUTINE CALLED: None                                             ** 02440000
.**                                                                  ** 02441000
.********************************************************************** 02442000
.*                                                                      02443000
.LH0040A ANOP                               Entry point of routine.     02444000
.*                                                                      02445000
.*                                                                      02446000
.********************************************************************** 02447000
.**  Positional parameters are not used in the execute form          ** 02448000
.**  invocation. Checks that they are not specified. If they are,    ** 02449000
.**  then generates the error message 010 and sets the parameter     ** 02450000
.**  list error flag on.                                             ** 02451000
.********************************************************************** 02452000
.*                                                                      02453000
         AIF   (0 EQ N'&SYSLIST).LH0041     Any positional parameters?  02454000
.*                                                                      02455000
.********************************************************************** 02456000
.** Generates the error message: AHA010 OUTDEL ERROR:                ** 02457000
.** POSITIONAL PARAMETERS ARE NOT ALLOWED.                           ** 02458000
.********************************************************************** 02459000
.*                                                                      02460000
         MNOTE &ERRCODE,'&MSG010A'          YES, generate error msg.    02461000
         MNOTE '&BLANK'                                                 02462000
&PARMERR SETB  1                            Set error flag.             02463000
.*                                                                      02464000
.*                                                                      02465000
.********************************************************************** 02466000
.**  The NAME parameter must be specified. If it is not              ** 02467000
.**  specified, generate error message 030 and set the parameter     ** 02468000
.**  list error flag on.                                             ** 02469000
.********************************************************************** 02470000
.*                                                                      02471000
.LH0041  AIF   (0 EQ N'&NAME).LH0042T                                   02472000
         AGO   .LH0040Z                                                 02473000
.*                                                                      02474000
.*                                                                      02475000
.********************************************************************** 02476000
.** Generates the error message: AHA030 OUTDEL ERROR:                ** 02477000
.** KEYWORD PARAMETER 'NAME' MUST BE SPECIFIED.                      ** 02478000
.********************************************************************** 02479000
.*                                                                      02480000
.LH0042T MNOTE &ERRCODE,'&MSG030A.''NAME'''                             02481000
         MNOTE &ERRCODE,'&MSG030B'                                      02482000
         MNOTE '&BLANK'                                                 02483000
&PARMERR SETB  1                                                        02484000
.*                                                                      02485000
.*                                                                      02486000
.********************************************************************** 02487000
.** Returns from the CHECK_REQUIRED&MUTUAL routine. Branches to      ** 02488000
.** the label just after the branch to this routine.                 ** 02489000
.********************************************************************** 02490000
.*                                                                      02491000
.LH0040Z ANOP                                                           02492000
         AGO   .LH0040B                                                 02493000
.*                                                                      02494000
.*                                                                      02495000
.********************************************************************** 02496000
.**                                                                  ** 02497000
.** ROUTINE NAME: CHECK_ARGUMENTS                                    ** 02498000
.**                                                                  ** 02499000
.** FUNCTION: Verifies that the parameter arguments are properly     ** 02500000
.**           specified.                                             ** 02501000
.**                                                                  ** 02502000
.** ENTRY: From EXEC_FORM                                            ** 02503000
.**                                                                  ** 02504000
.** INPUT: Keyword macro parameters (except MF)                      ** 02505000
.**                                                                  ** 02506000
.** OUTPUT: If invalid parameters are detected:                      ** 02507000
.**          1. The parameter list error flag is set on.             ** 02508000
.**          2. Error messages are generated.                        ** 02509000
.**                                                                  ** 02510000
.** EXIT: EXEC_FORM                                                  ** 02511000
.**                                                                  ** 02512000
.** ROUTINES BRANCHED TO: None                                       ** 02513000
.**                                                                  ** 02514000
.********************************************************************** 02515000
.*                                                                      02516000
.LH0050A ANOP                               Entry point of routine.     02517000
.*                                                                      02518000
.*                                                                      02519000
.********************************************************************** 02520000
.** Verifies the NAME key word parameter field has no more than 1    ** 02521000
.** value specified. Also verifies a register in the valid range is  ** 02522000
.** passed. If an error is detected generates error message 030      ** 02523000
.** and sets the parameter list error flag on.                       ** 02524000
.********************************************************************** 02525000
.*                                                                      02526000
         AIF   ((N'&NAME GT 1) OR                                      X02527000
               ('&NAME' EQ '()')).LH0050T                               02528000
         AGO   .LH0050Z                                                 02529000
.*                                                                      02530000
.********************************************************************** 02531000
.** Generates the error message: AHA020 OUTDEL ERROR: KEYWORD        ** 02532000
.** PARAMETER 'NAME' SPECIFIED INCORRECTLY.                          ** 02533000
.********************************************************************** 02534000
.*                                                                      02535000
.LH0050T MNOTE &ERRCODE,'&MSG020A.''NAME''&MSG020B'                     02536000
         MNOTE &ERRCODE,'&MSG020C'                                      02537000
         MNOTE '&BLANK'                                                 02538000
&PARMERR SETB  1                                                        02539000
.*                                                                      02540000
.*                                                                      02541000
.********************************************************************** 02542000
.** Returns from the CHECK_ARGUMENTS routine. Branches to the        ** 02543000
.** label just following the branch to this routine.                 ** 02544000
.********************************************************************** 02545000
.*                                                                      02546000
.LH0050Z ANOP                                                           02547000
         AGO   .LH0050B                                                 02548000
.*                                                                      02549000
.*                                                                      02550000
.********************************************************************** 02551000
.**                                                                  ** 02552000
.** PROCEDURE NAME: FILL_IN_PARM_LIST                                ** 02553000
.**                                                                  ** 02554000
.** DESCRIPTIVE NAME: Generates code to fill in the Dynamic OUTPUT   ** 02555000
.**                   parameter list as specified in the macro       ** 02556000
.**                   keywords.                                      ** 02557000
.**                                                                  ** 02558000
.** FUNCTION:   Generates code to:                                   ** 02559000
.**                                                                  ** 02560000
.**             1. Zero the parameter list.                          ** 02561000
.**             2. Fill in the parameter list constant fields.       ** 02562000
.**             3. Flll in the variable parameter list fields        ** 02563000
.**                as specified in the macro keywords.               ** 02564000
.**                                                                  ** 02565000
.**                                                                  ** 02566000
.** ENTRY: From EXEC_FORM                                            ** 02567000
.**                                                                  ** 02568000
.** INPUT: None                                                      ** 02569000
.**                                                                  ** 02570000
.** OUTPUT: Generates answer text assignment statements and          ** 02571000
.**         accompanying comments to fill in the parameter           ** 02572000
.**         list as specified in the macro invocation.               ** 02573000
.**                                                                  ** 02574000
.** EXIT: To EXEC_FORM                                               ** 02575000
.**                                                                  ** 02576000
.** ROUTINES BRANCHED TO: none                                       ** 02577000
.**                                                                  ** 02578000
.********************************************************************** 02579000
.*                                                                      02580000
.LH0060A ANOP                               Entry point of routine.     02581000
.*                                                                      02582000
.*                                                                      02583000
.********************************************************************** 02584000
.** If a label was specified on the macro invocation then            ** 02585000
.** generates an EQU for the label.                                  ** 02586000
.********************************************************************** 02587000
.*                                                                      02588000
         AIF   ('&LABEL' EQ '').SKIPLBL     Test if a label was        X02589000
                                            specified.                  02590000
&LABEL   DS    0H                      Label specified on macro        X02591000
                                       invocation                       02592000
.SKIPLBL ANOP                                                           02593000
.*                                                                      02594000
.*                                                                      02595000
.********************************************************************** 02596000
.** Generates code in modified source text to establish              ** 02597000
.** addressability to the parameter list.                            ** 02598000
.********************************************************************** 02599000
.*                                                                      02600000
         AIF   ('&MF(2)'(1,1) EQ '(').LH0061T IF register form parm     02601000
         AGO   .LH0061E                                                 02602000
.*                                                                      02603000
.LH0061T ANOP                                 THEN, register form       02604000
&REG     SETC  '&MF(2)'(2,K'&MF(2)-2)         Get register from         02605000
.*                                            within double parens.     02606000
.*                                            K is the count of         02607000
.*                                            characters in the parm    02608000
         LR    1,&REG                  Establishes addressability to    02609000
*                                      the parameter list specified     02610000
*                                      in the MF keyword                02611000
         AGO   .LH0061B                                                 02612000
.*                                                                      02613000
.LH0061E ANOP                                 ELSE, not register form   02614000
         LA    1,&MF(2)                Establishes addressability to    02615000
*                                      the parameter list specified     02616000
*                                      in the MF keyword                02617000
.LH0061B ANOP                                 End of IF - THEN - ELSE   02618000
.*                                                                      02619000
.*                                                                      02620000
.********************************************************************** 02621000
.** Generates code in modified source text to zero the parameter     ** 02622000
.** list                                                             ** 02623000
.********************************************************************** 02624000
.*                                                                      02625000
         XC    0(36,1),0(1)            Zeros the parameter list         02626000
.*                                                                      02627000
.*                                                                      02628000
.********************************************************************** 02629000
.** Generates code in modified source text to set the ID field       ** 02630000
.** in the parameter list.                                           ** 02631000
.********************************************************************** 02632000
.*                                                                      02633000
         MVI   4(1),C'D'               Initializes the parameter list   02634000
         MVI   5(1),C'O'               identifier to 'DOCN'             02635000
         MVI   6(1),C'C'                                                02636000
         MVI   7(1),C'N'                                                02637000
.*                                                                      02638000
.*                                                                      02639000
.********************************************************************** 02640000
.** Generates code in modified source text to set the version        ** 02641000
.** number in the parameter list.                                    ** 02642000
.********************************************************************** 02643000
.*                                                                      02644000
         MVI   8(1),1                  Initializes the version number   02645000
.*                                                                      02646000
.*                                                                      02647000
.********************************************************************** 02648000
.** Generates code in modified source text to set the parameter      ** 02649000
.** list length field in the parameter list.                         ** 02650000
.********************************************************************** 02651000
.*                                                                      02652000
         MVI   11(1),32                Initializes the parameter list   02653000
*                                      length field                     02654000
.*                                                                      02655000
.*                                                                      02656000
.********************************************************************** 02657000
.** Generates code in modified source text to set the delete         ** 02658000
.** function flag on in the parameter list.                          ** 02659000
.********************************************************************** 02660000
.*                                                                      02661000
         MVI   9(1),X'40'              Sets the function field to       02662000
*                                      DELETE                           02663000
.*                                                                      02664000
.*                                                                      02665000
.********************************************************************** 02666000
.** Generates code in modified source text to assign the name field  ** 02667000
.** to the parameter list if the NAME macro keyword was specified    ** 02668000
.********************************************************************** 02669000
.*                                                                      02670000
         AIF   ('&NAME'(1,1) EQ '(').LH0062T IF register form parm      02671000
         AGO   .LH0062E                                                 02672000
.*                                                                      02673000
.LH0062T ANOP                                 THEN, register form       02674000
&REG     SETC  '&NAME'(2,K'&NAME-2)           Get register from         02675000
.*                                            within double parens.     02676000
.*                                            K is the count of         02677000
.*                                            characters in the parm    02678000
         MVC   12(8,1),0(&REG)         Gets the OUTPUT descriptor       02679000
*                                      name, as specified by the NAME   02680000
*                                      macro parameter                  02681000
         AGO   .LH0062B                                                 02682000
.*                                                                      02683000
.LH0062E ANOP                                 ELSE, not register form   02684000
         MVC   12(8,1),&NAME           Gets the OUTPUT descriptor       02685000
*                                      name, as specified by the NAME   02686000
*                                      macro parameter                  02687000
.LH0062B ANOP                                 End of IF - THEN - ELSE   02688000
.*                                                                      02689000
.*                                                                      02690000
.********************************************************************** 02691000
.**  Returns from the FILL_IN_PARM_LIST routine. Branches to the     ** 02692000
.**  label just after the branch to this routine.                    ** 02693000
.********************************************************************** 02694000
.*                                                                      02695000
         AGO   .LH0060B                     Return to EXEC_FORM.        02696000
.*                                                                      02697000
.********************************************************************** 02698000
.**                                                                  ** 02699000
.** PROCEDURE NAME: INVOKE_DYNAMIC_OUTPUT                            ** 02700000
.**                                                                  ** 02701000
.** FUNCTION: Generates code in modified source text to establish    ** 02702000
.**           linkage to the parameter list and to invoke Dynamic    ** 02703000
.**           OUTPUT.                                                ** 02704000
.**                                                                  ** 02705000
.**           1. The first 4 bytes of the list form declare          ** 02706000
.**              named by MF(2) are used as the pointer              ** 02707000
.**              to the SVC parameter list. The SVC parameter        ** 02708000
.**              list is the remaining portion of the                ** 02709000
.**              list form declare.                                  ** 02710000
.**                                                                  ** 02711000
.**              Generates code to set the pointer to the            ** 02712000
.**              SVC parameter list.                                 ** 02713000
.**                                                                  ** 02714000
.**           2. Generates code to set register 1 to point           ** 02715000
.**              to the pointer to the SVC parameter list.           ** 02716000
.**                                                                  ** 02717000
.**           3. Generates code to set register 1 to the             ** 02718000
.**              SVC function code '33'D.                            ** 02719000
.**                                                                  ** 02720000
.**           4. Generates code to invoke SVC 109.                   ** 02721000
.**                                                                  ** 02722000
.** ENTRY: From EXEC_FORM                                            ** 02723000
.**                                                                  ** 02724000
.** INPUT:  Second argument of MF parameter, parameter list name     ** 02725000
.**                                                                  ** 02726000
.** OUTPUT: Generates answer text assignment statements and          ** 02727000
.**         accompanying comments to establish linkage to the        ** 02728000
.**         parameter list and to invoke Dynamic OUTPUT.             ** 02729000
.**                                                                  ** 02730000
.** EXIT: To EXEC_FORM                                               ** 02731000
.**                                                                  ** 02732000
.** ROUTINES CALLED: None                                            ** 02733000
.**                                                                  ** 02734000
.********************************************************************** 02735000
.*                                                                      02736000
.LH0070A       ANOP                      Entry point of routine         02737000
.*                                                                      02738000
.*                                                                      02739000
.********************************************************************** 02740000
.** The first 4 bytes of the list form declare named by MF(2) are    ** 02741000
.** used as the pointer to the SVC parameter list. The SVC           ** 02742000
.** parameter list is the remaining portion of the list form         ** 02743000
.** declare.                                                         ** 02744000
.**                                                                  ** 02745000
.** Generates code to set the pointer to the SVC parameter list,     ** 02746000
.** and turn the pointer's high order bit on.                        ** 02747000
.**                                                                  ** 02748000
.********************************************************************** 02749000
.*                                                                      02750000
         LA    0,4                                                      02751000
         LR    15,1                                                     02752000
         AR    15,0                    Sets register 15 to the address  02753000
*                                      of the SVC parameter list        02754000
         ST    15,0(,1)                Sets the parameter list pointer  02755000
*                                      field to the address of the      02756000
*                                      SVC parameter list               02757000
         OI    0(1),X'80'              Indicates end of the input       02758000
*                                      parameter list                   02759000
.*                                                                      02760000
.*                                                                      02761000
.********************************************************************** 02762000
.** Generates code in modified source text to assign the SVC         ** 02763000
.** function code to register 15.                                    ** 02764000
.********************************************************************** 02765000
.*                                                                      02766000
         LA    15,33                   Sets the SVC 109 routing code    02767000
.*                                                                      02768000
.*                                                                      02769000
.*********************************************************************  02770000
.** Generate instruction to invoke the SVC                          **  02771000
.*********************************************************************  02772000
.*                                                                      02773000
         SVC   109                     Invokes Dynamic OUTPUT SVC       02774000
.*                                                                      02775000
.*                                                                      02776000
.********************************************************************** 02777000
.** Returns from the INVOKE_DYANMIC_OUTPUT routine. Branches to the  ** 02778000
.** label just after the branch to this routine                      ** 02779000
.********************************************************************** 02780000
.*                                                                      02781000
         AGO   .LH0070B                Return from INVOKE_DYNAMIC_      02782000
.*                                     OUTPUT                           02783000
         MEND                                                           02784000
**/                                                                     02785000
*%DOADD3: ;                                                             02786000
