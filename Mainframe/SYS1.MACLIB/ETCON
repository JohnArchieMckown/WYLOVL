*  /* START OF SPECIFICATIONS ***************************************** 00050000
*                                                                     * 00100000
*01*  MODULE-NAME = ETCON                                             * 00150000
*                                                                     * 00200000
*01*  MACDATE = 93.170                                                * 00250000
*                                                                     * 00280000
*01*  DESCRIPTIVE-NAME = ENTRY TABLE CONNECT MACRO                    * 00310000
*                                                                     * 00340000
*01*  COPYRIGHT =                                                     * 00375000
*            5655-068                                                 * 00410000
*            THIS MODULE IS "RESTRICTED MATERIALS OF IBM"             * 00445000
*            (C)COPYRIGHT IBM CORP. 1980, 1993                        * 00480000
*            LICENSED MATERIALS - PROPERTY OF IBM                     * 00515000
*                                                                     * 00550000
*01*  STATUS = HBB5510                                            @P1C* 00583300
*                                                                     * 00616600
*                                                                     * 00650000
*01*  FUNCTION = INTERFACE TO THE ETCON SERVICE                       * 00700000
*                                                                     * 00750000
*01*  NOTES = THE CODE IN THIS MACRO TO HANDLE OPTIONS IS INTENDED    * 00800000
*             ONLY TO SIMPLIFY ANY FUTURE ADDITION OF OPTIONS.        * 00850000
*             THERE ARE CURRENTLY NO OPTIONS BITS DEFINED.            * 00900000
*                                                                     * 00950000
*01*  MODULE-TYPE = MACRO                                             * 01000000
*                                                                     * 01050000
*01*  PROCESSOR = ASSEMBLER,PL/S-III (BILINGUAL)              @ZM50111* 01100000
*                                                                     * 01133300
*01*  MACROS = IHBERMAC,AHAETCON                                      * 01166600
*                                                                     * 01199900
*01*  CHANGE ACTIVITY =       NEW FOR OS/VS2 JBB1226.                 * 01233200
*                             UPDATE BOTH BAL AND PL/S MACDATE        * 01249800
*                             WHENEVER THIS MACRO IS CHANGED.         * 01266500
*                             THE S/D CODE IS @G387PXX.               * 01299800
*             PBB0111 - (PL/S) FORCE RC=12 ON NULL            @ZM50111* 01333100
*                       TKLIST(1) OR LXLIST(1).               @ZM50111* 01366400
*             PBB0031 - (PL/S) PTR NOTATION CHECKS INVALID.   @ZMB0031* 01383100
*             PBB0086 - (BAL) INCORRECT PC INSTRUCTIONS.      @ZMB0086* 01391500
*           $P1=PIG1968,HBB5510,930616,PDXB: Savearea                 * 01395700
*                                                                     * 01400000
*01*  MNOTES = IHB001 TKLIST OPERAND REQUIRED, NOT SPECIFIED          * 01450000
*              IHB002 INVALID TKLIST OPERAND - ___                    * 01500000
*              IHB002 INVALID LXLIST OPERAND - ___                    * 01550000
*              IHB002 INVALID MF OPERAND - ___                        * 01600000
*              IHB027 EXCESSIVE POSITIONAL PARAMETERS SPECIFIED       * 01650000
*              IHB280 REG FORM LIST ADDRESS INVALID WITH MF=L         * 01700000
*                                                                     * 01750000
*01*  PL/S MSGS = AS FOLLOWS:                                         * 01800000
*     AHA0013 MF(2) (LISTNAME) IS REQUIRED BUT IS NOT SUPPLIED.       * 01850000
*             NO TEXT IS GENERATED.                                   * 01900000
*     AHA0013 TKLIST(1) (LIST ADDR) IS REQUIRED BUT IS NOT SPECIFIED. * 01950000
*             NO TEXT IS GENERATED.                                   * 02000000
*     AHA0013 TKLIST IS REQUIRED FOR STANDARD FORM BUT IS NOT         * 02050000
*             SPECIFIED. NO TEXT IS GENERATED.                        * 02100000
*     AHA0013 LXLIST(1) (LIST ADDR) IS REQUIRED BUT IS NOT SPECIFIED. * 02150000
*             NO TEXT IS GENERATED.                                   * 02200000
*     AHA0013 LXLIST IS REQUIRED FOR STANDARD FORM BUT IS NOT         * 02250000
*             SPECIFIED. NO TEXT IS GENERATED.                        * 02300000
*     AHA0023 BASED FORM TKLIST ADDRESS '_' INVALID WITH MF(L).       * 02350000
*             NO TEXT IS GENERATED.                                   * 02400000
*     AHA0023 BASED FORM LXLIST ADDRESS '_' INVALID WITH MF(L).       * 02450000
*             NO TEXT IS GENERATED.                                   * 02500000
*     AHA0023 POINTER FORM TKLIST ADDRESS '_' INVALID WITH MF(L).     * 02550000
*             NO TEXT IS GENERATED.                                   * 02600000
*     AHA0023 POINTER FORM LXLIST ADDRESS '_' INVALID WITH MF(L).     * 02650000
*             NO TEXT IS GENERATED.                                   * 02700000
*     AHA0023 'COMPLETE' IS INVALID WITH MF(L). NO TEXT IS GENERATED. * 02750000
*     AHA0033 MF - '_' - HAS TOO MANY ARGUMENTS. NO TEXT IS GENERATED.* 02800000
*     AHA0033 TKLIST - '_' - HAS TOO MANY ARGUMENTS.                  * 02850000
*             NO TEXT IS GENERATED.                                   * 02900000
*     AHA0033 LXLIST - '_' - HAS TOO MANY ARGUMENTS.                  * 02950000
*             NO TEXT IS GENERATED.                                   * 03000000
*     AHA0043 MF(1) MUST BE 'L,E OR M'. NO TEXT IS GENERATED.         * 03050000
*     AHA0043 MF(3) MUST BE 'COMPLETE' WITH MF(E) OR MF(M).           * 03100000
*             NO TEXT IS GENERATED.                                   * 03150000
*     AHA0053 THE MACLIST '_' IS NOT ALLOWED. NO TEXT IS GENERATED.   * 03200000
*                                                                     * 03250000
*A000000-999999                                                @G387PXX 03300000
***** END OF SPECIFICATIONS ******************************************* 03450000
         MACRO                                                          03600000
&LABL    ETCON &TKLIST=,   REQUIRED RX OR REG LIST ADDR        (INPUT) X03650000
               &LXLIST=,   REQUIRED RX OR REG LXLIST ADDR      (INPUT) X03700000
               &MF=,       OPTIONAL MACRO FORM (DEFAULTS TO STANDARD)  X03750000
               &RELATED=   OPTIONAL VALUE FOR DOCUMENTATION             03800000
.********************************************************************** 03900000
.*       DECLARE ARITHMETIC VARIABLES                                 * 03950000
.********************************************************************** 04000000
         LCLA  &A          GENERAL USAGE LOCAL ARITH. VAR.              04050000
         LCLA  &OPTNI      MASK FOR NI OF OPTIONS BYTE                  04100000
         LCLA  &OPTOI      MASK FOR OI OF OPTIONS BYTE                  04150000
.********************************************************************** 04200000
.*       DECLARE BIT VARIABLES                                        * 04250000
.********************************************************************** 04300000
         LCLB  &B(8)       OPTIONS BITS                                 04350000
         LCLB  &N(8)       NI MASK BITS                                 04400000
         LCLB  &O(8)       OI MASK BITS                                 04450000
         LCLB  &S(10)      OPTIONS SPECIFIED BITS                       04500000
.********************************************************************** 04550000
.*       DECLARE CHARACTER VARIABLES                                  * 04600000
.********************************************************************** 04650000
         LCLC  &BOPTS      OPTIONS BYTE INIT STRING FOR STD. FORM       04700000
         LCLC  &EPLV       HOLDS E-FORM PARMADDR FOR USE IN LA/R INST.  04750000
         LCLC  &GNAME1     LABEL FOR STANDARD FORM                      04800000
         LCLC  &GNAME2     LABEL FOR STANDARD FORM                      04850000
         LCLC  &GNAMEL     LABEL FOR STANDARD FORM                      04900000
         LCLC  &LT1        LOAD TYPE 1 - THIS VARIABLE WILL BE:         04950000
.*                              'R' IF TKLIST IS A REG TYPE ADDR        05000000
.*                           OR 'A' IF TKLIST IS AN RX TYPE ADDR        05050000
         LCLC  &LT2        LOAD TYPE 2 - THIS VARIABLE WILL BE:         05100000
.*                              'R' IF E-FORM PARM IS A REG TYPE ADDR   05150000
.*                           OR 'A' IF E-FORM PARM IS AN RX TYPE ADDR   05200000
         LCLC  &LT3        LOAD TYPE 1 - THIS VARIABLE WILL BE:         05250000
.*                              'R' IF LXLIST  IS A REG TYPE ADDR       05300000
.*                           OR 'A' IF LXLIST  IS AN RX TYPE ADDR       05350000
         LCLC  &TKLV       HOLDS VALUE OF TKLIST FOR USE IN LA/R INST.  05400000
         LCLC  &LXLV       HOLDS VALUE OF LXLIST  FOR USE IN LA/R INST. 05450000
         LCLC  &OPERAND    HOLDS OPERAND STRINGS FOR MNOTES             05500000
         LCLC  &OPVAL      HOLDS OPERAND VALUES FOR MNOTES              05550000
.********************************************************************** 05650000
.*       INITIALIZE ARITHMETIC VARIABLES                              * 05700000
.********************************************************************** 05750000
&OPTNI   SETA  255      INIT TO TURN OFF NO OPTIONS                     05800000
&OPTOI   SETA  0        INIT TO TURN ON NO OPTIONS                      05850000
.********************************************************************** 05900000
.*       INITIALIZE BIT VARIABLES                                     * 05950000
.********************************************************************** 06000000
&B(1)    SETB  0        RESERVED BIT- MUST BE ZERO                      06050000
&B(2)    SETB  0        RESERVED BIT- MUST BE ZERO                      06100000
&B(3)    SETB  0        RESERVED BIT- MUST BE ZERO                      06150000
&B(4)    SETB  0        RESERVED BIT- MUST BE ZERO                      06200000
&B(5)    SETB  0        RESERVED BIT- MUST BE ZERO                      06250000
&B(6)    SETB  0        RESERVED BIT- MUST BE ZERO                      06300000
&B(7)    SETB  0        RESERVED BIT- MUST BE ZERO                      06350000
&B(8)    SETB  0        RESERVED BIT- MUST BE ZERO                      06400000
.* IF AN NI-MASK BIT IS SET TO ZERO, THE NI WILL TURN OFF THE OPTION    06450000
&N(1)    SETB  1        RESERVED BIT- MUST BE ONE                       06500000
&N(2)    SETB  1        RESERVED BIT- MUST BE ONE                       06550000
&N(3)    SETB  1        RESERVED BIT- MUST BE ONE                       06600000
&N(4)    SETB  1        RESERVED BIT- MUST BE ONE                       06650000
&N(5)    SETB  1        RESERVED BIT- MUST BE ONE                       06700000
&N(6)    SETB  1        RESERVED BIT- MUST BE ONE                       06750000
&N(7)    SETB  1        RESERVED BIT- MUST BE ONE                       06800000
&N(8)    SETB  1        RESERVED BIT- MUST BE ONE                       06850000
.* IF AN OI-MASK BIT IS SET TO ONE, THE OI WILL TURN ON THE OPTION      06900000
&O(1)    SETB  0        RESERVED BIT- MUST BE ZERO                      06950000
&O(2)    SETB  0        RESERVED BIT- MUST BE ZERO                      07000000
&O(3)    SETB  0        RESERVED BIT- MUST BE ZERO                      07050000
&O(4)    SETB  0        RESERVED BIT- MUST BE ZERO                      07100000
&O(5)    SETB  0        RESERVED BIT- MUST BE ZERO                      07150000
&O(6)    SETB  0        RESERVED BIT- MUST BE ZERO                      07200000
&O(7)    SETB  0        RESERVED BIT- MUST BE ZERO                      07250000
&O(8)    SETB  0        RESERVED BIT- MUST BE ZERO                      07300000
.*       AN 'S' BIT ON MEANS THE PARM WAS SPECIFIED                     07350000
&S(1)    SETB  0        RESERVED BIT- MUST BE ZERO                      07400000
&S(2)    SETB  0        RESERVED BIT- MUST BE ZERO                      07450000
&S(3)    SETB  0        RESERVED BIT- MUST BE ZERO                      07500000
&S(4)    SETB  0        RESERVED BIT- MUST BE ZERO                      07550000
&S(5)    SETB  0        RESERVED BIT- MUST BE ZERO                      07600000
&S(6)    SETB  0        RESERVED BIT- MUST BE ZERO                      07650000
&S(7)    SETB  0        RESERVED BIT- MUST BE ZERO                      07700000
&S(8)    SETB  0        RESERVED BIT- MUST BE ZERO                      07750000
&S(9)    SETB  0   SHOW TKLIST NOT SPECIFIED                            07800000
&S(10)   SETB  0   SHOW LXLIST NOT SPECIFIED                            07850000
.*                                                                      07900000
.********************************************************************** 07950000
.*       PUT OUT BAL MACDATE COMMENT LINE REGARDLESS OF ERRORS.       * 08000000
.********************************************************************** 08050000
*              MACDATE = 80.122                                         08100000
.********************************************************************** 08150000
.*       CHECK FOR EXTRANEOUS POSITIONAL PARMS                        * 08200000
.********************************************************************** 08250000
         AIF   (N'&SYSLIST NE 0).ERR027                                 08300000
.********************************************************************** 08350000
.*       VALIDATE TKLIST PARAMETER IF PRESENT                         * 08400000
.********************************************************************** 08450000
&S(9)    SETB  (T'&TKLIST NE 'O')       IF OPTION SPECIFIED SET BIT     08500000
         AIF   (T'&TKLIST EQ 'O').OK20 IF NOT, GO CHECK LXLIST PARM     08550000
&OPERAND SETC  'TKLIST'                 SET FOR POSSIBLE ERROR MSGS     08600000
&OPVAL   SETC  '&TKLIST'                SET FOR POSSIBLE ERROR MSGS     08650000
.*   DETERMINE WHETHER TKLIST ADDRESS IS RX OR REG TYPE                 08700000
         AIF   ('&TKLIST'(1,1) EQ '(').OK11   BRANCH IF REG TYPE        08750000
&TKLV    SETC  '&TKLIST'                SET VALUE FOR USE IN LOAD INST. 08800000
&LT1     SETC  'A'                      SET TO 'LA' FOR RX TYPE ADDR    08850000
         AGO   .OK20                    GO CHECK LXLIST PARAMETER       08900000
.OK11    ANOP                                                           08950000
&LT1     SETC  'R'                      SET TO 'LR' FOR REG TYPE ADDR   09000000
&TKLV    SETC  '&TKLIST(1)'             EXTRACT REGISTER NAME           09050000
         AIF   (N'&TKLIST NE 1).ERR002  BR IF INVALID REG FORM          09070000
.********************************************************************** 09100000
.*       VALIDATE LXLIST PARAMETER IF PRESENT                         * 09150000
.********************************************************************** 09200000
.OK20    ANOP                                                           09250000
&S(10)   SETB  (T'&LXLIST NE 'O')       IF OPTION SPECIFIED SET BIT     09300000
         AIF   (T'&LXLIST EQ 'O').OK99  IF NOT, GO TO NEXT SEGMENT      09350000
&OPERAND SETC  'LXLIST'                 SET FOR POSSIBLE ERROR MSGS     09400000
&OPVAL   SETC  '&LXLIST'                SET FOR POSSIBLE ERROR MSGS     09450000
.*   DETERMINE WHETHER LXLIST ADDRESS IS RX OR REG TYPE                 09500000
         AIF   ('&LXLIST'(1,1) EQ '(').OK21   BRANCH IF REG TYPE        09550000
&LXLV    SETC  '&LXLIST'                SET VALUE FOR USE IN LOAD INST. 09600000
&LT3     SETC  'A'                      SET TO 'LA' FOR RX TYPE ADDR    09650000
         AGO   .OK99                    GO TO NEXT SEGMENT              09700000
.OK21    ANOP                                                           09750000
&LT3     SETC  'R'                      SET TO 'LR' FOR REG TYPE ADDR   09800000
&LXLV    SETC  '&LXLIST(1)'             EXTRACT REGISTER NAME           09850000
         AIF   (N'&LXLIST NE 1).ERR002  BR IF INVALID REG FORM          09870000
.********************************************************************** 09900000
.* MAP OPTIONS BITS INTO OPTIONS BYTE                                   09950000
.********************************************************************** 10000000
.OK99    ANOP                                                           10050000
.*                                      CURRENTLY NO OPTIONS DEFINED    10100000
&BOPTS   SETC  '&B(1)&B(2)&B(3)&B(4)&B(5)&B(6)&B(7)&B(8)'               10150000
&OPTNI   SETA  128*&N(1)+64*&N(2)+32*&N(3)+16*&N(4)+8*&N(5)+4*&N(6)+2*&X10200000
               N(7)+&N(8)               OPTIONS NI MASK VALUE           10250000
&OPTOI   SETA  128*&O(1)+64*&O(2)+32*&O(3)+16*&O(4)+8*&O(5)+4*&O(6)+2*&X10300000
               O(7)+&O(8)               OPTIONS OI MASK VALUE           10350000
.********************************************************************** 10400000
.*       DETERMINE TYPE OF REQUEST                                    * 10450000
.********************************************************************** 10500000
         AIF   (T'&MF NE 'O').CKMF2     MF OMITTED = STANDARD FORM      10550000
.********************************************************************** 10600000
.*       STANDARD FORM SPECIFIED                                      * 10650000
.********************************************************************** 10700000
&OPERAND SETC  'TKLIST'                                                 10750000
         AIF   ('&TKLV' EQ '').ERR001   REQUIRED OPERAND NOT SPECIFIED  10800000
&OPERAND SETC  'LXLIST'                                                 10850000
         AIF   ('&LXLV' EQ '').ERR001   REQUIRED OPERAND NOT SPECIFIED  10900000
.* GENERATE STANDARD FORM                                               10950000
&GNAME1  SETC  'IHB'.'&SYSNDX'.'1'      TKLIST                          11000000
&GNAME2  SETC  'IHB'.'&SYSNDX'.'2'      LXLIST                          11050000
&GNAMEL  SETC  'IHB'.'&SYSNDX'.'L'      BRANCH LABEL                    11100000
&LABL    DC    0H'0'                .ETCON XM SERVICE PC                11150000
         STM   14,12,12(13)         .SAVE CALLER'S REGS                 11200000
         AIF   ('&LT1' EQ 'R').SF10     BR IF TKLIST WAS REG FORM       11230000
         LA    2,&TKLV              .GET ADDR OF TKLIST                 11260000
         ST    2,&GNAME1            .STORE TKLIST ADDR IN PARM LIST     11290000
         AGO   .SF12                                                    11350000
.SF10    ST    &TKLV,&GNAME1        .STORE TKLIST ADDR IN PARM LIST     11400000
.*                                                                      11450000
.SF12    AIF   ('&LT3' EQ 'R').SF14     BR IF LXLIST WAS REG FORM       11500000
         LA    2,&LXLV              .GET ADDR OF LXLIST                 11550000
         ST    2,&GNAME2            .STORE LXLIST ADDR IN PARM LIST     11580000
         AGO   .SF16                                                    11650000
.SF14    ST    &LXLV,&GNAME2        .STORE LXLIST ADDR IN PARM LIST     11700000
.*                                                                      11750000
.SF16    CNOP  0,4                  .FORCE PARM LIST TO WORD BOUNDARY   11800000
         LA    1,*+8                .POINT REG1 TO PARM LIST            11850000
         B     &GNAMEL              .BRANCH AROUND PARM LIST            11875000
         DC    XL1'00'              .FORMAT BYTE                        11900000
         DC    BL1'&BOPTS'          .OPTIONS BYTE                       11950000
         DC    AL2(0)               .RESERVED                           12000000
&GNAME1  DC    A(0)                 .TKLIST ADDRESS                     12050000
&GNAME2  DC    A(0)                 .LXLIST ADDRESS                     12100000
&GNAMEL  ESAR  2                    .EXTRACT SASID                      12150000
         ST    2,16(,13)            .SAVE SASID IN REG 15 SLOT          12200000
         L     2,16(0,0)            .GET ADDR OF CVT                    16100000
         L     2,772(,2)            .GET ADDR OF SYSTEM FUNCTION TABLE  16150000
         L     2,16(,2)             .GET LX/EX FOR ETCON                16200000
         PC    0(2)                 .PC TO ETCON SERVICE                16237500
         L     2,16(,13)            .EXTRACT SAVED SASID                16275000
         SSAR  2                    .RESTORE SASID                      16312500
         LM    2,12,28(13)          .RESTORE REGS 2-12                  16350000
         L     14,12(,13)           .RESTORE REG 14                     16400000
         MEXIT                                                          16450000
.********************************************************************** 16550000
.CKMF2   ANOP                                                           16550600
&OPERAND SETC  'MF'                     SET FOR POSSIBLE ERROR MSGS     16551200
&OPVAL   SETC  '&MF'                                                    16551800
         AIF   ('&MF' NE 'L').CKMF3     IF NOT LIST FORM CK FOR EXECUTE 16552400
.********************************************************************** 16553000
.*       LIST FORM SPECIFIED                                          * 16553600
.********************************************************************** 16554200
&OPERAND SETC  'REG FORM TKLIST ADDRESS'                                16554800
&OPVAL   SETC  'MF=L'                                                   16555400
         AIF   ('&LT1' EQ 'R').ERR280   &OPERAND INVALID WITH &OPVAL    16556000
&OPERAND SETC  'REG FORM LXLIST ADDRESS'                                16556600
         AIF   ('&LT3' EQ 'R').ERR280   &OPERAND INVALID WITH &OPVAL    16557200
&LABL    DS    0F'0'                .ETCON PC PARAMETER LIST            16557800
         DC    XL1'00'              .FORMAT BYTE                        16558400
         DC    BL1'&BOPTS'          .OPTIONS FLAG BYTE                  16559000
         DC    AL2(0)               .RESERVED                           16559600
.*                                                                      16560200
         AIF   ('&TKLV' NE '').LF10     BR IF TKLIST SPECIFIED          16560800
&TKLV    SETC  '0'                      MUST BE ZERO IF NOT SPECIFIED   16561400
.LF10    AIF   ('&LXLV' NE '').LF12     BR IF LXLIST NOT SPECIFIED      16562000
&LXLV    SETC  '0'                      MUST BE ZERO IF NOT SPECIFIED   16562600
.LF12    ANOP                                                           16563200
         DC    A(&TKLV)             .TKLIST ADDRESS                     16563800
         DC    A(&LXLV)             .LXLIST ADDRESS                     16564400
         MEXIT                                                          16565000
.********************************************************************** 16565600
.*       EXECUTE FORM SPECIFIED                                       * 16566200
.********************************************************************** 16566800
.CKMF3   AIF   ('&MF(1)' NE 'E').ERR002 INVALID MF PARAMETER            16567400
         AIF   ('&MF(2)' EQ '').ERR002  MUST BE (E,PLIST ADDR)          16568000
.* DETERMINE WHETHER PARMLIST ADDRESS IS RX OR REG TYPE                 16568600
         AIF   ('&MF(2)'(1,1) EQ '(').EXREG   BRANCH IF REG TYPE        16569200
&EPLV    SETC  '&MF(2)'                 SET VALUE FOR USE IN LA INST.   16569800
&LT2     SETC  'A'                      SET TO 'LA' FOR RX TYPE ADDR    16570400
         AGO   .ETXT1                   GO GENERATE EXECUTE FORM TEXT   16571000
.EXREG   ANOP                                                           16571600
&LT2     SETC  'R'                      SET TO 'LR' FOR REG TYPE ADDR   16572200
&EPLV    SETC  '&MF(2)'                 EXTRACT REGISTER NAME           16572800
.ETXT1   ANOP                           GENERATE EXECUTE FORM TEXT      16573400
&LABL    DS    0H'0'                .ETCON XM SERVICE PC                16574000
         STM   14,12,12(13)         .SAVE CALLER'S REGS                 16574600
         AIF   ('&EPLV' EQ '1').ETXT3   BRANCH IF SPECIAL REG 1         16575200
.ETXT2   ANOP                                                           16575800
         L&LT2 1,&EPLV              .ETCON PARAMETER LIST ADDRESS       16576400
.ETXT3   AIF   (&OPTOI EQ 0).SKIPOI     IF NO OPTIONS TURNED ON         16577000
         OI    1(1),&OPTOI          .SET OPTIONS IN OPTIONS BYTE        16577600
.SKIPOI  AIF   (&OPTNI EQ 255).SKIPNI   IF NO OPTIONS TURNED OFF        16578200
         NI    1(1),&OPTNI          .CLEAR OPTIONS IN OPTIONS BYTE      16578800
.SKIPNI  AIF   (&S(9) NE 1).SKIPA1      IF TKLIST NOT SPECIFIED         16579400
         AIF   ('&LT1' EQ 'R').ETXT5    BR IF TKLIST IS REG FORM        16580000
         LA    2,&TKLV              .GET ADDR OF TKLIST                 16580600
         ST    2,4(,1)              .STORE TKLIST ADDR INTO PARM LIST   16581200
         AGO   .SKIPA1                                                  16581800
.ETXT5   ANOP                           REG FORM TKLIST                 16582400
         ST    &TKLV,4(,1)          .STORE TKLIST ADDR INTO PARM LIST   16583000
.*                                                                      16583600
.SKIPA1  AIF   (&S(10) NE 1).SKIPA2     IF LXLIST NOT SPECIFIED         16584200
         AIF   ('&LT3' EQ 'R').ETXT6    BR IF LXLIST IS REG FORM        16584800
         LA    2,&LXLV              .GET ADDR OF LXLIST                 16585400
         ST    2,8(,1)              .STORE LXLIST ADDR INTO PARM LIST   16586000
         AGO   .SKIPA2                                                  16586600
.ETXT6   ANOP                           REG FORM LXLIST                 16587200
         ST    &LXLV,8(,1)          .STORE LXLIST ADDR INTO PARM LIST   16587800
.SKIPA2  ANOP                                                           16588400
         ESAR  2                    .EXTRACT SASID                      16589000
         ST    2,16(,13)            .SAVE SASID IN REG 15 SLOT          16589600
         L     2,16(0,0)            .GET ADDR OF CVT                    16590200
         L     2,772(,2)            .GET ADDR OF SYSTEM FUNCTION TABLE  16590800
         L     2,16(,2)             .GET LX/EX FOR ETCON                16591400
         PC    0(2)                 .PC TO ETCON SERVICE                16592000
         L     2,16(,13)            .EXTRACT SAVED SASID                16592600
         SSAR  2                    .RESTORE SASID                      16593200
         LM    2,12,28(13)          .RESTORE REGS 2-12                  16593800
         L     14,12(,13)           .RESTORE REG 14                     16594400
         MEXIT                                                          16595000
.********************************************************************** 16595600
.*       PROCESS ERROR CONDITIONS                                     * 16600000
.********************************************************************** 16650000
.ERR001  ANOP SEV 12 MNOTE -- IHB001 &OPERAND REQ''D - NOT SPECIFIED    16700000
         IHBERMAC 1017,&OPERAND                                         16750000
         MEXIT                                                          16800000
.ERR002  ANOP SEV 12 MNOTE -- IHB002 - INVALID &OPERAND OPERAND &OPVAL  16850000
         IHBERMAC 1001,&OPERAND,&OPVAL                                  16900000
         MEXIT                                                          16950000
.ERR027  ANOP SEV 12 MNOTE -- IHB027 - EXCESSIVE POSITIONAL PARAMETERS  17000000
         IHBERMAC 238                                                   17050000
         MEXIT                                                          17100000
.ERR280  ANOP SEV 12 MNOTE -- IHB280 &OPERAND INVALID WITH &OPVAL       17150000
         IHBERMAC 1020,&OPERAND,&OPVAL                                  17200000
         MEND                                                           17250000
* */                                                                    17300000
*@EJECT;                                                                17350000
*%ETCON:                                                                17400000
*        MACRO KEYS(TKLIST,LXLIST,MF,RELATED);                          17450000
*/********************************************************************/ 17500000
*/*                DEFINE EXTERNAL MACRO VARIABLES                   */ 17550000
*/********************************************************************/ 17600000
* DECLARE                                                               17700000
*   EHAMAXDIM FIXED     EXT, /* NUMBER OF OPTION PARAMETERS.         */ 17750000
*   EHAMAXLEN FIXED     EXT, /* LENGTH OF STANDARD LIST.             */ 17800000
*   EHAREGS   CHARACTER EXT, /* CONTAINS DECLARED REGISTER NUMBERS.  */ 17850000
*   EHAMAPS   CHARACTER EXT, /* CONTAINS REQUESTS FOR MAPPINGS       */ 17900000
*   EHAPCLIST CHARACTER EXT; /* CONTAINS STANDARD PC LIST NAMES.     */ 17950000
*/********************************************************************/ 18000000
*/*                DEFINE INTERNAL MACRO VARIABLES                   */ 18050000
*/********************************************************************/ 18100000
* DECLARE CC       FIXED;    /* STARTING COLUMN FOR PL/S COMMENTS    */ 18150000
* DECLARE IVCLROPT FIXED;    /* IF SET TO 1 IMPLIES CODE TO CLEAR    */ 18350000
*                            /* OPTIONS MUST BE GENERATED. THIS WILL */ 18400000
*                            /* BE TRUE FOR THE MF(M) AND MF(E) CASES*/ 18450000
*                            /* WHERE 'COMPLETE' IS NOT SPECIFIED.   */ 18500000
*                            /* FOR THE STD. FORM OR WHEN 'COMPLETE' */ 18550000
*                            /* IS SPECIFIED THE ZEROING OF THE PARM */ 18600000
*                            /* LIST WOULD MAKE SUCH CODE REDUNDANT. */ 18650000
* DECLARE IVDOCMT  CHAR;     /* COMMENT FOR DO AND END LINES.        */ 18700000
* DECLARE IVINDNT2 FIXED;    /* STARTING COLUMN FOR ALL ANSWER TEXT  */ 18750000
*                            /*   EXCEPT DO AND END STATEMENTS.      */ 18800000
* DECLARE IVLFORM  CHAR;     /* HOLDS LIST-FORM INVOCATION STRING.   */ 18950000
* DECLARE IVLIST   CHAR;     /* NAME OF STANDARD OR SUPPLIED LIST.   */ 19000000
* DECLARE IVLP1    FIXED;    /* LEFT  PAREN COL FOR PTR FORM TKLIST */  19050000
* DECLARE IVLP2    FIXED;    /* LEFT  PAREN COL FOR PTR FORM LXLIST  */ 19100000
* DECLARE IVLSTLEN FIXED;    /* LENGTH OF ETCON PARAMETER LIST.      */ 19150000
* DECLARE IVOPTS   CHAR;     /* OPTIONS BYTE INITIALIZATION STRING   */ 19200000
* DECLARE IVRC     FIXED;    /* RETURN CODE TO DETERMINE IF TEXT WILL*/ 19250000
*                            /* BE GENERATED.                        */ 19300000
* DECLARE IVRP1    FIXED;    /* RIGHT PAREN COL FOR PTR FORM TKLIST */  19350000
* DECLARE IVRP2    FIXED;    /* RIGHT PAREN COL FOR PTR FORM LXLIST  */ 19400000
*/********************************************************************/ 19450000
*/*                INITIALIZE INTERNAL MACRO VARIABLES                  19500000
*/********************************************************************/ 19550000
* CC         = MACRMAR-35;   /* COMMENTS COLUMN (DEFAULT= 72-35 = 37)*/ 19570000
* IVDOCMT    = ' ETCON ';                                               19600000
*                            /* START OF DO-END COMMENT--NO KEYS YET */ 19650000
* IVCLROPT   = 0;            /* DON'T GENERATE CODE TO CLEAR OPTIONS */ 19700000
* IVINDNT2   = MACCOL + 2;   /* SET INDENTATION MARGIN.              */ 19750000
* IVLFORM    = '?AHAETCON('; /* BEGINNING OF AHAETCON INV-STRING.    */ 20100000
* IVLIST     = 'XM@005';     /* STANDARD LIST NAME FOR ETCON SERVICE */ 20150000
*                            /* NOTE: A NON-ZERO VALUE FOR IVLP1,2   */ 20200000
*                            /* INDICATES A POINTER FORM ADDRESS.    */ 20250000
* IVLP1      = INDEX(TKLIST(1),'('); /* GET POSITION OF LEFT PAREN   */ 20300000
* IVLP2      = INDEX(LXLIST(1),'(');  /* GET POSITION OF LEFT PAREN  */ 20350000
* IVLSTLEN   = 12;           /* SET LENGTH OF ETCON PARAMETER LIST.  */ 20400000
* IVRC       = 0;            /* SET CODE TO GENERATE TEXT            */ 20450000
* IF IVLP1=1 THEN            /* IF POINTER NOTATION          @ZMB0031*/ 20500000
*   DO;                      /* POINTER NOTATION.            @ZMB0031*/ 20504100
*     IVRP1=LENGTH(TKLIST(1));  /* GET LAST CHAR OF SUBLIST  @ZMB0031*/ 20508200
*     IF TKLIST(1,IVRP1:IVRP1)^=')' THEN /* IF NOT A RIGHT              20512300
*                                           PAREN            @ZMB0031*/ 20516400
*       IVRP1=IVLP1;         /* FORCE 'NOT-SPECIFIED' ERROR  @ZMB0031*/ 20520500
*   END;                     /* POINTER NOTATION.            @ZMB0031*/ 20524600
* ELSE                       /* NOT POINTER NOTATION.        @ZMB0031*/ 20528700
*   DO;                      /* NOT POINTER NOTATION.        @ZMB0031*/ 20532800
*     IVLP1=0;               /* NOT POINTER NOTATION.        @ZMB0031*/ 20536900
*     IVRP1=0;               /* NOT POINTER NOTATION.        @ZMB0031*/ 20541000
*   END;                     /* NOT POINTER NOTATION.        @ZMB0031*/ 20545100
* IF IVLP2=1 THEN            /* IF POINTER NOTATION          @ZMB0031*/ 20549200
*   DO;                      /* POINTER NOTATION.            @ZMB0031*/ 20553300
*     IVRP2=LENGTH(LXLIST(1));  /* GET LAST CHAR OF SUBLIST  @ZMB0031*/ 20557400
*     IF LXLIST(1,IVRP2:IVRP2)^=')' THEN /* IF NOT A RIGHT              20561500
*                                           PAREN            @ZMB0031*/ 20565600
*       IVRP2=IVLP2;         /* FORCE 'NOT-SPECIFIED' ERROR  @ZMB0031*/ 20569700
*   END;                     /* POINTER NOTATION.            @ZMB0031*/ 20573800
* ELSE                       /* NOT POINTER NOTATION.        @ZMB0031*/ 20577900
*   DO;                      /* NOT POINTER NOTATION.        @ZMB0031*/ 20582000
*     IVLP2=0;               /* NOT POINTER NOTATION.        @ZMB0031*/ 20586100
*     IVRP2=0;               /* NOT POINTER NOTATION.        @ZMB0031*/ 20590200
*   END;                     /* NOT POINTER NOTATION.        @ZMB0031*/ 20594300
*/********************************************************************/ 20600000
*/*                CHECK FOR MACLIST                                 */ 20650000
*/********************************************************************/ 20700000
* IF MACLIST ^= ''           /* MACLIST SUPPLIED?                    */ 20850000
*   THEN DO;                 /* YES -                                */ 20900000
*     IVRC = 12;             /*       PREVENT TEXT GENERATION        */ 20950000
*     ANS MSG('AHA0053 THE MACLIST '||QUOTE(MACLIST)||                  21000000
*             ' IS NOT ALLOWED. NO TEXT IS GENERATED.');                21050000
*                            /*       INDICATE MACLIST IN DO-COMMENT.*/ 21100000
*     IVDOCMT = IVDOCMT||MACLIST;                                       21150000
*   END;                     /* END - MACLIST SPECIFIED.             */ 21200000
*/********************************************************************/ 21250000
*/*                PROCESS MF KEYWORD                                */ 21300000
*/********************************************************************/ 21350000
* IF MF = ''                 /* STANDARD FORM?                       */ 21500000
*   THEN                     /* YES -                                */ 21550000
*     GOTO LHA00200;         /*       SKIP MF PROCESSING.            */ 21600000
*                            /* NO  - INDICATE MF KEY IN DO-COMMENT. */ 21650000
* IVDOCMT = IVDOCMT||' MF'||MF;                                         21700000
* IF MF(2) = ''              /* WAS A LIST NAME SUPPLIED?            */ 21750000
*   THEN DO;                 /* NO  - PUT OUT ERROR MSG AHA0013.     */ 21800000
*     ANS MSG('AHA0013 MF(2) (LISTNAME) IS REQUIRED '||                 21850000
*             'BUT IS NOT SUPPLIED. NO TEXT IS GENERATED.');            21900000
*     IVRC = 12;             /* KILL TEXT GENERATION.                */ 21950000
*   END;                                                                22000000
* IF NUMBER(MF) > 3          /* TOO MANY MF ARGUMENTS.               */ 22050000
*   THEN DO;                 /* YES - PUT OUT ERROR MSG AHA0033.     */ 22100000
*     ANS MSG('AHA0033 MF - '||MF||' - HAS TOO MANY ARGUMENTS. '||      22150000
*             'NO TEXT IS GENERATED.');                                 22200000
*     IVRC = 12;             /* KILL TEXT GENERATION.                */ 22250000
*   END;                                                                22300000
* IF MF(1) = 'L'             /* LIST FORM?                           */ 22350000
*   THEN DO;                 /* YES - CK FOR ERRORS UNIQUE TO MF(L)  */ 22400000
*     IF INDEX(TKLIST(1),'->') ^= 0 /* IF BASED FORM OF ADDRESS USED */ 22450000
*       THEN DO;             /* INVALID VALUE FOR TKLIST             */ 22500000
*         ANS MSG('AHA0023 BASED FORM TKLIST ADDRESS '''||TKLIST(1)||   22550000
*                 ''' INVALID WITH MF(L). NO TEXT IS GENERATED.');      22600000
*         IVRC = 12;         /* KILL TEXT GENERATION.                */ 22650000
*       END;                 /* INVALID VALUE FOR TKLIST             */ 22700000
*     IF INDEX(LXLIST(1),'->') ^= 0 /* IF BASED FORM OF ADDRESS USED */ 22750000
*       THEN DO;             /* INVALID VALUE FOR LXLIST             */ 22800000
*         ANS MSG('AHA0023 BASED FORM LXLIST ADDRESS '''||LXLIST(1)||   22850000
*                 ''' INVALID WITH MF(L). NO TEXT IS GENERATED.');      22900000
*         IVRC = 12;         /* KILL TEXT GENERATION.                */ 22950000
*       END;                 /* INVALID VALUE FOR LXLIST             */ 23000000
*     IF IVLP1 =1            /* IF POINTER FORM OF ADDRESS   @ZMB0031*/ 23050000
*       THEN DO;             /* INVALID VALUE FOR TKLIST             */ 23100000
*         ANS MSG('AHA0023 POINTER FORM TKLIST ADDRESS '''||            23150000
*                 TKLIST(1)||''' INVALID WITH MF(L). '||                23200000
*                 'NO TEXT IS GENERATED.');                             23250000
*         IVRC = 12;         /* KILL TEXT GENERATION.                */ 23300000
*       END;                 /* INVALID VALUE FOR TKLIST             */ 23350000
*     IF IVLP2 =1            /* IF POINTER FORM OF ADDRESS   @ZMB0031*/ 23400000
*       THEN DO;             /* INVALID VALUE FOR LXLIST             */ 23450000
*         ANS MSG('AHA0023 POINTER FORM LXLIST ADDRESS '''||            23500000
*                 LXLIST(1)||''' INVALID WITH MF(L). '||                23550000
*                 'NO TEXT IS GENERATED.');                             23600000
*         IVRC = 12;         /* KILL TEXT GENERATION.                */ 23650000
*       END;                 /* INVALID VALUE FOR LXLIST             */ 23700000
*     IF MF(3) = 'COMPLETE'  /* ONLY VALID FOR MF(E) AND MF(M)       */ 23750000
*       THEN DO;             /*                                      */ 23800000
*         ANS MSG('AHA0023 ''COMPLETE'' IS INVALID WITH MF(L). '||      23850000
*                 'NO TEXT IS GENERATED.');                             23900000
*         IVRC = 12;         /* KILL TEXT GENERATION.                */ 23950000
*       END;                 /* INVALID VALUE FOR MF(3)              */ 24000000
*     GOTO LHA00200;         /* END MF PROCESSING                    */ 24050000
*   END;                     /* LIST FORM                            */ 24100000
* IF MF(1) = 'M'             /* NO  - MODIFY FORM?                   */ 24150000
*   THEN                     /* YES -                                */ 24200000
*     GOTO LHA00100;         /*       CHECK FOR THIRD ARGUMENT.      */ 24250000
* IF MF(1) ^= 'E'            /* NO  - EXECUTE FORM?                  */ 24300000
*   THEN DO;                 /* NO  - PUT OUT ERROR MSG AHA0043.     */ 24350000
*     ANS MSG('AHA0043 MF(1) MUST BE ''L,E OR M''. '||                  24400000
*             'NO TEXT IS GENERATED.');                                 24450000
*     IVRC = 12;             /* KILL TEXT GENERATION.                */ 24500000
*   END;                                                                24550000
*LHA00100:                                                              24600000
* IVCLROPT = 1;              /* GENERATE CLEAR OPTIONS CODE FOR      */ 24650000
*                            /* THE MF(M) AND MF(E) CASES.           */ 24700000
* IF MF(3) = ''              /* WAS A THIRD ARGUMENT SPECIFIED?      */ 24750000
*   THEN                     /* NO  -                                */ 24800000
*     GOTO LHA00200;         /*       CHECK FOR TKLIST KEYWORD       */ 24850000
* IF MF(3) ^= 'COMPLETE'     /* YES - IS THIRD ARGUMENT VALID?       */ 24900000
*   THEN DO;                 /* NO  - PUT OUT ERROR MSG AHA0043.     */ 24950000
*     ANS MSG('AHA0043 MF(3) MUST BE ''COMPLETE'' '||                   25000000
*             'WITH MF(E) OR MF(M).'||                                  25050000
*             'NO TEXT IS GENERATED.');                                 25100000
*     IVRC = 12;             /* KILL TEXT GENERATION.                */ 25150000
*   END;                                                                25200000
* IVCLROPT = 0;              /* DON'T GENERATE CLEAR OPTIONS CODE FOR*/ 25250000
*                            /* THE MF(M) AND MF(E) 'COMPLETE' CASES.*/ 25300000
*/********************************************************************/ 25350000
*/*                PROCESS TKLIST KEYWORD                            */ 25400000
*/********************************************************************/ 25450000
*LHA00200:                                                              25500000
* IF TKLIST ^= ''            /* TKLIST SPECIFIED?                    */ 25550000
*   THEN DO;                 /* YES - ADD KEYWD TO COMMENT           */ 25600000
*     IVDOCMT = IVDOCMT||' TKLIST'||TKLIST;                             25650000
*     IF TKLIST(1) ^= '' &   /* WAS ARGUMENT SPECIFIED?      @ZM50111*/ 25800000
*       ((IVLP1=0 & IVRP1=0)|/* AND NOT POINTER FORM         @ZM50111*/ 25825000
*       (IVLP1+1 <= IVRP1-1))/* AND NOT = '()' ?             @ZM50111*/ 25837500
*       THEN DO;             /* YES -                                */ 25850000
*         IF NUMBER(TKLIST) > 1 /* TOO MANY TKLIST ARGS?             */ 25900000
*           THEN DO;         /* YES - ISSUE AHA0033                  */ 25950000
*             ANS MSG('AHA0033 TKLIST - '||TKLIST||                     26000000
*                      ' - HAS TOO MANY ARGUMENTS. '||                  26050000
*                      'NO TEXT IS GENERATED.');                        26100000
*             IVRC = 12;     /* KILL TEXT GENERATION                 */ 26150000
*           END;             /* NUMBER(TKLIST) > 1                   */ 26200000
*       END;                 /* TKLIST(1) SPECIFIED                  */ 26750000
*       ELSE DO;             /* NO ARGUMENT-ISSUE AHA0013            */ 26800000
*         ANS MSG('AHA0013 TKLIST(1) (LIST ADDR) IS REQUIRED '||        26850000
*                 'BUT IS NOT SPECIFIED. NO TEXT IS GENERATED.');       26900000
*         IVRC = 12;         /* KILL TEXT GENERATION                 */ 26950000
*       END;                 /* NO TKLIST ARGUMENT                   */ 27000000
*   END;                     /* TKLIST KEYWORD SPECIFIED             */ 27050000
*   ELSE DO;                 /* TKLIST NOT SPECIFIED                 */ 27100000
*     IF MF = ''             /* IF STANDARD FORM                     */ 27150000
*       THEN DO;             /* ERROR - TKLIST IS REQUIRED           */ 27200000
*         ANS MSG('AHA0013 TKLIST IS REQUIRED FOR STANDARD FORM '||     27250000
*                 'BUT IS NOT SPECIFIED. NO TEXT IS GENERATED.');       27300000
*         IVRC = 12;         /* KILL TEXT GENERATION                 */ 27350000
*       END;                 /* ERROR - TKLIST IS REQUIRED           */ 27400000
*   END;                     /* TKLIST NOT SPECIFIED                 */ 27450000
*/********************************************************************/ 27500000
*/*                PROCESS LXLIST KEYWORD                            */ 27550000
*/********************************************************************/ 27600000
* IF LXLIST ^= ''            /* LXLIST SPECIFIED?                    */ 27650000
*   THEN DO;                 /* YES - ADD KEYWD TO COMMENT           */ 27700000
*     IVDOCMT = IVDOCMT||' LXLIST'||LXLIST;                             27750000
*     IF LXLIST(1) ^= '' &   /* WAS ARGUMENT SPECIFIED?      @ZM50111*/ 27900000
*       ((IVLP2=0 & IVRP2=0)|/* AND NOT POINTER FORM         @ZM50111*/ 27925000
*       (IVLP2+1 <= IVRP2-1))/* AND NOT = '()' ?             @ZM50111*/ 27937500
*       THEN DO;             /* YES -                                */ 27950000
*         IF NUMBER(LXLIST) > 1 /* TOO MANY LXLIST ARGS?             */ 28000000
*           THEN DO;         /* YES - ISSUE AHA0033                  */ 28050000
*             ANS MSG('AHA0033 LXLIST - '||LXLIST||                     28100000
*                      ' - HAS TOO MANY ARGUMENTS. '||                  28150000
*                      'NO TEXT IS GENERATED.');                        28200000
*             IVRC = 12;     /* KILL TEXT GENERATION                 */ 28250000
*           END;             /* NUMBER(LXLIST) > 1                   */ 28300000
*       END;                 /* LXLIST(1) SPECIFIED                  */ 28850000
*       ELSE DO;             /* NO ARGUMENT-ISSUE AHA0013            */ 28900000
*         ANS MSG('AHA0013 LXLIST(1) (LIST ADDR) IS REQUIRED '||        28950000
*                 'BUT IS NOT SPECIFIED. NO TEXT IS GENERATED.');       29000000
*         IVRC = 12;         /* KILL TEXT GENERATION                 */ 29050000
*       END;                 /* NO LXLIST ARGUMENT                   */ 29100000
*   END;                     /* LXLIST KEYWORD SPECIFIED             */ 29150000
*   ELSE DO;                 /* LXLIST NOT SPECIFIED                 */ 29200000
*     IF MF = ''             /* IF STANDARD FORM                     */ 29250000
*       THEN DO;             /* ERROR - LXLIST IS REQUIRED           */ 29300000
*         ANS MSG('AHA0013 LXLIST IS REQUIRED FOR STANDARD FORM '||     29350000
*                 'BUT IS NOT SPECIFIED. NO TEXT IS GENERATED.');       29400000
*         IVRC = 12;         /* KILL TEXT GENERATION                 */ 29450000
*       END;                 /* ERROR - LXLIST IS REQUIRED           */ 29500000
*   END;                     /* LXLIST NOT SPECIFIED                 */ 29550000
*/********************************************************************/ 29600000
*/*                PROCESS 'RELATED' KEYWORD                         */ 29650000
*/********************************************************************/ 29700000
* IF RELATED ^= ''           /* IF RELATED WAS SPECIFIED             */ 29750000
*   THEN                     /* ADD KEYWORD TO DO COMMENT            */ 29800000
*     IVDOCMT=IVDOCMT||' RELATED'||RELATED;                             29850000
*/********************************************************************/ 29900000
*/*                PUT OUT LABELS (IF ANY)                           */ 29950000
*/********************************************************************/ 30000000
* IF MACLABEL ^= ''          /* ANY LABELS SPECIFIED?                */ 30050000
*   THEN                     /* YES - PUT THEM OUT.                  */ 30100000
*     ANS(MACLABEL) COL(MACLMAR);                                       30150000
*/********************************************************************/ 30200000
*/*     PUT OUT DO STATEMENT (OR COMMENT FOR LIST FORM)              */ 30250000
*/********************************************************************/ 30300000
* IVDOCMT=IVDOCMT||' MACDATE(80.122) '; /* ADD MACDATE TO COMMENT    */ 30350000
* IF MF(1) = 'L'             /* LIST FORM OF THE MACRO?              */ 31650000
*   THEN DO;                 /* YES -                                */ 31700000
*     ANS(COMMENT(IVDOCMT))  /*       PUT OUT THE INVOCATION STRING  */ 31750000
*       COL(MACCOL);         /*         AS A COMMENT.                */ 31800000
*     IF IVRC > 4            /* ANY SEVERE ERRORS?                   */ 31850000
*       THEN                 /* YES -                                */ 31860000
*         GOTO LHA99999;     /*       EXIT - NO TEXT PRODUCED.       */ 31870000
*       GOTO LHA01000;       /* NO  - PROCESS LIST FORM.             */ 31880000
*   END;                     /* END - LIST FORM SPECIFIED.           */ 31890000
*   ELSE DO;                 /* NO  - NOT THE LIST FORM.             */ 31900000
*                            /*       GENERATE THE DO STATEMENT.     */ 31910000
*     ANS('DO; '||COMMENT(IVDOCMT)) COL(MACCOL);                        31920000
*     IF IVRC > 4            /* ANY SEVERE ERRORS?                   */ 31930000
*       THEN                 /* YES -                                */ 31940000
*         GOTO LHA09000;     /*       PUT OUT END STMT AND EXIT      */ 31950000
*   END;                     /* END - NOT THE LIST FORM.             */ 31960000
*/********************************************************************/ 32100000
*/*   INDICATE EPILOG IS TO PRODUCE STANDARD SAVEAREA MAPPING.       */ 32103000
*/********************************************************************/ 32106000
* IF INDEX(EHAMAPS,'SA@')=0   /* IF SA@ MAPPING NOT PREVIOUSLY       */ 32109000
*   THEN                      /* REQUESTED THEN INDICATE REQUEST     */ 32112000
*     EHAMAPS = EHAMAPS||'SA@,'; /* NOTE: COMMAS SEPERATE REQUESTS   */ 32115000
*/********************************************************************/ 32121000
*/*   INDICATE EPILOG IS TO PROVIDE ACCESS TO XM SERVICES.           */ 32124000
*/********************************************************************/ 32127000
* IF INDEX(EHAMAPS,'XM@')=0   /* IF XM SERVICES NOT PREVIOUSLY       */ 32130000
*   THEN                      /* REQUESTED THEN INDICATE REQUEST     */ 32133000
*     EHAMAPS = EHAMAPS||'XM@,'; /* NOTE: COMMAS SEPERATE REQUESTS   */ 32136000
* IF MF(1) = 'M' THEN        /* IF MODIFY FORM OF MACRO              */ 32139000
*   GOTO LHA00800;           /* SKIP GEN OF PC LINKAGE FRONT END     */ 32142000
*/********************************************************************/ 32145000
*/*                DEFINE REGISTER NAMES                             */ 32148000
*/********************************************************************/ 32151000
* IF INDEX(EHAREGS,'00F')=0  /* REGISTER 0 PREVIOUSLY DEFINED?       */ 32154000
*   THEN                     /* NO  -                                */ 32157000
*     EHAREGS=EHAREGS||'00F';/*       DEFINE IT.                     */ 32160000
* IF INDEX(EHAREGS,'01P')=0  /* REGISTER 1 PREVIOUSLY DEFINED?       */ 32163000
*   THEN                     /* NO  -                                */ 32166000
*     EHAREGS=EHAREGS||'01P';/*       DEFINE IT.                     */ 32169000
* IF INDEX(EHAREGS,'02P')=0  /* REGISTER 2 PREVIOUSLY DEFINED?       */ 32172000
*   THEN                     /* NO  -                                */ 32175000
*     EHAREGS=EHAREGS||'02P';/*       DEFINE IT.                     */ 32178000
* IF INDEX(EHAREGS,'12P')=0  /* REGISTER 12 PREVIOUSLY DEFINED?      */ 32181000
*   THEN                     /* NO  -                                */ 32184000
*     EHAREGS=EHAREGS||'12P';/*       DEFINE IT.                     */ 32187000
* IF INDEX(EHAREGS,'13P')=0  /* REGISTER 13 PREVIOUSLY DEFINED?      */ 32190000
*   THEN                     /* NO  -                                */ 32193000
*     EHAREGS=EHAREGS||'13P';/*       DEFINE IT.                     */ 32196000
* IF INDEX(EHAREGS,'14P')=0  /* REGISTER 14 PREVIOUSLY DEFINED?      */ 32199000
*   THEN                     /* NO  -                                */ 32202000
*     EHAREGS=EHAREGS||'14P';/*       DEFINE IT.                     */ 32205000
* IF INDEX(EHAREGS,'15F')=0  /* FIXED REG 15 PREVIOUSLY DEFINED?     */ 32208000
*   THEN                     /* NO  -                                */ 32211000
*     EHAREGS=EHAREGS||'15F';/*       DEFINE IT.                     */ 32214000
*/********************************************************************/ 32217000
*/*                GENERATE LINKAGE TO ETCON SERVICE                 */ 32220000
*/********************************************************************/ 32223000
* ANS('RESPECIFY')                                COL(IVINDNT2);        32226000
* ANS('(GPR00F,')                                 COL(IVINDNT2+1);      32229000
* ANS('GPR01P,')                                  COL(IVINDNT2+2);      32232000
* ANS('GPR02P,')                                  COL(IVINDNT2+2);      32235000
* ANS('GPR13P,')                                  COL(IVINDNT2+2);      32238000
* ANS('GPR14P,')                                  COL(IVINDNT2+2);      32241000
* ANS('GPR15F) RESTRICTED;')                      COL(IVINDNT2+2);      32244000
* ANS('STM(GPR14P,GPR12P,SA@G1412);')             COL(IVINDNT2);        32247000
* ANS(COMMENT(' SAVE CALLER''S REGS            ')) COL(CC);             32250000
*/********************************************************************/ 32253000
*/*                SET UP APPROPRIATE LIST NAME                      */ 32256000
*/********************************************************************/ 32259000
*LHA00800:                                                              32262000
* IF MF ^= ''                /* MODIFY OR EXECUTE FORM OF THE MACRO? */ 32300000
*   THEN DO;                 /* YES -                                */ 32350000
*     IVLIST = MF(2);        /*       USE LIST NAME PROVIDED.        */ 32400000
*     GOTO LHA00900;         /*       EXECUTE COMMON PROCESSING.     */ 32450000
*   END;                     /* END- EXECUTE OR MODIFY FORMSPECIFIED */ 32500000
*   ELSE DO;                 /* NO - MUST BE STANDARD FORM.          */ 32550000
*                            /*      USE STANDARD LIST NAME.         */ 32600000
*    IF INDEX(EHAPCLIST,IVLIST)=0 /* STD. LIST PREVIOUSLY DEFINED?   */ 32650000
*      THEN                  /* NO  - DEFINE IT.                     */ 32700000
*        EHAPCLIST = EHAPCLIST || IVLIST;                               32750000
*   END;                     /* END- STANDARD LIST NAME TO BE USED   */ 32800000
* IF EHAMAXLEN < IVLSTLEN    /* IS THIS THE LONGEST LIST YET DEFINED?*/ 32850000
*   THEN                     /* YES -                                */ 32900000
*     EHAMAXLEN = IVLSTLEN;  /*       SET ITS LENGTH AS THE MAXIMUM. */ 32950000
* GOTO LHA00910;             /* ZERO OUT THE STANDARD LIST.          */ 33000000
*/********************************************************************/ 33100000
*/*                ZERO OUT THE LIST AND SET DEFAULTS                */ 33150000
*/*                     IF STANDARD FORM                             */ 33200000
*/*                  OR IF MODIFY OR EXECUTE FORM WITH 'COMPLETE'    */ 33250000
*/********************************************************************/ 33300000
*LHA00900:                                                              33400000
* IF MF(3) = ''              /* WAS 'COMPLETE' SPECIFIED?            */ 33450000
*   THEN                     /* NO  -                                */ 33500000
*     GOTO LHA00920;         /*       DO NOT ZERO THE LIST.          */ 33550000
*LHA00910:                   /* YES - ZERO THE LIST.                 */ 33600000
*/*  MAINTENANCE NOTE: THE '00' AND '20' FIELDS ARE AUTOMATICALLY    */ 33650000
*/*                    INITIALIZED TO THEIR DEFAULT VALUES OF ZERO   */ 33700000
*/*                    VIA THE ZEROING OF THE LIST. IF THE DEFAULTS  */ 33750000
*/*                    BECOME NON-ZERO ADDITIONAL STMTS SHOULD BE    */ 33800000
*/*                    INSERTED HERE.                                */ 33850000
* ANS(IVLIST||'='||IVLIST||'&&'||IVLIST||'; ')      COL(IVINDNT2);      33900000
* ANS(COMMENT(' ZERO THE LIST                 '))   COL(CC);            33950000
*/********************************************************************/ 34000000
*/*                ASSIGN VALUES TO LIST ITEMS                       */ 34050000
*/********************************************************************/ 34100000
*LHA00920:                                                              34200000
* IF TKLIST = ''             /* IF TKLIST KEYWORD NOT SPECIFIED      */ 34250000
*   THEN GOTO LHA00930;                                                 34300000
* IF IVLP1 ^= 1              /* IF NOT POINTER FORM ADDRESS  @ZMB0031*/ 34350000
*   THEN DO;                                                            34400000
*     ANS(IVLIST||'22=ADDR('||TKLIST(1)||');')         COL(IVINDNT2);   34450000
*     ANS(COMMENT(' SET TKLIST ADDRESS           '))   COL(CC);         34480000
*   END;                                                                34550000
*   ELSE DO;                                                            34600000
*     ANS(IVLIST||'22='||TKLIST(1,IVLP1+1:IVRP1-1)||';')                34650000
*                                                      COL(IVINDNT2);   34700000
*     ANS(COMMENT(' SET TKLIST ADDRESS           '))   COL(CC);         34750000
*   END;                                                                34800000
*LHA00930:                                                              34850000
* IF LXLIST = ''             /* IF LXLIST KEYWORD NOT SPECIFIED      */ 34900000
*   THEN GOTO LHA00940;                                                 34950000
* IF IVLP2 ^= 1              /* IF NOT POINTER FORM ADDRESS  @ZMB0031*/ 35000000
*   THEN DO;                                                            35050000
*     ANS(IVLIST||'23=ADDR('||LXLIST(1)||'); ')       COL(IVINDNT2);    35100000
*     ANS(COMMENT(' SET LXLIST ADDRESS             ')) COL(CC);         35150000
*   END;                                                                35200000
*   ELSE DO;                                                            35250000
*     ANS(IVLIST||'23='||LXLIST(1,IVLP2+1:IVRP2-1)||';')                35300000
*                                                     COL(IVINDNT2);    35350000
*     ANS(COMMENT(' SET LXLIST ADDRESS             ')) COL(CC);         35400000
*   END;                                                                35450000
*LHA00940:                                                              35500000
* IF MF(1) = 'M'             /* IF MODIFY FORM OF MACRO              */ 35550000
*   THEN                     /* YES -                                */ 35600000
*     GOTO LHA09000;         /*       DO NOT GENERATE PC LINKAGE     */ 35650000
*/********************************************************************/ 35700000
*/*         BALANCE OF PC LINKAGE                                    */ 35750000
*/********************************************************************/ 35800000
* ANS('GPR01P=ADDR('||IVLIST||'); ')              COL(IVINDNT2);        35850000
* ANS(COMMENT(' ETCON PARAMETER LIST ADDRESS  ')) COL(CC);              35900000
* ANS('ESAR(SA@GPR15);')                          COL(IVINDNT2);        35916600
* ANS(COMMENT('SAVE SASID                     ')) COL(CC);              35933200
* ANS('GPR02P=XM@(5);')                           COL(IVINDNT2);        35950000
* ANS(COMMENT(' GET LX/EX FOR ETCON FROM SFT  ')) COL(CC);              36000000
* ANS('GEN (DS 0H);') COL(IVINDNT2);  /* MAKE PL/AS USE SAVEAREA @P1A*/ 36025000
* ANS('PC(GPR02P);')                              COL(IVINDNT2);        36050000
* ANS(COMMENT(' PC TO ETCON SERVICE           ')) COL(CC);              36100000
* ANS('SSAR(SA@GPR15);')                          COL(IVINDNT2);        36116600
* ANS(COMMENT('RESTORE SASID                  ')) COL(CC);              36133200
* ANS('LM(GPR02P,GPR12P,SA@G0212);')              COL(IVINDNT2);        36150000
* ANS(COMMENT(' RESTORE REGS 2-12             ')) COL(CC);              36200000
* ANS('GPR14P=SA@GPR14;')                         COL(IVINDNT2);        36250000
* ANS(COMMENT(' RESTORE REG 14                ')) COL(CC);              36300000
* ANS('RESPECIFY')                                COL(IVINDNT2);        38150000
* ANS('(GPR00F,')                                 COL(IVINDNT2+1);      38200000
* ANS('GPR01P,')                                  COL(IVINDNT2+2);      38250000
* ANS('GPR02P,')                                  COL(IVINDNT2+2);      38270000
* ANS('GPR13P,')                                  COL(IVINDNT2+2);      38300000
* ANS('GPR14P,')                                  COL(IVINDNT2+2);      38350000
* ANS('GPR15F) UNRESTRICTED;')                    COL(IVINDNT2+2);      38400000
*                                                                       38450000
*LHA09000:                   /* CLOSE OUT DO GROUP.                  */ 38500000
* ANS('END; '||COMMENT(IVDOCMT)) COL(MACCOL);                           38550000
* GOTO LHA99999;             /* RETURN TO INVOKER                    */ 38600000
*/********************************************************************/ 38650000
*/*                PROCESS LIST-FORM                                 */ 38700000
*/********************************************************************/ 38750000
*LHA01000:                                                              38850000
*                            /* PUT LIST-NAME IN AHAETCON MACLIST(1) */ 38900000
* IVLFORM = IVLFORM||MF(2)||',';                                        38950000
* IF MF(3) ^= ''             /* WERE LIST ATTRIBUTES SPECIFIED?      */ 39000000
*   THEN                     /* YES - PUT THEM IN AHAETCON MACLIST(2)*/ 39050000
*     IVLFORM = IVLFORM||MF(3)||',';                                    39100000
*   ELSE                     /* NO  -                                */ 39150000
*     IVLFORM = IVLFORM||',';/* INDICATE NO MF(3) LIST ATTRIBUTES    */ 39200000
*     IVLFORM = IVLFORM||',';       /* INDICATE NO OPTIONS TO INIT.  */ 39250000
* IF TKLIST ^= ''            /* IF TKLIST WAS SPECIFIED              */ 39350000
*   THEN                     /* SET VALUE IN MACLIST(4)              */ 39400000
*     IVLFORM = IVLFORM||TKLIST(1)||',';                                39450000
*   ELSE                     /* INDICATE NO TKLIST OPTION IN MACLIST*/  39500000
*     IVLFORM = IVLFORM||',';                                           39550000
* IF LXLIST ^= ''            /* IF LXLIST WAS SPECIFIED              */ 39650000
*   THEN                     /* SET VALUE IN MACLIST(5)              */ 39700000
*     IVLFORM = IVLFORM||LXLIST(1);                                     39750000
*   ELSE;                    /* NO LXLIST OPTION IN MACLIST          */ 39800000
* ANS(IVLFORM||');');        /* INVOKE LIST MACRO (AHAETCON).        */ 39850000
*/********************************************************************/ 39900000
*/*                RETURN                                            */ 39950000
*/********************************************************************/ 40000000
*LHA99999:                                                              40200000
* RETURN CODE(IVRC);                                                    40250000
*/********************************************************************/ 40300000
*/*                END OF ETCON MACRO                                */ 40350000
*/********************************************************************/ 40400000
* % END ETCON;                                                          40450013
