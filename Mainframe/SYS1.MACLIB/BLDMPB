*/***START OF SPECIFICATIONS******************************************/ 00050000
*/* $MAC(BLDMPB) COMP(SCMMMS) PROD(HBB4410): MMS Build MPB header    */ 00100000
*/*                                                                  */ 00150000
*/*01* MACRO NAME       =   BLDMPB                               @L1C*/ 00200000
*/*                                                                  */ 00250000
*/*01* DESCRIPTIVE NAME =                                            */ 00283300
*/*                 MMS - (MVS Message Service) Build MPB macro      */ 00316600
*/*                                                                  */ 00350000
*/*    PROPRIETARY STATEMENT =                                       */ 00400000
*/*                                                                  */ 00450000
*/*    LICENSED MATERIALS - PROPERTY OF IBM                          */ 00490000
*/*    THIS MACRO IS "RESTRICTED MATERIALS OF IBM"                   */ 00530000
*/*    5695-047 (C) COPYRIGHT IBM CORP. 1990                         */ 00570000
*/*    SEE COPYRIGHT INSTRUCTIONS.                                   */ 00610000
*/*                                                                  */ 00650000
*/*    STATUS           =  HBB4410                                   */ 00700000
*/*                                                                  */ 00750000
*/*01* FUNCTION      =  This macro generates executable in-line      */ 00800000
*/*                     assembler code to build the fixed section    */ 00850000
*/*                     and message header block of a Message        */ 00900000
*/*                     Parameter Block (MPB) and return the MPB     */ 00950000
*/*                     without substitution blocks.                 */ 01000000
*/*                                                                  */ 01050000
*/*01* OPERATION     =  BLDMPB is invoked with details of the    @L1C*/ 01100000
*/*                     storage allocated for the MPB and message    */ 01150000
*/*                     key data.                                    */ 01200000
*/*                                                                  */ 01250000
*/*                     It generates code to initialize the MPB and  */ 01300000
*/*                     insert the supplied parameters into the MPB  */ 01350000
*/*                     fixed section and the message header block   */ 01400000
*/*                     of the MPB.                                  */ 01450000
*/*                                                                  */ 01500000
*/*                     Upon return from the build MPB function,     */ 01550000
*/*                     registers 2-13 are preserved. Register 15    */ 01600000
*/*                     contains the return code and register 0      */ 01650000
*/*                     contains the reason code. Registers 1 and 14 */ 01700000
*/*                     are unpredictable.                           */ 01750000
*/*                                                                  */ 01800000
*/*01* INVOCATION    =                                               */ 01850000
*/*                                                                  */ 01900000
*/*      MACRO SYNTAX                                                */ 01950000
*/*                                                                  */ 02000000
*/*      < > Optional Parameter                                      */ 02050000
*/*       |  Alternative Item                                        */ 02100000
*/*                                                                  */ 02150000
*/*      BLDMPB    MPBPTR=mpb address                                */ 02200000
*/*               ,MPBLEN=mpb length                                 */ 02250000
*/*               ,MSGID=message id                                  */ 02300000
*/*               <,MSGIDLEN=msgid length  >                         */ 02350000
*/*               <,MSGFMTNM=format number >                         */ 02400000
*/*               <,MSGLNNM=line number    >                     @L1C*/ 02450000
*/*                                                                  */ 02500000
*/*      MPBPTR  : RX-type address or register (2) - (12).           */ 02550000
*/*                Specifies a fullword, or register, containing the */ 02600000
*/*                address of the area where this macro is to build  */ 02650000
*/*                the MPB.                                          */ 02700000
*/*      MPBLEN  : RX-type address or register (2) - (12).           */ 02750000
*/*                Specifies a fullword, or register, containing the */ 02800000
*/*                length of the area addressed by MPBPTR.           */ 02850000
*/*      MSGID   : RX-type address or register (2) - (12).           */ 02900000
*/*                Specifies an area, or register pointing to an     */ 02950000
*/*                area, containing the message id.                  */ 03000000
*/*      MSGIDLEN: RX-type address or register (2) - (12).           */ 03050000
*/*                Specifies a fullword, or register, containing the */ 03100000
*/*                length of the MSGID field. If not specified, it   */ 03150000
*/*                will default to the assembled length of the MSGID */ 03200000
*/*                parameter. Must be specified if register notation */ 03250000
*/*                is used for the MSGID parameter.                  */ 03300000
*/*      MSGFMTNM: RX-type address or register (2) - (12).           */ 03350000
*/*                Specifies an area, or register pointing to an     */ 03400000
*/*                area, containing the 3-byte message format number.*/ 03450000
*/*                If not specified, defaults to blank.              */ 03500000
*/*      MSGLNNM : RX-type address or register (2) - (12).           */ 03550000
*/*                Specifies an area, or register pointing to an     */ 03600000
*/*                area, containing the 2-byte message line number.  */ 03650000
*/*                If not specified, defaults to blank.              */ 03700000
*/*                                                                  */ 03750000
*/*01* USAGE         =  MVS Message Service caller                   */ 03800000
*/*                                                                  */ 03850000
*/*01* AUTHORIZATION      = ANY                                      */ 03862500
*/*                                                                  */ 03875000
*/*01* DISPATCHABLE UNIT MODE = TASK, SRB                            */ 03879100
*/*                                                                  */ 03883200
*/*01* CROSS-MEMORY MODE  = PASN not equal HASN is supported         */ 03887500
*/*                                                                  */ 03900000
*/*01* AMODE              = ANY                                      */ 03912500
*/*                                                                  */ 03925000
*/*01* ASC MODE           = PRIMARY                                  */ 03929100
*/*                                                                  */ 03933200
*/*01* SERIALIZATION      = None                                     */ 03937500
*/*                                                                  */ 03950000
*/*01* CONTROL PARAMETERS = None                                     */ 03962500
*/*                                                                  */ 03975000
*/*01* DEPENDENCIES  =  The invoking module must include the CNLMMPB */ 03987500
*/*                     mapping macro.                               */ 04000000
*/*                                                                  */ 04050000
*/*01* RETURN CODES  =  Normal                                       */ 04100000
*/*                       -     R15 = 0 and R0 = 0                   */ 04150000
*/*                     Severe                                       */ 04200000
*/*                       - MPB is too small                         */ 04250000
*/*                             R15 = 12 and R0 = 51                 */ 04300000
*/*                       - MSGIDLEN is zero or negative             */ 04350000
*/*                             R15 = 12 and R0 = 52                 */ 04400000
*/*                                                                  */ 04450000
*/*01* MODULE TYPE   =  ASSEMBLER MACRO                              */ 04500000
*/*                                                                  */ 04550000
*/*01* COMPONENT     =  SCMMS                                        */ 04600000
*/*                                                                  */ 04650000
*/*01* DISTRIBUTION LIBRARY = AMACLIB                                */ 04700000
*/*                                                                  */ 04750000
*/*01* CHANGE ACTIVITY  =                                            */ 04800000
*/*                                                                  */ 04850000
*/* Code Reason   FMID    Date  Origin  Comments                     */ 04900000
*/* ---- ------- ------- ------ ------  ---------------------------- */ 04950000
*/* $L0= MMS     HBB4410 890401 STOW:   Original Code                */ 04983300
*/* $L1= MMS     HBB4410 890627 PDDH:   Rework for SP4.1.0           */ 05016600
*/*                                                                  */ 05050000
*/*                                                                  */ 05100000
*/*01* MESSAGES         =                                            */ 05150000
*/*                                                                  */ 05200000
*/*     The BLDMPB macro will issue the following MNOTEs             */ 05250000
*/*     upon detection of syntax errors:                         @L1C*/ 05300000
*/*                                                                  */ 05350000
*/*      ERROR (severity 4) =                                        */ 05400000
*/*        POSITIONAL PARAMETER "xxxxxxxx" IS INVALID                */ 05450000
*/*                                                                  */ 05500000
*/*      ERROR (severity 12) =                                       */ 05550000
*/*        MPBPTR OPERAND IS INVALID OR MISSING, NO TEXT IS          */ 05600000
*/*               GENERATED.                                         */ 05650000
*/*        MPBLEN OPERAND IS INVALID OR MISSING, NO TEXT IS          */ 05700000
*/*               GENERATED.                                         */ 05750000
*/*        MSGID OPERAND IS INVALID OR MISSING, NO TEXT IS           */ 05800000
*/*               GENERATED.                                         */ 05850000
*/*        MSGIDLEN OPERAND IS INVALID OR MISSING, NO TEXT IS        */ 05900000
*/*               GENERATED.                                         */ 05950000
*/*        MSGFMTNM OPERAND IS INVALID, NO TEXT IS GENERATED.        */ 06000000
*/*        MSGLNNM OPERAND IS INVALID, NO TEXT IS GENERATED.         */ 06050000
*/*                                                                  */ 06100000
*/*                                                                  */ 06150000
*/***END OF SPECIFICATIONS********************************************/ 06200000
* %/*                                                                   06250000
* %/*                                                                   06300000
         MACRO                                                          06350000
&LABEL   BLDMPB &MPBPTR=,                                              -06400000
               &MPBLEN=,                                               -06450000
               &MSGID=,                                                -06500000
               &MSGIDLEN=,                                             -06550000
               &MSGFMTNM=,                                             -06600000
               &MSGLNNM=                                                06650000
.********************************************************************** 06700000
.*                                                                    * 06750000
.*      DECLARE LOCAL VARIABLES                                       * 06800000
.*                                                                    * 06850000
.********************************************************************** 06900000
        LCLB  &ERROR        ERROR FLAG                                  06950000
        LCLC  &MPB_ACRONYM  MPB ACRONYM                                 07000000
        LCLC  &GNAME        INTERNAL LABEL                              07050000
        LCLC  &NOTEXT       MNOTE PHRASE 'NO TEXT IS GENERATED.'        07100000
        LCLC  &ERRMSG1      MNOTE PHRASE                                07150000
        LCLC  &ERRMSG2      MNOTE PHRASE                                07200000
.********************************************************************** 07250000
.*                                                                    * 07300000
.*      INITIALIZE MACRO VARIABLES                                    * 07350000
.*                                                                    * 07400000
.********************************************************************** 07450000
&ERRMSG1      SETC  'OPERAND IS INVALID OR MISSING,'                    07500000
&ERRMSG2      SETC  'OPERAND IS INVALID,'                               07550000
&NOTEXT       SETC  'NO TEXT IS GENERATED.'                             07600000
&MPB_ACRONYM  SETC  'MPB '                                              07650000
&GNAME        SETC  'CNL'.'&SYSNDX'     SET LABEL NAME                  07700000
.*                                                                      07750000
.********************************************************************** 07800000
.*             CHECK VALIDITY OF MACRO OPERANDS                       * 07850000
.********************************************************************** 07900000
.*                                                                      07950000
         AIF   (N'&SYSLIST EQ 0).CKPTR  TOO MANY POSITIONAL PARMS       08000000
         MNOTE 4,'POSITIONAL PARAMETER "&SYSLIST(1)" IS INVALID'        08050000
.CKPTR   ANOP                                                           08100000
         AIF   (N'&MPBPTR EQ 1).CKLEN      IS MPBPTR SPECIFIED ?        08150000
         MNOTE 12,'MPBPTR &ERRMSG1 &NOTEXT'                             08200000
&ERROR   SETB  1                                                        08250000
.CKLEN   AIF   (N'&MPBLEN EQ 1).CKMSGID    IS MPBLEN SPECIFIED ?        08300000
         MNOTE 12,'MPBLEN &ERRMSG1 &NOTEXT'                             08350000
&ERROR   SETB  1                                                        08400000
.CKMSGID AIF   (N'&MSGID EQ 1).CKIDLEN     IS MSGID SPECIFIED ?         08450000
         MNOTE 12,'MSGID &ERRMSG1 &NOTEXT'                              08500000
&ERROR   SETB  1                                                        08550000
.CKIDLEN AIF   (N'&MSGIDLEN EQ 1).CKFMTNM  IS MSGIDLEN SPECIFIED ?      08600000
         AIF   (N'&MSGIDLEN EQ 0 AND '&MSGID'(1,1) NE '(').CKFMTNM      08650000
.*              << MSGIDLEN MAY BE OMITTED IF MSGID NOT = REGISTER >>   08700000
         MNOTE 12,'MSGIDLEN &ERRMSG1 &NOTEXT'                           08750000
&ERROR   SETB  1                                                        08800000
.CKFMTNM AIF   (N'&MSGFMTNM LT 2).CKLNNM                                08850000
         MNOTE 12,'MSGFMTNM &ERRMSG2 &NOTEXT'                           08900000
&ERROR   SETB  1                                                        08950000
.CKLNNM  AIF   (N'&MSGLNNM LT 2).CHECKER                                09000000
         MNOTE 12,'MSGLNNM &ERRMSG2 &NOTEXT'                            09050000
&ERROR   SETB  1                                                        09100000
.CHECKER AIF   (&ERROR EQ 0).GENCODE                                    09150000
         MEXIT                                                          09200000
.********************************************************************** 09250000
.* GENERATE ASSEMBLER CODE IF NO SYNTAX ERROR                         * 09300000
.********************************************************************** 09350000
.GENCODE ANOP                                                           09400000
         SPACE 1                                                        09450000
*--------------------- BLDMPB START ---------------------------------   09500000
&LABEL   DS    0H                                                       09550000
.********************************************************************** 09600000
.* GET MPBLEN AND VERIFY THAT THE MPBLEN IS LARGE ENOUGH TO STORE THE * 09650000
.* MESSAGE                                                            * 09700000
.********************************************************************** 09750000
         AIF   ('&MPBLEN'(1,1) EQ '(').GLENR                            09800000
         L     14,&MPBLEN              R14 = MPBLEN                     09850000
         AGO   .GETLEN                                                  09900000
.GLENR   LR    14,&MPBLEN(1)           R14 = MPBLEN                     09950000
.GETLEN  AIF   (N'&MSGIDLEN GT 0).GETLEN2   MSGIDLEN WAS SPECIFIED      10000000
         LA    15,L'&MSGID             MSGIDLEN DEFAULT VALUE           10050000
         AGO   .CHKLEN2                                                 10100000
.GETLEN2 AIF   ('&MSGIDLEN'(1,1) EQ '(').GIDLENR                        10150000
         L     15,&MSGIDLEN            R15 = MSGIDLEN                   10200000
         LTR   15,15                                                    10250000
         AGO   .CHKLEN                                                  10300000
.GIDLENR LTR   15,&MSGIDLEN(1)         R15 = MSGIDLEN                   10350000
.CHKLEN  BNP   &GNAME.B                BRANCH IF INVALID MSGIDLEN       10400000
.CHKLEN2 LA    1,MPBVDAT-MPB+MPBMID-MPBMSG(,15)                         10450000
         CR    14,1                    BRANCH IF MPBLEN < MSGIDLEN +    10500000
         BL    &GNAME.A                  OFF(MPBVDAT) + OFF(MPBMSG)     10550000
         AIF   ('&MPBPTR'(1,1) EQ '(').GPTRR                            10600000
         L     1,&MPBPTR               R1  -> MPB                       10650000
         AGO   .GINIT                                                   10700000
.GPTRR   LR    1,&MPBPTR(1)            R1  -> MPB                       10750000
.********************************************************************** 10800000
.* INITIALIZE MPB                                                     * 10850000
.********************************************************************** 10900000
.GINIT   XC    0(MPBVDAT-MPB,1),0(1)   CLEAR MPB FIXED PORTION          10950000
         MVC   MPBACRN-MPB(L'MPBACRN,1),=C'&MPB_ACRONYM'                11000000
         MVI   MPBVRSN-MPB(1),$MPB_VERSION                              11050000
.********************************************************************** 11100000
.* INITIALIZE MPB FIXED PORTION                                       * 11150000
.********************************************************************** 11200000
         LA    0,MPBMID-MPBMSG(,15)    MPBVDATL = MSGIDLEN +            11250000
         ST    0,MPBVDATL-MPB(,1)                 OFFSET(MPBMID)        11300000
         LA    0,MPBVDAT-MPB                                            11350000
         ST    0,MPBOFFST-MPB(,1)      MPBOFFST = OFFSET(MPBVDAT)       11400000
         AL    0,MPBVDATL-MPB(,1)                                       11450000
         ST    0,MPBSIZE-MPB(,1)       MPBSIZE  = MPBVDATL + MPBOFFST   11500000
         LA    1,MPBVDAT-MPB(,1)       R1 -> MPBMSG                     11550000
.********************************************************************** 11600000
.* BUILD MPBMSG                                                       * 11650000
.********************************************************************** 11700000
         XC    0(MPBMID-MPBMSG,1),0(1) INIT MPBMSG TO HEX ZERO          11750000
         ST    15,MPBMIDL-MPBMSG(,1)   SET LENGTH OF MESSAGE ID         11800000
.********************************************************************** 11850000
.* COPY MSGID TO MPBMID                                               * 11900000
.********************************************************************** 11950000
         AIF   ('&MSGID'(1,1) EQ '(').GMSGIDR                           12000000
         LA    14,&MSGID               R14 -> MSGID                     12050000
         AGO   .MOVEMSG                                                 12100000
.GMSGIDR LR    14,&MSGID(1)            R14 -> MSGID                     12150000
.MOVEMSG BCTR  15,0                    DECREMENT ONE FOR EXECUTE        12200000
         EX    15,&GNAME.M             SET MPBMID = MSG_ID              12250000
.********************************************************************** 12300000
.* CLEAR MPBSBCNT                                                     * 12350000
.********************************************************************** 12400000
&GNAME.S XC    MPBSBCNT-MPBMSG(L'MPBSBCNT,1),MPBSBCNT-MPBMSG(1)         12450000
.********************************************************************** 12500000
.* COPY MSGFMTNM TO MPBFMTNM                                          * 12550000
.********************************************************************** 12600000
         AIF   (N'&MSGFMTNM EQ 0).DFMTNM  TAKE DEFAULT IF NULL STRING   12650000
         AIF   ('&MSGFMTNM'(1,1) EQ '(').GFMTNMR                        12700000
         MVC   MPBFMTNM-MPBMSG(L'MPBFMTNM,1),&MSGFMTNM                  12750000
         AGO   .GLNNM                                                   12800000
.GFMTNMR MVC   MPBFMTNM-MPBMSG(L'MPBFMTNM,1),0&MSGFMTNM                 12850000
         AGO   .GLNNM                                                   12900000
.DFMTNM  MVI   MPBFMTNM-MPBMSG(1),C' ' SET MPBFMTNM TO BLANK            12950000
         MVC   MPBFMTNM-MPBMSG+1(L'MPBFMTNM-1,1),MPBFMTNM-MPBMSG(1)     13000000
.********************************************************************** 13050000
.* COPY MSGLNNM  TO MPBLNNM                                           * 13100000
.********************************************************************** 13150000
.GLNNM   AIF   (N'&MSGLNNM EQ 0).DLNNM  TAKE DEFAULT IF NULL STRING     13200000
         AIF   ('&MSGLNNM'(1,1) EQ '(').GLNNMR                          13250000
         MVC   MPBLNNM-MPBMSG(L'MPBLNNM,1),&MSGLNNM   MPBLNNM = MSGLNNM 13300000
         AGO   .SETRC                                                   13350000
.GLNNMR  MVC   MPBLNNM-MPBMSG(L'MPBLNNM,1),0&MSGLNNM  MPBLNNM = MSGLNNM 13400000
         AGO   .SETRC                                                   13450000
.DLNNM   MVI   MPBLNNM-MPBMSG(1),C' '  SET MPBLNNM TO BLANK             13500000
         MVC   MPBLNNM-MPBMSG+1(L'MPBLNNM-1,1),MPBLNNM-MPBMSG(1)        13550000
.********************************************************************** 13600000
.* SET RETURN AND REASON CODE TO ZERO AND EXIT                        * 13650000
.********************************************************************** 13700000
.SETRC   XR    15,15                   SET RETURN CODE AND              13750000
         XR    0,0                         REASON CODE TO ZERO          13800000
         B     &GNAME.X                EXIT                             13850000
&GNAME.M MVC   MPBMID-MPBMSG(0,1),0(14)   USED BY EXECUTE               13900000
.********************************************************************** 13950000
.* SET RETURN AND REASON CODE TO SEVERE                               * 14000000
.********************************************************************** 14050000
&GNAME.A LA    0,51                    MPB IS TOO SMALL                 14100000
         AIF   (N'&MSGIDLEN EQ 0).SKIPA   MSGIDLEN WAS NOT SPECIFIED    14150000
         B     &GNAME.C                                                 14200000
&GNAME.B LA    0,52                    MSGIDLEN IS INVALID              14250000
.SKIPA   ANOP                                                           14300000
&GNAME.C LA    15,12                   SET SEVERE RETURN CODE           14350000
&GNAME.X DS    0H                                                       14400000
*--------------------- BLDMPB END -----------------------------------   14450000
         SPACE 1                                                        14500000
         MEND                                                           14550000
* */ BLDMPB: MACRO                                                      14600000
* KEYS(MPBPTR,MPBLEN,MSGID,MSGIDLEN,MSGFMTNM,MSGLNNM);                  14650000
*          ANS('?'||MACLABEL||'BLDMPBP '||MACLIST||MACKEYS||';');       14700000
*%     END BLDMPB;                                                      14750000
