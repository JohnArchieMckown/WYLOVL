* %/*                                                                   00050000
         MACRO                                                          00100000
&NAME    VRADATA &VRAINIT=,&SDWAREG=,&VRAREG=,&WORKREG=,&TYPE=TEST,    X00150000
               &VRACLEN=,&VRAMLEN=,&KEY=,&DATA=,&LEN=,&LENADDR=         00200000
.********************************************************************** 00250000
.*                                                                      00300000
.*  MACRO NAME = VRADATA                                                00350000
.*                                                                      00400000
.*  DESCRIPTIVE NAME = UPDATE VARIABLE RECORDING AREA DATA              00450000
.*                                                                      00500000
.* COPYRIGHT =                                                          00533300
.*             5685-001                                                 00566600
.*             THIS MODULE IS "RESTRICTED MATERIALS OF IBM"             00600000
.*             (C) COPYRIGHT IBM CORP. 1980,1988                        00650000
.*             LICENSED MATERIALS - PROPERTY OF IBM                     00700000
.*                                                                      00850000
.*  STATUS = HBB3310                                                    00900000
.*                                                                      00950000
.*  NOTES=                                                              01000000
.*      IF THE DEFAULT VALUES ARE NOT WANTED, THE CALLER MUST           01050000
.*      REQUEST VRAINIT ON THE FIRST VRADATA MACRO THAT THE             01100000
.*      ASSEMBLER FINDS IN THE MODULE, SINCE THE MODULE COULD HAVE      01150000
.*      SEVERAL SUBROUTINES, WITH THE FIRST SUBROUTINE EXECUTED         01200000
.*      NOT THE FIRST ONE IN THE MODULE.                                01250000
.*                                                                      01300000
.*  USAGE =                                                             01350000
.*      SPECIFY THE VRAINIT KEYWORD TO REQUEST INITIALIZATION. (THE     01400000
.*      SDWAVRAM AND SDWAHEX BITS WILL BE SET IF THE VRA IS IN THE      01450000
.*      SDWA.)                                                          01500000
.*                                                                      01550000
.*      VRACLEN MUST BE A ONE BYTE FIELD, IF SPECIFIED.                 01600000
.*      VRAMLEN MUST BE A HALFWORD FIELD, IF SPECIFIED.                 01650000
.*                                                                      01700000
.*  DESIGN NOTES =                                                      01750000
.*      DON'T ZERO SDWAURAL WHEN INITIALIZE SINCE RTM ZEROES IT         01800000
.*      BEFORE INVOKING A RECOVERY ROUTINE, PLUS SOME RECOVERY          01850000
.*      ROUTINES INVOKE ADDITIONAL MODULES, WHICH MAY FILL IN           01900000
.*      ADDITIONAL VRA FIELDS USING THE VRADATA MACRO WITH THE          01950000
.*      VRAINIT KEYWORD.                                                02000000
.*                                                                      02050000
.*  CHANGE ACTIVITY =                                                   02100000
.*      NEW FOR OS/VS2 JBB1226                        @G389P11,@G380P11 02150000
.*      $L1 =    AR    HBB3310 850901 PDXB: AR SUPPORT                  02200000
.*      @01 = OW08469  HBB4420 941005 PDKD: Ensure that SDWAVRAM and    02212500
.*                                          SDWAHEX get set for VRAINIT 02225000
.*                                          defaulting             @01A 02237500
.*                                                                      02250000
.********************************************************************** 02300000
.*A-000000-999999                                              @G389P11 02350000
.*                                                                      02400000
.*       DEFINE GLOBAL MACRO VARIABLES                                  02450000
.*       *****************************                                  02500000
.*                                                                      02550000
         GBLC  &IHBVRAB                USE TO REMEMBER VRAINIT VALUE    02600000
         GBLC  &IHBVRAC                USE TO REMEMBER VRACLEN VALUE    02650000
         GBLC  &IHBVRAM                USE TO REMEMBER VRAMLEN VALUE    02700000
         GBLC  &IHBVRAS                USE TO REMEMBER SDWAREG VALUE    02750000
         GBLC  &IHBVRAV                USE TO REMEMBER VRAREG VALUE     02800000
         GBLC  &IHBVRAW                USE TO REMEMBER WORKREG VALUE    02850000
         GBLB  &IHBVRAL                USE TO REMEMBER PREVIOUS 'NOLEN' 02900000
.*                                                                      02950000
.*       DEFINE LOCAL MACRO VARIABLES                                   03000000
.*       ****************************                                   03050000
.*                                                                      03100000
         LCLC  &VRABEG                 LOCAL COPY OF &IHBVRAB VALUE     03150000
         LCLC  &CLEN                   LOCAL COPY OF &IHBVRAC VALUE     03200000
         LCLC  &MLEN                   LOCAL COPY OF &IHBVRAM VALUE     03250000
         LCLC  &QUAL                   WILL BE '-SDWA' OR DEFAULT OF '' 03300000
         LCLC  &DATLEN                 LOCAL COPY OF &LEN VALUE         03350000
.*                                      OR A MODIFIED VALUE             03400000
         LCLC  &DATVAL                 LOCAL COPY OF &DATA VALUE        03450000
.*                                      OR A MODIFIED VALUE             03500000
         LCLC  &RS                     LOCAL COPY OF &SDWAREG           03550000
         LCLC  &RV                     LOCAL COPY OF &VRAREG            03600000
         LCLC  &RW                     LOCAL COPY OF &WORKREG           03650000
         LCLC  &TEMPL                  USE FOR SHORTER LABEL NAME       03700000
         LCLC  &TEMPLN1                USE WHEN UPDATE VRAREG           03750000
         LCLC  &TEMPLN2                USE WHEN UPDATE VRAREG           03800000
         LCLC  &TEMP                   USE TO SIMPLIFY GENERATING CODE  03850000
.*                                      (SO GET COMMENTS IN PROPER      03900000
.*                                      COLUMN)                         03950000
         LCLB  &DIDLEN                 SET ON IF SET LEN EARLY          04000000
         LCLB  &SET                    SET ON IF VRAREG=(,SET) ON MACRO 04050000
         LCLB  &NOTSET                 SET ON IF VRAREG=(,NOTSET)       04100000
         LCLB  &NOTEST                 SET ON IF TYPE=(NOTEST) ON MACRO 04150000
         LCLB  &NOLEN                  SET ON IF TYPE=(NOLEN)  ON MACRO 04200000
         LCLB  &REGINIT                SET ON IF GENERATED INSTRUCTIONS 04250000
.*                                      TO INIT VRAREG AND WORKREG      04300000
.*                                      DURING VRAINIT LOGIC            04350000
         LCLB  &DFINIT                 SET ON IF FIRST VRADATA MACRO    04400000
.*                                      INVOKED IN A MODULE AND NO      04450000
.*                                      VRAINIT (DEFAULT TO INIT)       04500000
         LCLC  &LA                      "LA" OR "LAE" VIA SYSSTATE @L1A 04550000
         GBLC  &SYSASCE                                            @L1A 04600000
         SYSSTATE TEST                  TEST ASC ENVIRONMENT       @L1A 04650000
&LA      SETC  'LA'                     MUST USE LA INSTRUCTION    @L1A 04700000
         AIF   ('&SYSASCE' EQ 'P').NOLAE                           @L1A 04750000
&LA      SETC  'LAE'                    MUST USE LAE               @L1A 04800000
.NOLAE   ANOP                                                      @L1A 04850000
.*                                                                      04900000
.*       INITIALIZE GLOBAL VARIABLES                                    04950000
.*       ***************************                                    05000000
.*                                                                      05050000
.*       INITIALIZE THE SDWAREG VALUE                                   05100000
         AIF   ('&SDWAREG' EQ '').NOSDWAR IF NO SDWAREG SPECIFIED, SKIP 05250000
&IHBVRAS SETC  '&SDWAREG'              SET VALUE FOR LATER MACROS       05300000
         AGO   .INITV                                                   05350000
.NOSDWAR ANOP                          LOGIC FOR NO SDWAREG SPECIFIED   05400000
         AIF   ('&IHBVRAS' NE '').INITV  IF HAD PREVIOUS VRADATA, SKIP  05450000
&IHBVRAS SETC  '1'                     SET DEFAULT FOR LATER MACROS     05500000
.INITV   ANOP                                                           05550000
.*                                                                      05600000
.*       INITIALIZE THE VRAREG VALUE                                    05650000
         AIF   ('&VRAREG(1)' EQ '').NOVRAR  IF NO VRAREG SPECIFIED,     05700000
.*                                      SKIP                            05750000
&IHBVRAV SETC  '&VRAREG(1)'            SET VALUE FOR LATER MACROS       05800000
         AGO   .INITW                                                   05850000
.NOVRAR  ANOP                          LOGIC FOR NO VRAREG SPECIFIED    05900000
         AIF   ('&IHBVRAV' NE '').INITW  IF HAD PREVIOUS VRADATA, SKIP  05950000
&IHBVRAV SETC  '14'                    SET DEFAULT FOR LATER MACROS     06000000
.INITW   ANOP                                                           06050000
.*                                                                      06100000
.*       INITIALIZE THE WORKREG VALUE                                   06150000
         AIF   ('&WORKREG' EQ '').NOWORKR  IF NO WORKREG SPEC'D, SKIP   06200000
&IHBVRAW SETC  '&WORKREG'              SET VALUE FOR LATER MACROS       06250000
         AGO   .INITB                                                   06300000
.NOWORKR ANOP                          LOGIC FOR NO WORKREG SPECIFIED   06350000
         AIF   ('&IHBVRAW' NE '').INITB  IF HAD PREVIOUS VRADATA, SKIP  06400000
&IHBVRAW SETC  '15'                    SET DEFAULT FOR LATER MACROS     06450000
.INITB   ANOP                                                           06500000
.*                                                                      06550000
.*       INITIALIZE THE ADDRESS OF THE BEGINNING OF THE VRA             06600000
         AIF   ('&VRAINIT' EQ '').NOVRAI IF NO VRAINIT SPECIFIED, SKIP  06650000
&IHBVRAB SETC  '&VRAINIT(1)'           SET VALUE FOR LATER MACROS       06700000
         AGO   .INITC                                                   06750000
.NOVRAI  ANOP                          LOGIC FOR NO VRAINIT SPECIFIED   06800000
         AIF   ('&IHBVRAB' NE '').INITC IF HAD PREVIOUS VRADATA, SKIP   06850000
&IHBVRAB SETC  'SDWAVRA'                SET DEFAULT FOR LATER MACROS    06900000
&DFINIT  SETB  1                        REMEMBER THIS IS FIRST VRADATA  06950000
.INITC   ANOP                                                           07000000
.*                                                                      07050000
.*       INITIALIZE VALUE FOR THE CURRENT VRA LENGTH                    07100000
         AIF   ('&VRACLEN' EQ '').NOCLEN IF NO VRACLEN SPECIFIED, SKIP  07150000
         AIF   ('&VRACLEN(1)' EQ '').NOCLEN IF 1ST OPERAND IS NULL,     07200000
.*                                      SKIP                            07250000
&IHBVRAC SETC  '&VRACLEN(1)'           SET VALUE FOR LATER MACROS       07300000
         AGO   .INITM                                                   07350000
.NOCLEN  ANOP                          LOGIC FOR NO VRACLEN SPECIFIED   07400000
         AIF   ('&IHBVRAC' NE '').INITM IF HAD PREVIOUS VRADATA, SKIP   07450000
&IHBVRAC SETC  'SDWAURAL'              SET DEFAULT FOR LATER MACROS     07500000
.INITM   ANOP                                                           07550000
.*                                                                      07600000
.*       INITIALIZE VALUE FOR THE MAXIMUM VRA LENGTH                    07650000
         AIF   ('&VRAMLEN' EQ '').NOMLEN IF NO VRAMLEN SPECIFIED, SKIP  07700000
&IHBVRAM SETC  '&VRAMLEN(1)'           SET VALUE FOR LATER MACROS       07750000
         AGO   .INITL                                                   07800000
.NOMLEN  ANOP                          LOGIC FOR NO VRAMLEN SPECIFIED   07850000
         AIF   ('&IHBVRAM' NE '').INITL IF HAD PREVIOUS VRADATA, SKIP   07900000
&IHBVRAM SETC  'SDWAVRAL'              SET DEFAULT FOR LATER MACROS     07950000
.INITL   ANOP                                                           08000000
.*                                                                      08050000
.*       INITIALIZE LOCAL VARIABLES                                     08100000
.*       **************************                                     08150000
.*                                                                      08200000
&VRABEG  SETC  '&IHBVRAB'              USE MORE MEANINGFUL NAME LOCALLY 08250000
&CLEN    SETC  '&IHBVRAC'              USE MORE MEANINGFUL NAME LOCALLY 08300000
&MLEN    SETC  '&IHBVRAM'              USE MORE MEANINGFUL NAME LOCALLY 08350000
         AIF   ('&LEN' EQ '').DFLTLEN  IF LEN NOT SPECIFIED, SKIP       08400000
&DATLEN  SETC  '&LEN'                  USE THE SPECIFIED LENGTH         08450000
         AGO   .NODFLTL                                                 08500000
.DFLTLEN ANOP                          USE DEFAULT IF NO LEN OR LENADDR 08550000
&DATLEN  SETC  'L''&DATA'              SET DEFAULT LENGTH TEXT          08600000
.NODFLTL ANOP                                                           08650000
&DATVAL  SETC  '&DATA'                 THIS VALUE MAY CHANGE LATER      08700000
.*                                                                      08750000
.*       INITIALIZE VALUES FOR REGISTERS.  (USE THESE SHORTER NAMES     08800000
.*       BECAUSE EASIER TO FIT ON LATER STATEMENTS.)                    08850000
&RS      SETC  '&IHBVRAS'                                               08900000
&RV      SETC  '&IHBVRAV'                                               08950000
&RW      SETC  '&IHBVRAW'                                               09000000
.*                                                                      09050000
.*       SPECIAL INITIALIZATION IF VRAINIT=SDWAVRA VALUE OR DEFAULT     09100000
         AIF   ('&VRABEG' NE 'SDWAVRA').NOQUAL IF NOT SDWA, SKIP        09150000
&QUAL    SETC  '-SDWA(,&RS)'           USE IN GENERATED INSTRUCTIONS    09200000
.NOQUAL  ANOP                          SKIP TO HERE IF NO QUALIFYING    09250000
.*                                      (GET DEFAULT OF &QUAL='')       09300000
.*                                                                      09350000
.*       INITIALIZE BITS TO STAND FOR KEYWORDS SPECIFIED ON MACRO       09400000
         AIF   ('&VRAREG(2)' NE 'SET').NOSET  IF NO SET KEYWORD, SKIP   09450000
&SET     SETB  1                       TURN ON BIT FOR SET SPECIFIED    09500000
.NOSET   ANOP                                                           09550000
         AIF   ('&VRAREG(2)' NE 'NOTSET').NONOTS  IF NO NOTSET, SKIP    09600000
&NOTSET  SETB  1                       TURN ON BIT FOR NOTSET KEYWORD   09650000
.NONOTS  ANOP                                                           09700000
         AIF   ('&TYPE(1)' NE 'NOTEST' AND '&TYPE(1)' NE 'NOT').NOT     09750000
.*                                     IF NO NOTEST, SKIP               09800000
&NOTEST  SETB  1                       TURN ON BIT FOR NOTEST KEYWORD   09850000
.NOT     ANOP                                                           09900000
         AIF   ('&TYPE(2)' NE 'NOTEST' AND '&TYPE(2)' NE 'NOT').NO2     09950000
&NOTEST  SETB  1                       IF NOTEST SPECIFIED, TURN ON BIT 10000000
.NO2     ANOP                                                           10050000
         AIF   ('&TYPE(1)' NE 'NOLEN' AND '&TYPE(1)' NE 'NOL').NONL     10100000
&NOLEN   SETB  1                       IF NOLEN SPECIFIED, TURN ON BIT  10150000
.NONL    ANOP                                                           10200000
         AIF   ('&TYPE(2)' NE 'NOLEN' AND '&TYPE(2)' NE 'NOL').NOL2     10250000
&NOLEN   SETB  1                       IF NOLEN SPECIFIED, TURN ON BIT  10300000
.NOL2    ANOP                                                           10350000
         AIF   (NOT &NOLEN).NOL3       IF 'NOLEN' NOT SPECIFIED, SKIP   10400000
&IHBVRAL SETB  1                       REMEMBER HAD 'NOLEN' SPECIFIED   10450000
.NOL3    ANOP                                                           10500000
.*                                                                      10550000
.*       GENERATE LABEL, IF ONE WAS SPECIFIED ON THE VRADATA MACRO      10600000
.*       *********************************************************      10650000
.*                                                                      10700000
         AIF   ('&NAME' EQ '').NOLABEL IF HAD NO LABEL ON VRADATA, SKIP 10750000
&NAME    DS    0H                      LABEL FROM VRADATA MACRO         10800000
.NOLABEL ANOP                          SKIP TO HERE IF HAD NO LABEL     10850000
.*                                                                      10900000
.*       GENERATE COMMENT LINE WITH THE MACDATE                         10950000
.*       **************************************                         11000000
.*                                                                      11050000
*        MACDATE = 10/05/94            VRADATA MACRO OUTPUT        @01C 11100000
.*                                                                      11150000
.*       VALIDITY CHECK THE KEYWORDS                                    11200000
.*       ***************************                                    11250000
.*                                                                      11300000
.*       AIF   ('&LEN' EQ '').NOLEN    SKIP IF HAD NO LEN KEYWORD       11350000
.*       AIF   (T'&LEN NE 'U').MSGLT   ERROR IF LEN NOT EQUATE OR       11400000
.*                                      NUMBER                          11450000
.NOLEN   ANOP                                                           11500000
.*                                                                      11550000
.*       SPECIAL LOGIC FOR DATA ADDRESS SUPPLIED IN A REGISTER          11600000
.*                                                                      11650000
         AIF   ('&DATA' EQ '').NOREG   IF NO DATA, SKIP REGISTER LOGIC  11700000
         AIF   ('&DATA'(1,1) NE '(').NOREG SKIP IF DATA NOT IN REG      11750000
         AIF   ('&LEN' EQ '' AND '&LENADDR' EQ '').MSGL   ISSUE ERROR   11800000
.*                                      MSG IF DATA ADDR IN REG, BUT    11850000
.*                                      NO &LEN OR &LENADDR SPECIFIED   11900000
&DATVAL  SETC  '0&DATA'                PREPARE FOR LATER MOVE OF DATA   11950000
.*                                      0(REG) WILL BE USED             12000000
.NOREG   ANOP                          LOGIC FOR ALL TYPES OF DATA      12050000
.*                                                                      12100000
.*       GENERATE INITIALIZATION CODE (VRAINIT REQUEST OR DEFAULT)      12150000
.*       *********************************************************      12200000
.*                                                                      12250000
         AIF   ('&VRAINIT' EQ '' AND NOT &DFINIT).NOSETUP IF NO         12300000
.*                                      VRAINIT REQUEST AND NOT DEFAULT 12350000
.*                                      TO INITIALIZE, SKIP             12400000
         AIF   (&SET).HAVEVRG          IF VRAREG ALREADY SET,           12450000
.*                                      SKIP                            12500000
&REGINIT SETB  1                       INDICATE REGS INITIALIZED HERE   12550000
         SR    &RW,&RW                 ZERO THE WORK REGISTER           12600000
         AIF   ('&VRACLEN(2)' NE '0').NOZERO  IF NO ZERO, SKIP          12650000
         STC   &RW,&CLEN&QUAL          ZERO OUT CURRENT LENGTH USED     12700000
         AGO   .HADZERO                SKIP 'IC' IF ZEROED CURR LENGTH  12750000
.NOZERO  ANOP                          DO 'IC' IF NOT ZEROED            12800000
         IC    &RW,&CLEN&QUAL          GET CURRENT LENGTH USED          12850000
.HADZERO ANOP                                                           12900000
         &LA   &RV,&VRABEG&QUAL        INITIALIZE THE VRA POINTER  @L1C 12950000
         AIF   ('&VRACLEN(2)' EQ '0').HAVEVRG  IF WORKREG ZERO, SKIP    13000000
         ALR   &RV,&RW                 ADD CURR LENGTH TO VRA POINTER   13050000
.HAVEVRG ANOP                                                           13100000
         AIF   ('&VRABEG' NE 'SDWAVRA').NOSETUP SKIP IF VRA NOT IN SDWA 13250000
         OI    SDWADPVA-SDWA(&RS.),SDWAVRAM+SDWAHEX                     13300000
*                                      INDICATE THE SDWAVRA IS IN       13350000
*                                       KEY, LENGTH, DATA FORMAT        13400000
*                                       AND CONTAINS HEXADECIMAL DATA   13450000
.* $$$ DEPENDS ON SDWAREG ALET BEING SET $$$                       @L1A 13500000
.NOSETUP ANOP                          SKIP TO HERE IF NO SETUP NEEDED  13550000
.*                                                                      13600000
.*       SPECIAL LOGIC FOR NO KEY SPECIFIED                             13650000
.*       **********************************                             13700000
.*                                                                      13750000
         AIF   ('&KEY' NE '').HAVEKEY  IF KEY SPECIFIED, ADD VRA ENTRY  13800000
         AIF   ('&DATA' NE '').MSGK    ERROR IF DATA BUT NO KEY         13850000
         AGO   .END2                   DONE PROCESSING IF NO KEY        13900000
.HAVEKEY ANOP                          SKIP TO HERE IF KEY SPECIFIED    13950000
.*                                                                      14000000
.*       CALCULATE ADDRESS OF THE NEXT AVAILABLE SPACE IN THE VRA       14050000
.*       ********************************************************       14100000
.*                                                                      14150000
         AIF   (NOT &NOTSET AND &NOTEST AND &IHBVRAL).FILLIN  IF NOT    14200000
.*                                     WANT TEST FOR ROOM, OR SAVING    14250000
.*                                     LENGTH (USING PREVIOUSLY SAVED   14300000
.*                                     &CLEN), OR RESETTING VRAREG      14350000
.*                                     VALUE, CAN SKIP SETUP AND GO     14400000
.*                                     FILL IN THE VRA ENTRY            14450000
         AIF   (&REGINIT).CALCLEN      IF INITIALIZED WORKREG AND       14500000
.*                                      VRAREG ALREADY, SKIP            14550000
         SR    &RW,&RW                 ZERO THE WORK REGISTER           14600000
         IC    &RW,&CLEN&QUAL          GET CURRENT LENGTH USED          14650000
         AIF   (NOT &NOTSET).CALCLEN   IF 'NOTSET' NOT SPECIFIED, SKIP  14700000
.*                                      (SINCE VRAREG VALUE SET BY      14750000
.*                                      CALLER OR ON PREVIOUS VRADATA   14800000
.*                                      MACRO)                          14850000
         &LA   &RV,&VRABEG&QUAL      INITIALIZE THE POINTER TO VRA @L1C 14900000
         ALR   &RV,&RW                 ADD CURR LENGTH TO VRA POINTER   14950000
.*                                                                      15000000
.*       CALCULATE NEW USER LENGTH                                      15050000
.*       *************************                                      15100000
.*       NEW CURRENT LENGTH = &CLEN + LENGTH(VRAKL) + LENGTH(DATA)      15150000
.*                                                                      15200000
.CALCLEN ANOP                                                           15250000
         AIF   (&NOTEST AND &IHBVRAL).FILLIN  IF JUST NEEDED TO SET     15300000
.*                                      VRAREG, HAVE DONE THAT, SO CAN  15350000
.*                                      NOW FILL IN THE VRA ENTRY       15400000
         AIF   ('&DATA' NE '').CALCDAT ADD LENGTH OF DATA IF HAVE DATA  15450000
         LA    &RW,L'VRAKL(,&RW.)      ADD LENGTH OF NEW VRA ENTRY      15500000
         AGO   .CALCEND                DONE WITH CALCULATION            15550000
.CALCDAT ANOP                          LOGIC ONLY USED IF HAVE DATA     15600000
.*                                                                      15650000
.*       CONTINUE CALCULATION (USE LEN OR LENADDR, IF SUPPLIED)         15700000
.*       ******************************************************         15750000
.*                                                                      15800000
         AIF   ('&LEN' NE '').HAVELEN  SKIP IF &LEN WAS SPECIFIED       15850000
         AIF   ('&LENADDR' EQ '').ADDLEN  IF NO LENADDR SPECIFIED, SKIP 15900000
         LA    &RW,L'VRAKL(,&RW.)      ADD LENGTH OF KEY AND LEN FIELDS 15950000
         AH    &RW,&LENADDR            ADD LENGTH OF DATA FIELD         16000000
         AGO   .CALCEND                DONE WITH CALCULATION            16050000
.HAVELEN ANOP                          LOGIC FOR LEN SPECIFIED          16100000
         AIF   ('&LENADDR' NE '').MSGLA ERROR IF BOTH LEN AND LENADDR   16150000
.ADDLEN  ANOP                          USE &DATLEN TO ADD DATA LENGTH   16200000
         LA    &RW,L'VRAKL+&DATLEN.(,&RW.) ADD LENGTH OF NEW VRA ENTRY  16250000
.CALCEND ANOP                          READY TO DO COMPARISON, USING    16300000
.*                                      THE CALCULATED LENGTH           16350000
.*                                                                      16400000
.*       IF NEW ENTRY WILL FIT IN VRA, ADD ITS LENGTH TO CURRENT LENGTH 16450000
.*       ************************************************************** 16500000
.*                                                                      16550000
         AIF   (&NOTEST).FILLIN        IF CALLER REQUESTED NO TEST,     16600000
.*                                      SKIP (WILL CALCULATE LEN AT     16650000
.*                                      END IF 'NOLEN' NOT SPECIFIED    16700000
.*                                      ON THIS MACRO)                  16750000
         CH    &RW,&MLEN&QUAL          COMPARE TO TOTAL SIZE OF VRA     16800000
         BH    IHBE&SYSNDX             END IF NEW ENTRY WILL NOT FIT    16850000
         AIF   (&NOLEN).FILLIN         IF WANT NO LEN, SKIP             16900000
         STC   &RW,&CLEN&QUAL          UPDATE LENGTH OF VRA USER DATA   16950000
&DIDLEN  SETB  1                       REMEMBER HAVE SET LEN ALREADY    17000000
.*                                                                      17050000
.*       GENERATE INSTRUCTIONS TO FILL IN KEY, LENGTH, AND DATA         17100000
.*       ******************************************************         17150000
.*                                                                      17200000
.FILLIN  ANOP                                                           17250000
         MVI   VRAKEY-VRAMAP(&RV.),&KEY PUT THE KEY IN THE VRA ENTRY    17300000
         AIF   ('&DATA' NE '').ADDDATA IF DATA SUPPLIED, SKIP           17350000
         MVI   VRALEN-VRAMAP(&RV.),X'00' PUT DATA LENGTH OF ZERO IN VRA 17400000
         AGO   .END                      THEN END                       17450000
.ADDDATA ANOP                          LABEL USED IF DATA SUPPLIED      17500000
         AIF   ('&LENADDR' EQ '').USELEN  IF NO LENADDR, DO LEN LOGIC   17550000
         LH    &RW,&LENADDR            GET THE DATA LENGTH              17600000
&TEMP    SETC  'VRALEN-VRAMAP(,&RV.)'  PREPARE TO GENERATE NEXT INSTR.  17650000
         STC   &RW,&TEMP               PUT THE DATA LENGTH IN THE VRA   17700000
         BCTR  &RW,0                   GET LENGTH - 1 FOR EXECUTE       17750000
         EX    &RW,IHBM&SYSNDX         MOVE THE DATA INTO THE VRA ENTRY 17800000
&TEMPLN1 SETC  '+1'                    PREPARE FOR LOGIC AT .END        17850000
&TEMPLN2 SETC  '&RW'                   PREPARE FOR LOGIC AT .END        17900000
         B     IHBP&SYSNDX             BRANCH AROUND THE MVC FOR EX     17950000
&TEMP    SETC  'VRADAT-VRAMAP(0,&RV.),&DATVAL' PREPARE TO GENERATE MVC  18000000
&TEMPL   SETC  'IHBM&SYSNDX'                                            18050000
&TEMPL   MVC   &TEMP                   MVC USED BY EX INSTR.            18100000
&TEMPL   SETC  'IHBP&SYSNDX'                                            18150000
&TEMPL   DS    0H                      UPDATE VRA POINTER, IF NECESSARY 18200000
         AGO   .END                    DONE PROCESSING                  18250000
.USELEN  ANOP                          PUT LENGTH AND DATA INTO VRA,    18300000
.*                                      USING LEN OR DEFAULT LEN        18350000
         MVI   VRALEN-VRAMAP(&RV.),&DATLEN PUT THE DATA LENGTH IN VRA   18400000
         MVC   VRADAT-VRAMAP(&DATLEN,&RV.),&DATVAL MOVE IN THE DATA     18450000
&TEMPLN1 SETC  '+&DATLEN'              PREPARE FOR LOGIC AT .END        18500000
.*                                                                      18550000
.*       EXIT CODE                                                      18600000
.*       *********                                                      18650000
.*                                                                      18700000
.END     ANOP                          END LOGIC USED IF HAD KEY        18750000
         LA    &RV,L'VRAKL&TEMPLN1.(&TEMPLN2,&RV)                       18800000
*                                      POINT TO NEXT AVAIL SPACE IN VRA 18850000
         AIF (&NOLEN OR &DIDLEN).END2  IF HAD 'NOLEN' OR ALREADY SET    18900000
.*                                      THE CURRENT LENGTH, SKIP        18950000
         LA    &RW,&VRABEG&QUAL        GET THE ADDRESS OF THE VRA       19000000
         LCR   &RW,&RW                 GET NEGATIVE OF PREVIOUS VALUE   19050000
         ALR   &RW,&RV                 SUBRACT VRA ADDR FROM POINTER    19100000
*                                       TO NEXT AVAILABLE SPACE IN VRA  19150000
         STC   &RW,&CLEN&QUAL          UPDATE LENGTH OF VRA USER DATA   19200000
.END2    ANOP                          END HERE, TO GENERATE AN END     19250000
.*                                      LABEL                           19300000
&TEMPL   SETC  'IHBE&SYSNDX'                                            19350000
&TEMPL   DS    0H                      END OF VRADATA MACRO OUTPUT      19400000
         MEXIT                                                          19450000
.********************************************************************** 19500000
.*       THE FOLLOWING MNOTE MESSAGES ARE ISSUED FOR INVALID          * 19550000
.*       MACRO SPECIFICATIONS                                         * 19600000
.********************************************************************** 19650000
.MSGLT   ANOP                                                           19700000
         MNOTE 8,'LEN VALUE MUST BE DECIMAL DIGIT OR EQUATED SYMBOL'    19750000
.*                                                             @G380P11 19800000
         MEXIT                                                          19850000
.MSGK    ANOP                                                           19900000
         MNOTE 8,'KEY MUST BE SPECIFIED IF DATA IS SPECIFIED'           19950000
         MEXIT                                                          20000000
.MSGL    ANOP                                                           20050000
         MNOTE 8,'LEN OR LENADDR MUST BE SPECIFIED IF DATA ADDRESS IS IX20100000
               N A REGISTER'                                  @G380P11  20150000
         MEXIT                                                          20200000
.MSGLA   ANOP                                                           20250000
         MNOTE 8,'LEN AND LENADDR ARE MUTUALLY EXCLUSIVE'               20300000
         MEND                                                           20350000
* */                                                                    20400000
* VRADATA: MACRO                                                        20450000
*          KEYS(VRAINIT,VRAPTR,VRAMLEN,VRACLEN,KEY,DATA,PTR,LEN,TYPE);  20500000
*          ANS('?'||MACLABEL||'VRADATAP '||MACLIST||MACKEYS||';');      20550000
* %END VRADATA; /* THE ABOVE PLS MACRO GENERATES A VRADATAP MACRO */    20600000
