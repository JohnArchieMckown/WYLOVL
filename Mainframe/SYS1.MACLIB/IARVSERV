*/**** START OF SPECIFICATIONS **************************************** 00000100
*                                                                     * 00000200
*                                                                     * 00000300
*01* MACRO NAME:  IARVSERV                              -06/25/98-<0> * 00000400
*                                                                     * 00000500
*                                                                     * 00000600
*01* DESCRIPTIVE NAME:  RSM Virtual Storage Services                  * 00000700
*                                                                     * 00000800
*01* PROPRIETARY STATEMENT:                                           * 00000900
*                                                                     * 00001000
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 00001100
*     THIS MACRO IS "RESTRICTED MATERIALS OF IBM"                     * 00001200
*     5647-A01 (C) COPYRIGHT IBM CORP. 1994, 1998                     * 00001300
*                                                                     * 00001400
* STATUS= HBB6606                                                     * 00001500
*                                                                     * 00001600
*                                                                     * 00001700
*                                                                     * 00001800
*01* FUNCTION:                                                        * 00001900
*                                                                     * 00002000
*                                                                     * 00002100
*      RSM Virtual Storage services (IARVSERV) provides an interface  * 00002200
*      to set up data sharing among different virtual storage areas.  * 00002300
*                                                                     * 00002400
*      The IARVSERV service is a GUPI interface except for the        * 00002500
*      SHARESEG option which is internal.  The following services are * 00002600
*      provided:                                                      * 00002700
*                                                                     * 00002800
*                                                                     * 00002900
*      SHARE          Requests that a source of data (will be         * 00003000
*                     referred to as the SOURCE) be made accessible   * 00003100
*                     through a given virtual storage area (the       * 00003200
*                     TARGET).                                        * 00003300
*                                                                     * 00003400
*      UNSHARE        Requests that the specified virtual storage     * 00003500
*                     area (the TARGET) can no longer be used to      * 00003600
*                     access shared data.                             * 00003700
*                                                                     * 00003800
*      CHANGEACCESS   Requests that the view type for the specified   * 00003900
*                     virtual storage area (the TARGET) be changed.   * 00004000
*                                                                     * 00004100
*      SHARESEG       Requests that the source of data (will be       * 00004200
*                     referred to as the SOURCE) be made accessible   * 00004300
*                     through a given virtual storage area (the       * 00004400
*                     TARGET).                                        * 00004500
*                                                                     * 00004600
*                                                                     * 00004700
*                                                                     * 00004800
*      Terminology associated with these services:                    * 00004900
*                                                                     * 00005000
*                                                                     * 00005100
*      o   For convenience, the term SOURCE will be used to refer to  * 00005200
*          1) the actual source data or 2) the virtual storage that   * 00005300
*          contains the source data.                                  * 00005400
*                                                                     * 00005500
*      o   When IARVSERV SHARE completes successfully, any page (4K   * 00005600
*          bytes) in the SOURCE and its corresponding page in the     * 00005700
*          TARGET are said to form a sharing group. If the SOURCE     * 00005800
*          page is already a member of an existing sharing group, the * 00005900
*          TARGET page is said to become a member of that sharing     * 00006000
*          group.                                                     * 00006100
*                                                                     * 00006200
*      o   A page is a sharing page if it is a member of a sharing    * 00006300
*          group.                                                     * 00006400
*                                                                     * 00006500
*                                                                     * 00006600
*                                                                     * 00006700
*01* EXTERNAL CLASSIFICATION:  GUPI                                   * 00006800
*                                                                     * 00006900
*01* END OF EXTERNAL CLASSIFICATION:                                  * 00007000
*                                                                     * 00007100
*01* ENVIRONMENT:                                                     * 00007200
*                                                                     * 00007300
*                                                                     * 00007400
*      Minimum authorization: To SHARE/UNSHARE/CHANGEACCESS only      * 00007500
*                        accessible storage areas:  any state and any * 00007600
*                        PSW key.                                     * 00007700
*                                                                     * 00007800
*                        To SHARE/UNSHARE/CHANGEACCESS any storage    * 00007900
*                        areas:  Supervisor state or system (0-7) PSW * 00008000
*                        key.                                         * 00008100
*                                                                     * 00008200
*                        To invoke the SHARE/UNSHARE service with     * 00008300
*                        BRANCH(YES):  Supervisor state and PSW key   * 00008400
*                        0.                                           * 00008500
*                                                                     * 00008600
*      Dispatchable unit mode: Task or SRB mode.                      * 00008700
*                                                                     * 00008800
*      Cross Memory Mode: Any PASN, any HASN, any SASN.               * 00008900
*                                                                     * 00009000
*      AMODE:            31-bit.                                      * 00009100
*                                                                     * 00009200
*      ASC mode:         Primary or Access Register.                  * 00009300
*                                                                     * 00009400
*      Interrupt status: Enabled for I/O and external interrupts.     * 00009500
*                                                                     * 00009600
*      Locks:            No locks held except the local lock, which   * 00009700
*                        may be held.                                 * 00009800
*                                                                     * 00009900
*      Control parameters: Control parameters must be in the primary  * 00010000
*                        address space.                               * 00010100
*                                                                     * 00010200
*                                                                     * 00010300
*                                                                     * 00010400
*01* PROGRAMMING REQUIREMENTS:                                        * 00010500
*                                                                     * 00010600
*                                                                     * 00010700
*    o   For authorized callers the input range list must be in fixed * 00010800
*        storage, if more than 16 ranges are specified.  If the       * 00010900
*        BRANCH(YES) option is specified, then both the input         * 00011000
*        parameter list and the range list must always be in fixed    * 00011100
*        storage.                                                     * 00011200
*                                                                     * 00011300
*    o   The address space owning the SOURCE/TARGET must be swapped   * 00011400
*        in when IARVSERV SHARE/UNSHARE/CHANGEACCESS is invoked, and  * 00011500
*        must remain non-swappable until control is returned to the   * 00011600
*        caller.  (The caller's home address space can be swappable.  * 00011700
*        The caller's primary address space can be swappable unless   * 00011800
*        it owns the SOURCE/TARGET.)                                  * 00011900
*                                                                     * 00012000
*    o   The execution key (PSW key) of the caller must be sufficient * 00012100
*        for altering the TARGET area. If the                         * 00012200
*        TARGET_VIEW(SHAREDWRITE) option is specified, the execution  * 00012300
*        key must be sufficient for altering the SOURCE area.         * 00012400
*                                                                     * 00012500
*    o   The input SOURCE/TARGET area to the service must             * 00012600
*                                                                     * 00012700
*                                                                     * 00012800
*            1) start on a page boundary, and                         * 00012900
*                                                                     * 00013000
*            2) have the same storage protect key and                 * 00013100
*            fetch-protection status between the corresponding SOURCE * 00013200
*            and TARGET pages, and                                    * 00013300
*                                                                     * 00013400
*            3) meet one of the following requirements:               * 00013500
*                                                                     * 00013600
*                                                                     * 00013700
*                a) already be GETMAINed (or STORAGE OBTAINed) within * 00013800
*                pageable private storage.                            * 00013900
*                                                                     * 00014000
*                b) reside within the valid size of an existing data  * 00014100
*                space(s) and be pageable.                            * 00014200
*                                                                     * 00014300
*                                                                     * 00014400
*                                                                     * 00014500
*                                                                     * 00014600
*                                                                     * 00014700
*        The following exception applies:                             * 00014800
*                                                                     * 00014900
*                                                                     * 00015000
*            - For a TARGET_VIEW(UNIQUEWRITE) request, if the input   * 00015100
*            SOURCE area is for address space storage and is not      * 00015200
*            GETMAINed (nor STORAGE OBTAINed), then the SHARE is not  * 00015300
*            performed for that area and the TARGET will be "first    * 00015400
*            reference" (all zeroes) or will remain as non-GETMAINed. * 00015500
*            Also, the SHARE will return a return code of 4.  In      * 00015600
*            essence, the SHARE will skip the non-GETMAINed SOURCE    * 00015700
*            pages.                                                   * 00015800
*                                                                     * 00015900
*            - For all other requests, both the TARGET and the SOURCE * 00016000
*            storage areas must be GETMAINed (or STORAGE OBTAINed).   * 00016100
*                                                                     * 00016200
*                                                                     * 00016300
*                                                                     * 00016400
*        The following exception applies only to authorized callers:  * 00016500
*                                                                     * 00016600
*                                                                     * 00016700
*            - The SOURCE can be common or LSQA storage and the       * 00016800
*            TARGET can be in the CSA/ECSA, SQA/ESQA, LSQA/ELSQA or   * 00016900
*            DREF.                                                    * 00017000
*                                                                     * 00017100
*                                                                     * 00017200
*                                                                     * 00017300
*    o   Only the following combinations of storage attributes for    * 00017400
*        the SOURCE and TARGET areas are supported for SHARE (with    * 00017500
*        the exceptions noted under "Restrictions"):                  * 00017600
*                                                                     * 00017700
*                                                                     * 00017800
*               SOURCE area               TARGET area                 * 00017900
*               -----------               -----------                 * 00018000
*                                                                     * 00018100
*            1) Pageable                  Pageable                    * 00018200
*                                                                     * 00018300
*            2) Fixed in non-swappable    Any kind of storage         * 00018400
*               storage backing with                                  * 00018500
*               central storage below                                 * 00018600
*               16 megabytes                                          * 00018700
*                                                                     * 00018800
*            3) Fixed in non-swappable    Any storage that does not   * 00018900
*               storage backing with      require the backing of      * 00019000
*               central storage above     central storage below 16    * 00019100
*               16 megabytes              megabytes (if fixed)        * 00019200
*                                                                     * 00019300
*            4) Fixed in swappable        Any kind of storage,        * 00019400
*               storage                   provided that the           * 00019500
*                                         TARGET_VIEW(UNIQUEWRITE)    * 00019600
*                                         option is specified         * 00019700
*                                                                     * 00019800
*                                                                     * 00019900
*                                                                     * 00020000
*                                                                     * 00020100
*                                                                     * 00020200
*01* RESTRICTIONS:                                                    * 00020300
*                                                                     * 00020400
*                                                                     * 00020500
*    o   No Subspace STOKEN or ALET can be specified for the          * 00020600
*        SOURCE/TARGET area.                                          * 00020700
*                                                                     * 00020800
*    o   The SOURCE and the TARGET must be two different storage      * 00020900
*        areas.  In other words, they must be different virtual       * 00021000
*        storage addresses or different spaces.                       * 00021100
*                                                                     * 00021200
*    o   The TARGET area must not be storage that contains system     * 00021300
*        sensitive data, such as access lists, dynamic address        * 00021400
*        translation tables, or dispatchable unit control tables.     * 00021500
*                                                                     * 00021600
*    o   For IARVSERV SHARE the TARGET area must not contain          * 00021700
*        page-protected or PGSER page-fixed pages.                    * 00021800
*                                                                     * 00021900
*    o   For IARVSERV UNSHARE the TARGET area must not contain        * 00022000
*        page-protected pages (unless RETAIN(YES) is specified) or    * 00022100
*        PGSER page-fixed pages.                                      * 00022200
*                                                                     * 00022300
*    o   For IARVSERV CHANGEACCESS the TARGET area must not contain   * 00022400
*        fixed or DREF pages.                                         * 00022500
*                                                                     * 00022600
*    o   The SHAREDWRITE option cannot be specified if the SOURCE     * 00022700
*        contains sharing pages that have the READONLY view mode      * 00022800
*        attribute or that are page-protected or that are protected   * 00022900
*        by attribute (such as PLPA).                                 * 00023000
*                                                                     * 00023100
*    o   No storage area currently DIV MAPped to a hiperspace DIV     * 00023200
*        object can be the SOURCE.                                    * 00023300
*                                                                     * 00023400
*    o   No storage area currently DIV MAPped (to any DIV object) can * 00023500
*        be the TARGET for IARVSERV SHARE.                            * 00023600
*                                                                     * 00023700
*    o   No storage area in a hiperspace, VIO window, V=R region, or  * 00023800
*        PSA can be the SOURCE or the TARGET.                         * 00023900
*                                                                     * 00024000
*                                                                     * 00024100
*                                                                     * 00024200
*01* PERFORMANCE IMPLICATIONS:                                        * 00024300
*                                                                     * 00024400
*    None.                                                            * 00024500
*                                                                     * 00024600
*    Before issuing the IARVSERV macro, the caller does not have to   * 00024700
*    place any information into any register unless using it in       * 00024800
*    register notation for a particular parameter, or using it as a   * 00024900
*    base register.                                                   * 00025000
*                                                                     * 00025100
*    When control returns to the caller, the GPRs and ARs contain:    * 00025200
*                                                                     * 00025300
*    Some callers depend on register contents remaining the same      * 00025400
*    before and after issuing a service.  If the system changes the   * 00025500
*    contents of registers on which the caller depends, the caller    * 00025600
*    must save them before issuing the service, and restore them      * 00025700
*    after the system returns control.                                * 00025800
*                                                                     * 00025900
*01* SYNTAX:                                                          * 00026000
*                                                                     * 00026100
*[xlabel]  IARVSERV    SHARE                                         * 00026200
*                    |     ,RANGLIST=xranglist                        * 00026300
*                    |    [,NUMRANGE=xnumrange|1]                   * 00026400
*                    |    ,TARGET_VIEW=READONLY                      * 00026500
*                    |    ,TARGET_VIEW=SHAREDWRITE                   * 00026600
*                    |    ,TARGET_VIEW=UNIQUEWRITE                   * 00026700
*                    |   |    [,COPYNOW]                              * 00026800
*                    |    ,TARGET_VIEW=TARGETWRITE                   * 00026900
*                    |    ,TARGET_VIEW=LIKESOURCE                    * 00027000
*                    |   |    [,COPYNOW]                              * 00027100
*                    |    ,TARGET_VIEW=HIDDEN                        * 00027200
*                    |    [,BRANCH=NO|YES]                          * 00027300
*                    |    [,PARTIALPAGE=NO|YES]                     * 00027400
*                     ,UNSHARE                                       * 00027500
*                    |     ,RANGLIST=xranglist                        * 00027600
*                    |    [,NUMRANGE=xnumrange|1]                   * 00027700
*                    |    [,RETAIN=NO|YES]                          * 00027800
*                    |    [,BRANCH=NO|YES]                          * 00027900
*                     ,SHARESEG                                      * 00028000
*                    |     ,RANGLIST=xranglist                        * 00028100
*                    |    [,NUMRANGE=xnumrange|1]                   * 00028200
*                     ,CHANGEACCESS                                  * 00028300
*                          ,RANGLIST=xranglist                        * 00028400
*                         [,NUMRANGE=xnumrange|1]                   * 00028500
*                         ,TARGET_VIEW=READONLY                      * 00028600
*                         ,TARGET_VIEW=SHAREDWRITE                   * 00028700
*                         ,TARGET_VIEW=UNIQUEWRITE                   * 00028800
*                        |    [,COPYNOW]                              * 00028900
*                         ,TARGET_VIEW=TARGETWRITE                   * 00029000
*                         ,TARGET_VIEW=HIDDEN                        * 00029100
*                     [,PLISTVER=xplistver|IMPLIED_VERSION]         * 00029200
*                    [,MF=S]                                         * 00029300
*                    [,MF=(L,xmfctrl,xmfattr|0D)]                  * 00029400
*                    [,MF=(E,xmfctrl,COMPLETE)]                    * 00029500
*                                                                     * 00029600
*                                                                     * 00029700
*      Where:                                                         * 00029800
*                                                                     * 00029900
*                                                                     * 00030000
*      [xlabel]                                                       * 00030100
*          is an optional symbol, starting in column 1, that is the   * 00030200
*          name on the IARVSERV macro invocation.  The name must      * 00030300
*          conform to the rules for an ordinary assembler language    * 00030400
*          symbol.                                                    * 00030500
*          DEFAULT: No name.                                          * 00030600
*                                                                     * 00030700
*                                                                     * 00030800
*                                                                     * 00030900
*                                                                     * 00031000
*      The following is a set of mutually exclusive keys.  This set   * 00031100
*      is required; only one key must be specified.                   * 00031200
*                                                                     * 00031300
*                                                                     * 00031400
*      SHARE                                                          * 00031500
*          Requests that a source of data be made sharable at another * 00031600
*          virtual location.                                          * 00031700
*                                                                     * 00031800
*          Unauthorized programs must have legal access to the SOURCE * 00031900
*          and TARGET areas for the request to succeed. This means    * 00032000
*          that the invoker must have an entry on its access list for * 00032100
*          the SOURCE/TARGET area or must be able to successfully     * 00032200
*          ALESERV ADD an entry to its access list for the            * 00032300
*          SOURCE/TARGET area.                                        * 00032400
*                                                                     * 00032500
*          There are requirements and restrictions imposed on the     * 00032600
*          SOURCE and TARGET areas. Please refer to the               * 00032700
*          "Requirements" and "Restrictions" sections.                * 00032800
*                                                                     * 00032900
*          Should the required hardware feature for supporting the    * 00033000
*          UNIQUEWRITE option be unavailable, SHARE would only copy   * 00033100
*          the SOURCE to the TARGET when UNIQUEWRITE is specified.    * 00033200
*                                                                     * 00033300
*          If the TARGET area contains pages belonging to some        * 00033400
*          sharing groups, SHARE will do an implicit UNSHARE to pull  * 00033500
*          those pages out of their existing sharing groups before    * 00033600
*          proceeding with the caller's request.                      * 00033700
*                                                                     * 00033800
*          The system will automatically UNSHARE any sharing page     * 00033900
*          when the page is being freed (e.g., via FREEMAIN, STORAGE  * 00034000
*          RELEASE, or DSPSERV DELETE) or its owning address space is * 00034100
*          terminating.                                               * 00034200
*                                                                     * 00034300
*          When one page of a range being processed by SHARE is found * 00034400
*          to be not acceptable for sharing, then SHARE will not      * 00034500
*          process that error page, nor the rest of the range, nor    * 00034600
*          any other ranges that have not yet been processed.  Since  * 00034700
*          the IARVSERV services can process multiple pages and since * 00034800
*          the services do not back out any ranges prior to the error * 00034900
*          range element, the caller can assume that all the pages    * 00035000
*          prior to the error page have been successfully processed.  * 00035100
*          An abend will be issued and general purpose registers two  * 00035200
*          and three will contain the address of the range list       * 00035300
*          element associated with the error page and the storage     * 00035400
*          address of the error page, respectively.  If the user      * 00035500
*          wishes to "undo" the SHARE, issue the IARVSERV UNSHARE     * 00035600
*          service for storage ranges up to (but excluding) the error * 00035700
*          page.                                                      * 00035800
*                                                                     * 00035900
*          The unauthorized caller is restricted to installation      * 00036000
*          limits when sharing data.  If the SHARE request would      * 00036100
*          cause the limits to be exceeded, then the SHARE request    * 00036200
*          fails with a return code of 8.                             * 00036300
*                                                                     * 00036400
*                                                                     * 00036500
*          RANGLIST=xranglist                                         * 00036600
*              is the name (RS-type), or address in register          * 00036700
*              (2)-(12), of a required 4 byte input that contains the * 00036800
*              address of a range list.  The range list consists of a * 00036900
*              number of entries (as specified by NUMRANGE) where     * 00037000
*              each entry is 28 bytes long. A mapping of each entry   * 00037100
*              is provided in the mapping macro IARVRL. A description * 00037200
*              of the fields in each entry is as follows:             * 00037300
*                                                                     * 00037400
*                                                                     * 00037500
*                 SOURCE_VSA    contains the starting virtual address * 00037600
*                               of the source data to be made shared. * 00037700
*                                                                     * 00037800
*                               The virtual address to be specified   * 00037900
*                               must be on a page (4K) boundary.      * 00038000
*                                                                     * 00038100
*                               The length of this field is 4 bytes.  * 00038200
*                                                                     * 00038300
*                 SOURCE_ALETSTKN contains the ALET or STOKEN of the  * 00038400
*                               space in which the source data        * 00038500
*                               resides.                              * 00038600
*                                                                     * 00038700
*                               The length of this field is 8 bytes.  * 00038800
*                                                                     * 00038900
*                               If the first word of this field is 0, * 00039000
*                               then the second word is assumed to    * 00039100
*                               contain an ALET; otherwise, this      * 00039200
*                               field is assumed to contain a STOKEN. * 00039300
*                               STOKEN specification is allowed for   * 00039400
*                               data space storage only.              * 00039500
*                                                                     * 00039600
*                 NUMPAGES      contains the number of pages in the   * 00039700
*                               SOURCE or TARGET area.                * 00039800
*                                                                     * 00039900
*                               The length of this field is 4 bytes.  * 00040000
*                                                                     * 00040100
*                 TARGET_VSA    contains the starting virtual address * 00040200
*                               of the storage area to be used for    * 00040300
*                               accessing shared data.                * 00040400
*                                                                     * 00040500
*                               The virtual address to be specified   * 00040600
*                               must be on a page (4K) boundary.      * 00040700
*                                                                     * 00040800
*                               The length of this field is 4 bytes.  * 00040900
*                                                                     * 00041000
*                 TARGET_ALETSTKN contains the ALET or STOKEN of the  * 00041100
*                               space in which the TARGET area        * 00041200
*                               resides.                              * 00041300
*                                                                     * 00041400
*                               The length of this field is 8 bytes.  * 00041500
*                                                                     * 00041600
*                               If the first word of this field is 0, * 00041700
*                               then the second word is assumed to    * 00041800
*                               contain an ALET; otherwise, this      * 00041900
*                               field is assumed to contain a STOKEN. * 00042000
*                               STOKEN specification is allowed for   * 00042100
*                               data space storage only.              * 00042200
*                                                                     * 00042300
*                                                                     * 00042400
*                                                                     * 00042500
*                                                                     * 00042600
*                                                                     * 00042700
*                                                                     * 00042800
*          [NUMRANGE=xnumrange|1]                                   * 00042900
*              is the name (RS-type), or address in register          * 00043000
*              (2)-(12), of an optional fullword input variable that  * 00043100
*              specifies the number of entries in the supplied range  * 00043200
*              list.                                                  * 00043300
*                                                                     * 00043400
*              For unauthorized users, the value specified must be no * 00043500
*              greater than 16.                                       * 00043600
*                                                                     * 00043700
*              DEFAULT: 1.                                            * 00043800
*                                                                     * 00043900
*                                                                     * 00044000
*                                                                     * 00044100
*                                                                     * 00044200
*                                                                     * 00044300
*          TARGET_VIEW=READONLY|SHAREDWRITE|UNIQUEWRITE|TARGETWRITE| * 00044400
*              LIKESOURCE|HIDDEN                                     * 00044500
*              is a required keyword input that indicates the         * 00044600
*              accessing mode on the TARGET area.                     * 00044700
*                                                                     * 00044800
*                                                                     * 00044900
*                                                                     * 00045000
*              TARGET_VIEW=READONLY                                   * 00045100
*                  Specifies that the TARGET area can only be used to * 00045200
*                  read shared data.                                  * 00045300
*                                                                     * 00045400
*                  Any attempt to alter shared data by writing onto   * 00045500
*                  the TARGET area will result in a program check.    * 00045600
*                                                                     * 00045700
*              TARGET_VIEW=SHAREDWRITE                                * 00045800
*                  Specifies that the TARGET area can be used to read * 00045900
*                  or write over shared data.                         * 00046000
*                                                                     * 00046100
*                  When new data is being written onto the TARGET     * 00046200
*                  area, the new data becomes sharable among those    * 00046300
*                  who have READONLY/SHAREDWRITE/TARGETWRITE access   * 00046400
*                  to the original shared data. Note that those with  * 00046500
*                  UNIQUEWRITE access to the original shared data     * 00046600
*                  will not see the new data. Furthermore, they will  * 00046700
*                  no longer belong to the original sharing group,    * 00046800
*                  and will form a new sharing group among            * 00046900
*                  themselves.                                        * 00047000
*                                                                     * 00047100
*              TARGET_VIEW=UNIQUEWRITE                                * 00047200
*                  Specifies that the TARGET area can be used to read * 00047300
*                  shared data and to retain a private copy of the    * 00047400
*                  shared data should any view of the shared data get * 00047500
*                  altered.                                           * 00047600
*                                                                     * 00047700
*                  When the user of the TARGET area writes new data   * 00047800
*                  onto the TARGET area, any page in the TARGET area  * 00047900
*                  containing the new data becomes a private copy     * 00048000
*                  that is unique to the user and not accessible to   * 00048100
*                  anyone else.  (Note that once the page becomes a   * 00048200
*                  private copy, it no longer belongs to any sharing  * 00048300
*                  group.)  The original shared data remains          * 00048400
*                  unchanged.  Also, when any other view of the data  * 00048500
*                  gets altered, then the UNIQUEWRITE view will       * 00048600
*                  become a private copy, containing the original     * 00048700
*                  data.                                              * 00048800
*                                                                     * 00048900
*                  In general, a private copy is created by the       * 00049000
*                  system only when the shared data is being altered. * 00049100
*                  However, there are situations where the system     * 00049200
*                  must create a private copy and assign it to the    * 00049300
*                  TARGET area at the time of a SHARE request or a    * 00049400
*                  PGSER page-fix request, for example.               * 00049500
*                                                                     * 00049600
*                                                                     * 00049700
*                  [COPYNOW]                                          * 00049800
*                      Specifies that the TARGET area should get a    * 00049900
*                      copy of the source data immediately.  Upon     * 00050000
*                      completion of the IARVSERV SHARE service, the  * 00050100
*                      TARGET storage area will not be shared but     * 00050200
*                      will contain a copy of the SOURCE storage      * 00050300
*                      area.                                          * 00050400
*                      DEFAULT: DO_NOT_COPYNOW                        * 00050500
*                                                                     * 00050600
*                                                                     * 00050700
*                                                                     * 00050800
*              TARGET_VIEW=TARGETWRITE                                * 00050900
*                  Specifies that the TARGET area can be used to read * 00051000
*                  shared data and to retain a private copy of the    * 00051100
*                  shared data should this view of the shared data    * 00051200
*                  get altered.                                       * 00051300
*                                                                     * 00051400
*                  When the user of the TARGET area attempts to write * 00051500
*                  new data onto the TARGET area, any page in the     * 00051600
*                  TARGET area containing the new data becomes a      * 00051700
*                  private copy that is unique to the user and not    * 00051800
*                  accessible to anyone else.  (Note that once the    * 00051900
*                  page becomes a private copy, it no longer belongs  * 00052000
*                  to any sharing group.)  The original shared data   * 00052100
*                  remains unchanged.  When any other SHAREDWRITE     * 00052200
*                  view of the data gets altered, this view will see  * 00052300
*                  those changes.                                     * 00052400
*                                                                     * 00052500
*              TARGET_VIEW=LIKESOURCE                                 * 00052600
*                  Specifies that the view type for the TARGET area   * 00052700
*                  is to be the same as the view type for the SOURCE  * 00052800
*                  area.                                              * 00052900
*                                                                     * 00053000
*                                                                     * 00053100
*                  [COPYNOW]                                          * 00053200
*                      Specifies that the TARGET area should get a    * 00053300
*                      copy of the source data immediately, if the    * 00053400
*                      SOURCE area is not shared or is shared as a    * 00053500
*                      UNIQUEWRITE view.  Upon completion of the      * 00053600
*                      IARVSERV SHARE service, the TARGET TARGET      * 00053700
*                      storage area will not be shared but will       * 00053800
*                      contain a copy of the SOURCE storage area.     * 00053900
*                      DEFAULT: DO_NOT_COPYNOW                        * 00054000
*                                                                     * 00054100
*                                                                     * 00054200
*                                                                     * 00054300
*              TARGET_VIEW=HIDDEN                                     * 00054400
*                  Specifies that the TARGET area will share the      * 00054500
*                  source data but will be unable to access the data  * 00054600
*                  until its view type is changed to READONLY,        * 00054700
*                  SHAREDWRITE, UNIQUEWRITE, or TARGETWRITE.          * 00054800
*                                                                     * 00054900
*                  Any attempt to access a hidden TARGET area will    * 00055000
*                  result in a program check.                         * 00055100
*                                                                     * 00055200
*                                                                     * 00055300
*                                                                     * 00055400
*                                                                     * 00055500
*                                                                     * 00055600
*                                                                     * 00055700
*          [BRANCH=NO|YES]                                          * 00055800
*              is an optional keyword input that specifies whether    * 00055900
*              the branch entry or the PC entry of SHARE is to be     * 00056000
*              used.                                                  * 00056100
*                                                                     * 00056200
*              BRANCH(YES) is restricted to key 0 supervisor state    * 00056300
*              callers.                                               * 00056400
*                                                                     * 00056500
*              DEFAULT: NO                                            * 00056600
*                                                                     * 00056700
*                                                                     * 00056800
*              BRANCH=NO                                              * 00056900
*                  Specifies that the PC entry of SHARE is to be      * 00057000
*                  used.                                              * 00057100
*                                                                     * 00057200
*              BRANCH=YES                                             * 00057300
*                  Specifies that the branch entry of SHARE is to be  * 00057400
*                  used.                                              * 00057500
*                                                                     * 00057600
*                                                                     * 00057700
*                                                                     * 00057800
*                                                                     * 00057900
*                                                                     * 00058000
*                                                                     * 00058100
*          [PARTIALPAGE=NO|YES]                                     * 00058200
*              is an optional keyword input that specifies whether    * 00058300
*              the issuer has GETMAINed only part of the source       * 00058400
*              virtual.  This assures that if the source view exists  * 00058500
*              then IARR2V will return the source virtual.            * 00058600
*                                                                     * 00058700
*              DEFAULT: NO                                            * 00058800
*                                                                     * 00058900
*                                                                     * 00059000
*              PARTIALPAGE=NO                                         * 00059100
*                  Specifies that the issuer has GETMAINed all of the * 00059200
*                  source virtual.                                    * 00059300
*                                                                     * 00059400
*              PARTIALPAGE=YES                                        * 00059500
*                  Specifies that the issuer has GETMAINed part of    * 00059600
*                  the source virtual.                                * 00059700
*                                                                     * 00059800
*                                                                     * 00059900
*                                                                     * 00060000
*                                                                     * 00060100
*                                                                     * 00060200
*      UNSHARE                                                        * 00060300
*          Requests that the specified virtual storage can no longer  * 00060400
*          be used to access shared data.                             * 00060500
*                                                                     * 00060600
*          Unauthorized programs must have legal access to the TARGET * 00060700
*          area for the request to succeed. This means that the       * 00060800
*          invoker must have an entry on its access list for the      * 00060900
*          TARGET area or must be able to successfully ALESERV ADD an * 00061000
*          entry to its access list for the TARGET area.              * 00061100
*                                                                     * 00061200
*          After the UNSHARE each page in the TARGET area is no       * 00061300
*          longer a member of a sharing group.                        * 00061400
*                                                                     * 00061500
*          To unshare a page that does not belong to any sharing      * 00061600
*          group is a no-op.                                          * 00061700
*                                                                     * 00061800
*          After the UNSHARE request, the state of the TARGET area    * 00061900
*          depends on the RETAIN option.  However, these exceptions   * 00062000
*          should be noted when unsharing data associated with a DIV  * 00062100
*          object:                                                    * 00062200
*                                                                     * 00062300
*                                                                     * 00062400
*          o   If the TARGET area is the original window used when    * 00062500
*              mapping the DIV object, then UNSHARE will let the      * 00062600
*              TARGET area retain the shared data regardless of the   * 00062700
*              RETAIN option specified for the UNSHARE.  The group    * 00062800
*              will lose access to the data, and any attempt to       * 00062900
*              access the lost data through a remaining view will be  * 00063000
*              abended with code '028'X.                              * 00063100
*                                                                     * 00063200
*          o   If the TARGET area is not the original window used     * 00063300
*              when mapping the DIV object, then UNSHARE will always  * 00063400
*              make the TARGET area become first-reference regardless * 00063500
*              of the RETAIN option specified for the UNSHARE.        * 00063600
*                                                                     * 00063700
*                                                                     * 00063800
*                                                                     * 00063900
*          UNSHARE of a TARGET page which is fixed is not allowed,    * 00064000
*          unless the TARGET page is SQA or LSQA (i.e., fixed by      * 00064100
*          attribute).  For an UNSHARE of an SQA or LSQA page, the    * 00064200
*          state of the page is as follows:                           * 00064300
*                                                                     * 00064400
*                                                                     * 00064500
*          o   When RETAIN=NO is specified or defaulted, the TARGET   * 00064600
*              page becomes invalid and first reference, discarding   * 00064700
*              the data for this view.                                * 00064800
*                                                                     * 00064900
*          o   RETAIN=YES may not be specified for SQA or LSQA        * 00065000
*              storage.                                               * 00065100
*                                                                     * 00065200
*                                                                     * 00065300
*                                                                     * 00065400
*          When one page of a range being processed by UNSHARE is     * 00065500
*          found to be not acceptable, then UNSHARE will not process  * 00065600
*          that error page, nor the rest of the range, nor any other  * 00065700
*          ranges that have not yet been processed.  Since the        * 00065800
*          IARVSERV services can process multiple pages and since the * 00065900
*          services do not back out any ranges prior to the error     * 00066000
*          range element, the caller can assume that all the pages    * 00066100
*          prior to the error page have been successfully processed.  * 00066200
*          An abend will be issued and general purpose registers two  * 00066300
*          and three will contain the address of the range list       * 00066400
*          element associated with the error page and the storage     * 00066500
*          address of the error page, respectively.  If the user      * 00066600
*          wishes to continue with the UNSHARE, simply re-issue the   * 00066700
*          IARVSERV UNSHARE service for storage ranges following the  * 00066800
*          error page.                                                * 00066900
*                                                                     * 00067000
*                                                                     * 00067100
*          RANGLIST=xranglist                                         * 00067200
*              is the name (RS-type), or address in register          * 00067300
*              (2)-(12), of a required 4 byte input that contains the * 00067400
*              address of a range list.  The range list consists of a * 00067500
*              number of entries (as specified by NUMRANGE) where     * 00067600
*              each entry is 28 bytes long. A mapping of each entry   * 00067700
*              is provided in the mapping macro IARVRL. A description * 00067800
*              of the fields in each entry is as follows:             * 00067900
*                                                                     * 00068000
*                                                                     * 00068100
*                 *RESERVED*    This field is just a place holder,    * 00068200
*                               and will not be used by UNSHARE.      * 00068300
*                                                                     * 00068400
*                               The length of this field is 12 bytes. * 00068500
*                                                                     * 00068600
*                 NUMPAGES      contains the number of pages in the   * 00068700
*                               TARGET area.                          * 00068800
*                                                                     * 00068900
*                               The length of this field is 4 bytes.  * 00069000
*                                                                     * 00069100
*                 TARGET_VSA    contains the starting virtual address * 00069200
*                               of the storage area to be removed     * 00069300
*                               from its use for accessing shared     * 00069400
*                               data.                                 * 00069500
*                                                                     * 00069600
*                               The virtual address to be specified   * 00069700
*                               must be on a page (4K) boundary.      * 00069800
*                                                                     * 00069900
*                               The length of this field is 4 bytes.  * 00070000
*                                                                     * 00070100
*                 TARGET_ALETSTKN contains the ALET or STOKEN of the  * 00070200
*                               space in which the TARGET area        * 00070300
*                               resides.                              * 00070400
*                                                                     * 00070500
*                               The length of this field is 8 bytes.  * 00070600
*                                                                     * 00070700
*                               If the first word of this field is 0, * 00070800
*                               then the second word is assumed to    * 00070900
*                               contain an ALET; otherwise, this      * 00071000
*                               field is assumed to contain a STOKEN. * 00071100
*                               STOKEN specification is allowed for   * 00071200
*                               data space storage only.              * 00071300
*                                                                     * 00071400
*                                                                     * 00071500
*                                                                     * 00071600
*                                                                     * 00071700
*                                                                     * 00071800
*                                                                     * 00071900
*          [NUMRANGE=xnumrange|1]                                   * 00072000
*              is the name (RS-type), or address in register          * 00072100
*              (2)-(12), of an optional fullword input variable that  * 00072200
*              specifies the number of entries in the supplied range  * 00072300
*              list.                                                  * 00072400
*                                                                     * 00072500
*              For unauthorized users, the value specified must be no * 00072600
*              greater than 16.                                       * 00072700
*                                                                     * 00072800
*              DEFAULT: 1.                                            * 00072900
*                                                                     * 00073000
*                                                                     * 00073100
*                                                                     * 00073200
*                                                                     * 00073300
*                                                                     * 00073400
*          [RETAIN=NO|YES]                                          * 00073500
*              is an optional keyword input that specifies whether or * 00073600
*              not a copy of the shared data is to be retained in the * 00073700
*              TARGET area after the UNSHARE.                         * 00073800
*                                                                     * 00073900
*              RETAIN(YES) may not be specified with BRANCH(YES).     * 00074000
*                                                                     * 00074100
*              Users should be aware that unsharing with RETAIN(YES)  * 00074200
*              requires the system to allocate new resources to back  * 00074300
*              the TARGET area.                                       * 00074400
*                                                                     * 00074500
*              DEFAULT: NO                                            * 00074600
*                                                                     * 00074700
*                                                                     * 00074800
*              RETAIN=NO                                              * 00074900
*                  Specifies that the TARGET area be removed from the * 00075000
*                  sharing group, with contents of this view being    * 00075100
*                  unpredictable.                                     * 00075200
*                                                                     * 00075300
*              RETAIN=YES                                             * 00075400
*                  Specifies that the TARGET area should retain a     * 00075500
*                  copy of the shared data after the UNSHARE.         * 00075600
*                                                                     * 00075700
*                                                                     * 00075800
*                                                                     * 00075900
*                                                                     * 00076000
*                                                                     * 00076100
*                                                                     * 00076200
*          [BRANCH=NO|YES]                                          * 00076300
*              is an optional keyword input that specifies whether    * 00076400
*              the branch entry or the PC entry of UNSHARE is to be   * 00076500
*              used.                                                  * 00076600
*                                                                     * 00076700
*              BRANCH(YES) is restricted to key 0 supervisor state    * 00076800
*              callers.                                               * 00076900
*                                                                     * 00077000
*              DEFAULT: NO                                            * 00077100
*                                                                     * 00077200
*                                                                     * 00077300
*              BRANCH=NO                                              * 00077400
*                  Specifies that the PC entry of UNSHARE is to be    * 00077500
*                  used.                                              * 00077600
*                                                                     * 00077700
*              BRANCH=YES                                             * 00077800
*                  Specifies that the branch entry of UNSHARE is to   * 00077900
*                  be used.                                           * 00078000
*                                                                     * 00078100
*                                                                     * 00078200
*                                                                     * 00078300
*                                                                     * 00078400
*                                                                     * 00078500
*      SHARESEG                                                       * 00078600
*          Requests that the source virtual storage area be made      * 00078700
*          shareable with another virtual location.                   * 00078800
*                                                                     * 00078900
*          This service is a BCP only internal service, open to key 0 * 00079000
*          supervisor state callers.                                  * 00079100
*                                                                     * 00079200
*          The source and target must reside on a segment boundary    * 00079300
*          and the size must be some multiple of 1048576 (the size of * 00079400
*          a segment).                                                * 00079500
*                                                                     * 00079600
*          The source storage must reside in a data space and the     * 00079700
*          target storage must reside in an address space.  All of    * 00079800
*          the target storage must be getmain assigned with the       * 00079900
*          LOC=EXPLICIT keyword.  The address space containing the    * 00080000
*          source data space must be non-memtermable and              * 00080100
*          non-swappable.  The target address space must be swapped   * 00080200
*          in throughout the IARVSERV invocation.  In addition, the   * 00080300
*          source data space cannot be DREF and cannot have any DREF  * 00080400
*          pages in the ranges to be shared.                          * 00080500
*                                                                     * 00080600
*                                                                     * 00080700
*          RANGLIST=xranglist                                         * 00080800
*              is the name (RS-type), or address in register          * 00080900
*              (2)-(12), of a required 4 byte input that contains the * 00081000
*              address of a range list.  The range list consists of a * 00081100
*              number of entries (as specified by NUMRANGE) where     * 00081200
*              each entry is 28 bytes long. A mapping of each entry   * 00081300
*              is provided in the mapping macro IARVRL. A description * 00081400
*              of the fields in each entry is as follows:             * 00081500
*                                                                     * 00081600
*                                                                     * 00081700
*                 SOURCE_VSA    contains the starting virtual address * 00081800
*                               of the source data to be made shared. * 00081900
*                                                                     * 00082000
*                               The virtual address to be specified   * 00082100
*                               must be on a segment (256K) boundary. * 00082200
*                                                                     * 00082300
*                               The length of this field is 4 bytes.  * 00082400
*                                                                     * 00082500
*                 SOURCE_ALETSTKN contains the ALET or STOKEN of the  * 00082600
*                               space in which the source data        * 00082700
*                               resides.                              * 00082800
*                                                                     * 00082900
*                               The length of this field is 8 bytes.  * 00083000
*                                                                     * 00083100
*                               If the first word of this field is 0, * 00083200
*                               then the second word is assumed to    * 00083300
*                               contain an ALET; otherwise, this      * 00083400
*                               field is assumed to contain a STOKEN. * 00083500
*                               STOKEN specification is allowed for   * 00083600
*                               data space storage only.              * 00083700
*                                                                     * 00083800
*                 NUMPAGES      contains the number of pages in the   * 00083900
*                               SOURCE or TARGET area.                * 00084000
*                                                                     * 00084100
*                               The length of this field is 4 bytes.  * 00084200
*                                                                     * 00084300
*                 TARGET_VSA    contains the starting virtual address * 00084400
*                               of the storage area to be used for    * 00084500
*                               accessing shared data.                * 00084600
*                                                                     * 00084700
*                               The virtual address to be specified   * 00084800
*                               must be on a segment (256K) boundary. * 00084900
*                                                                     * 00085000
*                               The length of this field is 4 bytes.  * 00085100
*                                                                     * 00085200
*                 TARGET_ALETSTKN contains the ALET or STOKEN of the  * 00085300
*                               space in which the TARGET area        * 00085400
*                               resides.                              * 00085500
*                                                                     * 00085600
*                               The length of this field is 8 bytes.  * 00085700
*                                                                     * 00085800
*                               If the first word of this field is 0, * 00085900
*                               then the second word is assumed to    * 00086000
*                               contain an ALET; otherwise, this      * 00086100
*                               field is assumed to contain a STOKEN. * 00086200
*                               STOKEN specification is allowed for   * 00086300
*                               data space storage only.              * 00086400
*                                                                     * 00086500
*                                                                     * 00086600
*                                                                     * 00086700
*                                                                     * 00086800
*                                                                     * 00086900
*                                                                     * 00087000
*          [NUMRANGE=xnumrange|1]                                   * 00087100
*              is the name (RS-type), or address in register          * 00087200
*              (2)-(12), of an optional fullword input variable that  * 00087300
*              specifies the number of entries in the supplied range  * 00087400
*              list.                                                  * 00087500
*                                                                     * 00087600
*              DEFAULT: 1.                                            * 00087700
*                                                                     * 00087800
*                                                                     * 00087900
*                                                                     * 00088000
*                                                                     * 00088100
*      CHANGEACCESS                                                   * 00088200
*          Requests that the type of access to the specified virtual  * 00088300
*          storage be changed.                                        * 00088400
*                                                                     * 00088500
*          When one page of a range being processed by CHANGEACCESS   * 00088600
*          is found to be not acceptable, then CHANGEACCESS will not  * 00088700
*          process that error page, nor the rest of the range, nor    * 00088800
*          any other ranges that have not yet been processed.  Since  * 00088900
*          the IARVSERV services can process multiple pages and since * 00089000
*          the services do not back out any ranges prior to the error * 00089100
*          range element, the caller can assume that all the pages    * 00089200
*          prior to the error page have been successfully processed.  * 00089300
*          An abend will be issued and general purpose registers two  * 00089400
*          and three will contain the address of the range list       * 00089500
*          element associated with the error page and the storage     * 00089600
*          address of the error page, respectively.  If the user      * 00089700
*          wishes to continue with the CHANGEACCESS, simply re-issue  * 00089800
*          the IARVSERV CHANGEACCESS service for storage ranges       * 00089900
*          following the error page.                                  * 00090000
*                                                                     * 00090100
*                                                                     * 00090200
*          RANGLIST=xranglist                                         * 00090300
*              is the name (RS-type), or address in register          * 00090400
*              (2)-(12), of a required 4 byte input that contains the * 00090500
*              address of a range list.  The range list consists of a * 00090600
*              number of entries (as specified by NUMRANGE) where     * 00090700
*              each entry is 28 bytes long. A mapping of each entry   * 00090800
*              is provided in the mapping macro IARVRL. A description * 00090900
*              of the fields in each entry is as follows:             * 00091000
*                                                                     * 00091100
*                                                                     * 00091200
*                 *RESERVED*    This field is just a place holder,    * 00091300
*                               and will not be used by UNSHARE.      * 00091400
*                                                                     * 00091500
*                               The length of this field is 12 bytes. * 00091600
*                                                                     * 00091700
*                 NUMPAGES      contains the number of pages in the   * 00091800
*                               TARGET area.                          * 00091900
*                                                                     * 00092000
*                               The length of this field is 4 bytes.  * 00092100
*                                                                     * 00092200
*                 TARGET_VSA    contains the starting virtual address * 00092300
*                               of the storage area to be removed     * 00092400
*                               from its use for accessing shared     * 00092500
*                               data.                                 * 00092600
*                                                                     * 00092700
*                               The virtual address to be specified   * 00092800
*                               must be on a page (4K) boundary.      * 00092900
*                                                                     * 00093000
*                               The length of this field is 4 bytes.  * 00093100
*                                                                     * 00093200
*                 TARGET_ALETSTKN contains the ALET or STOKEN of the  * 00093300
*                               space in which the TARGET area        * 00093400
*                               resides.                              * 00093500
*                                                                     * 00093600
*                               The length of this field is 8 bytes.  * 00093700
*                                                                     * 00093800
*                               If the first word of this field is 0, * 00093900
*                               then the second word is assumed to    * 00094000
*                               contain an ALET; otherwise, this      * 00094100
*                               field is assumed to contain a STOKEN. * 00094200
*                               STOKEN specification is allowed for   * 00094300
*                               data space storage only.              * 00094400
*                                                                     * 00094500
*                                                                     * 00094600
*                                                                     * 00094700
*                                                                     * 00094800
*                                                                     * 00094900
*                                                                     * 00095000
*          [NUMRANGE=xnumrange|1]                                   * 00095100
*              is the name (RS-type), or address in register          * 00095200
*              (2)-(12), of an optional fullword input variable that  * 00095300
*              specifies the number of entries in the supplied range  * 00095400
*              list.                                                  * 00095500
*                                                                     * 00095600
*              For unauthorized users, the value specified must be no * 00095700
*              greater than 16.                                       * 00095800
*                                                                     * 00095900
*              DEFAULT: 1.                                            * 00096000
*                                                                     * 00096100
*                                                                     * 00096200
*                                                                     * 00096300
*                                                                     * 00096400
*                                                                     * 00096500
*          TARGET_VIEW=READONLY|SHAREDWRITE|UNIQUEWRITE|TARGETWRITE| * 00096600
*              HIDDEN                                                * 00096700
*              is a required keyword input that indicates the         * 00096800
*              accessing mode on the TARGET area.                     * 00096900
*                                                                     * 00097000
*                                                                     * 00097100
*                                                                     * 00097200
*              TARGET_VIEW=READONLY                                   * 00097300
*                  Specifies that the TARGET area can only be used to * 00097400
*                  read data.                                         * 00097500
*                                                                     * 00097600
*                  Any attempt to alter data by writing onto the      * 00097700
*                  TARGET area will result in a program check.        * 00097800
*                                                                     * 00097900
*              TARGET_VIEW=SHAREDWRITE                                * 00098000
*                  Specifies that the TARGET area can be used to read * 00098100
*                  or write over data.                                * 00098200
*                                                                     * 00098300
*              TARGET_VIEW=UNIQUEWRITE                                * 00098400
*                  Specifies that the TARGET area can be used to read * 00098500
*                  data and to retain a private copy of shared data   * 00098600
*                  should any view of the shared data get altered.    * 00098700
*                                                                     * 00098800
*                                                                     * 00098900
*                  [COPYNOW]                                          * 00099000
*                      Specifies that the TARGET area should get a    * 00099100
*                      copy of the source data immediately.           * 00099200
*                      DEFAULT: DO_NOT_COPYNOW                        * 00099300
*                                                                     * 00099400
*                                                                     * 00099500
*                                                                     * 00099600
*              TARGET_VIEW=TARGETWRITE                                * 00099700
*                  Specifies that the TARGET area can be used to read * 00099800
*                  shared data and to retain a private copy of shared * 00099900
*                  data should any attempt to alter this view of the  * 00100000
*                  data be made.                                      * 00100100
*                                                                     * 00100200
*              TARGET_VIEW=HIDDEN                                     * 00100300
*                  Specifies that the TARGET area will be unable to   * 00100400
*                  access its data until its view type is changed to  * 00100500
*                  READONLY, SHAREDWRITE, UNIQUEWRITE, or             * 00100600
*                  TARGETWRITE.                                       * 00100700
*                                                                     * 00100800
*                  Any attempt to access a hidden TARGET area will    * 00100900
*                  result in a program check.                         * 00101000
*                                                                     * 00101100
*                                                                     * 00101200
*                                                                     * 00101300
*                                                                     * 00101400
*                                                                     * 00101500
*                                                                     * 00101600
*                                                                     * 00101700
*      End of a set of mutually exclusive required keys.              * 00101800
*                                                                     * 00101900
*                                                                     * 00102000
*                                                                     * 00102100
*      [PLISTVER=xplistver|IMPLIED_VERSION]                         * 00102200
*          is an optional byte input decimal value in the "0-0" range * 00102300
*          that specifies the macro version.  PLISTVER is the only    * 00102400
*          key allowed on the list form of MF and determines which    * 00102500
*          parameter list is generated.  Note that MAX may be         * 00102600
*          specified instead of a number, and the parameter list will * 00102700
*          be of the largest size currently supported. This size may  * 00102800
*          grow from release to release (thus possibly affecting the  * 00102900
*          amount of storage needed by your program).  If your        * 00103000
*          program can tolerate this, IBM recommends that you always  * 00103100
*          specify MAX when creating the list form parameter list as  * 00103200
*          that will ensure that the list form parameter list is      * 00103300
*          always long enough to hold whatever parameters might be    * 00103400
*          specified on the execute form.                             * 00103500
*          DEFAULT: IMPLIED_VERSION.  When PLISTVER is omitted, the   * 00103600
*          default is the lowest version which allows all of the      * 00103700
*          parameters specified on the invocation to be processed.    * 00103800
*                                                                     * 00103900
*                                                                     * 00104000
*                                                                     * 00104100
*                                                                     * 00104200
*      [MF=S|L|E]                                                   * 00104300
*          is an optional keyword input which specifies the macro     * 00104400
*          form.                                                      * 00104500
*          DEFAULT: S                                                 * 00104600
*                                                                     * 00104700
*                                                                     * 00104800
*          [MF=S]                                                     * 00104900
*              specifies the standard form of the macro.  The "S"     * 00105000
*              form generates code to put the parameters into an      * 00105100
*              in-line parameter list and invoke the desired service. * 00105200
*              Full checking for required macro keys is done along    * 00105300
*              with supplying defaults for omitted optional           * 00105400
*              parameters.                                            * 00105500
*                                                                     * 00105600
*          [MF=(L,xmfctrl,xmfattr|0D)]                              * 00105700
*              specifies the list form of the macro.  The "L" form    * 00105800
*              defines an area to be used for the parameter list.     * 00105900
*              Only the PLISTVER key may be specified on the          * 00106000
*              invocation.  All other macro parameters are flagged as * 00106100
*              errors.  If PLISTVER is not specified, the original    * 00106200
*              parameter list definition is used.                     * 00106300
*                                                                     * 00106400
*            ,xmfctrl                                                 * 00106500
*              is a required input.  It is the name of a storage area * 00106600
*              for the parameter list.                                * 00106700
*                                                                     * 00106800
*            ,xmfattr|0D                                            * 00106900
*              is an optional 60 character input string that varies   * 00107000
*              from 1 to 60 characters. Use it to force boundary      * 00107100
*              alignment of the parameter list. Use only 0F or 0D.    * 00107200
*              DEFAULT: 0D which forces the parameter list to a       * 00107300
*              doubleword boundary.                                   * 00107400
*                                                                     * 00107500
*          [MF=(E,xmfctrl,COMPLETE)]                                * 00107600
*              specifies the execute form of the macro.  The "E" form * 00107700
*              generates code to put the parameters into the          * 00107800
*              parameter list specified by xmfctrl and provides full  * 00107900
*              syntax checking with default setting.                  * 00108000
*                                                                     * 00108100
*            ,xmfctrl                                                 * 00108200
*              is a required input.  It is the name (RS-type), or     * 00108300
*              address in register (1)-(12), of a storage area for    * 00108400
*              the parameter list.                                    * 00108500
*                                                                     * 00108600
*            ,COMPLETE                                              * 00108700
*              is an optional keyword input which specifies the       * 00108800
*              degree of macro parameter syntax checking.             * 00108900
*              DEFAULT: COMPLETE                                      * 00109000
*                                                                     * 00109100
*                                                                     * 00109200
*              COMPLETE                                               * 00109300
*                  Checking for required macro keys is done and       * 00109400
*                  defaults are supplied for omitted optional         * 00109500
*                  parameters.                                        * 00109600
*                                                                     * 00109700
*                                                                     * 00109800
*                                                                     * 00109900
*                                                                     * 00110000
*                                                                     * 00110100
*                                                                     * 00110200
*                                                                     * 00110300
*01* RETURN CODES:                                                    * 00110400
*                                                                     * 00110500
*                                                                     * 00110600
*       00 (0)    Successful completion.                              * 00110700
*                                                                     * 00110800
*       04 (4)    Successful completion, with exception.              * 00110900
*                                                                     * 00111000
*       08 (8)    The request is rejected due to non-system failure.  * 00111100
*                                                                     * 00111200
*       0C (12)   The request is rejected due to system failure.      * 00111300
*                                                                     * 00111400
*                                                                     * 00111500
*                                                                     * 00111600
*01* REASON CODES:                                                    * 00111700
*                                                                     * 00111800
*       In the following IARVSERV return reason codes, the bytes      * 00111900
*       designated "xx" are for diagnostic purposes and have no       * 00112000
*       significance to the external interface.                       * 00112100
*                                                                     * 00112200
*       REASON    RETURN                                              * 00112300
*       CODE      CODE      DESCRIPTION                               * 00112400
*                                          * 00112500
*                                                                     * 00112600
*                                                                     * 00112700
*       xx0101xx  04(4)     IARVSERV-SHARE:  The  processor  does not * 00112800
*                           support SHARE  for  UNIQUEWRITE.  A  copy * 00112900
*                           from the SOURCE to the TARGET was made.   * 00113000
*                                                                     * 00113100
*       xx0102xx  04(4)     IARVSERV-SHARE:    The    system    found * 00113200
*                           conditions (e.g. the SOURCE is  fixed  in * 00113300
*                           swappable  storage)  which  may  lead  to * 00113400
*                           storage requirement conflicts for sharing * 00113500
*                           with  UNIQUEWRITE. A copy from the SOURCE * 00113600
*                           to the TARGET was made.                   * 00113700
*                                                                     * 00113800
*       xx0103xx  04(4)     IARVSERV-SHARE:  The  system  found  some * 00113900
*                           SOURCE pages to be  non-GETMAINed.    The * 00114000
*                           target  is either non-GETMAINed or marked * 00114100
*                           as first reference.                       * 00114200
*                                                                     * 00114300
*       xx0104xx  08(8)     IARVSERV-SHARE:   An   unauthorized  user * 00114400
*                           attempted  to  SHARE  more   pages   than * 00114500
*                           allowed  by  the installation (as defined * 00114600
*                           by SMF limits).                           * 00114700
*                                                                     * 00114800
*       xx0105xx  08(8)     IARVSERV-SHARE failed, caller specified a * 00114900
*                           target   write  view  mode  and  the  SOP * 00115000
*                           hardware feature is not available.        * 00115100
*                                                                     * 00115200
*       xx010Axx  0C(12)    IARVSERV-SHARE:    The    system   cannot * 00115300
*                           complete the service for the request  due * 00115400
*                           to a shortage of resources at this time.  * 00115500
*                                                                     * 00115600
*       xx013Cxx  0C(12)    IARVSERV-SHARE:    The    system   cannot * 00115700
*                           complete the service for the request  due * 00115800
*                           to  a  required page being unavailable or * 00115900
*                           lost.                                     * 00116000
*                                                                     * 00116100
*       xx0203xx  04(4)     IARVSERV-UNSHARE:    The    system    has * 00116200
*                           overriden the RETAIN(NO) option, and kept * 00116300
*                           a  copy  of the shared data in the TARGET * 00116400
*                           area.                                     * 00116500
*                                                                     * 00116600
*       xx0204xx  04(4)     IARVSERV-UNSHARE:    The    system    has * 00116700
*                           overriden the RETAIN(YES) option  because * 00116800
*                           the  shared data is associated with a DIV * 00116900
*                           object  but  the  TARGET  area is not the * 00117000
*                           original window mapped to the DIV object. * 00117100
*                           The    TARGET    area   has   been   made * 00117200
*                           first-reference.                          * 00117300
*                                                                     * 00117400
*       xx0205xx  04(4)     IARVSERV-UNSHARE:   Some   pages  in  the * 00117500
*                           TARGET area do not belong to any  sharing * 00117600
*                           group.                                    * 00117700
*                                                                     * 00117800
*       xx020Bxx  0C(12)    IARVSERV-UNSHARE:  The  system failed the * 00117900
*                           request due  to  a  required  page  being * 00118000
*                           unavailable or lost.                      * 00118100
*                                                                     * 00118200
*       xx0301xx  04(4)     IARVSERV-CHANGEACCESS   -  The  processor * 00118300
*                           does   not   support   CHANGEACCESS   for * 00118400
*                           UNIQUEWRITE.     A  copy  of  the  TARGET * 00118500
*                           page(s) was made.                         * 00118600
*                                                                     * 00118700
*       xx0305xx  08(8)     IARVSERV-CHANGEACCESS    failed,   caller * 00118800
*                           specified a target write  view  mode  and * 00118900
*                           the   SOP   hardware   feature   is   not * 00119000
*                           available.                                * 00119100
*                                                                     * 00119200
*       xx030Bxx  0C(12)    IARVSERV-CHANGEACCESS,  the system failed * 00119300
*                           the request due to a required page  being * 00119400
*                           unavailable or lost.                      * 00119500
*                                                                     * 00119600
*       xx030Cxx  04(4)     IARVSERV-CHANGEACCESS,     the     system * 00119700
*                           processed  a  CHANGEACCESS   request   to * 00119800
*                           UNIQUEWRITE or TARGETWRITE for non-shared * 00119900
*                           pages   as   a  CHANGEACCESS  request  to * 00120000
*                           SHAREDWRITE.                              * 00120100
*                                                                     * 00120200
*       xx0407xx  08(8)     IARVSERV-SHARESEG   failed,   the  target * 00120300
*                           segment is not invalid, type 1.           * 00120400
*                                                                     * 00120500
*       xx040Exx  08(8)     IARVSERV-SHARESEG    failed,    a    VDAC * 00120600
*                           associate is in progress for  a  page  in * 00120700
*                           the target segment.                       * 00120800
*                                                                     * 00120900
*                                                                     * 00121000
*                                                                     * 00121100
*01* ABEND CODES:                                                     * 00121200
*                                                                     * 00121300
*                                                                     * 00121400
*       6C5       RSM   virtual   services   failed  due  to  invalid * 00121500
*                 requests.                                           * 00121600
*                                                                     * 00121700
*                                                                     * 00121800
*                                                                     * 00121900
*01* ABEND REASON CODES:                                              * 00122000
*                                                                     * 00122100
*       In  the  following  IARVSERV  abend  reason  codes, the bytes * 00122200
*       designated  "xx"  are  for  diagnostic  purposes  and have no * 00122300
*       significance to the external interface.                       * 00122400
*                                                                     * 00122500
*       NOTE:   When  an  abend  is  for  a range element, additional * 00122600
*       diagnostic  information  will be provided (at time of abend); * 00122700
*       namely, register 2 will contain the address of the range list * 00122800
*       element  in  error and register 3 will contain the address of * 00122900
*       the current storage being processed.                          * 00123000
*                                                                     * 00123100
*       REASON    ABEND                                               * 00123200
*       CODE      CODE      DESCRIPTION                               * 00123300
*                                          * 00123400
*                                                                     * 00123500
*                                                                     * 00123600
*       xxFF10xx  6C5       IARVSERV   failed,  caller  held  lock(s) * 00123700
*                           other than the local lock.                * 00123800
*                                                                     * 00123900
*       xxFF11xx  6C5       IARVSERV failed, the input parameter list * 00124000
*                           or  range  list  is not accessible to the * 00124100
*                           service using the caller's execution key. * 00124200
*                                                                     * 00124300
*       xxFF12xx  6C5       IARVSERV  failed,  caller  issued a macro * 00124400
*                           version that is not valid.                * 00124500
*                                                                     * 00124600
*       xxFF13xx  6C5       IARVSERV   failed,   reserved  fields  in * 00124700
*                           callers  macro  parameter  list  are  not * 00124800
*                           zeros.                                    * 00124900
*                                                                     * 00125000
*       xxFF14xx  6C5       IARVSERV failed, user requested a service * 00125100
*                           which is not valid.                       * 00125200
*                                                                     * 00125300
*       xxFF15xx  6C5       IARVSERV  failed, caller is not in 31 bit * 00125400
*                           addressing mode.                          * 00125500
*                                                                     * 00125600
*       xxFF16xx  6C5       IARVSERV   failed,  range  element  count * 00125700
*                           (NUMRANGE) is less than  one  or  greater * 00125800
*                           than 16.                                  * 00125900
*                                                                     * 00126000
*       xx0120xx  6C5       IARVSERV-SHARE failed, the STOKEN for the * 00126100
*                           SOURCE  area  does  not represent a valid * 00126200
*                           data space STOKEN.                        * 00126300
*                                                                     * 00126400
*       xx0121xx  6C5       IARVSERV-SHARE failed, the STOKEN for the * 00126500
*                           TARGET  area  does  not represent a valid * 00126600
*                           data space STOKEN.                        * 00126700
*                                                                     * 00126800
*       xx0122xx  6C5       IARVSERV-SHARE   failed,   the  beginning * 00126900
*                           address of the SOURCE area  specified  in * 00127000
*                           the  range  element  is not page-boundary * 00127100
*                           aligned.                                  * 00127200
*                                                                     * 00127300
*       xx0123xx  6C5       IARVSERV-SHARE   failed,   the  beginning * 00127400
*                           address of the TARGET area  specified  in * 00127500
*                           the  range  element  is not page-boundary * 00127600
*                           aligned.                                  * 00127700
*                                                                     * 00127800
*       xx0124xx  6C5       IARVSERV-SHARE  failed,  the  SOURCE  and * 00127900
*                           TARGET areas are not different.           * 00128000
*                                                                     * 00128100
*       xx0125xx  6C5       IARVSERV-SHARE  failed,  specified SOURCE * 00128200
*                           area     is     not     GETMAINed     (or * 00128300
*                           STORAGE-OBTAINed) as part of the pageable * 00128400
*                           private  region  of  the caller's address * 00128500
*                           space, nor within the size of an existing * 00128600
*                           data space(s) as pageable storage.        * 00128700
*                                                                     * 00128800
*       xx0126xx  6C5       IARVSERV-SHARE  failed,  caller  does not * 00128900
*                           have legal access to the SOURCE area with * 00129000
*                           the given ALET.                           * 00129100
*                                                                     * 00129200
*       xx0127xx  6C5       IARVSERV-SHARE  failed,  caller  does not * 00129300
*                           have legal access to the SOURCE area with * 00129400
*                           the given STOKEN.                         * 00129500
*                                                                     * 00129600
*       xx0128xx  6C5       IARVSERV-SHARE  failed,  caller  does not * 00129700
*                           have legal access to the TARGET area with * 00129800
*                           the given ALET.                           * 00129900
*                                                                     * 00130000
*       xx0129xx  6C5       IARVSERV-SHARE  failed,  caller  does not * 00130100
*                           have legal access to the TARGET area with * 00130200
*                           the given STOKEN.                         * 00130300
*                                                                     * 00130400
*       xx012Axx  6C5       IARVSERV-SHARE  failed, the address space * 00130500
*                           that owns the SOURCE is not HOME  and  is * 00130600
*                           swappable.                                * 00130700
*                                                                     * 00130800
*       xx012Bxx  6C5       IARVSERV-SHARE  failed, the address space * 00130900
*                           that owns the TARGET is not HOME  and  is * 00131000
*                           swappable.                                * 00131100
*                                                                     * 00131200
*       xx012Cxx  6C5       IARVSERV-SHARE   failed,   the   caller's * 00131300
*                           execution key (PSW key)  is  insufficient * 00131400
*                           for altering the TARGET area.             * 00131500
*                                                                     * 00131600
*       xx012Dxx  6C5       IARVSERV-SHARE         failed,        the * 00131700
*                           TARGET_VIEW(SHAREDWRITE)    option     is * 00131800
*                           specified  but the caller's execution key * 00131900
*                           (PSW  key)  is  insufficient for altering * 00132000
*                           the SOURCE area.                          * 00132100
*                                                                     * 00132200
*       xx012Exx  6C5       IARVSERV-SHARE  failed,  one  page in the * 00132300
*                           SOURCE area and its corresponding page in * 00132400
*                           the  TARGET  area  do  not  have the same * 00132500
*                           storage  protect key and fetch-protection * 00132600
*                           status.                                   * 00132700
*                                                                     * 00132800
*       xx012Fxx  6C5       IARVSERV-SHARE failed, the SOURCE area is * 00132900
*                           not acceptable because it contains system * 00133000
*                           data that is not eligible for the type of * 00133100
*                           sharing requested.                        * 00133200
*                                                                     * 00133300
*       xx0130xx  6C5       IARVSERV-SHARE failed, the TARGET area is * 00133400
*                           not acceptable because it contains system * 00133500
*                           data   that  should  not  be  altered  by * 00133600
*                           caller.                                   * 00133700
*                                                                     * 00133800
*       xx0131xx  6C5       IARVSERV-SHARE  failed,  the  TARGET area * 00133900
*                           contains  unacceptable  pages,  such   as * 00134000
*                           pages  that  are  page-protected or PGSER * 00134100
*                           page-fixed pages.                         * 00134200
*                                                                     * 00134300
*       xx0132xx  6C5       IARVSERV-SHARE failed, the SOURCE and the * 00134400
*                           TARGET  areas  do  not  meet  the storage * 00134500
*                           attribute requirements for sharing.       * 00134600
*                                                                     * 00134700
*       xx0133xx  6C5       IARVSERV-SHARE  failed,  READONLY sharing * 00134800
*                           pages  cannot   be   made   shared   with * 00134900
*                           SHAREDWRITE.                              * 00135000
*                                                                     * 00135100
*       xx0134xx  6C5       IARVSERV-SHARE  failed,  the  SOURCE area * 00135200
*                           contains  pages  that  are  shared   with * 00135300
*                           TARGET_VIEW of TARGETWRITE.               * 00135400
*                                                                     * 00135500
*       xx0135xx  6C5       IARVSERV-SHARE  failed,  the  SOURCE area * 00135600
*                           contains pages  that  are  currently  DIV * 00135700
*                           MAPped to a hiperspace object.            * 00135800
*                                                                     * 00135900
*       xx0136xx  6C5       IARVSERV-SHARE  failed,  the  TARGET area * 00136000
*                           contains pages  that  are  currently  DIV * 00136100
*                           MAPped.                                   * 00136200
*                                                                     * 00136300
*       xx0137xx  6C5       IARVSERV-SHARE failed, part of the SOURCE * 00136400
*                           area  is in a hiperspace, VIO window, V=R * 00136500
*                           region, or PSA.                           * 00136600
*                                                                     * 00136700
*       xx0138xx  6C5       IARVSERV-SHARE failed, part of the TARGET * 00136800
*                           area  is in a hiperspace, VIO window, V=R * 00136900
*                           region, or PSA.                           * 00137000
*                                                                     * 00137100
*       xx0139xx  6C5       IARVSERV-SHARE   failed,  the  number  of * 00137200
*                           pages specified in a range list entry  is * 00137300
*                           not valid.                                * 00137400
*                                                                     * 00137500
*       xx013Axx  6C5       IARVSERV-SHARE   failed,   the  specified * 00137600
*                           SOURCE ALET represents a subspace.        * 00137700
*                                                                     * 00137800
*       xx013Bxx  6C5       IARVSERV-SHARE   failed,   the  specified * 00137900
*                           TARGET ALET represents a subspace.        * 00138000
*                                                                     * 00138100
*       xx013Dxx  6C5       IARVSERV-SHARE  failed,  specified TARGET * 00138200
*                           area     is     not     GETMAINed     (or * 00138300
*                           STORAGE-OBTAINed) as part of the pageable * 00138400
*                           private  region  of  the caller's address * 00138500
*                           space, nor within the size of an existing * 00138600
*                           data space(s) as pageable storage.        * 00138700
*                                                                     * 00138800
*       xx013Exx  6C5       IARVSERV-SHARE   failed,   the  specified * 00138900
*                           SOURCE ALET is not valid (probably not on * 00139000
*                           a current access list).                   * 00139100
*                                                                     * 00139200
*       xx013Fxx  6C5       IARVSERV-SHARE   failed,   the  specified * 00139300
*                           TARGET ALET is not valid (probably not on * 00139400
*                           a current access list).                   * 00139500
*                                                                     * 00139600
*       xx0140xx  6C5       IARVSERV-SHARE  failed,  the  SOURCE area * 00139700
*                           contains HIDDEN pages.                    * 00139800
*                                                                     * 00139900
*       xx0141xx  6C5       IARVSERV-SHARE failed, the source page is * 00140000
*                           part of a shared segment.                 * 00140100
*                                                                     * 00140200
*       xx0142xx  6C5       IARVSERV-SHARE failed, the target page is * 00140300
*                           part of a shared segment.                 * 00140400
*                                                                     * 00140500
*       xx0220xx  6C5       IARVSERV-UNSHARE  failed, RETAIN(YES) may * 00140600
*                           not be specified when the target contains * 00140700
*                           pages  which are fixed by attribute (such * 00140800
*                           as SQA or LSQA).                          * 00140900
*                                                                     * 00141000
*       xx0221xx  6C5       IARVSERV-UNSHARE  failed,  the STOKEN for * 00141100
*                           the TARGET  area  does  not  represent  a * 00141200
*                           valid data space STOKEN.                  * 00141300
*                                                                     * 00141400
*       xx0223xx  6C5       IARVSERV-UNSHARE  failed,  the  beginning * 00141500
*                           address of the TARGET area  specified  in * 00141600
*                           the  range  element  is not page-boundary * 00141700
*                           aligned.                                  * 00141800
*                                                                     * 00141900
*       xx0225xx  6C5       IARVSERV-UNSHARE     failed,    specified * 00142000
*                           storage    is    not    GETMAINed     (or * 00142100
*                           STORAGE-OBTAINed) as part of the pageable * 00142200
*                           private  region  of  the caller's address * 00142300
*                           space,   nor  within  any  existing  data * 00142400
*                           space(s).                                 * 00142500
*                                                                     * 00142600
*       xx0228xx  6C5       IARVSERV-UNSHARE  failed, caller does not * 00142700
*                           have legal access to the TARGET area with * 00142800
*                           the given ALET.                           * 00142900
*                                                                     * 00143000
*       xx0229xx  6C5       IARVSERV-UNSHARE  failed, caller does not * 00143100
*                           have legal access to the TARGET area with * 00143200
*                           the given STOKEN.                         * 00143300
*                                                                     * 00143400
*       xx022Bxx  6C5       IARVSERV-UNSHARE   failed,   the  address * 00143500
*                           space that owns the TARGET is not swapped * 00143600
*                           in.                                       * 00143700
*                                                                     * 00143800
*       xx022Cxx  6C5       IARVSERV-UNSHARE   failed,  the  caller's * 00143900
*                           execution key (PSW key)  is  insufficient * 00144000
*                           for altering the TARGET area.             * 00144100
*                                                                     * 00144200
*       xx0231xx  6C5       IARVSERV-UNSHARE  failed, the TARGET area * 00144300
*                           contains  unacceptable  pages,  such   as * 00144400
*                           pages  that  are  page-protected or PGSER * 00144500
*                           page-fixed pages or permanent storage.    * 00144600
*                                                                     * 00144700
*       xx0238xx  6C5       IARVSERV-UNSHARE   failed,  part  of  the * 00144800
*                           TARGET area is in a Hiperspace or in PSA. * 00144900
*                                                                     * 00145000
*       xx0239xx  6C5       IARVSERV-UNSHARE  failed,  the  number of * 00145100
*                           pages specified in a range list entry  is * 00145200
*                           not valid.                                * 00145300
*                                                                     * 00145400
*       xx023Bxx  6C5       IARVSERV-UNSHARE  failed,  the  specified * 00145500
*                           TARGET ALET represents a subspace.        * 00145600
*                                                                     * 00145700
*       xx023Fxx  6C5       IARVSERV-UNSHARE  failed,  the  specified * 00145800
*                           TARGET ALET is not valid.                 * 00145900
*                                                                     * 00146000
*       xx0321xx  6C5       IARVSERV-CHANGEACCESS  failed, the STOKEN * 00146100
*                           for the TARGET area does not represent  a * 00146200
*                           valid data space STOKEN.                  * 00146300
*                                                                     * 00146400
*       xx0323xx  6C5       IARVSERV-CHANGEACCESS     failed,     the * 00146500
*                           beginning  address  of  the  TARGET  area * 00146600
*                           specified  in  the  range  element is not * 00146700
*                           page-boundary aligned.                    * 00146800
*                                                                     * 00146900
*       xx0328xx  6C5       IARVSERV-CHANGEACCESS failed, caller does * 00147000
*                           not  have legal access to the TARGET area * 00147100
*                           with the given ALET.                      * 00147200
*                                                                     * 00147300
*       xx0329xx  6C5       IARVSERV-CHANGEACCESS failed, caller does * 00147400
*                           not  have legal access to the TARGET area * 00147500
*                           with the given STOKEN.                    * 00147600
*                                                                     * 00147700
*       xx032Bxx  6C5       IARVSERV-CHANGEACCESS failed, the address * 00147800
*                           space  that  owns  the TARGET area is not * 00147900
*                           swapped in.                               * 00148000
*                                                                     * 00148100
*       xx032Cxx  6C5       IARVSERV-CHANGEACCESS     failed,     the * 00148200
*                           caller's execution  key  is  insufficient * 00148300
*                           for altering the TARGET area.             * 00148400
*                                                                     * 00148500
*       xx0330xx  6C5       IARVSERV-CHANGEACCESS  failed, the TARGET * 00148600
*                           area  is  not   acceptable   because   it * 00148700
*                           contains  system  data that should not be * 00148800
*                           altered by caller.                        * 00148900
*                                                                     * 00149000
*       xx0331xx  6C5       IARVSERV-CHANGEACCESS  failed, the TARGET * 00149100
*                           area contains unacceptable pages, such as * 00149200
*                           pages   that   are  PGSER  page-fixed  or * 00149300
*                           permanent storage.                        * 00149400
*                                                                     * 00149500
*       xx0338xx  6C5       IARVSERV-CHANGEACCESS failed, part of the * 00149600
*                           TARGET  area  is  in  a  hiperspace,  VIO * 00149700
*                           window, V=R region, or PSA.               * 00149800
*                                                                     * 00149900
*       xx0339xx  6C5       IARVSERV-CHANGEACCESS  failed, the number * 00150000
*                           of pages specified in a range list  entry * 00150100
*                           is not valid.                             * 00150200
*                                                                     * 00150300
*       xx033Bxx  6C5       IARVSERV-CHANGEACCESS     failed,     the * 00150400
*                           specified  TARGET   ALET   represents   a * 00150500
*                           subspace.                                 * 00150600
*                                                                     * 00150700
*       xx033Dxx  6C5       IARVSERV-CHANGEACCESS  failed,  specified * 00150800
*                           storage    is    not    GETMAINed     (or * 00150900
*                           STORAGE-OBTAINed) as part of the pageable * 00151000
*                           private  region  of  the caller's address * 00151100
*                           space,   nor  within  any  existing  data * 00151200
*                           space(s).                                 * 00151300
*                                                                     * 00151400
*       xx033Fxx  6C5       IARVSERV-CHANGEACCESS     failed,     the * 00151500
*                           specified TARGET ALET is not valid.       * 00151600
*                                                                     * 00151700
*       xx0331xx  6C5       IARVSERV-CHANGEACCESS  failed,  the  user * 00151800
*                           attempted to change a page that  is  part * 00151900
*                           of  a shared segment to a target write or * 00152000
*                           unique-write view.                        * 00152100
*                                                                     * 00152200
*       xx0400xx  6C5       IARVSERV-SHARESEG failed, the SOURCE alet * 00152300
*                           is not valid.                             * 00152400
*                                                                     * 00152500
*       xx0401xx  6C5       IARVSERV-SHARESEG  failed,  the source is * 00152600
*                           not a valid data  space  belonging  to  a * 00152700
*                           non-swappable,  non-memtermable,  address * 00152800
*                           space.                                    * 00152900
*                                                                     * 00153000
*       xx0402xx  6C5       IARVSERV-SHARESEG failed, the TARGET alet * 00153100
*                           is not valid.                             * 00153200
*                                                                     * 00153300
*       xx0403xx  6C5       IARVSERV-SHARESEG   failed,   the  TARGET * 00153400
*                           space is not an address space.            * 00153500
*                                                                     * 00153600
*       xx0404xx  6C5       IARVSERV-SHARESEG   failed,   the  source * 00153700
*                           range is either too  large  or  does  not * 00153800
*                           start on a segment boundary.              * 00153900
*                                                                     * 00154000
*       xx0405xx  6C5       IARVSERV-SHARESEG   failed,   the  target * 00154100
*                           range is either too  large  or  does  not * 00154200
*                           start  on a segment boundary, or contains * 00154300
*                           the PSA.                                  * 00154400
*                                                                     * 00154500
*       xx0406xx  6C5       IARVSERV-SHARESEG  failed,  the number of * 00154600
*                           pages  specified   is   not   a   segment * 00154700
*                           multiple.                                 * 00154800
*                                                                     * 00154900
*       xx0408xx  6C5       IARVSERV-SHARESEG   failed,   a   segment * 00155000
*                           within the source data space could not be * 00155100
*                           validated due to a lost page.             * 00155200
*                                                                     * 00155300
*       xx0409xx  6C5       IARVSERV-SHARESEG  failed, caller was not * 00155400
*                           in key 0, supervisor state.               * 00155500
*                                                                     * 00155600
*       xx040Axx  6C5       IARVSERV-SHARESEG   failed,   the  target * 00155700
*                           space is invalid or about to  be  swapped * 00155800
*                           out.                                      * 00155900
*                                                                     * 00156000
*       xx040Bxx  6C5       IARVSERV-SHARESEG  failed,  a page in the * 00156100
*                           source  segment  contains  a  page  level * 00156200
*                           shared page.                              * 00156300
*                                                                     * 00156400
*       xx040Cxx  6C5       IARVSERV-SHARESEG  failed,  a key/protect * 00156500
*                           status of the  source  segment  does  not * 00156600
*                           match   the  key/protect  status  of  the * 00156700
*                           target segment.                           * 00156800
*                                                                     * 00156900
*       xx040Dxx  6C5       IARVSERV-SHARESEG  failed,  the  owner of * 00157000
*                           the  source   data   space   is   not   a * 00157100
*                           non-swappable,   non-memtermable  address * 00157200
*                           space.                                    * 00157300
*                                                                     * 00157400
*       xx040Fxx  6C5       IARVSERV-SHARESEG   failed,   the  target * 00157500
*                           segment is part of a SUBSPACE.            * 00157600
*                                                                     * 00157700
*       xx0410xx  6C5       IARVSERV-SHARESEG failed, the source data * 00157800
*                           space is dref.                            * 00157900
*                                                                     * 00158000
*       xx0411xx  6C5       IARVSERV-SHARESEG  failed,  a page in the * 00158100
*                           source range is dref.                     * 00158200
*                                                                     * 00158300
*                                                                     * 00158400
*                                                                     * 00158500
*01* MODULE TYPE:  ASSEM MACRO                                        * 00158600
*                                                                     * 00158700
*02*   PROCESSOR:  ASSEM                                              * 00158800
*                                                                     * 00158900
*01* COMPONENT:  SC1CR                                                * 00159000
*                                                                     * 00159100
*01* DISTRIBUTION LIBRARY: AMACLIB                                    * 00159200
*                                                                     * 00159300
*01* MACRO USAGE NOTES:                                               * 00159400
*                                                                     * 00159500
*                                                                     * 00159600
*    1.  Printing of the macro expansion is controlled by the ZPRINT  * 00159700
*        global macro variable.  Any value other than 'NO' will       * 00159800
*        result in the macro expansion being printed.  The default is * 00159900
*        'YES'.  The following examples illustrate how the ZPRINT     * 00160000
*        variable should be set.                                      * 00160100
*                                                                     * 00160200
*                    GBLC &ZPRINT                                     * 00160300
*            &ZPRINT SETC 'YES'          &ZPRINT SETC 'NO'            * 00160400
*                                                                     * 00160500
*                                                                     * 00160600
*    2.  All   keys   currently   contained  in  the  IARVSERV  macro * 00160700
*        correspond  to  version  0.   If you specify PLISTVER, use a * 00160800
*        value of 0 or MAX.                                           * 00160900
*                                                                     * 00161000
*                                                                     * 00161100
*                                                                     * 00161200
*                                                                     * 00161300
*01* CHANGE ACTIVITY:                                                 * 00161400
*                                                                     * 00161500
*   Flag LineItem  FMID    Date   ID    Comment                       * 00161600
*                                                                     * 00161700
*    $L0=CAPTU2KE HBB5520 940414 PD00G1:  Shared Data support.        * 00161800
*    $L1=OPEN31JW JBB5522 941014 PD00KI:  POSIX Support (MMAP).       * 00161900
*    $L2=CAPTE    HBB6606 971006 PD00CS:  Captured Storage            * 00162000
*                                         Enhancements - Add SHARESEG * 00162100
*                                         option.                     * 00162200
*    $P1=PVT0094  HBB6606 971201 PD00CS:  Prolog corrections.         * 00162300
*    $01=OW31766  HBB5520 980501 PD00CS:  Add new PartialPage         * 00162400
*                                         keyword.                    * 00162500
****** END OF SPECIFICATIONS *****************************************/ 00162600
*/* TLINE 1 *********************************************************** 00162700
         MACRO                                                          00162800
&XLABEL  IARVSERV &RANGLIST=,&NUMRANGE=,&TARGET_VIEW=,&BRANCH=,        *00162900
               &PARTIALPAGE=,&RETAIN=,&PLISTVER=,&MF=                   00163000
.*                                                                      00163100
*                  MACDATE -06/25/98-<0>                                00163200
.*                                                                      00163300
.*******************************************************************    00163400
.***AB.02  GLOBAL VARIABLES TO CONTROL PRINT AND CODE GENERATION        00163500
.*******************************************************************    00163600
                  GBLC  &ZPRINT     YES=PRINT NO=NO PRINT               00163700
                  GBLC  &ZTEST      YES=TEST NO=NO TEST                 00163800
                  GBLC  &ZSYSTEM    PCCODE10, MVS, SAK, VM, XAX         00163900
.*                                                                      00164000
                  GBLC  &ZIARVSERV  YES=MACRO USED AT LEAST ONCE        00164100
.*******************************************************************    00164200
.***AB.03  COMMONLY USED LOCAL MACRO VARIABLES                          00164300
.*******************************************************************    00164400
                  LCLC  &ZMS        ERROR MESSAGE WORK AREA             00164500
                  LCLC  &ZCNDX      LAST THREE SYSNDX CHARACTERS        00164600
                  LCLC  &ZCLNG      USED WHEN LENGTH IS NEEDED          00164700
                  LCLC  &ZCGPR      USED WHEN VALUE IS IN A GPR         00164800
                  LCLC  &ZCVAL      USED TO CONTAIN FIXED VALUE         00164900
                  LCLA  &ZAWRK      USED AS A WORK AREA                 00165000
                  LCLA  &ZASIZ      USED FOR SIZE OF VALUE              00165100
                  LCLA  &ZN         NUMERIC WORK VARIABLE               00165200
                  LCLC  &ZC         CHARACTER WORK VARIABLE             00165300
                  LCLC  &ZTLC       CHARACTER TOO LONG VARIABLE         00165400
                  LCLA  &ZTLA       VALUE TOO LONG VARIABLE             00165500
                  LCLA  &ZMACRET    MACRO RETURN CODE                   00165600
&ZMACRET          SETA  0           ASSUME NO ERRORS                    00165700
.*                                                                      00165800
                  LCLC  &ZCSYSLIST(255)         NONXKEY, POS ARRAY      00165900
                  LCLA  &ZASYSLNDX  WORK INDEX FOR ZCSYSLIST()          00166000
                  LCLA  &ZPLLEN     PARAMETER LIST LENGTH               00166100
                  LCLC  &ZENDBASEPL             End of base PL          00166200
                  LCLA  &ZPLWORKA   PARAMETER LIST LENGTH               00166300
.*******************************************************************    00166400
.***AB.04  MACRO VARIABLES FOR RANGES AND SETS OF ARGUMENTS             00166500
.*******************************************************************    00166600
                  LCLA  &ZI         INDEX FOR ARRAY                     00166700
                  LCLA  &ZJ         INDEX FOR PARMS                     00166800
                  LCLA  &ZK         INDEX FOR PARSE                     00166900
                  LCLA  &ZLO        LOW RANGE VALUE                     00167000
                  LCLA  &ZHI        HIGH RANGE VALUE                    00167100
                  LCLC  &ZW         WORK AREA FOR PARM                  00167200
.********************************************************************   00167300
.***AB.05  INVOKE MVS MACROS TO CONTROL CODE GENERATION                 00167400
.********************************************************************   00167500
                  GBLC  &SYSSPLV    SP LEVEL 1,2,3 -SPLEVEL             00167600
                  GBLC  &SYSASCE    SYSTEM STATE P ANY AR-SYSSTATE      00167700
.*                                                                      00167800
                  AIF   (K'&SYSASCE GT 0).ZSYS4  SYS STATE DEFINED      00167900
                  AIF   (K'&SYSSPLV GT 0).ZSYS2  SP LEVEL DEFINED       00168000
                  SPLEVEL  TEST                                         00168100
.ZSYS2            ANOP  ,                                               00168200
                  AIF   ('&SYSSPLV' EQ '1').ZSYS3  PRE SP 3.1           00168300
                  AIF   ('&SYSSPLV' EQ '2').ZSYS3  PRE SP 3.1           00168400
                  SYSSTATE TEST                                         00168500
                  AGO   .ZSYS4                                          00168600
.ZSYS3            ANOP  ,                                               00168700
&SYSASCE          SETC  'P'         ASSUME SYSSTATE PRIMARY             00168800
.ZSYS4            ANOP  ,                                               00168900
.*******************************************************************    00169000
.***AB.07  DEFINE ALL MACRO VARIABLES                                   00169100
.*******************************************************************    00169200
                  LCLC  &XSERVICE   ++ VALUE                            00169300
                  LCLC  &XSHARE     ++ VALUE                            00169400
                  LCLC  &XRANGLIST  ++ NAME                             00169500
                  LCLC  &XNUMRANGE  ++ NAME                             00169600
                  LCLC  &XTARGET_VIEW           ++ VALUE                00169700
                  LCLC  &XCOPYNOW   ++ NAME                             00169800
                  LCLC  &XBRANCH    ++ VALUE                            00169900
                  LCLC  &XPARTIALPAGE           ++ VALUE                00170000
                  LCLC  &XUNSHARE   ++ VALUE                            00170100
                  LCLC  &XRETAIN    ++ VALUE                            00170200
                  LCLC  &XSHARESEG  ++ VALUE                            00170300
                  LCLC  &XCHANGEACCESS          ++ VALUE                00170400
                  LCLA  &XPLISTVER  ++ VALUE                            00170500
                  LCLC  &XMF        ++ VALUE                            00170600
                  LCLC  &XMFCTRL    ++ NAME                             00170700
                  LCLC  &XMFATTR    ++ VALUE                            00170800
                  LCLC  &XMFSCK     ++ VALUE                            00170900
.*******************************************************************    00171000
.***AB.13  DEFINE MACRO VARIABLES FOR INPUT/OUTPUT PROCESSING           00171100
.*******************************************************************    00171200
                  LCLC  &ZXSERVICE  ++ INPUT VALUE                      00171300
                  LCLC  &ZXSHARE    ++ INPUT VALUE                      00171400
                  LCLC  &ZXRANGLIST             ++ INPUT NAME           00171500
                  LCLC  &ZXNUMRANGE             ++ INPUT NAME           00171600
                  LCLC  &ZXTARGET_VIEW          ++ INPUT VALUE          00171700
                  LCLC  &ZXCOPYNOW  ++ INPUT NAME                       00171800
                  LCLC  &ZXBRANCH   ++ INPUT VALUE                      00171900
                  LCLC  &ZXPARTIALPAGE          ++ INPUT VALUE          00172000
                  LCLC  &ZXUNSHARE  ++ INPUT VALUE                      00172100
                  LCLC  &ZXRETAIN   ++ INPUT VALUE                      00172200
                  LCLC  &ZXSHARESEG             ++ INPUT VALUE          00172300
                  LCLC  &ZXCHANGEACCESS         ++ INPUT VALUE          00172400
                  LCLC  &ZXPLISTVER             ++ INPUT VALUE          00172500
                  LCLC  &ZXMF       ++ INPUT VALUE                      00172600
                  LCLC  &ZXMFCTRL   ++ INPUT NAME                       00172700
                  LCLC  &ZXMFATTR   ++ INPUT VALUE                      00172800
                  LCLC  &ZXMFSCK    ++ INPUT VALUE                      00172900
.********************************************************************   00173000
.***AC.PLV01  PROCESS PLISTVER                                      *   00173100
.********************************************************************   00173200
&XPLISTVER      SETA  0                                                 00173300
                AIF   (K'&PLISTVER(1) LE 0).ZPLV0                       00173400
                AIF   ('&PLISTVER(1)' NE 'MAX').ZPLV0                   00173500
&XPLISTVER      SETA  0                                                 00173600
.ZPLV0          ANOP  ,                                                 00173700
.*                                                                      00173800
                AIF   (K'&PLISTVER(1) LE 0).ZPVCKE                      00173900
                AIF   ('&PLISTVER(1)' EQ 'IMPLIED_VERSION').ZPVCKE      00174000
                AIF   ('&PLISTVER(1)' EQ 'MAX').ZPVCKE                  00174100
.*-------------------------------------------------------------------   00174200
                AIF   (N'&PLISTVER LE 1).ZPVCK3  CK NUM                 00174300
&ZMS            SETC  '"PLISTVER='         *KPOSA* MNOTE                00174400
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00174500
&ZMS            SETC  '&ZMS "PLISTVER"'                                 00174600
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00174700
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00174800
                AGO   .ZPVCK2                                           00174900
.ZPVCK3         ANOP  ,                                                 00175000
.*-------------------------------------------------------------------   00175100
                AIF   ('&PLISTVER'(1,1) NE '(').ZPVCK2                  00175200
&ZMS            SETC  '"PLISTVER='         *KGPRA* MNOTE                00175300
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00175400
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         00175500
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'                 00175600
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00175700
                AGO   .ZPVCKE                                           00175800
.ZPVCK2         ANOP  ,                                                 00175900
.*-------------------------------------------------------------------   00176000
&ZCVAL          SETC  '&PLISTVER(1)'                                    00176100
                AIF   ('&ZCVAL'(1,1) EQ '(').ZPVCKE  IN GPR             00176200
                AIF   (T'&ZCVAL NE 'N').ZPVCK6  NUMERIC ERR             00176300
&ZN             SETA   &PLISTVER(1)        CONVERT TO ARITHMETIC        00176400
                AIF   (&ZN LT 0).ZPVCK6    TOO LOW                      00176500
                AIF   (&ZN LE 0).ZPVCK4A   NOT HIGH                     00176600
.ZPVCK6         ANOP  ,                                                 00176700
&ZMS            SETC  '"PLISTVER='         *KRNGA* MNOTE                00176800
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00176900
&ZMS            SETC  '&ZMS THE RANGE IS "0-0"'                         00177000
                MNOTE 8,' &ZMS FOR ARGUMENT 1.'                         00177100
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00177200
&XPLISTVER      SETA  0                                                 00177300
                AGO   .ZPVCKE                                           00177400
.*-------------------------------------------------------------------   00177500
.ZPVCK4A        ANOP  ,                                                 00177600
                AIF   (&ZN GE &XPLISTVER).ZPVCK4                        00177700
&ZMS            SETC  'PLISTVER='          *KVALA* MNOTE                00177800
&ZMS            SETC  '&ZMS.&PLISTVER(1)'                               00177900
&ZMS            SETC  '&ZMS., BUT PLISTVER OF'                          00178000
&ZMS            SETC  '&ZMS &XPLISTVER'                                 00178100
                MNOTE 8,' &ZMS IS REQUIRED.'                            00178200
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00178300
                AGO   .ZPVCK5                                           00178400
.ZPVCK4         ANOP  ,                                                 00178500
&XPLISTVER      SETA  &PLISTVER(1)                                      00178600
.ZPVCK5         ANOP  ,                                                 00178700
.ZPVCKE         ANOP  ,                                                 00178800
.********************************************************************   00178900
.***AG.MF01 PROCESS MF MACRO FORMS                                      00179000
.********************************************************************   00179100
                  ACTR  10000                                           00179200
.*------------------------------------------------------------------    00179300
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00179400
&XMF              SETC  ''          INITIALIZE XVARIABLE                00179500
.*-------------------------------------------------------------------   00179600
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00179700
.ZG88             ANOP  ,                                               00179800
&ZTLC             SETC 'S'                                              00179900
                  AIF   ('&MF(1)' NE '&ZTLC').ZG89                      00180000
&XMF              SETC  'S'         SET KEYWORD                         00180100
                  AIF   (N'&MF LE 1).ZG88A      CK NUM                  00180200
&ZMS              SETC  '"MF='      *KPOSA* MNOTE                       00180300
&ZMS              SETC  '&ZMS.&MF"'                                     00180400
&ZMS              SETC  '&ZMS "MF"'                                     00180500
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00180600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00180700
.ZG88A            ANOP  ,                                               00180800
.*-------------------------------------------------------------------   00180900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00181000
.ZG89             ANOP  ,                                               00181100
&ZTLC             SETC 'L'                                              00181200
                  AIF   ('&MF(1)' NE '&ZTLC').ZG96                      00181300
&XMF              SETC  'L'         SET KEYWORD                         00181400
                  AIF   (N'&MF LE 3).ZG89A      CK NUM                  00181500
&ZMS              SETC  '"MF='      *KPOSA* MNOTE                       00181600
&ZMS              SETC  '&ZMS.&MF"'                                     00181700
&ZMS              SETC  '&ZMS "MF"'                                     00181800
                  MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'            00181900
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00182000
.ZG89A            ANOP  ,                                               00182100
.*-------------------------------------------------------------------   00182200
.***AG.KKCTL08 -MF(L) SPECIAL CHECK                                     00182300
                  AIF   (N'&SYSLIST NE 0).ZG89B  POSITIONALS?           00182400
                  AIF   ('&RANGLIST' NE '').ZG89B  KEYS?                00182500
                  AIF   ('&NUMRANGE' NE '').ZG89B  KEYS?                00182600
                  AIF   ('&TARGET_VIEW' NE '').ZG89B  KEYS?             00182700
                  AIF   ('&BRANCH' NE '').ZG89B  KEYS?                  00182800
                  AIF   ('&PARTIALPAGE' NE '').ZG89B  KEYS?             00182900
                  AIF   ('&RETAIN' NE '').ZG89B  KEYS?                  00183000
                  AGO    .ZG89C     INVOCATION OKAY                     00183100
.ZG89B            ANOP  ,                                               00183200
&ZMS              SETC  'THE "L" FORM OF "MF"'  *MFLA* MNOTE            00183300
&ZMS              SETC  '&ZMS CAN ONLY HAVE'                            00183400
&ZMS              SETC  '&ZMS THE "PLISTVER" KEY'                       00183500
                  MNOTE 8,' &ZMS SPECIFIED ON THE INVOCATION.'          00183600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00183700
.ZG89C            ANOP  ,                                               00183800
.*-------------------------------------------------------------------   00183900
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00184000
&ZXMFCTRL         SETC  'INPUT'     SET IN/OUTPUT                       00184100
&XMFCTRL          SETC  '&MF(2,1)'  SET XVARIABLE                       00184200
                  AIF   (N'&MF(2) GT 1).ZG91B   MULTI PARMS             00184300
&XMFCTRL          SETC  '&MF(2)'    SET XVARIABLE                       00184400
.ZG91B            AIF   (K'&MF(2) GT 0).ZG91C                           00184500
&ZXMFCTRL         SETC  ''          RESET IN/OUTPUT                     00184600
&ZMS              SETC  ' '         *KRQDA*                             00184700
&ZMS              SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'             00184800
                  MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                    00184900
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00185000
.ZG91C            ANOP  ,                                               00185100
.*-------------------------------------------------------------------   00185200
.***AG.KCK01 NAME, OPT RQD INPUT, POS(2) -GPR NOT ALLOWED               00185300
                  AIF   (K'&ZXMFCTRL LE 0).ZG91P  NOT I/O               00185400
                  AIF   ('&XMFCTRL'(1,1) NE '(').ZG91P                  00185500
&ZXMFCTRL         SETC  ''          RESET IN/OUTPUT                     00185600
&ZMS              SETC  '"MF='      *KGPRA* MNOTE                       00185700
&ZMS              SETC  '&ZMS.&MF"'                                     00185800
&ZMS              SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'       00185900
                  MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 2.'               00186000
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00186100
.ZG91P            ANOP  ,                                               00186200
.*-------------------------------------------------------------------   00186300
.***AG.KXVAR13 VALUE, OPT INPUT, POS(3) -XVARIABLE                      00186400
&ZXMFATTR         SETC  'INPUT'     SET IN/OUTPUT                       00186500
&XMFATTR          SETC  '0D'                                            00186600
                  AIF   (K'&MF(3) LE 0).ZG94B   PARM                    00186700
&XMFATTR          SETC  '&MF(3,1)'  SET XVARIABLE                       00186800
                  AIF   (N'&MF(3) GT 1).ZG94B   MULTI PARMS             00186900
&XMFATTR          SETC  '&MF(3)'    SET XVARIABLE                       00187000
.ZG94B            ANOP  ,                                               00187100
.*-------------------------------------------------------------------   00187200
.***AG.KCK01 VALUE, OPT INPUT, POS(3) -GPR NOT ALLOWED                  00187300
                  AIF   (K'&ZXMFATTR LE 0).ZG94P  NOT I/O               00187400
                  AIF   ('&XMFATTR'(1,1) NE '(').ZG94P                  00187500
&ZXMFATTR         SETC  ''          RESET IN/OUTPUT                     00187600
&ZMS              SETC  '"MF='      *KGPRA* MNOTE                       00187700
&ZMS              SETC  '&ZMS.&MF"'                                     00187800
&ZMS              SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'       00187900
                  MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 3.'               00188000
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00188100
.ZG94P            ANOP  ,                                               00188200
.*-------------------------------------------------------------------   00188300
.***AG.KCK03 VALUE, OPT INPUT, POS(3) -CHARACTER LENGTH                 00188400
                  AIF   (K'&ZXMFATTR LE 0).ZG94S  NOT I/O               00188500
                  AIF   (K'&XMFATTR LE 60).ZG94S  LNG OK                00188600
&ZXMFATTR         SETC  ''          RESET IN/OUTPUT                     00188700
&ZMS              SETC  '"MF='      *KLNGA* MNOTE                       00188800
&ZMS              SETC  '&ZMS.&MF"'                                     00188900
&ZMS              SETC  '&ZMS ARGUMENT 3 EXCEEDS THE MAXIMUM'           00189000
                  MNOTE 8,' &ZMS LENGTH OF 60 CHARACTERS.'              00189100
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00189200
.ZG94S            ANOP  ,                                               00189300
.*-------------------------------------------------------------------   00189400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00189500
.ZG96             ANOP  ,                                               00189600
&ZTLC             SETC 'E'                                              00189700
                  AIF   ('&MF(1)' NE '&ZTLC').ZG104                     00189800
&XMF              SETC  'E'         SET KEYWORD                         00189900
                  AIF   (N'&MF LE 3).ZG96A      CK NUM                  00190000
&ZMS              SETC  '"MF='      *KPOSA* MNOTE                       00190100
&ZMS              SETC  '&ZMS.&MF"'                                     00190200
&ZMS              SETC  '&ZMS "MF"'                                     00190300
                  MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'            00190400
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00190500
.ZG96A            ANOP  ,                                               00190600
.*-------------------------------------------------------------------   00190700
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00190800
&ZXMFCTRL         SETC  'INPUT'     SET IN/OUTPUT                       00190900
&XMFCTRL          SETC  '&MF(2,1)'  SET XVARIABLE                       00191000
                  AIF   (N'&MF(2) GT 1).ZG98B   MULTI PARMS             00191100
&XMFCTRL          SETC  '&MF(2)'    SET XVARIABLE                       00191200
.ZG98B            AIF   (K'&MF(2) GT 0).ZG98C                           00191300
&ZXMFCTRL         SETC  ''          RESET IN/OUTPUT                     00191400
&ZMS              SETC  ' '         *KRQDA*                             00191500
&ZMS              SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'             00191600
                  MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                    00191700
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00191800
.ZG98C            ANOP  ,                                               00191900
.*-------------------------------------------------------------------   00192000
.***AG.KCK02 NAME, OPT RQD INPUT, POS(2) -GPR OUT OF RANGE              00192100
                  AIF   (K'&ZXMFCTRL LE 0).ZG98R  NOT I/O               00192200
                  AIF   ('&XMFCTRL'(1,1) NE '(').ZG98R                  00192300
&ZCGPR            SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)                      00192400
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG98P                    00192500
                  AIF   (K'&ZCGPR GT 2).ZG98Q                           00192600
                  AIF   ('&ZCGPR' EQ '0').ZG98Q                         00192700
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00192800
                  AIF   (T'&ZCGPR NE 'N').ZG98Q  INVALID REG NAME       00192900
.ZG98P            ANOP  ,                                               00193000
                  AIF   (T'&ZCGPR NE 'N').ZG98R  NON NUMERIC            00193100
                  AIF   ('&ZCGPR' LT '1').ZG98Q                         00193200
                  AIF   ('&ZCGPR' LE '12').ZG98R                        00193300
.ZG98Q            ANOP  ,                                               00193400
&ZMS              SETC  '"MF='      *KGPRA* MNOTE                       00193500
&ZMS              SETC  '&ZMS.&MF"'                                     00193600
&ZMS              SETC  '&ZMS ARGUMENT 2 MUST SPECIFY A REGISTER'       00193700
                  MNOTE 8,' &ZMS IN THE RANGE (1)-(12).'                00193800
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00193900
.ZG98R            ANOP  ,                                               00194000
.*-------------------------------------------------------------------   00194100
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00194200
&XMFSCK           SETC  ''          INITIALIZE XVARIABLE                00194300
.ZG102A   AIF   ('&MF(3)' NE 'COMPLETE').ZG103A                         00194400
&XMFSCK           SETC  'COMPLETE'  SET KEYWORD                         00194500
.*-------------------------------------------------------------------   00194600
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00194700
.ZG103A           AIF   (K'&XMFSCK GT 0).ZG103C  KEYWORD                00194800
                  AIF   (K'&MF(3) LE 0).ZG103B                          00194900
&ZMS              SETC  '"MF='      *KUKWA* MNOTE                       00195000
&ZMS              SETC  '&ZMS.&MF"'                                     00195100
&ZMS              SETC  '&ZMS ARGUMENT 3 IS AN UNKNOWN KEYWORD. '       00195200
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00195300
&ZMS              SETC  '&ZMS "COMPLETE".'      VALID KEYWORD           00195400
                  MNOTE 8,' &ZMS '                                      00195500
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00195600
.ZG103B           ANOP  ,                                               00195700
&XMFSCK           SETC  'COMPLETE'  SET DEFAULT KEYWORD                 00195800
.ZG103C           ANOP  ,                                               00195900
&ZXMFSCK          SETC  'INPUT'     SET IN/OUTPUT                       00196000
.*------------------------------------------------------------------    00196100
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00196200
.ZG104            ANOP  ,                                               00196300
&ZXMF             SETC  'INPUT'     SET IN/OUTPUT                       00196400
                  AIF   (K'&XMF GT 0).ZG104E    VALID ARG               00196500
                  AIF   (T'&MF EQ 'O').ZG104D   OMITTED                 00196600
&ZASYSLNDX        SETA  0                                               00196700
.ZG104A           ANOP  ,           POSITIONAL MACRO KEY                00196800
&ZASYSLNDX        SETA  &ZASYSLNDX+1                                    00196900
                  AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG104C               00197000
&ZTLC             SETC 'MF'                                             00197100
                  AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG104A      00197200
.ZG104B           ANOP  ,                                               00197300
&ZXMF             SETC  ''          RESET IN/OUTPUT                     00197400
&ZMS              SETC  'THE "MF" KEY'          *KOPTA* MNOTE           00197500
&ZMS              SETC  '&ZMS MUST CONTAIN ONE'                         00197600
                  MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                00197700
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00197800
                  AGO   .ZG104E                                         00197900
.ZG104C           ANOP  ,                                               00198000
&ZXMF             SETC  ''          RESET IN/OUTPUT                     00198100
&ZMS              SETC  '"MF='      *KUKWA* MNOTE                       00198200
&ZMS              SETC  '&ZMS.&MF"'                                     00198300
&ZMS              SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '       00198400
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00198500
&ZMS              SETC  '&ZMS "S",'             VALID KEYWORD           00198600
&ZMS              SETC  '&ZMS "L",'             VALID KEYWORD           00198700
&ZMS              SETC  '&ZMS OR "E".'          VALID KEYWORD           00198800
                  MNOTE 8,' &ZMS '                                      00198900
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00199000
                  AGO   .ZG104E                                         00199100
.ZG104D           ANOP  ,                                               00199200
&XMF              SETC  'S'         SET DEFAULT KEYWORD                 00199300
&XMFSCK           SETC  'COMPLETE'  COMPLETE CHECKING                   00199400
.ZG104E           ANOP  ,                                               00199500
.********************************************************************   00199600
.***AG.MF02  FULL MACRO SYNTAX CHECKING                                 00199700
.********************************************************************   00199800
                  ACTR  10000                                           00199900
.*-------------------------------------------------------------------   00200000
.***AG.MF03 MF=(SLE)                                                    00200100
                  AIF   ('&XMF' EQ 'L').ZGMFX                           00200200
.*-------------------------------------------------------------------   00200300
.***AG.KMEKY05 VALUE, RQD INPUT, ME KEYS -NO ARGUMENTS                  00200400
&XSERVICE         SETC  ''          INITIALIZE XVARIABLE                00200500
&ZASYSLNDX        SETA  0                                               00200600
.ZG2A             ANOP  ,           POSITIONAL KEY SEARCH               00200700
&ZASYSLNDX        SETA  &ZASYSLNDX+1            NEXT POSITIONAL         00200800
         AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG2B  DONE                    00200900
         AIF   ('&ZCSYSLIST(&ZASYSLNDX)' EQ 'NONXKEY').ZG2A             00201000
         AIF   ('&SYSLIST(&ZASYSLNDX)' NE 'SHARE').ZG2A                 00201100
&ZCSYSLIST(&ZASYSLNDX) SETC 'NONXKEY'           KEY IS NON-XKEY         00201200
&ZXSERVICE        SETC  'INPUT'     SET IN/OUTPUT                       00201300
&XSERVICE         SETC  'SHARE'     SET XVARIABLE                       00201400
&ZXSHARE          SETC  'INPUT'     SET IN/OUTPUT                       00201500
&XSHARE           SETC  'SHARE'     SET XVARIABLE PARM                  00201600
.ZG2B             ANOP  ,                                               00201700
.*-------------------------------------------------------------------   00201800
.***AG.KMEKY06 VALUE, RQD INPUT, ME KEYS -NO ARGUMENTS                  00201900
&ZASYSLNDX        SETA  0                                               00202000
.ZG34A            ANOP  ,           POSITIONAL KEY SEARCH               00202100
&ZASYSLNDX        SETA  &ZASYSLNDX+1            NEXT POSITIONAL         00202200
         AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG34C  DONE                   00202300
         AIF   ('&ZCSYSLIST(&ZASYSLNDX)' EQ 'NONXKEY').ZG34A            00202400
         AIF   ('&SYSLIST(&ZASYSLNDX)' NE 'UNSHARE').ZG34A              00202500
&ZCSYSLIST(&ZASYSLNDX) SETC 'NONXKEY'           KEY IS NON-XKEY         00202600
                  AIF   (K'&XSERVICE LE 0).ZG34B  VALID                 00202700
&ZMS              SETC  '"UNSHARE'  *KMEKA* MNOTE                       00202800
&ZMS              SETC  '&ZMS."'                                        00202900
&ZMS              SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'           00203000
&ZMS              SETC  '&ZMS "&XSERVICE"'                              00203100
                  MNOTE 8,' &ZMS KEY.'                                  00203200
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00203300
                  AGO   .ZG34C                                          00203400
.*                                                                      00203500
.ZG34B            ANOP  ,                                               00203600
&ZXSERVICE        SETC  'INPUT'     SET IN/OUTPUT                       00203700
&XSERVICE         SETC  'UNSHARE'   SET XVARIABLE                       00203800
&ZXUNSHARE        SETC  'INPUT'     SET IN/OUTPUT                       00203900
&XUNSHARE         SETC  'UNSHARE'   SET XVARIABLE PARM                  00204000
.ZG34C            ANOP  ,                                               00204100
.*-------------------------------------------------------------------   00204200
.***AG.KMEKY06 VALUE, RQD INPUT, ME KEYS -NO ARGUMENTS                  00204300
&ZASYSLNDX        SETA  0                                               00204400
.ZG51A            ANOP  ,           POSITIONAL KEY SEARCH               00204500
&ZASYSLNDX        SETA  &ZASYSLNDX+1            NEXT POSITIONAL         00204600
         AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG51C  DONE                   00204700
         AIF   ('&ZCSYSLIST(&ZASYSLNDX)' EQ 'NONXKEY').ZG51A            00204800
         AIF   ('&SYSLIST(&ZASYSLNDX)' NE 'SHARESEG').ZG51A             00204900
&ZCSYSLIST(&ZASYSLNDX) SETC 'NONXKEY'           KEY IS NON-XKEY         00205000
                  AIF   (K'&XSERVICE LE 0).ZG51B  VALID                 00205100
&ZMS              SETC  '"SHARESEG'             *KMEKA* MNOTE           00205200
&ZMS              SETC  '&ZMS."'                                        00205300
&ZMS              SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'           00205400
&ZMS              SETC  '&ZMS "&XSERVICE"'                              00205500
                  MNOTE 8,' &ZMS KEY.'                                  00205600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00205700
                  AGO   .ZG51C                                          00205800
.*                                                                      00205900
.ZG51B            ANOP  ,                                               00206000
&ZXSERVICE        SETC  'INPUT'     SET IN/OUTPUT                       00206100
&XSERVICE         SETC  'SHARESEG'  SET XVARIABLE                       00206200
&ZXSHARESEG       SETC  'INPUT'     SET IN/OUTPUT                       00206300
&XSHARESEG        SETC  'SHARESEG'  SET XVARIABLE PARM                  00206400
.ZG51C            ANOP  ,                                               00206500
.*-------------------------------------------------------------------   00206600
.***AG.KMEKY06 VALUE, RQD INPUT, ME KEYS -NO ARGUMENTS                  00206700
&ZASYSLNDX        SETA  0                                               00206800
.ZG58A            ANOP  ,           POSITIONAL KEY SEARCH               00206900
&ZASYSLNDX        SETA  &ZASYSLNDX+1            NEXT POSITIONAL         00207000
         AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG58C  DONE                   00207100
         AIF   ('&ZCSYSLIST(&ZASYSLNDX)' EQ 'NONXKEY').ZG58A            00207200
         AIF   ('&SYSLIST(&ZASYSLNDX)' NE 'CHANGEACCESS').ZG58A         00207300
&ZCSYSLIST(&ZASYSLNDX) SETC 'NONXKEY'           KEY IS NON-XKEY         00207400
                  AIF   (K'&XSERVICE LE 0).ZG58B  VALID                 00207500
&ZMS              SETC  '"CHANGEACCESS'         *KMEKA* MNOTE           00207600
&ZMS              SETC  '&ZMS."'                                        00207700
&ZMS              SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'           00207800
&ZMS              SETC  '&ZMS "&XSERVICE"'                              00207900
                  MNOTE 8,' &ZMS KEY.'                                  00208000
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00208100
                  AGO   .ZG58C                                          00208200
.*                                                                      00208300
.ZG58B            ANOP  ,                                               00208400
&ZXSERVICE        SETC  'INPUT'     SET IN/OUTPUT                       00208500
&XSERVICE         SETC  'CHANGEACCESS'          SET XVARIABLE           00208600
&ZXCHANGEACCESS   SETC  'INPUT'     SET IN/OUTPUT                       00208700
&XCHANGEACCESS    SETC  'CHANGEACCESS'          SET XVARIABLE PARM      00208800
.ZG58C            ANOP  ,                                               00208900
.*------------------------------------------------------------------    00209000
.***AG.KME4Y09 VALUE, RQD INPUT, ME KEYS -CHECK IF KEY ENTERED          00209100
                  AIF   (K'&XSERVICE GT 0).ZG76B                        00209200
&ZXSERVICE        SETC  ''          RESET IN/OUTPUT                     00209300
&ZXSHARE          SETC  ''          RESET IN/OUTPUT                     00209400
&XSERVICE         SETC  ''          ENSURE NULL                         00209500
&XSHARE           SETC  ''          ENSURE NULL                         00209600
&ZMS              SETC  'ONE OF THE FOLLOWING'  *KMERA* MNOTE           00209700
&ZMS              SETC  '&ZMS MUTUALLY EXCLUSIVE KEY(S) IS'             00209800
&ZMS              SETC  '&ZMS REQUIRED:'                                00209900
&ZMS              SETC  '&ZMS "SHARE",'         VALID ME KEY            00210000
&ZMS              SETC  '&ZMS "UNSHARE",'       VALID ME KEY            00210100
&ZMS              SETC  '&ZMS "SHARESEG",'      VALID ME KEY            00210200
&ZMS              SETC  '&ZMS OR "CHANGEACCESS".'  VALID ME KEY         00210300
                  MNOTE 8,' &ZMS '                                      00210400
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00210500
.ZG76B            ANOP  ,                                               00210600
.*-------------------------------------------------------------------   00210700
.***AG.KMEKY13 VALUE, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES          00210800
.ZG2              AIF   ('&XSERVICE' NE 'SHARE').ZG34                   00210900
.*-------------------------------------------------------------------   00211000
.***AG.KMEKY14 VALUE, RQD INPUT, ME KEYS -DISALLOWED KEYS               00211100
&ZCVAL            SETC ''           ERROR KEY FIELD                     00211200
.ZG2I0            AIF   (K'&RETAIN LE 0).ZG2I1                          00211300
&ZCVAL            SETC '&ZCVAL RETAIN'          DISALLOWED KEY          00211400
.ZG2I1            AIF   (K'&ZCVAL LE 0).ZG2J    KEY                     00211500
&ZCVAL            SETC '&ZCVAL'(2,K'&ZCVAL-1)                           00211600
&ZMS              SETC  '"SHARE'    *KMEIA* MNOTE                       00211700
&ZMS              SETC  '&ZMS."'                                        00211800
&ZMS              SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'            00211900
                  MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'            00212000
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00212100
.ZG2J             ANOP  ,                                               00212200
.*----------------------------------------------------------------***   00212300
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00212400
                  AIF   (N'&RANGLIST LE 1).ZG4A  CK NUM                 00212500
&ZMS              SETC  '"RANGLIST='            *KPOSA* MNOTE           00212600
&ZMS              SETC  '&ZMS.&RANGLIST"'                               00212700
&ZMS              SETC  '&ZMS "RANGLIST"'                               00212800
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00212900
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00213000
.ZG4A             ANOP  ,                                               00213100
.*-------------------------------------------------------------------   00213200
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00213300
&ZXRANGLIST       SETC  'INPUT'     SET IN/OUTPUT                       00213400
&XRANGLIST        SETC  '&RANGLIST(1)'          SET XVARIABLE           00213500
                  AIF   (N'&RANGLIST GT 1).ZG4B  MULTI PARMS            00213600
&XRANGLIST        SETC  '&RANGLIST'             SET XVARIABLE           00213700
.ZG4B             AIF   (K'&RANGLIST(1) GT 0).ZG4C                      00213800
&ZXRANGLIST       SETC  ''          RESET IN/OUTPUT                     00213900
&ZMS              SETC  ' '         *KRQDA*                             00214000
&ZMS              SETC  '&ZMS "RANGLIST" KEY AND ITS ARGUMENT'          00214100
                  MNOTE 8,' &ZMS ARE REQUIRED.'                         00214200
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00214300
.ZG4C             ANOP  ,                                               00214400
.*-------------------------------------------------------------------   00214500
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00214600
                  AIF   (K'&ZXRANGLIST LE 0).ZG4R  NOT I/O              00214700
                  AIF   ('&XRANGLIST'(1,1) NE '(').ZG4R                 00214800
&ZCGPR            SETC  '&XRANGLIST'(2,K'&XRANGLIST-2)                  00214900
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG4P                     00215000
                  AIF   (K'&ZCGPR GT 2).ZG4Q                            00215100
                  AIF   ('&ZCGPR' EQ '0').ZG4Q                          00215200
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00215300
                  AIF   (T'&ZCGPR NE 'N').ZG4Q  INVALID REG NAME        00215400
.ZG4P             ANOP  ,                                               00215500
                  AIF   (T'&ZCGPR NE 'N').ZG4R  NON NUMERIC             00215600
                  AIF   ('&ZCGPR' LT '2').ZG4Q                          00215700
                  AIF   ('&ZCGPR' LE '12').ZG4R                         00215800
.ZG4Q             ANOP  ,                                               00215900
&ZMS              SETC  '"RANGLIST='            *KGPRA* MNOTE           00216000
&ZMS              SETC  '&ZMS.&RANGLIST"'                               00216100
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00216200
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00216300
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00216400
.ZG4R             ANOP  ,                                               00216500
.*----------------------------------------------------------------***   00216600
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00216700
                  AIF   (N'&NUMRANGE LE 1).ZG7A  CK NUM                 00216800
&ZMS              SETC  '"NUMRANGE='            *KPOSA* MNOTE           00216900
&ZMS              SETC  '&ZMS.&NUMRANGE"'                               00217000
&ZMS              SETC  '&ZMS "NUMRANGE"'                               00217100
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00217200
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00217300
.ZG7A             ANOP  ,                                               00217400
.*-------------------------------------------------------------------   00217500
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00217600
&ZXNUMRANGE       SETC  'INPUT'     SET IN/OUTPUT                       00217700
&XNUMRANGE        SETC  '1'                                             00217800
                  AIF   (K'&NUMRANGE(1) LE 0).ZG7B  PARM                00217900
&XNUMRANGE        SETC  '&NUMRANGE(1)'          SET XVARIABLE           00218000
                  AIF   (N'&NUMRANGE GT 1).ZG7B  MULTI PARMS            00218100
&XNUMRANGE        SETC  '&NUMRANGE'             SET XVARIABLE           00218200
.ZG7B             ANOP  ,                                               00218300
.*-------------------------------------------------------------------   00218400
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00218500
                  AIF   (K'&ZXNUMRANGE LE 0).ZG7R  NOT I/O              00218600
                  AIF   ('&XNUMRANGE'(1,1) NE '(').ZG7R                 00218700
&ZCGPR            SETC  '&XNUMRANGE'(2,K'&XNUMRANGE-2)                  00218800
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG7P                     00218900
                  AIF   (K'&ZCGPR GT 2).ZG7Q                            00219000
                  AIF   ('&ZCGPR' EQ '0').ZG7Q                          00219100
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00219200
                  AIF   (T'&ZCGPR NE 'N').ZG7Q  INVALID REG NAME        00219300
.ZG7P             ANOP  ,                                               00219400
                  AIF   (T'&ZCGPR NE 'N').ZG7R  NON NUMERIC             00219500
                  AIF   ('&ZCGPR' LT '2').ZG7Q                          00219600
                  AIF   ('&ZCGPR' LE '12').ZG7R                         00219700
.ZG7Q             ANOP  ,                                               00219800
&ZMS              SETC  '"NUMRANGE='            *KGPRA* MNOTE           00219900
&ZMS              SETC  '&ZMS.&NUMRANGE"'                               00220000
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00220100
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00220200
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00220300
.ZG7R             ANOP  ,                                               00220400
.*------------------------------------------------------------------    00220500
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00220600
&XTARGET_VIEW     SETC  ''          INITIALIZE XVARIABLE                00220700
.*-------------------------------------------------------------------   00220800
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00220900
.ZG11             ANOP  ,                                               00221000
                  AIF   (K'&TARGET_VIEW(1) LE 0).ZG11A                  00221100
&ZTLC             SETC 'READONLY'                                       00221200
                  AIF   ('&TARGET_VIEW(1)' NE '&ZTLC').ZG12             00221300
&XTARGET_VIEW     SETC  'READONLY'  SET KEYWORD                         00221400
                  AIF   (N'&TARGET_VIEW LE 1).ZG11A  CK NUM             00221500
&ZMS              SETC  '"TARGET_VIEW='         *KPOSA* MNOTE           00221600
&ZMS              SETC  '&ZMS.&TARGET_VIEW"'                            00221700
&ZMS              SETC  '&ZMS "TARGET_VIEW"'                            00221800
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00221900
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00222000
.ZG11A            ANOP  ,                                               00222100
.*------------------------------------------------------------------    00222200
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00222300
&ZCVAL            SETC ''           CLEAR ERROR KEY ACCUMULATOR         00222400
.ZG11A0           AIF   (K'&XCOPYNOW LE 0).ZG11A1  OK                   00222500
&ZCVAL            SETC '&ZCVAL COPYNOW'         INCORRECT KEY USED      00222600
.ZG11A1           AIF   (K'&ZCVAL LE 0).ZG11A2  OK                      00222700
&ZCVAL            SETC '&ZCVAL'(2,K'&ZCVAL-1)                           00222800
&ZMS              SETC  '"TARGET_VIEW'          *KMEIA* MNOTE           00222900
&ZMS              SETC  '&ZMS.=&TARGET_VIEW"'                           00223000
&ZMS              SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'            00223100
                  MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'            00223200
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00223300
.ZG11A2           ANOP  ,                                               00223400
.*-------------------------------------------------------------------   00223500
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00223600
.ZG12             ANOP  ,                                               00223700
&ZTLC             SETC 'SHAREDWRITE'                                    00223800
                  AIF   ('&TARGET_VIEW(1)' NE '&ZTLC').ZG13             00223900
&XTARGET_VIEW     SETC  'SHAREDWRITE'           SET KEYWORD             00224000
                  AIF   (N'&TARGET_VIEW LE 1).ZG12A  CK NUM             00224100
&ZMS              SETC  '"TARGET_VIEW='         *KPOSA* MNOTE           00224200
&ZMS              SETC  '&ZMS.&TARGET_VIEW"'                            00224300
&ZMS              SETC  '&ZMS "TARGET_VIEW"'                            00224400
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00224500
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00224600
.ZG12A            ANOP  ,                                               00224700
.*------------------------------------------------------------------    00224800
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00224900
&ZCVAL            SETC ''           CLEAR ERROR KEY ACCUMULATOR         00225000
.ZG12A0           AIF   (K'&XCOPYNOW LE 0).ZG12A1  OK                   00225100
&ZCVAL            SETC '&ZCVAL COPYNOW'         INCORRECT KEY USED      00225200
.ZG12A1           AIF   (K'&ZCVAL LE 0).ZG12A2  OK                      00225300
&ZCVAL            SETC '&ZCVAL'(2,K'&ZCVAL-1)                           00225400
&ZMS              SETC  '"TARGET_VIEW'          *KMEIA* MNOTE           00225500
&ZMS              SETC  '&ZMS.=&TARGET_VIEW"'                           00225600
&ZMS              SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'            00225700
                  MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'            00225800
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00225900
.ZG12A2           ANOP  ,                                               00226000
.*-------------------------------------------------------------------   00226100
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00226200
.ZG13             ANOP  ,                                               00226300
&ZTLC             SETC 'UNIQUEWRITE'                                    00226400
                  AIF   ('&TARGET_VIEW(1)' NE '&ZTLC').ZG17             00226500
&XTARGET_VIEW     SETC  'UNIQUEWRITE'           SET KEYWORD             00226600
                  AIF   (N'&TARGET_VIEW LE 1).ZG13A  CK NUM             00226700
&ZMS              SETC  '"TARGET_VIEW='         *KPOSA* MNOTE           00226800
&ZMS              SETC  '&ZMS.&TARGET_VIEW"'                            00226900
&ZMS              SETC  '&ZMS "TARGET_VIEW"'                            00227000
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00227100
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00227200
.ZG13A            ANOP  ,                                               00227300
.*----------------------------------------------------------------***   00227400
.***AG.KXVAR01 NAME, OPT INPUT, KEYS -NO ARGUMENTS                      00227500
&XCOPYNOW         SETC  ''          RESET XVARIABLE                     00227600
&ZXCOPYNOW        SETC  ''          RESET IN/OUTPUT                     00227700
&ZASYSLNDX        SETA  0                                               00227800
.ZG15A            ANOP  ,           POSITIONAL MACRO KEY                00227900
&ZASYSLNDX        SETA  &ZASYSLNDX+1                                    00228000
         AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG15B                         00228100
         AIF   ('&ZCSYSLIST(&ZASYSLNDX)' EQ 'NONXKEY').ZG15A            00228200
         AIF   ('&SYSLIST(&ZASYSLNDX)' NE 'COPYNOW').ZG15A              00228300
&ZCSYSLIST(&ZASYSLNDX) SETC  'NONXKEY'          POSITIONAL IS MACRO KEY 00228400
&XCOPYNOW         SETC  'COPYNOW'   MACRO KEY FOUND                     00228500
&ZXCOPYNOW        SETC  'INPUT'     SET IN/OUTPUT                       00228600
.ZG15B            ANOP  ,                                               00228700
.*-------------------------------------------------------------------   00228800
.***AG.KXVAR03 NAME, OPT INPUT, KEYS -NO ARGUMENTS                      00228900
                  AIF   (K'&XCOPYNOW GT 0).ZG15C  KEY ENTERED           00229000
&ZXCOPYNOW        SETC  'INPUT'     SET IN/OUTPUT                       00229100
&XCOPYNOW         SETC  'DO_NOT_COPYNOW'        SET DEFAULT             00229200
.ZG15C            ANOP  ,                                               00229300
.*-------------------------------------------------------------------   00229400
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00229500
.ZG17             ANOP  ,                                               00229600
&ZTLC             SETC 'TARGETWRITE'                                    00229700
                  AIF   ('&TARGET_VIEW(1)' NE '&ZTLC').ZG18             00229800
&XTARGET_VIEW     SETC  'TARGETWRITE'           SET KEYWORD             00229900
                  AIF   (N'&TARGET_VIEW LE 1).ZG17A  CK NUM             00230000
&ZMS              SETC  '"TARGET_VIEW='         *KPOSA* MNOTE           00230100
&ZMS              SETC  '&ZMS.&TARGET_VIEW"'                            00230200
&ZMS              SETC  '&ZMS "TARGET_VIEW"'                            00230300
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00230400
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00230500
.ZG17A            ANOP  ,                                               00230600
.*------------------------------------------------------------------    00230700
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00230800
&ZCVAL            SETC ''           CLEAR ERROR KEY ACCUMULATOR         00230900
.ZG17A0           AIF   (K'&XCOPYNOW LE 0).ZG17A1  OK                   00231000
&ZCVAL            SETC '&ZCVAL COPYNOW'         INCORRECT KEY USED      00231100
.ZG17A1           AIF   (K'&ZCVAL LE 0).ZG17A2  OK                      00231200
&ZCVAL            SETC '&ZCVAL'(2,K'&ZCVAL-1)                           00231300
&ZMS              SETC  '"TARGET_VIEW'          *KMEIA* MNOTE           00231400
&ZMS              SETC  '&ZMS.=&TARGET_VIEW"'                           00231500
&ZMS              SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'            00231600
                  MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'            00231700
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00231800
.ZG17A2           ANOP  ,                                               00231900
.*-------------------------------------------------------------------   00232000
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00232100
.ZG18             ANOP  ,                                               00232200
&ZTLC             SETC 'LIKESOURCE'                                     00232300
                  AIF   ('&TARGET_VIEW(1)' NE '&ZTLC').ZG22             00232400
&XTARGET_VIEW     SETC  'LIKESOURCE'            SET KEYWORD             00232500
                  AIF   (N'&TARGET_VIEW LE 1).ZG18A  CK NUM             00232600
&ZMS              SETC  '"TARGET_VIEW='         *KPOSA* MNOTE           00232700
&ZMS              SETC  '&ZMS.&TARGET_VIEW"'                            00232800
&ZMS              SETC  '&ZMS "TARGET_VIEW"'                            00232900
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00233000
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00233100
.ZG18A            ANOP  ,                                               00233200
.*----------------------------------------------------------------***   00233300
.***AG.KXVAR01 NAME, OPT INPUT, KEYS -NO ARGUMENTS                      00233400
&XCOPYNOW         SETC  ''          RESET XVARIABLE                     00233500
&ZXCOPYNOW        SETC  ''          RESET IN/OUTPUT                     00233600
&ZASYSLNDX        SETA  0                                               00233700
.ZG20A            ANOP  ,           POSITIONAL MACRO KEY                00233800
&ZASYSLNDX        SETA  &ZASYSLNDX+1                                    00233900
         AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG20B                         00234000
         AIF   ('&ZCSYSLIST(&ZASYSLNDX)' EQ 'NONXKEY').ZG20A            00234100
         AIF   ('&SYSLIST(&ZASYSLNDX)' NE 'COPYNOW').ZG20A              00234200
&ZCSYSLIST(&ZASYSLNDX) SETC  'NONXKEY'          POSITIONAL IS MACRO KEY 00234300
&XCOPYNOW         SETC  'COPYNOW'   MACRO KEY FOUND                     00234400
&ZXCOPYNOW        SETC  'INPUT'     SET IN/OUTPUT                       00234500
.ZG20B            ANOP  ,                                               00234600
.*-------------------------------------------------------------------   00234700
.***AG.KXVAR03 NAME, OPT INPUT, KEYS -NO ARGUMENTS                      00234800
                  AIF   (K'&XCOPYNOW GT 0).ZG20C  KEY ENTERED           00234900
&ZXCOPYNOW        SETC  'INPUT'     SET IN/OUTPUT                       00235000
&XCOPYNOW         SETC  'DO_NOT_COPYNOW'        SET DEFAULT             00235100
.ZG20C            ANOP  ,                                               00235200
.*-------------------------------------------------------------------   00235300
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00235400
.ZG22             ANOP  ,                                               00235500
&ZTLC             SETC 'HIDDEN'                                         00235600
                  AIF   ('&TARGET_VIEW(1)' NE '&ZTLC').ZG23             00235700
&XTARGET_VIEW     SETC  'HIDDEN'    SET KEYWORD                         00235800
                  AIF   (N'&TARGET_VIEW LE 1).ZG22A  CK NUM             00235900
&ZMS              SETC  '"TARGET_VIEW='         *KPOSA* MNOTE           00236000
&ZMS              SETC  '&ZMS.&TARGET_VIEW"'                            00236100
&ZMS              SETC  '&ZMS "TARGET_VIEW"'                            00236200
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00236300
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00236400
.ZG22A            ANOP  ,                                               00236500
.*------------------------------------------------------------------    00236600
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00236700
&ZCVAL            SETC ''           CLEAR ERROR KEY ACCUMULATOR         00236800
.ZG22A0           AIF   (K'&XCOPYNOW LE 0).ZG22A1  OK                   00236900
&ZCVAL            SETC '&ZCVAL COPYNOW'         INCORRECT KEY USED      00237000
.ZG22A1           AIF   (K'&ZCVAL LE 0).ZG22A2  OK                      00237100
&ZCVAL            SETC '&ZCVAL'(2,K'&ZCVAL-1)                           00237200
&ZMS              SETC  '"TARGET_VIEW'          *KMEIA* MNOTE           00237300
&ZMS              SETC  '&ZMS.=&TARGET_VIEW"'                           00237400
&ZMS              SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'            00237500
                  MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'            00237600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00237700
.ZG22A2           ANOP  ,                                               00237800
.*------------------------------------------------------------------    00237900
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00238000
.ZG23             ANOP  ,                                               00238100
&ZXTARGET_VIEW    SETC  'INPUT'     SET IN/OUTPUT                       00238200
                  AIF   (K'&XTARGET_VIEW GT 0).ZG23E  VALID ARG         00238300
                  AIF   (T'&TARGET_VIEW EQ 'O').ZG23D  OMITTED          00238400
&ZASYSLNDX        SETA  0                                               00238500
.ZG23A            ANOP  ,           POSITIONAL MACRO KEY                00238600
&ZASYSLNDX        SETA  &ZASYSLNDX+1                                    00238700
                  AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG23C                00238800
&ZTLC             SETC 'TARGET_VIEW'                                    00238900
                  AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG23A       00239000
.ZG23B            ANOP  ,                                               00239100
&ZXTARGET_VIEW    SETC  ''          RESET IN/OUTPUT                     00239200
&ZMS              SETC  'THE "TARGET_VIEW" KEY'  *KOPTA* MNOTE          00239300
&ZMS              SETC  '&ZMS MUST CONTAIN ONE'                         00239400
                  MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                00239500
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00239600
                  AGO   .ZG23E                                          00239700
.ZG23C            ANOP  ,                                               00239800
&ZXTARGET_VIEW    SETC  ''          RESET IN/OUTPUT                     00239900
&ZMS              SETC  '"TARGET_VIEW='         *KUKWA* MNOTE           00240000
&ZMS              SETC  '&ZMS.&TARGET_VIEW"'                            00240100
&ZMS              SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '       00240200
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00240300
&ZMS              SETC  '&ZMS "READONLY",'      VALID KEYWORD           00240400
&ZMS              SETC  '&ZMS "SHAREDWRITE",'   VALID KEYWORD           00240500
&ZMS              SETC  '&ZMS "UNIQUEWRITE",'   VALID KEYWORD           00240600
&ZMS              SETC  '&ZMS "TARGETWRITE",'   VALID KEYWORD           00240700
&ZMS              SETC  '&ZMS "LIKESOURCE",'    VALID KEYWORD           00240800
&ZMS              SETC  '&ZMS OR "HIDDEN".'     VALID KEYWORD           00240900
                  MNOTE 8,' &ZMS '                                      00241000
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00241100
                  AGO   .ZG23E                                          00241200
.ZG23D            ANOP  ,                                               00241300
&XTARGET_VIEW     SETC  'READONLY'  SET DEFAULT KEYWORD                 00241400
.ZG23E            ANOP  ,                                               00241500
.*------------------------------------------------------------------    00241600
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00241700
                  AIF   (K'&TARGET_VIEW(1) GT 0).ZG23F  PARM            00241800
&XTARGET_VIEW     SETC  ''          ENSURE NULL KEYWORD                 00241900
&ZXTARGET_VIEW    SETC  ''          RESET IN/OUTPUT                     00242000
&ZMS              SETC  'THE'                                           00242100
&ZMS              SETC  '&ZMS "TARGET_VIEW" KEY AND ITS ARGUMENT'       00242200
&ZMS              SETC  '&ZMS ARE REQUIRED.'                            00242300
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00242400
&ZMS              SETC  '&ZMS "READONLY",'      VALID KEYWORD           00242500
&ZMS              SETC  '&ZMS "SHAREDWRITE",'   VALID KEYWORD           00242600
&ZMS              SETC  '&ZMS "UNIQUEWRITE",'   VALID KEYWORD           00242700
&ZMS              SETC  '&ZMS "TARGETWRITE",'   VALID KEYWORD           00242800
&ZMS              SETC  '&ZMS "LIKESOURCE",'    VALID KEYWORD           00242900
&ZMS              SETC  '&ZMS OR "HIDDEN".'     VALID KEYWORD           00243000
                  MNOTE 8,' &ZMS '                                      00243100
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00243200
.ZG23F            ANOP  ,                                               00243300
.*----------------------------------------------------------------***   00243400
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00243500
                  AIF   (N'&BRANCH LE 1).ZG25A  CK NUM                  00243600
&ZMS              SETC  '"BRANCH='  *KPOSA* MNOTE                       00243700
&ZMS              SETC  '&ZMS.&BRANCH"'                                 00243800
&ZMS              SETC  '&ZMS "BRANCH"'                                 00243900
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00244000
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00244100
.ZG25A            ANOP  ,                                               00244200
.*-------------------------------------------------------------------   00244300
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00244400
&XBRANCH          SETC  ''          INITIALIZE XVARIABLE                00244500
.ZG26A   AIF   ('&BRANCH(1)' NE 'NO').ZG27A                             00244600
&XBRANCH          SETC  'NO'        SET KEYWORD                         00244700
.*-------------------------------------------------------------------   00244800
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00244900
.ZG27A   AIF   ('&BRANCH(1)' NE 'YES').ZG28A                            00245000
&XBRANCH          SETC  'YES'       SET KEYWORD                         00245100
.*-------------------------------------------------------------------   00245200
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00245300
.ZG28A            AIF   (K'&XBRANCH GT 0).ZG28C  KEYWORD                00245400
                  AIF   (K'&BRANCH(1) LE 0).ZG28B                       00245500
&ZMS              SETC  '"BRANCH='  *KUKWA* MNOTE                       00245600
&ZMS              SETC  '&ZMS.&BRANCH"'                                 00245700
&ZMS              SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '       00245800
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00245900
&ZMS              SETC  '&ZMS "NO"'             VALID KEYWORD           00246000
&ZMS              SETC  '&ZMS OR "YES".'        VALID KEYWORD           00246100
                  MNOTE 8,' &ZMS '                                      00246200
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00246300
.ZG28B            ANOP  ,                                               00246400
&XBRANCH          SETC  'NO'        SET DEFAULT KEYWORD                 00246500
.ZG28C            ANOP  ,                                               00246600
&ZXBRANCH         SETC  'INPUT'     SET IN/OUTPUT                       00246700
.*----------------------------------------------------------------***   00246800
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00246900
                  AIF   (N'&PARTIALPAGE LE 1).ZG30A  CK NUM             00247000
&ZMS              SETC  '"PARTIALPAGE='         *KPOSA* MNOTE           00247100
&ZMS              SETC  '&ZMS.&PARTIALPAGE"'                            00247200
&ZMS              SETC  '&ZMS "PARTIALPAGE"'                            00247300
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00247400
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00247500
.ZG30A            ANOP  ,                                               00247600
.*-------------------------------------------------------------------   00247700
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00247800
&XPARTIALPAGE     SETC  ''          INITIALIZE XVARIABLE                00247900
.ZG31A   AIF   ('&PARTIALPAGE(1)' NE 'NO').ZG32A                        00248000
&XPARTIALPAGE     SETC  'NO'        SET KEYWORD                         00248100
.*-------------------------------------------------------------------   00248200
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00248300
.ZG32A   AIF   ('&PARTIALPAGE(1)' NE 'YES').ZG33A                       00248400
&XPARTIALPAGE     SETC  'YES'       SET KEYWORD                         00248500
.*-------------------------------------------------------------------   00248600
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00248700
.ZG33A            AIF   (K'&XPARTIALPAGE GT 0).ZG33C  KEYWORD           00248800
                  AIF   (K'&PARTIALPAGE(1) LE 0).ZG33B                  00248900
&ZMS              SETC  '"PARTIALPAGE='         *KUKWA* MNOTE           00249000
&ZMS              SETC  '&ZMS.&PARTIALPAGE"'                            00249100
&ZMS              SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '       00249200
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00249300
&ZMS              SETC  '&ZMS "NO"'             VALID KEYWORD           00249400
&ZMS              SETC  '&ZMS OR "YES".'        VALID KEYWORD           00249500
                  MNOTE 8,' &ZMS '                                      00249600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00249700
.ZG33B            ANOP  ,                                               00249800
&XPARTIALPAGE     SETC  'NO'        SET DEFAULT KEYWORD                 00249900
.ZG33C            ANOP  ,                                               00250000
&ZXPARTIALPAGE    SETC  'INPUT'     SET IN/OUTPUT                       00250100
.*-------------------------------------------------------------------   00250200
.***AG.KMEKY13 VALUE, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES          00250300
.ZG34             AIF   ('&XSERVICE' NE 'UNSHARE').ZG51                 00250400
.*-------------------------------------------------------------------   00250500
.***AG.KMEKY14 VALUE, RQD INPUT, ME KEYS -DISALLOWED KEYS               00250600
&ZCVAL            SETC ''           ERROR KEY FIELD                     00250700
.ZG34I0           AIF   (K'&TARGET_VIEW LE 0).ZG34I1                    00250800
&ZCVAL            SETC '&ZCVAL TARGET_VIEW'     DISALLOWED KEY          00250900
.ZG34I1           AIF   (K'&XCOPYNOW LE 0).ZG34I2                       00251000
&ZCVAL            SETC '&ZCVAL XCOPYNOW'        DISALLOWED KEY          00251100
.ZG34I2           AIF   (K'&XCOPYNOW LE 0).ZG34I3                       00251200
&ZCVAL            SETC '&ZCVAL XCOPYNOW'        DISALLOWED KEY          00251300
.ZG34I3           AIF   (K'&PARTIALPAGE LE 0).ZG34I4                    00251400
&ZCVAL            SETC '&ZCVAL PARTIALPAGE'     DISALLOWED KEY          00251500
.ZG34I4           AIF   (K'&XCOPYNOW LE 0).ZG34I5                       00251600
&ZCVAL            SETC '&ZCVAL XCOPYNOW'        DISALLOWED KEY          00251700
.ZG34I5           AIF   (K'&ZCVAL LE 0).ZG34J   KEY                     00251800
&ZCVAL            SETC '&ZCVAL'(2,K'&ZCVAL-1)                           00251900
&ZMS              SETC  '"UNSHARE'  *KMEIA* MNOTE                       00252000
&ZMS              SETC  '&ZMS."'                                        00252100
&ZMS              SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'            00252200
                  MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'            00252300
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00252400
.ZG34J            ANOP  ,                                               00252500
.*----------------------------------------------------------------***   00252600
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00252700
                  AIF   (N'&RANGLIST LE 1).ZG36A  CK NUM                00252800
&ZMS              SETC  '"RANGLIST='            *KPOSA* MNOTE           00252900
&ZMS              SETC  '&ZMS.&RANGLIST"'                               00253000
&ZMS              SETC  '&ZMS "RANGLIST"'                               00253100
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00253200
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00253300
.ZG36A            ANOP  ,                                               00253400
.*-------------------------------------------------------------------   00253500
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00253600
&ZXRANGLIST       SETC  'INPUT'     SET IN/OUTPUT                       00253700
&XRANGLIST        SETC  '&RANGLIST(1)'          SET XVARIABLE           00253800
                  AIF   (N'&RANGLIST GT 1).ZG36B  MULTI PARMS           00253900
&XRANGLIST        SETC  '&RANGLIST'             SET XVARIABLE           00254000
.ZG36B            AIF   (K'&RANGLIST(1) GT 0).ZG36C                     00254100
&ZXRANGLIST       SETC  ''          RESET IN/OUTPUT                     00254200
&ZMS              SETC  ' '         *KRQDA*                             00254300
&ZMS              SETC  '&ZMS "RANGLIST" KEY AND ITS ARGUMENT'          00254400
                  MNOTE 8,' &ZMS ARE REQUIRED.'                         00254500
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00254600
.ZG36C            ANOP  ,                                               00254700
.*-------------------------------------------------------------------   00254800
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00254900
                  AIF   (K'&ZXRANGLIST LE 0).ZG36R  NOT I/O             00255000
                  AIF   ('&XRANGLIST'(1,1) NE '(').ZG36R                00255100
&ZCGPR            SETC  '&XRANGLIST'(2,K'&XRANGLIST-2)                  00255200
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG36P                    00255300
                  AIF   (K'&ZCGPR GT 2).ZG36Q                           00255400
                  AIF   ('&ZCGPR' EQ '0').ZG36Q                         00255500
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00255600
                  AIF   (T'&ZCGPR NE 'N').ZG36Q  INVALID REG NAME       00255700
.ZG36P            ANOP  ,                                               00255800
                  AIF   (T'&ZCGPR NE 'N').ZG36R  NON NUMERIC            00255900
                  AIF   ('&ZCGPR' LT '2').ZG36Q                         00256000
                  AIF   ('&ZCGPR' LE '12').ZG36R                        00256100
.ZG36Q            ANOP  ,                                               00256200
&ZMS              SETC  '"RANGLIST='            *KGPRA* MNOTE           00256300
&ZMS              SETC  '&ZMS.&RANGLIST"'                               00256400
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00256500
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00256600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00256700
.ZG36R            ANOP  ,                                               00256800
.*----------------------------------------------------------------***   00256900
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00257000
                  AIF   (N'&NUMRANGE LE 1).ZG39A  CK NUM                00257100
&ZMS              SETC  '"NUMRANGE='            *KPOSA* MNOTE           00257200
&ZMS              SETC  '&ZMS.&NUMRANGE"'                               00257300
&ZMS              SETC  '&ZMS "NUMRANGE"'                               00257400
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00257500
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00257600
.ZG39A            ANOP  ,                                               00257700
.*-------------------------------------------------------------------   00257800
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00257900
&ZXNUMRANGE       SETC  'INPUT'     SET IN/OUTPUT                       00258000
&XNUMRANGE        SETC  '1'                                             00258100
                  AIF   (K'&NUMRANGE(1) LE 0).ZG39B  PARM               00258200
&XNUMRANGE        SETC  '&NUMRANGE(1)'          SET XVARIABLE           00258300
                  AIF   (N'&NUMRANGE GT 1).ZG39B  MULTI PARMS           00258400
&XNUMRANGE        SETC  '&NUMRANGE'             SET XVARIABLE           00258500
.ZG39B            ANOP  ,                                               00258600
.*-------------------------------------------------------------------   00258700
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00258800
                  AIF   (K'&ZXNUMRANGE LE 0).ZG39R  NOT I/O             00258900
                  AIF   ('&XNUMRANGE'(1,1) NE '(').ZG39R                00259000
&ZCGPR            SETC  '&XNUMRANGE'(2,K'&XNUMRANGE-2)                  00259100
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG39P                    00259200
                  AIF   (K'&ZCGPR GT 2).ZG39Q                           00259300
                  AIF   ('&ZCGPR' EQ '0').ZG39Q                         00259400
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00259500
                  AIF   (T'&ZCGPR NE 'N').ZG39Q  INVALID REG NAME       00259600
.ZG39P            ANOP  ,                                               00259700
                  AIF   (T'&ZCGPR NE 'N').ZG39R  NON NUMERIC            00259800
                  AIF   ('&ZCGPR' LT '2').ZG39Q                         00259900
                  AIF   ('&ZCGPR' LE '12').ZG39R                        00260000
.ZG39Q            ANOP  ,                                               00260100
&ZMS              SETC  '"NUMRANGE='            *KGPRA* MNOTE           00260200
&ZMS              SETC  '&ZMS.&NUMRANGE"'                               00260300
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00260400
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00260500
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00260600
.ZG39R            ANOP  ,                                               00260700
.*----------------------------------------------------------------***   00260800
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00260900
                  AIF   (N'&RETAIN LE 1).ZG42A  CK NUM                  00261000
&ZMS              SETC  '"RETAIN='  *KPOSA* MNOTE                       00261100
&ZMS              SETC  '&ZMS.&RETAIN"'                                 00261200
&ZMS              SETC  '&ZMS "RETAIN"'                                 00261300
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00261400
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00261500
.ZG42A            ANOP  ,                                               00261600
.*-------------------------------------------------------------------   00261700
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00261800
&XRETAIN          SETC  ''          INITIALIZE XVARIABLE                00261900
.ZG43A   AIF   ('&RETAIN(1)' NE 'NO').ZG44A                             00262000
&XRETAIN          SETC  'NO'        SET KEYWORD                         00262100
.*-------------------------------------------------------------------   00262200
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00262300
.ZG44A   AIF   ('&RETAIN(1)' NE 'YES').ZG45A                            00262400
&XRETAIN          SETC  'YES'       SET KEYWORD                         00262500
.*-------------------------------------------------------------------   00262600
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00262700
.ZG45A            AIF   (K'&XRETAIN GT 0).ZG45C  KEYWORD                00262800
                  AIF   (K'&RETAIN(1) LE 0).ZG45B                       00262900
&ZMS              SETC  '"RETAIN='  *KUKWA* MNOTE                       00263000
&ZMS              SETC  '&ZMS.&RETAIN"'                                 00263100
&ZMS              SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '       00263200
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00263300
&ZMS              SETC  '&ZMS "NO"'             VALID KEYWORD           00263400
&ZMS              SETC  '&ZMS OR "YES".'        VALID KEYWORD           00263500
                  MNOTE 8,' &ZMS '                                      00263600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00263700
.ZG45B            ANOP  ,                                               00263800
&XRETAIN          SETC  'NO'        SET DEFAULT KEYWORD                 00263900
.ZG45C            ANOP  ,                                               00264000
&ZXRETAIN         SETC  'INPUT'     SET IN/OUTPUT                       00264100
.*----------------------------------------------------------------***   00264200
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00264300
                  AIF   (N'&BRANCH LE 1).ZG47A  CK NUM                  00264400
&ZMS              SETC  '"BRANCH='  *KPOSA* MNOTE                       00264500
&ZMS              SETC  '&ZMS.&BRANCH"'                                 00264600
&ZMS              SETC  '&ZMS "BRANCH"'                                 00264700
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00264800
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00264900
.ZG47A            ANOP  ,                                               00265000
.*-------------------------------------------------------------------   00265100
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00265200
&XBRANCH          SETC  ''          INITIALIZE XVARIABLE                00265300
.ZG48A   AIF   ('&BRANCH(1)' NE 'NO').ZG49A                             00265400
&XBRANCH          SETC  'NO'        SET KEYWORD                         00265500
.*-------------------------------------------------------------------   00265600
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00265700
.ZG49A   AIF   ('&BRANCH(1)' NE 'YES').ZG50A                            00265800
&XBRANCH          SETC  'YES'       SET KEYWORD                         00265900
.*-------------------------------------------------------------------   00266000
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00266100
.ZG50A            AIF   (K'&XBRANCH GT 0).ZG50C  KEYWORD                00266200
                  AIF   (K'&BRANCH(1) LE 0).ZG50B                       00266300
&ZMS              SETC  '"BRANCH='  *KUKWA* MNOTE                       00266400
&ZMS              SETC  '&ZMS.&BRANCH"'                                 00266500
&ZMS              SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '       00266600
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00266700
&ZMS              SETC  '&ZMS "NO"'             VALID KEYWORD           00266800
&ZMS              SETC  '&ZMS OR "YES".'        VALID KEYWORD           00266900
                  MNOTE 8,' &ZMS '                                      00267000
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00267100
.ZG50B            ANOP  ,                                               00267200
&XBRANCH          SETC  'NO'        SET DEFAULT KEYWORD                 00267300
.ZG50C            ANOP  ,                                               00267400
&ZXBRANCH         SETC  'INPUT'     SET IN/OUTPUT                       00267500
.*-------------------------------------------------------------------   00267600
.***AG.KMEKY13 VALUE, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES          00267700
.ZG51             AIF   ('&XSERVICE' NE 'SHARESEG').ZG58                00267800
.*-------------------------------------------------------------------   00267900
.***AG.KMEKY14 VALUE, RQD INPUT, ME KEYS -DISALLOWED KEYS               00268000
&ZCVAL            SETC ''           ERROR KEY FIELD                     00268100
.ZG51I0           AIF   (K'&TARGET_VIEW LE 0).ZG51I1                    00268200
&ZCVAL            SETC '&ZCVAL TARGET_VIEW'     DISALLOWED KEY          00268300
.ZG51I1           AIF   (K'&XCOPYNOW LE 0).ZG51I2                       00268400
&ZCVAL            SETC '&ZCVAL XCOPYNOW'        DISALLOWED KEY          00268500
.ZG51I2           AIF   (K'&XCOPYNOW LE 0).ZG51I3                       00268600
&ZCVAL            SETC '&ZCVAL XCOPYNOW'        DISALLOWED KEY          00268700
.ZG51I3           AIF   (K'&BRANCH LE 0).ZG51I4                         00268800
&ZCVAL            SETC '&ZCVAL BRANCH'          DISALLOWED KEY          00268900
.ZG51I4           AIF   (K'&PARTIALPAGE LE 0).ZG51I5                    00269000
&ZCVAL            SETC '&ZCVAL PARTIALPAGE'     DISALLOWED KEY          00269100
.ZG51I5           AIF   (K'&RETAIN LE 0).ZG51I6                         00269200
&ZCVAL            SETC '&ZCVAL RETAIN'          DISALLOWED KEY          00269300
.ZG51I6           AIF   (K'&XCOPYNOW LE 0).ZG51I7                       00269400
&ZCVAL            SETC '&ZCVAL XCOPYNOW'        DISALLOWED KEY          00269500
.ZG51I7           AIF   (K'&ZCVAL LE 0).ZG51J   KEY                     00269600
&ZCVAL            SETC '&ZCVAL'(2,K'&ZCVAL-1)                           00269700
&ZMS              SETC  '"SHARESEG'             *KMEIA* MNOTE           00269800
&ZMS              SETC  '&ZMS."'                                        00269900
&ZMS              SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'            00270000
                  MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'            00270100
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00270200
.ZG51J            ANOP  ,                                               00270300
.*----------------------------------------------------------------***   00270400
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00270500
                  AIF   (N'&RANGLIST LE 1).ZG53A  CK NUM                00270600
&ZMS              SETC  '"RANGLIST='            *KPOSA* MNOTE           00270700
&ZMS              SETC  '&ZMS.&RANGLIST"'                               00270800
&ZMS              SETC  '&ZMS "RANGLIST"'                               00270900
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00271000
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00271100
.ZG53A            ANOP  ,                                               00271200
.*-------------------------------------------------------------------   00271300
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00271400
&ZXRANGLIST       SETC  'INPUT'     SET IN/OUTPUT                       00271500
&XRANGLIST        SETC  '&RANGLIST(1)'          SET XVARIABLE           00271600
                  AIF   (N'&RANGLIST GT 1).ZG53B  MULTI PARMS           00271700
&XRANGLIST        SETC  '&RANGLIST'             SET XVARIABLE           00271800
.ZG53B            AIF   (K'&RANGLIST(1) GT 0).ZG53C                     00271900
&ZXRANGLIST       SETC  ''          RESET IN/OUTPUT                     00272000
&ZMS              SETC  ' '         *KRQDA*                             00272100
&ZMS              SETC  '&ZMS "RANGLIST" KEY AND ITS ARGUMENT'          00272200
                  MNOTE 8,' &ZMS ARE REQUIRED.'                         00272300
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00272400
.ZG53C            ANOP  ,                                               00272500
.*-------------------------------------------------------------------   00272600
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00272700
                  AIF   (K'&ZXRANGLIST LE 0).ZG53R  NOT I/O             00272800
                  AIF   ('&XRANGLIST'(1,1) NE '(').ZG53R                00272900
&ZCGPR            SETC  '&XRANGLIST'(2,K'&XRANGLIST-2)                  00273000
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG53P                    00273100
                  AIF   (K'&ZCGPR GT 2).ZG53Q                           00273200
                  AIF   ('&ZCGPR' EQ '0').ZG53Q                         00273300
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00273400
                  AIF   (T'&ZCGPR NE 'N').ZG53Q  INVALID REG NAME       00273500
.ZG53P            ANOP  ,                                               00273600
                  AIF   (T'&ZCGPR NE 'N').ZG53R  NON NUMERIC            00273700
                  AIF   ('&ZCGPR' LT '2').ZG53Q                         00273800
                  AIF   ('&ZCGPR' LE '12').ZG53R                        00273900
.ZG53Q            ANOP  ,                                               00274000
&ZMS              SETC  '"RANGLIST='            *KGPRA* MNOTE           00274100
&ZMS              SETC  '&ZMS.&RANGLIST"'                               00274200
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00274300
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00274400
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00274500
.ZG53R            ANOP  ,                                               00274600
.*----------------------------------------------------------------***   00274700
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00274800
                  AIF   (N'&NUMRANGE LE 1).ZG56A  CK NUM                00274900
&ZMS              SETC  '"NUMRANGE='            *KPOSA* MNOTE           00275000
&ZMS              SETC  '&ZMS.&NUMRANGE"'                               00275100
&ZMS              SETC  '&ZMS "NUMRANGE"'                               00275200
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00275300
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00275400
.ZG56A            ANOP  ,                                               00275500
.*-------------------------------------------------------------------   00275600
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00275700
&ZXNUMRANGE       SETC  'INPUT'     SET IN/OUTPUT                       00275800
&XNUMRANGE        SETC  '1'                                             00275900
                  AIF   (K'&NUMRANGE(1) LE 0).ZG56B  PARM               00276000
&XNUMRANGE        SETC  '&NUMRANGE(1)'          SET XVARIABLE           00276100
                  AIF   (N'&NUMRANGE GT 1).ZG56B  MULTI PARMS           00276200
&XNUMRANGE        SETC  '&NUMRANGE'             SET XVARIABLE           00276300
.ZG56B            ANOP  ,                                               00276400
.*-------------------------------------------------------------------   00276500
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00276600
                  AIF   (K'&ZXNUMRANGE LE 0).ZG56R  NOT I/O             00276700
                  AIF   ('&XNUMRANGE'(1,1) NE '(').ZG56R                00276800
&ZCGPR            SETC  '&XNUMRANGE'(2,K'&XNUMRANGE-2)                  00276900
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG56P                    00277000
                  AIF   (K'&ZCGPR GT 2).ZG56Q                           00277100
                  AIF   ('&ZCGPR' EQ '0').ZG56Q                         00277200
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00277300
                  AIF   (T'&ZCGPR NE 'N').ZG56Q  INVALID REG NAME       00277400
.ZG56P            ANOP  ,                                               00277500
                  AIF   (T'&ZCGPR NE 'N').ZG56R  NON NUMERIC            00277600
                  AIF   ('&ZCGPR' LT '2').ZG56Q                         00277700
                  AIF   ('&ZCGPR' LE '12').ZG56R                        00277800
.ZG56Q            ANOP  ,                                               00277900
&ZMS              SETC  '"NUMRANGE='            *KGPRA* MNOTE           00278000
&ZMS              SETC  '&ZMS.&NUMRANGE"'                               00278100
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00278200
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00278300
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00278400
.ZG56R            ANOP  ,                                               00278500
.*-------------------------------------------------------------------   00278600
.***AG.KMEKY13 VALUE, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES          00278700
.ZG58             AIF   ('&XSERVICE' NE 'CHANGEACCESS').ZG76            00278800
.*-------------------------------------------------------------------   00278900
.***AG.KMEKY14 VALUE, RQD INPUT, ME KEYS -DISALLOWED KEYS               00279000
&ZCVAL            SETC ''           ERROR KEY FIELD                     00279100
.ZG58I0           AIF   (K'&BRANCH LE 0).ZG58I1                         00279200
&ZCVAL            SETC '&ZCVAL BRANCH'          DISALLOWED KEY          00279300
.ZG58I1           AIF   (K'&PARTIALPAGE LE 0).ZG58I2                    00279400
&ZCVAL            SETC '&ZCVAL PARTIALPAGE'     DISALLOWED KEY          00279500
.ZG58I2           AIF   (K'&RETAIN LE 0).ZG58I3                         00279600
&ZCVAL            SETC '&ZCVAL RETAIN'          DISALLOWED KEY          00279700
.ZG58I3           AIF   (K'&ZCVAL LE 0).ZG58J   KEY                     00279800
&ZCVAL            SETC '&ZCVAL'(2,K'&ZCVAL-1)                           00279900
&ZMS              SETC  '"CHANGEACCESS'         *KMEIA* MNOTE           00280000
&ZMS              SETC  '&ZMS."'                                        00280100
&ZMS              SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'            00280200
                  MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'            00280300
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00280400
.ZG58J            ANOP  ,                                               00280500
.*----------------------------------------------------------------***   00280600
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00280700
                  AIF   (N'&RANGLIST LE 1).ZG60A  CK NUM                00280800
&ZMS              SETC  '"RANGLIST='            *KPOSA* MNOTE           00280900
&ZMS              SETC  '&ZMS.&RANGLIST"'                               00281000
&ZMS              SETC  '&ZMS "RANGLIST"'                               00281100
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00281200
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00281300
.ZG60A            ANOP  ,                                               00281400
.*-------------------------------------------------------------------   00281500
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00281600
&ZXRANGLIST       SETC  'INPUT'     SET IN/OUTPUT                       00281700
&XRANGLIST        SETC  '&RANGLIST(1)'          SET XVARIABLE           00281800
                  AIF   (N'&RANGLIST GT 1).ZG60B  MULTI PARMS           00281900
&XRANGLIST        SETC  '&RANGLIST'             SET XVARIABLE           00282000
.ZG60B            AIF   (K'&RANGLIST(1) GT 0).ZG60C                     00282100
&ZXRANGLIST       SETC  ''          RESET IN/OUTPUT                     00282200
&ZMS              SETC  ' '         *KRQDA*                             00282300
&ZMS              SETC  '&ZMS "RANGLIST" KEY AND ITS ARGUMENT'          00282400
                  MNOTE 8,' &ZMS ARE REQUIRED.'                         00282500
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00282600
.ZG60C            ANOP  ,                                               00282700
.*-------------------------------------------------------------------   00282800
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00282900
                  AIF   (K'&ZXRANGLIST LE 0).ZG60R  NOT I/O             00283000
                  AIF   ('&XRANGLIST'(1,1) NE '(').ZG60R                00283100
&ZCGPR            SETC  '&XRANGLIST'(2,K'&XRANGLIST-2)                  00283200
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG60P                    00283300
                  AIF   (K'&ZCGPR GT 2).ZG60Q                           00283400
                  AIF   ('&ZCGPR' EQ '0').ZG60Q                         00283500
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00283600
                  AIF   (T'&ZCGPR NE 'N').ZG60Q  INVALID REG NAME       00283700
.ZG60P            ANOP  ,                                               00283800
                  AIF   (T'&ZCGPR NE 'N').ZG60R  NON NUMERIC            00283900
                  AIF   ('&ZCGPR' LT '2').ZG60Q                         00284000
                  AIF   ('&ZCGPR' LE '12').ZG60R                        00284100
.ZG60Q            ANOP  ,                                               00284200
&ZMS              SETC  '"RANGLIST='            *KGPRA* MNOTE           00284300
&ZMS              SETC  '&ZMS.&RANGLIST"'                               00284400
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00284500
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00284600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00284700
.ZG60R            ANOP  ,                                               00284800
.*----------------------------------------------------------------***   00284900
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00285000
                  AIF   (N'&NUMRANGE LE 1).ZG63A  CK NUM                00285100
&ZMS              SETC  '"NUMRANGE='            *KPOSA* MNOTE           00285200
&ZMS              SETC  '&ZMS.&NUMRANGE"'                               00285300
&ZMS              SETC  '&ZMS "NUMRANGE"'                               00285400
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00285500
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00285600
.ZG63A            ANOP  ,                                               00285700
.*-------------------------------------------------------------------   00285800
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00285900
&ZXNUMRANGE       SETC  'INPUT'     SET IN/OUTPUT                       00286000
&XNUMRANGE        SETC  '1'                                             00286100
                  AIF   (K'&NUMRANGE(1) LE 0).ZG63B  PARM               00286200
&XNUMRANGE        SETC  '&NUMRANGE(1)'          SET XVARIABLE           00286300
                  AIF   (N'&NUMRANGE GT 1).ZG63B  MULTI PARMS           00286400
&XNUMRANGE        SETC  '&NUMRANGE'             SET XVARIABLE           00286500
.ZG63B            ANOP  ,                                               00286600
.*-------------------------------------------------------------------   00286700
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00286800
                  AIF   (K'&ZXNUMRANGE LE 0).ZG63R  NOT I/O             00286900
                  AIF   ('&XNUMRANGE'(1,1) NE '(').ZG63R                00287000
&ZCGPR            SETC  '&XNUMRANGE'(2,K'&XNUMRANGE-2)                  00287100
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG63P                    00287200
                  AIF   (K'&ZCGPR GT 2).ZG63Q                           00287300
                  AIF   ('&ZCGPR' EQ '0').ZG63Q                         00287400
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00287500
                  AIF   (T'&ZCGPR NE 'N').ZG63Q  INVALID REG NAME       00287600
.ZG63P            ANOP  ,                                               00287700
                  AIF   (T'&ZCGPR NE 'N').ZG63R  NON NUMERIC            00287800
                  AIF   ('&ZCGPR' LT '2').ZG63Q                         00287900
                  AIF   ('&ZCGPR' LE '12').ZG63R                        00288000
.ZG63Q            ANOP  ,                                               00288100
&ZMS              SETC  '"NUMRANGE='            *KGPRA* MNOTE           00288200
&ZMS              SETC  '&ZMS.&NUMRANGE"'                               00288300
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00288400
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00288500
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00288600
.ZG63R            ANOP  ,                                               00288700
.*------------------------------------------------------------------    00288800
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00288900
&XTARGET_VIEW     SETC  ''          INITIALIZE XVARIABLE                00289000
.*-------------------------------------------------------------------   00289100
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00289200
.ZG67             ANOP  ,                                               00289300
                  AIF   (K'&TARGET_VIEW(1) LE 0).ZG67A                  00289400
&ZTLC             SETC 'READONLY'                                       00289500
                  AIF   ('&TARGET_VIEW(1)' NE '&ZTLC').ZG68             00289600
&XTARGET_VIEW     SETC  'READONLY'  SET KEYWORD                         00289700
                  AIF   (N'&TARGET_VIEW LE 1).ZG67A  CK NUM             00289800
&ZMS              SETC  '"TARGET_VIEW='         *KPOSA* MNOTE           00289900
&ZMS              SETC  '&ZMS.&TARGET_VIEW"'                            00290000
&ZMS              SETC  '&ZMS "TARGET_VIEW"'                            00290100
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00290200
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00290300
.ZG67A            ANOP  ,                                               00290400
.*------------------------------------------------------------------    00290500
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00290600
&ZCVAL            SETC ''           CLEAR ERROR KEY ACCUMULATOR         00290700
.ZG67A0           AIF   (K'&XCOPYNOW LE 0).ZG67A1  OK                   00290800
&ZCVAL            SETC '&ZCVAL COPYNOW'         INCORRECT KEY USED      00290900
.ZG67A1           AIF   (K'&ZCVAL LE 0).ZG67A2  OK                      00291000
&ZCVAL            SETC '&ZCVAL'(2,K'&ZCVAL-1)                           00291100
&ZMS              SETC  '"TARGET_VIEW'          *KMEIA* MNOTE           00291200
&ZMS              SETC  '&ZMS.=&TARGET_VIEW"'                           00291300
&ZMS              SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'            00291400
                  MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'            00291500
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00291600
.ZG67A2           ANOP  ,                                               00291700
.*-------------------------------------------------------------------   00291800
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00291900
.ZG68             ANOP  ,                                               00292000
&ZTLC             SETC 'SHAREDWRITE'                                    00292100
                  AIF   ('&TARGET_VIEW(1)' NE '&ZTLC').ZG69             00292200
&XTARGET_VIEW     SETC  'SHAREDWRITE'           SET KEYWORD             00292300
                  AIF   (N'&TARGET_VIEW LE 1).ZG68A  CK NUM             00292400
&ZMS              SETC  '"TARGET_VIEW='         *KPOSA* MNOTE           00292500
&ZMS              SETC  '&ZMS.&TARGET_VIEW"'                            00292600
&ZMS              SETC  '&ZMS "TARGET_VIEW"'                            00292700
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00292800
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00292900
.ZG68A            ANOP  ,                                               00293000
.*------------------------------------------------------------------    00293100
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00293200
&ZCVAL            SETC ''           CLEAR ERROR KEY ACCUMULATOR         00293300
.ZG68A0           AIF   (K'&XCOPYNOW LE 0).ZG68A1  OK                   00293400
&ZCVAL            SETC '&ZCVAL COPYNOW'         INCORRECT KEY USED      00293500
.ZG68A1           AIF   (K'&ZCVAL LE 0).ZG68A2  OK                      00293600
&ZCVAL            SETC '&ZCVAL'(2,K'&ZCVAL-1)                           00293700
&ZMS              SETC  '"TARGET_VIEW'          *KMEIA* MNOTE           00293800
&ZMS              SETC  '&ZMS.=&TARGET_VIEW"'                           00293900
&ZMS              SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'            00294000
                  MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'            00294100
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00294200
.ZG68A2           ANOP  ,                                               00294300
.*-------------------------------------------------------------------   00294400
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00294500
.ZG69             ANOP  ,                                               00294600
&ZTLC             SETC 'UNIQUEWRITE'                                    00294700
                  AIF   ('&TARGET_VIEW(1)' NE '&ZTLC').ZG73             00294800
&XTARGET_VIEW     SETC  'UNIQUEWRITE'           SET KEYWORD             00294900
                  AIF   (N'&TARGET_VIEW LE 1).ZG69A  CK NUM             00295000
&ZMS              SETC  '"TARGET_VIEW='         *KPOSA* MNOTE           00295100
&ZMS              SETC  '&ZMS.&TARGET_VIEW"'                            00295200
&ZMS              SETC  '&ZMS "TARGET_VIEW"'                            00295300
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00295400
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00295500
.ZG69A            ANOP  ,                                               00295600
.*----------------------------------------------------------------***   00295700
.***AG.KXVAR01 NAME, OPT INPUT, KEYS -NO ARGUMENTS                      00295800
&XCOPYNOW         SETC  ''          RESET XVARIABLE                     00295900
&ZXCOPYNOW        SETC  ''          RESET IN/OUTPUT                     00296000
&ZASYSLNDX        SETA  0                                               00296100
.ZG71A            ANOP  ,           POSITIONAL MACRO KEY                00296200
&ZASYSLNDX        SETA  &ZASYSLNDX+1                                    00296300
         AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG71B                         00296400
         AIF   ('&ZCSYSLIST(&ZASYSLNDX)' EQ 'NONXKEY').ZG71A            00296500
         AIF   ('&SYSLIST(&ZASYSLNDX)' NE 'COPYNOW').ZG71A              00296600
&ZCSYSLIST(&ZASYSLNDX) SETC  'NONXKEY'          POSITIONAL IS MACRO KEY 00296700
&XCOPYNOW         SETC  'COPYNOW'   MACRO KEY FOUND                     00296800
&ZXCOPYNOW        SETC  'INPUT'     SET IN/OUTPUT                       00296900
.ZG71B            ANOP  ,                                               00297000
.*-------------------------------------------------------------------   00297100
.***AG.KXVAR03 NAME, OPT INPUT, KEYS -NO ARGUMENTS                      00297200
                  AIF   (K'&XCOPYNOW GT 0).ZG71C  KEY ENTERED           00297300
&ZXCOPYNOW        SETC  'INPUT'     SET IN/OUTPUT                       00297400
&XCOPYNOW         SETC  'DO_NOT_COPYNOW'        SET DEFAULT             00297500
.ZG71C            ANOP  ,                                               00297600
.*-------------------------------------------------------------------   00297700
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00297800
.ZG73             ANOP  ,                                               00297900
&ZTLC             SETC 'TARGETWRITE'                                    00298000
                  AIF   ('&TARGET_VIEW(1)' NE '&ZTLC').ZG74             00298100
&XTARGET_VIEW     SETC  'TARGETWRITE'           SET KEYWORD             00298200
                  AIF   (N'&TARGET_VIEW LE 1).ZG73A  CK NUM             00298300
&ZMS              SETC  '"TARGET_VIEW='         *KPOSA* MNOTE           00298400
&ZMS              SETC  '&ZMS.&TARGET_VIEW"'                            00298500
&ZMS              SETC  '&ZMS "TARGET_VIEW"'                            00298600
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00298700
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00298800
.ZG73A            ANOP  ,                                               00298900
.*------------------------------------------------------------------    00299000
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00299100
&ZCVAL            SETC ''           CLEAR ERROR KEY ACCUMULATOR         00299200
.ZG73A0           AIF   (K'&XCOPYNOW LE 0).ZG73A1  OK                   00299300
&ZCVAL            SETC '&ZCVAL COPYNOW'         INCORRECT KEY USED      00299400
.ZG73A1           AIF   (K'&ZCVAL LE 0).ZG73A2  OK                      00299500
&ZCVAL            SETC '&ZCVAL'(2,K'&ZCVAL-1)                           00299600
&ZMS              SETC  '"TARGET_VIEW'          *KMEIA* MNOTE           00299700
&ZMS              SETC  '&ZMS.=&TARGET_VIEW"'                           00299800
&ZMS              SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'            00299900
                  MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'            00300000
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00300100
.ZG73A2           ANOP  ,                                               00300200
.*-------------------------------------------------------------------   00300300
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00300400
.ZG74             ANOP  ,                                               00300500
&ZTLC             SETC 'HIDDEN'                                         00300600
                  AIF   ('&TARGET_VIEW(1)' NE '&ZTLC').ZG75             00300700
&XTARGET_VIEW     SETC  'HIDDEN'    SET KEYWORD                         00300800
                  AIF   (N'&TARGET_VIEW LE 1).ZG74A  CK NUM             00300900
&ZMS              SETC  '"TARGET_VIEW='         *KPOSA* MNOTE           00301000
&ZMS              SETC  '&ZMS.&TARGET_VIEW"'                            00301100
&ZMS              SETC  '&ZMS "TARGET_VIEW"'                            00301200
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00301300
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00301400
.ZG74A            ANOP  ,                                               00301500
.*------------------------------------------------------------------    00301600
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00301700
&ZCVAL            SETC ''           CLEAR ERROR KEY ACCUMULATOR         00301800
.ZG74A0           AIF   (K'&XCOPYNOW LE 0).ZG74A1  OK                   00301900
&ZCVAL            SETC '&ZCVAL COPYNOW'         INCORRECT KEY USED      00302000
.ZG74A1           AIF   (K'&ZCVAL LE 0).ZG74A2  OK                      00302100
&ZCVAL            SETC '&ZCVAL'(2,K'&ZCVAL-1)                           00302200
&ZMS              SETC  '"TARGET_VIEW'          *KMEIA* MNOTE           00302300
&ZMS              SETC  '&ZMS.=&TARGET_VIEW"'                           00302400
&ZMS              SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'            00302500
                  MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'            00302600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00302700
.ZG74A2           ANOP  ,                                               00302800
.*------------------------------------------------------------------    00302900
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00303000
.ZG75             ANOP  ,                                               00303100
&ZXTARGET_VIEW    SETC  'INPUT'     SET IN/OUTPUT                       00303200
                  AIF   (K'&XTARGET_VIEW GT 0).ZG75E  VALID ARG         00303300
                  AIF   (T'&TARGET_VIEW EQ 'O').ZG75D  OMITTED          00303400
&ZASYSLNDX        SETA  0                                               00303500
.ZG75A            ANOP  ,           POSITIONAL MACRO KEY                00303600
&ZASYSLNDX        SETA  &ZASYSLNDX+1                                    00303700
                  AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG75C                00303800
&ZTLC             SETC 'TARGET_VIEW'                                    00303900
                  AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG75A       00304000
.ZG75B            ANOP  ,                                               00304100
&ZXTARGET_VIEW    SETC  ''          RESET IN/OUTPUT                     00304200
&ZMS              SETC  'THE "TARGET_VIEW" KEY'  *KOPTA* MNOTE          00304300
&ZMS              SETC  '&ZMS MUST CONTAIN ONE'                         00304400
                  MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                00304500
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00304600
                  AGO   .ZG75E                                          00304700
.ZG75C            ANOP  ,                                               00304800
&ZXTARGET_VIEW    SETC  ''          RESET IN/OUTPUT                     00304900
&ZMS              SETC  '"TARGET_VIEW='         *KUKWA* MNOTE           00305000
&ZMS              SETC  '&ZMS.&TARGET_VIEW"'                            00305100
&ZMS              SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '       00305200
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00305300
&ZMS              SETC  '&ZMS "READONLY",'      VALID KEYWORD           00305400
&ZMS              SETC  '&ZMS "SHAREDWRITE",'   VALID KEYWORD           00305500
&ZMS              SETC  '&ZMS "UNIQUEWRITE",'   VALID KEYWORD           00305600
&ZMS              SETC  '&ZMS "TARGETWRITE",'   VALID KEYWORD           00305700
&ZMS              SETC  '&ZMS OR "HIDDEN".'     VALID KEYWORD           00305800
                  MNOTE 8,' &ZMS '                                      00305900
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00306000
                  AGO   .ZG75E                                          00306100
.ZG75D            ANOP  ,                                               00306200
&XTARGET_VIEW     SETC  'READONLY'  SET DEFAULT KEYWORD                 00306300
.ZG75E            ANOP  ,                                               00306400
.*------------------------------------------------------------------    00306500
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00306600
                  AIF   (K'&TARGET_VIEW(1) GT 0).ZG75F  PARM            00306700
&XTARGET_VIEW     SETC  ''          ENSURE NULL KEYWORD                 00306800
&ZXTARGET_VIEW    SETC  ''          RESET IN/OUTPUT                     00306900
&ZMS              SETC  'THE'                                           00307000
&ZMS              SETC  '&ZMS "TARGET_VIEW" KEY AND ITS ARGUMENT'       00307100
&ZMS              SETC  '&ZMS ARE REQUIRED.'                            00307200
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00307300
&ZMS              SETC  '&ZMS "READONLY",'      VALID KEYWORD           00307400
&ZMS              SETC  '&ZMS "SHAREDWRITE",'   VALID KEYWORD           00307500
&ZMS              SETC  '&ZMS "UNIQUEWRITE",'   VALID KEYWORD           00307600
&ZMS              SETC  '&ZMS "TARGETWRITE",'   VALID KEYWORD           00307700
&ZMS              SETC  '&ZMS OR "HIDDEN".'     VALID KEYWORD           00307800
                  MNOTE 8,' &ZMS '                                      00307900
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00308000
.ZG75F            ANOP  ,                                               00308100
.*-------------------------------------------------------------------   00308200
.***AG.KMEKY15 VALUE, RQD INPUT, ME KEYS -END                           00308300
.ZG76             ANOP  ,           END MUTUALLY EXCLUSIVE KEYS         00308400
.******************************************************************     00308500
.***AH.P00 CHECK STANDALONE POSITIONAL VARIABLES                        00308600
.******************************************************************     00308700
                  ACTR  10000                                           00308800
.*-------------------------------------------------------------------   00308900
.***AH.P03 EXTRA POSITIONALS AMONG NON-X KEYS                           00309000
&ZCVAL            SETC  ''          ERROR FIELD                         00309100
&ZAWRK            SETA  0           POSITIONAL COUNTER                  00309200
&ZASYSLNDX        SETA  0           NON-X KEY COUNTER                   00309300
.ZGLIST2          ANOP  ,                                               00309400
&ZASYSLNDX        SETA  &ZASYSLNDX+1            NEXT NON-X KEY          00309500
         AIF   (&ZASYSLNDX GT N'&SYSLIST).ZGLIST3  DONE                 00309600
         AIF   ('&ZCSYSLIST(&ZASYSLNDX)' EQ 'NONXKEY').ZGLIST2          00309700
&ZAWRK            SETA  &ZAWRK+1    NEXT POSITIONAL                     00309800
                  AIF   (&ZAWRK LE 0).ZGLIST2                           00309900
&ZCVAL            SETC '&ZCVAL,&SYSLIST(&ZASYSLNDX)'  EXTRA             00310000
                  AGO   .ZGLIST2                                        00310100
.*                                                                      00310200
.ZGLIST3  AIF  (K'&ZCVAL LE 0).ZGLISTX                                  00310300
&ZCVAL            SETC '&ZCVAL'(2,K'&ZCVAL-1)   STRIP COMMA             00310400
&ZMS              SETC  'POSITIONAL ARGUMENT(S),'  *PPOSA* MNOTE        00310500
&ZMS              SETC  '&ZMS "&ZCVAL"'                                 00310600
&ZMS              SETC  '&ZMS CANNOT BE USED.'                          00310700
&ZMS              SETC  '&ZMS NO POSITIONAL ARGUMENTS'                  00310800
                  MNOTE 8,' &ZMS ARE ALLOWED.'                          00310900
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00311000
.ZGLISTX          ANOP  ,                                               00311100
&ZASYSLNDX        SETA  0                                               00311200
.*-------------------------------------------------------------------   00311300
.***AG.MF04 MF=(SLE)                                                    00311400
.ZGMFX            ANOP  ,           END OF FULL SYNTAX CHECK            00311500
.*******************************************************************    00311600
.***AE.ZMR01 NO CODE GENERATED IF ERRORS DETECTED                       00311700
.*******************************************************************    00311800
                  AIF   (&ZMACRET NE 0).ZLX2    ERROR DETECTED          00311900
.*******************************************************************    00312000
.***AE.01  START OF IARVSERV MACRO CODE                                 00312100
.*******************************************************************    00312200
                  LCLC  &M0M0001                 NAME                   00312300
&M0M0001          SETC  '&XLABEL'                SET NAME               00312400
                  AIF   (K'&XLABEL NE 0).XLAB2                          00312500
&M0M0001          SETC  'M00M&SYSNDX'            DEFAULT NAME           00312600
.*                                                                      00312700
.XLAB2            ANOP  ,                                               00312800
                  AIF   ('&XMF' EQ 'L').XLAB3                           00312900
&M0M0001 DS    0H                             IARVSERV-0                00313000
.XLAB3            ANOP  ,                                               00313100
.*******************************************************************    00313200
.***AE.PR01 PRINT CONTROLS, DEFAULT IS YES                              00313300
.*******************************************************************    00313400
              PUSH  PRINT                                               00313500
                  AIF   ('&ZPRINT' NE 'NO').ZPRINTX  TURN PRINT ON      00313600
                  PRINT OFF         ++ PR01                             00313700
                  AGO   .ZPRNTXX                                        00313800
.ZPRINTX          PRINT ON                                              00313900
.ZPRNTXX          ANOP  ,                                               00314000
.********************************************************************   00314100
.***AL.L01 INTERNAL ARRAY TO PRODUCE FORMATTED CODE                     00314200
.********************************************************************   00314300
                      LCLA  &ZOPN          LIST INSTRUCTION INDEX       00314400
                      LCLA  &ZOPN1         INVOCATION INDEX             00314500
                      LCLC  &ZOPL(4095)    LABEL                        00314600
                      LCLC  &ZOPO(4095)    OPERATION                    00314700
                      LCLC  &ZOPV(4095)    VALUE                        00314800
                      LCLC  &ZOPD(4095)    DESCRIPTION                  00314900
.*                                                                      00315000
&ZOPN                 SETA  0              INITIAL INST INDEX VALUE     00315100
.******************************************************************     00315200
.***AL.L10 IARVSERV FMT=LIST MF=S|L PARAMETERS                          00315300
.******************************************************************     00315400
                      AIF   ('&XMF' EQ 'L').ZLMFSL2                     00315500
                      AIF   ('&XMF' NE 'S').ZLMFSLX                     00315600
&XMFCTRL              SETC  '#Z'.'&SYSNDX'(1,4).'A'                     00315700
&XMFATTR              SETC  '0D'                                        00315800
.*                                                                      00315900
&ZOPN                 SETA  &ZOPN+1                                     00316000
&ZOPL(&ZOPN)          SETC  ' '                                         00316100
&ZOPO(&ZOPN)          SETC  'B'                                         00316200
&ZOPV(&ZOPN)          SETC  '&XMFCTRL.S'                                00316300
&ZOPD(&ZOPN)          SETC  '++ IARVSERV ARG PARMS'                     00316400
.*                                                                      00316500
&ZOPN                 SETA  &ZOPN+1                                     00316600
&ZOPL(&ZOPN)          SETC  ' '                                         00316700
&ZOPO(&ZOPN)          SETC  'SPACE'                                     00316800
&ZOPV(&ZOPN)          SETC  '1'                                         00316900
&ZOPD(&ZOPN)          SETC  ' '                                         00317000
.*                                                                      00317100
.ZLMFSL2              ANOP  ,                                           00317200
.*-------------------------------------------------------------------   00317300
.***AM.L00  IARVSERV FMT=LIST name                                      00317400
                      AIF   ('&XMF' NE 'L').ZLMFSL2M                    00317500
&ZOPN                 SETA &ZOPN+1                                      00317600
&ZOPL(&ZOPN)          SETC '&M0M0001'                                   00317700
&ZOPO(&ZOPN)          SETC 'EQU'                                        00317800
&ZOPV(&ZOPN)          SETC '&XMFCTRL'                                   00317900
&ZOPD(&ZOPN)          SETC '++ IARVSERV NAME'                           00318000
.ZLMFSL2M             ANOP  ,                                           00318100
.*-------------------------------------------------------------------   00318200
.***AM.L01  IARVSERV FMT=LIST PARAMETERS                                00318300
&ZOPN                 SETA &ZOPN+1                                      00318400
&ZOPL(&ZOPN)          SETC '&XMFCTRL'                                   00318500
&ZOPO(&ZOPN)          SETC 'DS'                                         00318600
&ZOPV(&ZOPN)          SETC '&XMFATTR'                                   00318700
&ZOPD(&ZOPN)          SETC '++ IARVSERV PARM LIST'                      00318800
.*-------------------------------------------------------------------   00318900
.***AM.L02 XVERSION XL1                                                 00319000
&ZOPN                 SETA &ZOPN+1                                      00319100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XVERSION'                         00319200
&ZOPO(&ZOPN)          SETC 'DS'                                         00319300
&ZOPV(&ZOPN)          SETC 'XL1'                                        00319400
&ZOPD(&ZOPN)          SETC '++ INPUT XVERSION'                          00319500
.*-------------------------------------------------------------------   00319600
.***AM.L05 XSERVICE XL1                                                 00319700
&ZOPN                 SETA &ZOPN+1                                      00319800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSERVICE'                         00319900
&ZOPO(&ZOPN)          SETC 'DS'                                         00320000
&ZOPV(&ZOPN)          SETC 'XL1'                                        00320100
&ZOPD(&ZOPN)          SETC '++ &ZXSERVICE XSERVICE'                     00320200
.*                                                                      00320300
&ZOPN                 SETA  &ZOPN+1                                     00320400
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._SHARE'                           00320500
&ZOPO(&ZOPN)          SETC  'EQU'                                       00320600
&ZOPV(&ZOPN)          SETC  '1'                                         00320700
&ZOPD(&ZOPN)          SETC  '++ XSERVICE.'                              00320800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).SHARE'                        00320900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00321000
.*                                                                      00321100
&ZOPN                 SETA  &ZOPN+1                                     00321200
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._UNSHARE'                         00321300
&ZOPO(&ZOPN)          SETC  'EQU'                                       00321400
&ZOPV(&ZOPN)          SETC  '2'                                         00321500
&ZOPD(&ZOPN)          SETC  '++ XSERVICE.'                              00321600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).UNSHARE'                      00321700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00321800
.*                                                                      00321900
&ZOPN                 SETA  &ZOPN+1                                     00322000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._CHANGEACCESS'                    00322100
&ZOPO(&ZOPN)          SETC  'EQU'                                       00322200
&ZOPV(&ZOPN)          SETC  '3'                                         00322300
&ZOPD(&ZOPN)          SETC  '++ XSERVICE.'                              00322400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).CHANGEACCESS'                 00322500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00322600
.*                                                                      00322700
&ZOPN                 SETA  &ZOPN+1                                     00322800
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._SHARESEG'                        00322900
&ZOPO(&ZOPN)          SETC  'EQU'                                       00323000
&ZOPV(&ZOPN)          SETC  '4'                                         00323100
&ZOPD(&ZOPN)          SETC  '++ XSERVICE.'                              00323200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).SHARESEG'                     00323300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00323400
.*-------------------------------------------------------------------   00323500
.***AM.L03 XFLAGS1 BL.8                                                 00323600
&ZOPN                 SETA &ZOPN+1                                      00323700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XFLAGS1'                          00323800
&ZOPO(&ZOPN)          SETC 'DS'                                         00323900
&ZOPV(&ZOPN)          SETC 'BL.8'                                       00324000
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             00324100
.*                                                                      00324200
&ZOPN                 SETA  &ZOPN+1                                     00324300
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._TARGET_VIEW_RO'                  00324400
&ZOPO(&ZOPN)          SETC  'EQU'                                       00324500
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             00324600
&ZOPD(&ZOPN)          SETC  '++ XTARGET_VIEW.'                          00324700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).READONLY'                     00324800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00324900
.*                                                                      00325000
&ZOPN                 SETA  &ZOPN+1                                     00325100
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._TARGET_VIEW_SW'                  00325200
&ZOPO(&ZOPN)          SETC  'EQU'                                       00325300
&ZOPV(&ZOPN)          SETC  'B''01000000'''                             00325400
&ZOPD(&ZOPN)          SETC  '++ XTARGET_VIEW.'                          00325500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).SHAREDWRITE'                  00325600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00325700
.*                                                                      00325800
&ZOPN                 SETA  &ZOPN+1                                     00325900
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._TARGET_VIEW_UW'                  00326000
&ZOPO(&ZOPN)          SETC  'EQU'                                       00326100
&ZOPV(&ZOPN)          SETC  'B''00100000'''                             00326200
&ZOPD(&ZOPN)          SETC  '++ XTARGET_VIEW.'                          00326300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).UNIQUEWRITE'                  00326400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00326500
.*                                                                      00326600
&ZOPN                 SETA  &ZOPN+1                                     00326700
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._TARGET_VIEW_TW'                  00326800
&ZOPO(&ZOPN)          SETC  'EQU'                                       00326900
&ZOPV(&ZOPN)          SETC  'B''00010000'''                             00327000
&ZOPD(&ZOPN)          SETC  '++ XTARGET_VIEW.'                          00327100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).TARGETWRITE'                  00327200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00327300
.*                                                                      00327400
&ZOPN                 SETA  &ZOPN+1                                     00327500
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._TARGET_VIEW_LS'                  00327600
&ZOPO(&ZOPN)          SETC  'EQU'                                       00327700
&ZOPV(&ZOPN)          SETC  'B''00001000'''                             00327800
&ZOPD(&ZOPN)          SETC  '++ XTARGET_VIEW.'                          00327900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).LIKESOURCE'                   00328000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00328100
.*                                                                      00328200
&ZOPN                 SETA  &ZOPN+1                                     00328300
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._TARGET_VIEW_NA'                  00328400
&ZOPO(&ZOPN)          SETC  'EQU'                                       00328500
&ZOPV(&ZOPN)          SETC  'B''00000100'''                             00328600
&ZOPD(&ZOPN)          SETC  '++ XTARGET_VIEW.'                          00328700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).HIDDEN'                       00328800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00328900
.*                                                                      00329000
&ZOPN                 SETA  &ZOPN+1                                     00329100
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._COPYNOW'                         00329200
&ZOPO(&ZOPN)          SETC  'EQU'                                       00329300
&ZOPV(&ZOPN)          SETC  'B''00000010'''                             00329400
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               00329500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).COPYNOW'                      00329600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00329700
.*                                                                      00329800
&ZOPN                 SETA  &ZOPN+1                                     00329900
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._RETAIN_YES'                      00330000
&ZOPO(&ZOPN)          SETC  'EQU'                                       00330100
&ZOPV(&ZOPN)          SETC  'B''00000001'''                             00330200
&ZOPD(&ZOPN)          SETC  '++ XRETAIN.'                               00330300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).YES'                          00330400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00330500
.*-------------------------------------------------------------------   00330600
.***AM.L03 XFLAGS2 BL.8                                                 00330700
&ZOPN                 SETA &ZOPN+1                                      00330800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XFLAGS2'                          00330900
&ZOPO(&ZOPN)          SETC 'DS'                                         00331000
&ZOPV(&ZOPN)          SETC 'BL.8'                                       00331100
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             00331200
.*                                                                      00331300
&ZOPN                 SETA  &ZOPN+1                                     00331400
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XPARTIALPAGE_YES'                00331500
&ZOPO(&ZOPN)          SETC  'EQU'                                       00331600
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             00331700
&ZOPD(&ZOPN)          SETC  '++ XPARTIALPAGE.'                          00331800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).YES'                          00331900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00332000
.*-------------------------------------------------------------------   00332100
.***AM.L09  XNUMRANGE F                                                 00332200
&ZOPN                 SETA &ZOPN+1                                      00332300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XNUMRANGE'                        00332400
&ZOPO(&ZOPN)          SETC 'DS'                                         00332500
&ZOPV(&ZOPN)          SETC 'F'                                          00332600
&ZOPD(&ZOPN)          SETC '++ &ZXNUMRANGE  XNUMRANGE'                  00332700
.*-------------------------------------------------------------------   00332800
.***AM.L09  XRANGLIST A                                                 00332900
&ZOPN                 SETA &ZOPN+1                                      00333000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRANGLIST'                        00333100
&ZOPO(&ZOPN)          SETC 'DS'                                         00333200
&ZOPV(&ZOPN)          SETC 'A'                                          00333300
&ZOPD(&ZOPN)          SETC '++ &ZXRANGLIST  XRANGLIST'                  00333400
.*-------------------------------------------------------------------   00333500
.***AM.L10 END OF IARVSERV LIST PARAMETERS                              00333600
&ZOPN                 SETA &ZOPN+1                                      00333700
&ZOPL(&ZOPN)          SETC '&XMFCTRL.L'                                 00333800
&ZOPO(&ZOPN)          SETC 'EQU'                                        00333900
&ZOPV(&ZOPN)          SETC '*-&XMFCTRL'                                 00334000
&ZOPD(&ZOPN)          SETC '++ LENGTH OF PLIST'                         00334100
.*                                                                      00334200
&ZOPN                 SETA &ZOPN+1                                      00334300
&ZOPL(&ZOPN)          SETC ' '                                          00334400
&ZOPO(&ZOPN)          SETC 'SPACE'                                      00334500
&ZOPV(&ZOPN)          SETC '1'                                          00334600
&ZOPD(&ZOPN)          SETC ' '                                          00334700
.*-------------------------------------------------------------------   00334800
.***AL.L12 IARVSERV FMT=LIST MF=S|L PARAMETERS                          00334900
                      AIF   ('&XMF' EQ 'L').ZMFLX  DONE IF MF=L         00335000
.*                                                                      00335100
&ZOPN                 SETA  &ZOPN+1                                     00335200
&ZOPL(&ZOPN)          SETC  '&XMFCTRL.S'                                00335300
&ZOPO(&ZOPN)          SETC  'DC'                                        00335400
&ZOPV(&ZOPN)          SETC  '0H''0'''                                   00335500
&ZOPD(&ZOPN)          SETC  '++ IARVSERV ARG PARMS'                     00335600
.*                                                                      00335700
.ZLMFSLX              ANOP  ,                                           00335800
.*-------------------------------------------------------------------   00335900
.***AL.L13 SET ZPLLEN TO ITS APPROPRIATE VALUE                          00336000
&ZPLLEN               SETA 12                                           00336100
.*                                                                      00336200
.******************************************************************     00336300
.***AI.L01 IARVSERV FMT=LIST FILL IN PARAMETER AREA                     00336400
.******************************************************************     00336500
                      ACTR  10000                                       00336600
&ZCVAL                SETC  'LA'           ASSUME XA MODE               00336700
                      AIF   ('&SYSASCE' EQ 'P').ZIMFXA  SYSSTATE PRI    00336800
&ZCVAL                SETC  'LAE'          XAX MODE                     00336900
.ZIMFXA               ANOP ,                                            00337000
.*                                                                      00337100
                      AIF   ('&XMFCTRL'(1,1) NE '(').ZIMFN2  NOT GPR    00337200
&ZCGPR                SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)  GET GPR         00337300
                      AIF   ('&ZCGPR' EQ 'GPR1').ZIMFNX                 00337400
                      AIF   ('&ZCGPR' EQ 'GPR01').ZIMFNX                00337500
                      AIF   ('&ZCGPR' EQ 'REG1').ZIMFNX                 00337600
                      AIF   ('&ZCGPR' EQ 'REG01').ZIMFNX                00337700
                      AIF   ('&ZCGPR' EQ 'R1').ZIMFNX                   00337800
                      AIF   ('&ZCGPR' EQ '1').ZIMFNX                    00337900
                      AIF   ('&ZCGPR' EQ '01').ZIMFNX                   00338000
&ZOPN                 SETA  &ZOPN+1                                     00338100
&ZOPL(&ZOPN)          SETC  ' '                                         00338200
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00338300
&ZOPV(&ZOPN)          SETC  '1,0(,&ZCGPR)'                              00338400
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00338500
                      AGO   .ZIMFNX                                     00338600
.*                                                                      00338700
.ZIMFN2               ANOP ,                                            00338800
&ZOPN                 SETA  &ZOPN+1                                     00338900
&ZOPL(&ZOPN)          SETC  ' '                                         00339000
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00339100
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL'                                00339200
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00339300
.ZIMFNX               ANOP ,                                            00339400
.********************************************************************   00339500
.***AI.L02 IARVSERV FMT=LIST INITIALIZE PARAMETER AREA                  00339600
.********************************************************************   00339700
.***AI.L03 MF=(SLE)                                                     00339800
                      AIF   ('&XMF' EQ 'L').ZIMFLX                      00339900
.*                                                                      00340000
&ZOPN                 SETA  &ZOPN+1                                     00340100
&ZOPL(&ZOPN)          SETC  ' '                                         00340200
&ZOPO(&ZOPN)          SETC  'XC'                                        00340300
&ZOPV(&ZOPN)          SETC  '0(&ZPLLEN,1),0(1)'                         00340400
&ZOPD(&ZOPN)          SETC  '++ INITIALIZE'                             00340500
.ZIMFLX               ANOP  ,                                           00340600
.*-------------------------------------------------------------------   00340700
.***AI.L07 XSERVICE AL1                                                 00340800
&ZW                   SETC  ''                                          00340900
.*-------------------------------------------------------------------   00341000
.***AI.L15 XSERVICE "SHARE" AL1                                         00341100
         AIF   ('&XSERVICE' NE 'SHARE').ZI3A                            00341200
&ZW                   SETC  '1'                                         00341300
.ZI3A                 ANOP  ,                                           00341400
.*-------------------------------------------------------------------   00341500
.***AI.L15 XSERVICE "UNSHARE" AL1                                       00341600
         AIF   ('&XSERVICE' NE 'UNSHARE').ZI4A                          00341700
&ZW                   SETC  '2'                                         00341800
.ZI4A                 ANOP  ,                                           00341900
.*-------------------------------------------------------------------   00342000
.***AI.L15 XSERVICE "CHANGEACCESS" AL1                                  00342100
         AIF   ('&XSERVICE' NE 'CHANGEACCESS').ZI5A                     00342200
&ZW                   SETC  '3'                                         00342300
.ZI5A                 ANOP  ,                                           00342400
.*-------------------------------------------------------------------   00342500
.***AI.L15 XSERVICE "SHARESEG" AL1                                      00342600
         AIF   ('&XSERVICE' NE 'SHARESEG').ZI6A                         00342700
&ZW                   SETC  '4'                                         00342800
.ZI6A                 ANOP  ,                                           00342900
.*-------------------------------------------------------------------   00343000
.***AI.L17 XSERVICE AL1                                                 00343100
                      AIF   ('&ZW' EQ '0').ZI6B                         00343200
                      AIF   ('&ZW' EQ '').ZI6B                          00343300
.*                                                                      00343400
&ZOPN                 SETA  &ZOPN+1                                     00343500
&ZOPL(&ZOPN)          SETC  ' '                                         00343600
&ZOPO(&ZOPN)          SETC  'MVI'                                       00343700
&ZOPV(&ZOPN)          SETC  '1(1),&ZW'                                  00343800
&ZOPD(&ZOPN)          SETC  '++ &ZXSERVICE XSERVICE'                    00343900
.ZI6B                 ANOP  ,                                           00344000
.*-------------------------------------------------------------------   00344100
.***AI.L05 XFLAGS1 BL1                                                  00344200
&ZW                   SETC  ''                                          00344300
&ZCLNG                SETC  ''             RESET BIT ON FLAG            00344400
.*-------------------------------------------------------------------   00344500
.***AI.L08 XFLAGS1 "READONLY"                                           00344600
.***      BL1'1XXXXXXX'                                                 00344700
         AIF   ('&XTARGET_VIEW' NE 'READONLY').ZI8A                     00344800
&ZW                   SETC  '&ZW.1'                                     00344900
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00345000
                      AGO   .ZI8C                                       00345100
.*                                                                      00345200
.ZI8A                 ANOP  ,                                           00345300
&ZW                   SETC  '&ZW.0'                                     00345400
.ZI8C                 ANOP  ,                                           00345500
.*-------------------------------------------------------------------   00345600
.***AI.L08 XFLAGS1 "SHAREDWRITE"                                        00345700
.***      BL1'X1XXXXXX'                                                 00345800
         AIF   ('&XTARGET_VIEW' NE 'SHAREDWRITE').ZI9A                  00345900
&ZW                   SETC  '&ZW.1'                                     00346000
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00346100
                      AGO   .ZI9C                                       00346200
.*                                                                      00346300
.ZI9A                 ANOP  ,                                           00346400
&ZW                   SETC  '&ZW.0'                                     00346500
.ZI9C                 ANOP  ,                                           00346600
.*-------------------------------------------------------------------   00346700
.***AI.L08 XFLAGS1 "UNIQUEWRITE"                                        00346800
.***      BL1'XX1XXXXX'                                                 00346900
         AIF   ('&XTARGET_VIEW' NE 'UNIQUEWRITE').ZI10A                 00347000
&ZW                   SETC  '&ZW.1'                                     00347100
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00347200
                      AGO   .ZI10C                                      00347300
.*                                                                      00347400
.ZI10A                ANOP  ,                                           00347500
&ZW                   SETC  '&ZW.0'                                     00347600
.ZI10C                ANOP  ,                                           00347700
.*-------------------------------------------------------------------   00347800
.***AI.L08 XFLAGS1 "TARGETWRITE"                                        00347900
.***      BL1'XXX1XXXX'                                                 00348000
         AIF   ('&XTARGET_VIEW' NE 'TARGETWRITE').ZI11A                 00348100
&ZW                   SETC  '&ZW.1'                                     00348200
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00348300
                      AGO   .ZI11C                                      00348400
.*                                                                      00348500
.ZI11A                ANOP  ,                                           00348600
&ZW                   SETC  '&ZW.0'                                     00348700
.ZI11C                ANOP  ,                                           00348800
.*-------------------------------------------------------------------   00348900
.***AI.L08 XFLAGS1 "LIKESOURCE"                                         00349000
.***      BL1'XXXX1XXX'                                                 00349100
         AIF   ('&XTARGET_VIEW' NE 'LIKESOURCE').ZI12A                  00349200
&ZW                   SETC  '&ZW.1'                                     00349300
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00349400
                      AGO   .ZI12C                                      00349500
.*                                                                      00349600
.ZI12A                ANOP  ,                                           00349700
&ZW                   SETC  '&ZW.0'                                     00349800
.ZI12C                ANOP  ,                                           00349900
.*-------------------------------------------------------------------   00350000
.***AI.L08 XFLAGS1 "HIDDEN"                                             00350100
.***      BL1'XXXXX1XX'                                                 00350200
         AIF   ('&XTARGET_VIEW' NE 'HIDDEN').ZI13A                      00350300
&ZW                   SETC  '&ZW.1'                                     00350400
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00350500
                      AGO   .ZI13C                                      00350600
.*                                                                      00350700
.ZI13A                ANOP  ,                                           00350800
&ZW                   SETC  '&ZW.0'                                     00350900
.ZI13C                ANOP  ,                                           00351000
.*-------------------------------------------------------------------   00351100
.***AI.L08 XFLAGS1 "COPYNOW"                                            00351200
.***      BL1'XXXXXX1X'                                                 00351300
         AIF   ('&XCOPYNOW' EQ '').ZI14A                                00351400
         AIF   ('&XCOPYNOW' EQ 'DO_NOT_COPYNOW').ZI14A                  00351500
&ZW                   SETC  '&ZW.1'                                     00351600
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00351700
                      AGO   .ZI14C                                      00351800
.*                                                                      00351900
.ZI14A                ANOP  ,                                           00352000
&ZW                   SETC  '&ZW.0'                                     00352100
.ZI14C                ANOP  ,                                           00352200
.*-------------------------------------------------------------------   00352300
.***AI.L08 XFLAGS1 "YES"                                                00352400
.***      BL1'XXXXXXX1'                                                 00352500
         AIF   ('&XRETAIN' NE 'YES').ZI15A                              00352600
&ZW                   SETC  '&ZW.1'                                     00352700
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00352800
                      AGO   .ZI15C                                      00352900
.*                                                                      00353000
.ZI15A                ANOP  ,                                           00353100
&ZW                   SETC  '&ZW.0'                                     00353200
.ZI15C                ANOP  ,                                           00353300
.*-------------------------------------------------------------------   00353400
.***AI.L11 XFLAGS1 BL1                                                  00353500
                      AIF   ('&ZCLNG' NE 'YES').ZI15E  ALL ZERO BITS    00353600
&ZOPN                 SETA  &ZOPN+1                                     00353700
&ZOPL(&ZOPN)          SETC  ' '                                         00353800
&ZOPO(&ZOPN)          SETC  'OI'                                        00353900
&ZOPV(&ZOPN)          SETC  '2(1),B''&ZW'''                             00354000
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              00354100
.ZI15E                ANOP  ,                                           00354200
.*-------------------------------------------------------------------   00354300
.***AI.L05 XFLAGS2 BL1                                                  00354400
&ZW                   SETC  ''                                          00354500
&ZCLNG                SETC  ''             RESET BIT ON FLAG            00354600
.*-------------------------------------------------------------------   00354700
.***AI.L08 XFLAGS2 "YES"                                                00354800
.***      BL1'1XXXXXXX'                                                 00354900
         AIF   ('&XPARTIALPAGE' NE 'YES').ZI17A                         00355000
&ZW                   SETC  '&ZW.10000000'                              00355100
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00355200
                      AGO   .ZI17C                                      00355300
.*                                                                      00355400
.ZI17A                ANOP  ,                                           00355500
&ZW                   SETC  '&ZW.00000000'                              00355600
.ZI17C                ANOP  ,                                           00355700
.*-------------------------------------------------------------------   00355800
.***AI.L11 XFLAGS2 BL1                                                  00355900
                      AIF   ('&ZCLNG' NE 'YES').ZI17E  ALL ZERO BITS    00356000
&ZOPN                 SETA  &ZOPN+1                                     00356100
&ZOPL(&ZOPN)          SETC  ' '                                         00356200
&ZOPO(&ZOPN)          SETC  'OI'                                        00356300
&ZOPV(&ZOPN)          SETC  '3(1),B''&ZW'''                             00356400
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              00356500
.ZI17E                ANOP  ,                                           00356600
.*-------------------------------------------------------------------   00356700
.***AI.L25  XNUMRANGE F                                                 00356800
                      AIF   ('&ZXNUMRANGE' EQ '').ZI18E                 00356900
                      AIF   ('&ZXNUMRANGE' EQ 'OUTPUT').ZI18E           00357000
&ZCGPR                SETC  '&XNUMRANGE'                                00357100
.*                                                                      00357200
                      AIF   ('&XNUMRANGE'(1,1) NE '(').ZI18B            00357300
&ZCGPR   SETC  '0('.'&XNUMRANGE'(2,K'&XNUMRANGE-2).')'                  00357400
                      AGO   .ZI18D                                      00357500
.ZI18B                ANOP  ,                                           00357600
.*                                                                      00357700
&ZC                   SETC  '&XNUMRANGE'(1,1)                           00357800
                      AIF   (T'&ZC NE 'N').ZI18D                        00357900
&ZC                   SETC  '&XNUMRANGE'                                00358000
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI18D               00358100
&ZCGPR                SETC  '=FL4''&XNUMRANGE'''                        00358200
.*                                                                      00358300
.ZI18D                ANOP  ,                                           00358400
.*                                                                      00358500
&ZOPN                 SETA  &ZOPN+1                                     00358600
&ZOPL(&ZOPN)          SETC  ' '                                         00358700
&ZOPO(&ZOPN)          SETC  'MVC'                                       00358800
&ZOPV(&ZOPN)          SETC  '4(4,1),&ZCGPR'                             00358900
&ZOPD(&ZOPN)          SETC  '++ &ZXNUMRANGE XNUMRANGE'                  00359000
.*                                                                      00359100
.ZI18E                ANOP  ,                                           00359200
.*-------------------------------------------------------------------   00359300
.***AI.L25  XRANGLIST AL4                                               00359400
                      AIF   ('&ZXRANGLIST' EQ '').ZI19E                 00359500
                      AIF   ('&ZXRANGLIST' EQ 'OUTPUT').ZI19E           00359600
&ZCGPR                SETC  '&XRANGLIST'                                00359700
.*                                                                      00359800
                      AIF   ('&XRANGLIST'(1,1) NE '(').ZI19B            00359900
&ZCGPR   SETC  '0('.'&XRANGLIST'(2,K'&XRANGLIST-2).')'                  00360000
                      AGO   .ZI19D                                      00360100
.ZI19B                ANOP  ,                                           00360200
.*                                                                      00360300
&ZC                   SETC  '&XRANGLIST'(1,1)                           00360400
                      AIF   (T'&ZC NE 'N').ZI19D                        00360500
&ZC                   SETC  '&XRANGLIST'                                00360600
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI19D               00360700
&ZCGPR                SETC  '=AL4(&XRANGLIST)'                          00360800
.*                                                                      00360900
.ZI19D                ANOP  ,                                           00361000
.*                                                                      00361100
&ZOPN                 SETA  &ZOPN+1                                     00361200
&ZOPL(&ZOPN)          SETC  ' '                                         00361300
&ZOPO(&ZOPN)          SETC  'MVC'                                       00361400
&ZOPV(&ZOPN)          SETC  '8(4,1),&ZCGPR'                             00361500
&ZOPD(&ZOPN)          SETC  '++ &ZXRANGLIST XRANGLIST'                  00361600
.*                                                                      00361700
.ZI19E                ANOP  ,                                           00361800
.*-------------------------------------------------------------------   00361900
&ZOPN1                SETA &ZOPN                                        00362000
.*******************************************************************    00362100
.***  PROCESS IARVSERV OUTPUT PARAMETERS                                00362200
.*******************************************************************    00362300
                      ACTR  10000                                       00362400
.*******************************************************************    00362500
.***AO.X04  LABEL FOR MF=L PROCESSING                                   00362600
.*******************************************************************    00362700
.ZMFLX                ANOP  ,              MF=L PROCESSING              00362800
.*******************************************************************    00362900
.***AO.X05  FORMAT GENERATED INSTRUCTIONS                               00363000
.*******************************************************************    00363100
                      ACTR  10000                                       00363200
.*                                                                      00363300
                      LCLA  &ZLC           COLUMN POSITION              00363400
                      LCLA  &ZOPX          LIST TABLE INDEX             00363500
                      LCLC  &ZLL           LABEL                        00363600
                      LCLC  &ZLOP          OPERATION                    00363700
                      LCLC  &ZLV           VALUE                        00363800
                      LCLC  &ZLD           DESCRIPTION                  00363900
.*                                                                      00364000
&ZOPX                 SETA  1                                           00364100
.ZL2                  AIF   (&ZOPX GT &ZOPN1).ZLX  B IF DONE            00364200
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00364300
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00364400
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00364500
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00364600
                      AIF   (K'&ZLD LE 0).ZL5                           00364700
&ZLC                  SETA  35             COMMENT COLUMN               00364800
                      AIF   ('&ZLD'(1,1) NE '*').ZL3                    00364900
&ZLC                  SETA  33             COMMMENT COLUMN              00365000
.ZL3                  AIF   (K'&ZLV GE &ZLC-16-1).ZL4                   00365100
&ZLV                  SETC  '&ZLV'.' '                                  00365200
                      AGO   .ZL3                                        00365300
.*                                                                      00365400
.ZL4                  ANOP  ,                                           00365500
&ZLV                  SETC  '&ZLV'.' '                                  00365600
.ZL5                  ANOP  ,                                           00365700
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00365800
.*                                                                      00365900
&ZLL     &ZLOP &ZLV                                                     00366000
.*                                                                      00366100
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00366200
                      AGO   .ZL2           CONTINUE LOOPING             00366300
.*                                                                      00366400
.ZLX                  ANOP  ,                                           00366500
                      AIF   ('&XMF' EQ 'L').ZLINKX  MF=L                00366600
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00366700
         AIF   ('&XBRANCH' EQ 'YES').PC001                              00366800
         L     14,16(0,0)        GET CVT ADDRESS                        00366900
         L     14,772(14,0)      GET SYSTEM FUNCTION TABLE ADDRESS      00367000
         L     14,208(14,0)      GET LX/EX FOR SERVICE ROUTINE          00367100
         LA    15,12             EX OFFSET FOR IARVSERV ASSIGN          00367200
         OR    14,15             GENERATE LX/EX COMBINATION             00367300
         PC    0(14)             PC TO IARVSERV SERVICE                 00367400
         AGO   .PC002                                                   00367500
.PC001   ANOP  ,                                                        00367600
         L     15,16(0,0)        Get CVT address                        00367700
         L     15,356(15,0)      Get PVT address                        00367800
         L     15,16(15,0)       Get PVT extention address              00367900
         L     15,24(15,0)       Get IARIRSRV entry point               00368000
         BALR  14,15             Branch to IARIRSRV (IARVSERV service)  00368100
.PC002   ANOP  ,                                                        00368200
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00368300
.ZLINKX               ANOP  ,                                           00368400
.*******************************************************************    00368500
.***AP.X01  FORMAT GENERATED CODE                                       00368600
.ZL21                 AIF   (&ZOPX GT &ZOPN).ZLX1  B IF DONE            00368700
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00368800
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00368900
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00369000
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00369100
                      AIF   (K'&ZLD LE 0).ZL51                          00369200
&ZLC                  SETA  35             COMMENT COLUMN               00369300
                      AIF   ('&ZLD'(1,1) NE '*').ZL31                   00369400
&ZLC                  SETA  33             COMMENT COLUMN               00369500
.ZL31                 AIF   (K'&ZLV GE &ZLC-16-1).ZL41                  00369600
&ZLV                  SETC  '&ZLV'.' '                                  00369700
                      AGO   .ZL31                                       00369800
.*                                                                      00369900
.ZL41                 ANOP  ,                                           00370000
&ZLV                  SETC  '&ZLV'.' '                                  00370100
.ZL51                 ANOP  ,                                           00370200
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00370300
.*                                                                      00370400
&ZLL     &ZLOP &ZLV                                                     00370500
.*                                                                      00370600
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00370700
                      AGO   .ZL21          CONTINUE LOOPING             00370800
.*                                                                      00370900
.ZLX1                 ANOP  ,                                           00371000
.*******************************************************************    00371100
.***AP.X02  END OF IARVSERV MACRO                                       00371200
&ZIARVSERV            SETC  'YES'          SET IARVSERV USED            00371300
         POP   PRINT                                                    00371400
*                                            IARVSERV-0                 00371500
         SPACE 1                                                        00371600
.ZLX2                 ANOP  ,                                           00371700
         MEND                                                           00371800
**********************************************************************/ 00371900
*/*PB.OC01 INVOKE MACRO---------------------------------------------*/  00372000
*%IARVSERV: MACRO KEYS(SHARE,RANGLIST,NUMRANGE,TARGET_VIEW,COPYNOW,     00372100
*                 BRANCH,PARTIALPAGE,UNSHARE,RETAIN,SHARESEG,           00372200
*                 CHANGEACCESS,RETCODE,RSNCODE,PLISTVER,MF);            00372300
*  ANS('?'||MACLABEL||' '||'IARVSERP '||MACLIST||                       00372400
*         ' '||MACKEYS||';') COL(MACLMAR);                              00372500
*%END IARVSERV;                                                         00372600
