*                                                                       00050000
* %DCL CSVDLENF_INCLUDED CHAR EXT;                                      00100000
* %DEACTIVATE CSVDLENF_INCLUDED;                                        00150000
* %IF CSVDLENF_INCLUDED = '' %THEN                                      00200000
* %DO;                                                                  00250000
*/* Macro made bi-lingual on 97258. CBGEN compile date 97252         */ 00300000
*% /*                                                                   00350000
         MACRO                                                          00400000
         CSVDLENF &DSECT=YES,&LIST=YES,&TITLE=YES,&DLENF=YES            00450000
         GBLC  &CSVDLENF_INCLUDED                                       00500000
         GBLC  &ZCBPRINT                                                00550000
&CSVDLENF_INCLUDED SETC 'YES'                                           00600000
         AIF   ('&LIST' EQ 'NONE').P0                                   00616600
         AIF   ('&TITLE' EQ 'NO').P5                                    00633200
 TITLE   'CSVDLENF  - Dynamic Lnklst ENF mapping (event code 52)     '  00650000
.P5      ANOP                                                           00675000
**/ CSVDLENF_1:;                                                        00700000
*/* START OF SPECIFICATIONS ******************************************* 00750000
*                                                                       00800000
*  **PROPRIETARY_STATEMENT********************************************  00850000
***01* PROPRIETARY STATEMENT=                                        *  00900000
*                                                                    *  00950000
*                                                                    *  01000000
*   LICENSED MATERIALS - PROPERTY OF IBM                             *  01050000
*   THIS MACRO IS "RESTRICTED MATERIALS OF IBM"                      *  01100000
*   5647-A01 (C) COPYRIGHT IBM CORP. 1997,1998                       *  01150000
*                                                                    *  01250000
*   STATUS= HBB6605                                                  *  01300000
*                                                                    *  01350000
*  **END_OF_PROPRIETARY_STATEMENT*************************************  01400000
*                                                                       01450000
*01* DESCRIPTIVE NAME:  Dynamic Lnklst ENF mapping (event code 52)      01500000
*02*  ACRONYM:  DLEN                                                    01550000
*                                                                       01600000
*01* MACRO NAME:  CSVDLENF                                              01650000
*                                                                       01700000
*01* EXTERNAL CLASSIFICATION: GUPI                                      01750000
*01* END OF EXTERNAL CLASSIFICATION:                                    01800000
*                                                                       01850000
*01* DSECT NAME:                                                        01900000
*     DLENF                                                             01950000
*                                                                       02000000
*01* COMPONENT:  Contents Supervision (SC1CJ)                           02050000
*                                                                       02100000
*01* EYE-CATCHER:  DLEN                                                 02125000
*02*   OFFSET: 0                                                        02150000
*02*   LENGTH: 4                                                        02175000
*                                                                       02200000
*01* STORAGE ATTRIBUTES:                                                02250000
*02*  SUBPOOL:  247 for ENF signal                                      02300000
*02*  KEY:  0                                                           02350000
*02*  RESIDENCY:  Above 16M                                             02400000
*                                                                       02450000
*01* SIZE:                                                              02500000
*                DLENF -- X'0080' bytes                                 02550000
*                                                                       02600000
*01* CREATED BY:                                                        02650000
*     Dynamic LNKLST processing, and provided to ENF listeners          02700000
*      for event 052.                                                   02750000
*                                                                       02800000
*01* POINTED TO BY:                                                     02850000
*     R1 on entry to ENF listening routine                              02900000
*                                                                       02950000
*01* SERIALIZATION:                                                     03000000
*     None required                                                     03050000
*                                                                       03100000
*01* FUNCTION:                                                          03150000
*02* Maps the data provided for ENF event 052.                          03200000
*                                                                       03250000
*                                                                       03300000
*                                                                       03350000
*01* METHOD OF ACCESS:                                                  03400000
*02*  ASM:                                                              03450000
*      CSVDLENF                                                         03500000
*           DSECT=YES|NO  -- Request DSECT definition                   03550000
*           DLENF=YES|NO|COND -- Request mapping                        03600000
*                            USING on DLENF                             03650000
*     Default: DSECT=YES,DLENF=YES                                      03700000
*     Notes: name=YES  => expand                                        03750000
*            name=NO   => do not expand                                 03800000
*            name=COND => expand only if DSECT=YES                      03850000
*                                                                       03900000
*02*  PL/AS:                                                            03950000
*      %INCLUDE SYSLIB(CSVDLENF)                                        04000000
*                                                                       04050000
*01* DELETED BY:  ENF processing                                        04100000
*                                                                       04150000
*01* FREQUENCY:  Created for ACTIVATE request                           04200000
*                                                                       04250000
*01* DEPENDENCIES:  None                                                04300000
*                                                                       04350000
*01* DISTRIBUTION LIBRARY:  AMACLIB                                     04400000
*                                                                       04450000
*01* CHANGE ACTIVITY:                                                   04500000
*   $L0=DYNLLCBG ,HBB6603,941231,PD00XB: Dynamic LNKLST                 04550000
*   $L1=DYNLLCSV ,HBB6603,941231,PD00XB: Dynamic LNKLST                 04600000
*   **CAUTION: The intent is that this match EXACTLY CSVDLSMF           04650000
*   **CAUTION: with the addition of eyecatcher and compID.              04700000
*   **CAUTION: Update CSVDLSMF and the SMF                              04750000
*   **CAUTION: section in CSVDLPR if this macro changes.                04800000
*                                                                       04850000
* END OF SPECIFICATIONS *********************************************/  04900000
*% /*                                                                   04950000
.P0      ANOP                                                           04975000
         AIF   ('&ZCBPRINT' EQ 'NO').P1                                 05000000
         AIF   ('&LIST' EQ 'YES').P2                                    05050000
.P1      ANOP                                                           05100000
         PUSH  PRINT                                                    05150000
         PRINT OFF                                                      05200000
.P2      ANOP                                                           05250000
         AIF   ('&DLENF' EQ 'NO').L0002                                 05300000
         AIF   ('&DSECT' EQ 'YES').L0003                                05350000
         AIF   ('&DLENF' NE 'YES').L0002                                05400000
DLENF    DS    0D        Dynamic LNKLST Event Notification Parameter   *05450000
                         List                                           05500000
         AGO   .L0004                                                   05550000
.L0003   ANOP                                                           05600000
DLENF    DSECT           Dynamic LNKLST Event Notification Parameter   *05650000
                         List                                           05700000
.L0004   ANOP                                                           05750000
DLENFID  DS    1CL0004   Eyecatcher 'DLEN'                              05800000
DLENFCOMPONENT DS 1CL0005 Component acronym 'SC1CJ'                     05850000
         DS    1CL0003   Unused                                         05900000
DLENFLNKLSTSEQ# DS 1FL4  Seq# of the LNKLST set. Note that the number  *05916600
                         always increases when a new LNKLST set, or a  *05933200
                         not-in-use old LNKLST set, is activated. But  *05949800
                         if an in-use LNKLST set is activated, the     *05966400
                         number of that LNKLST set does not change.    *05983000
                         That means that on an activation, the LNKLST  *05999600
                         sequence number does change from what it was  *06016200
                         (ignoring the the uninteresting case where    *06032800
                         you activate the current LNKLST set, which is *06049400
                         effectively a no-op), but does not             06066000
*                        necessarily increase.                          06082600
DLENFLNKLSTNAME DS 1CL0016 Name of the LNKLST set that was just        *06100000
                         activated                                      06150000
DLENFTIMESTAMP DS 1CL0008 Time value (from STCK) of the activation      06200000
DLENFCONSID DS 1FL4      Console ID of the issuer of the activation     06220000
DLENFUTOKEN DS 1CL0080   Security product user token of issuer of the  *06240000
                         activation                                     06260000
         DS    1CL0004   Unused                                         06280000
DLENFIDCHARS EQU C'DLEN' Eyecatcher                                     06300000
DLENF_LEN EQU  *-DLENF                                                  06350000
.L0002   ANOP                                                           06400000
         AIF   ('&ZCBPRINT' EQ 'NO').P3                                 06450000
         AIF   ('&LIST' EQ 'YES').P4                                    06500000
.P3      ANOP                                                           06550000
         POP   PRINT                                                    06600000
.P4      ANOP                                                           06650000
.P_EXIT  ANOP                                                           06700000
         MEND                                                           06750000
**/ CSVDLENF_2:;                                                        06800000
* %CSVDLENF_INCLUDED = 'YES';                                           06850000
* %DCL ZCBPRINT CHAR EXT;                                               06900000
* %DEACTIVATE ZCBPRINT;                                                 06950000
* %DCL CSVDLENF_LIST CHAR EXT;                                          07000000
* %DEACTIVATE CSVDLENF_LIST;                                            07050000
* %IF CSVDLENF_LIST ^= 'NO' &                                           07100000
*    ZCBPRINT ^= 'NO' %THEN                                             07150000
*   %GOTO CSVDLENF_3;                                                   07200000
*   @LIST PUSH NOECHO;                                                  07250000
*   @LIST NOASSEMBLE NOECHO;                                            07300000
*   @LIST OFF C NOECHO;                                                 07350000
* %CSVDLENF_3:;                                                         07400000
*/* Start of PL/X Source                                             */ 07450000
* %SELECT(DLENF_BASED);            /*                            @L1A*/ 07500000
*   %WHEN('')                      /* Not specified?             @L1A*/ 07550000
*     %DLENF_BASED = 'BASED(*)'; /* Default to simply based      @L1A*/ 07600000
*   %WHEN('NO')                    /* Don't want it based?       @L1A*/ 07650000
*       %DLENF_BASED = '';         /* Nullify the basing expression     07700000
*                                                                @L1A*/ 07750000
*   %OTHERWISE %;                  /* Else leave what user supplied     07800000
*                                                                @L1A*/ 07850000
* %END SELECT;                     /*                            @L1A*/ 07900000
*   DECLARE                                                             07950000
*     1    DLENF DLENF_BASED,         /* Dynamic LNKLST Event           08000000
*                                   Notification Parameter List  @L1A*/ 08050000
*       3    DlenfID CHAR(4),         /* Eyecatcher 'DLEN'       @L1A*/ 08100000
*       3    DlenfComponent CHAR(5),  /* Component acronym 'SC1CJ'      08150000
*                                                                @L1A*/ 08200000
*       3    * CHAR(3),               /* Unused                  @L1A*/ 08250000
*       3    DlenfLnklstSeq# Fixed,   /* Seq# of the LNKLST set.        08300000
*                     Note that the number always increases             08312500
*                     when a new LNKLST set, or a not-in-use            08325000
*                     old LNKLST set, is activated. But if an           08337500
*                     in-use LNKLST set is activated, the number        08350000
*                     of that LNKLST set does not change. That means    08362500
*                     that on an activation, the LNKLST sequence        08375000
*                     number does change from what it was (ignoring     08387500
*                     the the uninteresting case where you activate     08400000
*                     the current LNKLST set, which is effectively a    08412500
*                     no-op), but does not necessarily increase.        08425000
*                                                                @P1C*/ 08437500
*       3    DlenfLnklstName CHAR(16),  /* Name of the LNKLST set that  08450000
*                                    was just activated          @L1A*/ 08500000
*       3    DlenfTimeStamp CHAR(8),    /* Time value (from STCK) of    08550000
*                                    the activation              @L1A*/ 08600000
*       3    DlenfConsid FIXED(32),     /* Console ID of the issuer of  08608300
*                                    the activation              @L1A*/ 08616600
*       3    DlenfUToken CHAR(80),      /* Security product user token  08624900
*                                    of issuer of the activation @L1A*/ 08633200
*       3    * CHAR(4),                 /* Unused                @L1A*/ 08641500
*       3    * CHAR(0) Bdy(DWORD);    /* End of ENF area         @L1A*/ 08650000
*                                                                       08700000
*   Declare                                                             08750000
*     DlenfIdChars CHAR(*) CONSTANT('DLEN'); /* Eyecatcher       @L1A*/ 08800000
* @LOGIC;                                                               08850000
* #PRAGMA TOOL=CBGEN.                                                   08900000
* #USEORG.                                                              08950000
* #EPRAGMA.                                                             09000000
* @ENDLOGIC;                                                            09050000
*/* End of PL/X Source                                               */ 09100000
* %IF CSVDLENF_LIST ^= 'NO' &                                           09150000
*    ZCBPRINT ^= 'NO' %THEN                                             09200000
*   %GOTO CSVDLENF_4;                                                   09250000
*   @LIST POP NOECHO;                                                   09300000
* %CSVDLENF_4:;                                                         09350000
* %END;                                                                 09400000
