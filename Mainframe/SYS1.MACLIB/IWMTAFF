*/**** START OF SPECIFICATIONS **************************************** 00000100
*                                                                     * 00000200
*                                                                     * 00000300
*01* MACRO NAME:  IWMTAFF                               -00/06/15-<0> * 00000400
*                                                                     * 00000500
*                                                                     * 00000600
*01* DESCRIPTIVE NAME:  WLM Temporal Affinity Service                 * 00000700
*                                                                     * 00000800
*01* PROPRIETARY STATEMENT:                                           * 00000900
*                                                                     * 00001000
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 00001100
*     5647-A01 (C) COPYRIGHT IBM CORP. 1999, 1999                     * 00001200
*                                                                     * 00001300
* STATUS= HBB6608                                                     * 00001400
*                                                                     * 00001500
*                                                                     * 00001600
*                                                                     * 00001700
*01* FUNCTION:                                                        * 00001800
*                                                                     * 00001900
*                                                                     * 00002000
*      The IWMTAFF service should be used to inform WLM when a        * 00002100
*      temporal affinity for a specific server region starts and when * 00002200
*      it ends. WLM will ensure that server regions will not be       * 00002300
*      terminated as long as temporal affinities exist.               * 00002400
*                                                                     * 00002500
*      The caller must have previously connected to WLM using the     * 00002600
*      IWMCONN as server or as queue manager.                         * 00002700
*                                                                     * 00002800
*01* EXTERNAL CLASSIFICATION:  GUPI                                   * 00002900
*                                                                     * 00003000
*01* END OF EXTERNAL CLASSIFICATION:                                  * 00003100
*                                                                     * 00003200
*01* ENVIRONMENT:                                                     * 00003300
*                                                                     * 00003400
*                                                                     * 00003500
*      Minimum authorization: Problem or Supervisor state.  Any PSW   * 00003600
*                        key.                                         * 00003700
*                                                                     * 00003800
*      Dispatchable unit mode: Task mode.                             * 00003900
*                                                                     * 00004000
*      Cross Memory Mode: PASN=HASN=SASN.                             * 00004100
*                                                                     * 00004200
*      AMODE:            31-bit.                                      * 00004300
*                                                                     * 00004400
*      ASC mode:         Primary.                                     * 00004500
*                                                                     * 00004600
*      Interrupt status: Enabled for I/O and external interrupts.     * 00004700
*                                                                     * 00004800
*      Locks:            No locks held.                               * 00004900
*                                                                     * 00005000
*      Control parameters: Control parameters must be in the primary  * 00005100
*                        address space.                               * 00005200
*                                                                     * 00005300
*                                                                     * 00005400
*                                                                     * 00005500
*01* PROGRAMMING REQUIREMENTS:                                        * 00005600
*                                                                     * 00005700
*                                                                     * 00005800
*    1.  Make sure no EUT FRRs are established.                       * 00005900
*                                                                     * 00006000
*    2.  The macro CVT must be included to use this macro.            * 00006100
*                                                                     * 00006200
*    3.  The macro IWMYCON must be included to use this macro.        * 00006300
*                                                                     * 00006400
*    4.  The macro IWMPB must be in the library concatenation, since  * 00006500
*        it is included by IWMYCON.                                   * 00006600
*                                                                     * 00006700
*    5.  Note that the high order halfword of register 0, and the     * 00006800
*        reason code variable when specified, may be non-zero and     * 00006900
*        represents diagnostic data which is NOT part of the external * 00007000
*        interface.  The high order halfword should thus be excluded  * 00007100
*        from comparison with the reason code values described above. * 00007200
*        The constant, IWMRSNCODE_MASK_CONST defined in IWMYCON, may  * 00007300
*        be used for this purpose.                                    * 00007400
*                                                                     * 00007500
*                                                                     * 00007600
*                                                                     * 00007700
*01* RESTRICTIONS:                                                    * 00007800
*                                                                     * 00007900
*                                                                     * 00008000
*    1.  The PL/X  version of the macro needs the EPILOG macro to be  * 00008100
*        included.                                                    * 00008200
*                                                                     * 00008300
*    2.  This macro may not be used during task/address space         * 00008400
*        termination.                                                 * 00008500
*                                                                     * 00008600
*    3.  Before using this macro the caller must connect to WLM via   * 00008700
*        IWMCONN Server_Manager=YES, Server_Type=Queue or IWMCONN     * 00008800
*        Queue_Manager=YES.                                           * 00008900
*                                                                     * 00009000
*                                                                     * 00009100
*                                                                     * 00009200
*01* INPUT REGISTER INFORMATION:                                      * 00009300
*                                                                     * 00009400
*    Before issuing the IWMTAFF macro, the caller does not have to    * 00009500
*    place any information into any register unless using it in       * 00009600
*    register notation for a particular parameter, or using it as a   * 00009700
*    base register.                                                   * 00009800
*                                                                     * 00009900
*01* OUTPUT REGISTER INFORMATION:                                     * 00010000
*                                                                     * 00010100
*    When control returns to the caller, the GPRs contain:            * 00010200
*                                                                     * 00010300
*                                                                     * 00010400
*    REGISTER  CONTENTS                                               * 00010500
*                                                                     * 00010600
*    0         Reason code if GR15 return code is non-zero            * 00010700
*                                                                     * 00010800
*    1         Used as work registers by the system                   * 00010900
*                                                                     * 00011000
*    2-13      Unchanged                                              * 00011100
*                                                                     * 00011200
*    14        Used as work registers by the system                   * 00011300
*                                                                     * 00011400
*    15        Return code                                            * 00011500
*                                                                     * 00011600
*                                                                     * 00011700
*                                                                     * 00011800
*    When control returns to the caller, the ARs contain:             * 00011900
*                                                                     * 00012000
*                                                                     * 00012100
*    REGISTER  CONTENTS                                               * 00012200
*                                                                     * 00012300
*    0-1       Used as work registers by the system                   * 00012400
*                                                                     * 00012500
*    2-13      Unchanged                                              * 00012600
*                                                                     * 00012700
*    14-15     Used as work registers by the system                   * 00012800
*                                                                     * 00012900
*                                                                     * 00013000
*                                                                     * 00013100
*    Some callers depend on register contents remaining the same      * 00013200
*    before and after issuing a service.  If the system changes the   * 00013300
*    contents of registers on which the caller depends, the caller    * 00013400
*    must save them before issuing the service, and restore them      * 00013500
*    after the system returns control.                                * 00013600
*                                                                     * 00013700
*01* PERFORMANCE IMPLICATIONS:                                        * 00013800
*                                                                     * 00013900
*    None                                                             * 00014000
*                                                                     * 00014100
*01* SYNTAX:                                                          * 00014200
*                                                                     * 00014300
*[xlabel]  IWMTAFF    AFFINITY=YES                                   * 00014400
*                    ,AFFINITY=NO                                    * 00014500
*                    [,REGION_TOKEN=xregion_token|0]                * 00014600
*                    [,RETCODE=xretcode]                              * 00014700
*                    [,RSNCODE=xrsncode]                              * 00014800
*                    [,PLISTVER=xplistver|IMPLIED_VERSION]          * 00014900
*                   [,MF=S]                                          * 00015000
*                   [,MF=(L,xmfctrl,xmfattr|0D)]                   * 00015100
*                   [,MF=(E,xmfctrl,COMPLETE)]                     * 00015200
*                                                                     * 00015300
*                                                                     * 00015400
*      Where:                                                         * 00015500
*                                                                     * 00015600
*                                                                     * 00015700
*      [xlabel]                                                       * 00015800
*          is an optional symbol, starting in column 1, that is the   * 00015900
*          name on the IWMTAFF macro invocation.  The name must       * 00016000
*          conform to the rules for an ordinary assembler language    * 00016100
*          symbol.                                                    * 00016200
*          DEFAULT: No name.                                          * 00016300
*                                                                     * 00016400
*                                                                     * 00016500
*                                                                     * 00016600
*                                                                     * 00016700
*      AFFINITY=YES|NO                                              * 00016800
*          is a required keyword input indicating whether a temporal  * 00016900
*          affinity begins or ends                                    * 00017000
*                                                                     * 00017100
*                                                                     * 00017200
*          AFFINITY=YES                                               * 00017300
*              A new temporal affinity for the server region begins.  * 00017400
*              WLM will ensure that the server regions is not         * 00017500
*              terminated before all temporal affinity have ended.    * 00017600
*                                                                     * 00017700
*          AFFINITY=NO                                                * 00017800
*              A temporal affinity for the server region has ended.   * 00017900
*              WLM will start to terminate server regions if all      * 00018000
*              temporal affinities have ended.                        * 00018100
*                                                                     * 00018200
*                                                                     * 00018300
*                                                                     * 00018400
*                                                                     * 00018500
*                                                                     * 00018600
*                                                                     * 00018700
*      [REGION_TOKEN=xregion_token|0]                               * 00018800
*          is the name (RS-type), or address in register (2)-(12), of * 00018900
*          an optional 16 character input which contains the region   * 00019000
*          token.  The region token is not required if the macro is   * 00019100
*          invoked from the server region for which the temporal      * 00019200
*          affinity should be started or stopped. The region token    * 00019300
*          must be used if the services is used from the queueing     * 00019400
*          manager.  The region token is returned by the IWMSSEL      * 00019500
*          macro.                                                     * 00019600
*                                                                     * 00019700
*          The caller must be supervisor state or have PSW key mask   * 00019800
*          0-7 authority to use this service with the REGION_TOKEN    * 00019900
*          parameter.                                                 * 00020000
*                                                                     * 00020100
*          Coding REGION_TOKEN=0 is equivalent to omitting the        * 00020200
*          REGION_TOKEN keyword.                                      * 00020300
*          DEFAULT: 0                                                 * 00020400
*                                                                     * 00020500
*                                                                     * 00020600
*                                                                     * 00020700
*                                                                     * 00020800
*      [RETCODE=xretcode]                                             * 00020900
*          is the name (RS-type) of an optional fullword output       * 00021000
*          variable, or register (2)-(12), into which the return code * 00021100
*          is to be copied from GPR 15.                               * 00021200
*                                                                     * 00021300
*                                                                     * 00021400
*                                                                     * 00021500
*                                                                     * 00021600
*      [RSNCODE=xrsncode]                                             * 00021700
*          is the name (RS-type) of an optional fullword output       * 00021800
*          variable, or register (2)-(12), into which the reason code * 00021900
*          is to be copied from GPR 0.                                * 00022000
*                                                                     * 00022100
*                                                                     * 00022200
*                                                                     * 00022300
*                                                                     * 00022400
*      [PLISTVER=xplistver|IMPLIED_VERSION]                         * 00022500
*          is an optional byte input decimal value in the "0-0" range * 00022600
*          that specifies the macro version.  PLISTVER is the only    * 00022700
*          key allowed on the list form of MF and determines which    * 00022800
*          parameter list is generated.  Note that MAX may be         * 00022900
*          specified instead of a number, and the parameter list will * 00023000
*          be of the largest size currently supported. This size may  * 00023100
*          grow from release to release (thus possibly affecting the  * 00023200
*          amount of storage needed by your program).  If your        * 00023300
*          program can tolerate this, IBM recommends that you always  * 00023400
*          specify MAX when creating the list form parameter list as  * 00023500
*          that will ensure that the list form parameter list is      * 00023600
*          always long enough to hold whatever parameters might be    * 00023700
*          specified on the execute form.                             * 00023800
*          DEFAULT: IMPLIED_VERSION.  When PLISTVER is omitted, the   * 00023900
*          default is the lowest version which allows all of the      * 00024000
*          parameters specified on the invocation to be processed.    * 00024100
*                                                                     * 00024200
*                                                                     * 00024300
*                                                                     * 00024400
*                                                                     * 00024500
*      [MF=S|L|E]                                                   * 00024600
*          is an optional keyword input which specifies the macro     * 00024700
*          form.                                                      * 00024800
*          DEFAULT: S                                                 * 00024900
*                                                                     * 00025000
*                                                                     * 00025100
*          [MF=S]                                                     * 00025200
*              specifies the standard form of the macro.  The "S"     * 00025300
*              form generates code to put the parameters into an      * 00025400
*              in-line parameter list and invoke the desired service. * 00025500
*              Full checking for required macro keys is done along    * 00025600
*              with supplying defaults for omitted optional           * 00025700
*              parameters.                                            * 00025800
*                                                                     * 00025900
*          [MF=(L,xmfctrl,xmfattr|0D)]                              * 00026000
*              specifies the list form of the macro.  The "L" form    * 00026100
*              defines an area to be used for the parameter list.     * 00026200
*              Only the PLISTVER key may be specified on the          * 00026300
*              invocation.  All other macro parameters are flagged as * 00026400
*              errors.  If PLISTVER is not specified, the original    * 00026500
*              parameter list definition is used.                     * 00026600
*                                                                     * 00026700
*            ,xmfctrl                                                 * 00026800
*              is a required input.  It is the name of a storage area * 00026900
*              for the parameter list.                                * 00027000
*                                                                     * 00027100
*            ,xmfattr|0D                                            * 00027200
*              is an optional 60 character input string that varies   * 00027300
*              from 1 to 60 characters. Use it to force boundary      * 00027400
*              alignment of the parameter list. Use only 0F or 0D.    * 00027500
*              DEFAULT: 0D which forces the parameter list to a       * 00027600
*              doubleword boundary.                                   * 00027700
*                                                                     * 00027800
*          [MF=(E,xmfctrl,COMPLETE)]                                * 00027900
*              specifies the execute form of the macro.  The "E" form * 00028000
*              generates code to put the parameters into the          * 00028100
*              parameter list specified by xmfctrl and provides full  * 00028200
*              syntax checking with default setting.                  * 00028300
*                                                                     * 00028400
*            ,xmfctrl                                                 * 00028500
*              is a required input.  It is the name (RS-type), or     * 00028600
*              address in register (1)-(12), of a storage area for    * 00028700
*              the parameter list.                                    * 00028800
*                                                                     * 00028900
*            ,COMPLETE                                              * 00029000
*              is an optional keyword input which specifies the       * 00029100
*              degree of macro parameter syntax checking.             * 00029200
*              DEFAULT: COMPLETE                                      * 00029300
*                                                                     * 00029400
*                                                                     * 00029500
*              COMPLETE                                               * 00029600
*                  Checking for required macro keys is done and       * 00029700
*                  defaults are supplied for omitted optional         * 00029800
*                  parameters.                                        * 00029900
*                                                                     * 00030000
*                                                                     * 00030100
*                                                                     * 00030200
*                                                                     * 00030300
*                                                                     * 00030400
*                                                                     * 00030500
*                                                                     * 00030600
*01* ABEND CODES:  None.                                              * 00030700
*                                                                     * 00030800
*01* RETURN CODES:                                                    * 00030900
*                                                                     * 00031000
*                                                                     * 00031100
*            0    Name: IwmRetCodeOk                                  * 00031200
*                                                                     * 00031300
*                 Meaning: Successful completion.                     * 00031400
*                                                                     * 00031500
*                 Action: None required.                              * 00031600
*                                                                     * 00031700
*                                                                     * 00031800
*            4    Name: IwmRetCodeWarning                             * 00031900
*                                                                     * 00032000
*                 Meaning: Successful completion, unusual conditions  * 00032100
*                 noted.                                              * 00032200
*                                                                     * 00032300
*                 Action: None required.                              * 00032400
*                                                                     * 00032500
*                                                                     * 00032600
*                                                                     * 00032700
*                 HEX REASON  MEANING/ACTION                          * 00032800
*                 CODE                                                * 00032900
*                                                                     * 00033000
*                 xxxx0439    Name: IwmRsnCodeNoAffinityFound         * 00033100
*                                                                     * 00033200
*                             Meaning: The service has been invoked   * 00033300
*                             to tell WLM that an existing server     * 00033400
*                             region affinity has been terminated but * 00033500
*                             WLM has no affinity defined for this    * 00033600
*                             server region.                          * 00033700
*                                                                     * 00033800
*                             Action: If region token was not         * 00033900
*                             specified make sure to use the service  * 00034000
*                             properly at the beginning and end of    * 00034100
*                             each affinity.  If the region token has * 00034200
*                             been defined make sure that it is used  * 00034300
*                             for the correct server region.          * 00034400
*                                                                     * 00034500
*                 xxxx043A    Name: IwmRsnCodeRegionNotFound          * 00034600
*                                                                     * 00034700
*                             Meaning: The region token does not      * 00034800
*                             identify a valid server region.         * 00034900
*                                                                     * 00035000
*                             Action: Please specify the correct      * 00035100
*                             region token.                           * 00035200
*                                                                     * 00035300
*                                                                     * 00035400
*                                                                     * 00035500
*                                                                     * 00035600
*            8    Name: IwmRetCodeInvocError                          * 00035700
*                                                                     * 00035800
*                 Meaning: Invalid invocation environment or          * 00035900
*                 parameters.                                         * 00036000
*                                                                     * 00036100
*                                                                     * 00036200
*                                                                     * 00036300
*                 HEX REASON  MEANING/ACTION                          * 00036400
*                 CODE                                                * 00036500
*                                                                     * 00036600
*                 xxxx0801    Name: IwmRsnCodeSrbMode                 * 00036700
*                                                                     * 00036800
*                             Meaning: Caller is in SRB mode.         * 00036900
*                                                                     * 00037000
*                             Action: Avoid requesting this function  * 00037100
*                             while in SRB mode.                      * 00037200
*                                                                     * 00037300
*                 xxxx0803    Name: IwmRsnCodeDisabled                * 00037400
*                                                                     * 00037500
*                             Meaning: Caller is disabled.            * 00037600
*                                                                     * 00037700
*                             Action: Avoid requesting this function  * 00037800
*                             while disabled.                         * 00037900
*                                                                     * 00038000
*                 xxxx0804    Name: IwmRsnCodeLocked                  * 00038100
*                                                                     * 00038200
*                             Meaning: Caller is locked.              * 00038300
*                                                                     * 00038400
*                             Action: Avoid requesting this function  * 00038500
*                             while locked.                           * 00038600
*                                                                     * 00038700
*                 xxxx080B    Name: IwmRsnCodeBadPl                   * 00038800
*                                                                     * 00038900
*                             Meaning: Error accessing parameter      * 00039000
*                             list.                                   * 00039100
*                                                                     * 00039200
*                             Action: Check for possible storage      * 00039300
*                             overlay.                                * 00039400
*                                                                     * 00039500
*                 xxxx0824    Name: IwmRsnCodeAmode24                 * 00039600
*                                                                     * 00039700
*                             Meaning: Caller invoked service but was * 00039800
*                             in 24 bit addressing mode.              * 00039900
*                                                                     * 00040000
*                             Action: Request this function only when * 00040100
*                             you are in 31 bit addressing mode.      * 00040200
*                                                                     * 00040300
*                 xxxx0825    Name: IwmRsnCodeAscModeNotPrimary       * 00040400
*                                                                     * 00040500
*                             Meaning: Caller invoked service but was * 00040600
*                             not in primary ASC mode.                * 00040700
*                                                                     * 00040800
*                             Action: Avoid requesting this function  * 00040900
*                             in this environment.                    * 00041000
*                                                                     * 00041100
*                 xxxx0828    Name: IwmRsnCodeBadVersion              * 00041200
*                                                                     * 00041300
*                             Meaning: Version number in parameter    * 00041400
*                             list is not valid.                      * 00041500
*                                                                     * 00041600
*                             Action: Check for possible storage      * 00041700
*                             overlay of the parameter list.          * 00041800
*                                                                     * 00041900
*                 xxxx0840    Name: IwmRsnCodeServiceNotEnabled       * 00042000
*                                                                     * 00042100
*                             Meaning: Caller's space connection is   * 00042200
*                             not enabled for this service.           * 00042300
*                                                                     * 00042400
*                             Action: Make sure that                  * 00042500
*                             SERVER_MANAGER=YES and                  * 00042600
*                             SERVER_TYPE=QUEUE is specified on the   * 00042700
*                             IWMCONN request to enable this service. * 00042800
*                                                                     * 00042900
*                 xxxx0841    Name: IwmRsnCodeXmemMode                * 00043000
*                                                                     * 00043100
*                             Meaning: Caller is in cross-memory      * 00043200
*                             mode.                                   * 00043300
*                                                                     * 00043400
*                             Action: Request this function only when * 00043500
*                             you are not in cross-memory mode.       * 00043600
*                                                                     * 00043700
*                 xxxx0842    Name: IwmRsnCodeNoWLMConnect            * 00043800
*                                                                     * 00043900
*                             Meaning: Caller's space is not          * 00044000
*                             connected to WLM.                       * 00044100
*                                                                     * 00044200
*                             Action:  Invoke the IWMCONN macro       * 00044300
*                             before invoking this macro.             * 00044400
*                                                                     * 00044500
*                 xxxx084D    Name: IwmRsnCodeNotAuthConnect          * 00044600
*                                                                     * 00044700
*                             Meaning:  The caller must be supervisor * 00044800
*                             state or have PSW key mask 0-7          * 00044900
*                             authority to use the requested WLM      * 00045000
*                             service. This applies only if the       * 00045100
*                             caller provides a region token for a    * 00045200
*                             server address space for which it wants * 00045300
*                             to set the affinity.                    * 00045400
*                                                                     * 00045500
*                             Action: Avoid requesting this function  * 00045600
*                             in this environment.                    * 00045700
*                                                                     * 00045800
*                                                                     * 00045900
*                                                                     * 00046000
*                                                                     * 00046100
*                                                                     * 00046200
*            10   Name: IwmRetCodeCompError                           * 00046300
*                                                                     * 00046400
*                 Meaning: Component error.                           * 00046500
*                                                                     * 00046600
*                 Action: Contact your system programmer.             * 00046700
*                                                                     * 00046800
*                                                                     * 00046900
*                                                                     * 00047000
*                                                                     * 00047100
*01* REASON CODES:                                                    * 00047200
*                                                                     * 00047300
*       A unique reason code will be returned whenever the return     * 00047400
*       code is non-zero.  Reason codes, as appropriate, are defined  * 00047500
*       under their corresponding return code.  Reason code and       * 00047600
*       return code constants are defined within IWMYCON.  Note that  * 00047700
*       the high order halfword of register 0, and the reason code    * 00047800
*       variable when specified, may be non-zero and represents       * 00047900
*       diagnostic data which is NOT part of the external interface.  * 00048000
*       The high order halfword should thus be excluded from          * 00048100
*       comparison with the reason code values described above.  The  * 00048200
*       constant, IWMRSNCODE_MASK_CONST defined in IWMYCON, may be    * 00048300
*       used for this purpose.                                        * 00048400
*                                                                     * 00048500
*01* MODULE TYPE:  ASSEM MACRO                                        * 00048600
*                                                                     * 00048700
*02*   PROCESSOR:  ASSEM                                              * 00048800
*                                                                     * 00048900
*01* COMPONENT:  SCWLM                                                * 00049000
*                                                                     * 00049100
*01* DISTRIBUTION LIBRARY: AMACLIB                                    * 00049200
*                                                                     * 00049300
*01* EXAMPLES:                                                        * 00049400
*                                                                     * 00049500
*    To start a temporal affinity from the server region              * 00049600
*                                                                     * 00049700
*        IWMTAFF AFFINITY=YES                                         * 00049800
*                RETCODE=RC,                                          * 00049900
*                RSNCODE=RSN                                          * 00050000
*      *                                                              * 00050100
*      * Storage areas                                                * 00050200
*      *                                                              * 00050300
*      RC       DS    F               Return code                     * 00050400
*      RSN      DS    F               Reason code                     * 00050500
*                                                                     * 00050600
*                                                                     * 00050700
*01* MACRO USAGE NOTES:                                               * 00050800
*                                                                     * 00050900
*                                                                     * 00051000
*    1.  Printing of the macro expansion is controlled by the ZPRINT  * 00051100
*        global macro variable.  Any value other than 'NO' will       * 00051200
*        result in the macro expansion being printed.  The default is * 00051300
*        'YES'.  The following examples illustrate how the ZPRINT     * 00051400
*        variable should be set.                                      * 00051500
*                                                                     * 00051600
*                    GBLC &ZPRINT                                     * 00051700
*            &ZPRINT SETC 'YES'          &ZPRINT SETC 'NO'            * 00051800
*                                                                     * 00051900
*                                                                     * 00052000
*    2.  All keys currently contained in the IWMTAFF macro correspond * 00052100
*        to  version 0.  If you specify PLISTVER, use a value of 0 or * 00052200
*        MAX.                                                         * 00052300
*                                                                     * 00052400
*                                                                     * 00052500
*                                                                     * 00052600
*                                                                     * 00052700
*01* CHANGE ACTIVITY:                                                 * 00052800
*                                                                     * 00052900
*   Flag LineItem  FMID    Date   ID    Comment                       * 00053000
*                                                                     * 00053100
*    $L0=OW45238  HBB6608 000615 B9HARV:  Temporal Affinity Support   * 00053200
****** END OF SPECIFICATIONS *****************************************/ 00053300
*/* TLINE 1 *********************************************************** 00053400
         MACRO                                                          00053500
&XLABEL  IWMTAFF &AFFINITY=,&REGION_TOKEN=,&RETCODE=,&RSNCODE=,        *00053600
               &PLISTVER=,&MF=                                          00053700
.*                                                                      00053800
*                  MACDATE -00/06/15-<0>                                00053900
.*                                                                      00054000
.*******************************************************************    00054100
.***AB.02  GLOBAL VARIABLES TO CONTROL PRINT AND CODE GENERATION        00054200
.*******************************************************************    00054300
                  GBLC  &ZPRINT     YES=PRINT NO=NO PRINT               00054400
                  GBLC  &ZTEST      YES=TEST NO=NO TEST                 00054500
                  GBLC  &ZSYSTEM    PCCODE10, MVS, SAK, VM, XAX         00054600
.*                                                                      00054700
                  GBLC  &ZIWMTAFF   YES=MACRO USED AT LEAST ONCE        00054800
.*******************************************************************    00054900
.***AB.03  COMMONLY USED LOCAL MACRO VARIABLES                          00055000
.*******************************************************************    00055100
                  LCLC  &ZMS        ERROR MESSAGE WORK AREA             00055200
                  LCLC  &ZCNDX      LAST THREE SYSNDX CHARACTERS        00055300
                  LCLC  &ZCLNG      USED WHEN LENGTH IS NEEDED          00055400
                  LCLC  &ZCGPR      USED WHEN VALUE IS IN A GPR         00055500
                  LCLC  &ZCVAL      USED TO CONTAIN FIXED VALUE         00055600
                  LCLA  &ZAWRK      USED AS A WORK AREA                 00055700
                  LCLA  &ZASIZ      USED FOR SIZE OF VALUE              00055800
                  LCLA  &ZN         NUMERIC WORK VARIABLE               00055900
                  LCLC  &ZC         CHARACTER WORK VARIABLE             00056000
                  LCLC  &ZTLC       CHARACTER TOO LONG VARIABLE         00056100
                  LCLA  &ZTLA       VALUE TOO LONG VARIABLE             00056200
                  LCLA  &ZMACRET    MACRO RETURN CODE                   00056300
&ZMACRET          SETA  0           ASSUME NO ERRORS                    00056400
.*                                                                      00056500
                  LCLC  &ZCSYSLIST(255)         NONXKEY, POS ARRAY      00056600
                  LCLA  &ZASYSLNDX  WORK INDEX FOR ZCSYSLIST()          00056700
                  LCLA  &ZPLLEN     PARAMETER LIST LENGTH               00056800
                  LCLC  &ZENDBASEPL             End of base PL          00056900
                  LCLA  &ZPLWORKA   PARAMETER LIST LENGTH               00057000
.*******************************************************************    00057100
.***AB.04  MACRO VARIABLES FOR RANGES AND SETS OF ARGUMENTS             00057200
.*******************************************************************    00057300
                  LCLA  &ZI         INDEX FOR ARRAY                     00057400
                  LCLA  &ZJ         INDEX FOR PARMS                     00057500
                  LCLA  &ZK         INDEX FOR PARSE                     00057600
                  LCLA  &ZLO        LOW RANGE VALUE                     00057700
                  LCLA  &ZHI        HIGH RANGE VALUE                    00057800
                  LCLC  &ZW         WORK AREA FOR PARM                  00057900
.********************************************************************   00058000
.***AB.05  INVOKE MVS MACROS TO CONTROL CODE GENERATION                 00058100
.********************************************************************   00058200
                  GBLC  &SYSSPLV    SP LEVEL 1,2,3 -SPLEVEL             00058300
                  GBLC  &SYSASCE    SYSTEM STATE P ANY AR-SYSSTATE      00058400
                  GBLA  &SYSALVL    SYSSTATE ARCHLVL                    00058500
.*                                                                      00058600
                  AIF   (K'&SYSASCE GT 0).ZSYS4  SYS STATE DEFINED      00058700
                  AIF   (K'&SYSSPLV GT 0).ZSYS2  SP LEVEL DEFINED       00058800
                  SPLEVEL  TEST                                         00058900
.ZSYS2            ANOP  ,                                               00059000
                  AIF   ('&SYSSPLV' EQ '1').ZSYS3  PRE SP 3.1           00059100
                  AIF   ('&SYSSPLV' EQ '2').ZSYS3  PRE SP 3.1           00059200
                  SYSSTATE TEST                                         00059300
                  AGO   .ZSYS4                                          00059400
.ZSYS3            ANOP  ,                                               00059500
&SYSASCE          SETC  'P'         ASSUME SYSSTATE PRIMARY             00059600
.ZSYS4            ANOP  ,                                               00059700
.*******************************************************************    00059800
.***AB.07  DEFINE ALL MACRO VARIABLES                                   00059900
.*******************************************************************    00060000
                  LCLC  &XAFFINITY  ++ VALUE                            00060100
                  LCLC  &XREGION_TOKEN          ++ NAME                 00060200
                  LCLC  &XRETCODE   ++ NAME                             00060300
                  LCLC  &XRSNCODE   ++ NAME                             00060400
                  LCLA  &XPLISTVER  ++ VALUE                            00060500
                  LCLC  &XMF        ++ VALUE                            00060600
                  LCLC  &XMFCTRL    ++ NAME                             00060700
                  LCLC  &XMFATTR    ++ VALUE                            00060800
                  LCLC  &XMFSCK     ++ VALUE                            00060900
.*******************************************************************    00061000
.***AB.13  DEFINE MACRO VARIABLES FOR INPUT/OUTPUT PROCESSING           00061100
.*******************************************************************    00061200
                  LCLC  &ZXAFFINITY             ++ INPUT VALUE          00061300
                  LCLC  &ZXREGION_TOKEN         ++ INPUT NAME           00061400
                  LCLC  &ZXRETCODE  ++ OUTPUT NAME                      00061500
                  LCLC  &ZXRSNCODE  ++ OUTPUT NAME                      00061600
                  LCLC  &ZXPLISTVER             ++ INPUT VALUE          00061700
                  LCLC  &ZXMF       ++ INPUT VALUE                      00061800
                  LCLC  &ZXMFCTRL   ++ INPUT NAME                       00061900
                  LCLC  &ZXMFATTR   ++ INPUT VALUE                      00062000
                  LCLC  &ZXMFSCK    ++ INPUT VALUE                      00062100
.********************************************************************   00062200
.***AC.PLV01  PROCESS PLISTVER                                      *   00062300
.********************************************************************   00062400
&XPLISTVER      SETA  0                                                 00062500
                AIF   (K'&PLISTVER(1) LE 0).ZPLV0                       00062600
                AIF   ('&PLISTVER(1)' NE 'MAX').ZPLV0                   00062700
&XPLISTVER      SETA  0                                                 00062800
.ZPLV0          ANOP  ,                                                 00062900
.*                                                                      00063000
                AIF   (K'&PLISTVER(1) LE 0).ZPVCKE                      00063100
                AIF   ('&PLISTVER(1)' EQ 'IMPLIED_VERSION').ZPVCKE      00063200
                AIF   ('&PLISTVER(1)' EQ 'MAX').ZPVCKE                  00063300
.*-------------------------------------------------------------------   00063400
                AIF   (N'&PLISTVER LE 1).ZPVCK3  CK NUM                 00063500
&ZMS            SETC  '"PLISTVER='         *KPOSA* MNOTE                00063600
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00063700
&ZMS            SETC  '&ZMS "PLISTVER"'                                 00063800
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00063900
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00064000
                AGO   .ZPVCK2                                           00064100
.ZPVCK3         ANOP  ,                                                 00064200
.*-------------------------------------------------------------------   00064300
                AIF   ('&PLISTVER'(1,1) NE '(').ZPVCK2                  00064400
&ZMS            SETC  '"PLISTVER='         *KGPRA* MNOTE                00064500
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00064600
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         00064700
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'                 00064800
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00064900
                AGO   .ZPVCKE                                           00065000
.ZPVCK2         ANOP  ,                                                 00065100
.*-------------------------------------------------------------------   00065200
&ZCVAL          SETC  '&PLISTVER(1)'                                    00065300
                AIF   ('&ZCVAL'(1,1) EQ '(').ZPVCKE  IN GPR             00065400
                AIF   (T'&ZCVAL NE 'N').ZPVCK6  NUMERIC ERR             00065500
&ZN             SETA   &PLISTVER(1)        CONVERT TO ARITHMETIC        00065600
                AIF   (&ZN LT 0).ZPVCK6    TOO LOW                      00065700
                AIF   (&ZN LE 0).ZPVCK4A   NOT HIGH                     00065800
.ZPVCK6         ANOP  ,                                                 00065900
&ZMS            SETC  '"PLISTVER='         *KRNGA* MNOTE                00066000
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00066100
&ZMS            SETC  '&ZMS THE RANGE IS "0-0"'                         00066200
                MNOTE 8,' &ZMS FOR ARGUMENT 1.'                         00066300
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00066400
&XPLISTVER      SETA  0                                                 00066500
                AGO   .ZPVCKE                                           00066600
.*-------------------------------------------------------------------   00066700
.ZPVCK4A        ANOP  ,                                                 00066800
                AIF   (&ZN GE &XPLISTVER).ZPVCK4                        00066900
&ZMS            SETC  'PLISTVER='          *KVALA* MNOTE                00067000
&ZMS            SETC  '&ZMS.&PLISTVER(1)'                               00067100
&ZMS            SETC  '&ZMS., BUT PLISTVER OF'                          00067200
&ZMS            SETC  '&ZMS &XPLISTVER'                                 00067300
                MNOTE 8,' &ZMS IS REQUIRED.'                            00067400
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00067500
                AGO   .ZPVCK5                                           00067600
.ZPVCK4         ANOP  ,                                                 00067700
&XPLISTVER      SETA  &PLISTVER(1)                                      00067800
.ZPVCK5         ANOP  ,                                                 00067900
.ZPVCKE         ANOP  ,                                                 00068000
.********************************************************************   00068100
.***AG.MF01 PROCESS MF MACRO FORMS                                      00068200
.********************************************************************   00068300
                  ACTR  10000                                           00068400
.*------------------------------------------------------------------    00068500
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00068600
&XMF              SETC  ''          INITIALIZE XVARIABLE                00068700
.*-------------------------------------------------------------------   00068800
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00068900
.ZG20             ANOP  ,                                               00069000
&ZTLC             SETC 'S'                                              00069100
                  AIF   ('&MF(1)' NE '&ZTLC').ZG21                      00069200
&XMF              SETC  'S'         SET KEYWORD                         00069300
                  AIF   (N'&MF LE 1).ZG20A      CK NUM                  00069400
&ZMS              SETC  '"MF='      *KPOSA* MNOTE                       00069500
&ZMS              SETC  '&ZMS.&MF"'                                     00069600
&ZMS              SETC  '&ZMS "MF"'                                     00069700
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00069800
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00069900
.ZG20A            ANOP  ,                                               00070000
.*-------------------------------------------------------------------   00070100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00070200
.ZG21             ANOP  ,                                               00070300
&ZTLC             SETC 'L'                                              00070400
                  AIF   ('&MF(1)' NE '&ZTLC').ZG28                      00070500
&XMF              SETC  'L'         SET KEYWORD                         00070600
                  AIF   (N'&MF LE 3).ZG21A      CK NUM                  00070700
&ZMS              SETC  '"MF='      *KPOSA* MNOTE                       00070800
&ZMS              SETC  '&ZMS.&MF"'                                     00070900
&ZMS              SETC  '&ZMS "MF"'                                     00071000
                  MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'            00071100
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00071200
.ZG21A            ANOP  ,                                               00071300
.*-------------------------------------------------------------------   00071400
.***AG.KKCTL08 -MF(L) SPECIAL CHECK                                     00071500
                  AIF   (N'&SYSLIST NE 0).ZG21B  POSITIONALS?           00071600
                  AIF   ('&AFFINITY' NE '').ZG21B  KEYS?                00071700
                  AIF   ('&REGION_TOKEN' NE '').ZG21B  KEYS?            00071800
                  AIF   ('&RETCODE' NE '').ZG21B  KEYS?                 00071900
                  AIF   ('&RSNCODE' NE '').ZG21B  KEYS?                 00072000
                  AGO    .ZG21C     INVOCATION OKAY                     00072100
.ZG21B            ANOP  ,                                               00072200
&ZMS              SETC  'THE "L" FORM OF "MF"'  *MFLA* MNOTE            00072300
&ZMS              SETC  '&ZMS CAN ONLY HAVE'                            00072400
&ZMS              SETC  '&ZMS THE "PLISTVER" KEY'                       00072500
                  MNOTE 8,' &ZMS SPECIFIED ON THE INVOCATION.'          00072600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00072700
.ZG21C            ANOP  ,                                               00072800
.*-------------------------------------------------------------------   00072900
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00073000
&ZXMFCTRL         SETC  'INPUT'     SET IN/OUTPUT                       00073100
&XMFCTRL          SETC  '&MF(2,1)'  SET XVARIABLE                       00073200
                  AIF   (N'&MF(2) GT 1).ZG23B   MULTI PARMS             00073300
&XMFCTRL          SETC  '&MF(2)'    SET XVARIABLE                       00073400
.ZG23B            AIF   (K'&MF(2) GT 0).ZG23C                           00073500
&ZXMFCTRL         SETC  ''          RESET IN/OUTPUT                     00073600
&ZMS              SETC  'WHEN "L" IS SPECIFIED'  *KRQDA*                00073700
&ZMS              SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'             00073800
                  MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                    00073900
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00074000
.ZG23C            ANOP  ,                                               00074100
.*-------------------------------------------------------------------   00074200
.***AG.KCK01 NAME, OPT RQD INPUT, POS(2) -GPR NOT ALLOWED               00074300
                  AIF   (K'&ZXMFCTRL LE 0).ZG23P  NOT I/O               00074400
                  AIF   ('&XMFCTRL'(1,1) NE '(').ZG23P                  00074500
&ZXMFCTRL         SETC  ''          RESET IN/OUTPUT                     00074600
&ZMS              SETC  '"MF='      *KGPRA* MNOTE                       00074700
&ZMS              SETC  '&ZMS.&MF"'                                     00074800
&ZMS              SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'       00074900
                  MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 2.'               00075000
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00075100
.ZG23P            ANOP  ,                                               00075200
.*-------------------------------------------------------------------   00075300
.***AG.KXVAR13 VALUE, OPT INPUT, POS(3) -XVARIABLE                      00075400
&ZXMFATTR         SETC  'INPUT'     SET IN/OUTPUT                       00075500
&XMFATTR          SETC  '0D'                                            00075600
                  AIF   (K'&MF(3) LE 0).ZG26B   PARM                    00075700
&XMFATTR          SETC  '&MF(3,1)'  SET XVARIABLE                       00075800
                  AIF   (N'&MF(3) GT 1).ZG26B   MULTI PARMS             00075900
&XMFATTR          SETC  '&MF(3)'    SET XVARIABLE                       00076000
.ZG26B            ANOP  ,                                               00076100
.*-------------------------------------------------------------------   00076200
.***AG.KCK01 VALUE, OPT INPUT, POS(3) -GPR NOT ALLOWED                  00076300
                  AIF   (K'&ZXMFATTR LE 0).ZG26P  NOT I/O               00076400
                  AIF   ('&XMFATTR'(1,1) NE '(').ZG26P                  00076500
&ZXMFATTR         SETC  ''          RESET IN/OUTPUT                     00076600
&ZMS              SETC  '"MF='      *KGPRA* MNOTE                       00076700
&ZMS              SETC  '&ZMS.&MF"'                                     00076800
&ZMS              SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'       00076900
                  MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 3.'               00077000
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00077100
.ZG26P            ANOP  ,                                               00077200
.*-------------------------------------------------------------------   00077300
.***AG.KCK03 VALUE, OPT INPUT, POS(3) -CHARACTER LENGTH                 00077400
                  AIF   (K'&ZXMFATTR LE 0).ZG26S  NOT I/O               00077500
                  AIF   (K'&XMFATTR LE 60).ZG26S  LNG OK                00077600
&ZXMFATTR         SETC  ''          RESET IN/OUTPUT                     00077700
&ZMS              SETC  '"MF='      *KLNGA* MNOTE                       00077800
&ZMS              SETC  '&ZMS.&MF"'                                     00077900
&ZMS              SETC  '&ZMS ARGUMENT 3 EXCEEDS THE MAXIMUM'           00078000
                  MNOTE 8,' &ZMS LENGTH OF 60 CHARACTERS.'              00078100
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00078200
.ZG26S            ANOP  ,                                               00078300
.*-------------------------------------------------------------------   00078400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00078500
.ZG28             ANOP  ,                                               00078600
&ZTLC             SETC 'E'                                              00078700
                  AIF   ('&MF(1)' NE '&ZTLC').ZG36                      00078800
&XMF              SETC  'E'         SET KEYWORD                         00078900
                  AIF   (N'&MF LE 3).ZG28A      CK NUM                  00079000
&ZMS              SETC  '"MF='      *KPOSA* MNOTE                       00079100
&ZMS              SETC  '&ZMS.&MF"'                                     00079200
&ZMS              SETC  '&ZMS "MF"'                                     00079300
                  MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'            00079400
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00079500
.ZG28A            ANOP  ,                                               00079600
.*-------------------------------------------------------------------   00079700
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00079800
&ZXMFCTRL         SETC  'INPUT'     SET IN/OUTPUT                       00079900
&XMFCTRL          SETC  '&MF(2,1)'  SET XVARIABLE                       00080000
                  AIF   (N'&MF(2) GT 1).ZG30B   MULTI PARMS             00080100
&XMFCTRL          SETC  '&MF(2)'    SET XVARIABLE                       00080200
.ZG30B            AIF   (K'&MF(2) GT 0).ZG30C                           00080300
&ZXMFCTRL         SETC  ''          RESET IN/OUTPUT                     00080400
&ZMS              SETC  'WHEN "E" IS SPECIFIED'  *KRQDA*                00080500
&ZMS              SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'             00080600
                  MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                    00080700
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00080800
.ZG30C            ANOP  ,                                               00080900
.*-------------------------------------------------------------------   00081000
.***AG.KCK02 NAME, OPT RQD INPUT, POS(2) -GPR OUT OF RANGE              00081100
                  AIF   (K'&ZXMFCTRL LE 0).ZG30R  NOT I/O               00081200
                  AIF   ('&XMFCTRL'(1,1) NE '(').ZG30R                  00081300
&ZCGPR            SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)                      00081400
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG30P                    00081500
                  AIF   (K'&ZCGPR GT 2).ZG30Q                           00081600
                  AIF   ('&ZCGPR' EQ '0').ZG30Q                         00081700
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00081800
                  AIF   (T'&ZCGPR NE 'N').ZG30Q  INVALID REG NAME       00081900
.ZG30P            ANOP  ,                                               00082000
                  AIF   (T'&ZCGPR NE 'N').ZG30R  NON NUMERIC            00082100
                  AIF   ('&ZCGPR' LT '1').ZG30Q                         00082200
                  AIF   ('&ZCGPR' LE '12').ZG30R                        00082300
.ZG30Q            ANOP  ,                                               00082400
&ZMS              SETC  '"MF='      *KGPRA* MNOTE                       00082500
&ZMS              SETC  '&ZMS.&MF"'                                     00082600
&ZMS              SETC  '&ZMS ARGUMENT 2 MUST SPECIFY A REGISTER'       00082700
                  MNOTE 8,' &ZMS IN THE RANGE (1)-(12).'                00082800
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00082900
.ZG30R            ANOP  ,                                               00083000
.*-------------------------------------------------------------------   00083100
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00083200
&XMFSCK           SETC  ''          INITIALIZE XVARIABLE                00083300
.ZG34A   AIF   ('&MF(3)' NE 'COMPLETE').ZG35A                           00083400
&XMFSCK           SETC  'COMPLETE'  SET KEYWORD                         00083500
.*-------------------------------------------------------------------   00083600
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00083700
.ZG35A            AIF   (K'&XMFSCK GT 0).ZG35C  KEYWORD                 00083800
                  AIF   (K'&MF(3) LE 0).ZG35B                           00083900
&ZMS              SETC  '"MF='      *KUKWA* MNOTE                       00084000
&ZMS              SETC  '&ZMS.&MF"'                                     00084100
&ZMS              SETC  '&ZMS ARGUMENT 3 IS AN UNKNOWN KEYWORD. '       00084200
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00084300
&ZMS              SETC  '&ZMS "COMPLETE".'                              00084400
                  MNOTE 8,' &ZMS '                                      00084500
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00084600
.ZG35B            ANOP  ,                                               00084700
&XMFSCK           SETC  'COMPLETE'  SET DEFAULT KEYWORD                 00084800
.ZG35C            ANOP  ,                                               00084900
&ZXMFSCK          SETC  'INPUT'     SET IN/OUTPUT                       00085000
.*------------------------------------------------------------------    00085100
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00085200
.ZG36             ANOP  ,                                               00085300
&ZXMF             SETC  'INPUT'     SET IN/OUTPUT                       00085400
                  AIF   (K'&XMF GT 0).ZG36E     VALID ARG               00085500
                  AIF   (T'&MF EQ 'O').ZG36D    OMITTED                 00085600
&ZASYSLNDX        SETA  0                                               00085700
.ZG36A            ANOP  ,           POSITIONAL MACRO KEY                00085800
&ZASYSLNDX        SETA  &ZASYSLNDX+1                                    00085900
                  AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG36C                00086000
&ZTLC             SETC 'MF'                                             00086100
                  AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG36A       00086200
.ZG36B            ANOP  ,                                               00086300
&ZXMF             SETC  ''          RESET IN/OUTPUT                     00086400
&ZMS              SETC  'THE "MF" KEY'          *KOPTA* MNOTE           00086500
&ZMS              SETC  '&ZMS MUST CONTAIN ONE'                         00086600
                  MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                00086700
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00086800
                  AGO   .ZG36E                                          00086900
.ZG36C            ANOP  ,                                               00087000
&ZXMF             SETC  ''          RESET IN/OUTPUT                     00087100
&ZMS              SETC  '"MF='      *KUKWA* MNOTE                       00087200
&ZMS              SETC  '&ZMS.&MF"'                                     00087300
&ZMS              SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '       00087400
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00087500
&ZMS              SETC  '&ZMS "S",'                                     00087600
&ZMS              SETC  '&ZMS "L",'                                     00087700
&ZMS              SETC  '&ZMS OR "E".'                                  00087800
                  MNOTE 8,' &ZMS '                                      00087900
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00088000
                  AGO   .ZG36E                                          00088100
.ZG36D            ANOP  ,                                               00088200
&XMF              SETC  'S'         SET DEFAULT KEYWORD                 00088300
&XMFSCK           SETC  'COMPLETE'  COMPLETE CHECKING                   00088400
.ZG36E            ANOP  ,                                               00088500
.********************************************************************   00088600
.***AG.MF02  FULL MACRO SYNTAX CHECKING                                 00088700
.********************************************************************   00088800
                  ACTR  10000                                           00088900
.*-------------------------------------------------------------------   00089000
.***AG.MF03 MF=(SLE)                                                    00089100
                  AIF   ('&XMF' EQ 'L').ZGMFX                           00089200
.*------------------------------------------------------------------    00089300
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00089400
&XAFFINITY        SETC  ''          INITIALIZE XVARIABLE                00089500
.*-------------------------------------------------------------------   00089600
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00089700
.ZG3              ANOP  ,                                               00089800
                  AIF   (K'&AFFINITY(1) LE 0).ZG3A                      00089900
&ZTLC             SETC 'YES'                                            00090000
                  AIF   ('&AFFINITY(1)' NE '&ZTLC').ZG4                 00090100
&XAFFINITY        SETC  'YES'       SET KEYWORD                         00090200
                  AIF   (N'&AFFINITY LE 1).ZG3A  CK NUM                 00090300
&ZMS              SETC  '"AFFINITY='            *KPOSA* MNOTE           00090400
&ZMS              SETC  '&ZMS.&AFFINITY"'                               00090500
&ZMS              SETC  '&ZMS "AFFINITY"'                               00090600
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00090700
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00090800
.ZG3A             ANOP  ,                                               00090900
.*-------------------------------------------------------------------   00091000
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00091100
.ZG4              ANOP  ,                                               00091200
&ZTLC             SETC 'NO'                                             00091300
                  AIF   ('&AFFINITY(1)' NE '&ZTLC').ZG5                 00091400
&XAFFINITY        SETC  'NO'        SET KEYWORD                         00091500
                  AIF   (N'&AFFINITY LE 1).ZG4A  CK NUM                 00091600
&ZMS              SETC  '"AFFINITY='            *KPOSA* MNOTE           00091700
&ZMS              SETC  '&ZMS.&AFFINITY"'                               00091800
&ZMS              SETC  '&ZMS "AFFINITY"'                               00091900
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00092000
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00092100
.ZG4A             ANOP  ,                                               00092200
.*------------------------------------------------------------------    00092300
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00092400
.ZG5              ANOP  ,                                               00092500
&ZXAFFINITY       SETC  'INPUT'     SET IN/OUTPUT                       00092600
                  AIF   (K'&XAFFINITY GT 0).ZG5E  VALID ARG             00092700
                  AIF   (T'&AFFINITY EQ 'O').ZG5D  OMITTED              00092800
&ZASYSLNDX        SETA  0                                               00092900
.ZG5A             ANOP  ,           POSITIONAL MACRO KEY                00093000
&ZASYSLNDX        SETA  &ZASYSLNDX+1                                    00093100
                  AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG5C                 00093200
&ZTLC             SETC 'AFFINITY'                                       00093300
                  AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG5A        00093400
.ZG5B             ANOP  ,                                               00093500
&ZXAFFINITY       SETC  ''          RESET IN/OUTPUT                     00093600
&ZMS              SETC  'THE "AFFINITY" KEY'    *KOPTA* MNOTE           00093700
&ZMS              SETC  '&ZMS MUST CONTAIN ONE'                         00093800
                  MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                00093900
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00094000
                  AGO   .ZG5E                                           00094100
.ZG5C             ANOP  ,                                               00094200
&ZXAFFINITY       SETC  ''          RESET IN/OUTPUT                     00094300
&ZMS              SETC  '"AFFINITY='            *KUKWA* MNOTE           00094400
&ZMS              SETC  '&ZMS.&AFFINITY"'                               00094500
&ZMS              SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '       00094600
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00094700
&ZMS              SETC  '&ZMS "YES"'                                    00094800
&ZMS              SETC  '&ZMS OR "NO".'                                 00094900
                  MNOTE 8,' &ZMS '                                      00095000
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00095100
                  AGO   .ZG5E                                           00095200
.ZG5D             ANOP  ,                                               00095300
&XAFFINITY        SETC  'YES'       SET DEFAULT KEYWORD                 00095400
.ZG5E             ANOP  ,                                               00095500
.*------------------------------------------------------------------    00095600
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00095700
                  AIF   (K'&AFFINITY(1) GT 0).ZG5F  PARM                00095800
&XAFFINITY        SETC  ''          ENSURE NULL KEYWORD                 00095900
&ZXAFFINITY       SETC  ''          RESET IN/OUTPUT                     00096000
&ZMS              SETC  'THE'                                           00096100
&ZMS              SETC  '&ZMS "AFFINITY" KEY AND ITS'                   00096200
&ZMS              SETC  '&ZMS ARGUMENT ARE REQUIRED.'                   00096300
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00096400
&ZMS              SETC  '&ZMS "YES"'                                    00096500
&ZMS              SETC  '&ZMS OR "NO".'                                 00096600
                  MNOTE 8,' &ZMS '                                      00096700
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00096800
.ZG5F             ANOP  ,                                               00096900
.*----------------------------------------------------------------***   00097000
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00097100
                  AIF   (N'&REGION_TOKEN LE 1).ZG7A  CK NUM             00097200
&ZMS              SETC  '"REGION_TOKEN='        *KPOSA* MNOTE           00097300
&ZMS              SETC  '&ZMS.&REGION_TOKEN"'                           00097400
&ZMS              SETC  '&ZMS "REGION_TOKEN"'                           00097500
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00097600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00097700
.ZG7A             ANOP  ,                                               00097800
.*-------------------------------------------------------------------   00097900
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00098000
&ZXREGION_TOKEN   SETC  'INPUT'     SET IN/OUTPUT                       00098100
&XREGION_TOKEN    SETC  '0'                                             00098200
                  AIF   (K'&REGION_TOKEN(1) LE 0).ZG7B  PARM            00098300
&XREGION_TOKEN    SETC  '&REGION_TOKEN(1)'      SET XVARIABLE           00098400
                  AIF   (N'&REGION_TOKEN GT 1).ZG7B  MULTI PARMS        00098500
&XREGION_TOKEN    SETC  '&REGION_TOKEN'         SET XVARIABLE           00098600
.ZG7B             ANOP  ,                                               00098700
.*-------------------------------------------------------------------   00098800
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00098900
                  AIF   (K'&ZXREGION_TOKEN LE 0).ZG7R  NOT I/O          00099000
                  AIF   ('&XREGION_TOKEN'(1,1) NE '(').ZG7R             00099100
&ZCGPR            SETC  '&XREGION_TOKEN'(2,K'&XREGION_TOKEN-2)          00099200
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG7P                     00099300
                  AIF   (K'&ZCGPR GT 2).ZG7Q                            00099400
                  AIF   ('&ZCGPR' EQ '0').ZG7Q                          00099500
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00099600
                  AIF   (T'&ZCGPR NE 'N').ZG7Q  INVALID REG NAME        00099700
.ZG7P             ANOP  ,                                               00099800
                  AIF   (T'&ZCGPR NE 'N').ZG7R  NON NUMERIC             00099900
                  AIF   ('&ZCGPR' LT '2').ZG7Q                          00100000
                  AIF   ('&ZCGPR' LE '12').ZG7R                         00100100
.ZG7Q             ANOP  ,                                               00100200
&ZMS              SETC  '"REGION_TOKEN='        *KGPRA* MNOTE           00100300
&ZMS              SETC  '&ZMS.&REGION_TOKEN"'                           00100400
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00100500
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00100600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00100700
.ZG7R             ANOP  ,                                               00100800
.*----------------------------------------------------------------***   00100900
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00101000
                  AIF   (N'&RETCODE LE 1).ZG10A  CK NUM                 00101100
&ZMS              SETC  '"RETCODE='             *KPOSA* MNOTE           00101200
&ZMS              SETC  '&ZMS.&RETCODE"'                                00101300
&ZMS              SETC  '&ZMS "RETCODE"'                                00101400
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00101500
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00101600
.ZG10A            ANOP  ,                                               00101700
.*-------------------------------------------------------------------   00101800
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00101900
                  AIF   (K'&RETCODE(1) LE 0).ZG10C  NO PARM             00102000
&ZXRETCODE        SETC  'OUTPUT'    SET OUTPUT                          00102100
&XRETCODE         SETC  '&RETCODE(1)'           SET XVARIABLE           00102200
                  AIF   (N'&RETCODE GT 1).ZG10C                         00102300
&XRETCODE         SETC  '&RETCODE'  SET XVARIABLE                       00102400
.ZG10C            ANOP  ,                                               00102500
.*-------------------------------------------------------------------   00102600
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00102700
                  AIF   (K'&ZXRETCODE LE 0).ZG10R  NOT I/O              00102800
                  AIF   ('&XRETCODE'(1,1) NE '(').ZG10R                 00102900
&ZCGPR            SETC  '&XRETCODE'(2,K'&XRETCODE-2)                    00103000
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG10P                    00103100
                  AIF   (K'&ZCGPR GT 2).ZG10Q                           00103200
                  AIF   ('&ZCGPR' EQ '0').ZG10Q                         00103300
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00103400
                  AIF   (T'&ZCGPR NE 'N').ZG10Q  INVALID REG NAME       00103500
.ZG10P            ANOP  ,                                               00103600
                  AIF   (T'&ZCGPR NE 'N').ZG10R  NON NUMERIC            00103700
                  AIF   ('&ZCGPR' LT '2').ZG10Q                         00103800
                  AIF   ('&ZCGPR' LE '12').ZG10R                        00103900
.ZG10Q            ANOP  ,                                               00104000
&ZMS              SETC  '"RETCODE='             *KGPRA* MNOTE           00104100
&ZMS              SETC  '&ZMS.&RETCODE"'                                00104200
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00104300
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00104400
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00104500
.ZG10R            ANOP  ,                                               00104600
.*----------------------------------------------------------------***   00104700
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00104800
                  AIF   (N'&RSNCODE LE 1).ZG13A  CK NUM                 00104900
&ZMS              SETC  '"RSNCODE='             *KPOSA* MNOTE           00105000
&ZMS              SETC  '&ZMS.&RSNCODE"'                                00105100
&ZMS              SETC  '&ZMS "RSNCODE"'                                00105200
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00105300
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00105400
.ZG13A            ANOP  ,                                               00105500
.*-------------------------------------------------------------------   00105600
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00105700
                  AIF   (K'&RSNCODE(1) LE 0).ZG13C  NO PARM             00105800
&ZXRSNCODE        SETC  'OUTPUT'    SET OUTPUT                          00105900
&XRSNCODE         SETC  '&RSNCODE(1)'           SET XVARIABLE           00106000
                  AIF   (N'&RSNCODE GT 1).ZG13C                         00106100
&XRSNCODE         SETC  '&RSNCODE'  SET XVARIABLE                       00106200
.ZG13C            ANOP  ,                                               00106300
.*-------------------------------------------------------------------   00106400
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00106500
                  AIF   (K'&ZXRSNCODE LE 0).ZG13R  NOT I/O              00106600
                  AIF   ('&XRSNCODE'(1,1) NE '(').ZG13R                 00106700
&ZCGPR            SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                    00106800
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG13P                    00106900
                  AIF   (K'&ZCGPR GT 2).ZG13Q                           00107000
                  AIF   ('&ZCGPR' EQ '0').ZG13Q                         00107100
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00107200
                  AIF   (T'&ZCGPR NE 'N').ZG13Q  INVALID REG NAME       00107300
.ZG13P            ANOP  ,                                               00107400
                  AIF   (T'&ZCGPR NE 'N').ZG13R  NON NUMERIC            00107500
                  AIF   ('&ZCGPR' LT '2').ZG13Q                         00107600
                  AIF   ('&ZCGPR' LE '12').ZG13R                        00107700
.ZG13Q            ANOP  ,                                               00107800
&ZMS              SETC  '"RSNCODE='             *KGPRA* MNOTE           00107900
&ZMS              SETC  '&ZMS.&RSNCODE"'                                00108000
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00108100
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00108200
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00108300
.ZG13R            ANOP  ,                                               00108400
.******************************************************************     00108500
.***AH.P00 CHECK STANDALONE POSITIONAL VARIABLES                        00108600
.******************************************************************     00108700
                  ACTR  10000                                           00108800
.*----------------------------------------------------------------***   00108900
.***AH.P02 EXTRA POSITIONALS                                            00109000
                  AIF   (N'&SYSLIST LE 0).ZGLISTX  NO EXTRAS            00109100
                  AIF   (N'&SYSLIST NE 2).ZGLISTX1  NOT NULL            00109200
                  AIF   ('&SYSLIST(1)' NE '').ZGLISTX1  NOT NULL        00109300
                  AIF   ('&SYSLIST(2)' EQ '').ZGLISTX  NOT NULL         00109400
.ZGLISTX1         ANOP  ,                                               00109500
&ZCVAL            SETC  ''          ERROR FIELD                         00109600
&ZAWRK            SETA  0           POSITIONAL NUMBER                   00109700
.ZGLIST2          ANOP  ,                                               00109800
&ZAWRK            SETA  &ZAWRK+1    NEXT POSITIONAL                     00109900
                  AIF   (&ZAWRK GT N'&SYSLIST).ZGLIST3  DONE            00110000
&ZCVAL            SETC '&ZCVAL,&SYSLIST(&ZAWRK)'  EXTRA                 00110100
                  AGO   .ZGLIST2                                        00110200
.*                                                                      00110300
.ZGLIST3          ANOP  ,                                               00110400
&ZCVAL            SETC '&ZCVAL'(2,K'&ZCVAL-1)   STRIP COMMA             00110500
&ZMS              SETC  'POSITIONAL ARGUMENT(S),'  *PPOSA* MNOTE        00110600
&ZMS              SETC  '&ZMS "&ZCVAL"'                                 00110700
&ZMS              SETC  '&ZMS CANNOT BE USED.'                          00110800
&ZMS              SETC  '&ZMS NO POSITIONAL ARGUMENTS'                  00110900
                  MNOTE 8,' &ZMS ARE ALLOWED.'                          00111000
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00111100
.ZGLISTX          ANOP  ,                                               00111200
&ZASYSLNDX        SETA  0                                               00111300
.*-------------------------------------------------------------------   00111400
.***AG.MF04 MF=(SLE)                                                    00111500
.ZGMFX            ANOP  ,           END OF FULL SYNTAX CHECK            00111600
.*******************************************************************    00111700
.***AE.ZMR01 NO CODE GENERATED IF ERRORS DETECTED                       00111800
.*******************************************************************    00111900
                  AIF   (&ZMACRET NE 0).ZLX2    ERROR DETECTED          00112000
.*******************************************************************    00112100
.***AE.01  START OF IWMTAFF MACRO CODE                                  00112200
.*******************************************************************    00112300
                  LCLC  &M0M0001                 NAME                   00112400
&M0M0001          SETC  '&XLABEL'                SET NAME               00112500
                  AIF   (K'&XLABEL NE 0).XLAB2                          00112600
&M0M0001          SETC  'M00M&SYSNDX'            DEFAULT NAME           00112700
.*                                                                      00112800
.XLAB2            ANOP  ,                                               00112900
                  AIF   ('&XMF' EQ 'L').XLAB3                           00113000
&M0M0001 DS    0H                             IWMTAFF-0                 00113100
.XLAB3            ANOP  ,                                               00113200
.*******************************************************************    00113300
.***AE.PR01 PRINT CONTROLS, DEFAULT IS YES                              00113400
.*******************************************************************    00113500
              PUSH  PRINT                                               00113600
                  AIF   ('&ZPRINT' NE 'NO').ZPRINTX  TURN PRINT ON      00113700
                  PRINT OFF         ++ PR01                             00113800
                  AGO   .ZPRNTXX                                        00113900
.ZPRINTX          PRINT ON                                              00114000
.ZPRNTXX          ANOP  ,                                               00114100
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00114200
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00114300
.********************************************************************   00114400
.***AL.L01 INTERNAL ARRAY TO PRODUCE FORMATTED CODE                     00114500
.********************************************************************   00114600
                      LCLA  &ZOPN          LIST INSTRUCTION INDEX       00114700
                      LCLA  &ZOPN1         INVOCATION INDEX             00114800
                      LCLC  &ZOPL(4095)    LABEL                        00114900
                      LCLC  &ZOPO(4095)    OPERATION                    00115000
                      LCLC  &ZOPV(4095)    VALUE                        00115100
                      LCLC  &ZOPD(4095)    DESCRIPTION                  00115200
.*                                                                      00115300
&ZOPN                 SETA  0              INITIAL INST INDEX VALUE     00115400
.******************************************************************     00115500
.***AL.L10 IWMTAFF FMT=LIST MF=S|L PARAMETERS                           00115600
.******************************************************************     00115700
                      AIF   ('&XMF' EQ 'L').ZLMFSL2                     00115800
                      AIF   ('&XMF' NE 'S').ZLMFSLX                     00115900
&XMFCTRL              SETC  '#Z'.'&SYSNDX'(1,4).'A'                     00116000
&XMFATTR              SETC  '0D'                                        00116100
.*                                                                      00116200
&ZOPN                 SETA  &ZOPN+1                                     00116300
&ZOPL(&ZOPN)          SETC  ' '                                         00116400
                      AIF   (&SYSALVL NE 0).ZALVL6A                     00116500
&ZOPO(&ZOPN)          SETC  'B'                                         00116600
&ZOPV(&ZOPN)          SETC  '&XMFCTRL.S'                                00116700
                      AGO   .ZALVL6B                                    00116800
.ZALVL6A              ANOP                                              00116900
&ZOPO(&ZOPN)          SETC  'BRAS'                                      00117000
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL.S'                              00117100
.ZALVL6B              ANOP                                              00117200
&ZOPD(&ZOPN)          SETC  '++ IWMTAFF ARG PARMS'                      00117300
.*                                                                      00117400
&ZOPN                 SETA  &ZOPN+1                                     00117500
&ZOPL(&ZOPN)          SETC  ' '                                         00117600
&ZOPO(&ZOPN)          SETC  'SPACE'                                     00117700
&ZOPV(&ZOPN)          SETC  '1'                                         00117800
&ZOPD(&ZOPN)          SETC  ' '                                         00117900
.*                                                                      00118000
.ZLMFSL2              ANOP  ,                                           00118100
.*-------------------------------------------------------------------   00118200
.***AM.L00  IWMTAFF FMT=LIST name                                       00118300
                      AIF   ('&XMF' NE 'L').ZLMFSL2M                    00118400
&ZOPN                 SETA &ZOPN+1                                      00118500
&ZOPL(&ZOPN)          SETC '&M0M0001'                                   00118600
&ZOPO(&ZOPN)          SETC 'EQU'                                        00118700
&ZOPV(&ZOPN)          SETC '&XMFCTRL'                                   00118800
&ZOPD(&ZOPN)          SETC '++ IWMTAFF NAME'                            00118900
.ZLMFSL2M             ANOP  ,                                           00119000
.*-------------------------------------------------------------------   00119100
.***AM.L01  IWMTAFF FMT=LIST PARAMETERS                                 00119200
&ZOPN                 SETA &ZOPN+1                                      00119300
&ZOPL(&ZOPN)          SETC '&XMFCTRL'                                   00119400
&ZOPO(&ZOPN)          SETC 'DS'                                         00119500
&ZOPV(&ZOPN)          SETC '&XMFATTR'                                   00119600
&ZOPD(&ZOPN)          SETC '++ IWMTAFF PARM LIST'                       00119700
.*-------------------------------------------------------------------   00119800
.***AM.L02 XVERSION XL1                                                 00119900
&ZOPN                 SETA &ZOPN+1                                      00120000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XVERSION'                         00120100
&ZOPO(&ZOPN)          SETC 'DS'                                         00120200
&ZOPV(&ZOPN)          SETC 'XL1'                                        00120300
&ZOPD(&ZOPN)          SETC '++ INPUT XVERSION'                          00120400
.*-------------------------------------------------------------------   00120500
.***AM.L09  XRSV0001 CL1                                                00120600
&ZOPN                 SETA &ZOPN+1                                      00120700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0001'                         00120800
&ZOPO(&ZOPN)          SETC 'DS'                                         00120900
&ZOPV(&ZOPN)          SETC 'CL1'                                        00121000
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV0001'                      00121100
.*-------------------------------------------------------------------   00121200
.***AM.L09  XPLISTLEN XL2                                               00121300
&ZOPN                 SETA &ZOPN+1                                      00121400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XPLISTLEN'                        00121500
&ZOPO(&ZOPN)          SETC 'DS'                                         00121600
&ZOPV(&ZOPN)          SETC 'XL2'                                        00121700
&ZOPD(&ZOPN)          SETC '++ INPUT  XPLISTLEN'                        00121800
.*-------------------------------------------------------------------   00121900
.***AM.L03 XFLAG_WORD BL.8                                              00122000
&ZOPN                 SETA &ZOPN+1                                      00122100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XFLAG_WORD'                       00122200
&ZOPO(&ZOPN)          SETC 'DS'                                         00122300
&ZOPV(&ZOPN)          SETC 'BL.8'                                       00122400
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             00122500
.*                                                                      00122600
&ZOPN                 SETA  &ZOPN+1                                     00122700
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XAFFINITY_YES'                   00122800
&ZOPO(&ZOPN)          SETC  'EQU'                                       00122900
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             00123000
&ZOPD(&ZOPN)          SETC  '++ XAFFINITY.'                             00123100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).YES'                          00123200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00123300
.*-------------------------------------------------------------------   00123400
.***AM.L09  XRSV0002 CL3                                                00123500
&ZOPN                 SETA &ZOPN+1                                      00123600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0002'                         00123700
&ZOPO(&ZOPN)          SETC 'DS'                                         00123800
&ZOPV(&ZOPN)          SETC 'CL3'                                        00123900
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV0002'                      00124000
.*-------------------------------------------------------------------   00124100
.***AM.L09  XREGION_TOKEN CL16                                          00124200
&ZOPN                 SETA &ZOPN+1                                      00124300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XREGION_TOKEN'                    00124400
&ZOPO(&ZOPN)          SETC 'DS'                                         00124500
&ZOPV(&ZOPN)          SETC 'CL16'                                       00124600
&ZOPD(&ZOPN)          SETC '++ &ZXREGION_TOKEN  XREGION_TOKEN'          00124700
.*-------------------------------------------------------------------   00124800
.***AM.L10 END OF IWMTAFF LIST PARAMETERS                               00124900
&ZOPN                 SETA &ZOPN+1                                      00125000
&ZOPL(&ZOPN)          SETC '&XMFCTRL.L'                                 00125100
&ZOPO(&ZOPN)          SETC 'EQU'                                        00125200
&ZOPV(&ZOPN)          SETC '*-&XMFCTRL'                                 00125300
&ZOPD(&ZOPN)          SETC '++ LENGTH OF PLIST'                         00125400
.*                                                                      00125500
&ZOPN                 SETA &ZOPN+1                                      00125600
&ZOPL(&ZOPN)          SETC ' '                                          00125700
&ZOPO(&ZOPN)          SETC 'SPACE'                                      00125800
&ZOPV(&ZOPN)          SETC '1'                                          00125900
&ZOPD(&ZOPN)          SETC ' '                                          00126000
.*-------------------------------------------------------------------   00126100
.***AL.L12 IWMTAFF FMT=LIST MF=S|L PARAMETERS                           00126200
                      AIF   ('&XMF' EQ 'L').ZMFLX  DONE IF MF=L         00126300
.*                                                                      00126400
&ZOPN                 SETA  &ZOPN+1                                     00126500
&ZOPL(&ZOPN)          SETC  '&XMFCTRL.S'                                00126600
&ZOPO(&ZOPN)          SETC  'DC'                                        00126700
&ZOPV(&ZOPN)          SETC  '0H''0'''                                   00126800
&ZOPD(&ZOPN)          SETC  '++ IWMTAFF ARG PARMS'                      00126900
.*                                                                      00127000
.ZLMFSLX              ANOP  ,                                           00127100
.*-------------------------------------------------------------------   00127200
.***AL.L13 SET ZPLLEN TO ITS APPROPRIATE VALUE                          00127300
&ZPLLEN               SETA 24                                           00127400
.*                                                                      00127500
.******************************************************************     00127600
.***AI.L01 IWMTAFF FMT=LIST FILL IN PARAMETER AREA                      00127700
.******************************************************************     00127800
                      ACTR  10000                                       00127900
&ZCVAL                SETC  'LA'           ASSUME XA MODE               00128000
                      AIF   ('&SYSASCE' EQ 'P').ZIMFXA  SYSSTATE PRI    00128100
&ZCVAL                SETC  'LAE'          XAX MODE                     00128200
.ZIMFXA               ANOP ,                                            00128300
.*                                                                      00128400
                      AIF   ('&XMFCTRL'(1,1) NE '(').ZIMFN2  NOT GPR    00128500
&ZCGPR                SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)  GET GPR         00128600
                      AIF   ('&ZCGPR' EQ 'GPR1').ZIMFNX                 00128700
                      AIF   ('&ZCGPR' EQ 'GPR01').ZIMFNX                00128800
                      AIF   ('&ZCGPR' EQ 'REG1').ZIMFNX                 00128900
                      AIF   ('&ZCGPR' EQ 'REG01').ZIMFNX                00129000
                      AIF   ('&ZCGPR' EQ 'R1').ZIMFNX                   00129100
                      AIF   ('&ZCGPR' EQ '1').ZIMFNX                    00129200
                      AIF   ('&ZCGPR' EQ '01').ZIMFNX                   00129300
&ZOPN                 SETA  &ZOPN+1                                     00129400
&ZOPL(&ZOPN)          SETC  ' '                                         00129500
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00129600
&ZOPV(&ZOPN)          SETC  '1,0(,&ZCGPR)'                              00129700
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00129800
                      AGO   .ZIMFNX                                     00129900
.*                                                                      00130000
.ZIMFN2               ANOP ,                                            00130100
                      AIF   (&SYSALVL EQ 0).ZIMFNX1                     00130200
                      AIF   ('&XMF' NE 'S').ZIMFNX1                     00130300
                      AIF   ('&ZCVAL' NE 'LAE').ZIMFNX                  00130400
&ZOPN                 SETA  &ZOPN+1                                     00130500
&ZOPL(&ZOPN)          SETC  ' '                                         00130600
&ZOPO(&ZOPN)          SETC  'LAE'                                       00130700
&ZOPV(&ZOPN)          SETC  '1,0(1,0)'                                  00130800
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00130900
                      AGO   .ZIMFNX                                     00131000
.ZIMFNX1              ANOP ,                                            00131100
&ZOPN                 SETA  &ZOPN+1                                     00131200
&ZOPL(&ZOPN)          SETC  ' '                                         00131300
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00131400
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL'                                00131500
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00131600
.ZIMFNX               ANOP ,                                            00131700
.********************************************************************   00131800
.***AI.L02 IWMTAFF FMT=LIST INITIALIZE PARAMETER AREA                   00131900
.********************************************************************   00132000
.***AI.L03 MF=(SLE)                                                     00132100
                      AIF   ('&XMF' EQ 'L').ZIMFLX                      00132200
.*                                                                      00132300
&ZOPN                 SETA  &ZOPN+1                                     00132400
&ZOPL(&ZOPN)          SETC  ' '                                         00132500
&ZOPO(&ZOPN)          SETC  'XC'                                        00132600
&ZOPV(&ZOPN)          SETC  '0(&ZPLLEN,1),0(1)'                         00132700
&ZOPD(&ZOPN)          SETC  '++ INITIALIZE'                             00132800
.ZIMFLX               ANOP  ,                                           00132900
.*-------------------------------------------------------------------   00133000
.***AI.L04 XPLISTLEN XL2                                                00133100
&ZOPN                 SETA  &ZOPN+1                                     00133200
&ZOPL(&ZOPN)          SETC  ' '                                         00133300
&ZOPO(&ZOPN)          SETC  'MVC'                                       00133400
&ZOPV(&ZOPN)          SETC  '2(2,1),=AL2(&ZPLLEN)'                      00133500
&ZOPD(&ZOPN)          SETC  '++ INPUT XPLISTLEN XL2'                    00133600
.*-------------------------------------------------------------------   00133700
.***AI.L05 XFLAG_WORD BL1                                               00133800
&ZW                   SETC  ''                                          00133900
&ZCLNG                SETC  ''             RESET BIT ON FLAG            00134000
.*-------------------------------------------------------------------   00134100
.***AI.L08 XFLAG_WORD "YES"                                             00134200
.***      BL1'1XXXXXXX'                                                 00134300
         AIF   ('&XAFFINITY' NE 'YES').ZI5A                             00134400
&ZW                   SETC  '&ZW.10000000'                              00134500
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00134600
                      AGO   .ZI5C                                       00134700
.*                                                                      00134800
.ZI5A                 ANOP  ,                                           00134900
&ZW                   SETC  '&ZW.00000000'                              00135000
.ZI5C                 ANOP  ,                                           00135100
.*-------------------------------------------------------------------   00135200
.***AI.L11 XFLAG_WORD BL1                                               00135300
                      AIF   ('&ZCLNG' NE 'YES').ZI5E  ALL ZERO BITS     00135400
&ZOPN                 SETA  &ZOPN+1                                     00135500
&ZOPL(&ZOPN)          SETC  ' '                                         00135600
&ZOPO(&ZOPN)          SETC  'OI'                                        00135700
&ZOPV(&ZOPN)          SETC  '4(1),B''&ZW'''                             00135800
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              00135900
.ZI5E                 ANOP  ,                                           00136000
.*-------------------------------------------------------------------   00136100
.***AI.L25  XREGION_TOKEN CL16                                          00136200
                      AIF   ('&ZXREGION_TOKEN' EQ '').ZI7E              00136300
                      AIF   ('&ZXREGION_TOKEN' EQ 'OUTPUT').ZI7E        00136400
&ZCGPR                SETC  '&XREGION_TOKEN'                            00136500
         AIF   ('&XREGION_TOKEN' EQ '0').ZI7E                           00136600
         AIF   ('&XREGION_TOKEN' EQ '0').ZI7E                           00136700
.*                                                                      00136800
                      AIF   ('&XREGION_TOKEN'(1,1) NE '(').ZI7B         00136900
&ZCGPR   SETC  '0('.'&XREGION_TOKEN'(2,K'&XREGION_TOKEN-2).')'          00137000
                      AGO   .ZI7D                                       00137100
.ZI7B                 ANOP  ,                                           00137200
.*                                                                      00137300
                      AIF   ('&REGION_TOKEN(1)' EQ '').ZI7I  OMITTED    00137400
&ZC                   SETC  '0'                                         00137500
                      AIF   ('&XREGION_TOKEN' NE '&ZC').ZI7C            00137600
.ZI7I                 ANOP  ,                                           00137700
&ZCGPR                SETC  '=CL16''&XREGION_TOKEN'''                   00137800
.ZI7C                 ANOP  ,                                           00137900
.*                                                                      00138000
.ZI7D                 ANOP  ,                                           00138100
.*                                                                      00138200
&ZOPN                 SETA  &ZOPN+1                                     00138300
&ZOPL(&ZOPN)          SETC  ' '                                         00138400
&ZOPO(&ZOPN)          SETC  'MVC'                                       00138500
&ZOPV(&ZOPN)          SETC  '8(16,1),&ZCGPR'                            00138600
&ZOPD(&ZOPN)          SETC  '++ &ZXREGION_TOKEN XREGION_TOKEN'          00138700
.*                                                                      00138800
.ZI7E                 ANOP  ,                                           00138900
.*-------------------------------------------------------------------   00139000
&ZOPN1                SETA &ZOPN                                        00139100
.*******************************************************************    00139200
.***  PROCESS IWMTAFF OUTPUT PARAMETERS                                 00139300
.*******************************************************************    00139400
                      ACTR  10000                                       00139500
.*******************************************************************    00139600
.***AO.X02  RETURN CODE PROCESSING                                      00139700
.*******************************************************************    00139800
                      AIF   (N'&RETCODE LE 0).ZMRETX                    00139900
                      AIF   ('&XRETCODE'(1,1) EQ '(').ZMRET2            00140000
                      AIF   ('&XRETCODE' EQ 'GPR15').ZMRETX             00140100
                      AIF   ('&XRETCODE' EQ 'REG15').ZMRETX             00140200
                      AIF   ('&XRETCODE' EQ 'R15').ZMRETX               00140300
                      AIF   ('&XRETCODE' EQ '15').ZMRETX                00140400
&ZOPN                 SETA  &ZOPN+1                                     00140500
&ZOPL(&ZOPN)          SETC  ' '                                         00140600
&ZOPO(&ZOPN)          SETC  'ST'                                        00140700
&ZOPV(&ZOPN)          SETC  '15,&XRETCODE'                              00140800
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00140900
                      AGO   .ZMRETX                                     00141000
.*                                                                      00141100
.ZMRET2               ANOP  ,                                           00141200
&ZCGPR                SETC  '&XRETCODE'(2,K'&XRETCODE-2)                00141300
                      AIF   ('&ZCGPR' EQ 'GPR15').ZMRETX                00141400
                      AIF   ('&ZCGPR' EQ 'REG15').ZMRETX                00141500
                      AIF   ('&ZCGPR' EQ 'R15').ZMRETX                  00141600
                      AIF   ('&ZCGPR' EQ '15').ZMRETX                   00141700
&ZOPN                 SETA  &ZOPN+1                                     00141800
&ZOPL(&ZOPN)          SETC  ' '                                         00141900
&ZOPO(&ZOPN)          SETC  'LR'                                        00142000
&ZOPV(&ZOPN)          SETC  '&ZCGPR,15'                                 00142100
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00142200
.ZMRETX               ANOP  ,                                           00142300
.*******************************************************************    00142400
.***AO.X03  REASON CODE PROCESSING                                      00142500
.*******************************************************************    00142600
                      AIF   (N'&RSNCODE LE 0).ZMRSNX                    00142700
                      AIF   ('&XRSNCODE'(1,1) EQ '(').ZMRSN2            00142800
                      AIF   ('&XRSNCODE' EQ 'GPR0').ZMRSNX              00142900
                      AIF   ('&XRSNCODE' EQ 'GPR00').ZMRSNX             00143000
                      AIF   ('&XRSNCODE' EQ 'REG0').ZMRSNX              00143100
                      AIF   ('&XRSNCODE' EQ 'REG00').ZMRSNX             00143200
                      AIF   ('&XRSNCODE' EQ 'R0').ZMRSNX                00143300
                      AIF   ('&XRSNCODE' EQ '0').ZMRSNX                 00143400
                      AIF   ('&XRSNCODE' EQ '00').ZMRSNX                00143500
&ZOPN                 SETA  &ZOPN+1                                     00143600
&ZOPL(&ZOPN)          SETC  ' '                                         00143700
&ZOPO(&ZOPN)          SETC  'ST'                                        00143800
&ZOPV(&ZOPN)          SETC  '0,&XRSNCODE'                               00143900
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00144000
                      AGO   .ZMRSNX                                     00144100
.*                                                                      00144200
.ZMRSN2               ANOP  ,                                           00144300
&ZCGPR                SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                00144400
                      AIF   ('&ZCGPR' EQ 'GPR0').ZMRSNX                 00144500
                      AIF   ('&ZCGPR' EQ 'GPR00').ZMRSNX                00144600
                      AIF   ('&ZCGPR' EQ 'REG0').ZMRSNX                 00144700
                      AIF   ('&ZCGPR' EQ 'REG00').ZMRSNX                00144800
                      AIF   ('&ZCGPR' EQ 'R0').ZMRSNX                   00144900
                      AIF   ('&ZCGPR' EQ '0').ZMRSNX                    00145000
                      AIF   ('&ZCGPR' EQ '00').ZMRSNX                   00145100
&ZOPN                 SETA  &ZOPN+1                                     00145200
&ZOPL(&ZOPN)          SETC  ' '                                         00145300
&ZOPO(&ZOPN)          SETC  'LR'                                        00145400
&ZOPV(&ZOPN)          SETC  '&ZCGPR,0'                                  00145500
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00145600
.ZMRSNX               ANOP  ,                                           00145700
.*******************************************************************    00145800
.***AO.X04  LABEL FOR MF=L PROCESSING                                   00145900
.*******************************************************************    00146000
.ZMFLX                ANOP  ,              MF=L PROCESSING              00146100
.*******************************************************************    00146200
.***AO.X05  FORMAT GENERATED INSTRUCTIONS                               00146300
.*******************************************************************    00146400
                      ACTR  10000                                       00146500
.*                                                                      00146600
                      LCLA  &ZLC           COLUMN POSITION              00146700
                      LCLA  &ZOPX          LIST TABLE INDEX             00146800
                      LCLC  &ZLL           LABEL                        00146900
                      LCLC  &ZLOP          OPERATION                    00147000
                      LCLC  &ZLV           VALUE                        00147100
                      LCLC  &ZLD           DESCRIPTION                  00147200
.*                                                                      00147300
&ZOPX                 SETA  1                                           00147400
.ZL2                  AIF   (&ZOPX GT &ZOPN1).ZLX  B IF DONE            00147500
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00147600
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00147700
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00147800
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00147900
                      AIF   (K'&ZLD LE 0).ZL5                           00148000
&ZLC                  SETA  35             COMMENT COLUMN               00148100
                      AIF   ('&ZLD'(1,1) NE '*').ZL3                    00148200
&ZLC                  SETA  33             COMMMENT COLUMN              00148300
.ZL3                  AIF   (K'&ZLV GE &ZLC-16-1).ZL4                   00148400
&ZLV                  SETC  '&ZLV'.' '                                  00148500
                      AGO   .ZL3                                        00148600
.*                                                                      00148700
.ZL4                  ANOP  ,                                           00148800
&ZLV                  SETC  '&ZLV'.' '                                  00148900
.ZL5                  ANOP  ,                                           00149000
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00149100
.*                                                                      00149200
&ZLL     &ZLOP &ZLV                                                     00149300
.*                                                                      00149400
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00149500
                      AGO   .ZL2           CONTINUE LOOPING             00149600
.*                                                                      00149700
.ZLX                  ANOP  ,                                           00149800
                      AIF   ('&XMF' EQ 'L').ZLINKX  MF=L                00149900
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00150000
         L     14,16(0,0)              GET CVT ADDRESS                  00150100
         L     14,772(14,0)            GET SFT ADDRESS                  00150200
         L     14,380(14,0)            GET LX FOR SERVICE ROUTINE       00150300
         LA    15,98                   GET EX FOR SERVICE ROUTINE       00150400
         OR    14,15                   GET PC NUMBER                    00150500
         PC    0(14)                                                    00150600
END&SYSNDX DS    0H                    END LABEL                        00150700
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00150800
.ZLINKX               ANOP  ,                                           00150900
.*******************************************************************    00151000
.***AP.X01  FORMAT GENERATED CODE                                       00151100
.ZL21                 AIF   (&ZOPX GT &ZOPN).ZLX1  B IF DONE            00151200
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00151300
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00151400
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00151500
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00151600
                      AIF   (K'&ZLD LE 0).ZL51                          00151700
&ZLC                  SETA  35             COMMENT COLUMN               00151800
                      AIF   ('&ZLD'(1,1) NE '*').ZL31                   00151900
&ZLC                  SETA  33             COMMENT COLUMN               00152000
.ZL31                 AIF   (K'&ZLV GE &ZLC-16-1).ZL41                  00152100
&ZLV                  SETC  '&ZLV'.' '                                  00152200
                      AGO   .ZL31                                       00152300
.*                                                                      00152400
.ZL41                 ANOP  ,                                           00152500
&ZLV                  SETC  '&ZLV'.' '                                  00152600
.ZL51                 ANOP  ,                                           00152700
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00152800
.*                                                                      00152900
&ZLL     &ZLOP &ZLV                                                     00153000
.*                                                                      00153100
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00153200
                      AGO   .ZL21          CONTINUE LOOPING             00153300
.*                                                                      00153400
.ZLX1                 ANOP  ,                                           00153500
.*******************************************************************    00153600
.***AP.X02  END OF IWMTAFF MACRO                                        00153700
&ZIWMTAFF             SETC  'YES'          SET IWMTAFF USED             00153800
         POP   PRINT                                                    00153900
*                                            IWMTAFF-0                  00154000
         SPACE 1                                                        00154100
.ZLX2                 ANOP  ,                                           00154200
         MEND                                                           00154300
**********************************************************************/ 00154400
*/*PB.OC01 INVOKE MACRO---------------------------------------------*/  00154500
*%IWMTAFF: MACRO KEYS(AFFINITY,REGION_TOKEN,RETCODE,RSNCODE,PLISTVER,   00154600
*                 MF);                                                  00154700
*  ANS('?'||MACLABEL||' '||'IWMTAFFP '||MACLIST||                       00154800
*         ' '||MACKEYS||';') COL(MACLMAR);                              00154900
*%END IWMTAFF;                                                          00155000
