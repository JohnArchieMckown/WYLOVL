*/**** START OF SPECIFICATIONS **************************************** 00000800
*                                                                     * 00008000
*                                                                     * 00009600
*01* MACRO NAME:  IEWBIND2                              -99/09/30-<0> * 00010400
*                                                                     * 00011200
*                                                                     * 00011600
*01* DESCRIPTIVE NAME:  Secondary Macro to Invoke the Binder          * 00012000
*                                                                     * 00012100
*01* PROPRIETARY STATEMENT:                                           * 00012400
*                                                                     * 00012700
*  Licensed Materials - Property Of IBM                               * 00013000
*  This Module Is "Restricted Materials Of IBM"                       * 00013300
*  5695-DF1                                                           * 00013500
*  (C) Copyright 1993,1999  IBM Corp.                                 * 00013700
*  See IBM Copyright Instructions                                     * 00013900
*                                                                     * 00014100
* 01*END PROPRIETARY STATEMENT                                        * 00014300
*                                                                     * 00014400
*                                                                     * 00014500
* STATUS= VERSION 2 RELEASE 10.0                                      * 00014600
*                                                                     * 00014700
*                                                                     * 00015200
*01* FUNCTION:                                                        * 00015400
*                                                                     * 00015600
*      Macro IEWBIND invokes IEWBIND2 to call the Binder.             * 00016000
*                                                                     * 00016800
*01* SYNTAX:                                                          * 00017600
*                                                                     * 00018400
*[xlabel]  IEWBIND2    FUNC=ADDA                                     * 00019200
*                    |     ,WORKMOD=xworkmod                          * 00020000
*                    |     ,ANAME=xaname                              * 00020800
*                    |    [,ENAME=xename|0]                         * 00021600
*                    |    [,AMODE=xamode|0]                         * 00022400
*                    |   [,ATYPE=A]                                  * 00022600
*                    |   [,ATYPE=S]                                  * 00022800
*                    |   [,ATYPE=P]                                  * 00023000
*                     ,FUNC=ALIGNT                                   * 00023200
*                    |     ,WORKMOD=xworkmod                          * 00024000
*                    |     ,SECTION=xsection                          * 00024800
*                     ,FUNC=ALTERW                                   * 00025600
*                    |     ,WORKMOD=xworkmod                          * 00026400
*                    |     ,OLDNAME=xoldname                          * 00026800
*                    |    ,ATYPE=C                                   * 00027200
*                    |   |     ,NEWNAME=xnewname                      * 00028000
*                    |    ,ATYPE=R                                   * 00028800
*                    |   |     ,NEWNAME=xnewname                      * 00029600
*                    |    ,ATYPE=D                                   * 00030400
*                    |    ,ATYPE=E                                   * 00031200
*                    |         ,COUNT=xcount                          * 00032000
*                    |    [,MODE=N|I]                               * 00032800
*                    |    [,CLASS=xclass|0]                         * 00033600
*                     ,FUNC=AUTOC                                    * 00033800
*                    |     ,WORKMOD=xworkmod                          * 00034000
*                    |    ,CALLIB=xcallib                            * 00034100
*                    |    ,PATHNAME=xpathname                        * 00034200
*                     ,FUNC=BINDW                                    * 00034400
*                    |     ,WORKMOD=xworkmod                          * 00035200
*                    |    [,CALLIB=xcallib|0]                       * 00036000
*                     ,FUNC=CREATEW                                  * 00036800
*                    |     ,DIALOG=xdialog                            * 00037600
*                    |     ,WORKMOD=xworkmod                          * 00038400
*                    |     ,INTENT=B|A                              * 00039200
*                     ,FUNC=DELETEW                                  * 00040000
*                    |     ,WORKMOD=xworkmod                          * 00040800
*                    |    [,PROTECT=Y|N]                            * 00041600
*                     ,FUNC=DLLR                                     * 00041800
*                    |     ,WORKMOD=xworkmod                          * 00042000
*                    |     ,RENAMEL=xrenamel                          * 00042200
*                     ,FUNC=ENDD                                     * 00042400
*                    |     ,DIALOG=xdialog                            * 00043200
*                    |    [,PROTECT=Y|N]                            * 00044000
*                     ,FUNC=GETD                                     * 00044800
*                    |     ,WORKMOD=xworkmod                          * 00045600
*                    |     ,CLASS=xclass                              * 00046400
*                    |    [,SECTION=xsection|0]                     * 00047200
*                    |     ,AREA=xarea                                * 00048000
*                    |     ,CURSOR=xcursor                            * 00048800
*                    |     ,COUNT=xcount                              * 00049600
*                     ,FUNC=GETE                                     * 00050400
*                    |     ,WORKMOD=xworkmod                          * 00051200
*                    |    [,SECTION=xsection|0]                     * 00052000
*                    |    [,RECTYPE=xrectype|0]                     * 00052800
*                    |   [,OFFSET=xoffset|-1                       * 00053600
*                    |    ,SYMBOL=xsymbol|0]                       * 00054400
*                    |     ,AREA=xarea                                * 00055200
*                    |     ,CURSOR=xcursor                            * 00056000
*                    |     ,COUNT=xcount                              * 00056800
*                    |    [,CLASS=xclass|0]                         * 00057200
*                     ,FUNC=GETN                                     * 00057600
*                    |     ,WORKMOD=xworkmod                          * 00058400
*                    |    [,AREA=xarea]                               * 00059200
*                    |     ,CURSOR=xcursor                            * 00060000
*                    |     ,COUNT=xcount                              * 00060800
*                    |     ,TCOUNT=xtcount                            * 00061600
*                    |    [,NTYPE=S|C]                              * 00062000
*                     ,FUNC=IMPORT                                   * 00062100
*                    |     ,WORKMOD=xworkmod                          * 00062200
*                    |    ,ITYPE=C                                   * 00062300
*                    |    ,ITYPE=D                                   * 00062400
*                    |     ,DLLNAME=xdllname                          * 00062500
*                    |     ,INAME=xiname                              * 00062600
*                    |   [,OFFSET=xoffset|0]                       * 00062800
*                     ,FUNC=INCLUDE                                  * 00063000
*                    |     ,WORKMOD=xworkmod                          * 00063200
*                    |    ,INTYPE=D                                  * 00063500
*                    |   |    ,DDNAME=xddname                        * 00063800
*                    |   |   | ,DEPTR=xdeptr                          * 00064100
*                    |    ,INTYPE=N                                  * 00064400
*                    |   |    ,DDNAME=xddname                        * 00064900
*                    |   |   |    [,MEMBER=xmember|0]               * 00065400
*                    |   |    ,PATHNAME=xpathname                    * 00065900
*                    |    ,INTYPE=P                                  * 00066400
*                    |   |     ,DCBPTR=xdcbptr                        * 00066600
*                    |   |     ,DEPTR=xdeptr                          * 00066800
*                    |    ,INTYPE=S                                  * 00067000
*                    |   |    ,DDNAME=xddname                        * 00067600
*                    |   |   | ,DEPTR=xdeptr                          * 00068200
*                    |    ,INTYPE=T                                  * 00068800
*                    |         ,EPTOKEN=xeptoken                      * 00069600
*                    |    [,ATTRIB=N|Y]                             * 00071200
*                    |    [,ALIASES=N|Y]                            * 00072000
*                     ,FUNC=INSERTS                                  * 00072800
*                    |     ,WORKMOD=xworkmod                          * 00073600
*                    |     ,SECTION=xsection                          * 00074400
*                     ,FUNC=LOADW                                    * 00075200
*                    |     ,WORKMOD=xworkmod                          * 00076000
*                    |     ,EPLOC=xeploc                              * 00076800
*                    |    ,IDENTIFY=N                                * 00077600
*                    |   |     ,EXTLST=xextlst                        * 00078400
*                    |    ,IDENTIFY=Y                                * 00079200
*                    |        [,EXTLST=xextlst]                       * 00080000
*                    |        [,LNAME=xlname|0]                     * 00080800
*                     ,FUNC=ORDERS                                   * 00081600
*                    |     ,WORKMOD=xworkmod                          * 00082400
*                    |     ,SECTION=xsection                          * 00083200
*                     ,FUNC=PUTD                                     * 00084000
*                    |     ,WORKMOD=xworkmod                          * 00084800
*                    |     ,CLASS=xclass                              * 00085600
*                    |    [,SECTION=xsection|0]                     * 00086400
*                    |    [,AREA=xarea|0                            * 00087200
*                    |         ,COUNT=xcount]                         * 00088000
*                    |    [,CURSOR=xcursor|-1]                      * 00088800
*                    |    [,NEWSECT=N|Y]                            * 00089600
*                    |    [,ENDDATA=N|Y]                            * 00090400
*                     ,FUNC=RENAME                                   * 00090500
*                    |     ,WORKMOD=xworkmod                          * 00090600
*                    |     ,OLDNAME=xoldname                          * 00090700
*                    |     ,NEWNAME=xnewname                          * 00090800
*                     ,FUNC=RESETW                                   * 00091200
*                    |     ,WORKMOD=xworkmod                          * 00092000
*                    |     ,INTENT=B|A                              * 00092800
*                    |    [,PROTECT=Y|N]                            * 00093600
*                     ,FUNC=SAVEW                                    * 00094400
*                    |     ,WORKMOD=xworkmod                          * 00095200
*                    |    [,MODLIB=xmodlib|0]                       * 00096000
*                    |    [,SNAME=xsname|0]                         * 00096800
*                    |    [,REPLACE=N|Y]                            * 00097600
*                     ,FUNC=SETL                                     * 00098400
*                    |     ,WORKMOD=xworkmod                          * 00099200
*                    |     ,SYMBOL=xsymbol                            * 00100000
*                    |    [,LIBOPT=C|N|E]                           * 00100800
*                    |   [,CALLIB=xcallib|0                        * 00101300
*                    |    ,PATHNAME=xpathname|EITHER]              * 00101800
*                     ,FUNC=SETO                                     * 00102400
*                    |    ,DIALOG=xdialog                            * 00103200
*                    |    ,WORKMOD=xworkmod                          * 00104000
*                    |     ,OPTION=xoption                            * 00104800
*                    |     ,OPTVAL=xoptval                            * 00105600
*                    |    [,PARMS=xparms|0]                         * 00106000
*                     ,FUNC=STARTD                                   * 00106400
*                    |     ,DIALOG=xdialog                            * 00107200
*                    |    [,FILES=xfiles|0]                         * 00108000
*                    |    [,EXITS=xexits|0]                         * 00108800
*                    |    [,OPTIONS=xoptions|0]                     * 00109600
*                    |    [,PARMS=xparms|0]                         * 00110000
*                     ,FUNC=STARTS                                   * 00110400
*                          ,WORKMOD=xworkmod                          * 00111200
*                          ,ORIGIN=xorigin                            * 00112000
*                         [,REGION=N|Y]                             * 00112800
*                     [,RETCODE=xretcode]                             * 00113400
*                     [,RSNCODE=xrsncode]                             * 00114000
*                     [,VERSION=1|2|3|4]                            * 00114700
*                     [,PLISTVER=xplistver|IMPLIED_VERSION]         * 00115000
*                    [,MF=S]                                         * 00115200
*                    [,MF=(L,xmfctrl,xmfattr|0D)]                  * 00116000
*                    [,MF=(E,xmfctrl,COMPLETE)]                    * 00116800
*                                                                     * 00117600
*                                                                     * 00118400
*      Where:                                                         * 00119200
*                                                                     * 00120000
*                                                                     * 00120800
*      [xlabel]                                                       * 00121600
*          is an optional symbol, starting in column 1, that is the   * 00122200
*          name on the IEWBIND2 macro invocation.  The name must      * 00122800
*          conform to the rules for an ordinary assembler language    * 00123400
*          symbol.                                                    * 00124000
*          DEFAULT: No name.                                          * 00124600
*                                                                     * 00125600
*                                                                     * 00126400
*                                                                     * 00127200
*                                                                     * 00128000
*      FUNC=ADDA|ALIGNT|ALTERW|AUTOC|BINDW|CREATEW|DELETEW|DLLR|ENDD * 00128800
*          |GETD|GETE|GETN|IMPORT|INCLUDE|INSERTS|LOADW|ORDERS|PUTD|R * 00129600
*          ENAME|RESETW|SAVEW|SETL|SETO|STARTD|STARTS                * 00130400
*          is a required keyword input which specifies the Binder     * 00131200
*          function to perform.                                       * 00132000
*                                                                     * 00132800
*                                                                     * 00133600
*          FUNC=ADDA                                                  * 00134400
*              Establish an alias for the program.  ADDA is the       * 00135200
*              abbreviation for ADDALIAS.                             * 00136000
*                                                                     * 00136800
*                                                                     * 00137600
*              WORKMOD=xworkmod                                       * 00138400
*                  is the name (RS-type), or address in register      * 00139200
*                  (2)-(12), of a required 8 character input variable * 00140000
*                  that contains the workmod token, which the Binder  * 00140800
*                  returned on a CREATEWMOD request to represent the  * 00141600
*                  workmod. This token must not be modified by the    * 00142400
*                  caller.                                            * 00143200
*                                                                     * 00144000
*                                                                     * 00144800
*                                                                     * 00145600
*                                                                     * 00146400
*              ANAME=xaname                                           * 00147200
*                  is a required input.  It is the name (RS-type), or * 00147900
*                  address in register (2)-(12), of a 1024 byte       * 00148600
*                  varying length character string which is the name  * 00149200
*                  to use for the true alias or alternate entry       * 00149800
*                  point.                                             * 00150400
*                                                                     * 00151200
*                  The first half word of the string contains a count * 00152000
*                  (1 to 1024) of the number of characters in the     * 00152800
*                  string which follows.                              * 00153600
*                                                                     * 00154400
*                                                                     * 00155200
*                                                                     * 00156000
*                                                                     * 00156800
*              [ENAME=xename|0]                                     * 00157600
*                  is an optional input.  It is the name (RS-type),   * 00158400
*                  or address in register (2)-(12), of a 1024-byte    * 00159200
*                  varying-length character string which is the       * 00160000
*                  external entry point name to be used when the      * 00160800
*                  program is called via the name specified by ANAME. * 00161600
*                  If ENAME is not an external symbol in the program, * 00162400
*                  ANAME is assigned to the program's main entry      * 00163200
*                  point.                                             * 00164000
*                                                                     * 00164800
*                  The first half word of the string contains a count * 00165600
*                  (0 to 1024) of the number of characters in the     * 00166400
*                  string which follows.                              * 00167200
*                  DEFAULT: 0, signifying a null string, which        * 00168000
*                  indicates that ANAME is to be a true alias located * 00168800
*                  at the program's main entry point.                 * 00169600
*                                                                     * 00170400
*                                                                     * 00171200
*                                                                     * 00172000
*                                                                     * 00172800
*              [AMODE=xamode|0]                                     * 00173600
*                  is an optional input.  It is the name (RS-type),   * 00174400
*                  or address in register (2)-(12), of a 256-byte     * 00175200
*                  varying length character string which specifies    * 00176000
*                  the amode of the alias ANAME. Valid strings are    * 00176800
*                  "24", "31", "ANY" and "MIN".                       * 00177600
*                                                                     * 00178400
*                  The first half word of the string contains a count * 00179200
*                  (0 to 256) of the number of characters in the      * 00180000
*                  string which follows.                              * 00180800
*                  DEFAULT: 0, signifying a null string, which        * 00181600
*                  indicates that the amode is to be determined by    * 00182400
*                  the amode of the ESD.                              * 00183200
*                                                                     * 00183300
*                                                                     * 00183400
*                                                                     * 00183500
*                                                                     * 00183600
*              [ATYPE=A|S|P]                                        * 00183700
*                  is an optional keyword input which indicates       * 00183800
*                  whether ANAME is a regular alias or a hard link in * 00183900
*                  the case of OE.                                    * 00184000
*                  DEFAULT: A                                         * 00184100
*                                                                     * 00184200
*                                                                     * 00184300
*                  [ATYPE=A]                                          * 00184400
*                      Specifes that ANAME is a regular alias.        * 00184500
*                                                                     * 00184600
*                  [ATYPE=S]                                          * 00184700
*                      Specifes that ANAME is the pathname for a      * 00184800
*                      symbolic link.                                 * 00184900
*                                                                     * 00185000
*                  [ATYPE=P]                                          * 00185100
*                      Specifes that ANAME is the pathname to be      * 00185200
*                      stored in all symbolic links.                  * 00185300
*                                                                     * 00185400
*                                                                     * 00185500
*                                                                     * 00185600
*                                                                     * 00185700
*                                                                     * 00185800
*          FUNC=ALIGNT                                                * 00186400
*              Specify page alignment for the designated control      * 00187200
*              section.  ALIGNT is the abbreviation for ALIGNTEXT.    * 00188000
*                                                                     * 00188800
*                                                                     * 00189600
*              WORKMOD=xworkmod                                       * 00190400
*                  is the name (RS-type), or address in register      * 00191200
*                  (2)-(12), of a required 8 character input variable * 00192000
*                  that contains the workmod token, which the Binder  * 00192800
*                  returned on a CREATEWMOD request to represent the  * 00193600
*                  workmod. This token must not be modified by the    * 00194400
*                  caller.                                            * 00195200
*                                                                     * 00196000
*                                                                     * 00196800
*                                                                     * 00197600
*                                                                     * 00198400
*              SECTION=xsection                                       * 00199200
*                  is a required input.  It is the name (RS-type), or * 00200000
*                  address in register (2)-(12), of a 1024-byte       * 00200800
*                  varying character string variable which is the     * 00201600
*                  name of the control section or named common to be  * 00202400
*                  positioned in the workmod.                         * 00203200
*                                                                     * 00204000
*                  The first half word of the string contains a count * 00204800
*                  (1 to 1024) of the number of characters in the     * 00205600
*                  string which follows.                              * 00206400
*                                                                     * 00207200
*                                                                     * 00208000
*                                                                     * 00208800
*          FUNC=ALTERW                                                * 00209600
*              Alter symbols or control sections in a workmod.        * 00210400
*              ALTERW is the abbreviation for ALTERWMOD.              * 00211200
*                                                                     * 00212000
*                                                                     * 00212800
*              WORKMOD=xworkmod                                       * 00213600
*                  is the name (RS-type), or address in register      * 00214400
*                  (2)-(12), of a required 8 character input variable * 00215200
*                  that contains the workmod token, which the Binder  * 00216000
*                  returned on a CREATEWMOD request to represent the  * 00216800
*                  workmod. This token must not be modified by the    * 00217600
*                  caller.                                            * 00218400
*                                                                     * 00218500
*                                                                     * 00218600
*                                                                     * 00218700
*                                                                     * 00218800
*              OLDNAME=xoldname                                       * 00218900
*                  is a required input.  It is the name (RS-type), or * 00219000
*                  address in register (2)-(12), of a 1024-byte       * 00219100
*                  varying character string which is the section name * 00219200
*                  or symbol name to be altered.                      * 00219300
*                                                                     * 00219400
*                  The first half word of the string contains a count * 00219500
*                  (1 to 1024) of the number of characters in the     * 00219600
*                  string which follows.                              * 00219700
*                                                                     * 00219800
*                                                                     * 00220000
*                                                                     * 00220800
*                                                                     * 00221600
*              ATYPE=C|R|D|E                                        * 00222400
*                  is a required keyword input which specifies the    * 00223200
*                  type of alteration to perform on the designated    * 00224000
*                  Workmod.                                           * 00224800
*                                                                     * 00225600
*                                                                     * 00226400
*                  ATYPE=C                                            * 00227200
*                      Specifies that an external symbol and all      * 00227600
*                      references to it are to be changed from        * 00228000
*                      OLDNAME to NEWNAME. Any pre-existing symbols   * 00228400
*                      and sections named NEWNAME are first deleted.  * 00228800
*                      C is the abbreviation for CHANGE.              * 00229200
*                                                                     * 00229600
*                                                                     * 00230400
*                      NEWNAME=xnewname                               * 00231200
*                          is a required input.  It is the name       * 00232000
*                          (RS-type), or address in register          * 00232800
*                          (2)-(12), of a 1024-byte varying character * 00233600
*                          string which is new name of the symbol     * 00234400
*                          designated by OLDNAME.                     * 00235200
*                                                                     * 00236000
*                          The first half word of the string contains * 00236800
*                          a count (1 to 1024) of the number of       * 00237600
*                          characters in the string which follows.    * 00238400
*                                                                     * 00239200
*                                                                     * 00240000
*                                                                     * 00240800
*                  ATYPE=R                                            * 00241600
*                      Specifies that an external symbol and sections * 00242000
*                      are to be replaced. All references to OLDNAME  * 00242400
*                      are changed to refer to NEWNAME. Any sections  * 00242800
*                      named OLDNAME are deleted.  R is the           * 00243200
*                      abbreviation for REPLACE.                      * 00243600
*                                                                     * 00244000
*                                                                     * 00244800
*                      NEWNAME=xnewname                               * 00245600
*                          is a required input.  It is the name       * 00246400
*                          (RS-type), or address in register          * 00247200
*                          (2)-(12), of a 1024-byte varying character * 00248000
*                          string which is new name of the symbol     * 00248800
*                          designated by OLDNAME.                     * 00249600
*                                                                     * 00250400
*                          The first half word of the string contains * 00251200
*                          a count (1 to 1024) of the number of       * 00252000
*                          characters in the string which follows.    * 00252800
*                                                                     * 00253600
*                                                                     * 00254400
*                                                                     * 00255200
*                  ATYPE=D                                            * 00256000
*                      Specifies that an external symbol is to be     * 00256800
*                      deleted.  D is the abbreviation for DELETE.    * 00257600
*                                                                     * 00258400
*                  ATYPE=E                                            * 00259200
*                      Specifies that a a control section is to be    * 00260000
*                      expanded.  E is the abbreviation for EXPAND.   * 00260800
*                                                                     * 00261600
*                                                                     * 00262400
*                      COUNT=xcount                                   * 00263200
*                          is the name (RS-type), or address in       * 00264000
*                          register (2)-(12), of a required fullword  * 00264800
*                          output which contains the number of bytes  * 00265600
*                          by which the section is to be expanded.    * 00266400
*                                                                     * 00267200
*                                                                     * 00268000
*                                                                     * 00268800
*                                                                     * 00269600
*                                                                     * 00270400
*                                                                     * 00271200
*                                                                     * 00272000
*                                                                     * 00272800
*              [MODE=N|I]                                           * 00273600
*                  is an optional keyword input which specifies       * 00274200
*                  whether the operation is to take place immediately * 00274800
*                  or on the next program to be included in the       * 00275400
*                  Workmod.                                           * 00276000
*                  DEFAULT: N                                         * 00276800
*                                                                     * 00277600
*                                                                     * 00278400
*                  MODE=N                                             * 00279300
*                      The alteration specified is to be performed on * 00280200
*                      the next program to be included in the         * 00281100
*                      Workmod.  N is the abbreviation for NEXT.      * 00282000
*                                                                     * 00283200
*                  MODE=I                                             * 00284000
*                      The alteration specified is to be performed    * 00284800
*                      immediately on the current Workmod.  I is the  * 00285600
*                      abbreviation for IMMED.                        * 00286400
*                                                                     * 00287200
*                                                                     * 00288000
*                                                                     * 00288600
*                                                                     * 00289200
*                                                                     * 00289800
*                                                                     * 00290400
*              [CLASS=xclass|0]                                     * 00291000
*                  is an optional input.  It is the name (RS-type),   * 00291600
*                  or address in register (2)-(12), of a 16-byte      * 00292200
*                  varying length character string which is the       * 00292800
*                  Binder data class name.                            * 00293400
*                                                                     * 00294000
*                  The first half word of the string contains a count * 00294600
*                  (1 to 16) of the number of characters in the       * 00295200
*                  string which follows.                              * 00295800
*                  DEFAULT: 0, signifying for an EXPAND request that  * 00296400
*                  B.TEXT is to be used.  If ATYPE is not expand,     * 00297000
*                  this keyword is ignored.                           * 00297600
*                                                                     * 00299200
*                                                                     * 00300000
*                                                                     * 00300800
*          FUNC=AUTOC                                                 * 00300900
*              Perform immediate (incremental) autocall, using the    * 00301000
*              given DDNAME as the CALLIB.  AUTOC is the abbreviation * 00301100
*              for AUTOCALL.                                          * 00301200
*                                                                     * 00301300
*                                                                     * 00301400
*              WORKMOD=xworkmod                                       * 00301500
*                  is the name (RS-type), or address in register      * 00301600
*                  (2)-(12), of a required 8 character input variable * 00301700
*                  that contains the workmod token, which the Binder  * 00301800
*                  returned on a CREATEWMOD request to represent the  * 00301900
*                  workmod. This token must not be modified by the    * 00302000
*                  caller.                                            * 00302100
*                                                                     * 00302200
*                                                                     * 00302300
*                                                                     * 00302400
*                                                                     * 00302500
*              The following is a set of mutually exclusive keys.     * 00302600
*              This set is required; only one key must be specified.  * 00302700
*                                                                     * 00302800
*                                                                     * 00302900
*              CALLIB=xcallib                                         * 00303000
*                  belongs to a set of mutually exclusive keys. It is * 00303100
*                  an input.  It is the name (RS-type), or address in * 00303200
*                  register (2)-(12), of a key                        * 00303300
*                                                                     * 00303500
*                  It is an 8-byte varying character string which is  * 00303600
*                  the ddname of a library to be used for automatic   * 00303700
*                  library calls.                                     * 00303800
*                                                                     * 00303900
*                  The first half word of the string contains a count * 00304000
*                  (0 to 8) of the number of characters in the string * 00304100
*                  which follows.                                     * 00304200
*                                                                     * 00304300
*              PATHNAME=xpathname                                     * 00304400
*                  belongs to a set of mutually exclusive keys. It is * 00304500
*                  an input.  It is the name (RS-type), or address in * 00304600
*                  register (2)-(12), of a key                        * 00304700
*                                                                     * 00304900
*                  It is a 1024-byte varying length character string  * 00305000
*                  containing the HFS path name to be used for        * 00305100
*                  automatic library calls.                           * 00305200
*                                                                     * 00305300
*                  The first half word of the string contains a count * 00305400
*                  (0 to 1024) of the number of characters in the     * 00305500
*                  string which follows.                              * 00305600
*                                                                     * 00305700
*                                                                     * 00305800
*                                                                     * 00305900
*              End of a set of mutually exclusive required keys.      * 00306000
*                                                                     * 00306100
*                                                                     * 00306200
*          FUNC=BINDW                                                 * 00306300
*              Bind the program in WORKMOD.  BINDW is the             * 00306400
*              abbreviation for BINDWMOD.                             * 00306500
*                                                                     * 00306600
*                                                                     * 00306700
*              WORKMOD=xworkmod                                       * 00306800
*                  is the name (RS-type), or address in register      * 00307000
*                  (2)-(12), of a required 8 character input variable * 00307200
*                  that contains the workmod token, which the Binder  * 00308000
*                  returned on a CREATEWMOD request to represent the  * 00308800
*                  workmod. This token must not be modified by the    * 00309600
*                  caller.                                            * 00310400
*                                                                     * 00311200
*                                                                     * 00312000
*                                                                     * 00312800
*                                                                     * 00313600
*              [CALLIB=xcallib|0]                                   * 00314400
*                  is an optional input.  It is the name (RS-type),   * 00315200
*                  or address in register (2)-(12), of an 8-byte      * 00316000
*                  varying character string which is the ddname of a  * 00316800
*                  library to be used for automatic library calls.    * 00317600
*                                                                     * 00318400
*                  The first half word of the string contains a count * 00319200
*                  (0 to 8) of the number of characters in the string * 00320000
*                  which follows.                                     * 00320800
*                  DEFAULT: 0, signifying a null string indicating    * 00321600
*                  that the Binder must use the call library which    * 00322400
*                  was established by a SETOPTIONS or STARTDIALOG     * 00323200
*                  request or else leave external references          * 00324000
*                  unresolved.                                        * 00324800
*                                                                     * 00325600
*                                                                     * 00326400
*                                                                     * 00327200
*          FUNC=CREATEW                                               * 00328000
*              Establish a new WORKMOD.  CREATEW is the abbreviation  * 00328800
*              for CREATEWMOD.                                        * 00329600
*                                                                     * 00330400
*                                                                     * 00331200
*              DIALOG=xdialog                                         * 00332000
*                  is a required input.  It is the name (RS-type), or * 00332800
*                  address in register (2)-(12), of an 8-byte         * 00333600
*                  character string which is the dialog token         * 00334400
*                  representing the Binder dialog. The Binder returns * 00335200
*                  this token on a STARTDIALOG request. The caller    * 00336000
*                  must not alter the dialog token.                   * 00336800
*                                                                     * 00337600
*                                                                     * 00338400
*                                                                     * 00339200
*                                                                     * 00340000
*              WORKMOD=xworkmod                                       * 00340800
*                  is the name (RS-type), or address in register      * 00341600
*                  (2)-(12), of a required 8 character output         * 00342400
*                  variable that contains the workmod token, which    * 00343200
*                  the Binder returned on a CREATEWMOD request to     * 00344000
*                  represent the workmod. This token must not be      * 00344800
*                  modified by the caller.                            * 00345600
*                                                                     * 00346400
*                                                                     * 00347200
*                                                                     * 00348000
*                                                                     * 00348800
*              INTENT=B|A                                           * 00349600
*                  is a required keyword input which indicates        * 00350400
*                  whether or not a BIND will be requested for the    * 00351200
*                  program. Processing intent determines the range of * 00352000
*                  Binder functions which can be requested for the    * 00352800
*                  Workmod.                                           * 00353600
*                                                                     * 00354400
*                                                                     * 00355200
*                  INTENT=B                                           * 00356000
*                      Indicates a BIND will be performed on the      * 00356800
*                      program.  B is the abbreviation for BIND.      * 00357600
*                                                                     * 00358400
*                  INTENT=A                                           * 00359000
*                      Specifies that the workmod will be accessed    * 00359600
*                      but not bound.  A is the abbreviation for      * 00360200
*                      ACCESS.                                        * 00360800
*                                                                     * 00361600
*                                                                     * 00362400
*                                                                     * 00363200
*                                                                     * 00364000
*                                                                     * 00364800
*          FUNC=DELETEW                                               * 00365600
*              Delete an existing WORKMOD.  DELETEW is the            * 00366400
*              abbreviation for DELETEWMOD.                           * 00367200
*                                                                     * 00368000
*                                                                     * 00368800
*              WORKMOD=xworkmod                                       * 00369600
*                  is the name (RS-type), or address in register      * 00370400
*                  (2)-(12), of a required 8 character input variable * 00371200
*                  that contains the workmod token, which the Binder  * 00372000
*                  returned on a CREATEWMOD request to represent the  * 00372800
*                  workmod. This token must not be modified by the    * 00373600
*                  caller.                                            * 00374400
*                                                                     * 00375200
*                                                                     * 00376000
*                                                                     * 00376800
*                                                                     * 00377600
*              [PROTECT=Y|N]                                        * 00378400
*                  is an optional keyword input which specifies       * 00379200
*                  whether or not the Binder will be allowed to       * 00380000
*                  delete an altered program.                         * 00380800
*                  DEFAULT: Y                                         * 00381600
*                                                                     * 00382400
*                                                                     * 00383200
*                  PROTECT=Y                                          * 00384000
*                      Prevents the Binder from deleting altered      * 00384800
*                      programs.  Y is the abbreviation for YES.      * 00385600
*                                                                     * 00386400
*                  PROTECT=N                                          * 00387000
*                      The Binder is allowed to delete altered        * 00387600
*                      programs..  N is the abbreviation for NO.      * 00388200
*                                                                     * 00388800
*                                                                     * 00389600
*                                                                     * 00390400
*                                                                     * 00391200
*                                                                     * 00392000
*          FUNC=DLLR                                                  * 00392100
*              Allows for the substitution of DLL members in          * 00392200
*              Import/Export tables, as indicated by the passed list. * 00392300
*              DLLR is the abbreviation for DLLRENAME.                * 00392400
*                                                                     * 00392500
*                                                                     * 00392600
*              WORKMOD=xworkmod                                       * 00392700
*                  is the name (RS-type), or address in register      * 00392800
*                  (2)-(12), of a required 8 character input variable * 00392900
*                  that contains the workmod token, which the Binder  * 00393000
*                  returned on a CREATEWMOD request to represent the  * 00393100
*                  workmod. This token must not be modified by the    * 00393200
*                  caller.                                            * 00393300
*                                                                     * 00393400
*                                                                     * 00393500
*                                                                     * 00393600
*                                                                     * 00393700
*              RENAMEL=xrenamel                                       * 00393800
*                  is a required input.  It is the name (RS-type), or * 00393900
*                  address in register (2)-(12), of a structure which * 00394000
*                  represents the list of DLL members to be renamed.  * 00394100
*                  All entries in this list are four bytes in length, * 00394200
*                  and they are organized as follows:                 * 00394300
*                                                                     * 00394400
*                  The first word contains the number of pairs of     * 00394500
*                  names to be substituted.                           * 00394600
*                                                                     * 00394700
*                  All subsequent words represent a list of addresses * 00394800
*                  of the names to be substituted.  In this list, all * 00394900
*                  the odd-numbered entries represent the addresses   * 00395000
*                  of old names, while the even-numbered entries      * 00395100
*                  represent the addresses of the new names, which    * 00395200
*                  will replace the old ones.  Thus, this structure   * 00395300
*                  represents a list of paired names to be            * 00395400
*                  substituted, where an old name is followed by a    * 00395500
*                  new name.                                          * 00395600
*                                                                     * 00395700
*                                                                     * 00395800
*                                                                     * 00395900
*          FUNC=ENDD                                                  * 00396000
*              End the specified dialog.  ENDD is the abbreviation    * 00396100
*              for ENDDIALOG.                                         * 00396200
*                                                                     * 00396300
*                                                                     * 00396400
*              DIALOG=xdialog                                         * 00396800
*                  is a required input.  It is the name (RS-type), or * 00397600
*                  address in register (2)-(12), of an 8-byte         * 00398400
*                  character string which is the dialog token         * 00399200
*                  representing the Binder dialog. The Binder returns * 00400000
*                  this token on a STARTDIALOG request. The caller    * 00400800
*                  must not alter the dialog token.                   * 00401600
*                                                                     * 00402400
*                                                                     * 00403200
*                                                                     * 00404000
*                                                                     * 00404800
*              [PROTECT=Y|N]                                        * 00405600
*                  is an optional keyword input which specifies       * 00406400
*                  whether or not the Binder will be allowed to       * 00407200
*                  delete an altered program.                         * 00408000
*                  DEFAULT: Y                                         * 00408800
*                                                                     * 00409600
*                                                                     * 00410400
*                  PROTECT=Y                                          * 00411200
*                      Prevents the Binder from deleting altered      * 00412000
*                      programs.  Y is the abbreviation for YES.      * 00412800
*                                                                     * 00413600
*                  PROTECT=N                                          * 00414200
*                      The Binder is allowed to delete altered        * 00414800
*                      programs.  N is the abbreviation for NO.       * 00415400
*                                                                     * 00416000
*                                                                     * 00416800
*                                                                     * 00417600
*                                                                     * 00418400
*                                                                     * 00419200
*          FUNC=GETD                                                  * 00420000
*              Retrieve program data from the specified WORKMOD.      * 00420800
*              GETD is the abbreviation for GETDATA.                  * 00421600
*                                                                     * 00422400
*                                                                     * 00423200
*              WORKMOD=xworkmod                                       * 00424000
*                  is the name (RS-type), or address in register      * 00424800
*                  (2)-(12), of a required 8 character input variable * 00425600
*                  that contains the workmod token, which the Binder  * 00426400
*                  returned on a CREATEWMOD request to represent the  * 00427200
*                  workmod. This token must not be modified by the    * 00428000
*                  caller.                                            * 00428800
*                                                                     * 00429600
*                                                                     * 00430400
*                                                                     * 00431200
*                                                                     * 00432000
*              CLASS=xclass                                           * 00432800
*                  is a required input.  It is the name (RS-type), or * 00433600
*                  address in register (2)-(12), of a 12-byte varying * 00434400
*                  length character string which is the Binder data   * 00435200
*                  class name.                                        * 00436000
*                                                                     * 00436800
*                  The first half word of the string contains a count * 00437600
*                  (1 to 8) of the number of characters in the string * 00438400
*                  which follows.                                     * 00439200
*                                                                     * 00440000
*                                                                     * 00440800
*                                                                     * 00441600
*                                                                     * 00442400
*              [SECTION=xsection|0]                                 * 00443200
*                  is an optional input.  It is the name (RS-type),   * 00443900
*                  or address in register (2)-(12), of a 1024-byte    * 00444600
*                  varying character string variable which is the     * 00445200
*                  name of the control section or named common to be  * 00445800
*                  processed.                                         * 00446400
*                                                                     * 00447200
*                  The first half word of the string contains a count * 00448000
*                  (0 to 1024) of the number of characters in the     * 00448800
*                  string which follows.                              * 00449600
*                  DEFAULT: 0, signifying a null string which         * 00450400
*                  indicates that all sections are to be processed.   * 00451200
*                                                                     * 00452000
*                                                                     * 00452800
*                                                                     * 00453600
*                                                                     * 00454400
*              AREA=xarea                                             * 00455200
*                  is a required output.  It is the name (RS-type),   * 00456000
*                  or address in register (2)-(12), of a standard     * 00456800
*                  Binder data buffer which will receive the data.    * 00457600
*                                                                     * 00458400
*                                                                     * 00459200
*                                                                     * 00460000
*                                                                     * 00460800
*              CURSOR=xcursor                                         * 00461600
*                  is the name (RS-type), or address in register      * 00462400
*                  (2)-(12), of a required fullword input/output      * 00463200
*                  which contains the relative record number or byte  * 00464000
*                  at which the Binder is to begin processing.        * 00464800
*                  Updated by the Binder on each GETDATA request.  A  * 00465600
*                  value of zero indicates the Binder is to start at  * 00466400
*                  the start of the item.                             * 00467200
*                                                                     * 00468000
*                                                                     * 00468800
*                                                                     * 00469600
*                                                                     * 00470400
*              COUNT=xcount                                           * 00471200
*                  is the name (RS-type), or address in register      * 00472000
*                  (2)-(12), of a required fullword output which      * 00472800
*                  contains the number of bytes or entries placed in  * 00473600
*                  the Binder's data buffer.                          * 00474400
*                                                                     * 00475200
*                                                                     * 00476000
*                                                                     * 00476800
*          FUNC=GETE                                                  * 00477600
*              Retrieve selected ESD data from the specified WORKMOD. * 00478400
*              GETE is the abbreviation for GETESD.                   * 00479200
*                                                                     * 00480000
*                                                                     * 00480800
*              WORKMOD=xworkmod                                       * 00481600
*                  is the name (RS-type), or address in register      * 00482400
*                  (2)-(12), of a required 8 character input variable * 00483200
*                  that contains the workmod token, which the Binder  * 00484000
*                  returned on a CREATEWMOD request to represent the  * 00484800
*                  workmod. This token must not be modified by the    * 00485600
*                  caller.                                            * 00486400
*                                                                     * 00487200
*                                                                     * 00488000
*                                                                     * 00488800
*                                                                     * 00489600
*              [SECTION=xsection|0]                                 * 00490400
*                  is an optional input.  It is the name (RS-type),   * 00491100
*                  or address in register (2)-(12), of a 1024-byte    * 00491800
*                  varying character string variable which is the     * 00492400
*                  name of the control section or named common to be  * 00493000
*                  processed.                                         * 00493600
*                                                                     * 00494400
*                  The first half word of the string contains a count * 00495200
*                  (0 to 1024) of the number of characters in the     * 00496000
*                  string which follows.                              * 00496800
*                  DEFAULT: 0, signifying a null string which         * 00497600
*                  indicates that all sections are to be processed.   * 00498400
*                                                                     * 00499200
*                                                                     * 00500000
*                                                                     * 00500800
*                                                                     * 00501600
*              [RECTYPE=xrectype|0]                                 * 00502400
*                  is an optional input.  It is the name (RS-type),   * 00503200
*                  or address in register (2)-(12), of a variable     * 00504000
*                  length string containing the list of ESD record    * 00504800
*                  types to be retrieved. The first half word         * 00505600
*                  contains a count of the number of characters in    * 00506400
*                  the following string. A null (zero length) string  * 00507200
*                  causes the Binder to return all ESD types.         * 00508000
*                                                                     * 00508800
*                  The RECTYPE string consists of 1 or two byte ESD   * 00509600
*                  type mnemonics separated by commas with no blanks. * 00510400
*                  The string is delimited by parentheses. E.g        * 00511200
*                  "(CS,ST,U)" requests ESD types CS, ST and U.       * 00512000
*                  DEFAULT: 0, signifying a null string which         * 00512600
*                  indicates that all record types are to be          * 00513200
*                  processed.                                         * 00513800
*                                                                     * 00514400
*                                                                     * 00515200
*                                                                     * 00516000
*                                                                     * 00516800
*              The following is a set of mutually exclusive keys.     * 00517600
*              This set is optional; only one key may be specified.   * 00518400
*                                                                     * 00519200
*                                                                     * 00520000
*              [OFFSET=xoffset|-1                                   * 00520600
*                  belongs to a set of mutually exclusive keys. It is * 00521300
*                  the name (RS-type), or address in register         * 00521800
*                  (2)-(12), of an optional fullword input which      * 00522400
*                  contains the offset within the program or within   * 00523200
*                  the section specified by the SECTION keyword.      * 00524000
*                  DEFAULT: -1, indicating that processing is to      * 00524800
*                  start at the start of the item.                    * 00525600
*                                                                     * 00526400
*              SYMBOL=xsymbol|0]                                    * 00527200
*                  belongs to a set of mutually exclusive keys. It is * 00527800
*                  an optional input.  It is the name (RS-type), or   * 00528400
*                  address in register (2)-(12), of a 1024-byte       * 00529000
*                  varying length character string containing the     * 00529600
*                  symbol to be used.                                 * 00530400
*                                                                     * 00531200
*                  The first half word of the string contains a count * 00532000
*                  (0 to 1024) of the number of characters in the     * 00532800
*                  string which follows.                              * 00533600
*                  DEFAULT: 0, signifying a null string which         * 00534400
*                  indicates that all symbols are to be processed.    * 00535200
*                                                                     * 00536000
*                                                                     * 00536800
*                                                                     * 00537600
*              End of a set of mutually exclusive optional keys.      * 00538400
*              DEFAULT: OFFSET                                        * 00539200
*                                                                     * 00540000
*                                                                     * 00540800
*                                                                     * 00541600
*              AREA=xarea                                             * 00542400
*                  is a required output.  It is the name (RS-type),   * 00543200
*                  or address in register (2)-(12), of a standard     * 00544000
*                  Binder data buffer which will receive the data.    * 00544800
*                                                                     * 00545600
*                                                                     * 00546400
*                                                                     * 00547200
*                                                                     * 00548000
*              CURSOR=xcursor                                         * 00548800
*                  is the name (RS-type), or address in register      * 00549600
*                  (2)-(12), of a required fullword input/output      * 00550400
*                  which contains the relative record number or byte  * 00551200
*                  at which the Binder is to begin processing.        * 00552000
*                  Updated by the Binder on each GETESD request.  A   * 00552800
*                  value of zero indicates the Binder is to start at  * 00553600
*                  the start of the item.                             * 00554400
*                                                                     * 00555200
*                                                                     * 00556000
*                                                                     * 00556800
*                                                                     * 00557600
*              COUNT=xcount                                           * 00558400
*                  is the name (RS-type), or address in register      * 00559200
*                  (2)-(12), of a required fullword output which      * 00560000
*                  contains the number of bytes or entries placed in  * 00560800
*                  the Binder's data buffer.                          * 00561600
*                                                                     * 00561700
*                                                                     * 00561800
*                                                                     * 00561900
*                                                                     * 00562000
*              [CLASS=xclass|0]                                     * 00562100
*                  is an optional input.  It is the name (RS-type),   * 00562200
*                  or address in register (2)-(12), of a 16-byte      * 00562300
*                  varying length character string which is the       * 00562400
*                  Binder data class name.                            * 00562500
*                                                                     * 00562600
*                  The first half word of the string contains a count * 00562700
*                  (1 to 16) of the number of characters in the       * 00562800
*                  string which follows.                              * 00562900
*                  DEFAULT: 0, signifying that CLASS is not a         * 00563000
*                  selection criteria for     .  GETE.                * 00563100
*                                                                     * 00563200
*                                                                     * 00563300
*                                                                     * 00564000
*          FUNC=GETN                                                  * 00564800
*              Retrieve a list of section names from the specified    * 00565600
*              WORKMOD.  GETN is the abbreviation for GETNAMES.       * 00566400
*                                                                     * 00567200
*                                                                     * 00568000
*              WORKMOD=xworkmod                                       * 00568800
*                  is the name (RS-type), or address in register      * 00569600
*                  (2)-(12), of a required 8 character input variable * 00570400
*                  that contains the workmod token, which the Binder  * 00571200
*                  returned on a CREATEWMOD request to represent the  * 00572000
*                  workmod. This token must not be modified by the    * 00572800
*                  caller.                                            * 00573600
*                                                                     * 00574400
*                                                                     * 00575200
*                                                                     * 00576000
*                                                                     * 00576800
*              [AREA=xarea]                                           * 00577600
*                  is an optional output.  It is the name (RS-type),  * 00578400
*                  or address in register (2)-(12), of a standard     * 00579200
*                  Binder data buffer which will receive the data. If * 00580000
*                  omitted, the Binder is only required to fill in    * 00580800
*                  the TCOUNT field with the number of section names  * 00581600
*                  in the workmod.                                    * 00582400
*                                                                     * 00583200
*                                                                     * 00584000
*                                                                     * 00584800
*                                                                     * 00585600
*              CURSOR=xcursor                                         * 00586400
*                  is the name (RS-type), or address in register      * 00587200
*                  (2)-(12), of a required fullword input/output      * 00588000
*                  which contains the relative record number or byte  * 00588800
*                  at which the Binder is to begin processing.        * 00589600
*                  Updated by the Binder on each GETDATA request.  A  * 00590400
*                  value of zero indicates the Binder is to start at  * 00591200
*                  the start of the item.                             * 00592000
*                                                                     * 00592800
*                                                                     * 00593600
*                                                                     * 00594400
*                                                                     * 00595200
*              COUNT=xcount                                           * 00596000
*                  is the name (RS-type), or address in register      * 00596800
*                  (2)-(12), of a required fullword output which      * 00597600
*                  contains number of bytes or entries placed in the  * 00598400
*                  Binder's data buffer.                              * 00599200
*                                                                     * 00600000
*                                                                     * 00600800
*                                                                     * 00601600
*                                                                     * 00602400
*              TCOUNT=xtcount                                         * 00603200
*                  is the name (RS-type), or address in register      * 00603900
*                  (2)-(12), of a required fullword output which      * 00604600
*                  contains the total number of section names in the  * 00605200
*                  workmod.                                           * 00605800
*                                                                     * 00605900
*                                                                     * 00606000
*                                                                     * 00606100
*                                                                     * 00606200
*              [NTYPE=S|C]                                          * 00606300
*                  is an optional keyword input which specifies       * 00606400
*                  whether class names or section names are to be     * 00606500
*                  retrived from Workmod.                             * 00606600
*                  DEFAULT: S                                         * 00606700
*                                                                     * 00606800
*                                                                     * 00606900
*                  NTYPE=S                                            * 00607000
*                      Section names are to be retrived.  S is the    * 00607100
*                      abbreviation for SECTION.                      * 00607200
*                                                                     * 00607300
*                  NTYPE=C                                            * 00607400
*                      Class names are to be retrieved.  C is the     * 00607500
*                      abbreviation for CLASS.                        * 00607600
*                                                                     * 00607700
*                                                                     * 00607800
*                                                                     * 00607900
*                                                                     * 00608000
*                                                                     * 00608100
*          FUNC=IMPORT                                                * 00608200
*              Imports an external symbol from the specified library. * 00608300
*                                                                     * 00608400
*                                                                     * 00608500
*              WORKMOD=xworkmod                                       * 00608600
*                  is the name (RS-type), or address in register      * 00608700
*                  (2)-(12), of a required 8 character input variable * 00608800
*                  that contains the workmod token, which the Binder  * 00608900
*                  returned on a CREATEWMOD request to represent the  * 00609000
*                  workmod. This token must not be modified by the    * 00609100
*                  caller.                                            * 00609200
*                                                                     * 00609300
*                                                                     * 00609400
*                                                                     * 00609500
*                                                                     * 00609600
*              ITYPE=C|D                                            * 00609700
*                  is a required keyword input which indicates the    * 00609800
*                  type of information represented by the imported    * 00609900
*                  symbol.                                            * 00610000
*                                                                     * 00610100
*                                                                     * 00610200
*                  ITYPE=C                                            * 00610300
*                      The symbol represents code.  C is the          * 00610400
*                      abbreviation for code.                         * 00610500
*                                                                     * 00610600
*                  ITYPE=D                                            * 00610700
*                      The symbol represents data.  D is the          * 00610800
*                      abbreviation for data.                         * 00610900
*                                                                     * 00611000
*                                                                     * 00611100
*                                                                     * 00611200
*                                                                     * 00611300
*                                                                     * 00611400
*                                                                     * 00611500
*              DLLNAME=xdllname                                       * 00611600
*                  is a required input.  It is the name (RS-type), or * 00611700
*                  address in register (2)-(12), of a 1024-byte       * 00611800
*                  varying character string variable which represents * 00611900
*                  the member name or alias name of the module        * 00612000
*                  containing the DLL.                                * 00612100
*                                                                     * 00612200
*                  The first half word of the string contains a count * 00612300
*                  (1 to 1024) of the number of characters in the     * 00612400
*                  string which follows.  This count must not be      * 00612500
*                  greater than eight bytes for a directory member or * 00612600
*                  an alias, or 1024 bytes for an HFS path name.      * 00612700
*                                                                     * 00612800
*                                                                     * 00612900
*                                                                     * 00613000
*                                                                     * 00613100
*              INAME=xiname                                           * 00613200
*                  is a required input.  It is the name (RS-type), or * 00613300
*                  address in register (2)-(12), of a 1024-byte       * 00613400
*                  varying character string variable which represents * 00613500
*                  the name of the symbol to be imported.             * 00613600
*                                                                     * 00613700
*                  The first half word of the string contains a count * 00613800
*                  (1 to 1024) of the number of characters in the     * 00613900
*                  string which follows.                              * 00614000
*                                                                     * 00614100
*                                                                     * 00616000
*                                                                     * 00616100
*                                                                     * 00616200
*              The following is a set of mutually exclusive keys.     * 00616300
*              This set is optional; only one key may be specified.   * 00616400
*                                                                     * 00616500
*                                                                     * 00616600
*              [OFFSET=xoffset|0]                                   * 00616700
*                  belongs to a set of mutually exclusive keys. It is * 00616800
*                  the name (RS-type), or address in register         * 00616900
*                  (2)-(12), of an optional fullword input Offset for * 00617000
*                  a function descriptor.                             * 00617100
*                  DEFAULT: 0, indicating that offset not specified.  * 00617200
*                                                                     * 00617300
*                                                                     * 00617400
*                                                                     * 00617500
*              End of a set of mutually exclusive optional keys.      * 00617600
*              DEFAULT: OFFSET                                        * 00617700
*                                                                     * 00617800
*                                                                     * 00617900
*          FUNC=INCLUDE                                               * 00618000
*              Include an external file into the specified WORKMOD.   * 00618100
*                                                                     * 00618200
*                                                                     * 00618300
*              WORKMOD=xworkmod                                       * 00618400
*                  is the name (RS-type), or address in register      * 00618500
*                  (2)-(12), of a required 8 character input variable * 00618600
*                  that contains the workmod token, which the Binder  * 00618700
*                  returned on a CREATEWMOD request to represent the  * 00618800
*                  workmod. This token must not be modified by the    * 00618900
*                  caller.                                            * 00619000
*                                                                     * 00619100
*                                                                     * 00619200
*                                                                     * 00619300
*                                                                     * 00620000
*              INTYPE=D|N|P|S|T                                     * 00620800
*                  is a required keyword input which indicates how    * 00621600
*                  the Binder is to find the input program.           * 00622400
*                                                                     * 00623200
*                                                                     * 00624000
*                  INTYPE=D                                           * 00624100
*                      An external file contains the program and      * 00624200
*                      control statements to be included. DDNAME and  * 00624300
*                      DEPTR must be specified on the call.  The      * 00624400
*                      directory entry is in PDS2 format.  D is the   * 00624500
*                      abbreviation for DEPTR.                        * 00624600
*                                                                     * 00624700
*                                                                     * 00624800
*                      The following is a set of mutually exclusive   * 00625000
*                      keys.  This set is required; only one key must * 00625200
*                      be specified.                                  * 00625400
*                                                                     * 00625700
*                                                                     * 00625800
*                      DDNAME=xddname                                 * 00625900
*                          belongs to a set of mutually exclusive     * 00626000
*                          keys. It is an input.  It is the name      * 00626100
*                          (RS-type), or address in register          * 00626200
*                          (2)-(12), of an 8-byte varying length      * 00626300
*                          character string which contains the ddname * 00626400
*                          of the library containing the program and  * 00626500
*                          control statements to be included into the * 00626600
*                          workmod.  workmod.                         * 00626700
*                                                                     * 00626900
*                          The first half word of the string contains * 00627000
*                          a count (1 to 8) of the number of          * 00627100
*                          characters in the string which follows.    * 00627200
*                                                                     * 00627300
*                                                                     * 00627400
*                                                                     * 00627500
*                      End of a set of mutually exclusive required    * 00627600
*                      keys.                                          * 00627700
*                                                                     * 00627800
*                                                                     * 00627900
*                                                                     * 00628000
*                      DEPTR=xdeptr                                   * 00628100
*                          is the name (RS-type), or address in       * 00628200
*                          register (2)-(12), of a required 4 byte    * 00628300
*                          input that contains the address which      * 00628400
*                          contains the address of a PDS2 format      * 00628500
*                          directory entry of the member to be        * 00628600
*                          included into the workmod.                 * 00628700
*                                                                     * 00628800
*                                                                     * 00628900
*                                                                     * 00629000
*                  INTYPE=N                                           * 00629100
*                      An external file contains the program and      * 00629200
*                      control statements to be included. DDNAME and, * 00629300
*                      if the file is a library, MEMBER keywords must * 00629400
*                      be specified on the call.  N is the            * 00629500
*                      abbreviation for NAME.                         * 00629600
*                                                                     * 00629700
*                                                                     * 00630400
*                      The following is a set of mutually exclusive   * 00630500
*                      keys.  This set is required; only one key must * 00630600
*                      be specified.                                  * 00630700
*                                                                     * 00630800
*                                                                     * 00630900
*                      DDNAME=xddname                                 * 00631200
*                          belongs to a set of mutually exclusive     * 00631800
*                          keys. It is an input.  It is the name      * 00632400
*                          (RS-type), or address in register          * 00633000
*                          (2)-(12), of key                           * 00633600
*                                                                     * 00634200
*                          It is an 8-byte varying length character   * 00634800
*                          string containing the ddname of the        * 00635400
*                          sequential data set or library containing  * 00636000
*                          the program and control statements to be   * 00636600
*                          included into the workmod. If the data set * 00637200
*                          is a library then the MEMBER keyword is    * 00637800
*                          also required.                             * 00638400
*                                                                     * 00639200
*                          The first half word of the string contains * 00640000
*                          a count (1 to 8) of the number of          * 00640800
*                          characters in the string which follows.    * 00641600
*                                                                     * 00642400
*                                                                     * 00643200
*                          [MEMBER=xmember|0]                       * 00643500
*                              is an optional input.  It is the name  * 00643800
*                              (RS-type), or address in register      * 00644100
*                              (2)-(12), of a 1024-byte varying       * 00644400
*                              length character string containing the * 00644700
*                              member name or alias name of the       * 00645000
*                              member to be included into the         * 00645300
*                              workmod.  MEMBER is only required when * 00645600
*                              DDNAME is specified and DDNAME refers  * 00645900
*                              to a library.                          * 00646200
*                                                                     * 00646500
*                              The first half word of the string      * 00646800
*                              contains a count (0 to 1024) of the    * 00647100
*                              number of characters in the string     * 00647400
*                              which follows.                         * 00647700
*                              DEFAULT: 0, signifying a null string   * 00648000
*                              which indicates that DDNAME refers to  * 00648300
*                              a sequential file.                     * 00648600
*                                                                     * 00648900
*                                                                     * 00649200
*                                                                     * 00649500
*                      PATHNAME=xpathname                             * 00649800
*                          belongs to a set of mutually exclusive     * 00650100
*                          keys. It is an input.  It is the name      * 00650400
*                          (RS-type), or address in register          * 00650700
*                          (2)-(12), of a key                         * 00651000
*                                                                     * 00651300
*                          It is a 1024-byte varying length character * 00651600
*                          string containing the HFS path name to be  * 00651900
*                          used for automatic library calls.          * 00652200
*                                                                     * 00652800
*                          The first half word of the string contains * 00653600
*                          a count (0 to 1024) of the number of       * 00654400
*                          characters in the string which follows.    * 00655200
*                                                                     * 00658400
*                                                                     * 00658500
*                                                                     * 00658600
*                      End of a set of mutually exclusive required    * 00658700
*                      keys.                                          * 00658800
*                                                                     * 00659200
*                                                                     * 00660000
*                  INTYPE=P                                           * 00660800
*                      An external file contains the program and      * 00661600
*                      control statements to be included. DCBPTR and  * 00662400
*                      DEPTR must be specified on the call.  The      * 00663000
*                      directory entry is in PDS2 BLDL format.  P is  * 00663600
*                      the abbreviation for POINTER.                  * 00664200
*                                                                     * 00664800
*                                                                     * 00665600
*                      DCBPTR=xdcbptr                                 * 00666400
*                          is the name (RS-type), or address in       * 00667200
*                          register (2)-(12), of a required 4 byte    * 00668000
*                          input that contains the address which      * 00668800
*                          contains the address of a DCB which has    * 00669600
*                          been opened for a library containing the   * 00670400
*                          program to be included into the workmod.   * 00671200
*                                                                     * 00672000
*                                                                     * 00672800
*                                                                     * 00673600
*                                                                     * 00674400
*                      DEPTR=xdeptr                                   * 00675200
*                          is the name (RS-type), or address in       * 00676000
*                          register (2)-(12), of a required 4 byte    * 00676800
*                          input that contains the address which      * 00677600
*                          contains the address of a PDS2 format (as  * 00678400
*                          returned by BLDL) directory entry of the   * 00679200
*                          member to be included into the workmod.    * 00680000
*                                                                     * 00680800
*                                                                     * 00681600
*                                                                     * 00682400
*                  INTYPE=S                                           * 00682500
*                      An external file contains the program and      * 00682600
*                      control statements to be included. DDNAME and  * 00682700
*                      DEPTR must be specified on the call.  The      * 00682800
*                      directory entry is in SMDE format.  S is the   * 00682900
*                      abbreviation for SMDE.                         * 00683000
*                                                                     * 00683100
*                                                                     * 00683200
*                      The following is a set of mutually exclusive   * 00683400
*                      keys.  This set is required; only one key must * 00683600
*                      be specified.                                  * 00683800
*                                                                     * 00684100
*                                                                     * 00684200
*                      DDNAME=xddname                                 * 00684300
*                          belongs to a set of mutually exclusive     * 00684400
*                          keys. It is an input.  It is the name      * 00684500
*                          (RS-type), or address in register          * 00684600
*                          (2)-(12), of an 8-byte varying length      * 00684700
*                          character string which contains the ddname * 00684800
*                          of the library containing the program and  * 00684900
*                          control statements to be included into the * 00685000
*                          workmod.  workmod.                         * 00685100
*                                                                     * 00685300
*                          The first half word of the string contains * 00685400
*                          a count (1 to 8) of the number of          * 00685500
*                          characters in the string which follows.    * 00685600
*                                                                     * 00685700
*                                                                     * 00685800
*                                                                     * 00685900
*                      End of a set of mutually exclusive required    * 00686000
*                      keys.                                          * 00686100
*                                                                     * 00686200
*                                                                     * 00686300
*                                                                     * 00686400
*                      DEPTR=xdeptr                                   * 00686500
*                          is the name (RS-type), or address in       * 00686600
*                          register (2)-(12), of a required 4 byte    * 00686700
*                          input that contains the address which      * 00686800
*                          contains the address of a SMDE format      * 00686900
*                          directory entry of the member to be        * 00687000
*                          included into the workmod.                 * 00687100
*                                                                     * 00687200
*                                                                     * 00687300
*                                                                     * 00687400
*                  INTYPE=T                                           * 00687500
*                      The program is already loaded into storage.    * 00687600
*                      EPTOKEN keyword must be specified on the call. * 00687700
*                      T is the abbreviation for TOKEN.               * 00687800
*                                                                     * 00687900
*                                                                     * 00688000
*                      EPTOKEN=xeptoken                               * 00688100
*                          is the name (RS-type), or address in       * 00688800
*                          register (2)-(12), of a required 4         * 00689500
*                          character input value which is the EPTOKEN * 00690200
*                          returned by the CSVQUERY service. The      * 00690900
*                          EPTOKEN represents the program to be       * 00691600
*                          included into the workmod.                 * 00692300
*                                                                     * 00693600
*                                                                     * 00694400
*                                                                     * 00695200
*                                                                     * 00696000
*                                                                     * 00708800
*                                                                     * 00709600
*                                                                     * 00710400
*                                                                     * 00711200
*              [ATTRIB=N|Y]                                         * 00712000
*                  is an optional keyword input which indicates       * 00712800
*                  whether or not the program attributes are to be    * 00713600
*                  included by INCLUDE as well as the program itself. * 00714400
*                  DEFAULT: N                                         * 00715200
*                                                                     * 00716000
*                                                                     * 00716800
*                  ATTRIB=N                                           * 00717400
*                      program attributes will not be included as     * 00718000
*                      well as the program.  included. DDNAME and, if * 00718600
*                      the file is a library, MEMBER keywords must be * 00719200
*                      specified on the call.  N is the abbreviation  * 00719800
*                      for NO.                                        * 00720400
*                                                                     * 00721600
*                  ATTRIB=Y                                           * 00722400
*                      program attributes will be included as well as * 00723200
*                      the program.  Y is the abbreviation for YES.   * 00724000
*                                                                     * 00724800
*                                                                     * 00725600
*                                                                     * 00726400
*                                                                     * 00727200
*                                                                     * 00728000
*                                                                     * 00728800
*              [ALIASES=N|Y]                                        * 00729600
*                  is an optional keyword input which indicates       * 00730400
*                  whether or not the program aliases are to be       * 00731200
*                  included by INCLUDE as well as the program name.   * 00732000
*                  DEFAULT: N                                         * 00732800
*                                                                     * 00733600
*                                                                     * 00734400
*                  ALIASES=N                                          * 00735000
*                      program alias names will not be included as    * 00735600
*                      well as the program name.  N is the            * 00736200
*                      abbreviation for NO.                           * 00736800
*                                                                     * 00737600
*                  ALIASES=Y                                          * 00738200
*                      program alias names will be included as well   * 00738800
*                      as the program name.  Y is the abbreviation    * 00739400
*                      for YES.                                       * 00740000
*                                                                     * 00740800
*                                                                     * 00741600
*                                                                     * 00742400
*                                                                     * 00743200
*                                                                     * 00744000
*          FUNC=INSERTS                                               * 00744800
*              Insert control section in a segment.  INSERTS is the   * 00745600
*              abbreviation for INSERTSECT.                           * 00746400
*                                                                     * 00747200
*                                                                     * 00748000
*              WORKMOD=xworkmod                                       * 00748800
*                  is the name (RS-type), or address in register      * 00749600
*                  (2)-(12), of a required 8 character input variable * 00750400
*                  that contains the workmod token, which the Binder  * 00751200
*                  returned on a CREATEWMOD request to represent the  * 00752000
*                  workmod. This token must not be modified by the    * 00752800
*                  caller.                                            * 00753600
*                                                                     * 00754400
*                                                                     * 00755200
*                                                                     * 00756000
*                                                                     * 00756800
*              SECTION=xsection                                       * 00757600
*                  is a required input.  It is the name (RS-type), or * 00758400
*                  address in register (2)-(12), of a 1024-byte       * 00759200
*                  varying length character string variable which is  * 00760000
*                  the name of the control section or named common to * 00760800
*                  be inserted in the program.                        * 00761600
*                                                                     * 00762400
*                  The first half word of the string contains a count * 00763200
*                  (1 to 1024) of the number of characters in the     * 00764000
*                  string which follows.                              * 00764800
*                                                                     * 00765600
*                                                                     * 00766400
*                                                                     * 00767200
*          FUNC=LOADW                                                 * 00768000
*              Load the specified WORKMOD into storage for execution. * 00768800
*              LOADW is the abbreviation for LOADWMOD.                * 00769600
*                                                                     * 00770400
*                                                                     * 00771200
*              WORKMOD=xworkmod                                       * 00772000
*                  is the name (RS-type), or address in register      * 00772800
*                  (2)-(12), of a required 8 character input variable * 00773600
*                  that contains the workmod token, which the Binder  * 00774400
*                  returned on a CREATEWMOD request to represent the  * 00775200
*                  workmod. This token must not be modified by the    * 00776000
*                  caller.                                            * 00776800
*                                                                     * 00777600
*                                                                     * 00778400
*                                                                     * 00779200
*                                                                     * 00780000
*              EPLOC=xeploc                                           * 00780800
*                  is the name (RS-type), or address in register      * 00781600
*                  (2)-(12), of a required 4 byte output that will    * 00782400
*                  contain the address which contains the value which * 00783000
*                  is the address of the entry point returned by the  * 00783600
*                  Binder.                                            * 00784200
*                                                                     * 00784800
*                                                                     * 00785600
*                                                                     * 00786400
*                                                                     * 00787200
*              IDENTIFY=N|Y                                         * 00788000
*                  is a required keyword input which indicates        * 00788800
*                  whether the program is to be identified to         * 00789600
*                  Contents Supervisor on a LOADWMOD request.         * 00790400
*                                                                     * 00791200
*                                                                     * 00792000
*                  IDENTIFY=N                                         * 00792800
*                      The Binder will not use the IDENTIFY macro to  * 00793600
*                      make the program known to Contents Supervisor. * 00794400
*                      The addresses of storage occupied by the       * 00795200
*                      program will be returned via the required      * 00796000
*                      EXTLST parameter. The caller must freemain the * 00796800
*                      program storage when it is no longer needed.   * 00797600
*                      N is the abbreviation for NO.                  * 00798400
*                                                                     * 00799200
*                                                                     * 00800000
*                      EXTLST=xextlst                                 * 00800800
*                          is a required output.  It is the name      * 00801600
*                          (RS-type), or address in register          * 00802400
*                          (2)-(12), of a standard Binder data buffer * 00803200
*                          which will contain the extent list of the  * 00804000
*                          loaded program.                            * 00804800
*                                                                     * 00805600
*                                                                     * 00806400
*                                                                     * 00807200
*                  IDENTIFY=Y                                         * 00808000
*                      The Binder should issue the IDENTIFY macro.    * 00808800
*                      The name by which the program is to be known   * 00809600
*                      to Contents Supervisor may be passed via the   * 00810400
*                      optional LNAME parameter.  The addresses of    * 00811200
*                      storage occupied by the program may be         * 00812000
*                      returned via the optional EXTLST parameter.    * 00812800
*                      Contents Supervisor will cleanup program       * 00813600
*                      storage when it is no longer needed.  Y is the * 00814400
*                      abbreviation for YES.                          * 00815200
*                                                                     * 00816000
*                                                                     * 00816800
*                      [EXTLST=xextlst]                               * 00817600
*                          is an optional output.  It is the name     * 00818400
*                          (RS-type), or address in register          * 00819200
*                          (2)-(12), of a standard Binder data buffer * 00820000
*                          which will contain the extent list of the  * 00820800
*                          loaded program.                            * 00821600
*                                                                     * 00822400
*                                                                     * 00823200
*                                                                     * 00824000
*                                                                     * 00824800
*                      [LNAME=xlname|0]                             * 00825600
*                          is an optional input.  It is the name      * 00826400
*                          (RS-type), or address in register          * 00827200
*                          (2)-(12), of an 8-byte varying length      * 00828000
*                          character string which contains the name   * 00828800
*                          to be used by the Binder to identify the   * 00829600
*                          program to Contents Supervisor.            * 00830400
*                                                                     * 00831200
*                          The first half word of the string contains * 00832000
*                          a count (0 to 8) of the number of          * 00832800
*                          characters in the string which follows.    * 00833600
*                          DEFAULT: 0, signifying a null string which * 00834400
*                          indicates that the Binder takes the        * 00835200
*                          program name from the program's options or * 00836000
*                          uses the name "**GO" for the program.      * 00836800
*                                                                     * 00837600
*                                                                     * 00838400
*                                                                     * 00839200
*                                                                     * 00840000
*                                                                     * 00840800
*                                                                     * 00841600
*                                                                     * 00842400
*          FUNC=ORDERS                                                * 00843200
*              Specify section sequence within the WORKMOD.  ORDERS   * 00844000
*              is the abbreviation for ORDERSECT.                     * 00844800
*                                                                     * 00845600
*                                                                     * 00846400
*              WORKMOD=xworkmod                                       * 00847200
*                  is the name (RS-type), or address in register      * 00848000
*                  (2)-(12), of a required 8 character input variable * 00848800
*                  that contains the workmod token, which the Binder  * 00849600
*                  returned on a CREATEWMOD request to represent the  * 00850400
*                  workmod. This token must not be modified by the    * 00851200
*                  caller.                                            * 00852000
*                                                                     * 00852800
*                                                                     * 00853600
*                                                                     * 00854400
*                                                                     * 00855200
*              SECTION=xsection                                       * 00856000
*                  is a required input.  It is the name (RS-type), or * 00856800
*                  address in register (2)-(12), of a 1024-byte       * 00857600
*                  varying length character string variable which is  * 00858400
*                  the name of the control section or named common to * 00859200
*                  be reordered in the workmod.                       * 00860000
*                                                                     * 00860800
*                  The first half word of the string contains a count * 00861600
*                  (1 to 1024) of the number of characters in the     * 00862400
*                  string which follows.                              * 00863200
*                                                                     * 00864000
*                                                                     * 00864800
*                                                                     * 00865600
*          FUNC=PUTD                                                  * 00866400
*              Store buffer data in the specified WORKMOD.  PUTD is   * 00867200
*              the abbreviation for PUTDATA.                          * 00868000
*                                                                     * 00868800
*                                                                     * 00869600
*              WORKMOD=xworkmod                                       * 00870400
*                  is the name (RS-type), or address in register      * 00871200
*                  (2)-(12), of a required 8 character input variable * 00872000
*                  that contains the workmod token, which the Binder  * 00872800
*                  returned on a CREATEWMOD request to represent the  * 00873600
*                  workmod. This token must not be modified by the    * 00874400
*                  caller.                                            * 00875200
*                                                                     * 00876000
*                                                                     * 00876800
*                                                                     * 00877600
*                                                                     * 00878400
*              CLASS=xclass                                           * 00879200
*                  is a required input.  It is the name (RS-type), or * 00880000
*                  address in register (2)-(12), of a 16-byte varying * 00880800
*                  length character string which is the Binder data   * 00881600
*                  class name.                                        * 00882400
*                                                                     * 00883200
*                  The first half word of the string contains a count * 00884000
*                  (1 to 16) of the number of characters in the       * 00884800
*                  string which follows.                              * 00885600
*                                                                     * 00886400
*                                                                     * 00887200
*                                                                     * 00888000
*                                                                     * 00888800
*              [SECTION=xsection|0]                                 * 00889600
*                  is an optional input.  It is the name (RS-type),   * 00890400
*                  or address in register (2)-(12), of a 1024-byte    * 00891200
*                  varying length character string variable which is  * 00892000
*                  the name of the section to be processed.           * 00892800
*                                                                     * 00893600
*                  The first half word of the string contains a count * 00894400
*                  (1 to 1024) of the number of characters in the     * 00895200
*                  string which follows.                              * 00896000
*                  DEFAULT: 0, signifying a null string which         * 00896200
*                  indicates that all sections are to be processed.   * 00896400
*                                                                     * 00896800
*                                                                     * 00897600
*                                                                     * 00898400
*                                                                     * 00899200
*              [AREA=xarea|0                                        * 00900000
*                  is an optional input.  It is the name (RS-type),   * 00900800
*                  or address in register (2)-(12), of a standard     * 00901600
*                  Binder data buffer which contains the data for the * 00902400
*                  workmod.  The number of data bytes to be used is   * 00903200
*                  specified by COUNT.                                * 00904000
*                  DEFAULT: 0, signifying a zero doubleword           * 00904800
*                  indicating that no data is to be added to the      * 00905600
*                  workmod.  PUTDATA is simply signalling an          * 00906400
*                  end-of-section condition.                          * 00907200
*                                                                     * 00908000
*                                                                     * 00908800
*                  COUNT=xcount]                                      * 00909600
*                      is the name (RS-type), or address in register  * 00910400
*                      (2)-(12), of a required fullword input which   * 00911200
*                      contains the number of bytes or records in the * 00912000
*                      Binder's data buffer which the Binder is to    * 00912800
*                      insert into the workmod.                       * 00913600
*                                                                     * 00914400
*                                                                     * 00915200
*                                                                     * 00916000
*                                                                     * 00916800
*                                                                     * 00917600
*                                                                     * 00918400
*              [CURSOR=xcursor|-1]                                  * 00919200
*                  is the name (RS-type), or address in register      * 00920000
*                  (2)-(12), of an optional fullword input/output     * 00920800
*                  which contains the relative record number or byte  * 00921600
*                  at which the Binder is to store the data. If       * 00922400
*                  CURSOR=0 the Binder stores the data at the start   * 00923200
*                  of the item. If CURSOR=-1, the Binder stores the   * 00924000
*                  data at the end of the item.                       * 00924800
*                  DEFAULT: -1, meaning the Binder is to start at the * 00925600
*                  end.                                               * 00926400
*                                                                     * 00927200
*                                                                     * 00928000
*                                                                     * 00928800
*                                                                     * 00929600
*              [NEWSECT=N|Y]                                        * 00930400
*                  is an optional keyword input which indicates       * 00931200
*                  whether or not new sections are being added to the * 00932000
*                  workmod on a PUTDATA request. Once NEWSECT=YES has * 00932800
*                  been passed, all subsequent PUTDATA requests must  * 00933600
*                  also specify NEWSECT=YES until ENDDATA=YES has     * 00934400
*                  been specified.                                    * 00935200
*                  DEFAULT: N                                         * 00936000
*                                                                     * 00936800
*                                                                     * 00937600
*                  NEWSECT=N                                          * 00938200
*                      Data is to be added to existing sections.  N   * 00938800
*                      is the abbreviation for NO.                    * 00939400
*                                                                     * 00940000
*                  NEWSECT=Y                                          * 00940600
*                      New sections are to be added to the workmod.   * 00941200
*                      Y is the abbreviation for YES.                 * 00941800
*                                                                     * 00942400
*                                                                     * 00943200
*                                                                     * 00944000
*                                                                     * 00944800
*                                                                     * 00945600
*                                                                     * 00946400
*              [ENDDATA=N|Y]                                        * 00947200
*                  is an optional keyword input which indicates all   * 00948000
*                  sections being added by the current series of      * 00948800
*                  PUTDATA requests are complete. The Binder performs * 00949600
*                  validity checks on the RLD and ESD data which was  * 00950400
*                  added.                                             * 00951200
*                  DEFAULT: N                                         * 00952000
*                                                                     * 00952800
*                                                                     * 00953600
*                  ENDDATA=N                                          * 00954200
*                      New sections have not been completed.  N is    * 00954800
*                      the abbreviation for NO.                       * 00955400
*                                                                     * 00956000
*                  ENDDATA=Y                                          * 00956600
*                      New sections are complete and the Binder is to * 00957200
*                      validity check them.  Y is the abbreviation    * 00957800
*                      for YES.                                       * 00958400
*                                                                     * 00959200
*                                                                     * 00960000
*                                                                     * 00960100
*                                                                     * 00960200
*                                                                     * 00960300
*          FUNC=RENAME                                                * 00960400
*              Specify that an external symbol and section(s) are to  * 00960500
*              be renamed.  All references to OLDNAME are changed to  * 00960600
*              refer to NEWNAME.  Any sections named OLDNAME are      * 00960700
*              renamed to NEWNAME.                                    * 00960800
*                                                                     * 00960900
*                                                                     * 00961000
*              WORKMOD=xworkmod                                       * 00961100
*                  is the name (RS-type), or address in register      * 00961200
*                  (2)-(12), of a required 8 character input variable * 00961300
*                  that contains the workmod token, which the Binder  * 00961400
*                  returned on a CREATEWMOD request to represent the  * 00961500
*                  workmod. This token must not be modified by the    * 00961600
*                  caller.                                            * 00961700
*                                                                     * 00961800
*                                                                     * 00961900
*                                                                     * 00962000
*                                                                     * 00962100
*              OLDNAME=xoldname                                       * 00962200
*                  is a required input.  It is the name (RS-type), or * 00962300
*                  address in register (2)-(12), of a 1024 byte       * 00962400
*                  varying length character string.  This variable    * 00962500
*                  contains the symbol to be renamed.                 * 00962600
*                                                                     * 00962700
*                  The first half word of the string contains a count * 00962800
*                  (1 to 1024) of the number of characters in the     * 00962900
*                  string which follows.                              * 00963000
*                                                                     * 00963100
*                                                                     * 00963200
*                                                                     * 00963300
*                                                                     * 00963400
*              NEWNAME=xnewname                                       * 00963500
*                  is a required input.  It is the name (RS-type), or * 00963600
*                  address in register (2)-(12), of a 1024-byte       * 00963700
*                  varying-length character string.  This variable    * 00963800
*                  contains the name to which the old name is to be   * 00963900
*                  changed.                                           * 00964000
*                                                                     * 00964100
*                  The first half word of the string contains a count * 00964200
*                  (0 to 1024) of the number of characters in the     * 00964300
*                  string which follows.                              * 00964400
*                                                                     * 00964500
*                                                                     * 00964600
*                                                                     * 00964700
*          FUNC=RESETW                                                * 00964800
*              Reset the specified WORKMOD to empty state.  RESETW is * 00964900
*              the abbreviation for RESETWMOD.                        * 00965000
*                                                                     * 00965600
*                                                                     * 00966400
*              WORKMOD=xworkmod                                       * 00967200
*                  is the name (RS-type), or address in register      * 00968000
*                  (2)-(12), of a required 8 character input variable * 00968800
*                  that contains the workmod token, which the Binder  * 00969600
*                  returned on a CREATEWMOD request to represent the  * 00970400
*                  workmod. This token must not be modified by the    * 00971200
*                  caller.                                            * 00972000
*                                                                     * 00972800
*                                                                     * 00973600
*                                                                     * 00974400
*                                                                     * 00975200
*              INTENT=B|A                                           * 00976000
*                  is a required keyword input which indicates        * 00976800
*                  whether or not a BIND will be requested for the    * 00977600
*                  workmod when it is built.  Processing intent       * 00978400
*                  determines the range of Binder functions which can * 00979200
*                  be requested for the Workmod.                      * 00980000
*                                                                     * 00980800
*                                                                     * 00981600
*                  INTENT=B                                           * 00982400
*                      Indicates a BIND will be performed on the      * 00983200
*                      program.  B is the abbreviation for BIND.      * 00984000
*                                                                     * 00984800
*                  INTENT=A                                           * 00985400
*                      Specifies that the workmod will be accessed    * 00986000
*                      but not bound.  A is the abbreviation for      * 00986600
*                      ACCESS.                                        * 00987200
*                                                                     * 00988000
*                                                                     * 00988800
*                                                                     * 00989600
*                                                                     * 00990400
*                                                                     * 00991200
*                                                                     * 00992000
*              [PROTECT=Y|N]                                        * 00992800
*                  is an optional keyword input which specifies       * 00993600
*                  whether or not the Binder will be allowed to       * 00994400
*                  delete an altered program.                         * 00995200
*                  DEFAULT: Y                                         * 00996000
*                                                                     * 00996800
*                                                                     * 00997600
*                  PROTECT=Y                                          * 00998400
*                      Prevents the Binder from deleting altered      * 00999200
*                      programs.  Y is the abbreviation for YES.      * 01000000
*                                                                     * 01000800
*                  PROTECT=N                                          * 01001400
*                      The Binder is allowed to delete altered        * 01002000
*                      programs..  N is the abbreviation for NO.      * 01002600
*                                                                     * 01003200
*                                                                     * 01004000
*                                                                     * 01004800
*                                                                     * 01005600
*                                                                     * 01006400
*          FUNC=SAVEW                                                 * 01007200
*              Save WORKMOD in program library.  SAVEW is the         * 01008000
*              abbreviation for SAVEWMOD.                             * 01008800
*                                                                     * 01009600
*                                                                     * 01010400
*              WORKMOD=xworkmod                                       * 01011200
*                  is the name (RS-type), or address in register      * 01012000
*                  (2)-(12), of a required 8 character input variable * 01012800
*                  that contains the workmod token, which the Binder  * 01013600
*                  returned on a CREATEWMOD request to represent the  * 01014400
*                  workmod. This token must not be modified by the    * 01015200
*                  caller.                                            * 01016000
*                                                                     * 01016800
*                                                                     * 01017600
*                                                                     * 01018400
*                                                                     * 01019200
*              [MODLIB=xmodlib|0]                                   * 01020000
*                  is an optional input.  It is the name (RS-type),   * 01020800
*                  or address in register (2)-(12), of an 8-byte      * 01021600
*                  varying character string which contains the ddname * 01022400
*                  of the target library for a SAVEWMOD request.      * 01023200
*                                                                     * 01024000
*                  The first half word of the string contains a count * 01024800
*                  (0 to 8) of the number of characters in the string * 01025600
*                  which follows.                                     * 01026400
*                  DEFAULT: 0, signifying a null string which         * 01027200
*                  indicates the Binder is to use the ddname          * 01028000
*                  specified in the MODLIB option set at STARTDIALOG  * 01028800
*                  or SETOPTIONS time.                                * 01029600
*                                                                     * 01030400
*                                                                     * 01031200
*                                                                     * 01032000
*                                                                     * 01032800
*              [SNAME=xsname|0]                                     * 01033600
*                  is an optional input.  It is the name (RS-type),   * 01034400
*                  or address in register (2)-(12), of an 8-byte      * 01035200
*                  varying character string which contains the        * 01036000
*                  program name to be used for a SAVEWMOD request.    * 01036800
*                                                                     * 01037600
*                  The first half word of the string contains a count * 01038400
*                  (0 to 8) of the number of characters in the string * 01039200
*                  which follows.                                     * 01040000
*                  DEFAULT: 0, signifying a null string which         * 01040800
*                  indicates that the Binder is to use the member     * 01041600
*                  name appearing on the MODLIB dd statement or else  * 01042400
*                  use the member name specified in the SNAME option  * 01043200
*                  set at SETOPTIONS time.                            * 01044000
*                                                                     * 01044800
*                                                                     * 01045600
*                                                                     * 01046400
*                                                                     * 01047200
*              [REPLACE=N|Y]                                        * 01048000
*                  is an optional keyword input which indicates       * 01048800
*                  whether or not the program will replace a like     * 01049600
*                  named existing program.                            * 01050400
*                  DEFAULT: N                                         * 01051200
*                                                                     * 01052000
*                                                                     * 01052800
*                  REPLACE=N                                          * 01053400
*                      The program will not be allowed to replace any * 01054000
*                      like named program.  N is the abbreviation for * 01054600
*                      NO.                                            * 01055200
*                                                                     * 01056000
*                  REPLACE=Y                                          * 01056600
*                      The program will replace any like named        * 01057200
*                      program.  Y is the abbreviation for YES.       * 01057800
*                                                                     * 01058400
*                                                                     * 01059200
*                                                                     * 01060000
*                                                                     * 01060800
*                                                                     * 01061600
*          FUNC=SETL                                                  * 01062400
*              Specify autocall library.  SETL is the abbreviation    * 01063200
*              for SETLIB.                                            * 01064000
*                                                                     * 01064800
*                                                                     * 01065600
*              WORKMOD=xworkmod                                       * 01066400
*                  is the name (RS-type), or address in register      * 01067200
*                  (2)-(12), of a required 8 character input variable * 01068000
*                  that contains the workmod token, which the Binder  * 01068800
*                  returned on a CREATEWMOD request to represent the  * 01069600
*                  workmod. This token must not be modified by the    * 01070400
*                  caller.                                            * 01071200
*                                                                     * 01072000
*                                                                     * 01072800
*                                                                     * 01073600
*                                                                     * 01074400
*              SYMBOL=xsymbol                                         * 01075200
*                  is a required input.  It is the name (RS-type), or * 01075900
*                  address in register (2)-(12), of a 1024-byte       * 01076600
*                  varying length character string containing the     * 01077200
*                  symbol for which special processing is being       * 01077800
*                  specified.                                         * 01078400
*                                                                     * 01079200
*                  The first half word of the string contains a count * 01080000
*                  (1 to 1024) of the number of characters in the     * 01080800
*                  string which follows.                              * 01081600
*                                                                     * 01082400
*                                                                     * 01083200
*                                                                     * 01084000
*                                                                     * 01084800
*              [LIBOPT=C|N|E]                                       * 01085600
*                  is an optional keyword input which controls which  * 01086400
*                  library is to be searched to locate the symbol     * 01087200
*                  specified on the SYMBOL parameter.                 * 01088000
*                  DEFAULT: C                                         * 01088800
*                                                                     * 01089600
*                                                                     * 01090400
*                  LIBOPT=C                                           * 01091000
*                      The library specified by CALLIB will be used.  * 01091600
*                      C is the abbreviation for CALL.                * 01092200
*                                                                     * 01092800
*                  LIBOPT=N                                           * 01093600
*                      No libraries are to be searched for the symbol * 01094400
*                      during the current invocation of the Binder.   * 01095200
*                      N is the abbreviation for NOCALL.              * 01096000
*                                                                     * 01096800
*                  LIBOPT=E                                           * 01097400
*                      No libraries are to be searched for the symbol * 01098000
*                      during this or any subsequent Binder           * 01098600
*                      invocations.  E is the abbreviation for        * 01099200
*                      EXCLUDE.                                       * 01099800
*                                                                     * 01100800
*                                                                     * 01101600
*                                                                     * 01102400
*                                                                     * 01103200
*                                                                     * 01104000
*                                                                     * 01104800
*              The following is a set of mutually exclusive keys.     * 01105000
*              This set is optional; only one key may be specified.   * 01105200
*                                                                     * 01105400
*                                                                     * 01105600
*              [CALLIB=xcallib|0                                    * 01106000
*                  belongs to a set of mutually exclusive keys. It is * 01106400
*                  an optional input.  It is the name (RS-type), or   * 01107000
*                  address in register (2)-(12), of an 8-byte varying * 01107600
*                  length character string which is the ddname of a   * 01108200
*                  library to be used for automatic library calls to  * 01108800
*                  resolve the symbol.                                * 01109400
*                                                                     * 01110400
*                  The first half word of the string contains a count * 01111200
*                  (0 to 8) of the number of characters in the string * 01112000
*                  which follows.                                     * 01112800
*                  DEFAULT: 0, signifying a null string which         * 01113600
*                  indicates that no call library is to be used. This * 01114400
*                  is only valid when LIBOPT=NOCALL or LIBOPT=EXCLUDE * 01115200
*                  has been specified.                                * 01116000
*                                                                     * 01116800
*              PATHNAME=xpathname|EITHER]                           * 01116900
*                  belongs to a set of mutually exclusive keys. It is * 01117000
*                  an optional input.  It is the name (RS-type), or   * 01117100
*                  address in register (2)-(12), of a 1024-byte       * 01117200
*                  varying length character string containing the HFS * 01117300
*                  path name to be used for automatic library calls.  * 01117400
*                                                                     * 01117500
*                  The first half word of the string contains a count * 01117600
*                  (0 to 1024) of the number of characters in the     * 01117700
*                  string which follows.                              * 01117800
*                  DEFAULT: EITHER CALLIB or PATHNAME must be         * 01117900
*                  supplied when LIBOPT=CALL.  These parameters are   * 01118000
*                  ignored when LIBOPT=NOCALL or LIBOPT=EXCLUDE has   * 01118100
*                  been specified.                                    * 01118200
*                                                                     * 01118300
*                                                                     * 01118400
*                                                                     * 01118500
*              End of a set of mutually exclusive optional keys.      * 01118600
*              DEFAULT: CALLIB                                        * 01118700
*                                                                     * 01118800
*                                                                     * 01118900
*          FUNC=SETO                                                  * 01119200
*              Specify binder options.  SETO is the abbreviation for  * 01120000
*              SETOPTIONS.                                            * 01120800
*                                                                     * 01121600
*                                                                     * 01122400
*              The following is a set of mutually exclusive keys.     * 01123200
*              This set is required; only one key must be specified.  * 01124000
*                                                                     * 01124800
*                                                                     * 01125600
*              DIALOG=xdialog                                         * 01126400
*                  belongs to a set of mutually exclusive keys. It is * 01127300
*                  an input.  It is the name (RS-type), or address in * 01128200
*                  register (2)-(12), of an 8-byte character string   * 01129100
*                  which is the dialog token representing the Binder  * 01130000
*                  dialog. The Binder returns this token on a         * 01130900
*                  STARTDIALOG request. The caller must not alter the * 01131800
*                  dialog token.                                      * 01132700
*                                                                     * 01133600
*              WORKMOD=xworkmod                                       * 01134400
*                  belongs to a set of mutually exclusive keys. It is * 01135200
*                  the name (RS-type), or address in register         * 01136000
*                  (2)-(12), of an 8 character input variable that    * 01136800
*                  contains the workmod token, which the Binder       * 01137600
*                  returned on a CREATEWMOD request to represent the  * 01138400
*                  workmod. This token must not be modified by the    * 01139200
*                  caller.                                            * 01140000
*                                                                     * 01140800
*                                                                     * 01141600
*                                                                     * 01142400
*              End of a set of mutually exclusive required keys.      * 01143200
*                                                                     * 01144000
*                                                                     * 01144800
*                                                                     * 01145600
*              OPTION=xoption                                         * 01146400
*                  is a required input.  It is the name (RS-type), or * 01147000
*                  address in register (2)-(12), of an 8-byte         * 01147600
*                  variable length character string which contains    * 01148200
*                  the option to be set on a SETOPTIONS request.      * 01148800
*                  Refer to the Binder user guide for a list of the   * 01149400
*                  options.                                           * 01150200
*                                                                     * 01151200
*                                                                     * 01152000
*                                                                     * 01152800
*                                                                     * 01153600
*              OPTVAL=xoptval                                         * 01154400
*                  is a required input.  It is the name (RS-type), or * 01155000
*                  address in register (2)-(12), of an 8-byte         * 01155600
*                  variable length character string which contains    * 01156200
*                  the value(s) to be assigned to the option          * 01156800
*                  specified by the OPTION keyword on a SETOPTIONS    * 01157400
*                  request.                                           * 01158000
*                                                                     * 01159200
*                                                                     * 01160000
*                                                                     * 01160800
*                                                                     * 01160900
*              [PARMS=xparms|0]                                     * 01161000
*                  is an optional input.  It is the name (RS-type),   * 01161100
*                  or address in register (2)-(12), of a string       * 01161200
*                  containing one or more options in the same format  * 01161300
*                  they would be passed to the batch interface.  The  * 01161400
*                  format of this parameter is a half word length     * 01161500
*                  field followed by the character string itself.     * 01161600
*                  DEFAULT: 0, signifying that no options are being   * 01161700
*                  specified in character string format.              * 01161800
*                                                                     * 01161900
*                                                                     * 01162000
*                                                                     * 01162100
*          FUNC=STARTD                                                * 01162200
*              Start a binder dialog.  STARTD is the abbreviation for * 01162400
*              STARTDIALOG.                                           * 01163200
*                                                                     * 01164000
*                                                                     * 01164800
*              DIALOG=xdialog                                         * 01165600
*                  is a required output.  It is the name (RS-type),   * 01166400
*                  or address in register (2)-(12), of an 8-byte      * 01167200
*                  character string which is the dialog token         * 01168000
*                  representing the Binder dialog. The Binder returns * 01168800
*                  this token on a STARTDIALOG request. The caller    * 01169600
*                  must not alter the dialog token.                   * 01170400
*                                                                     * 01171200
*                                                                     * 01172000
*                                                                     * 01172800
*                                                                     * 01173600
*              [FILES=xfiles|0]                                     * 01174400
*                  is an optional input.  It is the name (RS-type),   * 01175200
*                  or address in register (2)-(12), of a list of      * 01176000
*                  standard Binder file names for which ddnames are   * 01176800
*                  being supplied.                                    * 01177600
*                  DEFAULT: 0, signifying that ddnames will be        * 01178400
*                  supplied on subsequent Binder calls if they are    * 01179200
*                  needed.                                            * 01180000
*                                                                     * 01180800
*                                                                     * 01181600
*                                                                     * 01182400
*                                                                     * 01183200
*              [EXITS=xexits|0]                                     * 01184000
*                  is an optional input.  It is the name (RS-type),   * 01184800
*                  or address in register (2)-(12), of a list of      * 01185600
*                  standard Binder user exits.                        * 01186400
*                  DEFAULT: 0, signifying that no Binder exits are to * 01187200
*                  be used.                                           * 01188000
*                                                                     * 01188800
*                                                                     * 01189600
*                                                                     * 01190400
*                                                                     * 01191200
*              [OPTIONS=xoptions|0]                                 * 01192000
*                  is an optional input.  It is the name (RS-type),   * 01192800
*                  or address in register (2)-(12), of a list of      * 01193600
*                  standard Binder options and initial values.        * 01194400
*                  DEFAULT: 0, signifying that default values are to  * 01195200
*                  be used for Binder options or the options will be  * 01196000
*                  provided on subsequent Binder calls.               * 01196800
*                                                                     * 01196900
*                                                                     * 01197000
*                                                                     * 01197100
*                                                                     * 01197200
*              [PARMS=xparms|0]                                     * 01197300
*                  is an optional input.  It is the name (RS-type),   * 01197400
*                  or address in register (2)-(12), of a string       * 01197500
*                  containing one or more options in the same format  * 01197600
*                  they would be passed to the batch interface.  The  * 01197700
*                  format of this parameter is a half word length     * 01197800
*                  field followed by the character string itself.     * 01197900
*                  DEFAULT: 0, signifying that no options are being   * 01198000
*                  specified in character string format.              * 01198100
*                                                                     * 01198200
*                                                                     * 01198400
*                                                                     * 01199200
*          FUNC=STARTS                                                * 01200000
*              Begin a new overlay segment.  STARTS is the            * 01200800
*              abbreviation for STARTSEG.                             * 01201600
*                                                                     * 01202400
*                                                                     * 01203200
*              WORKMOD=xworkmod                                       * 01204000
*                  is the name (RS-type), or address in register      * 01204800
*                  (2)-(12), of a required 8 character input variable * 01205600
*                  that contains the workmod token, which the Binder  * 01206400
*                  returned on a CREATEWMOD request to represent the  * 01207200
*                  workmod. This token must not be modified by the    * 01208000
*                  caller.                                            * 01208800
*                                                                     * 01209600
*                                                                     * 01210400
*                                                                     * 01211200
*                                                                     * 01212000
*              ORIGIN=xorigin                                         * 01212800
*                  is a required input.  It is the name (RS-type), or * 01213600
*                  address in register (2)-(12), of an 8-byte varying * 01214400
*                  length character string containing the name of the * 01215200
*                  symbol which designates the segment origin on a    * 01216000
*                  STARTSEG request.                                  * 01216800
*                                                                     * 01217600
*                  The first half word of the string contains a count * 01218400
*                  (1 to 8) of the number of characters in the string * 01219200
*                  which follows.                                     * 01220000
*                                                                     * 01220800
*                                                                     * 01221600
*                                                                     * 01222400
*                                                                     * 01223200
*              [REGION=N|Y]                                         * 01224000
*                  is an optional keyword input which may be          * 01224800
*                  specified on STARTSEG requests to indicate whether * 01225600
*                  or not the segment is to begin a new region.       * 01226400
*                  DEFAULT: N                                         * 01227200
*                                                                     * 01228000
*                                                                     * 01228800
*                  REGION=N                                           * 01229400
*                      The Binder will not place this segment in a    * 01230000
*                      new overlay region.  N is the abbreviation for * 01230600
*                      NO.                                            * 01231200
*                                                                     * 01232000
*                  REGION=Y                                           * 01232600
*                      The Binder will create a new overlay region    * 01233200
*                      starting with this segment.  Y is the          * 01233800
*                      abbreviation for YES.                          * 01234400
*                                                                     * 01235200
*                                                                     * 01236000
*                                                                     * 01236800
*                                                                     * 01237600
*                                                                     * 01238400
*                                                                     * 01239200
*                                                                     * 01240000
*                                                                     * 01240800
*                                                                     * 01241600
*                                                                     * 01242400
*      [RETCODE=xretcode]                                             * 01243200
*          is the name (RS-type) of an optional fullword output which * 01244000
*          contains the variable, or register (2)-(12), return code   * 01244800
*          set by the Binder.  If omitted, the return code will only  * 01245300
*          be provided in register 15.                                * 01245800
*                                                                     * 01246400
*                                                                     * 01247200
*                                                                     * 01248000
*                                                                     * 01248800
*      [RSNCODE=xrsncode]                                             * 01249600
*          is the name (RS-type) of an optional 32 bit output which   * 01250400
*          contains the variable, or register (2)-(12), reason code   * 01251200
*          set by the Binder.  If omitted, the reason code will only  * 01251700
*          be provided in register 0.                                 * 01252200
*                                                                     * 01252800
*                                                                     * 01253600
*                                                                     * 01254400
*                                                                     * 01255200
*      [VERSION=1|2|3|4]                                            * 01255300
*          is an optional keyword input which is the version of       * 01255400
*          parameter list to be generated.                            * 01255500
*          DEFAULT: 1                                                 * 01255600
*                                                                     * 01255700
*                                                                     * 01255800
*          VERSION=1                                                  * 01255900
*              The format of the parameter list will be version 1.    * 01256000
*                                                                     * 01256100
*          VERSION=2                                                  * 01256200
*              The format of the parameter list will be version 2.    * 01256300
*                                                                     * 01256400
*          VERSION=3                                                  * 01256500
*              The format of the parameter list will be version 3.    * 01256600
*                                                                     * 01256700
*          VERSION=4                                                  * 01256800
*              The format of the parameter list will be version 4.    * 01256900
*              @03A                                                   * 01257000
*                                                                     * 01257100
*                                                                     * 01257200
*                                                                     * 01257300
*                                                                     * 01257400
*                                                                     * 01257500
*                                                                     * 01257600
*      [PLISTVER=xplistver|IMPLIED_VERSION]                         * 01257700
*          is an optional byte input decimal value in the "0-0" range * 01257800
*          that specifies the macro version.  PLISTVER is the only    * 01257900
*          key allowed on the list form of MF and determines which    * 01258000
*          parameter list is generated.  Note that MAX may be         * 01258100
*          specified instead of a number, and the parameter list will * 01258200
*          be of the largest size currently supported. This size may  * 01258300
*          grow from release to release (thus possibly affecting the  * 01258400
*          amount of storage needed by your program).  If your        * 01258500
*          program can tolerate this, IBM recommends that you always  * 01258600
*          specify MAX when creating the list form parameter list as  * 01258700
*          that will ensure that the list form parameter list is      * 01258800
*          always long enough to hold whatever parameters might be    * 01258900
*          specified on the execute form.                             * 01259000
*          DEFAULT: IMPLIED_VERSION.  When PLISTVER is omitted, the   * 01259100
*          default is the lowest version which allows all of the      * 01259200
*          parameters specified on the invocation to be processed.    * 01259300
*                                                                     * 01259400
*                                                                     * 01259500
*                                                                     * 01259600
*                                                                     * 01259700
*      [MF=S|L|E]                                                   * 01259800
*          is an optional keyword input which specifies the macro     * 01259900
*          form.                                                      * 01260000
*          DEFAULT: S                                                 * 01260100
*                                                                     * 01260200
*                                                                     * 01260300
*          [MF=S]                                                     * 01260800
*              specifies the standard form of the macro.  The "S"     * 01261600
*              form generates code to put the parameters into an      * 01262400
*              in-line parameter list and invoke the desired service. * 01263200
*              Full checking for required macro keys is done along    * 01264000
*              with supplying defaults for omitted optional           * 01264800
*              parameters.                                            * 01265600
*                                                                     * 01266400
*          [MF=(L,xmfctrl,xmfattr|0D)]                              * 01267200
*              specifies the list form of the macro.  The "L" form    * 01268000
*              defines an area to be used for the parameter list.     * 01268800
*              Only the PLISTVER key may be specified on the          * 01269100
*              invocation.  All other macro parameters are flagged as * 01269400
*              errors.  If PLISTVER is not specified, the original    * 01269700
*              parameter list definition is used.                     * 01270000
*                                                                     * 01270400
*            ,xmfctrl                                                 * 01271200
*              is a required input.  It is the name of a storage area * 01272000
*              for the parameter list.                                * 01272800
*                                                                     * 01273600
*            ,xmfattr|0D                                            * 01274400
*              is an optional 60 character input string that varies   * 01275200
*              from 1 to 60 characters. Use it to force boundary      * 01276000
*              alignment of the parameter list. Use only 0F or 0D.    * 01276800
*              DEFAULT: 0D which forces the parameter list to a       * 01277600
*              doubleword boundary.                                   * 01278400
*                                                                     * 01279200
*          [MF=(E,xmfctrl,COMPLETE)]                                * 01280000
*              specifies the execute form of the macro.  The "E" form * 01280800
*              generates code to put the parameters into the          * 01281600
*              parameter list specified by xmfctrl and provides full  * 01282400
*              syntax checking with default setting.                  * 01283200
*                                                                     * 01284000
*            ,xmfctrl                                                 * 01284800
*              is a required input.  It is the name (RS-type), or     * 01285600
*              address in register (1)-(12), of a storage area for    * 01286400
*              the parameter list.                                    * 01287200
*                                                                     * 01288000
*            ,COMPLETE                                              * 01288800
*              is an optional keyword input which specifies the       * 01289600
*              degree of macro parameter syntax checking.             * 01290400
*              DEFAULT: COMPLETE                                      * 01291200
*                                                                     * 01292000
*                                                                     * 01292800
*              COMPLETE                                               * 01293400
*                  Checking for required macro keys is done and       * 01294000
*                  defaults are supplied for omitted optional         * 01294600
*                  parameters.                                        * 01295200
*                                                                     * 01296000
*                                                                     * 01296800
*                                                                     * 01297600
*                                                                     * 01298400
*                                                                     * 01299200
*                                                                     * 01300000
*                                                                     * 01300800
*01* RETURN CODES:  None.                                             * 01301600
*                                                                     * 01302400
*                                                                     * 01302800
*01* REASON CODES:  None.                                             * 01303200
*                                                                     * 01304000
*01* MODULE TYPE:  ASSEM MACRO                                        * 01304800
*                                                                     * 01305600
*02*   PROCESSOR:  ASSEM                                              * 01306400
*                                                                     * 01307200
*01* COMPONENT:  DF108                                                * 01308000
*                                                                     * 01308800
*01* DISTRIBUTION LIBRARY: AMACLIB                                    * 01309600
*                                                                     * 01310400
*01* MACRO USAGE NOTES:                                               * 01311200
*                                                                     * 01312000
*                                                                     * 01312800
*    1.  Printing of the macro expansion is controlled by the ZPRINT  * 01313600
*        global macro variable.  Any value other than 'NO' will       * 01314400
*        result in the macro expansion being printed.  The default is * 01315200
*        'YES'.  The following examples illustrate how the ZPRINT     * 01316000
*        variable should be set.                                      * 01316800
*                                                                     * 01317600
*                    GBLC &ZPRINT                                     * 01318000
*            &ZPRINT SETC 'YES'          &ZPRINT SETC 'NO'            * 01318400
*                                                                     * 01318500
*                                                                     * 01318600
*    2.  All   keys   currently   contained  in  the  IEWBIND2  macro * 01318700
*        correspond  to  version  0.   If you specify PLISTVER, use a * 01318800
*        value of 0 or MAX.                                           * 01318900
*                                                                     * 01319000
*                                                                     * 01319200
*                                                                     * 01320000
*                                                                     * 01320100
*01* CHANGE ACTIVITY:                                                 * 01320200
*                                                                     * 01320300
*   Flag LineItem  FMID    Date   ID    Comment                       * 01320400
*                                                                     * 01320500
*    $L0=PMBINDER JDZ1110 911216 SJPLPCC:  AMG generated macro.       * 01320800
*    $P1=KMM1732  JDZ1110 920213 SJPLPCC:  INTYPE(S|SMDE) added.      * 01320900
*    $P2=KMM1983  JDZ1110 920504 SJPLLDB:  Change GETN for transport  * 01321000
*                                         utility                     * 01321100
*    $P3=KMM3493  JDZ1110 921122 SJPLLDB:  Reason code, assembler     * 01321200
*                                         CREATEW                     * 01321300
*    $P4=OY60825  JDZ1110 930114 SJPLLDB:  TPORT, amode24             * 01321400
*    $P5=OY61831  JDZ1110 930121 SJPLLDB:  Register form, amode24     * 01321500
*    $P6=OY63426  JDZ1110 940504 SJPLLDB:  eptoken                    * 01321600
*    $L1=PM2ITER2 JDZ1110 940321 SJPLLDB:  Generate PM2 parmlist      * 01321700
*    $L2=PM2ITER3 JDZ1110 940812 SJPLLDB:  Add version parm           * 01321800
*    $00=0000000  HDZ11D0 960108 0000000:                             * 01321900
*                                                                     * 01322000
*                                              $L3=PM3ITER1 HDZ11C0   * 01322100
*                                         960108 SJPLSML: PM3 Driver1 * 01322200
*                                         Changes                     * 01322300
*    $00=0000000  HDZ11D0 960325 0000000:                             * 01322400
*                                                                     * 01322500
*                                              $L4=PM3DRVR2 HDZ11C0   * 01322600
*                                         960325 SJPLSML: PM3 Driver2 * 01322700
*                                         Changes                     * 01322800
*    $01=OW32812  HDZ11D0 980423 SJPLELA:  Nulls when no class on     * 01322900
*                                         GETE                        * 01323000
*    $02=OW33442  HDZ11D0 980423 SJPLELA:  AE fix completion for      * 01323100
*                                         OW32812                     * 01323200
*    $03=OW33085  HDZ11D0 980723 SJPLELA:  OE Symlink add Atype to    * 01323300
*                                         ADDA                        * 01323400
*    $04=OW35218  HDZ11D0 980915 SJPLELA:  Check that function is     * 01323500
*                                         ALTERW before setting ATYPE * 01323600
*    $05=OW35596  HDZ11D0 981006 SJPLELA:  GETE class parameter       * 01323700
*                                         checking                    * 01323800
*    $L6=HPLINK   HDZ11E0 981215 SJPLELA:  Offset parameter to IMPORT * 01323900
*                                         call                        * 01324000
*    $06=OW39942  HDZ11D0 990706 SJPLMD:  Make retcode/rsncode opt    * 01324100
*    $L7=XPLINK   HDZ11E0 990924 STLRWT:  Class offset in segment,    * 01324200
*                                         version cleanup             * 01324300
*    $07=OW41296  HDZ11F0 991201 STLMD:  Fix pointers to retcode      * 01324400
*                                            and rsncode              * 01324500
****** END OF SPECIFICATIONS *****************************************/ 01324600
*/* TLINE 1 *********************************************************** 01324700
         MACRO                                                          01324800
&XLABEL  IEWBIND2 &FUNC=,&WORKMOD=,&ANAME=,&ENAME=,&AMODE=,&ATYPE=,    *01324900
               &SECTION=,&OLDNAME=,&NEWNAME=,&COUNT=,&MODE=,&CLASS=,   *01325000
               &CALLIB=,&PATHNAME=,&DIALOG=,&INTENT=,&PROTECT=,        *01325100
               &RENAMEL=,&AREA=,&CURSOR=,&RECTYPE=,&OFFSET=,&SYMBOL=,  *01325400
               &TCOUNT=,&NTYPE=,&ITYPE=,&DLLNAME=,&INAME=,&INTYPE=,    *01326100
               &DDNAME=,&DEPTR=,&MEMBER=,&DCBPTR=,&EPTOKEN=,&ATTRIB=,  *01326800
               &ALIASES=,&EPLOC=,&IDENTIFY=,&EXTLST=,&LNAME=,&NEWSECT=,*01327500
               &ENDDATA=,&MODLIB=,&SNAME=,&REPLACE=,&LIBOPT=,&OPTION=, *01328200
               &OPTVAL=,&PARMS=,&FILES=,&EXITS=,&OPTIONS=,&ORIGIN=,    *01328900
               &REGION=,&RETCODE=,&RSNCODE=,&VERSION=,&PLISTVER=,&MF=   01329600
.*                                                                      01330400
*              MACDATE -99/09/30-<0>                                    01331200
.*                                                                      01332000
.*******************************************************************    01332800
.***AB.02  GLOBAL VARIABLES TO CONTROL PRINT AND CODE GENERATION        01333600
.*******************************************************************    01334400
              GBLC  &ZPRINT     YES=PRINT NO=NO PRINT                   01335200
              GBLC  &ZTEST      YES=TEST NO=NO TEST                     01336000
              GBLC  &ZSYSTEM    PCCODE10, MVS, SAK, VM, XAX             01336800
.*                                                                      01337600
              GBLC  &ZIEWBIND2  YES=MACRO USED AT LEAST ONCE            01338400
.*******************************************************************    01339200
.***AB.03  COMMONLY USED LOCAL MACRO VARIABLES                          01340000
.*******************************************************************    01340800
              LCLC  &ZMS        ERROR MESSAGE WORK AREA                 01341600
              LCLC  &ZCNDX      LAST THREE SYSNDX CHARACTERS            01342400
              LCLC  &ZCLNG      USED WHEN LENGTH IS NEEDED              01343200
              LCLC  &ZCGPR      USED WHEN VALUE IS IN A GPR             01344000
              LCLC  &ZCVAL      USED TO CONTAIN FIXED VALUE             01344800
              LCLA  &ZAWRK      USED AS A WORK AREA                     01345600
              LCLA  &ZASIZ      USED FOR SIZE OF VALUE                  01346400
              LCLA  &ZN         NUMERIC WORK VARIABLE                   01347200
              LCLC  &ZC         CHARACTER WORK VARIABLE                 01348000
              LCLC  &ZTLC       CHARACTER TOO LONG VARIABLE             01348200
              LCLA  &ZTLA       VALUE TOO LONG VARIABLE                 01348400
              LCLA  &ZMACRET    MACRO RETURN CODE                       01348800
&ZMACRET      SETA  0           ASSUME NO ERRORS                        01349600
.*                                                                      01350400
              LCLC  &ZCSYSLIST(255)             NONXKEY, POS ARRAY      01351200
              LCLA  &ZASYSLNDX  WORK INDEX FOR ZCSYSLIST()              01352000
              LCLA  &ZPLLEN     PARAMETER LIST LENGTH                   01352800
              LCLC  &ZENDBASEPL                 End of base PL          01352900
              LCLA  &ZPLWORKA   PARAMETER LIST LENGTH                   01353000
.*******************************************************************    01353100
.***AB.04  MACRO VARIABLES FOR RANGES AND SETS OF ARGUMENTS             01353200
.*******************************************************************    01353300
              LCLA  &ZI         INDEX FOR ARRAY                         01353400
              LCLA  &ZJ         INDEX FOR PARMS                         01353500
              LCLA  &ZK         INDEX FOR PARSE                         01353600
              LCLA  &ZLO        LOW RANGE VALUE                         01353700
              LCLA  &ZHI        HIGH RANGE VALUE                        01353800
              LCLC  &ZW         WORK AREA FOR PARM                      01353900
.********************************************************************   01354000
.***AB.05  INVOKE MVS MACROS TO CONTROL CODE GENERATION                 01354400
.********************************************************************   01355200
              GBLC  &SYSSPLV    SP LEVEL 1,2,3 -SPLEVEL                 01356000
              GBLC  &SYSASCE    SYSTEM STATE P ANY AR-SYSSTATE          01356800
.*                                                                      01357600
              AIF   (K'&SYSASCE GT 0).ZSYS4     SYS STATE DEFINED       01358400
              AIF   (K'&SYSSPLV GT 0).ZSYS2     SP LEVEL DEFINED        01359200
              SPLEVEL  TEST                                             01360000
.ZSYS2        ANOP  ,                                                   01360800
              AIF   ('&SYSSPLV' EQ '1').ZSYS3   PRE SP 3.1              01361600
              AIF   ('&SYSSPLV' EQ '2').ZSYS3   PRE SP 3.1              01362400
              SYSSTATE TEST                                             01363200
              AGO   .ZSYS4                                              01364000
.ZSYS3        ANOP  ,                                                   01364800
&SYSASCE      SETC  'P'         ASSUME SYSSTATE PRIMARY                 01365600
.ZSYS4        ANOP  ,                                                   01366400
.*******************************************************************    01367200
.***AB.07  DEFINE ALL MACRO VARIABLES                                   01368000
.*******************************************************************    01368800
              LCLC  &XFUNC      ++ VALUE                                01369600
              LCLC  &XWORKMOD   ++ NAME                                 01370400
              LCLC  &XANAME     ++ NAME                                 01371200
              LCLC  &XENAME     ++ NAME                                 01372000
              LCLC  &XAMODE     ++ NAME                                 01372800
              LCLC  &XATYPE     ++ VALUE                                01373200
              LCLC  &XSECTION   ++ NAME                                 01373600
              LCLC  &XOLDNAME   ++ NAME                                 01374000
              LCLC  &XNEWNAME   ++ NAME                                 01375200
              LCLC  &XCOUNT     ++ NAME                                 01376000
              LCLC  &XMODE      ++ VALUE                                01376800
              LCLC  &XCLASS     ++ NAME                                 01377600
              LCLC  &XPATHLIB   ++ NAME                                 01378000
              LCLC  &XCALLIB    ++ NAME                                 01378400
              LCLC  &XPATHNAME  ++ NAME                                 01378800
              LCLC  &XDIALOG    ++ NAME                                 01379200
              LCLC  &XINTENT    ++ VALUE                                01380000
              LCLC  &XPROTECT   ++ VALUE                                01380800
              LCLC  &XRENAMEL   ++ NAME                                 01381600
              LCLC  &XAREA      ++ NAME                                 01382400
              LCLC  &XCURSOR    ++ NAME                                 01383200
              LCLC  &XRECTYPE   ++ NAME                                 01384000
              LCLC  &XOFFSYM    ++ NAME                                 01384800
              LCLC  &XOFFSET    ++ NAME                                 01385600
              LCLC  &XSYMBOL    ++ NAME                                 01386400
              LCLC  &XTCOUNT    ++ NAME                                 01387200
              LCLC  &XNTYPE     ++ VALUE                                01387600
              LCLC  &XITYPE     ++ VALUE                                01387700
              LCLC  &XDLLNAME   ++ NAME                                 01387800
              LCLC  &XINAME     ++ NAME                                 01387900
              LCLC  &XOFFSET1   ++ NAME                                 01388100
              LCLC  &XINTYPE    ++ VALUE                                01388300
              LCLC  &XDDNAME    ++ NAME                                 01388800
              LCLC  &XDEPTR     ++ NAME                                 01389200
              LCLC  &XMEMBER    ++ NAME                                 01389600
              LCLC  &XDCBPTR    ++ NAME                                 01390400
              LCLC  &XEPTOKEN   ++ NAME                                 01392000
              LCLC  &XATTRIB    ++ VALUE                                01392800
              LCLC  &XALIASES   ++ VALUE                                01393600
              LCLC  &XEPLOC     ++ NAME                                 01394400
              LCLC  &XIDENTIFY  ++ VALUE                                01395200
              LCLC  &XEXTLST    ++ NAME                                 01396000
              LCLC  &XLNAME     ++ NAME                                 01396800
              LCLC  &XNEWSECT   ++ VALUE                                01397600
              LCLC  &XENDDATA   ++ VALUE                                01398400
              LCLC  &XMODLIB    ++ NAME                                 01399200
              LCLC  &XSNAME     ++ NAME                                 01400000
              LCLC  &XREPLACE   ++ VALUE                                01400800
              LCLC  &XLIBOPT    ++ VALUE                                01401600
              LCLC  &XOPTLVL    ++ NAME                                 01402400
              LCLC  &XOPTION    ++ NAME                                 01403200
              LCLC  &XOPTVAL    ++ NAME                                 01404000
              LCLC  &XPARMS     ++ NAME                                 01404400
              LCLC  &XFILES     ++ NAME                                 01404800
              LCLC  &XEXITS     ++ NAME                                 01405600
              LCLC  &XOPTIONS   ++ NAME                                 01406400
              LCLC  &XORIGIN    ++ NAME                                 01407200
              LCLC  &XREGION    ++ VALUE                                01408000
              LCLC  &XRETCODE   ++ NAME                                 01408800
              LCLC  &XRSNCODE   ++ NAME                                 01409600
              LCLC  &XVERSION   ++ VALUE                                01410000
              LCLA  &XPLISTVER  ++ VALUE                                01410200
              LCLC  &XMF        ++ VALUE                                01410400
              LCLC  &XMFCTRL    ++ NAME                                 01411200
              LCLC  &XMFATTR    ++ VALUE                                01412000
              LCLC  &XMFSCK     ++ VALUE                                01412800
.*******************************************************************    01413600
.***AB.13  DEFINE MACRO VARIABLES FOR INPUT/OUTPUT PROCESSING           01414400
.*******************************************************************    01415200
              LCLC  &ZXFUNC     ++ INPUT VALUE                          01416000
              LCLC  &ZXWORKMOD  ++ INPUT NAME                           01416800
              LCLC  &ZXANAME    ++ INPUT NAME                           01417600
              LCLC  &ZXENAME    ++ INPUT NAME                           01418400
              LCLC  &ZXAMODE    ++ INPUT NAME                           01419200
              LCLC  &ZXATYPE    ++ INPUT VALUE                          01419600
              LCLC  &ZXSECTION  ++ INPUT NAME                           01420000
              LCLC  &ZXOLDNAME  ++ INPUT NAME                           01420400
              LCLC  &ZXNEWNAME  ++ INPUT NAME                           01421600
              LCLC  &ZXCOUNT    ++ OUTPUT NAME                          01422400
              LCLC  &ZXMODE     ++ INPUT VALUE                          01423200
              LCLC  &ZXCLASS    ++ INPUT NAME                           01424000
              LCLC  &ZXPATHLIB  ++ INPUT NAME                           01424400
              LCLC  &ZXCALLIB   ++ INPUT NAME                           01424800
              LCLC  &ZXPATHNAME                 ++ INPUT NAME           01425200
              LCLC  &ZXDIALOG   ++ INPUT NAME                           01425600
              LCLC  &ZXINTENT   ++ INPUT VALUE                          01426400
              LCLC  &ZXPROTECT  ++ INPUT VALUE                          01427200
              LCLC  &ZXRENAMEL  ++ INPUT NAME                           01428000
              LCLC  &ZXAREA     ++ OUTPUT NAME                          01428800
              LCLC  &ZXCURSOR   ++ INOUT NAME                           01429600
              LCLC  &ZXRECTYPE  ++ INPUT NAME                           01430400
              LCLC  &ZXOFFSYM   ++ INPUT NAME                           01431200
              LCLC  &ZXOFFSET   ++ INPUT NAME                           01432000
              LCLC  &ZXSYMBOL   ++ INPUT NAME                           01432800
              LCLC  &ZXTCOUNT   ++ OUTPUT NAME                          01433600
              LCLC  &ZXNTYPE    ++ INPUT VALUE                          01434000
              LCLC  &ZXITYPE    ++ INPUT VALUE                          01434100
              LCLC  &ZXDLLNAME  ++ INPUT NAME                           01434200
              LCLC  &ZXINAME    ++ INPUT NAME                           01434300
              LCLC  &ZXOFFSET1  ++ INPUT NAME                           01434500
              LCLC  &ZXINTYPE   ++ INPUT VALUE                          01434700
              LCLC  &ZXDDNAME   ++ INPUT NAME                           01435200
              LCLC  &ZXDEPTR    ++ INPUT NAME                           01435600
              LCLC  &ZXMEMBER   ++ INPUT NAME                           01436000
              LCLC  &ZXDCBPTR   ++ INPUT NAME                           01436800
              LCLC  &ZXEPTOKEN  ++ INPUT NAME                           01438400
              LCLC  &ZXATTRIB   ++ INPUT VALUE                          01439200
              LCLC  &ZXALIASES  ++ INPUT VALUE                          01440000
              LCLC  &ZXEPLOC    ++ OUTPUT NAME                          01440800
              LCLC  &ZXIDENTIFY                 ++ INPUT VALUE          01441600
              LCLC  &ZXEXTLST   ++ OUTPUT NAME                          01442400
              LCLC  &ZXLNAME    ++ INPUT NAME                           01443200
              LCLC  &ZXNEWSECT  ++ INPUT VALUE                          01444000
              LCLC  &ZXENDDATA  ++ INPUT VALUE                          01444800
              LCLC  &ZXMODLIB   ++ INPUT NAME                           01445600
              LCLC  &ZXSNAME    ++ INPUT NAME                           01446400
              LCLC  &ZXREPLACE  ++ INPUT VALUE                          01447200
              LCLC  &ZXLIBOPT   ++ INPUT VALUE                          01448000
              LCLC  &ZXOPTLVL   ++ INPUT NAME                           01448800
              LCLC  &ZXOPTION   ++ INPUT NAME                           01449600
              LCLC  &ZXOPTVAL   ++ INPUT NAME                           01450400
              LCLC  &ZXPARMS    ++ INPUT NAME                           01450800
              LCLC  &ZXFILES    ++ INPUT NAME                           01451200
              LCLC  &ZXEXITS    ++ INPUT NAME                           01452000
              LCLC  &ZXOPTIONS  ++ INPUT NAME                           01452800
              LCLC  &ZXORIGIN   ++ INPUT NAME                           01453600
              LCLC  &ZXREGION   ++ INPUT VALUE                          01454400
              LCLC  &ZXRETCODE  ++ OUTPUT NAME                          01455200
              LCLC  &ZXRSNCODE  ++ OUTPUT NAME                          01456000
              LCLC  &ZXVERSION  ++ INPUT VALUE                          01456400
              LCLC  &ZXPLISTVER                 ++ INPUT VALUE          01456600
              LCLC  &ZXMF       ++ INPUT VALUE                          01456800
              LCLC  &ZXMFCTRL   ++ INPUT NAME                           01457600
              LCLC  &ZXMFATTR   ++ INPUT VALUE                          01458400
              LCLC  &ZXMFSCK    ++ INPUT VALUE                          01459200
.********************************************************************   01460000
.***AC.PLV01  PROCESS PLISTVER                                      *   01460100
.********************************************************************   01460200
&XPLISTVER      SETA  0                                                 01460300
                AIF   (K'&PLISTVER(1) LE 0).ZPLV0                       01460400
                AIF   ('&PLISTVER(1)' NE 'MAX').ZPLV0                   01460500
&XPLISTVER      SETA  0                                                 01460600
.ZPLV0          ANOP  ,                                                 01460700
.*                                                                      01460800
                AIF   (K'&PLISTVER(1) LE 0).ZPVCKE                      01460900
                AIF   ('&PLISTVER(1)' EQ 'IMPLIED_VERSION').ZPVCKE      01461000
                AIF   ('&PLISTVER(1)' EQ 'MAX').ZPVCKE                  01461100
.*-------------------------------------------------------------------   01461200
                AIF   (N'&PLISTVER LE 1).ZPVCK3  CK NUM                 01461300
&ZMS            SETC  '"PLISTVER='         *KPOSA* MNOTE                01461400
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 01461500
&ZMS            SETC  '&ZMS "PLISTVER"'                                 01461600
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               01461700
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                01461800
                AGO   .ZPVCK2                                           01461900
.ZPVCK3         ANOP  ,                                                 01462000
.*-------------------------------------------------------------------   01462100
                AIF   ('&PLISTVER'(1,1) NE '(').ZPVCK2                  01462200
&ZMS            SETC  '"PLISTVER='         *KGPRA* MNOTE                01462300
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 01462400
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         01462500
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'                 01462600
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                01462700
                AGO   .ZPVCKE                                           01462800
.ZPVCK2         ANOP  ,                                                 01462900
.*-------------------------------------------------------------------   01463000
&ZCVAL          SETC  '&PLISTVER(1)'                                    01463100
                AIF   ('&ZCVAL'(1,1) EQ '(').ZPVCKE  IN GPR             01463200
                AIF   (T'&ZCVAL NE 'N').ZPVCK6  NUMERIC ERR             01463300
&ZN             SETA   &PLISTVER(1)        CONVERT TO ARITHMETIC        01463400
                AIF   (&ZN LT 0).ZPVCK6    TOO LOW                      01463500
                AIF   (&ZN LE 0).ZPVCK4A   NOT HIGH                     01463600
.ZPVCK6         ANOP  ,                                                 01463700
&ZMS            SETC  '"PLISTVER='         *KRNGA* MNOTE                01463800
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 01463900
&ZMS            SETC  '&ZMS THE RANGE IS "0-0"'                         01464000
                MNOTE 8,' &ZMS FOR ARGUMENT 1.'                         01464100
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                01464200
&XPLISTVER      SETA  0                                                 01464300
                AGO   .ZPVCKE                                           01464400
.*-------------------------------------------------------------------   01464500
.ZPVCK4A        ANOP  ,                                                 01464600
                AIF   (&ZN GE &XPLISTVER).ZPVCK4                        01464700
&ZMS            SETC  'PLISTVER='          *KVALA* MNOTE                01464800
&ZMS            SETC  '&ZMS.&PLISTVER(1)'                               01464900
&ZMS            SETC  '&ZMS., BUT PLISTVER OF'                          01465000
&ZMS            SETC  '&ZMS &XPLISTVER'                                 01465100
                MNOTE 8,' &ZMS IS REQUIRED.'                            01465200
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                01465300
                AGO   .ZPVCK5                                           01465400
.ZPVCK4         ANOP  ,                                                 01465500
&XPLISTVER      SETA  &PLISTVER(1)                                      01465600
.ZPVCK5         ANOP  ,                                                 01465700
.ZPVCKE         ANOP  ,                                                 01465800
.********************************************************************   01465900
.***AG.MF01 PROCESS MF MACRO FORMS                                      01466000
.********************************************************************   01466100
              ACTR  10000                                               01466200
.*------------------------------------------------------------------    01466300
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01466400
&XMF          SETC  ''          INITIALIZE XVARIABLE                    01466500
.*-------------------------------------------------------------------   01466600
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01466700
.ZG427        ANOP  ,                                                   01467200
&ZTLC         SETC 'S'                                                  01467700
              AIF   ('&MF(1)' NE '&ZTLC').ZG428                         01468200
&XMF          SETC  'S'         SET KEYWORD                             01468800
              AIF   (N'&MF LE 1).ZG427A         CK NUM                  01469600
&ZMS          SETC  '"MF='      *KPOSA* MNOTE                           01470400
&ZMS          SETC  '&ZMS.&MF"'                                         01471200
&ZMS          SETC  '&ZMS "MF"'                                         01472000
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 01472800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01473600
.ZG427A       ANOP  ,                                                   01523600
.*-------------------------------------------------------------------   01621600
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01621700
.ZG428        ANOP  ,                                                   01621800
&ZTLC         SETC 'L'                                                  01621900
              AIF   ('&MF(1)' NE '&ZTLC').ZG435                         01622000
&XMF          SETC  'L'         SET KEYWORD                             01622100
              AIF   (N'&MF LE 3).ZG428A         CK NUM                  01622200
&ZMS          SETC  '"MF='      *KPOSA* MNOTE                           01622300
&ZMS          SETC  '&ZMS.&MF"'                                         01622400
&ZMS          SETC  '&ZMS "MF"'                                         01622500
              MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'                01622600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01622700
.ZG428A       ANOP  ,                                                   01622800
.*-------------------------------------------------------------------   01622900
.***AG.KKCTL08 -MF(L) SPECIAL CHECK                                     01623000
              AIF   (N'&SYSLIST NE 0).ZG428B    POSITIONALS?            01623100
              AIF   ('&FUNC' NE '').ZG428B      KEYS?                   01623200
              AIF   ('&WORKMOD' NE '').ZG428B   KEYS?                   01623300
              AIF   ('&ANAME' NE '').ZG428B     KEYS?                   01623400
              AIF   ('&ENAME' NE '').ZG428B     KEYS?                   01623500
              AIF   ('&AMODE' NE '').ZG428B     KEYS?                   01623600
              AIF   ('&ATYPE' NE '').ZG428B     KEYS?                   01623700
              AIF   ('&SECTION' NE '').ZG428B   KEYS?                   01623800
              AIF   ('&OLDNAME' NE '').ZG428B   KEYS?                   01623900
              AIF   ('&NEWNAME' NE '').ZG428B   KEYS?                   01624000
              AIF   ('&COUNT' NE '').ZG428B     KEYS?                   01624100
              AIF   ('&MODE' NE '').ZG428B      KEYS?                   01624200
              AIF   ('&CLASS' NE '').ZG428B     KEYS?                   01624300
              AIF   ('&CALLIB' NE '').ZG428B    KEYS?                   01624400
              AIF   ('&PATHNAME' NE '').ZG428B  KEYS?                   01624500
              AIF   ('&DIALOG' NE '').ZG428B    KEYS?                   01624600
              AIF   ('&INTENT' NE '').ZG428B    KEYS?                   01624700
              AIF   ('&PROTECT' NE '').ZG428B   KEYS?                   01624800
              AIF   ('&RENAMEL' NE '').ZG428B   KEYS?                   01624900
              AIF   ('&AREA' NE '').ZG428B      KEYS?                   01625000
              AIF   ('&CURSOR' NE '').ZG428B    KEYS?                   01625100
              AIF   ('&RECTYPE' NE '').ZG428B   KEYS?                   01625200
              AIF   ('&OFFSET' NE '').ZG428B    KEYS?                   01625300
              AIF   ('&SYMBOL' NE '').ZG428B    KEYS?                   01625400
              AIF   ('&TCOUNT' NE '').ZG428B    KEYS?                   01625500
              AIF   ('&NTYPE' NE '').ZG428B     KEYS?                   01625600
              AIF   ('&ITYPE' NE '').ZG428B     KEYS?                   01625700
              AIF   ('&DLLNAME' NE '').ZG428B   KEYS?                   01625800
              AIF   ('&INAME' NE '').ZG428B     KEYS?                   01625900
              AIF   ('&INTYPE' NE '').ZG428B    KEYS?                   01626000
              AIF   ('&DDNAME' NE '').ZG428B    KEYS?                   01626100
              AIF   ('&DEPTR' NE '').ZG428B     KEYS?                   01626200
              AIF   ('&MEMBER' NE '').ZG428B    KEYS?                   01626300
              AIF   ('&DCBPTR' NE '').ZG428B    KEYS?                   01626400
              AIF   ('&EPTOKEN' NE '').ZG428B   KEYS?                   01626500
              AIF   ('&ATTRIB' NE '').ZG428B    KEYS?                   01626600
              AIF   ('&ALIASES' NE '').ZG428B   KEYS?                   01626700
              AIF   ('&EPLOC' NE '').ZG428B     KEYS?                   01626800
              AIF   ('&IDENTIFY' NE '').ZG428B  KEYS?                   01626900
              AIF   ('&EXTLST' NE '').ZG428B    KEYS?                   01627000
              AIF   ('&LNAME' NE '').ZG428B     KEYS?                   01627100
              AIF   ('&NEWSECT' NE '').ZG428B   KEYS?                   01627200
              AIF   ('&ENDDATA' NE '').ZG428B   KEYS?                   01627300
              AIF   ('&MODLIB' NE '').ZG428B    KEYS?                   01627400
              AIF   ('&SNAME' NE '').ZG428B     KEYS?                   01627500
              AIF   ('&REPLACE' NE '').ZG428B   KEYS?                   01627600
              AIF   ('&LIBOPT' NE '').ZG428B    KEYS?                   01627700
              AIF   ('&OPTION' NE '').ZG428B    KEYS?                   01627800
              AIF   ('&OPTVAL' NE '').ZG428B    KEYS?                   01627900
              AIF   ('&PARMS' NE '').ZG428B     KEYS?                   01628000
              AIF   ('&FILES' NE '').ZG428B     KEYS?                   01628100
              AIF   ('&EXITS' NE '').ZG428B     KEYS?                   01628200
              AIF   ('&OPTIONS' NE '').ZG428B   KEYS?                   01628300
              AIF   ('&ORIGIN' NE '').ZG428B    KEYS?                   01628400
              AIF   ('&REGION' NE '').ZG428B    KEYS?                   01628500
              AIF   ('&RETCODE' NE '').ZG428B   KEYS?                   01628600
              AIF   ('&RSNCODE' NE '').ZG428B   KEYS?                   01628700
              AIF   ('&VERSION' NE '').ZG428B   KEYS?                   01628800
              AGO    .ZG428C    INVOCATION OKAY                         01628900
.ZG428B       ANOP  ,                                                   01629000
&ZMS          SETC  'THE "L" FORM OF "MF"'      *MFLA* MNOTE            01629100
&ZMS          SETC  '&ZMS CAN ONLY HAVE'                                01629200
&ZMS          SETC  '&ZMS THE "PLISTVER" KEY'                           01629300
              MNOTE 8,' &ZMS SPECIFIED ON THE INVOCATION.'              01629400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01629500
.ZG428C       ANOP  ,                                                   01629600
.*-------------------------------------------------------------------   01629700
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   01629800
&ZXMFCTRL     SETC  'INPUT'     SET IN/OUTPUT                           01629900
&XMFCTRL      SETC  '&MF(2,1)'  SET XVARIABLE                           01630000
              AIF   (N'&MF(2) GT 1).ZG430B      MULTI PARMS             01630100
&XMFCTRL      SETC  '&MF(2)'    SET XVARIABLE                           01630200
.ZG430B       AIF   (K'&MF(2) GT 0).ZG430C                              01630300
&ZXMFCTRL     SETC  ''          RESET IN/OUTPUT                         01630400
&ZMS          SETC  'WHEN "L" IS SPECIFIED'     *KRQDA*                 01630500
&ZMS          SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'                 01630600
              MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                        01630700
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01630800
.ZG430C       ANOP  ,                                                   01630900
.*-------------------------------------------------------------------   01631000
.***AG.KCK01 NAME, OPT RQD INPUT, POS(2) -GPR NOT ALLOWED               01631100
              AIF   (K'&ZXMFCTRL LE 0).ZG430P   NOT I/O                 01631200
              AIF   ('&XMFCTRL'(1,1) NE '(').ZG430P                     01631300
&ZXMFCTRL     SETC  ''          RESET IN/OUTPUT                         01631400
&ZMS          SETC  '"MF='      *KGPRA* MNOTE                           01631500
&ZMS          SETC  '&ZMS.&MF"'                                         01631600
&ZMS          SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'           01631700
              MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 2.'                   01631800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01631900
.ZG430P       ANOP  ,                                                   01632000
.*-------------------------------------------------------------------   01632100
.***AG.KXVAR13 VALUE, OPT INPUT, POS(3) -XVARIABLE                      01632200
&ZXMFATTR     SETC  'INPUT'     SET IN/OUTPUT                           01632300
&XMFATTR      SETC  '0D'                                                01632400
              AIF   (K'&MF(3) LE 0).ZG433B      PARM                    01632500
&XMFATTR      SETC  '&MF(3,1)'  SET XVARIABLE                           01632600
              AIF   (N'&MF(3) GT 1).ZG433B      MULTI PARMS             01632700
&XMFATTR      SETC  '&MF(3)'    SET XVARIABLE                           01632800
.ZG433B       ANOP  ,                                                   01632900
.*-------------------------------------------------------------------   01633000
.***AG.KCK01 VALUE, OPT INPUT, POS(3) -GPR NOT ALLOWED                  01633100
              AIF   (K'&ZXMFATTR LE 0).ZG433P   NOT I/O                 01633200
              AIF   ('&XMFATTR'(1,1) NE '(').ZG433P                     01633300
&ZXMFATTR     SETC  ''          RESET IN/OUTPUT                         01633400
&ZMS          SETC  '"MF='      *KGPRA* MNOTE                           01633500
&ZMS          SETC  '&ZMS.&MF"'                                         01633600
&ZMS          SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'           01633700
              MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 3.'                   01633800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01633900
.ZG433P       ANOP  ,                                                   01634000
.*-------------------------------------------------------------------   01634100
.***AG.KCK03 VALUE, OPT INPUT, POS(3) -CHARACTER LENGTH                 01634200
              AIF   (K'&ZXMFATTR LE 0).ZG433S   NOT I/O                 01634300
              AIF   (K'&XMFATTR LE 60).ZG433S   LNG OK                  01634400
&ZXMFATTR     SETC  ''          RESET IN/OUTPUT                         01634500
&ZMS          SETC  '"MF='      *KLNGA* MNOTE                           01634600
&ZMS          SETC  '&ZMS.&MF"'                                         01634700
&ZMS          SETC  '&ZMS ARGUMENT 3 EXCEEDS THE MAXIMUM'               01634800
              MNOTE 8,' &ZMS LENGTH OF 60 CHARACTERS.'                  01634900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01635000
.ZG433S       ANOP  ,                                                   01635100
.*-------------------------------------------------------------------   01635200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01635300
.ZG435        ANOP  ,                                                   01635400
&ZTLC         SETC 'E'                                                  01635500
              AIF   ('&MF(1)' NE '&ZTLC').ZG443                         01635600
&XMF          SETC  'E'         SET KEYWORD                             01635700
              AIF   (N'&MF LE 3).ZG435A         CK NUM                  01635800
&ZMS          SETC  '"MF='      *KPOSA* MNOTE                           01635900
&ZMS          SETC  '&ZMS.&MF"'                                         01636000
&ZMS          SETC  '&ZMS "MF"'                                         01636100
              MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'                01636200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01636300
.ZG435A       ANOP  ,                                                   01636400
.*-------------------------------------------------------------------   01636500
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   01636600
&ZXMFCTRL     SETC  'INPUT'     SET IN/OUTPUT                           01636700
&XMFCTRL      SETC  '&MF(2,1)'  SET XVARIABLE                           01636800
              AIF   (N'&MF(2) GT 1).ZG437B      MULTI PARMS             01636900
&XMFCTRL      SETC  '&MF(2)'    SET XVARIABLE                           01637000
.ZG437B       AIF   (K'&MF(2) GT 0).ZG437C                              01637100
&ZXMFCTRL     SETC  ''          RESET IN/OUTPUT                         01637200
&ZMS          SETC  'WHEN "E" IS SPECIFIED'     *KRQDA*                 01637300
&ZMS          SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'                 01637400
              MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                        01637500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01637600
.ZG437C       ANOP  ,                                                   01637700
.*-------------------------------------------------------------------   01637800
.***AG.KCK02 NAME, OPT RQD INPUT, POS(2) -GPR OUT OF RANGE              01637900
              AIF   (K'&ZXMFCTRL LE 0).ZG437R   NOT I/O                 01638000
              AIF   ('&XMFCTRL'(1,1) NE '(').ZG437R                     01638100
&ZCGPR        SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)                          01638200
              AIF   ('&ZCGPR'(1,1) NE '0').ZG437P                       01638300
              AIF   (K'&ZCGPR GT 2).ZG437Q                              01638400
              AIF   ('&ZCGPR' EQ '0').ZG437Q                            01638500
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       01638600
              AIF   (T'&ZCGPR NE 'N').ZG437Q    INVALID REG NAME        01638700
.ZG437P       ANOP  ,                                                   01638800
              AIF   (T'&ZCGPR NE 'N').ZG437R    NON NUMERIC             01638900
              AIF   ('&ZCGPR' LT '1').ZG437Q                            01639000
              AIF   ('&ZCGPR' LE '12').ZG437R                           01639100
.ZG437Q       ANOP  ,                                                   01639200
&ZMS          SETC  '"MF='      *KGPRA* MNOTE                           01639300
&ZMS          SETC  '&ZMS.&MF"'                                         01639400
&ZMS          SETC  '&ZMS ARGUMENT 2 MUST SPECIFY A REGISTER'           01639500
              MNOTE 8,' &ZMS IN THE RANGE (1)-(12).'                    01639600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01639700
.ZG437R       ANOP  ,                                                   01639800
.*-------------------------------------------------------------------   01639900
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01640000
&XMFSCK       SETC  ''          INITIALIZE XVARIABLE                    01640100
.ZG441A   AIF   ('&MF(3)' NE 'COMPLETE').ZG442A                         01640200
&XMFSCK       SETC  'COMPLETE'  SET KEYWORD                             01640300
.*-------------------------------------------------------------------   01640400
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01640500
.ZG442A       AIF   (K'&XMFSCK GT 0).ZG442C     KEYWORD                 01640600
              AIF   (K'&MF(3) LE 0).ZG442B                              01640700
&ZMS          SETC  '"MF='      *KUKWA* MNOTE                           01640800
&ZMS          SETC  '&ZMS.&MF"'                                         01640900
&ZMS          SETC  '&ZMS ARGUMENT 3 IS AN UNKNOWN KEYWORD. '           01641000
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                 01641100
&ZMS          SETC  '&ZMS "COMPLETE".'          VALID KEYWORD           01641200
              MNOTE 8,' &ZMS '                                          01641300
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01641400
.ZG442B       ANOP  ,                                                   01641500
&XMFSCK       SETC  'COMPLETE'  SET DEFAULT KEYWORD                     01641600
.ZG442C       ANOP  ,                                                   01641700
&ZXMFSCK      SETC  'INPUT'     SET IN/OUTPUT                           01641800
.*------------------------------------------------------------------    01641900
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01642000
.ZG443        ANOP  ,                                                   01642100
&ZXMF         SETC  'INPUT'     SET IN/OUTPUT                           01642200
              AIF   (K'&XMF GT 0).ZG443E        VALID ARG               01642300
              AIF   (T'&MF EQ 'O').ZG443D       OMITTED                 01642400
&ZASYSLNDX    SETA  0                                                   01642500
.ZG443A       ANOP  ,           POSITIONAL MACRO KEY                    01642600
&ZASYSLNDX    SETA  &ZASYSLNDX+1                                        01642700
              AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG443C                   01642800
&ZTLC         SETC 'MF'                                                 01642900
              AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG443A          01643000
.ZG443B       ANOP  ,                                                   01643100
&ZXMF         SETC  ''          RESET IN/OUTPUT                         01643200
&ZMS          SETC  'THE "MF" KEY'              *KOPTA* MNOTE           01643300
&ZMS          SETC  '&ZMS MUST CONTAIN ONE'                             01643400
              MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                    01643500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01643600
              AGO   .ZG443E                                             01643700
.ZG443C       ANOP  ,                                                   01643800
&ZXMF         SETC  ''          RESET IN/OUTPUT                         01644000
&ZMS          SETC  '"MF='      *KUKWA* MNOTE                           01644800
&ZMS          SETC  '&ZMS.&MF"'                                         01645600
&ZMS          SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '           01646400
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                 01647200
&ZMS          SETC  '&ZMS "S",'                 VALID KEYWORD           01648000
&ZMS          SETC  '&ZMS "L",'                 VALID KEYWORD           01648800
&ZMS          SETC  '&ZMS OR "E".'              VALID KEYWORD           01649300
              MNOTE 8,' &ZMS '                                          01649800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01650400
              AGO   .ZG443E                                             01651200
.ZG443D       ANOP  ,                                                   01652000
&XMF          SETC  'S'         SET DEFAULT KEYWORD                     01652800
&XMFSCK       SETC  'COMPLETE'  COMPLETE CHECKING                       01653600
.ZG443E       ANOP  ,                                                   01654400
.********************************************************************   01655200
.***AG.MF02  FULL MACRO SYNTAX CHECKING                                 01656000
.********************************************************************   01656800
              ACTR  10000                                               01657600
.*-------------------------------------------------------------------   01658400
.***AG.MF03 MF=(SLE)                                                    01659200
              AIF   ('&XMF' EQ 'L').ZGMFX                               01660000
.*------------------------------------------------------------------    01660800
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           01661600
&XFUNC        SETC  ''          INITIALIZE XVARIABLE                    01662400
.*-------------------------------------------------------------------   01663200
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           01664000
.ZG3          ANOP  ,                                                   01664800
              AIF   (K'&FUNC(1) LE 0).ZG3A                              01665600
&ZTLC         SETC 'ADDA'                                               01666100
              AIF   ('&FUNC(1)' NE '&ZTLC').ZG22                        01666600
&XFUNC        SETC  'ADDA'      SET KEYWORD                             01667200
              AIF   (N'&FUNC LE 1).ZG3A         CK NUM                  01668000
&ZMS          SETC  '"FUNC='    *KPOSA* MNOTE                           01668800
&ZMS          SETC  '&ZMS.&FUNC"'                                       01669600
&ZMS          SETC  '&ZMS "FUNC"'                                       01670400
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 01671200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01672000
.ZG3A         ANOP  ,                                                   01672800
.*------------------------------------------------------------------    01673600
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           01674400
&ZCVAL        SETC ''           CLEAR ERROR KEY ACCUMULATOR             01675200
.ZG3A0        AIF   (K'&SECTION LE 0).ZG3A1     OK                      01676000
&ZCVAL        SETC '&ZCVAL SECTION'             INCORRECT KEY USED      01676800
.ZG3A1        AIF   (K'&OLDNAME LE 0).ZG3A2     OK                      01680800
&ZCVAL        SETC '&ZCVAL OLDNAME'             INCORRECT KEY USED      01684800
.ZG3A2        AIF   (K'&NEWNAME LE 0).ZG3A3     OK                      01685000
&ZCVAL        SETC '&ZCVAL NEWNAME'             INCORRECT KEY USED      01685200
.ZG3A3        AIF   (K'&COUNT LE 0).ZG3A4       OK                      01685300
&ZCVAL        SETC '&ZCVAL COUNT'               INCORRECT KEY USED      01685400
.ZG3A4        AIF   (K'&MODE LE 0).ZG3A5        OK                      01685500
&ZCVAL        SETC '&ZCVAL MODE'                INCORRECT KEY USED      01685600
.ZG3A5        AIF   (K'&CLASS LE 0).ZG3A6       OK                      01689200
&ZCVAL        SETC '&ZCVAL CLASS'               INCORRECT KEY USED      01692800
.ZG3A6        AIF   (K'&CALLIB LE 0).ZG3A7      OK                      01692900
&ZCVAL        SETC '&ZCVAL CALLIB'              INCORRECT KEY USED      01693000
.ZG3A7        AIF   (K'&PATHNAME LE 0).ZG3A8    OK                      01693100
&ZCVAL        SETC '&ZCVAL PATHNAME'            INCORRECT KEY USED      01693200
.ZG3A8        AIF   (K'&DIALOG LE 0).ZG3A9      OK                      01693300
&ZCVAL        SETC '&ZCVAL DIALOG'              INCORRECT KEY USED      01693400
.ZG3A9        AIF   (K'&INTENT LE 0).ZG3A10     OK                      01693500
&ZCVAL        SETC '&ZCVAL INTENT'              INCORRECT KEY USED      01693600
.ZG3A10       AIF   (K'&PROTECT LE 0).ZG3A11    OK                      01693700
&ZCVAL        SETC '&ZCVAL PROTECT'             INCORRECT KEY USED      01693800
.ZG3A11       AIF   (K'&RENAMEL LE 0).ZG3A12    OK                      01693900
&ZCVAL        SETC '&ZCVAL RENAMEL'             INCORRECT KEY USED      01694000
.ZG3A12       AIF   (K'&AREA LE 0).ZG3A13       OK                      01694200
&ZCVAL        SETC '&ZCVAL AREA'                INCORRECT KEY USED      01694400
.ZG3A13       AIF   (K'&CURSOR LE 0).ZG3A14     OK                      01695200
&ZCVAL        SETC '&ZCVAL CURSOR'              INCORRECT KEY USED      01696000
.ZG3A14       AIF   (K'&RECTYPE LE 0).ZG3A15    OK                      01696800
&ZCVAL        SETC '&ZCVAL RECTYPE'             INCORRECT KEY USED      01697600
.ZG3A15       AIF   (K'&OFFSET LE 0).ZG3A16     OK                      01698400
&ZCVAL        SETC '&ZCVAL OFFSET'              INCORRECT KEY USED      01699200
.ZG3A16       AIF   (K'&SYMBOL LE 0).ZG3A17     OK                      01700000
&ZCVAL        SETC '&ZCVAL SYMBOL'              INCORRECT KEY USED      01700800
.ZG3A17       AIF   (K'&TCOUNT LE 0).ZG3A18     OK                      01701600
&ZCVAL        SETC '&ZCVAL TCOUNT'              INCORRECT KEY USED      01702400
.ZG3A18       AIF   (K'&NTYPE LE 0).ZG3A19      OK                      01702800
&ZCVAL        SETC '&ZCVAL NTYPE'               INCORRECT KEY USED      01703200
.ZG3A19       AIF   (K'&ITYPE LE 0).ZG3A20      OK                      01703300
&ZCVAL        SETC '&ZCVAL ITYPE'               INCORRECT KEY USED      01703400
.ZG3A20       AIF   (K'&DLLNAME LE 0).ZG3A21    OK                      01703500
&ZCVAL        SETC '&ZCVAL DLLNAME'             INCORRECT KEY USED      01703600
.ZG3A21       AIF   (K'&INAME LE 0).ZG3A22      OK                      01703700
&ZCVAL        SETC '&ZCVAL INAME'               INCORRECT KEY USED      01703800
.ZG3A22       AIF   (K'&INTYPE LE 0).ZG3A23     OK                      01703900
&ZCVAL        SETC '&ZCVAL INTYPE'              INCORRECT KEY USED      01704000
.ZG3A23       AIF   (K'&DDNAME LE 0).ZG3A24     OK                      01704800
&ZCVAL        SETC '&ZCVAL DDNAME'              INCORRECT KEY USED      01705600
.ZG3A24       AIF   (K'&DEPTR LE 0).ZG3A25      OK                      01708000
&ZCVAL        SETC '&ZCVAL DEPTR'               INCORRECT KEY USED      01710400
.ZG3A25       AIF   (K'&MEMBER LE 0).ZG3A26     OK                      01710500
&ZCVAL        SETC '&ZCVAL MEMBER'              INCORRECT KEY USED      01710600
.ZG3A26       AIF   (K'&DCBPTR LE 0).ZG3A27     OK                      01710700
&ZCVAL        SETC '&ZCVAL DCBPTR'              INCORRECT KEY USED      01710800
.ZG3A27       AIF   (K'&EPTOKEN LE 0).ZG3A28    OK                      01711400
&ZCVAL        SETC '&ZCVAL EPTOKEN'             INCORRECT KEY USED      01712000
.ZG3A28       AIF   (K'&ATTRIB LE 0).ZG3A29     OK                      01712800
&ZCVAL        SETC '&ZCVAL ATTRIB'              INCORRECT KEY USED      01713600
.ZG3A29       AIF   (K'&ALIASES LE 0).ZG3A30    OK                      01714400
&ZCVAL        SETC '&ZCVAL ALIASES'             INCORRECT KEY USED      01715200
.ZG3A30       AIF   (K'&EPLOC LE 0).ZG3A31      OK                      01716000
&ZCVAL        SETC '&ZCVAL EPLOC'               INCORRECT KEY USED      01716800
.ZG3A31       AIF   (K'&IDENTIFY LE 0).ZG3A32   OK                      01717600
&ZCVAL        SETC '&ZCVAL IDENTIFY'            INCORRECT KEY USED      01718400
.ZG3A32       AIF   (K'&EXTLST LE 0).ZG3A33     OK                      01719200
&ZCVAL        SETC '&ZCVAL EXTLST'              INCORRECT KEY USED      01720000
.ZG3A33       AIF   (K'&LNAME LE 0).ZG3A34      OK                      01720800
&ZCVAL        SETC '&ZCVAL LNAME'               INCORRECT KEY USED      01721600
.ZG3A34       AIF   (K'&NEWSECT LE 0).ZG3A35    OK                      01722400
&ZCVAL        SETC '&ZCVAL NEWSECT'             INCORRECT KEY USED      01723200
.ZG3A35       AIF   (K'&ENDDATA LE 0).ZG3A36    OK                      01724000
&ZCVAL        SETC '&ZCVAL ENDDATA'             INCORRECT KEY USED      01724800
.ZG3A36       AIF   (K'&MODLIB LE 0).ZG3A37     OK                      01725600
&ZCVAL        SETC '&ZCVAL MODLIB'              INCORRECT KEY USED      01726400
.ZG3A37       AIF   (K'&SNAME LE 0).ZG3A38      OK                      01727200
&ZCVAL        SETC '&ZCVAL SNAME'               INCORRECT KEY USED      01728000
.ZG3A38       AIF   (K'&REPLACE LE 0).ZG3A39    OK                      01728800
&ZCVAL        SETC '&ZCVAL REPLACE'             INCORRECT KEY USED      01729600
.ZG3A39       AIF   (K'&LIBOPT LE 0).ZG3A40     OK                      01730400
&ZCVAL        SETC '&ZCVAL LIBOPT'              INCORRECT KEY USED      01731200
.ZG3A40       AIF   (K'&OPTION LE 0).ZG3A41     OK                      01732000
&ZCVAL        SETC '&ZCVAL OPTION'              INCORRECT KEY USED      01732800
.ZG3A41       AIF   (K'&OPTVAL LE 0).ZG3A42     OK                      01733600
&ZCVAL        SETC '&ZCVAL OPTVAL'              INCORRECT KEY USED      01734400
.ZG3A42       AIF   (K'&PARMS LE 0).ZG3A43      OK                      01734800
&ZCVAL        SETC '&ZCVAL PARMS'               INCORRECT KEY USED      01735200
.ZG3A43       AIF   (K'&FILES LE 0).ZG3A44      OK                      01735600
&ZCVAL        SETC '&ZCVAL FILES'               INCORRECT KEY USED      01736000
.ZG3A44       AIF   (K'&EXITS LE 0).ZG3A45      OK                      01736800
&ZCVAL        SETC '&ZCVAL EXITS'               INCORRECT KEY USED      01737600
.ZG3A45       AIF   (K'&OPTIONS LE 0).ZG3A46    OK                      01738400
&ZCVAL        SETC '&ZCVAL OPTIONS'             INCORRECT KEY USED      01739200
.ZG3A46       AIF   (K'&ORIGIN LE 0).ZG3A47     OK                      01740000
&ZCVAL        SETC '&ZCVAL ORIGIN'              INCORRECT KEY USED      01740800
.ZG3A47       AIF   (K'&REGION LE 0).ZG3A48     OK                      01741600
&ZCVAL        SETC '&ZCVAL REGION'              INCORRECT KEY USED      01742400
.ZG3A48       AIF   (K'&ZCVAL LE 0).ZG3A49      OK                      01743200
&ZCVAL        SETC '&ZCVAL'(2,K'&ZCVAL-1)                               01744000
              AIF  (K'&ZCVAL LE 160).ZG3A49A                            01744100
&ZCVAL        SETC '&ZCVAL'(1,160)                                      01744200
&ZCVAL        SETC '&ZCVAL....'                                         01744300
.ZG3A49A      ANOP                                                      01744500
&ZMS          SETC  '"FUNC'     *KMEIA* MNOTE                           01744800
&ZMS          SETC  '&ZMS.=&FUNC"'                                      01745600
&ZMS          SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'                01746400
              MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'                01747200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01748000
.ZG3A49       ANOP  ,                                                   01748800
.*----------------------------------------------------------------***   01749600
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     01750400
              AIF   (N'&WORKMOD LE 1).ZG5A      CK NUM                  01751200
&ZMS          SETC  '"WORKMOD='                 *KPOSA* MNOTE           01752000
&ZMS          SETC  '&ZMS.&WORKMOD"'                                    01752800
&ZMS          SETC  '&ZMS "WORKMOD"'                                    01753600
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 01754400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01755200
.ZG5A         ANOP  ,                                                   01756000
.*-------------------------------------------------------------------   01756800
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         01757600
&ZXWORKMOD    SETC  'INPUT'     SET IN/OUTPUT                           01758400
&XWORKMOD     SETC  '&WORKMOD(1)'               SET XVARIABLE           01759200
              AIF   (N'&WORKMOD GT 1).ZG5B      MULTI PARMS             01760000
&XWORKMOD     SETC  '&WORKMOD'  SET XVARIABLE                           01760800
.ZG5B         AIF   (K'&WORKMOD(1) GT 0).ZG5C                           01761600
&ZXWORKMOD    SETC  ''          RESET IN/OUTPUT                         01762400
&ZMS          SETC  ' '         *KRQDA*                                 01763200
&ZMS          SETC  '&ZMS "WORKMOD" KEY AND ITS ARGUMENT'               01764000
              MNOTE 8,' &ZMS ARE REQUIRED.'                             01764800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01765600
.ZG5C         ANOP  ,                                                   01766400
.*-------------------------------------------------------------------   01767200
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    01768000
              AIF   (K'&ZXWORKMOD LE 0).ZG5R    NOT I/O                 01768800
              AIF   ('&XWORKMOD'(1,1) NE '(').ZG5R                      01769600
&ZCGPR        SETC  '&XWORKMOD'(2,K'&XWORKMOD-2)                        01770400
              AIF   ('&ZCGPR'(1,1) NE '0').ZG5P                         01771200
              AIF   (K'&ZCGPR GT 2).ZG5Q                                01772000
              AIF   ('&ZCGPR' EQ '0').ZG5Q                              01772800
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       01773600
              AIF   (T'&ZCGPR NE 'N').ZG5Q      INVALID REG NAME        01774400
.ZG5P         ANOP  ,                                                   01775200
              AIF   (T'&ZCGPR NE 'N').ZG5R      NON NUMERIC             01776000
              AIF   ('&ZCGPR' LT '2').ZG5Q                              01776800
              AIF   ('&ZCGPR' LE '12').ZG5R                             01777600
.ZG5Q         ANOP  ,                                                   01778400
&ZMS          SETC  '"WORKMOD='                 *KGPRA* MNOTE           01779200
&ZMS          SETC  '&ZMS.&WORKMOD"'                                    01780000
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           01780800
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    01781600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01782400
.ZG5R         ANOP  ,                                                   01783200
.*----------------------------------------------------------------***   01784000
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     01784800
              AIF   (N'&ANAME LE 1).ZG8A        CK NUM                  01785600
&ZMS          SETC  '"ANAME='   *KPOSA* MNOTE                           01786400
&ZMS          SETC  '&ZMS.&ANAME"'                                      01787200
&ZMS          SETC  '&ZMS "ANAME"'                                      01788000
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 01788800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01789600
.ZG8A         ANOP  ,                                                   01790400
.*-------------------------------------------------------------------   01791200
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         01792000
&ZXANAME      SETC  'INPUT'     SET IN/OUTPUT                           01792800
&XANAME       SETC  '&ANAME(1)'                 SET XVARIABLE           01793600
              AIF   (N'&ANAME GT 1).ZG8B        MULTI PARMS             01794400
&XANAME       SETC  '&ANAME'    SET XVARIABLE                           01795200
.ZG8B         AIF   (K'&ANAME(1) GT 0).ZG8C                             01796000
&ZXANAME      SETC  ''          RESET IN/OUTPUT                         01796800
&ZMS          SETC  ' '         *KRQDA*                                 01797600
&ZMS          SETC  '&ZMS "ANAME" KEY AND ITS ARGUMENT'                 01798400
              MNOTE 8,' &ZMS ARE REQUIRED.'                             01799200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01800000
.ZG8C         ANOP  ,                                                   01800800
.*-------------------------------------------------------------------   01801600
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    01802400
              AIF   (K'&ZXANAME LE 0).ZG8R      NOT I/O                 01803200
              AIF   ('&XANAME'(1,1) NE '(').ZG8R                        01804000
&ZCGPR        SETC  '&XANAME'(2,K'&XANAME-2)                            01804800
              AIF   ('&ZCGPR'(1,1) NE '0').ZG8P                         01805600
              AIF   (K'&ZCGPR GT 2).ZG8Q                                01806400
              AIF   ('&ZCGPR' EQ '0').ZG8Q                              01807200
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       01808000
              AIF   (T'&ZCGPR NE 'N').ZG8Q      INVALID REG NAME        01808800
.ZG8P         ANOP  ,                                                   01809600
              AIF   (T'&ZCGPR NE 'N').ZG8R      NON NUMERIC             01810400
              AIF   ('&ZCGPR' LT '2').ZG8Q                              01811200
              AIF   ('&ZCGPR' LE '12').ZG8R                             01812000
.ZG8Q         ANOP  ,                                                   01812800
&ZMS          SETC  '"ANAME='   *KGPRA* MNOTE                           01813600
&ZMS          SETC  '&ZMS.&ANAME"'                                      01814400
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           01815200
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    01816000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01816800
.ZG8R         ANOP  ,                                                   01817600
.*----------------------------------------------------------------***   01818400
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     01819200
              AIF   (N'&ENAME LE 1).ZG11A       CK NUM                  01820000
&ZMS          SETC  '"ENAME='   *KPOSA* MNOTE                           01820800
&ZMS          SETC  '&ZMS.&ENAME"'                                      01821600
&ZMS          SETC  '&ZMS "ENAME"'                                      01822400
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 01823200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01824000
.ZG11A        ANOP  ,                                                   01824800
.*-------------------------------------------------------------------   01825600
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         01826400
&ZXENAME      SETC  'INPUT'     SET IN/OUTPUT                           01827200
&XENAME       SETC  '0'                                                 01828000
              AIF   (K'&ENAME(1) LE 0).ZG11B    PARM                    01828800
&XENAME       SETC  '&ENAME(1)'                 SET XVARIABLE           01829600
              AIF   (N'&ENAME GT 1).ZG11B       MULTI PARMS             01830400
&XENAME       SETC  '&ENAME'    SET XVARIABLE                           01831200
.ZG11B        ANOP  ,                                                   01832000
.*-------------------------------------------------------------------   01832800
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    01833600
              AIF   (K'&ZXENAME LE 0).ZG11R     NOT I/O                 01834400
              AIF   ('&XENAME' EQ '0').ZG11R                            01835200
              AIF   ('&XENAME'(1,1) NE '(').ZG11R                       01836000
&ZCGPR        SETC  '&XENAME'(2,K'&XENAME-2)                            01836800
              AIF   ('&ZCGPR'(1,1) NE '0').ZG11P                        01837600
              AIF   (K'&ZCGPR GT 2).ZG11Q                               01838400
              AIF   ('&ZCGPR' EQ '0').ZG11Q                             01839200
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       01840000
              AIF   (T'&ZCGPR NE 'N').ZG11Q     INVALID REG NAME        01840800
.ZG11P        ANOP  ,                                                   01841600
              AIF   (T'&ZCGPR NE 'N').ZG11R     NON NUMERIC             01842400
              AIF   ('&ZCGPR' LT '2').ZG11Q                             01843200
              AIF   ('&ZCGPR' LE '12').ZG11R                            01844000
.ZG11Q        ANOP  ,                                                   01844800
&ZMS          SETC  '"ENAME='   *KGPRA* MNOTE                           01845600
&ZMS          SETC  '&ZMS.&ENAME"'                                      01846400
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           01847200
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    01848000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01848800
.ZG11R        ANOP  ,                                                   01849600
.*----------------------------------------------------------------***   01850400
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     01851200
              AIF   (N'&AMODE LE 1).ZG14A       CK NUM                  01852000
&ZMS          SETC  '"AMODE='   *KPOSA* MNOTE                           01852800
&ZMS          SETC  '&ZMS.&AMODE"'                                      01853600
&ZMS          SETC  '&ZMS "AMODE"'                                      01854400
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 01855200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01856000
.ZG14A        ANOP  ,                                                   01856800
.*-------------------------------------------------------------------   01857600
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         01858400
&ZXAMODE      SETC  'INPUT'     SET IN/OUTPUT                           01859200
&XAMODE       SETC  '0'                                                 01860000
              AIF   (K'&AMODE(1) LE 0).ZG14B    PARM                    01860800
&XAMODE       SETC  '&AMODE(1)'                 SET XVARIABLE           01861600
              AIF   (N'&AMODE GT 1).ZG14B       MULTI PARMS             01862400
&XAMODE       SETC  '&AMODE'    SET XVARIABLE                           01863200
.ZG14B        ANOP  ,                                                   01864000
.*-------------------------------------------------------------------   01864800
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    01865600
              AIF   (K'&ZXAMODE LE 0).ZG14R     NOT I/O                 01866400
              AIF   ('&XAMODE' EQ '0').ZG14R                            01867200
              AIF   ('&XAMODE'(1,1) NE '(').ZG14R                       01868000
&ZCGPR        SETC  '&XAMODE'(2,K'&XAMODE-2)                            01868800
              AIF   ('&ZCGPR'(1,1) NE '0').ZG14P                        01869600
              AIF   (K'&ZCGPR GT 2).ZG14Q                               01870400
              AIF   ('&ZCGPR' EQ '0').ZG14Q                             01871200
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       01872000
              AIF   (T'&ZCGPR NE 'N').ZG14Q     INVALID REG NAME        01872800
.ZG14P        ANOP  ,                                                   01873600
              AIF   (T'&ZCGPR NE 'N').ZG14R     NON NUMERIC             01874400
              AIF   ('&ZCGPR' LT '2').ZG14Q                             01875200
              AIF   ('&ZCGPR' LE '12').ZG14R                            01876000
.ZG14Q        ANOP  ,                                                   01876800
&ZMS          SETC  '"AMODE='   *KGPRA* MNOTE                           01877600
&ZMS          SETC  '&ZMS.&AMODE"'                                      01878400
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           01879200
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    01880000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01880800
.ZG14R        ANOP  ,                                                   01881600
.*------------------------------------------------------------------    01881700
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01881800
&XATYPE       SETC  ''          INITIALIZE XVARIABLE                    01881900
.*-------------------------------------------------------------------   01882000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01882100
.ZG18         ANOP  ,                                                   01882200
              AIF   (K'&ATYPE(1) LE 0).ZG18A                            01882300
&ZTLC         SETC 'A'                                                  01882400
              AIF   ('&ATYPE(1)' NE '&ZTLC').ZG19                       01882500
&XATYPE       SETC  'A'         SET KEYWORD                             01882600
              AIF   (N'&ATYPE LE 1).ZG18A       CK NUM                  01882700
&ZMS          SETC  '"ATYPE='   *KPOSA* MNOTE                           01882800
&ZMS          SETC  '&ZMS.&ATYPE"'                                      01882900
&ZMS          SETC  '&ZMS "ATYPE"'                                      01883000
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 01883100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01883200
.ZG18A        ANOP  ,                                                   01883300
.*-------------------------------------------------------------------   01883400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01883500
.ZG19         ANOP  ,                                                   01883600
&ZTLC         SETC 'S'                                                  01883700
              AIF   ('&ATYPE(1)' NE '&ZTLC').ZG20                       01883800
&XATYPE       SETC  'S'         SET KEYWORD                             01883900
              AIF   (N'&ATYPE LE 1).ZG19A       CK NUM                  01884000
&ZMS          SETC  '"ATYPE='   *KPOSA* MNOTE                           01884100
&ZMS          SETC  '&ZMS.&ATYPE"'                                      01884200
&ZMS          SETC  '&ZMS "ATYPE"'                                      01884300
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 01884400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01884500
.ZG19A        ANOP  ,                                                   01884600
.*-------------------------------------------------------------------   01884700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01884800
.ZG20         ANOP  ,                                                   01884900
&ZTLC         SETC 'P'                                                  01885000
              AIF   ('&ATYPE(1)' NE '&ZTLC').ZG21                       01885100
&XATYPE       SETC  'P'         SET KEYWORD                             01885200
              AIF   (N'&ATYPE LE 1).ZG20A       CK NUM                  01885300
&ZMS          SETC  '"ATYPE='   *KPOSA* MNOTE                           01885400
&ZMS          SETC  '&ZMS.&ATYPE"'                                      01885500
&ZMS          SETC  '&ZMS "ATYPE"'                                      01885600
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 01885700
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01885800
.ZG20A        ANOP  ,                                                   01885900
.*------------------------------------------------------------------    01886000
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           01886100
.ZG21         ANOP  ,                                                   01886200
&ZXATYPE      SETC  'INPUT'     SET IN/OUTPUT                           01886300
              AIF   (K'&XATYPE GT 0).ZG21E      VALID ARG               01886400
              AIF   (T'&ATYPE EQ 'O').ZG21D     OMITTED                 01886500
&ZASYSLNDX    SETA  0                                                   01886600
.ZG21A        ANOP  ,           POSITIONAL MACRO KEY                    01886700
&ZASYSLNDX    SETA  &ZASYSLNDX+1                                        01886800
              AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG21C                    01886900
&ZTLC         SETC 'ATYPE'                                              01887000
              AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG21A           01887100
.ZG21B        ANOP  ,                                                   01887200
&ZXATYPE      SETC  ''          RESET IN/OUTPUT                         01887300
&ZMS          SETC  'THE "ATYPE" KEY'           *KOPTA* MNOTE           01887400
&ZMS          SETC  '&ZMS MUST CONTAIN ONE'                             01887500
              MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                    01887600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01887700
              AGO   .ZG21E                                              01887800
.ZG21C        ANOP  ,                                                   01887900
&ZXATYPE      SETC  ''          RESET IN/OUTPUT                         01888000
&ZMS          SETC  '"ATYPE='   *KUKWA* MNOTE                           01888100
&ZMS          SETC  '&ZMS.&ATYPE"'                                      01888200
&ZMS          SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '           01888300
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                 01888400
&ZMS          SETC  '&ZMS "A",'                 VALID KEYWORD           01888500
&ZMS          SETC  '&ZMS "S",'                 VALID KEYWORD           01888600
&ZMS          SETC  '&ZMS OR "P".'              VALID KEYWORD           01888700
              MNOTE 8,' &ZMS '                                          01888800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01888900
              AGO   .ZG21E                                              01889000
.ZG21D        ANOP  ,                                                   01889100
&XATYPE       SETC  'A'         SET DEFAULT KEYWORD                     01889200
.ZG21E        ANOP  ,                                                   01889300
.*-------------------------------------------------------------------   01889400
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           01889500
.ZG22         ANOP  ,                                                   01889600
&ZTLC         SETC 'ALIGNT'                                             01889700
              AIF   ('&FUNC(1)' NE '&ZTLC').ZG29                        01889800
&XFUNC        SETC  'ALIGNT'    SET KEYWORD                             01889900
              AIF   (N'&FUNC LE 1).ZG22A        CK NUM                  01890000
&ZMS          SETC  '"FUNC='    *KPOSA* MNOTE                           01890100
&ZMS          SETC  '&ZMS.&FUNC"'                                       01890200
&ZMS          SETC  '&ZMS "FUNC"'                                       01890300
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 01890400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01890500
.ZG22A        ANOP  ,                                                   01890600
.*------------------------------------------------------------------    01892000
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           01892800
&ZCVAL        SETC ''           CLEAR ERROR KEY ACCUMULATOR             01893600
.ZG22A0       AIF   (K'&ANAME LE 0).ZG22A1      OK                      01894400
&ZCVAL        SETC '&ZCVAL ANAME'               INCORRECT KEY USED      01895200
.ZG22A1       AIF   (K'&ENAME LE 0).ZG22A2      OK                      01896000
&ZCVAL        SETC '&ZCVAL ENAME'               INCORRECT KEY USED      01896800
.ZG22A2       AIF   (K'&AMODE LE 0).ZG22A3      OK                      01897600
&ZCVAL        SETC '&ZCVAL AMODE'               INCORRECT KEY USED      01898400
.ZG22A3       AIF   (K'&ATYPE LE 0).ZG22A4      OK                      01902500
&ZCVAL        SETC '&ZCVAL ATYPE'               INCORRECT KEY USED      01906600
.ZG22A4       AIF   (K'&OLDNAME LE 0).ZG22A5    OK                      01907300
&ZCVAL        SETC '&ZCVAL OLDNAME'             INCORRECT KEY USED      01908000
.ZG22A5       AIF   (K'&NEWNAME LE 0).ZG22A6    OK                      01908700
&ZCVAL        SETC '&ZCVAL NEWNAME'             INCORRECT KEY USED      01909400
.ZG22A6       AIF   (K'&COUNT LE 0).ZG22A7      OK                      01910100
&ZCVAL        SETC '&ZCVAL COUNT'               INCORRECT KEY USED      01910800
.ZG22A7       AIF   (K'&MODE LE 0).ZG22A8       OK                      01911500
&ZCVAL        SETC '&ZCVAL MODE'                INCORRECT KEY USED      01912200
.ZG22A8       AIF   (K'&CLASS LE 0).ZG22A9      OK                      01912900
&ZCVAL        SETC '&ZCVAL CLASS'               INCORRECT KEY USED      01914400
.ZG22A9       AIF   (K'&CALLIB LE 0).ZG22A10    OK                      01914500
&ZCVAL        SETC '&ZCVAL CALLIB'              INCORRECT KEY USED      01914600
.ZG22A10      AIF   (K'&PATHNAME LE 0).ZG22A11  OK                      01914700
&ZCVAL        SETC '&ZCVAL PATHNAME'            INCORRECT KEY USED      01914800
.ZG22A11      AIF   (K'&DIALOG LE 0).ZG22A12    OK                      01914900
&ZCVAL        SETC '&ZCVAL DIALOG'              INCORRECT KEY USED      01915000
.ZG22A12      AIF   (K'&INTENT LE 0).ZG22A13    OK                      01915100
&ZCVAL        SETC '&ZCVAL INTENT'              INCORRECT KEY USED      01915200
.ZG22A13      AIF   (K'&PROTECT LE 0).ZG22A14   OK                      01915300
&ZCVAL        SETC '&ZCVAL PROTECT'             INCORRECT KEY USED      01915400
.ZG22A14      AIF   (K'&RENAMEL LE 0).ZG22A15   OK                      01915500
&ZCVAL        SETC '&ZCVAL RENAMEL'             INCORRECT KEY USED      01915600
.ZG22A15      AIF   (K'&AREA LE 0).ZG22A16      OK                      01915800
&ZCVAL        SETC '&ZCVAL AREA'                INCORRECT KEY USED      01916000
.ZG22A16      AIF   (K'&CURSOR LE 0).ZG22A17    OK                      01916800
&ZCVAL        SETC '&ZCVAL CURSOR'              INCORRECT KEY USED      01917600
.ZG22A17      AIF   (K'&RECTYPE LE 0).ZG22A18   OK                      01918400
&ZCVAL        SETC '&ZCVAL RECTYPE'             INCORRECT KEY USED      01919200
.ZG22A18      AIF   (K'&OFFSET LE 0).ZG22A19    OK                      01920000
&ZCVAL        SETC '&ZCVAL OFFSET'              INCORRECT KEY USED      01920800
.ZG22A19      AIF   (K'&SYMBOL LE 0).ZG22A20    OK                      01921600
&ZCVAL        SETC '&ZCVAL SYMBOL'              INCORRECT KEY USED      01922400
.ZG22A20      AIF   (K'&TCOUNT LE 0).ZG22A21    OK                      01923200
&ZCVAL        SETC '&ZCVAL TCOUNT'              INCORRECT KEY USED      01924000
.ZG22A21      AIF   (K'&NTYPE LE 0).ZG22A22     OK                      01924400
&ZCVAL        SETC '&ZCVAL NTYPE'               INCORRECT KEY USED      01924800
.ZG22A22      AIF   (K'&ITYPE LE 0).ZG22A23     OK                      01924900
&ZCVAL        SETC '&ZCVAL ITYPE'               INCORRECT KEY USED      01925000
.ZG22A23      AIF   (K'&DLLNAME LE 0).ZG22A24   OK                      01925100
&ZCVAL        SETC '&ZCVAL DLLNAME'             INCORRECT KEY USED      01925200
.ZG22A24      AIF   (K'&INAME LE 0).ZG22A25     OK                      01925300
&ZCVAL        SETC '&ZCVAL INAME'               INCORRECT KEY USED      01925400
.ZG22A25      AIF   (K'&INTYPE LE 0).ZG22A26    OK                      01925500
&ZCVAL        SETC '&ZCVAL INTYPE'              INCORRECT KEY USED      01925600
.ZG22A26      AIF   (K'&DDNAME LE 0).ZG22A27    OK                      01975600
&ZCVAL        SETC '&ZCVAL DDNAME'              INCORRECT KEY USED      02078400
.ZG22A27      AIF   (K'&DEPTR LE 0).ZG22A28     OK                      02080800
&ZCVAL        SETC '&ZCVAL DEPTR'               INCORRECT KEY USED      02083200
.ZG22A28      AIF   (K'&MEMBER LE 0).ZG22A29    OK                      02083300
&ZCVAL        SETC '&ZCVAL MEMBER'              INCORRECT KEY USED      02083400
.ZG22A29      AIF   (K'&DCBPTR LE 0).ZG22A30    OK                      02083500
&ZCVAL        SETC '&ZCVAL DCBPTR'              INCORRECT KEY USED      02083600
.ZG22A30      AIF   (K'&EPTOKEN LE 0).ZG22A31   OK                      02084200
&ZCVAL        SETC '&ZCVAL EPTOKEN'             INCORRECT KEY USED      02084800
.ZG22A31      AIF   (K'&ATTRIB LE 0).ZG22A32    OK                      02085600
&ZCVAL        SETC '&ZCVAL ATTRIB'              INCORRECT KEY USED      02086400
.ZG22A32      AIF   (K'&ALIASES LE 0).ZG22A33   OK                      02087200
&ZCVAL        SETC '&ZCVAL ALIASES'             INCORRECT KEY USED      02088000
.ZG22A33      AIF   (K'&EPLOC LE 0).ZG22A34     OK                      02088800
&ZCVAL        SETC '&ZCVAL EPLOC'               INCORRECT KEY USED      02089600
.ZG22A34      AIF   (K'&IDENTIFY LE 0).ZG22A35  OK                      02090400
&ZCVAL        SETC '&ZCVAL IDENTIFY'            INCORRECT KEY USED      02091200
.ZG22A35      AIF   (K'&EXTLST LE 0).ZG22A36    OK                      02092000
&ZCVAL        SETC '&ZCVAL EXTLST'              INCORRECT KEY USED      02092800
.ZG22A36      AIF   (K'&LNAME LE 0).ZG22A37     OK                      02093600
&ZCVAL        SETC '&ZCVAL LNAME'               INCORRECT KEY USED      02094400
.ZG22A37      AIF   (K'&NEWSECT LE 0).ZG22A38   OK                      02095200
&ZCVAL        SETC '&ZCVAL NEWSECT'             INCORRECT KEY USED      02096000
.ZG22A38      AIF   (K'&ENDDATA LE 0).ZG22A39   OK                      02096800
&ZCVAL        SETC '&ZCVAL ENDDATA'             INCORRECT KEY USED      02097600
.ZG22A39      AIF   (K'&MODLIB LE 0).ZG22A40    OK                      02098400
&ZCVAL        SETC '&ZCVAL MODLIB'              INCORRECT KEY USED      02099200
.ZG22A40      AIF   (K'&SNAME LE 0).ZG22A41     OK                      02100000
&ZCVAL        SETC '&ZCVAL SNAME'               INCORRECT KEY USED      02100800
.ZG22A41      AIF   (K'&REPLACE LE 0).ZG22A42   OK                      02101600
&ZCVAL        SETC '&ZCVAL REPLACE'             INCORRECT KEY USED      02102400
.ZG22A42      AIF   (K'&LIBOPT LE 0).ZG22A43    OK                      02103200
&ZCVAL        SETC '&ZCVAL LIBOPT'              INCORRECT KEY USED      02104000
.ZG22A43      AIF   (K'&OPTION LE 0).ZG22A44    OK                      02104800
&ZCVAL        SETC '&ZCVAL OPTION'              INCORRECT KEY USED      02105600
.ZG22A44      AIF   (K'&OPTVAL LE 0).ZG22A45    OK                      02106400
&ZCVAL        SETC '&ZCVAL OPTVAL'              INCORRECT KEY USED      02107200
.ZG22A45      AIF   (K'&PARMS LE 0).ZG22A46     OK                      02107400
&ZCVAL        SETC '&ZCVAL PARMS'               INCORRECT KEY USED      02107600
.ZG22A46      AIF   (K'&FILES LE 0).ZG22A47     OK                      02108200
&ZCVAL        SETC '&ZCVAL FILES'               INCORRECT KEY USED      02108800
.ZG22A47      AIF   (K'&EXITS LE 0).ZG22A48     OK                      02109600
&ZCVAL        SETC '&ZCVAL EXITS'               INCORRECT KEY USED      02110400
.ZG22A48      AIF   (K'&OPTIONS LE 0).ZG22A49   OK                      02111200
&ZCVAL        SETC '&ZCVAL OPTIONS'             INCORRECT KEY USED      02112000
.ZG22A49      AIF   (K'&ORIGIN LE 0).ZG22A50    OK                      02112800
&ZCVAL        SETC '&ZCVAL ORIGIN'              INCORRECT KEY USED      02113600
.ZG22A50      AIF   (K'&REGION LE 0).ZG22A51    OK                      02114400
&ZCVAL        SETC '&ZCVAL REGION'              INCORRECT KEY USED      02115200
.ZG22A51      AIF   (K'&ZCVAL LE 0).ZG22A52     OK                      02116000
&ZCVAL        SETC '&ZCVAL'(2,K'&ZCVAL-1)                               02116800
              AIF  (K'&ZCVAL LE 160).ZG22A52A                           02116900
&ZCVAL        SETC '&ZCVAL'(1,160)                                      02117000
&ZCVAL        SETC '&ZCVAL....'                                         02117100
.ZG22A52A     ANOP                                                      02117300
&ZMS          SETC  '"FUNC'     *KMEIA* MNOTE                           02117600
&ZMS          SETC  '&ZMS.=&FUNC"'                                      02118400
&ZMS          SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'                02119200
              MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'                02120000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             02120800
.ZG22A52      ANOP  ,                                                   02121600
.*----------------------------------------------------------------***   02122400
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     02123200
              AIF   (N'&WORKMOD LE 1).ZG24A     CK NUM                  02124000
&ZMS          SETC  '"WORKMOD='                 *KPOSA* MNOTE           02124800
&ZMS          SETC  '&ZMS.&WORKMOD"'                                    02125600
&ZMS          SETC  '&ZMS "WORKMOD"'                                    02126400
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 02127200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             02128000
.ZG24A        ANOP  ,                                                   02128800
.*-------------------------------------------------------------------   02129600
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         02130400
&ZXWORKMOD    SETC  'INPUT'     SET IN/OUTPUT                           02131200
&XWORKMOD     SETC  '&WORKMOD(1)'               SET XVARIABLE           02132000
              AIF   (N'&WORKMOD GT 1).ZG24B     MULTI PARMS             02132800
&XWORKMOD     SETC  '&WORKMOD'  SET XVARIABLE                           02133600
.ZG24B        AIF   (K'&WORKMOD(1) GT 0).ZG24C                          02134400
&ZXWORKMOD    SETC  ''          RESET IN/OUTPUT                         02135200
&ZMS          SETC  ' '         *KRQDA*                                 02136000
&ZMS          SETC  '&ZMS "WORKMOD" KEY AND ITS ARGUMENT'               02136800
              MNOTE 8,' &ZMS ARE REQUIRED.'                             02137600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             02138400
.ZG24C        ANOP  ,                                                   02139200
.*-------------------------------------------------------------------   02140000
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    02140800
              AIF   (K'&ZXWORKMOD LE 0).ZG24R   NOT I/O                 02141600
              AIF   ('&XWORKMOD'(1,1) NE '(').ZG24R                     02142400
&ZCGPR        SETC  '&XWORKMOD'(2,K'&XWORKMOD-2)                        02143200
              AIF   ('&ZCGPR'(1,1) NE '0').ZG24P                        02144000
              AIF   (K'&ZCGPR GT 2).ZG24Q                               02144800
              AIF   ('&ZCGPR' EQ '0').ZG24Q                             02145600
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       02146400
              AIF   (T'&ZCGPR NE 'N').ZG24Q     INVALID REG NAME        02147200
.ZG24P        ANOP  ,                                                   02148000
              AIF   (T'&ZCGPR NE 'N').ZG24R     NON NUMERIC             02148800
              AIF   ('&ZCGPR' LT '2').ZG24Q                             02149600
              AIF   ('&ZCGPR' LE '12').ZG24R                            02150400
.ZG24Q        ANOP  ,                                                   02151200
&ZMS          SETC  '"WORKMOD='                 *KGPRA* MNOTE           02152000
&ZMS          SETC  '&ZMS.&WORKMOD"'                                    02152800
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           02153600
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    02154400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             02155200
.ZG24R        ANOP  ,                                                   02155600
.*----------------------------------------------------------------***   02156100
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     02156200
              AIF   (N'&SECTION LE 1).ZG27A     CK NUM                  02156300
&ZMS          SETC  '"SECTION='                 *KPOSA* MNOTE           02156400
&ZMS          SETC  '&ZMS.&SECTION"'                                    02156500
&ZMS          SETC  '&ZMS "SECTION"'                                    02156600
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 02156700
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             02156800
.ZG27A        ANOP  ,                                                   02156900
.*-------------------------------------------------------------------   02157000
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         02157100
&ZXSECTION    SETC  'INPUT'     SET IN/OUTPUT                           02157200
&XSECTION     SETC  '&SECTION(1)'               SET XVARIABLE           02157300
              AIF   (N'&SECTION GT 1).ZG27B     MULTI PARMS             02157400
&XSECTION     SETC  '&SECTION'  SET XVARIABLE                           02157500
.ZG27B        AIF   (K'&SECTION(1) GT 0).ZG27C                          02157600
&ZXSECTION    SETC  ''          RESET IN/OUTPUT                         02157700
&ZMS          SETC  ' '         *KRQDA*                                 02157800
&ZMS          SETC  '&ZMS "SECTION" KEY AND ITS ARGUMENT'               02157900
              MNOTE 8,' &ZMS ARE REQUIRED.'                             02158000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             02158100
.ZG27C        ANOP  ,                                                   02158200
.*-------------------------------------------------------------------   02158300
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    02158400
              AIF   (K'&ZXSECTION LE 0).ZG27R   NOT I/O                 02158500
              AIF   ('&XSECTION'(1,1) NE '(').ZG27R                     02158600
&ZCGPR        SETC  '&XSECTION'(2,K'&XSECTION-2)                        02158700
              AIF   ('&ZCGPR'(1,1) NE '0').ZG27P                        02158800
              AIF   (K'&ZCGPR GT 2).ZG27Q                               02158900
              AIF   ('&ZCGPR' EQ '0').ZG27Q                             02159000
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       02159100
              AIF   (T'&ZCGPR NE 'N').ZG27Q     INVALID REG NAME        02159200
.ZG27P        ANOP  ,                                                   02159300
              AIF   (T'&ZCGPR NE 'N').ZG27R     NON NUMERIC             02159400
              AIF   ('&ZCGPR' LT '2').ZG27Q                             02159500
              AIF   ('&ZCGPR' LE '12').ZG27R                            02159600
.ZG27Q        ANOP  ,                                                   02159700
&ZMS          SETC  '"SECTION='                 *KGPRA* MNOTE           02159800
&ZMS          SETC  '&ZMS.&SECTION"'                                    02159900
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           02160000
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    02160100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             02160200
.ZG27R        ANOP  ,                                                   02160300
.*-------------------------------------------------------------------   02160400
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           02160500
.ZG29         ANOP  ,                                                   02160600
&ZTLC         SETC 'ALTERW'                                             02160700
              AIF   ('&FUNC(1)' NE '&ZTLC').ZG60                        02160800
&XFUNC        SETC  'ALTERW'    SET KEYWORD                             02160900
              AIF   (N'&FUNC LE 1).ZG29A        CK NUM                  02161000
&ZMS          SETC  '"FUNC='    *KPOSA* MNOTE                           02161100
&ZMS          SETC  '&ZMS.&FUNC"'                                       02161200
&ZMS          SETC  '&ZMS "FUNC"'                                       02161300
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 02161400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             02161500
.ZG29A        ANOP  ,                                                   02161600
.*------------------------------------------------------------------    02161700
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           02161800
&ZCVAL        SETC ''           CLEAR ERROR KEY ACCUMULATOR             02161900
.ZG29A0       AIF   (K'&ANAME LE 0).ZG29A1      OK                      02162000
&ZCVAL        SETC '&ZCVAL ANAME'               INCORRECT KEY USED      02162100
.ZG29A1       AIF   (K'&ENAME LE 0).ZG29A2      OK                      02162200
&ZCVAL        SETC '&ZCVAL ENAME'               INCORRECT KEY USED      02162300
.ZG29A2       AIF   (K'&AMODE LE 0).ZG29A3      OK                      02162400
&ZCVAL        SETC '&ZCVAL AMODE'               INCORRECT KEY USED      02162500
.ZG29A3       AIF   (K'&SECTION LE 0).ZG29A4    OK                      02162600
&ZCVAL        SETC '&ZCVAL SECTION'             INCORRECT KEY USED      02162700
.ZG29A4       AIF   (K'&CALLIB LE 0).ZG29A5     OK                      02162800
&ZCVAL        SETC '&ZCVAL CALLIB'              INCORRECT KEY USED      02162900
.ZG29A5       AIF   (K'&PATHNAME LE 0).ZG29A6   OK                      02163000
&ZCVAL        SETC '&ZCVAL PATHNAME'            INCORRECT KEY USED      02163100
.ZG29A6       AIF   (K'&DIALOG LE 0).ZG29A7     OK                      02163200
&ZCVAL        SETC '&ZCVAL DIALOG'              INCORRECT KEY USED      02163300
.ZG29A7       AIF   (K'&INTENT LE 0).ZG29A8     OK                      02163400
&ZCVAL        SETC '&ZCVAL INTENT'              INCORRECT KEY USED      02163500
.ZG29A8       AIF   (K'&PROTECT LE 0).ZG29A9    OK                      02163600
&ZCVAL        SETC '&ZCVAL PROTECT'             INCORRECT KEY USED      02163700
.ZG29A9       AIF   (K'&RENAMEL LE 0).ZG29A10   OK                      02163800
&ZCVAL        SETC '&ZCVAL RENAMEL'             INCORRECT KEY USED      02163900
.ZG29A10      AIF   (K'&AREA LE 0).ZG29A11      OK                      02164000
&ZCVAL        SETC '&ZCVAL AREA'                INCORRECT KEY USED      02164100
.ZG29A11      AIF   (K'&CURSOR LE 0).ZG29A12    OK                      02164200
&ZCVAL        SETC '&ZCVAL CURSOR'              INCORRECT KEY USED      02164300
.ZG29A12      AIF   (K'&RECTYPE LE 0).ZG29A13   OK                      02164400
&ZCVAL        SETC '&ZCVAL RECTYPE'             INCORRECT KEY USED      02164500
.ZG29A13      AIF   (K'&OFFSET LE 0).ZG29A14    OK                      02164600
&ZCVAL        SETC '&ZCVAL OFFSET'              INCORRECT KEY USED      02164700
.ZG29A14      AIF   (K'&SYMBOL LE 0).ZG29A15    OK                      02164800
&ZCVAL        SETC '&ZCVAL SYMBOL'              INCORRECT KEY USED      02164900
.ZG29A15      AIF   (K'&TCOUNT LE 0).ZG29A16    OK                      02165000
&ZCVAL        SETC '&ZCVAL TCOUNT'              INCORRECT KEY USED      02165100
.ZG29A16      AIF   (K'&NTYPE LE 0).ZG29A17     OK                      02165200
&ZCVAL        SETC '&ZCVAL NTYPE'               INCORRECT KEY USED      02165300
.ZG29A17      AIF   (K'&ITYPE LE 0).ZG29A18     OK                      02165400
&ZCVAL        SETC '&ZCVAL ITYPE'               INCORRECT KEY USED      02165500
.ZG29A18      AIF   (K'&DLLNAME LE 0).ZG29A19   OK                      02165600
&ZCVAL        SETC '&ZCVAL DLLNAME'             INCORRECT KEY USED      02165700
.ZG29A19      AIF   (K'&INAME LE 0).ZG29A20     OK                      02165800
&ZCVAL        SETC '&ZCVAL INAME'               INCORRECT KEY USED      02165900
.ZG29A20      AIF   (K'&INTYPE LE 0).ZG29A21    OK                      02166000
&ZCVAL        SETC '&ZCVAL INTYPE'              INCORRECT KEY USED      02166100
.ZG29A21      AIF   (K'&DDNAME LE 0).ZG29A22    OK                      02166200
&ZCVAL        SETC '&ZCVAL DDNAME'              INCORRECT KEY USED      02166300
.ZG29A22      AIF   (K'&DEPTR LE 0).ZG29A23     OK                      02166400
&ZCVAL        SETC '&ZCVAL DEPTR'               INCORRECT KEY USED      02166500
.ZG29A23      AIF   (K'&MEMBER LE 0).ZG29A24    OK                      02166600
&ZCVAL        SETC '&ZCVAL MEMBER'              INCORRECT KEY USED      02166700
.ZG29A24      AIF   (K'&DCBPTR LE 0).ZG29A25    OK                      02166800
&ZCVAL        SETC '&ZCVAL DCBPTR'              INCORRECT KEY USED      02166900
.ZG29A25      AIF   (K'&EPTOKEN LE 0).ZG29A26   OK                      02167000
&ZCVAL        SETC '&ZCVAL EPTOKEN'             INCORRECT KEY USED      02167100
.ZG29A26      AIF   (K'&ATTRIB LE 0).ZG29A27    OK                      02167200
&ZCVAL        SETC '&ZCVAL ATTRIB'              INCORRECT KEY USED      02167300
.ZG29A27      AIF   (K'&ALIASES LE 0).ZG29A28   OK                      02167400
&ZCVAL        SETC '&ZCVAL ALIASES'             INCORRECT KEY USED      02167500
.ZG29A28      AIF   (K'&EPLOC LE 0).ZG29A29     OK                      02167600
&ZCVAL        SETC '&ZCVAL EPLOC'               INCORRECT KEY USED      02167700
.ZG29A29      AIF   (K'&IDENTIFY LE 0).ZG29A30  OK                      02167800
&ZCVAL        SETC '&ZCVAL IDENTIFY'            INCORRECT KEY USED      02167900
.ZG29A30      AIF   (K'&EXTLST LE 0).ZG29A31    OK                      02168000
&ZCVAL        SETC '&ZCVAL EXTLST'              INCORRECT KEY USED      02168100
.ZG29A31      AIF   (K'&LNAME LE 0).ZG29A32     OK                      02168200
&ZCVAL        SETC '&ZCVAL LNAME'               INCORRECT KEY USED      02168300
.ZG29A32      AIF   (K'&NEWSECT LE 0).ZG29A33   OK                      02168400
&ZCVAL        SETC '&ZCVAL NEWSECT'             INCORRECT KEY USED      02168500
.ZG29A33      AIF   (K'&ENDDATA LE 0).ZG29A34   OK                      02168600
&ZCVAL        SETC '&ZCVAL ENDDATA'             INCORRECT KEY USED      02168700
.ZG29A34      AIF   (K'&MODLIB LE 0).ZG29A35    OK                      02168800
&ZCVAL        SETC '&ZCVAL MODLIB'              INCORRECT KEY USED      02168900
.ZG29A35      AIF   (K'&SNAME LE 0).ZG29A36     OK                      02169000
&ZCVAL        SETC '&ZCVAL SNAME'               INCORRECT KEY USED      02169100
.ZG29A36      AIF   (K'&REPLACE LE 0).ZG29A37   OK                      02169200
&ZCVAL        SETC '&ZCVAL REPLACE'             INCORRECT KEY USED      02169300
.ZG29A37      AIF   (K'&LIBOPT LE 0).ZG29A38    OK                      02169400
&ZCVAL        SETC '&ZCVAL LIBOPT'              INCORRECT KEY USED      02169500
.ZG29A38      AIF   (K'&OPTION LE 0).ZG29A39    OK                      02169600
&ZCVAL        SETC '&ZCVAL OPTION'              INCORRECT KEY USED      02169700
.ZG29A39      AIF   (K'&OPTVAL LE 0).ZG29A40    OK                      02169800
&ZCVAL        SETC '&ZCVAL OPTVAL'              INCORRECT KEY USED      02169900
.ZG29A40      AIF   (K'&PARMS LE 0).ZG29A41     OK                      02170000
&ZCVAL        SETC '&ZCVAL PARMS'               INCORRECT KEY USED      02170100
.ZG29A41      AIF   (K'&FILES LE 0).ZG29A42     OK                      02170200
&ZCVAL        SETC '&ZCVAL FILES'               INCORRECT KEY USED      02170300
.ZG29A42      AIF   (K'&EXITS LE 0).ZG29A43     OK                      02170400
&ZCVAL        SETC '&ZCVAL EXITS'               INCORRECT KEY USED      02170500
.ZG29A43      AIF   (K'&OPTIONS LE 0).ZG29A44   OK                      02170600
&ZCVAL        SETC '&ZCVAL OPTIONS'             INCORRECT KEY USED      02170700
.ZG29A44      AIF   (K'&ORIGIN LE 0).ZG29A45    OK                      02170800
&ZCVAL        SETC '&ZCVAL ORIGIN'              INCORRECT KEY USED      02170900
.ZG29A45      AIF   (K'&REGION LE 0).ZG29A46    OK                      02171000
&ZCVAL        SETC '&ZCVAL REGION'              INCORRECT KEY USED      02171100
.ZG29A46      AIF   (K'&ZCVAL LE 0).ZG29A47     OK                      02171200
&ZCVAL        SETC '&ZCVAL'(2,K'&ZCVAL-1)                               02171300
              AIF  (K'&ZCVAL LE 160).ZG29A47A                           02171400
&ZCVAL        SETC '&ZCVAL'(1,160)                                      02171500
&ZCVAL        SETC '&ZCVAL....'                                         02171600
.ZG29A47A     ANOP                                                      02171700
&ZMS          SETC  '"FUNC'     *KMEIA* MNOTE                           02171800
&ZMS          SETC  '&ZMS.=&FUNC"'                                      02171900
&ZMS          SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'                02172000
              MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'                02172100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             02172200
.ZG29A47      ANOP  ,                                                   02172300
.*----------------------------------------------------------------***   02172400
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     02172500
              AIF   (N'&WORKMOD LE 1).ZG31A     CK NUM                  02172600
&ZMS          SETC  '"WORKMOD='                 *KPOSA* MNOTE           02172700
&ZMS          SETC  '&ZMS.&WORKMOD"'                                    02172800
&ZMS          SETC  '&ZMS "WORKMOD"'                                    02172900
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 02173000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             02173100
.ZG31A        ANOP  ,                                                   02173200
.*-------------------------------------------------------------------   02173300
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         02173400
&ZXWORKMOD    SETC  'INPUT'     SET IN/OUTPUT                           02173500
&XWORKMOD     SETC  '&WORKMOD(1)'               SET XVARIABLE           02173600
              AIF   (N'&WORKMOD GT 1).ZG31B     MULTI PARMS             02173700
&XWORKMOD     SETC  '&WORKMOD'  SET XVARIABLE                           02173800
.ZG31B        AIF   (K'&WORKMOD(1) GT 0).ZG31C                          02173900
&ZXWORKMOD    SETC  ''          RESET IN/OUTPUT                         02174000
&ZMS          SETC  ' '         *KRQDA*                                 02174100
&ZMS          SETC  '&ZMS "WORKMOD" KEY AND ITS ARGUMENT'               02174200
              MNOTE 8,' &ZMS ARE REQUIRED.'                             02174300
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             02174400
.ZG31C        ANOP  ,                                                   02174500
.*-------------------------------------------------------------------   02174600
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    02174700
              AIF   (K'&ZXWORKMOD LE 0).ZG31R   NOT I/O                 02174800
              AIF   ('&XWORKMOD'(1,1) NE '(').ZG31R                     02174900
&ZCGPR        SETC  '&XWORKMOD'(2,K'&XWORKMOD-2)                        02175000
              AIF   ('&ZCGPR'(1,1) NE '0').ZG31P                        02175100
              AIF   (K'&ZCGPR GT 2).ZG31Q                               02175200
              AIF   ('&ZCGPR' EQ '0').ZG31Q                             02175300
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       02175400
              AIF   (T'&ZCGPR NE 'N').ZG31Q     INVALID REG NAME        02175500
.ZG31P        ANOP  ,                                                   02175600
              AIF   (T'&ZCGPR NE 'N').ZG31R     NON NUMERIC             02175700
              AIF   ('&ZCGPR' LT '2').ZG31Q                             02175800
              AIF   ('&ZCGPR' LE '12').ZG31R                            02175900
.ZG31Q        ANOP  ,                                                   02176000
&ZMS          SETC  '"WORKMOD='                 *KGPRA* MNOTE           02176100
&ZMS          SETC  '&ZMS.&WORKMOD"'                                    02176200
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           02176300
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    02176400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             02176500
.ZG31R        ANOP  ,                                                   02176600
.*----------------------------------------------------------------***   02176700
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     02176800
              AIF   (N'&OLDNAME LE 1).ZG34A     CK NUM                  02176900
&ZMS          SETC  '"OLDNAME='                 *KPOSA* MNOTE           02177000
&ZMS          SETC  '&ZMS.&OLDNAME"'                                    02177100
&ZMS          SETC  '&ZMS "OLDNAME"'                                    02177200
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 02177300
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             02177400
.ZG34A        ANOP  ,                                                   02177500
.*-------------------------------------------------------------------   02177600
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         02177700
&ZXOLDNAME    SETC  'INPUT'     SET IN/OUTPUT                           02177800
&XOLDNAME     SETC  '&OLDNAME(1)'               SET XVARIABLE           02177900
              AIF   (N'&OLDNAME GT 1).ZG34B     MULTI PARMS             02178000
&XOLDNAME     SETC  '&OLDNAME'  SET XVARIABLE                           02178100
.ZG34B        AIF   (K'&OLDNAME(1) GT 0).ZG34C                          02178200
&ZXOLDNAME    SETC  ''          RESET IN/OUTPUT                         02178300
&ZMS          SETC  ' '         *KRQDA*                                 02178400
&ZMS          SETC  '&ZMS "OLDNAME" KEY AND ITS ARGUMENT'               02178500
              MNOTE 8,' &ZMS ARE REQUIRED.'                             02178600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             02178700
.ZG34C        ANOP  ,                                                   02196800
.*-------------------------------------------------------------------   02197600
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    02198400
              AIF   (K'&ZXOLDNAME LE 0).ZG34R   NOT I/O                 02199200
              AIF   ('&XOLDNAME'(1,1) NE '(').ZG34R                     02200000
&ZCGPR        SETC  '&XOLDNAME'(2,K'&XOLDNAME-2)                        02200800
              AIF   ('&ZCGPR'(1,1) NE '0').ZG34P                        02201600
              AIF   (K'&ZCGPR GT 2).ZG34Q                               02202400
              AIF   ('&ZCGPR' EQ '0').ZG34Q                             02203200
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       02204000
              AIF   (T'&ZCGPR NE 'N').ZG34Q     INVALID REG NAME        02204800
.ZG34P        ANOP  ,                                                   02205600
              AIF   (T'&ZCGPR NE 'N').ZG34R     NON NUMERIC             02206400
              AIF   ('&ZCGPR' LT '2').ZG34Q                             02207200
              AIF   ('&ZCGPR' LE '12').ZG34R                            02208000
.ZG34Q        ANOP  ,                                                   02208800
&ZMS          SETC  '"OLDNAME='                 *KGPRA* MNOTE           02209600
&ZMS          SETC  '&ZMS.&OLDNAME"'                                    02210400
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           02211200
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    02212000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             02212800
.ZG34R        ANOP  ,                                                   02213600
.*------------------------------------------------------------------    02213800
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           02214000
&XATYPE       SETC  ''          INITIALIZE XVARIABLE                    02214200
.*-------------------------------------------------------------------   02214400
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           02215200
.ZG38         ANOP  ,                                                   02215700
              AIF   (K'&ATYPE(1) LE 0).ZG38A                            02216200
&ZTLC         SETC 'C'                                                  02216700
              AIF   ('&ATYPE(1)' NE '&ZTLC').ZG42                       02217200
&XATYPE       SETC  'C'         SET KEYWORD                             02217700
              AIF   (N'&ATYPE LE 1).ZG38A       CK NUM                  02218200
&ZMS          SETC  '"ATYPE='   *KPOSA* MNOTE                           02219200
&ZMS          SETC  '&ZMS.&ATYPE"'                                      02220000
&ZMS          SETC  '&ZMS "ATYPE"'                                      02220800
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 02221600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             02222400
.ZG38A        ANOP  ,                                                   02223200
.*------------------------------------------------------------------    02224000
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           02224800
&ZCVAL        SETC ''           CLEAR ERROR KEY ACCUMULATOR             02225600
.ZG38A0       AIF   (K'&COUNT LE 0).ZG38A1      OK                      02226400
&ZCVAL        SETC '&ZCVAL COUNT'               INCORRECT KEY USED      02227200
.ZG38A1       AIF   (K'&ZCVAL LE 0).ZG38A2      OK                      02228000
&ZCVAL        SETC '&ZCVAL'(2,K'&ZCVAL-1)                               02228800
&ZMS          SETC  '"ATYPE'    *KMEIA* MNOTE                           02229600
&ZMS          SETC  '&ZMS.=&ATYPE"'                                     02230400
&ZMS          SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'                02231200
              MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'                02232000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             02232800
.ZG38A2       ANOP  ,                                                   02233600
.*----------------------------------------------------------------***   02234400
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     02235200
              AIF   (N'&NEWNAME LE 1).ZG40A     CK NUM                  02236000
&ZMS          SETC  '"NEWNAME='                 *KPOSA* MNOTE           02236800
&ZMS          SETC  '&ZMS.&NEWNAME"'                                    02237600
&ZMS          SETC  '&ZMS "NEWNAME"'                                    02238400
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 02239200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             02240000
.ZG40A        ANOP  ,                                                   02240800
.*-------------------------------------------------------------------   02241600
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         02242400
&ZXNEWNAME    SETC  'INPUT'     SET IN/OUTPUT                           02243200
&XNEWNAME     SETC  '&NEWNAME(1)'               SET XVARIABLE           02244000
              AIF   (N'&NEWNAME GT 1).ZG40B     MULTI PARMS             02244800
&XNEWNAME     SETC  '&NEWNAME'  SET XVARIABLE                           02245600
.ZG40B        AIF   (K'&NEWNAME(1) GT 0).ZG40C                          02246400
&ZXNEWNAME    SETC  ''          RESET IN/OUTPUT                         02247200
&ZMS          SETC  ' '         *KRQDA*                                 02248000
&ZMS          SETC  '&ZMS "NEWNAME" KEY AND ITS ARGUMENT'               02248800
              MNOTE 8,' &ZMS ARE REQUIRED.'                             02249600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             02250400
.ZG40C        ANOP  ,                                                   02251200
.*-------------------------------------------------------------------   02252000
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    02252800
              AIF   (K'&ZXNEWNAME LE 0).ZG40R   NOT I/O                 02253600
              AIF   ('&XNEWNAME'(1,1) NE '(').ZG40R                     02254400
&ZCGPR        SETC  '&XNEWNAME'(2,K'&XNEWNAME-2)                        02255200
              AIF   ('&ZCGPR'(1,1) NE '0').ZG40P                        02256000
              AIF   (K'&ZCGPR GT 2).ZG40Q                               02256800
              AIF   ('&ZCGPR' EQ '0').ZG40Q                             02257600
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       02258400
              AIF   (T'&ZCGPR NE 'N').ZG40Q     INVALID REG NAME        02259200
.ZG40P        ANOP  ,                                                   02260000
              AIF   (T'&ZCGPR NE 'N').ZG40R     NON NUMERIC             02260800
              AIF   ('&ZCGPR' LT '2').ZG40Q                             02261600
              AIF   ('&ZCGPR' LE '12').ZG40R                            02262400
.ZG40Q        ANOP  ,                                                   02263200
&ZMS          SETC  '"NEWNAME='                 *KGPRA* MNOTE           02264000
&ZMS          SETC  '&ZMS.&NEWNAME"'                                    02264800
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           02265600
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    02266400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             02267200
.ZG40R        ANOP  ,                                                   02268000
.*-------------------------------------------------------------------   02268800
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           02269600
.ZG42         ANOP  ,                                                   02270200
&ZTLC         SETC 'R'                                                  02270800
              AIF   ('&ATYPE(1)' NE '&ZTLC').ZG46                       02271400
&XATYPE       SETC  'R'         SET KEYWORD                             02272000
              AIF   (N'&ATYPE LE 1).ZG42A       CK NUM                  02272600
&ZMS          SETC  '"ATYPE='   *KPOSA* MNOTE                           02273600
&ZMS          SETC  '&ZMS.&ATYPE"'                                      02274400
&ZMS          SETC  '&ZMS "ATYPE"'                                      02275200
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 02276000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             02276800
.ZG42A        ANOP  ,                                                   02277600
.*------------------------------------------------------------------    02278400
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           02279200
&ZCVAL        SETC ''           CLEAR ERROR KEY ACCUMULATOR             02280000
.ZG42A0       AIF   (K'&COUNT LE 0).ZG42A1      OK                      02281600
&ZCVAL        SETC '&ZCVAL COUNT'               INCORRECT KEY USED      02283200
.ZG42A1       AIF   (K'&ZCVAL LE 0).ZG42A2      OK                      02284000
&ZCVAL        SETC '&ZCVAL'(2,K'&ZCVAL-1)                               02284800
&ZMS          SETC  '"ATYPE'    *KMEIA* MNOTE                           02285600
&ZMS          SETC  '&ZMS.=&ATYPE"'                                     02286400
&ZMS          SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'                02287200
              MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'                02288000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             02288800
.ZG42A2       ANOP  ,                                                   02288900
.*----------------------------------------------------------------***   02289000
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     02289100
              AIF   (N'&NEWNAME LE 1).ZG44A     CK NUM                  02289200
&ZMS          SETC  '"NEWNAME='                 *KPOSA* MNOTE           02289300
&ZMS          SETC  '&ZMS.&NEWNAME"'                                    02289400
&ZMS          SETC  '&ZMS "NEWNAME"'                                    02289500
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 02289600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             02289700
.ZG44A        ANOP  ,                                                   02289800
.*-------------------------------------------------------------------   02289900
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         02290000
&ZXNEWNAME    SETC  'INPUT'     SET IN/OUTPUT                           02290100
&XNEWNAME     SETC  '&NEWNAME(1)'               SET XVARIABLE           02290200
              AIF   (N'&NEWNAME GT 1).ZG44B     MULTI PARMS             02290300
&XNEWNAME     SETC  '&NEWNAME'  SET XVARIABLE                           02290400
.ZG44B        AIF   (K'&NEWNAME(1) GT 0).ZG44C                          02290500
&ZXNEWNAME    SETC  ''          RESET IN/OUTPUT                         02290600
&ZMS          SETC  ' '         *KRQDA*                                 02290700
&ZMS          SETC  '&ZMS "NEWNAME" KEY AND ITS ARGUMENT'               02290800
              MNOTE 8,' &ZMS ARE REQUIRED.'                             02290900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             02291000
.ZG44C        ANOP  ,                                                   02291100
.*-------------------------------------------------------------------   02291200
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    02291300
              AIF   (K'&ZXNEWNAME LE 0).ZG44R   NOT I/O                 02291400
              AIF   ('&XNEWNAME'(1,1) NE '(').ZG44R                     02291500
&ZCGPR        SETC  '&XNEWNAME'(2,K'&XNEWNAME-2)                        02291600
              AIF   ('&ZCGPR'(1,1) NE '0').ZG44P                        02291700
              AIF   (K'&ZCGPR GT 2).ZG44Q                               02291800
              AIF   ('&ZCGPR' EQ '0').ZG44Q                             02291900
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       02292000
              AIF   (T'&ZCGPR NE 'N').ZG44Q     INVALID REG NAME        02292100
.ZG44P        ANOP  ,                                                   02292200
              AIF   (T'&ZCGPR NE 'N').ZG44R     NON NUMERIC             02292300
              AIF   ('&ZCGPR' LT '2').ZG44Q                             02292400
              AIF   ('&ZCGPR' LE '12').ZG44R                            02292500
.ZG44Q        ANOP  ,                                                   02292600
&ZMS          SETC  '"NEWNAME='                 *KGPRA* MNOTE           02292700
&ZMS          SETC  '&ZMS.&NEWNAME"'                                    02292800
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           02292900
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    02293000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             02293100
.ZG44R        ANOP  ,                                                   02293200
.*-------------------------------------------------------------------   02293300
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           02293400
.ZG46         ANOP  ,                                                   02293500
&ZTLC         SETC 'D'                                                  02293600
              AIF   ('&ATYPE(1)' NE '&ZTLC').ZG47                       02293700
&XATYPE       SETC  'D'         SET KEYWORD                             02293800
              AIF   (N'&ATYPE LE 1).ZG46A       CK NUM                  02293900
&ZMS          SETC  '"ATYPE='   *KPOSA* MNOTE                           02295200
&ZMS          SETC  '&ZMS.&ATYPE"'                                      02296000
&ZMS          SETC  '&ZMS "ATYPE"'                                      02296800
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 02297600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             02298400
.ZG46A        ANOP  ,                                                   02299200
.*------------------------------------------------------------------    02300000
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           02300800
&ZCVAL        SETC ''           CLEAR ERROR KEY ACCUMULATOR             02301600
.ZG46A0       AIF   (K'&NEWNAME LE 0).ZG46A1    OK                      02302400
&ZCVAL        SETC '&ZCVAL NEWNAME'             INCORRECT KEY USED      02303200
.ZG46A1       AIF   (K'&COUNT LE 0).ZG46A2      OK                      02303600
&ZCVAL        SETC '&ZCVAL COUNT'               INCORRECT KEY USED      02304000
.ZG46A2       AIF   (K'&ZCVAL LE 0).ZG46A3      OK                      02304400
&ZCVAL        SETC '&ZCVAL'(2,K'&ZCVAL-1)                               02304800
&ZMS          SETC  '"ATYPE'    *KMEIA* MNOTE                           02305600
&ZMS          SETC  '&ZMS.=&ATYPE"'                                     02306400
&ZMS          SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'                02307200
              MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'                02308000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             02308800
.ZG46A3       ANOP  ,                                                   02308900
.*-------------------------------------------------------------------   02309000
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           02309100
.ZG47         ANOP  ,                                                   02309200
&ZTLC         SETC 'E'                                                  02309300
              AIF   ('&ATYPE(1)' NE '&ZTLC').ZG51                       02309400
&XATYPE       SETC  'E'         SET KEYWORD                             02309500
              AIF   (N'&ATYPE LE 1).ZG47A       CK NUM                  02309600
&ZMS          SETC  '"ATYPE='   *KPOSA* MNOTE                           02309700
&ZMS          SETC  '&ZMS.&ATYPE"'                                      02309800
&ZMS          SETC  '&ZMS "ATYPE"'                                      02309900
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 02310000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             02310100
.ZG47A        ANOP  ,                                                   02310200
.*------------------------------------------------------------------    02310300
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           02310400
&ZCVAL        SETC ''           CLEAR ERROR KEY ACCUMULATOR             02310500
.ZG47A0       AIF   (K'&NEWNAME LE 0).ZG47A1    OK                      02310600
&ZCVAL        SETC '&ZCVAL NEWNAME'             INCORRECT KEY USED      02310700
.ZG47A1       AIF   (K'&ZCVAL LE 0).ZG47A2      OK                      02310800
&ZCVAL        SETC '&ZCVAL'(2,K'&ZCVAL-1)                               02310900
&ZMS          SETC  '"ATYPE'    *KMEIA* MNOTE                           02311000
&ZMS          SETC  '&ZMS.=&ATYPE"'                                     02311100
&ZMS          SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'                02311200
              MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'                02311300
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             02311400
.ZG47A2       ANOP  ,                                                   02311500
.*----------------------------------------------------------------***   02311600
.***AG.KXVAR05 NAME, RQD OUTPUT, KEYS -XVARIABLE KEY                    02311700
              AIF   (N'&COUNT LE 1).ZG49A       CK NUM                  02311800
&ZMS          SETC  '"COUNT='   *KPOSA* MNOTE                           02312800
&ZMS          SETC  '&ZMS.&COUNT"'                                      02313600
&ZMS          SETC  '&ZMS "COUNT"'                                      02314400
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 02315200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             02316000
.ZG49A        ANOP  ,                                                   02316800
.*-------------------------------------------------------------------   02317600
.***AG.KXVAR06 NAME, RQD OUTPUT, KEYS -XVARIABLE                        02318400
&ZXCOUNT      SETC  'OUTPUT'    SET IN/OUTPUT                           02319200
&XCOUNT       SETC  '&COUNT(1)'                 SET XVARIABLE           02320000
              AIF   (N'&COUNT GT 1).ZG49B       MULTI PARMS             02320800
&XCOUNT       SETC  '&COUNT'    SET XVARIABLE                           02321600
.ZG49B        AIF   (K'&COUNT(1) GT 0).ZG49C                            02322400
&ZXCOUNT      SETC  ''          RESET IN/OUTPUT                         02323200
&ZMS          SETC  ' '         *KRQDA*                                 02324000
&ZMS          SETC  '&ZMS "COUNT" KEY AND ITS ARGUMENT'                 02324800
              MNOTE 8,' &ZMS ARE REQUIRED.'                             02325600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             02326400
.ZG49C        ANOP  ,                                                   02327200
.*-------------------------------------------------------------------   02328000
.***AG.KCK02 NAME, RQD OUTPUT, KEYS -GPR OUT OF RANGE                   02328800
              AIF   (K'&ZXCOUNT LE 0).ZG49R     NOT I/O                 02329600
              AIF   ('&XCOUNT'(1,1) NE '(').ZG49R                       02330400
&ZCGPR        SETC  '&XCOUNT'(2,K'&XCOUNT-2)                            02331200
              AIF   ('&ZCGPR'(1,1) NE '0').ZG49P                        02332000
              AIF   (K'&ZCGPR GT 2).ZG49Q                               02332800
              AIF   ('&ZCGPR' EQ '0').ZG49Q                             02333600
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       02334400
              AIF   (T'&ZCGPR NE 'N').ZG49Q     INVALID REG NAME        02335200
.ZG49P        ANOP  ,                                                   02336000
              AIF   (T'&ZCGPR NE 'N').ZG49R     NON NUMERIC             02336800
              AIF   ('&ZCGPR' LT '2').ZG49Q                             02337600
              AIF   ('&ZCGPR' LE '12').ZG49R                            02338400
.ZG49Q        ANOP  ,                                                   02339200
&ZMS          SETC  '"COUNT='   *KGPRA* MNOTE                           02340000
&ZMS          SETC  '&ZMS.&COUNT"'                                      02340800
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           02341600
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    02342400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             02343200
.ZG49R        ANOP  ,                                                   02344000
.*------------------------------------------------------------------    02344800
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           02345600
.ZG51         ANOP  ,                                                   02346400
&ZXATYPE      SETC  'INPUT'     SET IN/OUTPUT                           02347200
              AIF   (K'&XATYPE GT 0).ZG51E      VALID ARG               02348000
              AIF   (T'&ATYPE EQ 'O').ZG51D     OMITTED                 02348800
&ZASYSLNDX    SETA  0                                                   02349600
.ZG51A        ANOP  ,           POSITIONAL MACRO KEY                    02350400
&ZASYSLNDX    SETA  &ZASYSLNDX+1                                        02351200
              AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG51C                    02351800
&ZTLC         SETC 'ATYPE'                                              02352400
              AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG51A           02353000
.ZG51B        ANOP  ,                                                   02353600
&ZXATYPE      SETC  ''          RESET IN/OUTPUT                         02354400
&ZMS          SETC  'THE "ATYPE" KEY'           *KOPTA* MNOTE           02355200
&ZMS          SETC  '&ZMS MUST CONTAIN ONE'                             02356000
              MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                    02356800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             02357600
              AGO   .ZG51E                                              02358400
.ZG51C        ANOP  ,                                                   02359200
&ZXATYPE      SETC  ''          RESET IN/OUTPUT                         02360000
&ZMS          SETC  '"ATYPE='   *KUKWA* MNOTE                           02360800
&ZMS          SETC  '&ZMS.&ATYPE"'                                      02361600
&ZMS          SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '           02362400
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                 02363200
&ZMS          SETC  '&ZMS "C",'                 VALID KEYWORD           02364000
&ZMS          SETC  '&ZMS "R",'                 VALID KEYWORD           02364800
&ZMS          SETC  '&ZMS "D",'                 VALID KEYWORD           02365600
&ZMS          SETC  '&ZMS OR "E".'              VALID KEYWORD           02366100
              MNOTE 8,' &ZMS '                                          02366600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             02367200
              AGO   .ZG51E                                              02368000
.ZG51D        ANOP  ,                                                   02368800
&XATYPE       SETC  'C'         SET DEFAULT KEYWORD                     02369600
.ZG51E        ANOP  ,                                                   02370400
.*------------------------------------------------------------------    02371200
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           02372000
              AIF   (K'&ATYPE(1) GT 0).ZG51F    PARM                    02372800
&XATYPE       SETC  ''          ENSURE NULL KEYWORD                     02373600
&ZXATYPE      SETC  ''          RESET IN/OUTPUT                         02374400
&ZMS          SETC  'THE'                                               02375200
&ZMS          SETC  '&ZMS "ATYPE" KEY AND ITS ARGUMENT'                 02376000
&ZMS          SETC  '&ZMS ARE REQUIRED.'                                02376800
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                 02377600
&ZMS          SETC  '&ZMS "C",'                 VALID KEYWORD           02378400
&ZMS          SETC  '&ZMS "R",'                 VALID KEYWORD           02379200
&ZMS          SETC  '&ZMS "D",'                 VALID KEYWORD           02380000
&ZMS          SETC  '&ZMS OR "E".'              VALID KEYWORD           02380500
              MNOTE 8,' &ZMS '                                          02381000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             02381600
.ZG51F        ANOP  ,                                                   02382400
.*----------------------------------------------------------------***   02383200
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02384000
              AIF   (N'&MODE LE 1).ZG53A        CK NUM                  02384800
&ZMS          SETC  '"MODE='    *KPOSA* MNOTE                           02385600
&ZMS          SETC  '&ZMS.&MODE"'                                       02386400
&ZMS          SETC  '&ZMS "MODE"'                                       02387200
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 02388000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             02388800
.ZG53A        ANOP  ,                                                   02389600
.*-------------------------------------------------------------------   02390400
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02391200
&XMODE        SETC  ''          INITIALIZE XVARIABLE                    02392000
.ZG54A   AIF   ('&MODE(1)' NE 'N').ZG55A                                02392800
&XMODE        SETC  'N'         SET KEYWORD                             02393600
.*-------------------------------------------------------------------   02394400
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02395200
.ZG55A   AIF   ('&MODE(1)' NE 'I').ZG56A                                02396000
&XMODE        SETC  'I'         SET KEYWORD                             02396800
.*-------------------------------------------------------------------   02397600
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02398400
.ZG56A        AIF   (K'&XMODE GT 0).ZG56C       KEYWORD                 02399200
              AIF   (K'&MODE(1) LE 0).ZG56B                             02400000
&ZMS          SETC  '"MODE='    *KUKWA* MNOTE                           02400800
&ZMS          SETC  '&ZMS.&MODE"'                                       02401600
&ZMS          SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '           02402400
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                 02403200
&ZMS          SETC  '&ZMS "N"'  VALID KEYWORD                           02404000
&ZMS          SETC  '&ZMS OR "I".'              VALID KEYWORD           02404500
              MNOTE 8,' &ZMS '                                          02405000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             02405600
.ZG56B        ANOP  ,                                                   02406400
&XMODE        SETC  'N'         SET DEFAULT KEYWORD                     02407200
.ZG56C        ANOP  ,                                                   02408000
&ZXMODE       SETC  'INPUT'     SET IN/OUTPUT                           02408800
.*----------------------------------------------------------------***   02409600
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     02410400
              AIF   (N'&CLASS LE 1).ZG58A       CK NUM                  02411200
&ZMS          SETC  '"CLASS='   *KPOSA* MNOTE                           02412000
&ZMS          SETC  '&ZMS.&CLASS"'                                      02412800
&ZMS          SETC  '&ZMS "CLASS"'                                      02413600
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 02414400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             02415200
.ZG58A        ANOP  ,                                                   02416000
.*-------------------------------------------------------------------   02416800
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         02417600
&ZXCLASS      SETC  'INPUT'     SET IN/OUTPUT                           02418400
&XCLASS       SETC  '0'                                                 02419200
              AIF   (K'&CLASS(1) LE 0).ZG58B    PARM                    02420000
&XCLASS       SETC  '&CLASS(1)'                 SET XVARIABLE           02420800
              AIF   (N'&CLASS GT 1).ZG58B       MULTI PARMS             02421600
&XCLASS       SETC  '&CLASS'    SET XVARIABLE                           02422400
.ZG58B        ANOP  ,                                                   02423200
.*-------------------------------------------------------------------   02424000
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    02424800
              AIF   (K'&ZXCLASS LE 0).ZG58R     NOT I/O                 02425600
              AIF   ('&XCLASS' EQ '0').ZG58R                            02426400
              AIF   ('&XCLASS'(1,1) NE '(').ZG58R                       02427200
&ZCGPR        SETC  '&XCLASS'(2,K'&XCLASS-2)                            02428000
              AIF   ('&ZCGPR'(1,1) NE '0').ZG58P                        02428800
              AIF   (K'&ZCGPR GT 2).ZG58Q                               02429600
              AIF   ('&ZCGPR' EQ '0').ZG58Q                             02430400
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       02431200
              AIF   (T'&ZCGPR NE 'N').ZG58Q     INVALID REG NAME        02432000
.ZG58P        ANOP  ,                                                   02432800
              AIF   (T'&ZCGPR NE 'N').ZG58R     NON NUMERIC             02433600
              AIF   ('&ZCGPR' LT '2').ZG58Q                             02434400
              AIF   ('&ZCGPR' LE '12').ZG58R                            02435200
.ZG58Q        ANOP  ,                                                   02436000
&ZMS          SETC  '"CLASS='   *KGPRA* MNOTE                           02436800
&ZMS          SETC  '&ZMS.&CLASS"'                                      02437600
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           02438400
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    02439200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             02440000
.ZG58R        ANOP  ,                                                   02442000
.*-------------------------------------------------------------------   02444000
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           02444800
.ZG60         ANOP  ,                                                   02445400
&ZTLC         SETC 'AUTOC'                                              02446000
              AIF   ('&FUNC(1)' NE '&ZTLC').ZG68                        02446600
&XFUNC        SETC  'AUTOC'     SET KEYWORD                             02447300
              AIF   (N'&FUNC LE 1).ZG60A        CK NUM                  02448000
&ZMS          SETC  '"FUNC='    *KPOSA* MNOTE                           02448800
&ZMS          SETC  '&ZMS.&FUNC"'                                       02449600
&ZMS          SETC  '&ZMS "FUNC"'                                       02450400
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 02451200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             02452000
.ZG60A        ANOP  ,                                                   02452800
.*------------------------------------------------------------------    02453600
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           02454400
&ZCVAL        SETC ''           CLEAR ERROR KEY ACCUMULATOR             02455200
.ZG60A0       AIF   (K'&ANAME LE 0).ZG60A1      OK                      02456000
&ZCVAL        SETC '&ZCVAL ANAME'               INCORRECT KEY USED      02456800
.ZG60A1       AIF   (K'&ENAME LE 0).ZG60A2      OK                      02457600
&ZCVAL        SETC '&ZCVAL ENAME'               INCORRECT KEY USED      02458400
.ZG60A2       AIF   (K'&AMODE LE 0).ZG60A3      OK                      02459200
&ZCVAL        SETC '&ZCVAL AMODE'               INCORRECT KEY USED      02460000
.ZG60A3       AIF   (K'&ATYPE LE 0).ZG60A4      OK                      02464900
&ZCVAL        SETC '&ZCVAL ATYPE'               INCORRECT KEY USED      02469800
.ZG60A4       AIF   (K'&SECTION LE 0).ZG60A5    OK                      02470300
&ZCVAL        SETC '&ZCVAL SECTION'             INCORRECT KEY USED      02470800
.ZG60A5       AIF   (K'&OLDNAME LE 0).ZG60A6    OK                      02471300
&ZCVAL        SETC '&ZCVAL OLDNAME'             INCORRECT KEY USED      02471800
.ZG60A6       AIF   (K'&NEWNAME LE 0).ZG60A7    OK                      02472300
&ZCVAL        SETC '&ZCVAL NEWNAME'             INCORRECT KEY USED      02472800
.ZG60A7       AIF   (K'&COUNT LE 0).ZG60A8      OK                      02473300
&ZCVAL        SETC '&ZCVAL COUNT'               INCORRECT KEY USED      02473800
.ZG60A8       AIF   (K'&MODE LE 0).ZG60A9       OK                      02474300
&ZCVAL        SETC '&ZCVAL MODE'                INCORRECT KEY USED      02474800
.ZG60A9       AIF   (K'&CLASS LE 0).ZG60A10     OK                      02475300
&ZCVAL        SETC '&ZCVAL CLASS'               INCORRECT KEY USED      02476000
.ZG60A10      AIF   (K'&DIALOG LE 0).ZG60A11    OK                      02476200
&ZCVAL        SETC '&ZCVAL DIALOG'              INCORRECT KEY USED      02476400
.ZG60A11      AIF   (K'&INTENT LE 0).ZG60A12    OK                      02476600
&ZCVAL        SETC '&ZCVAL INTENT'              INCORRECT KEY USED      02476800
.ZG60A12      AIF   (K'&PROTECT LE 0).ZG60A13   OK                      02477000
&ZCVAL        SETC '&ZCVAL PROTECT'             INCORRECT KEY USED      02477200
.ZG60A13      AIF   (K'&RENAMEL LE 0).ZG60A14   OK                      02477300
&ZCVAL        SETC '&ZCVAL RENAMEL'             INCORRECT KEY USED      02477400
.ZG60A14      AIF   (K'&AREA LE 0).ZG60A15      OK                      02477500
&ZCVAL        SETC '&ZCVAL AREA'                INCORRECT KEY USED      02477600
.ZG60A15      AIF   (K'&CURSOR LE 0).ZG60A16    OK                      02478400
&ZCVAL        SETC '&ZCVAL CURSOR'              INCORRECT KEY USED      02479200
.ZG60A16      AIF   (K'&RECTYPE LE 0).ZG60A17   OK                      02480000
&ZCVAL        SETC '&ZCVAL RECTYPE'             INCORRECT KEY USED      02480800
.ZG60A17      AIF   (K'&OFFSET LE 0).ZG60A18    OK                      02481600
&ZCVAL        SETC '&ZCVAL OFFSET'              INCORRECT KEY USED      02482400
.ZG60A18      AIF   (K'&SYMBOL LE 0).ZG60A19    OK                      02483200
&ZCVAL        SETC '&ZCVAL SYMBOL'              INCORRECT KEY USED      02484000
.ZG60A19      AIF   (K'&TCOUNT LE 0).ZG60A20    OK                      02484800
&ZCVAL        SETC '&ZCVAL TCOUNT'              INCORRECT KEY USED      02485600
.ZG60A20      AIF   (K'&NTYPE LE 0).ZG60A21     OK                      02486000
&ZCVAL        SETC '&ZCVAL NTYPE'               INCORRECT KEY USED      02486400
.ZG60A21      AIF   (K'&ITYPE LE 0).ZG60A22     OK                      02486500
&ZCVAL        SETC '&ZCVAL ITYPE'               INCORRECT KEY USED      02486600
.ZG60A22      AIF   (K'&DLLNAME LE 0).ZG60A23   OK                      02486700
&ZCVAL        SETC '&ZCVAL DLLNAME'             INCORRECT KEY USED      02486800
.ZG60A23      AIF   (K'&INAME LE 0).ZG60A24     OK                      02486900
&ZCVAL        SETC '&ZCVAL INAME'               INCORRECT KEY USED      02487000
.ZG60A24      AIF   (K'&INTYPE LE 0).ZG60A25    OK                      02487100
&ZCVAL        SETC '&ZCVAL INTYPE'              INCORRECT KEY USED      02487200
.ZG60A25      AIF   (K'&DDNAME LE 0).ZG60A26    OK                      02488000
&ZCVAL        SETC '&ZCVAL DDNAME'              INCORRECT KEY USED      02488800
.ZG60A26      AIF   (K'&DEPTR LE 0).ZG60A27     OK                      02491200
&ZCVAL        SETC '&ZCVAL DEPTR'               INCORRECT KEY USED      02493600
.ZG60A27      AIF   (K'&MEMBER LE 0).ZG60A28    OK                      02493700
&ZCVAL        SETC '&ZCVAL MEMBER'              INCORRECT KEY USED      02493800
.ZG60A28      AIF   (K'&DCBPTR LE 0).ZG60A29    OK                      02493900
&ZCVAL        SETC '&ZCVAL DCBPTR'              INCORRECT KEY USED      02494000
.ZG60A29      AIF   (K'&EPTOKEN LE 0).ZG60A30   OK                      02494600
&ZCVAL        SETC '&ZCVAL EPTOKEN'             INCORRECT KEY USED      02495200
.ZG60A30      AIF   (K'&ATTRIB LE 0).ZG60A31    OK                      02496000
&ZCVAL        SETC '&ZCVAL ATTRIB'              INCORRECT KEY USED      02496800
.ZG60A31      AIF   (K'&ALIASES LE 0).ZG60A32   OK                      02497600
&ZCVAL        SETC '&ZCVAL ALIASES'             INCORRECT KEY USED      02498400
.ZG60A32      AIF   (K'&EPLOC LE 0).ZG60A33     OK                      02499200
&ZCVAL        SETC '&ZCVAL EPLOC'               INCORRECT KEY USED      02500000
.ZG60A33      AIF   (K'&IDENTIFY LE 0).ZG60A34  OK                      02500800
&ZCVAL        SETC '&ZCVAL IDENTIFY'            INCORRECT KEY USED      02501600
.ZG60A34      AIF   (K'&EXTLST LE 0).ZG60A35    OK                      02502400
&ZCVAL        SETC '&ZCVAL EXTLST'              INCORRECT KEY USED      02503200
.ZG60A35      AIF   (K'&LNAME LE 0).ZG60A36     OK                      02504000
&ZCVAL        SETC '&ZCVAL LNAME'               INCORRECT KEY USED      02504800
.ZG60A36      AIF   (K'&NEWSECT LE 0).ZG60A37   OK                      02505600
&ZCVAL        SETC '&ZCVAL NEWSECT'             INCORRECT KEY USED      02506400
.ZG60A37      AIF   (K'&ENDDATA LE 0).ZG60A38   OK                      02507200
&ZCVAL        SETC '&ZCVAL ENDDATA'             INCORRECT KEY USED      02508000
.ZG60A38      AIF   (K'&MODLIB LE 0).ZG60A39    OK                      02508800
&ZCVAL        SETC '&ZCVAL MODLIB'              INCORRECT KEY USED      02509600
.ZG60A39      AIF   (K'&SNAME LE 0).ZG60A40     OK                      02510400
&ZCVAL        SETC '&ZCVAL SNAME'               INCORRECT KEY USED      02511200
.ZG60A40      AIF   (K'&REPLACE LE 0).ZG60A41   OK                      02512000
&ZCVAL        SETC '&ZCVAL REPLACE'             INCORRECT KEY USED      02512800
.ZG60A41      AIF   (K'&LIBOPT LE 0).ZG60A42    OK                      02513600
&ZCVAL        SETC '&ZCVAL LIBOPT'              INCORRECT KEY USED      02514400
.ZG60A42      AIF   (K'&OPTION LE 0).ZG60A43    OK                      02515200
&ZCVAL        SETC '&ZCVAL OPTION'              INCORRECT KEY USED      02516000
.ZG60A43      AIF   (K'&OPTVAL LE 0).ZG60A44    OK                      02516800
&ZCVAL        SETC '&ZCVAL OPTVAL'              INCORRECT KEY USED      02517600
.ZG60A44      AIF   (K'&PARMS LE 0).ZG60A45     OK                      02518000
&ZCVAL        SETC '&ZCVAL PARMS'               INCORRECT KEY USED      02518400
.ZG60A45      AIF   (K'&FILES LE 0).ZG60A46     OK                      02518800
&ZCVAL        SETC '&ZCVAL FILES'               INCORRECT KEY USED      02519200
.ZG60A46      AIF   (K'&EXITS LE 0).ZG60A47     OK                      02520000
&ZCVAL        SETC '&ZCVAL EXITS'               INCORRECT KEY USED      02520800
.ZG60A47      AIF   (K'&OPTIONS LE 0).ZG60A48   OK                      02521600
&ZCVAL        SETC '&ZCVAL OPTIONS'             INCORRECT KEY USED      02522400
.ZG60A48      AIF   (K'&ORIGIN LE 0).ZG60A49    OK                      02523200
&ZCVAL        SETC '&ZCVAL ORIGIN'              INCORRECT KEY USED      02524000
.ZG60A49      AIF   (K'&REGION LE 0).ZG60A50    OK                      02524800
&ZCVAL        SETC '&ZCVAL REGION'              INCORRECT KEY USED      02525600
.ZG60A50      AIF   (K'&ZCVAL LE 0).ZG60A51     OK                      02526400
&ZCVAL        SETC '&ZCVAL'(2,K'&ZCVAL-1)                               02527200
              AIF  (K'&ZCVAL LE 160).ZG60A51A                           02527300
&ZCVAL        SETC '&ZCVAL'(1,160)                                      02527400
&ZCVAL        SETC '&ZCVAL....'                                         02527500
.ZG60A51A     ANOP                                                      02527700
&ZMS          SETC  '"FUNC'     *KMEIA* MNOTE                           02528000
&ZMS          SETC  '&ZMS.=&FUNC"'                                      02528800
&ZMS          SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'                02529600
              MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'                02530400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             02531200
.ZG60A51      ANOP  ,                                                   02532000
.*----------------------------------------------------------------***   02532800
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     02533600
              AIF   (N'&WORKMOD LE 1).ZG62A     CK NUM                  02534400
&ZMS          SETC  '"WORKMOD='                 *KPOSA* MNOTE           02535200
&ZMS          SETC  '&ZMS.&WORKMOD"'                                    02536000
&ZMS          SETC  '&ZMS "WORKMOD"'                                    02536800
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 02537600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             02538400
.ZG62A        ANOP  ,                                                   02539200
.*-------------------------------------------------------------------   02540000
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         02540800
&ZXWORKMOD    SETC  'INPUT'     SET IN/OUTPUT                           02541600
&XWORKMOD     SETC  '&WORKMOD(1)'               SET XVARIABLE           02542400
              AIF   (N'&WORKMOD GT 1).ZG62B     MULTI PARMS             02543200
&XWORKMOD     SETC  '&WORKMOD'  SET XVARIABLE                           02544000
.ZG62B        AIF   (K'&WORKMOD(1) GT 0).ZG62C                          02544800
&ZXWORKMOD    SETC  ''          RESET IN/OUTPUT                         02545600
&ZMS          SETC  ' '         *KRQDA*                                 02546400
&ZMS          SETC  '&ZMS "WORKMOD" KEY AND ITS ARGUMENT'               02547200
              MNOTE 8,' &ZMS ARE REQUIRED.'                             02548000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             02548800
.ZG62C        ANOP  ,                                                   02549600
.*-------------------------------------------------------------------   02550400
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    02551200
              AIF   (K'&ZXWORKMOD LE 0).ZG62R   NOT I/O                 02552000
              AIF   ('&XWORKMOD'(1,1) NE '(').ZG62R                     02552800
&ZCGPR        SETC  '&XWORKMOD'(2,K'&XWORKMOD-2)                        02553600
              AIF   ('&ZCGPR'(1,1) NE '0').ZG62P                        02562400
              AIF   (K'&ZCGPR GT 2).ZG62Q                               02571200
              AIF   ('&ZCGPR' EQ '0').ZG62Q                             02580000
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       02588800
              AIF   (T'&ZCGPR NE 'N').ZG62Q     INVALID REG NAME        02589500
.ZG62P        ANOP  ,                                                   02590200
              AIF   (T'&ZCGPR NE 'N').ZG62R     NON NUMERIC             02590900
              AIF   ('&ZCGPR' LT '2').ZG62Q                             02591600
              AIF   ('&ZCGPR' LE '12').ZG62R                            02592300
.ZG62Q        ANOP  ,                                                   02593000
&ZMS          SETC  '"WORKMOD='                 *KGPRA* MNOTE           02593700
&ZMS          SETC  '&ZMS.&WORKMOD"'                                    02593800
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           02593900
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    02594000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             02594100
.ZG62R        ANOP  ,                                                   02594200
.*----------------------------------------------------------------***   02594300
.***AG.KMEKY01 NAME, RQD INPUT, ME KEYS -XVARIABLE                      02594400
&XPATHLIB     SETC  ''          INITIALIZE XVARIABLE                    02594500
              AIF   (K'&CALLIB LE 0).ZG65C                              02594600
&ZXPATHLIB    SETC  'INPUT'     SET IN/OUTPUT                           02594700
&XPATHLIB     SETC  'CALLIB'    SET XVARIABLE                           02594800
&ZXCALLIB     SETC  'INPUT'     SET IN/OUTPUT                           02594900
&XCALLIB      SETC  '&CALLIB(1)'                SET XVARIABLE PARM      02595000
              AIF   (N'&CALLIB GT 1).ZG65A      MULTIPLE PARMS          02595100
&XCALLIB      SETC  '&CALLIB'   SET XVARIABLE PARM                      02595200
.ZG65A        AIF   (N'&CALLIB LE 1).ZG65B      CK NUM                  02595300
&ZMS          SETC  '"CALLIB='  *KPOSA* MNOTE                           02595400
&ZMS          SETC  '&ZMS.&CALLIB"'                                     02595500
&ZMS          SETC  '&ZMS "CALLIB"'                                     02595600
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 02595700
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             02595800
.ZG65B        AIF   (K'&XCALLIB GT 0).ZG65C     ONE PARM                02595900
&ZXPATHLIB    SETC  ''          RESET IN/OUTPUT                         02596000
&ZXCALLIB     SETC  ''          RESET IN/OUTPUT                         02596100
&ZMS          SETC  ' '         *KRQDA*                                 02596200
&ZMS          SETC  '&ZMS "CALLIB" KEY AND ITS ARGUMENT'                02596300
              MNOTE 8,' &ZMS ARE REQUIRED.'                             02596400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             02596500
.ZG65C        ANOP  ,                                                   02596600
.*----------------------------------------------------------------***   02596700
.***AG.KMEKY02 NAME, RQD INPUT, ME KEYS -XVARIABLE                      02596800
              AIF   (K'&PATHNAME LE 0).ZG66D    NO ME KEY               02596900
              AIF   (N'&PATHNAME LE 1).ZG66A    CK NUM                  02597000
&ZMS          SETC  '"PATHNAME='                *KPOSA* MNOTE           02597100
&ZMS          SETC  '&ZMS.&PATHNAME"'                                   02597200
&ZMS          SETC  '&ZMS "PATHNAME"'                                   02597300
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 02597400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             02597500
.ZG66A        AIF   (K'&XPATHLIB LE 0).ZG66B                            02597600
&ZMS          SETC  '"PATHNAME'                 *KMEKA* MNOTE           02597700
&ZMS          SETC  '&ZMS.=&PATHNAME"'                                  02597800
&ZMS          SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'               02597900
&ZMS          SETC  '&ZMS "&XPATHLIB"'                                  02598000
              MNOTE 8,' &ZMS KEY.'                                      02598100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             02598200
              AGO   .ZG66D                                              02598300
.*                                                                      02598400
.ZG66B        ANOP  ,                                                   02598500
&ZXPATHLIB    SETC  'INPUT'     SET IN/OUTPUT                           02598600
&XPATHLIB     SETC  'PATHNAME'  SET XVARIABLE                           02598700
&ZXPATHNAME   SETC  'INPUT'     SET IN/OUTPUT                           02598800
&XPATHNAME    SETC  '&PATHNAME(1)'              SET XVARIABLE PARM      02598900
              AIF   (N'&PATHNAME GT 1).ZG66C    MULTIPLE PARMS          02599000
&XPATHNAME    SETC  '&PATHNAME'                 SET XVARIABLE PARM      02599100
.ZG66C        AIF   (K'&XPATHNAME GT 0).ZG66D   ONE PARM                02599200
&ZXPATHLIB    SETC  ''          RESET IN/OUTPUT                         02599300
&ZXPATHNAME   SETC  ''          RESET IN/OUTPUT                         02599400
&ZMS          SETC  ' '         *KRQDA*                                 02599500
&ZMS          SETC  '&ZMS "PATHNAME" KEY AND ITS ARGUMENT'              02599600
              MNOTE 8,' &ZMS ARE REQUIRED.'                             02599700
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             02599800
.ZG66D        ANOP  ,                                                   02599900
.*------------------------------------------------------------------    02600000
.***AG.KME4Y09 NAME, RQD INPUT, ME KEYS -CHECK IF KEY ENTERED           02600100
              AIF   (K'&XPATHLIB GT 0).ZG67B                            02600200
&ZXPATHLIB    SETC  ''          RESET IN/OUTPUT                         02600300
&ZXCALLIB     SETC  ''          RESET IN/OUTPUT                         02600400
&XPATHLIB     SETC  ''          ENSURE NULL                             02600500
&XCALLIB      SETC  ''          ENSURE NULL                             02600600
&ZMS          SETC  'ONE OF THE FOLLOWING'      *KMERA* MNOTE           02600700
&ZMS          SETC  '&ZMS MUTUALLY EXCLUSIVE KEY(S) IS'                 02600800
&ZMS          SETC  '&ZMS REQUIRED:'                                    02600900
&ZMS          SETC  '&ZMS "CALLIB"'             VALID ME KEY            02601000
&ZMS          SETC  '&ZMS OR "PATHNAME".'       VALID ME KEY            02601100
              MNOTE 8,' &ZMS '                                          02601200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             02601300
.ZG67B        ANOP  ,                                                   02601400
.*-------------------------------------------------------------------   02601500
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           02601600
.ZG65         AIF   ('&XPATHLIB' NE 'CALLIB').ZG66                      02601700
.*-------------------------------------------------------------------   02601800
.***AG.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 02601900
              AIF   (K'&ZXCALLIB LE 0).ZG65R    NOT I/O                 02602000
              AIF   ('&XCALLIB'(1,1) NE '(').ZG65R                      02602100
&ZCGPR        SETC  '&XCALLIB'(2,K'&XCALLIB-2)                          02602200
              AIF   ('&ZCGPR'(1,1) NE '0').ZG65P                        02602300
              AIF   (K'&ZCGPR GT 2).ZG65Q                               02602400
              AIF   ('&ZCGPR' EQ '0').ZG65Q                             02602500
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       02602600
              AIF   (T'&ZCGPR NE 'N').ZG65Q     INVALID REG NAME        02602700
.ZG65P        ANOP  ,                                                   02602800
              AIF   (T'&ZCGPR NE 'N').ZG65R     NON NUMERIC             02602900
              AIF   ('&ZCGPR' LT '2').ZG65Q                             02603000
              AIF   ('&ZCGPR' LE '12').ZG65R                            02603100
.ZG65Q        ANOP  ,                                                   02603200
&ZMS          SETC  '"CALLIB='  *KGPRA* MNOTE                           02603300
&ZMS          SETC  '&ZMS.&CALLIB"'                                     02603400
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           02603500
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    02603600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             02603700
.ZG65R        ANOP  ,                                                   02603800
.*-------------------------------------------------------------------   02603900
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           02604000
.ZG66         AIF   ('&XPATHLIB' NE 'PATHNAME').ZG67                    02604100
.*-------------------------------------------------------------------   02604200
.***AG.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 02604300
              AIF   (K'&ZXPATHNAME LE 0).ZG66R  NOT I/O                 02604400
              AIF   ('&XPATHNAME'(1,1) NE '(').ZG66R                    02604500
&ZCGPR        SETC  '&XPATHNAME'(2,K'&XPATHNAME-2)                      02604600
              AIF   ('&ZCGPR'(1,1) NE '0').ZG66P                        02604700
              AIF   (K'&ZCGPR GT 2).ZG66Q                               02604800
              AIF   ('&ZCGPR' EQ '0').ZG66Q                             02604900
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       02605000
              AIF   (T'&ZCGPR NE 'N').ZG66Q     INVALID REG NAME        02605100
.ZG66P        ANOP  ,                                                   02605200
              AIF   (T'&ZCGPR NE 'N').ZG66R     NON NUMERIC             02605300
              AIF   ('&ZCGPR' LT '2').ZG66Q                             02605400
              AIF   ('&ZCGPR' LE '12').ZG66R                            02605500
.ZG66Q        ANOP  ,                                                   02605600
&ZMS          SETC  '"PATHNAME='                *KGPRA* MNOTE           02605700
&ZMS          SETC  '&ZMS.&PATHNAME"'                                   02605800
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           02605900
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    02606000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             02606100
.ZG66R        ANOP  ,                                                   02606200
.*-------------------------------------------------------------------   02606300
.***AG.KMEKY15 NAME, RQD INPUT, ME KEYS -END                            02606400
.ZG67         ANOP  ,           END MUTUALLY EXCLUSIVE KEYS             02606500
.*-------------------------------------------------------------------   02606600
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           02606700
.ZG68         ANOP  ,                                                   02606800
&ZTLC         SETC 'BINDW'                                              02606900
              AIF   ('&FUNC(1)' NE '&ZTLC').ZG75                        02607000
&XFUNC        SETC  'BINDW'     SET KEYWORD                             02607100
              AIF   (N'&FUNC LE 1).ZG68A        CK NUM                  02607200
&ZMS          SETC  '"FUNC='    *KPOSA* MNOTE                           02607300
&ZMS          SETC  '&ZMS.&FUNC"'                                       02607400
&ZMS          SETC  '&ZMS "FUNC"'                                       02607500
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 02607600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             02607700
.ZG68A        ANOP  ,                                                   02608200
.*------------------------------------------------------------------    02608800
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           02609600
&ZCVAL        SETC ''           CLEAR ERROR KEY ACCUMULATOR             02610400
.ZG68A0       AIF   (K'&ANAME LE 0).ZG68A1      OK                      02611200
&ZCVAL        SETC '&ZCVAL ANAME'               INCORRECT KEY USED      02612000
.ZG68A1       AIF   (K'&ENAME LE 0).ZG68A2      OK                      02612800
&ZCVAL        SETC '&ZCVAL ENAME'               INCORRECT KEY USED      02613600
.ZG68A2       AIF   (K'&AMODE LE 0).ZG68A3      OK                      02614400
&ZCVAL        SETC '&ZCVAL AMODE'               INCORRECT KEY USED      02615200
.ZG68A3       AIF   (K'&ATYPE LE 0).ZG68A4      OK                      02620100
&ZCVAL        SETC '&ZCVAL ATYPE'               INCORRECT KEY USED      02625000
.ZG68A4       AIF   (K'&SECTION LE 0).ZG68A5    OK                      02625300
&ZCVAL        SETC '&ZCVAL SECTION'             INCORRECT KEY USED      02625600
.ZG68A5       AIF   (K'&OLDNAME LE 0).ZG68A6    OK                      02625900
&ZCVAL        SETC '&ZCVAL OLDNAME'             INCORRECT KEY USED      02626200
.ZG68A6       AIF   (K'&NEWNAME LE 0).ZG68A7    OK                      02626500
&ZCVAL        SETC '&ZCVAL NEWNAME'             INCORRECT KEY USED      02626800
.ZG68A7       AIF   (K'&COUNT LE 0).ZG68A8      OK                      02627100
&ZCVAL        SETC '&ZCVAL COUNT'               INCORRECT KEY USED      02627400
.ZG68A8       AIF   (K'&MODE LE 0).ZG68A9       OK                      02627700
&ZCVAL        SETC '&ZCVAL MODE'                INCORRECT KEY USED      02628000
.ZG68A9       AIF   (K'&CLASS LE 0).ZG68A10     OK                      02628300
&ZCVAL        SETC '&ZCVAL CLASS'               INCORRECT KEY USED      02629600
.ZG68A10      AIF   (K'&PATHNAME LE 0).ZG68A11  OK                      02629700
&ZCVAL        SETC '&ZCVAL PATHNAME'            INCORRECT KEY USED      02629800
.ZG68A11      AIF   (K'&DIALOG LE 0).ZG68A12    OK                      02629900
&ZCVAL        SETC '&ZCVAL DIALOG'              INCORRECT KEY USED      02630000
.ZG68A12      AIF   (K'&INTENT LE 0).ZG68A13    OK                      02630100
&ZCVAL        SETC '&ZCVAL INTENT'              INCORRECT KEY USED      02630200
.ZG68A13      AIF   (K'&PROTECT LE 0).ZG68A14   OK                      02630300
&ZCVAL        SETC '&ZCVAL PROTECT'             INCORRECT KEY USED      02630400
.ZG68A14      AIF   (K'&RENAMEL LE 0).ZG68A15   OK                      02630600
&ZCVAL        SETC '&ZCVAL RENAMEL'             INCORRECT KEY USED      02630800
.ZG68A15      AIF   (K'&AREA LE 0).ZG68A16      OK                      02631000
&ZCVAL        SETC '&ZCVAL AREA'                INCORRECT KEY USED      02631200
.ZG68A16      AIF   (K'&CURSOR LE 0).ZG68A17    OK                      02632000
&ZCVAL        SETC '&ZCVAL CURSOR'              INCORRECT KEY USED      02632800
.ZG68A17      AIF   (K'&RECTYPE LE 0).ZG68A18   OK                      02633600
&ZCVAL        SETC '&ZCVAL RECTYPE'             INCORRECT KEY USED      02634400
.ZG68A18      AIF   (K'&OFFSET LE 0).ZG68A19    OK                      02635200
&ZCVAL        SETC '&ZCVAL OFFSET'              INCORRECT KEY USED      02636000
.ZG68A19      AIF   (K'&SYMBOL LE 0).ZG68A20    OK                      02636800
&ZCVAL        SETC '&ZCVAL SYMBOL'              INCORRECT KEY USED      02637600
.ZG68A20      AIF   (K'&TCOUNT LE 0).ZG68A21    OK                      02637700
&ZCVAL        SETC '&ZCVAL TCOUNT'              INCORRECT KEY USED      02637800
.ZG68A21      AIF   (K'&NTYPE LE 0).ZG68A22     OK                      02637900
&ZCVAL        SETC '&ZCVAL NTYPE'               INCORRECT KEY USED      02638000
.ZG68A22      AIF   (K'&ITYPE LE 0).ZG68A23     OK                      02638100
&ZCVAL        SETC '&ZCVAL ITYPE'               INCORRECT KEY USED      02638200
.ZG68A23      AIF   (K'&DLLNAME LE 0).ZG68A24   OK                      02638300
&ZCVAL        SETC '&ZCVAL DLLNAME'             INCORRECT KEY USED      02638400
.ZG68A24      AIF   (K'&INAME LE 0).ZG68A25     OK                      02638500
&ZCVAL        SETC '&ZCVAL INAME'               INCORRECT KEY USED      02638600
.ZG68A25      AIF   (K'&INTYPE LE 0).ZG68A26    OK                      02638700
&ZCVAL        SETC '&ZCVAL INTYPE'              INCORRECT KEY USED      02638800
.ZG68A26      AIF   (K'&DDNAME LE 0).ZG68A27    OK                      02638900
&ZCVAL        SETC '&ZCVAL DDNAME'              INCORRECT KEY USED      02639000
.ZG68A27      AIF   (K'&DEPTR LE 0).ZG68A28     OK                      02639100
&ZCVAL        SETC '&ZCVAL DEPTR'               INCORRECT KEY USED      02639200
.ZG68A28      AIF   (K'&MEMBER LE 0).ZG68A29    OK                      02639300
&ZCVAL        SETC '&ZCVAL MEMBER'              INCORRECT KEY USED      02639400
.ZG68A29      AIF   (K'&DCBPTR LE 0).ZG68A30    OK                      02639500
&ZCVAL        SETC '&ZCVAL DCBPTR'              INCORRECT KEY USED      02639600
.ZG68A30      AIF   (K'&EPTOKEN LE 0).ZG68A31   OK                      02639700
&ZCVAL        SETC '&ZCVAL EPTOKEN'             INCORRECT KEY USED      02639800
.ZG68A31      AIF   (K'&ATTRIB LE 0).ZG68A32    OK                      02639900
&ZCVAL        SETC '&ZCVAL ATTRIB'              INCORRECT KEY USED      02640000
.ZG68A32      AIF   (K'&ALIASES LE 0).ZG68A33   OK                      02640100
&ZCVAL        SETC '&ZCVAL ALIASES'             INCORRECT KEY USED      02640200
.ZG68A33      AIF   (K'&EPLOC LE 0).ZG68A34     OK                      02640300
&ZCVAL        SETC '&ZCVAL EPLOC'               INCORRECT KEY USED      02640400
.ZG68A34      AIF   (K'&IDENTIFY LE 0).ZG68A35  OK                      02640500
&ZCVAL        SETC '&ZCVAL IDENTIFY'            INCORRECT KEY USED      02640600
.ZG68A35      AIF   (K'&EXTLST LE 0).ZG68A36    OK                      02640700
&ZCVAL        SETC '&ZCVAL EXTLST'              INCORRECT KEY USED      02640800
.ZG68A36      AIF   (K'&LNAME LE 0).ZG68A37     OK                      02640900
&ZCVAL        SETC '&ZCVAL LNAME'               INCORRECT KEY USED      02641000
.ZG68A37      AIF   (K'&NEWSECT LE 0).ZG68A38   OK                      02641100
&ZCVAL        SETC '&ZCVAL NEWSECT'             INCORRECT KEY USED      02641200
.ZG68A38      AIF   (K'&ENDDATA LE 0).ZG68A39   OK                      02641300
&ZCVAL        SETC '&ZCVAL ENDDATA'             INCORRECT KEY USED      02641400
.ZG68A39      AIF   (K'&MODLIB LE 0).ZG68A40    OK                      02641500
&ZCVAL        SETC '&ZCVAL MODLIB'              INCORRECT KEY USED      02641600
.ZG68A40      AIF   (K'&SNAME LE 0).ZG68A41     OK                      02641700
&ZCVAL        SETC '&ZCVAL SNAME'               INCORRECT KEY USED      02641800
.ZG68A41      AIF   (K'&REPLACE LE 0).ZG68A42   OK                      02641900
&ZCVAL        SETC '&ZCVAL REPLACE'             INCORRECT KEY USED      02642000
.ZG68A42      AIF   (K'&LIBOPT LE 0).ZG68A43    OK                      02642100
&ZCVAL        SETC '&ZCVAL LIBOPT'              INCORRECT KEY USED      02642200
.ZG68A43      AIF   (K'&OPTION LE 0).ZG68A44    OK                      02642300
&ZCVAL        SETC '&ZCVAL OPTION'              INCORRECT KEY USED      02642400
.ZG68A44      AIF   (K'&OPTVAL LE 0).ZG68A45    OK                      02642500
&ZCVAL        SETC '&ZCVAL OPTVAL'              INCORRECT KEY USED      02642600
.ZG68A45      AIF   (K'&PARMS LE 0).ZG68A46     OK                      02642700
&ZCVAL        SETC '&ZCVAL PARMS'               INCORRECT KEY USED      02642800
.ZG68A46      AIF   (K'&FILES LE 0).ZG68A47     OK                      02642900
&ZCVAL        SETC '&ZCVAL FILES'               INCORRECT KEY USED      02643000
.ZG68A47      AIF   (K'&EXITS LE 0).ZG68A48     OK                      02643100
&ZCVAL        SETC '&ZCVAL EXITS'               INCORRECT KEY USED      02643200
.ZG68A48      AIF   (K'&OPTIONS LE 0).ZG68A49   OK                      02643300
&ZCVAL        SETC '&ZCVAL OPTIONS'             INCORRECT KEY USED      02643400
.ZG68A49      AIF   (K'&ORIGIN LE 0).ZG68A50    OK                      02643500
&ZCVAL        SETC '&ZCVAL ORIGIN'              INCORRECT KEY USED      02643600
.ZG68A50      AIF   (K'&REGION LE 0).ZG68A51    OK                      02643700
&ZCVAL        SETC '&ZCVAL REGION'              INCORRECT KEY USED      02643800
.ZG68A51      AIF   (K'&ZCVAL LE 0).ZG68A52     OK                      02643900
&ZCVAL        SETC '&ZCVAL'(2,K'&ZCVAL-1)                               02644000
              AIF  (K'&ZCVAL LE 160).ZG68A52A                           02644100
&ZCVAL        SETC '&ZCVAL'(1,160)                                      02644200
&ZCVAL        SETC '&ZCVAL....'                                         02644300
.ZG68A52A     ANOP                                                      02644400
&ZMS          SETC  '"FUNC'     *KMEIA* MNOTE                           02644500
&ZMS          SETC  '&ZMS.=&FUNC"'                                      02644600
&ZMS          SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'                02644700
              MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'                02644800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             02644900
.ZG68A52      ANOP  ,                                                   02645000
.*----------------------------------------------------------------***   02645100
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     02645200
              AIF   (N'&WORKMOD LE 1).ZG70A     CK NUM                  02645300
&ZMS          SETC  '"WORKMOD='                 *KPOSA* MNOTE           02645400
&ZMS          SETC  '&ZMS.&WORKMOD"'                                    02645500
&ZMS          SETC  '&ZMS "WORKMOD"'                                    02645600
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 02645700
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             02645800
.ZG70A        ANOP  ,                                                   02645900
.*-------------------------------------------------------------------   02646000
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         02646100
&ZXWORKMOD    SETC  'INPUT'     SET IN/OUTPUT                           02646200
&XWORKMOD     SETC  '&WORKMOD(1)'               SET XVARIABLE           02646300
              AIF   (N'&WORKMOD GT 1).ZG70B     MULTI PARMS             02646400
&XWORKMOD     SETC  '&WORKMOD'  SET XVARIABLE                           02646500
.ZG70B        AIF   (K'&WORKMOD(1) GT 0).ZG70C                          02646600
&ZXWORKMOD    SETC  ''          RESET IN/OUTPUT                         02646700
&ZMS          SETC  ' '         *KRQDA*                                 02646800
&ZMS          SETC  '&ZMS "WORKMOD" KEY AND ITS ARGUMENT'               02646900
              MNOTE 8,' &ZMS ARE REQUIRED.'                             02647000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             02647100
.ZG70C        ANOP  ,                                                   02647200
.*-------------------------------------------------------------------   02647300
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    02647400
              AIF   (K'&ZXWORKMOD LE 0).ZG70R   NOT I/O                 02647500
              AIF   ('&XWORKMOD'(1,1) NE '(').ZG70R                     02647600
&ZCGPR        SETC  '&XWORKMOD'(2,K'&XWORKMOD-2)                        02647700
              AIF   ('&ZCGPR'(1,1) NE '0').ZG70P                        02647800
              AIF   (K'&ZCGPR GT 2).ZG70Q                               02647900
              AIF   ('&ZCGPR' EQ '0').ZG70Q                             02648000
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       02648100
              AIF   (T'&ZCGPR NE 'N').ZG70Q     INVALID REG NAME        02648200
.ZG70P        ANOP  ,                                                   02648300
              AIF   (T'&ZCGPR NE 'N').ZG70R     NON NUMERIC             02648400
              AIF   ('&ZCGPR' LT '2').ZG70Q                             02648500
              AIF   ('&ZCGPR' LE '12').ZG70R                            02648600
.ZG70Q        ANOP  ,                                                   02648700
&ZMS          SETC  '"WORKMOD='                 *KGPRA* MNOTE           02648800
&ZMS          SETC  '&ZMS.&WORKMOD"'                                    02648900
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           02649000
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    02649100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             02649200
.ZG70R        ANOP  ,                                                   02649300
.*----------------------------------------------------------------***   02649400
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     02649500
              AIF   (N'&CALLIB LE 1).ZG73A      CK NUM                  02649600
&ZMS          SETC  '"CALLIB='  *KPOSA* MNOTE                           02649700
&ZMS          SETC  '&ZMS.&CALLIB"'                                     02649800
&ZMS          SETC  '&ZMS "CALLIB"'                                     02649900
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 02650000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             02650100
.ZG73A        ANOP  ,                                                   02650200
.*-------------------------------------------------------------------   02650300
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         02650400
&ZXCALLIB     SETC  'INPUT'     SET IN/OUTPUT                           02650500
&XCALLIB      SETC  '0'                                                 02650600
              AIF   (K'&CALLIB(1) LE 0).ZG73B   PARM                    02650700
&XCALLIB      SETC  '&CALLIB(1)'                SET XVARIABLE           02650800
              AIF   (N'&CALLIB GT 1).ZG73B      MULTI PARMS             02650900
&XCALLIB      SETC  '&CALLIB'   SET XVARIABLE                           02651000
.ZG73B        ANOP  ,                                                   02651100
.*-------------------------------------------------------------------   02651200
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    02651300
              AIF   (K'&ZXCALLIB LE 0).ZG73R    NOT I/O                 02651400
              AIF   ('&XCALLIB' EQ '0').ZG73R                           02651500
              AIF   ('&XCALLIB'(1,1) NE '(').ZG73R                      02651600
&ZCGPR        SETC  '&XCALLIB'(2,K'&XCALLIB-2)                          02651700
              AIF   ('&ZCGPR'(1,1) NE '0').ZG73P                        02651800
              AIF   (K'&ZCGPR GT 2).ZG73Q                               02651900
              AIF   ('&ZCGPR' EQ '0').ZG73Q                             02652000
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       02652100
              AIF   (T'&ZCGPR NE 'N').ZG73Q     INVALID REG NAME        02652200
.ZG73P        ANOP  ,                                                   02652300
              AIF   (T'&ZCGPR NE 'N').ZG73R     NON NUMERIC             02652400
              AIF   ('&ZCGPR' LT '2').ZG73Q                             02652500
              AIF   ('&ZCGPR' LE '12').ZG73R                            02652600
.ZG73Q        ANOP  ,                                                   02652700
&ZMS          SETC  '"CALLIB='  *KGPRA* MNOTE                           02652800
&ZMS          SETC  '&ZMS.&CALLIB"'                                     02652900
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           02653000
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    02653100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             02653200
.ZG73R        ANOP  ,                                                   02653300
.*-------------------------------------------------------------------   02653400
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           02653500
.ZG75         ANOP  ,                                                   02653600
&ZTLC         SETC 'CREATEW'                                            02653700
              AIF   ('&FUNC(1)' NE '&ZTLC').ZG87                        02653800
&XFUNC        SETC  'CREATEW'   SET KEYWORD                             02653900
              AIF   (N'&FUNC LE 1).ZG75A        CK NUM                  02654000
&ZMS          SETC  '"FUNC='    *KPOSA* MNOTE                           02654100
&ZMS          SETC  '&ZMS.&FUNC"'                                       02654200
&ZMS          SETC  '&ZMS "FUNC"'                                       02654300
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 02654400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             02654500
.ZG75A        ANOP  ,                                                   02654600
.*------------------------------------------------------------------    02654700
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           02654800
&ZCVAL        SETC ''           CLEAR ERROR KEY ACCUMULATOR             02654900
.ZG75A0       AIF   (K'&ANAME LE 0).ZG75A1      OK                      02655000
&ZCVAL        SETC '&ZCVAL ANAME'               INCORRECT KEY USED      02655100
.ZG75A1       AIF   (K'&ENAME LE 0).ZG75A2      OK                      02655200
&ZCVAL        SETC '&ZCVAL ENAME'               INCORRECT KEY USED      02655300
.ZG75A2       AIF   (K'&AMODE LE 0).ZG75A3      OK                      02655400
&ZCVAL        SETC '&ZCVAL AMODE'               INCORRECT KEY USED      02655500
.ZG75A3       AIF   (K'&ATYPE LE 0).ZG75A4      OK                      02655800
&ZCVAL        SETC '&ZCVAL ATYPE'               INCORRECT KEY USED      02656100
.ZG75A4       AIF   (K'&SECTION LE 0).ZG75A5    OK                      02656200
&ZCVAL        SETC '&ZCVAL SECTION'             INCORRECT KEY USED      02656300
.ZG75A5       AIF   (K'&OLDNAME LE 0).ZG75A6    OK                      02656400
&ZCVAL        SETC '&ZCVAL OLDNAME'             INCORRECT KEY USED      02656500
.ZG75A6       AIF   (K'&NEWNAME LE 0).ZG75A7    OK                      02656600
&ZCVAL        SETC '&ZCVAL NEWNAME'             INCORRECT KEY USED      02656700
.ZG75A7       AIF   (K'&COUNT LE 0).ZG75A8      OK                      02656800
&ZCVAL        SETC '&ZCVAL COUNT'               INCORRECT KEY USED      02656900
.ZG75A8       AIF   (K'&MODE LE 0).ZG75A9       OK                      02657000
&ZCVAL        SETC '&ZCVAL MODE'                INCORRECT KEY USED      02657100
.ZG75A9       AIF   (K'&CLASS LE 0).ZG75A10     OK                      02657200
&ZCVAL        SETC '&ZCVAL CLASS'               INCORRECT KEY USED      02657300
.ZG75A10      AIF   (K'&CALLIB LE 0).ZG75A11    OK                      02657400
&ZCVAL        SETC '&ZCVAL CALLIB'              INCORRECT KEY USED      02657500
.ZG75A11      AIF   (K'&PATHNAME LE 0).ZG75A12  OK                      02657600
&ZCVAL        SETC '&ZCVAL PATHNAME'            INCORRECT KEY USED      02657700
.ZG75A12      AIF   (K'&PROTECT LE 0).ZG75A13   OK                      02657800
&ZCVAL        SETC '&ZCVAL PROTECT'             INCORRECT KEY USED      02657900
.ZG75A13      AIF   (K'&RENAMEL LE 0).ZG75A14   OK                      02658000
&ZCVAL        SETC '&ZCVAL RENAMEL'             INCORRECT KEY USED      02658100
.ZG75A14      AIF   (K'&AREA LE 0).ZG75A15      OK                      02658200
&ZCVAL        SETC '&ZCVAL AREA'                INCORRECT KEY USED      02658300
.ZG75A15      AIF   (K'&CURSOR LE 0).ZG75A16    OK                      02658400
&ZCVAL        SETC '&ZCVAL CURSOR'              INCORRECT KEY USED      02658500
.ZG75A16      AIF   (K'&RECTYPE LE 0).ZG75A17   OK                      02658600
&ZCVAL        SETC '&ZCVAL RECTYPE'             INCORRECT KEY USED      02658700
.ZG75A17      AIF   (K'&OFFSET LE 0).ZG75A18    OK                      02658800
&ZCVAL        SETC '&ZCVAL OFFSET'              INCORRECT KEY USED      02658900
.ZG75A18      AIF   (K'&SYMBOL LE 0).ZG75A19    OK                      02659000
&ZCVAL        SETC '&ZCVAL SYMBOL'              INCORRECT KEY USED      02659100
.ZG75A19      AIF   (K'&TCOUNT LE 0).ZG75A20    OK                      02659200
&ZCVAL        SETC '&ZCVAL TCOUNT'              INCORRECT KEY USED      02659300
.ZG75A20      AIF   (K'&NTYPE LE 0).ZG75A21     OK                      02659400
&ZCVAL        SETC '&ZCVAL NTYPE'               INCORRECT KEY USED      02659500
.ZG75A21      AIF   (K'&ITYPE LE 0).ZG75A22     OK                      02659600
&ZCVAL        SETC '&ZCVAL ITYPE'               INCORRECT KEY USED      02659700
.ZG75A22      AIF   (K'&DLLNAME LE 0).ZG75A23   OK                      02659800
&ZCVAL        SETC '&ZCVAL DLLNAME'             INCORRECT KEY USED      02659900
.ZG75A23      AIF   (K'&INAME LE 0).ZG75A24     OK                      02660000
&ZCVAL        SETC '&ZCVAL INAME'               INCORRECT KEY USED      02660100
.ZG75A24      AIF   (K'&INTYPE LE 0).ZG75A25    OK                      02660200
&ZCVAL        SETC '&ZCVAL INTYPE'              INCORRECT KEY USED      02660300
.ZG75A25      AIF   (K'&DDNAME LE 0).ZG75A26    OK                      02660400
&ZCVAL        SETC '&ZCVAL DDNAME'              INCORRECT KEY USED      02660500
.ZG75A26      AIF   (K'&DEPTR LE 0).ZG75A27     OK                      02660600
&ZCVAL        SETC '&ZCVAL DEPTR'               INCORRECT KEY USED      02660700
.ZG75A27      AIF   (K'&MEMBER LE 0).ZG75A28    OK                      02660800
&ZCVAL        SETC '&ZCVAL MEMBER'              INCORRECT KEY USED      02660900
.ZG75A28      AIF   (K'&DCBPTR LE 0).ZG75A29    OK                      02661000
&ZCVAL        SETC '&ZCVAL DCBPTR'              INCORRECT KEY USED      02661100
.ZG75A29      AIF   (K'&EPTOKEN LE 0).ZG75A30   OK                      02661200
&ZCVAL        SETC '&ZCVAL EPTOKEN'             INCORRECT KEY USED      02661300
.ZG75A30      AIF   (K'&ATTRIB LE 0).ZG75A31    OK                      02661400
&ZCVAL        SETC '&ZCVAL ATTRIB'              INCORRECT KEY USED      02661500
.ZG75A31      AIF   (K'&ALIASES LE 0).ZG75A32   OK                      02661600
&ZCVAL        SETC '&ZCVAL ALIASES'             INCORRECT KEY USED      02661700
.ZG75A32      AIF   (K'&EPLOC LE 0).ZG75A33     OK                      02661800
&ZCVAL        SETC '&ZCVAL EPLOC'               INCORRECT KEY USED      02661900
.ZG75A33      AIF   (K'&IDENTIFY LE 0).ZG75A34  OK                      02662000
&ZCVAL        SETC '&ZCVAL IDENTIFY'            INCORRECT KEY USED      02662100
.ZG75A34      AIF   (K'&EXTLST LE 0).ZG75A35    OK                      02662200
&ZCVAL        SETC '&ZCVAL EXTLST'              INCORRECT KEY USED      02662300
.ZG75A35      AIF   (K'&LNAME LE 0).ZG75A36     OK                      02662400
&ZCVAL        SETC '&ZCVAL LNAME'               INCORRECT KEY USED      02662500
.ZG75A36      AIF   (K'&NEWSECT LE 0).ZG75A37   OK                      02662600
&ZCVAL        SETC '&ZCVAL NEWSECT'             INCORRECT KEY USED      02662700
.ZG75A37      AIF   (K'&ENDDATA LE 0).ZG75A38   OK                      02662800
&ZCVAL        SETC '&ZCVAL ENDDATA'             INCORRECT KEY USED      02662900
.ZG75A38      AIF   (K'&MODLIB LE 0).ZG75A39    OK                      02663000
&ZCVAL        SETC '&ZCVAL MODLIB'              INCORRECT KEY USED      02663200
.ZG75A39      AIF   (K'&SNAME LE 0).ZG75A40     OK                      02664000
&ZCVAL        SETC '&ZCVAL SNAME'               INCORRECT KEY USED      02664800
.ZG75A40      AIF   (K'&REPLACE LE 0).ZG75A41   OK                      02665600
&ZCVAL        SETC '&ZCVAL REPLACE'             INCORRECT KEY USED      02666400
.ZG75A41      AIF   (K'&LIBOPT LE 0).ZG75A42    OK                      02667200
&ZCVAL        SETC '&ZCVAL LIBOPT'              INCORRECT KEY USED      02668000
.ZG75A42      AIF   (K'&OPTION LE 0).ZG75A43    OK                      02668800
&ZCVAL        SETC '&ZCVAL OPTION'              INCORRECT KEY USED      02669600
.ZG75A43      AIF   (K'&OPTVAL LE 0).ZG75A44    OK                      02670400
&ZCVAL        SETC '&ZCVAL OPTVAL'              INCORRECT KEY USED      02671200
.ZG75A44      AIF   (K'&PARMS LE 0).ZG75A45     OK                      02671600
&ZCVAL        SETC '&ZCVAL PARMS'               INCORRECT KEY USED      02672000
.ZG75A45      AIF   (K'&FILES LE 0).ZG75A46     OK                      02672400
&ZCVAL        SETC '&ZCVAL FILES'               INCORRECT KEY USED      02672800
.ZG75A46      AIF   (K'&EXITS LE 0).ZG75A47     OK                      02673600
&ZCVAL        SETC '&ZCVAL EXITS'               INCORRECT KEY USED      02674400
.ZG75A47      AIF   (K'&OPTIONS LE 0).ZG75A48   OK                      02675200
&ZCVAL        SETC '&ZCVAL OPTIONS'             INCORRECT KEY USED      02676000
.ZG75A48      AIF   (K'&ORIGIN LE 0).ZG75A49    OK                      02676800
&ZCVAL        SETC '&ZCVAL ORIGIN'              INCORRECT KEY USED      02677600
.ZG75A49      AIF   (K'&REGION LE 0).ZG75A50    OK                      02678400
&ZCVAL        SETC '&ZCVAL REGION'              INCORRECT KEY USED      02679200
.ZG75A50      AIF   (K'&ZCVAL LE 0).ZG75A51     OK                      02680000
&ZCVAL        SETC '&ZCVAL'(2,K'&ZCVAL-1)                               02680800
              AIF  (K'&ZCVAL LE 160).ZG75A51A                           02680900
&ZCVAL        SETC '&ZCVAL'(1,160)                                      02681000
&ZCVAL        SETC '&ZCVAL....'                                         02681100
.ZG75A51A     ANOP                                                      02681300
&ZMS          SETC  '"FUNC'     *KMEIA* MNOTE                           02681600
&ZMS          SETC  '&ZMS.=&FUNC"'                                      02682400
&ZMS          SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'                02683200
              MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'                02684000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             02684800
.ZG75A51      ANOP  ,                                                   02685600
.*----------------------------------------------------------------***   02686400
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     02687200
              AIF   (N'&DIALOG LE 1).ZG77A      CK NUM                  02729800
&ZMS          SETC  '"DIALOG='  *KPOSA* MNOTE                           02772500
&ZMS          SETC  '&ZMS.&DIALOG"'                                     02772600
&ZMS          SETC  '&ZMS "DIALOG"'                                     02772700
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 02772800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             02772900
.ZG77A        ANOP  ,                                                   02773000
.*-------------------------------------------------------------------   02773100
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         02773200
&ZXDIALOG     SETC  'INPUT'     SET IN/OUTPUT                           02773300
&XDIALOG      SETC  '&DIALOG(1)'                SET XVARIABLE           02773400
              AIF   (N'&DIALOG GT 1).ZG77B      MULTI PARMS             02773500
&XDIALOG      SETC  '&DIALOG'   SET XVARIABLE                           02773600
.ZG77B        AIF   (K'&DIALOG(1) GT 0).ZG77C                           02773700
&ZXDIALOG     SETC  ''          RESET IN/OUTPUT                         02773800
&ZMS          SETC  ' '         *KRQDA*                                 02773900
&ZMS          SETC  '&ZMS "DIALOG" KEY AND ITS ARGUMENT'                02774000
              MNOTE 8,' &ZMS ARE REQUIRED.'                             02774100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             02774200
.ZG77C        ANOP  ,                                                   02774300
.*-------------------------------------------------------------------   02774400
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    02774500
              AIF   (K'&ZXDIALOG LE 0).ZG77R    NOT I/O                 02774600
              AIF   ('&XDIALOG'(1,1) NE '(').ZG77R                      02774700
&ZCGPR        SETC  '&XDIALOG'(2,K'&XDIALOG-2)                          02774800
              AIF   ('&ZCGPR'(1,1) NE '0').ZG77P                        02774900
              AIF   (K'&ZCGPR GT 2).ZG77Q                               02775000
              AIF   ('&ZCGPR' EQ '0').ZG77Q                             02775100
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       02775200
              AIF   (T'&ZCGPR NE 'N').ZG77Q     INVALID REG NAME        02775300
.ZG77P        ANOP  ,                                                   02775400
              AIF   (T'&ZCGPR NE 'N').ZG77R     NON NUMERIC             02775500
              AIF   ('&ZCGPR' LT '2').ZG77Q                             02775600
              AIF   ('&ZCGPR' LE '12').ZG77R                            02775700
.ZG77Q        ANOP  ,                                                   02775800
&ZMS          SETC  '"DIALOG='  *KGPRA* MNOTE                           02775900
&ZMS          SETC  '&ZMS.&DIALOG"'                                     02776000
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           02776100
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    02776200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             02776300
.ZG77R        ANOP  ,                                                   02776400
.*----------------------------------------------------------------***   02776500
.***AG.KXVAR05 NAME, RQD OUTPUT, KEYS -XVARIABLE KEY                    02776600
              AIF   (N'&WORKMOD LE 1).ZG80A     CK NUM                  02776700
&ZMS          SETC  '"WORKMOD='                 *KPOSA* MNOTE           02776800
&ZMS          SETC  '&ZMS.&WORKMOD"'                                    02776900
&ZMS          SETC  '&ZMS "WORKMOD"'                                    02777000
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 02777100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             02777200
.ZG80A        ANOP  ,                                                   02777300
.*-------------------------------------------------------------------   02777400
.***AG.KXVAR06 NAME, RQD OUTPUT, KEYS -XVARIABLE                        02777500
&ZXWORKMOD    SETC  'OUTPUT'    SET IN/OUTPUT                           02777600
&XWORKMOD     SETC  '&WORKMOD(1)'               SET XVARIABLE           02777700
              AIF   (N'&WORKMOD GT 1).ZG80B     MULTI PARMS             02777800
&XWORKMOD     SETC  '&WORKMOD'  SET XVARIABLE                           02777900
.ZG80B        AIF   (K'&WORKMOD(1) GT 0).ZG80C                          02778000
&ZXWORKMOD    SETC  ''          RESET IN/OUTPUT                         02778100
&ZMS          SETC  ' '         *KRQDA*                                 02778200
&ZMS          SETC  '&ZMS "WORKMOD" KEY AND ITS ARGUMENT'               02778300
              MNOTE 8,' &ZMS ARE REQUIRED.'                             02778400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             02778500
.ZG80C        ANOP  ,                                                   02778600
.*-------------------------------------------------------------------   02778700
.***AG.KCK02 NAME, RQD OUTPUT, KEYS -GPR OUT OF RANGE                   02778800
              AIF   (K'&ZXWORKMOD LE 0).ZG80R   NOT I/O                 02778900
              AIF   ('&XWORKMOD'(1,1) NE '(').ZG80R                     02779000
&ZCGPR        SETC  '&XWORKMOD'(2,K'&XWORKMOD-2)                        02779100
              AIF   ('&ZCGPR'(1,1) NE '0').ZG80P                        02779200
              AIF   (K'&ZCGPR GT 2).ZG80Q                               02779300
              AIF   ('&ZCGPR' EQ '0').ZG80Q                             02779400
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       02779500
              AIF   (T'&ZCGPR NE 'N').ZG80Q     INVALID REG NAME        02779600
.ZG80P        ANOP  ,                                                   02779700
              AIF   (T'&ZCGPR NE 'N').ZG80R     NON NUMERIC             02779800
              AIF   ('&ZCGPR' LT '2').ZG80Q                             02779900
              AIF   ('&ZCGPR' LE '12').ZG80R                            02780000
.ZG80Q        ANOP  ,                                                   02780100
&ZMS          SETC  '"WORKMOD='                 *KGPRA* MNOTE           02780200
&ZMS          SETC  '&ZMS.&WORKMOD"'                                    02780300
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           02780400
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    02780500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             02780600
.ZG80R        ANOP  ,                                                   02780700
.*----------------------------------------------------------------***   02780800
.***AG.KKWRD01 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD             02780900
              AIF   (N'&INTENT LE 1).ZG83A      CK NUM                  02781000
&ZMS          SETC  '"INTENT='  *KPOSA* MNOTE                           02781100
&ZMS          SETC  '&ZMS.&INTENT"'                                     02781200
&ZMS          SETC  '&ZMS "INTENT"'                                     02781300
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 02781400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             02781500
.ZG83A        ANOP  ,                                                   02781600
.*-------------------------------------------------------------------   02781700
.***AG.KKWRD02 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD             02781800
&XINTENT      SETC  ''          INITIALIZE XVARIABLE                    02781900
.ZG84A   AIF   ('&INTENT(1)' NE 'B').ZG85A                              02782000
&XINTENT      SETC  'B'         SET KEYWORD                             02782100
.*-------------------------------------------------------------------   02782200
.***AG.KKWRD02 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD             02782300
.ZG85A   AIF   ('&INTENT(1)' NE 'A').ZG86A                              02782400
&XINTENT      SETC  'A'         SET KEYWORD                             02782500
.*-------------------------------------------------------------------   02782600
.***AG.KKWRD03 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD             02782700
.ZG86A        AIF   (K'&XINTENT GT 0).ZG86C     KEYWORD                 02782800
              AIF   (K'&INTENT(1) LE 0).ZG86B                           02782900
&ZMS          SETC  '"INTENT='  *KUKWA* MNOTE                           02783000
&ZMS          SETC  '&ZMS.&INTENT"'                                     02783100
&ZMS          SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '           02783200
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                 02783300
&ZMS          SETC  '&ZMS "B"'  VALID KEYWORD                           02783400
&ZMS          SETC  '&ZMS OR "A".'              VALID KEYWORD           02783500
              MNOTE 8,' &ZMS '                                          02783600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             02783700
.ZG86B        ANOP  ,                                                   02783800
&XINTENT      SETC  'B'         SET DEFAULT KEYWORD                     02783900
.ZG86C        ANOP  ,                                                   02784000
&ZXINTENT     SETC  'INPUT'     SET IN/OUTPUT                           02784100
.*-------------------------------------------------------------------   02784200
.***AG.KKWRD04 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD             02784300
              AIF   (K'&INTENT(1) GT 0).ZG86D   VALID                   02784400
&ZXINTENT     SETC  ''          RESET IN/OUTPUT                         02784500
&ZMS          SETC  'THE'                                               02784800
&ZMS          SETC  '&ZMS "INTENT" KEY AND ITS ARGUMENT'                02785600
&ZMS          SETC  '&ZMS ARE REQUIRED.'                                02786400
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                 02787200
&ZMS          SETC  '&ZMS "B"'  VALID KEYWORD                           02788000
&ZMS          SETC  '&ZMS OR "A".'              VALID KEYWORD           02788500
              MNOTE 8,' &ZMS '                                          02789000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             02789600
.ZG86D        ANOP  ,                                                   02790400
.*-------------------------------------------------------------------   02791200
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           02792000
.ZG87         ANOP  ,                                                   02792600
&ZTLC         SETC 'DELETEW'                                            02793300
              AIF   ('&FUNC(1)' NE '&ZTLC').ZG96                        02793800
&XFUNC        SETC  'DELETEW'   SET KEYWORD                             02794400
              AIF   (N'&FUNC LE 1).ZG87A        CK NUM                  02795200
&ZMS          SETC  '"FUNC='    *KPOSA* MNOTE                           02796000
&ZMS          SETC  '&ZMS.&FUNC"'                                       02796800
&ZMS          SETC  '&ZMS "FUNC"'                                       02797600
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 02798400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             02799200
.ZG87A        ANOP  ,                                                   02800000
.*------------------------------------------------------------------    02800800
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           02801600
&ZCVAL        SETC ''           CLEAR ERROR KEY ACCUMULATOR             02802400
.ZG87A0       AIF   (K'&ANAME LE 0).ZG87A1      OK                      02803200
&ZCVAL        SETC '&ZCVAL ANAME'               INCORRECT KEY USED      02804000
.ZG87A1       AIF   (K'&ENAME LE 0).ZG87A2      OK                      02804800
&ZCVAL        SETC '&ZCVAL ENAME'               INCORRECT KEY USED      02805600
.ZG87A2       AIF   (K'&AMODE LE 0).ZG87A3      OK                      02806400
&ZCVAL        SETC '&ZCVAL AMODE'               INCORRECT KEY USED      02807200
.ZG87A3       AIF   (K'&ATYPE LE 0).ZG87A4      OK                      02812100
&ZCVAL        SETC '&ZCVAL ATYPE'               INCORRECT KEY USED      02817000
.ZG87A4       AIF   (K'&SECTION LE 0).ZG87A5    OK                      02817500
&ZCVAL        SETC '&ZCVAL SECTION'             INCORRECT KEY USED      02818000
.ZG87A5       AIF   (K'&OLDNAME LE 0).ZG87A6    OK                      02818500
&ZCVAL        SETC '&ZCVAL OLDNAME'             INCORRECT KEY USED      02819000
.ZG87A6       AIF   (K'&NEWNAME LE 0).ZG87A7    OK                      02819500
&ZCVAL        SETC '&ZCVAL NEWNAME'             INCORRECT KEY USED      02820000
.ZG87A7       AIF   (K'&COUNT LE 0).ZG87A8      OK                      02820500
&ZCVAL        SETC '&ZCVAL COUNT'               INCORRECT KEY USED      02821000
.ZG87A8       AIF   (K'&MODE LE 0).ZG87A9       OK                      02821500
&ZCVAL        SETC '&ZCVAL MODE'                INCORRECT KEY USED      02822000
.ZG87A9       AIF   (K'&CLASS LE 0).ZG87A10     OK                      02822500
&ZCVAL        SETC '&ZCVAL CLASS'               INCORRECT KEY USED      02823200
.ZG87A10      AIF   (K'&CALLIB LE 0).ZG87A11    OK                      02823400
&ZCVAL        SETC '&ZCVAL CALLIB'              INCORRECT KEY USED      02823600
.ZG87A11      AIF   (K'&PATHNAME LE 0).ZG87A12  OK                      02823700
&ZCVAL        SETC '&ZCVAL PATHNAME'            INCORRECT KEY USED      02823800
.ZG87A12      AIF   (K'&DIALOG LE 0).ZG87A13    OK                      02823900
&ZCVAL        SETC '&ZCVAL DIALOG'              INCORRECT KEY USED      02824000
.ZG87A13      AIF   (K'&INTENT LE 0).ZG87A14    OK                      02824200
&ZCVAL        SETC '&ZCVAL INTENT'              INCORRECT KEY USED      02824400
.ZG87A14      AIF   (K'&RENAMEL LE 0).ZG87A15   OK                      02824500
&ZCVAL        SETC '&ZCVAL RENAMEL'             INCORRECT KEY USED      02824600
.ZG87A15      AIF   (K'&AREA LE 0).ZG87A16      OK                      02824700
&ZCVAL        SETC '&ZCVAL AREA'                INCORRECT KEY USED      02824800
.ZG87A16      AIF   (K'&CURSOR LE 0).ZG87A17    OK                      02825600
&ZCVAL        SETC '&ZCVAL CURSOR'              INCORRECT KEY USED      02826400
.ZG87A17      AIF   (K'&RECTYPE LE 0).ZG87A18   OK                      02827200
&ZCVAL        SETC '&ZCVAL RECTYPE'             INCORRECT KEY USED      02828000
.ZG87A18      AIF   (K'&OFFSET LE 0).ZG87A19    OK                      02828800
&ZCVAL        SETC '&ZCVAL OFFSET'              INCORRECT KEY USED      02829600
.ZG87A19      AIF   (K'&SYMBOL LE 0).ZG87A20    OK                      02830400
&ZCVAL        SETC '&ZCVAL SYMBOL'              INCORRECT KEY USED      02831200
.ZG87A20      AIF   (K'&TCOUNT LE 0).ZG87A21    OK                      02832000
&ZCVAL        SETC '&ZCVAL TCOUNT'              INCORRECT KEY USED      02832800
.ZG87A21      AIF   (K'&NTYPE LE 0).ZG87A22     OK                      02833200
&ZCVAL        SETC '&ZCVAL NTYPE'               INCORRECT KEY USED      02833600
.ZG87A22      AIF   (K'&ITYPE LE 0).ZG87A23     OK                      02833700
&ZCVAL        SETC '&ZCVAL ITYPE'               INCORRECT KEY USED      02833800
.ZG87A23      AIF   (K'&DLLNAME LE 0).ZG87A24   OK                      02833900
&ZCVAL        SETC '&ZCVAL DLLNAME'             INCORRECT KEY USED      02834000
.ZG87A24      AIF   (K'&INAME LE 0).ZG87A25     OK                      02834100
&ZCVAL        SETC '&ZCVAL INAME'               INCORRECT KEY USED      02834200
.ZG87A25      AIF   (K'&INTYPE LE 0).ZG87A26    OK                      02834300
&ZCVAL        SETC '&ZCVAL INTYPE'              INCORRECT KEY USED      02834400
.ZG87A26      AIF   (K'&DDNAME LE 0).ZG87A27    OK                      02835200
&ZCVAL        SETC '&ZCVAL DDNAME'              INCORRECT KEY USED      02836000
.ZG87A27      AIF   (K'&DEPTR LE 0).ZG87A28     OK                      02838400
&ZCVAL        SETC '&ZCVAL DEPTR'               INCORRECT KEY USED      02840800
.ZG87A28      AIF   (K'&MEMBER LE 0).ZG87A29    OK                      02840900
&ZCVAL        SETC '&ZCVAL MEMBER'              INCORRECT KEY USED      02841000
.ZG87A29      AIF   (K'&DCBPTR LE 0).ZG87A30    OK                      02841100
&ZCVAL        SETC '&ZCVAL DCBPTR'              INCORRECT KEY USED      02841200
.ZG87A30      AIF   (K'&EPTOKEN LE 0).ZG87A31   OK                      02841800
&ZCVAL        SETC '&ZCVAL EPTOKEN'             INCORRECT KEY USED      02842400
.ZG87A31      AIF   (K'&ATTRIB LE 0).ZG87A32    OK                      02843200
&ZCVAL        SETC '&ZCVAL ATTRIB'              INCORRECT KEY USED      02844000
.ZG87A32      AIF   (K'&ALIASES LE 0).ZG87A33   OK                      02844800
&ZCVAL        SETC '&ZCVAL ALIASES'             INCORRECT KEY USED      02845600
.ZG87A33      AIF   (K'&EPLOC LE 0).ZG87A34     OK                      02846400
&ZCVAL        SETC '&ZCVAL EPLOC'               INCORRECT KEY USED      02847200
.ZG87A34      AIF   (K'&IDENTIFY LE 0).ZG87A35  OK                      02848000
&ZCVAL        SETC '&ZCVAL IDENTIFY'            INCORRECT KEY USED      02848800
.ZG87A35      AIF   (K'&EXTLST LE 0).ZG87A36    OK                      02849600
&ZCVAL        SETC '&ZCVAL EXTLST'              INCORRECT KEY USED      02850400
.ZG87A36      AIF   (K'&LNAME LE 0).ZG87A37     OK                      02851200
&ZCVAL        SETC '&ZCVAL LNAME'               INCORRECT KEY USED      02852000
.ZG87A37      AIF   (K'&NEWSECT LE 0).ZG87A38   OK                      02852800
&ZCVAL        SETC '&ZCVAL NEWSECT'             INCORRECT KEY USED      02853600
.ZG87A38      AIF   (K'&ENDDATA LE 0).ZG87A39   OK                      02854400
&ZCVAL        SETC '&ZCVAL ENDDATA'             INCORRECT KEY USED      02855200
.ZG87A39      AIF   (K'&MODLIB LE 0).ZG87A40    OK                      02856000
&ZCVAL        SETC '&ZCVAL MODLIB'              INCORRECT KEY USED      02856800
.ZG87A40      AIF   (K'&SNAME LE 0).ZG87A41     OK                      02857600
&ZCVAL        SETC '&ZCVAL SNAME'               INCORRECT KEY USED      02858400
.ZG87A41      AIF   (K'&REPLACE LE 0).ZG87A42   OK                      02859200
&ZCVAL        SETC '&ZCVAL REPLACE'             INCORRECT KEY USED      02860000
.ZG87A42      AIF   (K'&LIBOPT LE 0).ZG87A43    OK                      02860800
&ZCVAL        SETC '&ZCVAL LIBOPT'              INCORRECT KEY USED      02861600
.ZG87A43      AIF   (K'&OPTION LE 0).ZG87A44    OK                      02862400
&ZCVAL        SETC '&ZCVAL OPTION'              INCORRECT KEY USED      02863200
.ZG87A44      AIF   (K'&OPTVAL LE 0).ZG87A45    OK                      02864000
&ZCVAL        SETC '&ZCVAL OPTVAL'              INCORRECT KEY USED      02864800
.ZG87A45      AIF   (K'&PARMS LE 0).ZG87A46     OK                      02865200
&ZCVAL        SETC '&ZCVAL PARMS'               INCORRECT KEY USED      02865600
.ZG87A46      AIF   (K'&FILES LE 0).ZG87A47     OK                      02866000
&ZCVAL        SETC '&ZCVAL FILES'               INCORRECT KEY USED      02866400
.ZG87A47      AIF   (K'&EXITS LE 0).ZG87A48     OK                      02867200
&ZCVAL        SETC '&ZCVAL EXITS'               INCORRECT KEY USED      02868000
.ZG87A48      AIF   (K'&OPTIONS LE 0).ZG87A49   OK                      02868800
&ZCVAL        SETC '&ZCVAL OPTIONS'             INCORRECT KEY USED      02869600
.ZG87A49      AIF   (K'&ORIGIN LE 0).ZG87A50    OK                      02870400
&ZCVAL        SETC '&ZCVAL ORIGIN'              INCORRECT KEY USED      02871200
.ZG87A50      AIF   (K'&REGION LE 0).ZG87A51    OK                      02872000
&ZCVAL        SETC '&ZCVAL REGION'              INCORRECT KEY USED      02872800
.ZG87A51      AIF   (K'&ZCVAL LE 0).ZG87A52     OK                      02873600
&ZCVAL        SETC '&ZCVAL'(2,K'&ZCVAL-1)                               02874400
              AIF  (K'&ZCVAL LE 160).ZG87A52A                           02874500
&ZCVAL        SETC '&ZCVAL'(1,160)                                      02874600
&ZCVAL        SETC '&ZCVAL....'                                         02874700
.ZG87A52A     ANOP                                                      02874900
&ZMS          SETC  '"FUNC'     *KMEIA* MNOTE                           02875200
&ZMS          SETC  '&ZMS.=&FUNC"'                                      02876000
&ZMS          SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'                02876800
              MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'                02877600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             02878400
.ZG87A52      ANOP  ,                                                   02879200
.*----------------------------------------------------------------***   02880000
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     02880800
              AIF   (N'&WORKMOD LE 1).ZG89A     CK NUM                  02881600
&ZMS          SETC  '"WORKMOD='                 *KPOSA* MNOTE           02882400
&ZMS          SETC  '&ZMS.&WORKMOD"'                                    02883200
&ZMS          SETC  '&ZMS "WORKMOD"'                                    02884000
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 02884800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             02885600
.ZG89A        ANOP  ,                                                   02886400
.*-------------------------------------------------------------------   02887200
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         02888000
&ZXWORKMOD    SETC  'INPUT'     SET IN/OUTPUT                           02888800
&XWORKMOD     SETC  '&WORKMOD(1)'               SET XVARIABLE           02889600
              AIF   (N'&WORKMOD GT 1).ZG89B     MULTI PARMS             02890400
&XWORKMOD     SETC  '&WORKMOD'  SET XVARIABLE                           02891200
.ZG89B        AIF   (K'&WORKMOD(1) GT 0).ZG89C                          02892000
&ZXWORKMOD    SETC  ''          RESET IN/OUTPUT                         02892800
&ZMS          SETC  ' '         *KRQDA*                                 02893600
&ZMS          SETC  '&ZMS "WORKMOD" KEY AND ITS ARGUMENT'               02894400
              MNOTE 8,' &ZMS ARE REQUIRED.'                             02895200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             02896000
.ZG89C        ANOP  ,                                                   02896800
.*-------------------------------------------------------------------   02897600
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    02898400
              AIF   (K'&ZXWORKMOD LE 0).ZG89R   NOT I/O                 02899200
              AIF   ('&XWORKMOD'(1,1) NE '(').ZG89R                     02900000
&ZCGPR        SETC  '&XWORKMOD'(2,K'&XWORKMOD-2)                        02900800
              AIF   ('&ZCGPR'(1,1) NE '0').ZG89P                        02901600
              AIF   (K'&ZCGPR GT 2).ZG89Q                               02902400
              AIF   ('&ZCGPR' EQ '0').ZG89Q                             02903200
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       02904000
              AIF   (T'&ZCGPR NE 'N').ZG89Q     INVALID REG NAME        02904800
.ZG89P        ANOP  ,                                                   02905600
              AIF   (T'&ZCGPR NE 'N').ZG89R     NON NUMERIC             02906400
              AIF   ('&ZCGPR' LT '2').ZG89Q                             02907200
              AIF   ('&ZCGPR' LE '12').ZG89R                            02908000
.ZG89Q        ANOP  ,                                                   02908800
&ZMS          SETC  '"WORKMOD='                 *KGPRA* MNOTE           02909600
&ZMS          SETC  '&ZMS.&WORKMOD"'                                    02910400
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           02911200
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    02912000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             02912800
.ZG89R        ANOP  ,                                                   02913600
.*----------------------------------------------------------------***   02914400
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02915200
              AIF   (N'&PROTECT LE 1).ZG92A     CK NUM                  02916000
&ZMS          SETC  '"PROTECT='                 *KPOSA* MNOTE           02916800
&ZMS          SETC  '&ZMS.&PROTECT"'                                    02917600
&ZMS          SETC  '&ZMS "PROTECT"'                                    02918400
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 02919200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             02920000
.ZG92A        ANOP  ,                                                   02920800
.*-------------------------------------------------------------------   02921600
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02922400
&XPROTECT     SETC  ''          INITIALIZE XVARIABLE                    02923200
.ZG93A   AIF   ('&PROTECT(1)' NE 'Y').ZG94A                             02924000
&XPROTECT     SETC  'Y'         SET KEYWORD                             02924800
.*-------------------------------------------------------------------   02925600
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02926400
.ZG94A   AIF   ('&PROTECT(1)' NE 'N').ZG95A                             02927200
&XPROTECT     SETC  'N'         SET KEYWORD                             02928000
.*-------------------------------------------------------------------   02928800
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             02929600
.ZG95A        AIF   (K'&XPROTECT GT 0).ZG95C    KEYWORD                 02930400
              AIF   (K'&PROTECT(1) LE 0).ZG95B                          02931200
&ZMS          SETC  '"PROTECT='                 *KUKWA* MNOTE           02932000
&ZMS          SETC  '&ZMS.&PROTECT"'                                    02932800
&ZMS          SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '           02933600
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                 02934400
&ZMS          SETC  '&ZMS "Y"'  VALID KEYWORD                           02935200
&ZMS          SETC  '&ZMS OR "N".'              VALID KEYWORD           02935700
              MNOTE 8,' &ZMS '                                          02936200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             02936800
.ZG95B        ANOP  ,                                                   02937600
&XPROTECT     SETC  'Y'         SET DEFAULT KEYWORD                     02938400
.ZG95C        ANOP  ,                                                   02939200
&ZXPROTECT    SETC  'INPUT'     SET IN/OUTPUT                           02940000
.*-------------------------------------------------------------------   02940800
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           02941600
.ZG96         ANOP  ,                                                   02942200
&ZTLC         SETC 'DLLR'                                               02942800
              AIF   ('&FUNC(1)' NE '&ZTLC').ZG103                       02943400
&XFUNC        SETC  'DLLR'      SET KEYWORD                             02944000
              AIF   (N'&FUNC LE 1).ZG96A        CK NUM                  02944800
&ZMS          SETC  '"FUNC='    *KPOSA* MNOTE                           02945600
&ZMS          SETC  '&ZMS.&FUNC"'                                       02946400
&ZMS          SETC  '&ZMS "FUNC"'                                       02947200
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 02948000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             02948800
.ZG96A        ANOP  ,                                                   02949600
.*------------------------------------------------------------------    02950400
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           02951200
&ZCVAL        SETC ''           CLEAR ERROR KEY ACCUMULATOR             02952000
.ZG96A0       AIF   (K'&ANAME LE 0).ZG96A1      OK                      02953600
&ZCVAL        SETC '&ZCVAL ANAME'               INCORRECT KEY USED      02955200
.ZG96A1       AIF   (K'&ENAME LE 0).ZG96A2      OK                      02956000
&ZCVAL        SETC '&ZCVAL ENAME'               INCORRECT KEY USED      02956800
.ZG96A2       AIF   (K'&AMODE LE 0).ZG96A3      OK                      02957600
&ZCVAL        SETC '&ZCVAL AMODE'               INCORRECT KEY USED      02958400
.ZG96A3       AIF   (K'&ATYPE LE 0).ZG96A4      OK                      02963300
&ZCVAL        SETC '&ZCVAL ATYPE'               INCORRECT KEY USED      02968200
.ZG96A4       AIF   (K'&SECTION LE 0).ZG96A5    OK                      02968500
&ZCVAL        SETC '&ZCVAL SECTION'             INCORRECT KEY USED      02968800
.ZG96A5       AIF   (K'&OLDNAME LE 0).ZG96A6    OK                      02969100
&ZCVAL        SETC '&ZCVAL OLDNAME'             INCORRECT KEY USED      02969400
.ZG96A6       AIF   (K'&NEWNAME LE 0).ZG96A7    OK                      02969700
&ZCVAL        SETC '&ZCVAL NEWNAME'             INCORRECT KEY USED      02970000
.ZG96A7       AIF   (K'&COUNT LE 0).ZG96A8      OK                      02970300
&ZCVAL        SETC '&ZCVAL COUNT'               INCORRECT KEY USED      02970600
.ZG96A8       AIF   (K'&MODE LE 0).ZG96A9       OK                      02970900
&ZCVAL        SETC '&ZCVAL MODE'                INCORRECT KEY USED      02971200
.ZG96A9       AIF   (K'&CLASS LE 0).ZG96A10     OK                      02971500
&ZCVAL        SETC '&ZCVAL CLASS'               INCORRECT KEY USED      02972800
.ZG96A10      AIF   (K'&CALLIB LE 0).ZG96A11    OK                      02973000
&ZCVAL        SETC '&ZCVAL CALLIB'              INCORRECT KEY USED      02973200
.ZG96A11      AIF   (K'&PATHNAME LE 0).ZG96A12  OK                      02973300
&ZCVAL        SETC '&ZCVAL PATHNAME'            INCORRECT KEY USED      02973400
.ZG96A12      AIF   (K'&DIALOG LE 0).ZG96A13    OK                      02973500
&ZCVAL        SETC '&ZCVAL DIALOG'              INCORRECT KEY USED      02973600
.ZG96A13      AIF   (K'&INTENT LE 0).ZG96A14    OK                      02973700
&ZCVAL        SETC '&ZCVAL INTENT'              INCORRECT KEY USED      02973800
.ZG96A14      AIF   (K'&PROTECT LE 0).ZG96A15   OK                      02973900
&ZCVAL        SETC '&ZCVAL PROTECT'             INCORRECT KEY USED      02974000
.ZG96A15      AIF   (K'&AREA LE 0).ZG96A16      OK                      02974200
&ZCVAL        SETC '&ZCVAL AREA'                INCORRECT KEY USED      02974400
.ZG96A16      AIF   (K'&CURSOR LE 0).ZG96A17    OK                      02975200
&ZCVAL        SETC '&ZCVAL CURSOR'              INCORRECT KEY USED      02976000
.ZG96A17      AIF   (K'&RECTYPE LE 0).ZG96A18   OK                      02976800
&ZCVAL        SETC '&ZCVAL RECTYPE'             INCORRECT KEY USED      02977600
.ZG96A18      AIF   (K'&OFFSET LE 0).ZG96A19    OK                      02978400
&ZCVAL        SETC '&ZCVAL OFFSET'              INCORRECT KEY USED      02979200
.ZG96A19      AIF   (K'&SYMBOL LE 0).ZG96A20    OK                      02980000
&ZCVAL        SETC '&ZCVAL SYMBOL'              INCORRECT KEY USED      02980800
.ZG96A20      AIF   (K'&TCOUNT LE 0).ZG96A21    OK                      02981600
&ZCVAL        SETC '&ZCVAL TCOUNT'              INCORRECT KEY USED      02982400
.ZG96A21      AIF   (K'&NTYPE LE 0).ZG96A22     OK                      02982800
&ZCVAL        SETC '&ZCVAL NTYPE'               INCORRECT KEY USED      02983200
.ZG96A22      AIF   (K'&ITYPE LE 0).ZG96A23     OK                      02983300
&ZCVAL        SETC '&ZCVAL ITYPE'               INCORRECT KEY USED      02983400
.ZG96A23      AIF   (K'&DLLNAME LE 0).ZG96A24   OK                      02983500
&ZCVAL        SETC '&ZCVAL DLLNAME'             INCORRECT KEY USED      02983600
.ZG96A24      AIF   (K'&INAME LE 0).ZG96A25     OK                      02983700
&ZCVAL        SETC '&ZCVAL INAME'               INCORRECT KEY USED      02983800
.ZG96A25      AIF   (K'&INTYPE LE 0).ZG96A26    OK                      02983900
&ZCVAL        SETC '&ZCVAL INTYPE'              INCORRECT KEY USED      02984000
.ZG96A26      AIF   (K'&DDNAME LE 0).ZG96A27    OK                      02984800
&ZCVAL        SETC '&ZCVAL DDNAME'              INCORRECT KEY USED      02985600
.ZG96A27      AIF   (K'&DEPTR LE 0).ZG96A28     OK                      02988000
&ZCVAL        SETC '&ZCVAL DEPTR'               INCORRECT KEY USED      02990400
.ZG96A28      AIF   (K'&MEMBER LE 0).ZG96A29    OK                      02990500
&ZCVAL        SETC '&ZCVAL MEMBER'              INCORRECT KEY USED      02990600
.ZG96A29      AIF   (K'&DCBPTR LE 0).ZG96A30    OK                      02990700
&ZCVAL        SETC '&ZCVAL DCBPTR'              INCORRECT KEY USED      02990800
.ZG96A30      AIF   (K'&EPTOKEN LE 0).ZG96A31   OK                      02991400
&ZCVAL        SETC '&ZCVAL EPTOKEN'             INCORRECT KEY USED      02992000
.ZG96A31      AIF   (K'&ATTRIB LE 0).ZG96A32    OK                      02992800
&ZCVAL        SETC '&ZCVAL ATTRIB'              INCORRECT KEY USED      02993600
.ZG96A32      AIF   (K'&ALIASES LE 0).ZG96A33   OK                      02994400
&ZCVAL        SETC '&ZCVAL ALIASES'             INCORRECT KEY USED      02995200
.ZG96A33      AIF   (K'&EPLOC LE 0).ZG96A34     OK                      02996000
&ZCVAL        SETC '&ZCVAL EPLOC'               INCORRECT KEY USED      02996800
.ZG96A34      AIF   (K'&IDENTIFY LE 0).ZG96A35  OK                      02997600
&ZCVAL        SETC '&ZCVAL IDENTIFY'            INCORRECT KEY USED      02998400
.ZG96A35      AIF   (K'&EXTLST LE 0).ZG96A36    OK                      02999200
&ZCVAL        SETC '&ZCVAL EXTLST'              INCORRECT KEY USED      03000000
.ZG96A36      AIF   (K'&LNAME LE 0).ZG96A37     OK                      03000800
&ZCVAL        SETC '&ZCVAL LNAME'               INCORRECT KEY USED      03001600
.ZG96A37      AIF   (K'&NEWSECT LE 0).ZG96A38   OK                      03002400
&ZCVAL        SETC '&ZCVAL NEWSECT'             INCORRECT KEY USED      03003200
.ZG96A38      AIF   (K'&ENDDATA LE 0).ZG96A39   OK                      03004000
&ZCVAL        SETC '&ZCVAL ENDDATA'             INCORRECT KEY USED      03004800
.ZG96A39      AIF   (K'&MODLIB LE 0).ZG96A40    OK                      03005600
&ZCVAL        SETC '&ZCVAL MODLIB'              INCORRECT KEY USED      03006400
.ZG96A40      AIF   (K'&SNAME LE 0).ZG96A41     OK                      03007200
&ZCVAL        SETC '&ZCVAL SNAME'               INCORRECT KEY USED      03008000
.ZG96A41      AIF   (K'&REPLACE LE 0).ZG96A42   OK                      03008800
&ZCVAL        SETC '&ZCVAL REPLACE'             INCORRECT KEY USED      03009600
.ZG96A42      AIF   (K'&LIBOPT LE 0).ZG96A43    OK                      03010400
&ZCVAL        SETC '&ZCVAL LIBOPT'              INCORRECT KEY USED      03011200
.ZG96A43      AIF   (K'&OPTION LE 0).ZG96A44    OK                      03012000
&ZCVAL        SETC '&ZCVAL OPTION'              INCORRECT KEY USED      03012800
.ZG96A44      AIF   (K'&OPTVAL LE 0).ZG96A45    OK                      03013600
&ZCVAL        SETC '&ZCVAL OPTVAL'              INCORRECT KEY USED      03014400
.ZG96A45      AIF   (K'&PARMS LE 0).ZG96A46     OK                      03014800
&ZCVAL        SETC '&ZCVAL PARMS'               INCORRECT KEY USED      03015200
.ZG96A46      AIF   (K'&FILES LE 0).ZG96A47     OK                      03015600
&ZCVAL        SETC '&ZCVAL FILES'               INCORRECT KEY USED      03016000
.ZG96A47      AIF   (K'&EXITS LE 0).ZG96A48     OK                      03016800
&ZCVAL        SETC '&ZCVAL EXITS'               INCORRECT KEY USED      03017600
.ZG96A48      AIF   (K'&OPTIONS LE 0).ZG96A49   OK                      03018400
&ZCVAL        SETC '&ZCVAL OPTIONS'             INCORRECT KEY USED      03019200
.ZG96A49      AIF   (K'&ORIGIN LE 0).ZG96A50    OK                      03020000
&ZCVAL        SETC '&ZCVAL ORIGIN'              INCORRECT KEY USED      03020800
.ZG96A50      AIF   (K'&REGION LE 0).ZG96A51    OK                      03021600
&ZCVAL        SETC '&ZCVAL REGION'              INCORRECT KEY USED      03022400
.ZG96A51      AIF   (K'&ZCVAL LE 0).ZG96A52     OK                      03023200
&ZCVAL        SETC '&ZCVAL'(2,K'&ZCVAL-1)                               03024000
              AIF  (K'&ZCVAL LE 160).ZG96A52A                           03024100
&ZCVAL        SETC '&ZCVAL'(1,160)                                      03024200
&ZCVAL        SETC '&ZCVAL....'                                         03024300
.ZG96A52A     ANOP                                                      03024500
&ZMS          SETC  '"FUNC'     *KMEIA* MNOTE                           03024800
&ZMS          SETC  '&ZMS.=&FUNC"'                                      03025600
&ZMS          SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'                03026400
              MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'                03027200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             03028000
.ZG96A52      ANOP  ,                                                   03028800
.*----------------------------------------------------------------***   03029600
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     03030400
              AIF   (N'&WORKMOD LE 1).ZG98A     CK NUM                  03030500
&ZMS          SETC  '"WORKMOD='                 *KPOSA* MNOTE           03030600
&ZMS          SETC  '&ZMS.&WORKMOD"'                                    03030700
&ZMS          SETC  '&ZMS "WORKMOD"'                                    03030800
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 03030900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             03031000
.ZG98A        ANOP  ,                                                   03031100
.*-------------------------------------------------------------------   03031200
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         03031300
&ZXWORKMOD    SETC  'INPUT'     SET IN/OUTPUT                           03031400
&XWORKMOD     SETC  '&WORKMOD(1)'               SET XVARIABLE           03031500
              AIF   (N'&WORKMOD GT 1).ZG98B     MULTI PARMS             03031600
&XWORKMOD     SETC  '&WORKMOD'  SET XVARIABLE                           03031700
.ZG98B        AIF   (K'&WORKMOD(1) GT 0).ZG98C                          03031800
&ZXWORKMOD    SETC  ''          RESET IN/OUTPUT                         03031900
&ZMS          SETC  ' '         *KRQDA*                                 03032000
&ZMS          SETC  '&ZMS "WORKMOD" KEY AND ITS ARGUMENT'               03032100
              MNOTE 8,' &ZMS ARE REQUIRED.'                             03032200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             03032300
.ZG98C        ANOP  ,                                                   03032400
.*-------------------------------------------------------------------   03032500
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    03032600
              AIF   (K'&ZXWORKMOD LE 0).ZG98R   NOT I/O                 03032700
              AIF   ('&XWORKMOD'(1,1) NE '(').ZG98R                     03032800
&ZCGPR        SETC  '&XWORKMOD'(2,K'&XWORKMOD-2)                        03032900
              AIF   ('&ZCGPR'(1,1) NE '0').ZG98P                        03033000
              AIF   (K'&ZCGPR GT 2).ZG98Q                               03033100
              AIF   ('&ZCGPR' EQ '0').ZG98Q                             03033200
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       03033300
              AIF   (T'&ZCGPR NE 'N').ZG98Q     INVALID REG NAME        03033400
.ZG98P        ANOP  ,                                                   03033500
              AIF   (T'&ZCGPR NE 'N').ZG98R     NON NUMERIC             03033600
              AIF   ('&ZCGPR' LT '2').ZG98Q                             03033700
              AIF   ('&ZCGPR' LE '12').ZG98R                            03033800
.ZG98Q        ANOP  ,                                                   03033900
&ZMS          SETC  '"WORKMOD='                 *KGPRA* MNOTE           03034000
&ZMS          SETC  '&ZMS.&WORKMOD"'                                    03034100
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           03034200
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    03034300
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             03034400
.ZG98R        ANOP  ,                                                   03034500
.*----------------------------------------------------------------***   03034600
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     03034700
              AIF   (N'&RENAMEL LE 1).ZG101A    CK NUM                  03034800
&ZMS          SETC  '"RENAMEL='                 *KPOSA* MNOTE           03034900
&ZMS          SETC  '&ZMS.&RENAMEL"'                                    03035000
&ZMS          SETC  '&ZMS "RENAMEL"'                                    03035100
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 03035200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             03035300
.ZG101A       ANOP  ,                                                   03035400
.*-------------------------------------------------------------------   03035500
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         03035600
&ZXRENAMEL    SETC  'INPUT'     SET IN/OUTPUT                           03035700
&XRENAMEL     SETC  '&RENAMEL(1)'               SET XVARIABLE           03035800
              AIF   (N'&RENAMEL GT 1).ZG101B    MULTI PARMS             03035900
&XRENAMEL     SETC  '&RENAMEL'  SET XVARIABLE                           03036000
.ZG101B       AIF   (K'&RENAMEL(1) GT 0).ZG101C                         03036100
&ZXRENAMEL    SETC  ''          RESET IN/OUTPUT                         03036200
&ZMS          SETC  ' '         *KRQDA*                                 03036300
&ZMS          SETC  '&ZMS "RENAMEL" KEY AND ITS ARGUMENT'               03036400
              MNOTE 8,' &ZMS ARE REQUIRED.'                             03036500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             03036600
.ZG101C       ANOP  ,                                                   03036700
.*-------------------------------------------------------------------   03036800
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    03036900
              AIF   (K'&ZXRENAMEL LE 0).ZG101R  NOT I/O                 03037000
              AIF   ('&XRENAMEL'(1,1) NE '(').ZG101R                    03037100
&ZCGPR        SETC  '&XRENAMEL'(2,K'&XRENAMEL-2)                        03037200
              AIF   ('&ZCGPR'(1,1) NE '0').ZG101P                       03037300
              AIF   (K'&ZCGPR GT 2).ZG101Q                              03037400
              AIF   ('&ZCGPR' EQ '0').ZG101Q                            03037500
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       03037600
              AIF   (T'&ZCGPR NE 'N').ZG101Q    INVALID REG NAME        03037700
.ZG101P       ANOP  ,                                                   03037800
              AIF   (T'&ZCGPR NE 'N').ZG101R    NON NUMERIC             03037900
              AIF   ('&ZCGPR' LT '2').ZG101Q                            03038000
              AIF   ('&ZCGPR' LE '12').ZG101R                           03038100
.ZG101Q       ANOP  ,                                                   03038200
&ZMS          SETC  '"RENAMEL='                 *KGPRA* MNOTE           03038300
&ZMS          SETC  '&ZMS.&RENAMEL"'                                    03038400
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           03038500
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    03038600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             03038700
.ZG101R       ANOP  ,                                                   03038800
.*-------------------------------------------------------------------   03038900
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           03039000
.ZG103        ANOP  ,                                                   03039100
&ZTLC         SETC 'ENDD'                                               03039300
              AIF   ('&FUNC(1)' NE '&ZTLC').ZG112                       03039400
&XFUNC        SETC  'ENDD'      SET KEYWORD                             03039500
              AIF   (N'&FUNC LE 1).ZG103A       CK NUM                  03039600
&ZMS          SETC  '"FUNC='    *KPOSA* MNOTE                           03039700
&ZMS          SETC  '&ZMS.&FUNC"'                                       03039800
&ZMS          SETC  '&ZMS "FUNC"'                                       03039900
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 03040000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             03040100
.ZG103A       ANOP  ,                                                   03040200
.*------------------------------------------------------------------    03040300
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           03040400
&ZCVAL        SETC ''           CLEAR ERROR KEY ACCUMULATOR             03040500
.ZG103A0      AIF   (K'&WORKMOD LE 0).ZG103A1   OK                      03040600
&ZCVAL        SETC '&ZCVAL WORKMOD'             INCORRECT KEY USED      03040700
.ZG103A1      AIF   (K'&ANAME LE 0).ZG103A2     OK                      03040800
&ZCVAL        SETC '&ZCVAL ANAME'               INCORRECT KEY USED      03040900
.ZG103A2      AIF   (K'&ENAME LE 0).ZG103A3     OK                      03041000
&ZCVAL        SETC '&ZCVAL ENAME'               INCORRECT KEY USED      03041100
.ZG103A3      AIF   (K'&AMODE LE 0).ZG103A4     OK                      03041200
&ZCVAL        SETC '&ZCVAL AMODE'               INCORRECT KEY USED      03041300
.ZG103A4      AIF   (K'&ATYPE LE 0).ZG103A5     OK                      03041600
&ZCVAL        SETC '&ZCVAL ATYPE'               INCORRECT KEY USED      03041900
.ZG103A5      AIF   (K'&SECTION LE 0).ZG103A6   OK                      03042000
&ZCVAL        SETC '&ZCVAL SECTION'             INCORRECT KEY USED      03042100
.ZG103A6      AIF   (K'&OLDNAME LE 0).ZG103A7   OK                      03042200
&ZCVAL        SETC '&ZCVAL OLDNAME'             INCORRECT KEY USED      03042300
.ZG103A7      AIF   (K'&NEWNAME LE 0).ZG103A8   OK                      03042400
&ZCVAL        SETC '&ZCVAL NEWNAME'             INCORRECT KEY USED      03042500
.ZG103A8      AIF   (K'&COUNT LE 0).ZG103A9     OK                      03042600
&ZCVAL        SETC '&ZCVAL COUNT'               INCORRECT KEY USED      03042700
.ZG103A9      AIF   (K'&MODE LE 0).ZG103A10     OK                      03042800
&ZCVAL        SETC '&ZCVAL MODE'                INCORRECT KEY USED      03042900
.ZG103A10     AIF   (K'&CLASS LE 0).ZG103A11    OK                      03043000
&ZCVAL        SETC '&ZCVAL CLASS'               INCORRECT KEY USED      03043100
.ZG103A11     AIF   (K'&CALLIB LE 0).ZG103A12   OK                      03043200
&ZCVAL        SETC '&ZCVAL CALLIB'              INCORRECT KEY USED      03043300
.ZG103A12     AIF   (K'&PATHNAME LE 0).ZG103A13  OK                     03043400
&ZCVAL        SETC '&ZCVAL PATHNAME'            INCORRECT KEY USED      03043500
.ZG103A13     AIF   (K'&INTENT LE 0).ZG103A14   OK                      03043600
&ZCVAL        SETC '&ZCVAL INTENT'              INCORRECT KEY USED      03043700
.ZG103A14     AIF   (K'&RENAMEL LE 0).ZG103A15  OK                      03043800
&ZCVAL        SETC '&ZCVAL RENAMEL'             INCORRECT KEY USED      03043900
.ZG103A15     AIF   (K'&AREA LE 0).ZG103A16     OK                      03044000
&ZCVAL        SETC '&ZCVAL AREA'                INCORRECT KEY USED      03044100
.ZG103A16     AIF   (K'&CURSOR LE 0).ZG103A17   OK                      03044200
&ZCVAL        SETC '&ZCVAL CURSOR'              INCORRECT KEY USED      03044300
.ZG103A17     AIF   (K'&RECTYPE LE 0).ZG103A18  OK                      03044400
&ZCVAL        SETC '&ZCVAL RECTYPE'             INCORRECT KEY USED      03044500
.ZG103A18     AIF   (K'&OFFSET LE 0).ZG103A19   OK                      03044600
&ZCVAL        SETC '&ZCVAL OFFSET'              INCORRECT KEY USED      03044700
.ZG103A19     AIF   (K'&SYMBOL LE 0).ZG103A20   OK                      03044800
&ZCVAL        SETC '&ZCVAL SYMBOL'              INCORRECT KEY USED      03044900
.ZG103A20     AIF   (K'&TCOUNT LE 0).ZG103A21   OK                      03045000
&ZCVAL        SETC '&ZCVAL TCOUNT'              INCORRECT KEY USED      03045100
.ZG103A21     AIF   (K'&NTYPE LE 0).ZG103A22    OK                      03045200
&ZCVAL        SETC '&ZCVAL NTYPE'               INCORRECT KEY USED      03045300
.ZG103A22     AIF   (K'&ITYPE LE 0).ZG103A23    OK                      03045400
&ZCVAL        SETC '&ZCVAL ITYPE'               INCORRECT KEY USED      03045500
.ZG103A23     AIF   (K'&DLLNAME LE 0).ZG103A24  OK                      03045600
&ZCVAL        SETC '&ZCVAL DLLNAME'             INCORRECT KEY USED      03045700
.ZG103A24     AIF   (K'&INAME LE 0).ZG103A25    OK                      03045800
&ZCVAL        SETC '&ZCVAL INAME'               INCORRECT KEY USED      03045900
.ZG103A25     AIF   (K'&INTYPE LE 0).ZG103A26   OK                      03046000
&ZCVAL        SETC '&ZCVAL INTYPE'              INCORRECT KEY USED      03046100
.ZG103A26     AIF   (K'&DDNAME LE 0).ZG103A27   OK                      03046200
&ZCVAL        SETC '&ZCVAL DDNAME'              INCORRECT KEY USED      03046300
.ZG103A27     AIF   (K'&DEPTR LE 0).ZG103A28    OK                      03046400
&ZCVAL        SETC '&ZCVAL DEPTR'               INCORRECT KEY USED      03046500
.ZG103A28     AIF   (K'&MEMBER LE 0).ZG103A29   OK                      03046600
&ZCVAL        SETC '&ZCVAL MEMBER'              INCORRECT KEY USED      03046700
.ZG103A29     AIF   (K'&DCBPTR LE 0).ZG103A30   OK                      03046800
&ZCVAL        SETC '&ZCVAL DCBPTR'              INCORRECT KEY USED      03046900
.ZG103A30     AIF   (K'&EPTOKEN LE 0).ZG103A31  OK                      03047000
&ZCVAL        SETC '&ZCVAL EPTOKEN'             INCORRECT KEY USED      03047100
.ZG103A31     AIF   (K'&ATTRIB LE 0).ZG103A32   OK                      03047200
&ZCVAL        SETC '&ZCVAL ATTRIB'              INCORRECT KEY USED      03047300
.ZG103A32     AIF   (K'&ALIASES LE 0).ZG103A33  OK                      03047400
&ZCVAL        SETC '&ZCVAL ALIASES'             INCORRECT KEY USED      03047500
.ZG103A33     AIF   (K'&EPLOC LE 0).ZG103A34    OK                      03047600
&ZCVAL        SETC '&ZCVAL EPLOC'               INCORRECT KEY USED      03047700
.ZG103A34     AIF   (K'&IDENTIFY LE 0).ZG103A35  OK                     03047800
&ZCVAL        SETC '&ZCVAL IDENTIFY'            INCORRECT KEY USED      03047900
.ZG103A35     AIF   (K'&EXTLST LE 0).ZG103A36   OK                      03048000
&ZCVAL        SETC '&ZCVAL EXTLST'              INCORRECT KEY USED      03048100
.ZG103A36     AIF   (K'&LNAME LE 0).ZG103A37    OK                      03048200
&ZCVAL        SETC '&ZCVAL LNAME'               INCORRECT KEY USED      03048300
.ZG103A37     AIF   (K'&NEWSECT LE 0).ZG103A38  OK                      03048400
&ZCVAL        SETC '&ZCVAL NEWSECT'             INCORRECT KEY USED      03048500
.ZG103A38     AIF   (K'&ENDDATA LE 0).ZG103A39  OK                      03048600
&ZCVAL        SETC '&ZCVAL ENDDATA'             INCORRECT KEY USED      03048700
.ZG103A39     AIF   (K'&MODLIB LE 0).ZG103A40   OK                      03048800
&ZCVAL        SETC '&ZCVAL MODLIB'              INCORRECT KEY USED      03048900
.ZG103A40     AIF   (K'&SNAME LE 0).ZG103A41    OK                      03049000
&ZCVAL        SETC '&ZCVAL SNAME'               INCORRECT KEY USED      03049100
.ZG103A41     AIF   (K'&REPLACE LE 0).ZG103A42  OK                      03049200
&ZCVAL        SETC '&ZCVAL REPLACE'             INCORRECT KEY USED      03049300
.ZG103A42     AIF   (K'&LIBOPT LE 0).ZG103A43   OK                      03049400
&ZCVAL        SETC '&ZCVAL LIBOPT'              INCORRECT KEY USED      03049500
.ZG103A43     AIF   (K'&OPTION LE 0).ZG103A44   OK                      03049600
&ZCVAL        SETC '&ZCVAL OPTION'              INCORRECT KEY USED      03049700
.ZG103A44     AIF   (K'&OPTVAL LE 0).ZG103A45   OK                      03049800
&ZCVAL        SETC '&ZCVAL OPTVAL'              INCORRECT KEY USED      03049900
.ZG103A45     AIF   (K'&PARMS LE 0).ZG103A46    OK                      03050000
&ZCVAL        SETC '&ZCVAL PARMS'               INCORRECT KEY USED      03050100
.ZG103A46     AIF   (K'&FILES LE 0).ZG103A47    OK                      03050200
&ZCVAL        SETC '&ZCVAL FILES'               INCORRECT KEY USED      03050300
.ZG103A47     AIF   (K'&EXITS LE 0).ZG103A48    OK                      03050400
&ZCVAL        SETC '&ZCVAL EXITS'               INCORRECT KEY USED      03050500
.ZG103A48     AIF   (K'&OPTIONS LE 0).ZG103A49  OK                      03050600
&ZCVAL        SETC '&ZCVAL OPTIONS'             INCORRECT KEY USED      03050700
.ZG103A49     AIF   (K'&ORIGIN LE 0).ZG103A50   OK                      03050800
&ZCVAL        SETC '&ZCVAL ORIGIN'              INCORRECT KEY USED      03050900
.ZG103A50     AIF   (K'&REGION LE 0).ZG103A51   OK                      03051000
&ZCVAL        SETC '&ZCVAL REGION'              INCORRECT KEY USED      03051100
.ZG103A51     AIF   (K'&ZCVAL LE 0).ZG103A52    OK                      03051200
&ZCVAL        SETC '&ZCVAL'(2,K'&ZCVAL-1)                               03051300
              AIF  (K'&ZCVAL LE 160).ZG103A52A                          03051400
&ZCVAL        SETC '&ZCVAL'(1,160)                                      03051500
&ZCVAL        SETC '&ZCVAL....'                                         03051600
.ZG103A52A    ANOP                                                      03051700
&ZMS          SETC  '"FUNC'     *KMEIA* MNOTE                           03051800
&ZMS          SETC  '&ZMS.=&FUNC"'                                      03051900
&ZMS          SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'                03052000
              MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'                03052100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             03052200
.ZG103A52     ANOP  ,                                                   03052300
.*----------------------------------------------------------------***   03052400
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     03052500
              AIF   (N'&DIALOG LE 1).ZG105A     CK NUM                  03052600
&ZMS          SETC  '"DIALOG='  *KPOSA* MNOTE                           03052700
&ZMS          SETC  '&ZMS.&DIALOG"'                                     03052800
&ZMS          SETC  '&ZMS "DIALOG"'                                     03052900
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 03053000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             03053100
.ZG105A       ANOP  ,                                                   03053200
.*-------------------------------------------------------------------   03053300
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         03053400
&ZXDIALOG     SETC  'INPUT'     SET IN/OUTPUT                           03053500
&XDIALOG      SETC  '&DIALOG(1)'                SET XVARIABLE           03053600
              AIF   (N'&DIALOG GT 1).ZG105B     MULTI PARMS             03053700
&XDIALOG      SETC  '&DIALOG'   SET XVARIABLE                           03053800
.ZG105B       AIF   (K'&DIALOG(1) GT 0).ZG105C                          03053900
&ZXDIALOG     SETC  ''          RESET IN/OUTPUT                         03054000
&ZMS          SETC  ' '         *KRQDA*                                 03054100
&ZMS          SETC  '&ZMS "DIALOG" KEY AND ITS ARGUMENT'                03054200
              MNOTE 8,' &ZMS ARE REQUIRED.'                             03054300
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             03054400
.ZG105C       ANOP  ,                                                   03054500
.*-------------------------------------------------------------------   03054600
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    03054700
              AIF   (K'&ZXDIALOG LE 0).ZG105R   NOT I/O                 03054800
              AIF   ('&XDIALOG'(1,1) NE '(').ZG105R                     03054900
&ZCGPR        SETC  '&XDIALOG'(2,K'&XDIALOG-2)                          03055000
              AIF   ('&ZCGPR'(1,1) NE '0').ZG105P                       03055100
              AIF   (K'&ZCGPR GT 2).ZG105Q                              03055200
              AIF   ('&ZCGPR' EQ '0').ZG105Q                            03055300
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       03055400
              AIF   (T'&ZCGPR NE 'N').ZG105Q    INVALID REG NAME        03055500
.ZG105P       ANOP  ,                                                   03055600
              AIF   (T'&ZCGPR NE 'N').ZG105R    NON NUMERIC             03055700
              AIF   ('&ZCGPR' LT '2').ZG105Q                            03055800
              AIF   ('&ZCGPR' LE '12').ZG105R                           03055900
.ZG105Q       ANOP  ,                                                   03056000
&ZMS          SETC  '"DIALOG='  *KGPRA* MNOTE                           03059200
&ZMS          SETC  '&ZMS.&DIALOG"'                                     03060000
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           03060800
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    03061600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             03062400
.ZG105R       ANOP  ,                                                   03063200
.*----------------------------------------------------------------***   03064000
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             03064800
              AIF   (N'&PROTECT LE 1).ZG108A    CK NUM                  03065600
&ZMS          SETC  '"PROTECT='                 *KPOSA* MNOTE           03066400
&ZMS          SETC  '&ZMS.&PROTECT"'                                    03067200
&ZMS          SETC  '&ZMS "PROTECT"'                                    03068000
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 03068800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             03069600
.ZG108A       ANOP  ,                                                   03070400
.*-------------------------------------------------------------------   03071200
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             03072000
&XPROTECT     SETC  ''          INITIALIZE XVARIABLE                    03072800
.ZG109A   AIF   ('&PROTECT(1)' NE 'Y').ZG110A                           03073600
&XPROTECT     SETC  'Y'         SET KEYWORD                             03074400
.*-------------------------------------------------------------------   03075200
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             03076000
.ZG110A   AIF   ('&PROTECT(1)' NE 'N').ZG111A                           03076800
&XPROTECT     SETC  'N'         SET KEYWORD                             03077600
.*-------------------------------------------------------------------   03078400
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             03079200
.ZG111A       AIF   (K'&XPROTECT GT 0).ZG111C   KEYWORD                 03080000
              AIF   (K'&PROTECT(1) LE 0).ZG111B                         03080800
&ZMS          SETC  '"PROTECT='                 *KUKWA* MNOTE           03081600
&ZMS          SETC  '&ZMS.&PROTECT"'                                    03082400
&ZMS          SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '           03083200
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                 03084000
&ZMS          SETC  '&ZMS "Y"'  VALID KEYWORD                           03084800
&ZMS          SETC  '&ZMS OR "N".'              VALID KEYWORD           03085300
              MNOTE 8,' &ZMS '                                          03085800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             03086400
.ZG111B       ANOP  ,                                                   03087200
&XPROTECT     SETC  'Y'         SET DEFAULT KEYWORD                     03088000
.ZG111C       ANOP  ,                                                   03088800
&ZXPROTECT    SETC  'INPUT'     SET IN/OUTPUT                           03089600
.*-------------------------------------------------------------------   03090400
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           03091200
.ZG112        ANOP  ,                                                   03091800
&ZTLC         SETC 'GETD'                                               03092500
              AIF   ('&FUNC(1)' NE '&ZTLC').ZG131                       03093000
&XFUNC        SETC  'GETD'      SET KEYWORD                             03093600
              AIF   (N'&FUNC LE 1).ZG112A       CK NUM                  03094400
&ZMS          SETC  '"FUNC='    *KPOSA* MNOTE                           03095200
&ZMS          SETC  '&ZMS.&FUNC"'                                       03096000
&ZMS          SETC  '&ZMS "FUNC"'                                       03096800
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 03097600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             03098400
.ZG112A       ANOP  ,                                                   03099200
.*------------------------------------------------------------------    03100000
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           03100800
&ZCVAL        SETC ''           CLEAR ERROR KEY ACCUMULATOR             03101600
.ZG112A0      AIF   (K'&ANAME LE 0).ZG112A1     OK                      03102400
&ZCVAL        SETC '&ZCVAL ANAME'               INCORRECT KEY USED      03103200
.ZG112A1      AIF   (K'&ENAME LE 0).ZG112A2     OK                      03104000
&ZCVAL        SETC '&ZCVAL ENAME'               INCORRECT KEY USED      03104800
.ZG112A2      AIF   (K'&AMODE LE 0).ZG112A3     OK                      03105600
&ZCVAL        SETC '&ZCVAL AMODE'               INCORRECT KEY USED      03106400
.ZG112A3      AIF   (K'&ATYPE LE 0).ZG112A4     OK                      03109700
&ZCVAL        SETC '&ZCVAL ATYPE'               INCORRECT KEY USED      03113000
.ZG112A4      AIF   (K'&OLDNAME LE 0).ZG112A5   OK                      03113100
&ZCVAL        SETC '&ZCVAL OLDNAME'             INCORRECT KEY USED      03113200
.ZG112A5      AIF   (K'&NEWNAME LE 0).ZG112A6   OK                      03113300
&ZCVAL        SETC '&ZCVAL NEWNAME'             INCORRECT KEY USED      03113400
.ZG112A6      AIF   (K'&MODE LE 0).ZG112A7      OK                      03113500
&ZCVAL        SETC '&ZCVAL MODE'                INCORRECT KEY USED      03113600
.ZG112A7      AIF   (K'&CALLIB LE 0).ZG112A8    OK                      03113700
&ZCVAL        SETC '&ZCVAL CALLIB'              INCORRECT KEY USED      03114400
.ZG112A8      AIF   (K'&PATHNAME LE 0).ZG112A9  OK                      03114800
&ZCVAL        SETC '&ZCVAL PATHNAME'            INCORRECT KEY USED      03115200
.ZG112A9      AIF   (K'&DIALOG LE 0).ZG112A10   OK                      03115600
&ZCVAL        SETC '&ZCVAL DIALOG'              INCORRECT KEY USED      03116000
.ZG112A10     AIF   (K'&INTENT LE 0).ZG112A11   OK                      03116800
&ZCVAL        SETC '&ZCVAL INTENT'              INCORRECT KEY USED      03117600
.ZG112A11     AIF   (K'&PROTECT LE 0).ZG112A12  OK                      03118400
&ZCVAL        SETC '&ZCVAL PROTECT'             INCORRECT KEY USED      03119200
.ZG112A12     AIF   (K'&RENAMEL LE 0).ZG112A13  OK                      03119600
&ZCVAL        SETC '&ZCVAL RENAMEL'             INCORRECT KEY USED      03120000
.ZG112A13     AIF   (K'&RECTYPE LE 0).ZG112A14  OK                      03120400
&ZCVAL        SETC '&ZCVAL RECTYPE'             INCORRECT KEY USED      03120800
.ZG112A14     AIF   (K'&OFFSET LE 0).ZG112A15   OK                      03121600
&ZCVAL        SETC '&ZCVAL OFFSET'              INCORRECT KEY USED      03122400
.ZG112A15     AIF   (K'&SYMBOL LE 0).ZG112A16   OK                      03123200
&ZCVAL        SETC '&ZCVAL SYMBOL'              INCORRECT KEY USED      03124000
.ZG112A16     AIF   (K'&TCOUNT LE 0).ZG112A17   OK                      03124800
&ZCVAL        SETC '&ZCVAL TCOUNT'              INCORRECT KEY USED      03125600
.ZG112A17     AIF   (K'&NTYPE LE 0).ZG112A18    OK                      03126000
&ZCVAL        SETC '&ZCVAL NTYPE'               INCORRECT KEY USED      03126400
.ZG112A18     AIF   (K'&ITYPE LE 0).ZG112A19    OK                      03126500
&ZCVAL        SETC '&ZCVAL ITYPE'               INCORRECT KEY USED      03126600
.ZG112A19     AIF   (K'&DLLNAME LE 0).ZG112A20  OK                      03126700
&ZCVAL        SETC '&ZCVAL DLLNAME'             INCORRECT KEY USED      03126800
.ZG112A20     AIF   (K'&INAME LE 0).ZG112A21    OK                      03126900
&ZCVAL        SETC '&ZCVAL INAME'               INCORRECT KEY USED      03127000
.ZG112A21     AIF   (K'&INTYPE LE 0).ZG112A22   OK                      03127100
&ZCVAL        SETC '&ZCVAL INTYPE'              INCORRECT KEY USED      03127200
.ZG112A22     AIF   (K'&DDNAME LE 0).ZG112A23   OK                      03128000
&ZCVAL        SETC '&ZCVAL DDNAME'              INCORRECT KEY USED      03128800
.ZG112A23     AIF   (K'&DEPTR LE 0).ZG112A24    OK                      03131200
&ZCVAL        SETC '&ZCVAL DEPTR'               INCORRECT KEY USED      03133600
.ZG112A24     AIF   (K'&MEMBER LE 0).ZG112A25   OK                      03133700
&ZCVAL        SETC '&ZCVAL MEMBER'              INCORRECT KEY USED      03133800
.ZG112A25     AIF   (K'&DCBPTR LE 0).ZG112A26   OK                      03133900
&ZCVAL        SETC '&ZCVAL DCBPTR'              INCORRECT KEY USED      03134000
.ZG112A26     AIF   (K'&EPTOKEN LE 0).ZG112A27  OK                      03134600
&ZCVAL        SETC '&ZCVAL EPTOKEN'             INCORRECT KEY USED      03135200
.ZG112A27     AIF   (K'&ATTRIB LE 0).ZG112A28   OK                      03136000
&ZCVAL        SETC '&ZCVAL ATTRIB'              INCORRECT KEY USED      03136800
.ZG112A28     AIF   (K'&ALIASES LE 0).ZG112A29  OK                      03137600
&ZCVAL        SETC '&ZCVAL ALIASES'             INCORRECT KEY USED      03138400
.ZG112A29     AIF   (K'&EPLOC LE 0).ZG112A30    OK                      03139200
&ZCVAL        SETC '&ZCVAL EPLOC'               INCORRECT KEY USED      03140000
.ZG112A30     AIF   (K'&IDENTIFY LE 0).ZG112A31  OK                     03140800
&ZCVAL        SETC '&ZCVAL IDENTIFY'            INCORRECT KEY USED      03141600
.ZG112A31     AIF   (K'&EXTLST LE 0).ZG112A32   OK                      03142400
&ZCVAL        SETC '&ZCVAL EXTLST'              INCORRECT KEY USED      03143200
.ZG112A32     AIF   (K'&LNAME LE 0).ZG112A33    OK                      03144000
&ZCVAL        SETC '&ZCVAL LNAME'               INCORRECT KEY USED      03144800
.ZG112A33     AIF   (K'&NEWSECT LE 0).ZG112A34  OK                      03145600
&ZCVAL        SETC '&ZCVAL NEWSECT'             INCORRECT KEY USED      03146400
.ZG112A34     AIF   (K'&ENDDATA LE 0).ZG112A35  OK                      03147200
&ZCVAL        SETC '&ZCVAL ENDDATA'             INCORRECT KEY USED      03148000
.ZG112A35     AIF   (K'&MODLIB LE 0).ZG112A36   OK                      03148800
&ZCVAL        SETC '&ZCVAL MODLIB'              INCORRECT KEY USED      03149600
.ZG112A36     AIF   (K'&SNAME LE 0).ZG112A37    OK                      03150400
&ZCVAL        SETC '&ZCVAL SNAME'               INCORRECT KEY USED      03151200
.ZG112A37     AIF   (K'&REPLACE LE 0).ZG112A38  OK                      03152000
&ZCVAL        SETC '&ZCVAL REPLACE'             INCORRECT KEY USED      03152800
.ZG112A38     AIF   (K'&LIBOPT LE 0).ZG112A39   OK                      03153600
&ZCVAL        SETC '&ZCVAL LIBOPT'              INCORRECT KEY USED      03154400
.ZG112A39     AIF   (K'&OPTION LE 0).ZG112A40   OK                      03155200
&ZCVAL        SETC '&ZCVAL OPTION'              INCORRECT KEY USED      03156000
.ZG112A40     AIF   (K'&OPTVAL LE 0).ZG112A41   OK                      03156800
&ZCVAL        SETC '&ZCVAL OPTVAL'              INCORRECT KEY USED      03157600
.ZG112A41     AIF   (K'&PARMS LE 0).ZG112A42    OK                      03158000
&ZCVAL        SETC '&ZCVAL PARMS'               INCORRECT KEY USED      03158400
.ZG112A42     AIF   (K'&FILES LE 0).ZG112A43    OK                      03158800
&ZCVAL        SETC '&ZCVAL FILES'               INCORRECT KEY USED      03159200
.ZG112A43     AIF   (K'&EXITS LE 0).ZG112A44    OK                      03160000
&ZCVAL        SETC '&ZCVAL EXITS'               INCORRECT KEY USED      03160800
.ZG112A44     AIF   (K'&OPTIONS LE 0).ZG112A45  OK                      03161600
&ZCVAL        SETC '&ZCVAL OPTIONS'             INCORRECT KEY USED      03162400
.ZG112A45     AIF   (K'&ORIGIN LE 0).ZG112A46   OK                      03163200
&ZCVAL        SETC '&ZCVAL ORIGIN'              INCORRECT KEY USED      03164000
.ZG112A46     AIF   (K'&REGION LE 0).ZG112A47   OK                      03164800
&ZCVAL        SETC '&ZCVAL REGION'              INCORRECT KEY USED      03165600
.ZG112A47     AIF   (K'&ZCVAL LE 0).ZG112A48    OK                      03166400
&ZCVAL        SETC '&ZCVAL'(2,K'&ZCVAL-1)                               03167200
              AIF  (K'&ZCVAL LE 160).ZG112A48A                          03167300
&ZCVAL        SETC '&ZCVAL'(1,160)                                      03167400
&ZCVAL        SETC '&ZCVAL....'                                         03167500
.ZG112A48A    ANOP                                                      03167700
&ZMS          SETC  '"FUNC'     *KMEIA* MNOTE                           03168000
&ZMS          SETC  '&ZMS.=&FUNC"'                                      03168800
&ZMS          SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'                03169600
              MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'                03170400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             03171200
.ZG112A48     ANOP  ,                                                   03172000
.*----------------------------------------------------------------***   03172800
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     03173600
              AIF   (N'&WORKMOD LE 1).ZG114A    CK NUM                  03174400
&ZMS          SETC  '"WORKMOD='                 *KPOSA* MNOTE           03175200
&ZMS          SETC  '&ZMS.&WORKMOD"'                                    03176000
&ZMS          SETC  '&ZMS "WORKMOD"'                                    03176800
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 03177600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             03178400
.ZG114A       ANOP  ,                                                   03179200
.*-------------------------------------------------------------------   03180000
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         03180800
&ZXWORKMOD    SETC  'INPUT'     SET IN/OUTPUT                           03181600
&XWORKMOD     SETC  '&WORKMOD(1)'               SET XVARIABLE           03182400
              AIF   (N'&WORKMOD GT 1).ZG114B    MULTI PARMS             03183200
&XWORKMOD     SETC  '&WORKMOD'  SET XVARIABLE                           03184000
.ZG114B       AIF   (K'&WORKMOD(1) GT 0).ZG114C                         03184800
&ZXWORKMOD    SETC  ''          RESET IN/OUTPUT                         03185600
&ZMS          SETC  ' '         *KRQDA*                                 03186400
&ZMS          SETC  '&ZMS "WORKMOD" KEY AND ITS ARGUMENT'               03187200
              MNOTE 8,' &ZMS ARE REQUIRED.'                             03188000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             03188800
.ZG114C       ANOP  ,                                                   03206800
.*-------------------------------------------------------------------   03224800
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    03225600
              AIF   (K'&ZXWORKMOD LE 0).ZG114R  NOT I/O                 03226400
              AIF   ('&XWORKMOD'(1,1) NE '(').ZG114R                    03227200
&ZCGPR        SETC  '&XWORKMOD'(2,K'&XWORKMOD-2)                        03228000
              AIF   ('&ZCGPR'(1,1) NE '0').ZG114P                       03295000
              AIF   (K'&ZCGPR GT 2).ZG114Q                              03295800
              AIF   ('&ZCGPR' EQ '0').ZG114Q                            03296600
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       03297600
              AIF   (T'&ZCGPR NE 'N').ZG114Q    INVALID REG NAME        03298400
.ZG114P       ANOP  ,                                                   03299200
              AIF   (T'&ZCGPR NE 'N').ZG114R    NON NUMERIC             03300000
              AIF   ('&ZCGPR' LT '2').ZG114Q                            03300800
              AIF   ('&ZCGPR' LE '12').ZG114R                           03301600
.ZG114Q       ANOP  ,                                                   03302400
&ZMS          SETC  '"WORKMOD='                 *KGPRA* MNOTE           03303200
&ZMS          SETC  '&ZMS.&WORKMOD"'                                    03304000
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           03304800
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    03305600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             03306400
.ZG114R       ANOP  ,                                                   03307200
.*----------------------------------------------------------------***   03308000
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     03308800
              AIF   (N'&CLASS LE 1).ZG117A      CK NUM                  03309600
&ZMS          SETC  '"CLASS='   *KPOSA* MNOTE                           03310400
&ZMS          SETC  '&ZMS.&CLASS"'                                      03311200
&ZMS          SETC  '&ZMS "CLASS"'                                      03312000
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 03312800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             03313600
.ZG117A       ANOP  ,                                                   03314400
.*-------------------------------------------------------------------   03315200
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         03316000
&ZXCLASS      SETC  'INPUT'     SET IN/OUTPUT                           03316800
&XCLASS       SETC  '&CLASS(1)'                 SET XVARIABLE           03317600
              AIF   (N'&CLASS GT 1).ZG117B      MULTI PARMS             03318400
&XCLASS       SETC  '&CLASS'    SET XVARIABLE                           03319200
.ZG117B       AIF   (K'&CLASS(1) GT 0).ZG117C                           03320000
&ZXCLASS      SETC  ''          RESET IN/OUTPUT                         03320800
&ZMS          SETC  ' '         *KRQDA*                                 03321600
&ZMS          SETC  '&ZMS "CLASS" KEY AND ITS ARGUMENT'                 03322400
              MNOTE 8,' &ZMS ARE REQUIRED.'                             03323200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             03324000
.ZG117C       ANOP  ,                                                   03324800
.*-------------------------------------------------------------------   03325600
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    03326400
              AIF   (K'&ZXCLASS LE 0).ZG117R    NOT I/O                 03327200
              AIF   ('&XCLASS'(1,1) NE '(').ZG117R                      03328000
&ZCGPR        SETC  '&XCLASS'(2,K'&XCLASS-2)                            03328800
              AIF   ('&ZCGPR'(1,1) NE '0').ZG117P                       03329600
              AIF   (K'&ZCGPR GT 2).ZG117Q                              03330400
              AIF   ('&ZCGPR' EQ '0').ZG117Q                            03331200
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       03332000
              AIF   (T'&ZCGPR NE 'N').ZG117Q    INVALID REG NAME        03332800
.ZG117P       ANOP  ,                                                   03333600
              AIF   (T'&ZCGPR NE 'N').ZG117R    NON NUMERIC             03334400
              AIF   ('&ZCGPR' LT '2').ZG117Q                            03335200
              AIF   ('&ZCGPR' LE '12').ZG117R                           03336000
.ZG117Q       ANOP  ,                                                   03336800
&ZMS          SETC  '"CLASS='   *KGPRA* MNOTE                           03337600
&ZMS          SETC  '&ZMS.&CLASS"'                                      03338400
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           03339200
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    03340000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             03340800
.ZG117R       ANOP  ,                                                   03341600
.*----------------------------------------------------------------***   03342400
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     03343200
              AIF   (N'&SECTION LE 1).ZG120A    CK NUM                  03344000
&ZMS          SETC  '"SECTION='                 *KPOSA* MNOTE           03344800
&ZMS          SETC  '&ZMS.&SECTION"'                                    03345600
&ZMS          SETC  '&ZMS "SECTION"'                                    03346400
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 03347200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             03348000
.ZG120A       ANOP  ,                                                   03348800
.*-------------------------------------------------------------------   03349600
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         03350700
&ZXSECTION    SETC  'INPUT'     SET IN/OUTPUT                           03351800
&XSECTION     SETC  '0'                                                 03352900
              AIF   (K'&SECTION(1) LE 0).ZG120B  PARM                   03354000
&XSECTION     SETC  '&SECTION(1)'               SET XVARIABLE           03355100
              AIF   (N'&SECTION GT 1).ZG120B    MULTI PARMS             03356200
&XSECTION     SETC  '&SECTION'  SET XVARIABLE                           03357300
.ZG120B       ANOP  ,                                                   03358400
.*-------------------------------------------------------------------   03360000
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    03360600
              AIF   (K'&ZXSECTION LE 0).ZG120R  NOT I/O                 03361200
              AIF   ('&XSECTION' EQ '0').ZG120R                         03361800
              AIF   ('&XSECTION'(1,1) NE '(').ZG120R                    03362400
&ZCGPR        SETC  '&XSECTION'(2,K'&XSECTION-2)                        03363000
              AIF   ('&ZCGPR'(1,1) NE '0').ZG120P                       03364000
              AIF   (K'&ZCGPR GT 2).ZG120Q                              03364800
              AIF   ('&ZCGPR' EQ '0').ZG120Q                            03365600
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       03366400
              AIF   (T'&ZCGPR NE 'N').ZG120Q    INVALID REG NAME        03367100
.ZG120P       ANOP  ,                                                   03367800
              AIF   (T'&ZCGPR NE 'N').ZG120R    NON NUMERIC             03368500
              AIF   ('&ZCGPR' LT '2').ZG120Q                            03369200
              AIF   ('&ZCGPR' LE '12').ZG120R                           03369900
.ZG120Q       ANOP  ,                                                   03370600
&ZMS          SETC  '"SECTION='                 *KGPRA* MNOTE           03370900
&ZMS          SETC  '&ZMS.&SECTION"'                                    03371200
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           03371500
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    03371600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             03371700
.ZG120R       ANOP  ,                                                   03371800
.*----------------------------------------------------------------***   03371900
.***AG.KXVAR05 NAME, RQD OUTPUT, KEYS -XVARIABLE KEY                    03372000
              AIF   (N'&AREA LE 1).ZG123A       CK NUM                  03372100
&ZMS          SETC  '"AREA='    *KPOSA* MNOTE                           03372200
&ZMS          SETC  '&ZMS.&AREA"'                                       03372300
&ZMS          SETC  '&ZMS "AREA"'                                       03372400
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 03372500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             03372600
.ZG123A       ANOP  ,                                                   03372700
.*-------------------------------------------------------------------   03372800
.***AG.KXVAR06 NAME, RQD OUTPUT, KEYS -XVARIABLE                        03372900
&ZXAREA       SETC  'OUTPUT'    SET IN/OUTPUT                           03373000
&XAREA        SETC  '&AREA(1)'  SET XVARIABLE                           03373100
              AIF   (N'&AREA GT 1).ZG123B       MULTI PARMS             03373200
&XAREA        SETC  '&AREA'     SET XVARIABLE                           03373300
.ZG123B       AIF   (K'&AREA(1) GT 0).ZG123C                            03373400
&ZXAREA       SETC  ''          RESET IN/OUTPUT                         03373500
&ZMS          SETC  ' '         *KRQDA*                                 03373600
&ZMS          SETC  '&ZMS "AREA" KEY AND ITS ARGUMENT'                  03373700
              MNOTE 8,' &ZMS ARE REQUIRED.'                             03373800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             03373900
.ZG123C       ANOP  ,                                                   03374000
.*-------------------------------------------------------------------   03374100
.***AG.KCK02 NAME, RQD OUTPUT, KEYS -GPR OUT OF RANGE                   03374200
              AIF   (K'&ZXAREA LE 0).ZG123R     NOT I/O                 03386700
              AIF   ('&XAREA'(1,1) NE '(').ZG123R                       03399200
&ZCGPR        SETC  '&XAREA'(2,K'&XAREA-2)                              03411700
              AIF   ('&ZCGPR'(1,1) NE '0').ZG123P                       03424500
              AIF   (K'&ZCGPR GT 2).ZG123Q                              03474500
              AIF   ('&ZCGPR' EQ '0').ZG123Q                            03524500
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       03689600
              AIF   (T'&ZCGPR NE 'N').ZG123Q    INVALID REG NAME        03700700
.ZG123P       ANOP  ,                                                   03711800
              AIF   (T'&ZCGPR NE 'N').ZG123R    NON NUMERIC             03722900
              AIF   ('&ZCGPR' LT '2').ZG123Q                            03734000
              AIF   ('&ZCGPR' LE '12').ZG123R                           03745100
.ZG123Q       ANOP  ,                                                   03756200
&ZMS          SETC  '"AREA='    *KGPRA* MNOTE                           03756300
&ZMS          SETC  '&ZMS.&AREA"'                                       03756400
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           03756500
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    03756600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             03756700
.ZG123R       ANOP  ,                                                   03756800
.*----------------------------------------------------------------***   03756900
.***AG.KXVAR05 NAME, RQD INOUT, KEYS -XVARIABLE KEY                     03757000
              AIF   (N'&CURSOR LE 1).ZG126A     CK NUM                  03757100
&ZMS          SETC  '"CURSOR='  *KPOSA* MNOTE                           03757200
&ZMS          SETC  '&ZMS.&CURSOR"'                                     03757300
&ZMS          SETC  '&ZMS "CURSOR"'                                     03757400
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 03757500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             03757600
.ZG126A       ANOP  ,                                                   03757700
.*-------------------------------------------------------------------   03757800
.***AG.KXVAR06 NAME, RQD INOUT, KEYS -XVARIABLE                         03757900
&ZXCURSOR     SETC  'INOUT'     SET IN/OUTPUT                           03758000
&XCURSOR      SETC  '&CURSOR(1)'                SET XVARIABLE           03758100
              AIF   (N'&CURSOR GT 1).ZG126B     MULTI PARMS             03758200
&XCURSOR      SETC  '&CURSOR'   SET XVARIABLE                           03758300
.ZG126B       AIF   (K'&CURSOR(1) GT 0).ZG126C                          03758400
&ZXCURSOR     SETC  ''          RESET IN/OUTPUT                         03758500
&ZMS          SETC  ' '         *KRQDA*                                 03758600
&ZMS          SETC  '&ZMS "CURSOR" KEY AND ITS ARGUMENT'                03758700
              MNOTE 8,' &ZMS ARE REQUIRED.'                             03758800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             03758900
.ZG126C       ANOP  ,                                                   03759000
.*-------------------------------------------------------------------   03759100
.***AG.KCK02 NAME, RQD INOUT, KEYS -GPR OUT OF RANGE                    03759200
              AIF   (K'&ZXCURSOR LE 0).ZG126R   NOT I/O                 03759300
              AIF   ('&XCURSOR'(1,1) NE '(').ZG126R                     03759400
&ZCGPR        SETC  '&XCURSOR'(2,K'&XCURSOR-2)                          03759500
              AIF   ('&ZCGPR'(1,1) NE '0').ZG126P                       03759600
              AIF   (K'&ZCGPR GT 2).ZG126Q                              03759700
              AIF   ('&ZCGPR' EQ '0').ZG126Q                            03759800
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       03759900
              AIF   (T'&ZCGPR NE 'N').ZG126Q    INVALID REG NAME        03760000
.ZG126P       ANOP  ,                                                   03760100
              AIF   (T'&ZCGPR NE 'N').ZG126R    NON NUMERIC             03760200
              AIF   ('&ZCGPR' LT '2').ZG126Q                            03760300
              AIF   ('&ZCGPR' LE '12').ZG126R                           03760400
.ZG126Q       ANOP  ,                                                   03760500
&ZMS          SETC  '"CURSOR='  *KGPRA* MNOTE                           03760600
&ZMS          SETC  '&ZMS.&CURSOR"'                                     03760700
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           03760800
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    03760900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             03761000
.ZG126R       ANOP  ,                                                   03761100
.*----------------------------------------------------------------***   03761200
.***AG.KXVAR05 NAME, RQD OUTPUT, KEYS -XVARIABLE KEY                    03761300
              AIF   (N'&COUNT LE 1).ZG129A      CK NUM                  03761400
&ZMS          SETC  '"COUNT='   *KPOSA* MNOTE                           03761500
&ZMS          SETC  '&ZMS.&COUNT"'                                      03761600
&ZMS          SETC  '&ZMS "COUNT"'                                      03761700
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 03761800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             03761900
.ZG129A       ANOP  ,                                                   03762000
.*-------------------------------------------------------------------   03762100
.***AG.KXVAR06 NAME, RQD OUTPUT, KEYS -XVARIABLE                        03762200
&ZXCOUNT      SETC  'OUTPUT'    SET IN/OUTPUT                           03762300
&XCOUNT       SETC  '&COUNT(1)'                 SET XVARIABLE           03762400
              AIF   (N'&COUNT GT 1).ZG129B      MULTI PARMS             03762500
&XCOUNT       SETC  '&COUNT'    SET XVARIABLE                           03762600
.ZG129B       AIF   (K'&COUNT(1) GT 0).ZG129C                           03762700
&ZXCOUNT      SETC  ''          RESET IN/OUTPUT                         03762800
&ZMS          SETC  ' '         *KRQDA*                                 03762900
&ZMS          SETC  '&ZMS "COUNT" KEY AND ITS ARGUMENT'                 03763000
              MNOTE 8,' &ZMS ARE REQUIRED.'                             03763100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             03763200
.ZG129C       ANOP  ,                                                   03763300
.*-------------------------------------------------------------------   03763400
.***AG.KCK02 NAME, RQD OUTPUT, KEYS -GPR OUT OF RANGE                   03763500
              AIF   (K'&ZXCOUNT LE 0).ZG129R    NOT I/O                 03763600
              AIF   ('&XCOUNT'(1,1) NE '(').ZG129R                      03763700
&ZCGPR        SETC  '&XCOUNT'(2,K'&XCOUNT-2)                            03763800
              AIF   ('&ZCGPR'(1,1) NE '0').ZG129P                       03763900
              AIF   (K'&ZCGPR GT 2).ZG129Q                              03764000
              AIF   ('&ZCGPR' EQ '0').ZG129Q                            03764100
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       03764200
              AIF   (T'&ZCGPR NE 'N').ZG129Q    INVALID REG NAME        03764300
.ZG129P       ANOP  ,                                                   03764400
              AIF   (T'&ZCGPR NE 'N').ZG129R    NON NUMERIC             03764500
              AIF   ('&ZCGPR' LT '2').ZG129Q                            03764600
              AIF   ('&ZCGPR' LE '12').ZG129R                           03764700
.ZG129Q       ANOP  ,                                                   03764800
&ZMS          SETC  '"COUNT='   *KGPRA* MNOTE                           03767600
&ZMS          SETC  '&ZMS.&COUNT"'                                      03767700
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           03767800
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    03767900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             03768000
.ZG129R       ANOP  ,                                                   03770100
.*-------------------------------------------------------------------   03772200
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           03772300
.ZG131        ANOP  ,                                                   03772700
&ZTLC         SETC 'GETE'                                               03773200
              AIF   ('&FUNC(1)' NE '&ZTLC').ZG157                       03773500
&XFUNC        SETC  'GETE'      SET KEYWORD                             03773800
              AIF   (N'&FUNC LE 1).ZG131A       CK NUM                  03774100
&ZMS          SETC  '"FUNC='    *KPOSA* MNOTE                           03774400
&ZMS          SETC  '&ZMS.&FUNC"'                                       03775200
&ZMS          SETC  '&ZMS "FUNC"'                                       03776000
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 03776800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             03777600
.ZG131A       ANOP  ,                                                   03778400
.*------------------------------------------------------------------    03779200
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           03780000
&ZCVAL        SETC ''           CLEAR ERROR KEY ACCUMULATOR             03780800
.ZG131A0      AIF   (K'&ANAME LE 0).ZG131A1     OK                      03781600
&ZCVAL        SETC '&ZCVAL ANAME'               INCORRECT KEY USED      03782400
.ZG131A1      AIF   (K'&ENAME LE 0).ZG131A2     OK                      03783200
&ZCVAL        SETC '&ZCVAL ENAME'               INCORRECT KEY USED      03784000
.ZG131A2      AIF   (K'&AMODE LE 0).ZG131A3     OK                      03784800
&ZCVAL        SETC '&ZCVAL AMODE'               INCORRECT KEY USED      03785600
.ZG131A3      AIF   (K'&ATYPE LE 0).ZG131A4     OK                      03789700
&ZCVAL        SETC '&ZCVAL ATYPE'               INCORRECT KEY USED      03793800
.ZG131A4      AIF   (K'&OLDNAME LE 0).ZG131A5   OK                      03794800
&ZCVAL        SETC '&ZCVAL OLDNAME'             INCORRECT KEY USED      03795800
.ZG131A5      AIF   (K'&NEWNAME LE 0).ZG131A6   OK                      03796800
&ZCVAL        SETC '&ZCVAL NEWNAME'             INCORRECT KEY USED      03797800
.ZG131A6      AIF   (K'&MODE LE 0).ZG131A7      OK                      03798800
&ZCVAL        SETC '&ZCVAL MODE'                INCORRECT KEY USED      03799800
.ZG131A7      AIF   (K'&CALLIB LE 0).ZG131A8    OK                      03800800
&ZCVAL        SETC '&ZCVAL CALLIB'              INCORRECT KEY USED      03801800
.ZG131A8      AIF   (K'&PATHNAME LE 0).ZG131A9  OK                      03801900
&ZCVAL        SETC '&ZCVAL PATHNAME'            INCORRECT KEY USED      03802000
.ZG131A9      AIF   (K'&DIALOG LE 0).ZG131A10   OK                      03802100
&ZCVAL        SETC '&ZCVAL DIALOG'              INCORRECT KEY USED      03802200
.ZG131A10     AIF   (K'&INTENT LE 0).ZG131A11   OK                      03802300
&ZCVAL        SETC '&ZCVAL INTENT'              INCORRECT KEY USED      03802400
.ZG131A11     AIF   (K'&PROTECT LE 0).ZG131A12  OK                      03802500
&ZCVAL        SETC '&ZCVAL PROTECT'             INCORRECT KEY USED      03802600
.ZG131A12     AIF   (K'&RENAMEL LE 0).ZG131A13  OK                      03802900
&ZCVAL        SETC '&ZCVAL RENAMEL'             INCORRECT KEY USED      03803200
.ZG131A13     AIF   (K'&TCOUNT LE 0).ZG131A14   OK                      03803600
&ZCVAL        SETC '&ZCVAL TCOUNT'              INCORRECT KEY USED      03804000
.ZG131A14     AIF   (K'&NTYPE LE 0).ZG131A15    OK                      03804400
&ZCVAL        SETC '&ZCVAL NTYPE'               INCORRECT KEY USED      03804800
.ZG131A15     AIF   (K'&ITYPE LE 0).ZG131A16    OK                      03805200
&ZCVAL        SETC '&ZCVAL ITYPE'               INCORRECT KEY USED      03805600
.ZG131A16     AIF   (K'&DLLNAME LE 0).ZG131A17  OK                      03806000
&ZCVAL        SETC '&ZCVAL DLLNAME'             INCORRECT KEY USED      03806400
.ZG131A17     AIF   (K'&INAME LE 0).ZG131A18    OK                      03806800
&ZCVAL        SETC '&ZCVAL INAME'               INCORRECT KEY USED      03807200
.ZG131A18     AIF   (K'&INTYPE LE 0).ZG131A19   OK                      03807600
&ZCVAL        SETC '&ZCVAL INTYPE'              INCORRECT KEY USED      03808000
.ZG131A19     AIF   (K'&DDNAME LE 0).ZG131A20   OK                      03808800
&ZCVAL        SETC '&ZCVAL DDNAME'              INCORRECT KEY USED      03809600
.ZG131A20     AIF   (K'&DEPTR LE 0).ZG131A21    OK                      03812000
&ZCVAL        SETC '&ZCVAL DEPTR'               INCORRECT KEY USED      03814400
.ZG131A21     AIF   (K'&MEMBER LE 0).ZG131A22   OK                      03814500
&ZCVAL        SETC '&ZCVAL MEMBER'              INCORRECT KEY USED      03814600
.ZG131A22     AIF   (K'&DCBPTR LE 0).ZG131A23   OK                      03814700
&ZCVAL        SETC '&ZCVAL DCBPTR'              INCORRECT KEY USED      03814800
.ZG131A23     AIF   (K'&EPTOKEN LE 0).ZG131A24  OK                      03815400
&ZCVAL        SETC '&ZCVAL EPTOKEN'             INCORRECT KEY USED      03816000
.ZG131A24     AIF   (K'&ATTRIB LE 0).ZG131A25   OK                      03816800
&ZCVAL        SETC '&ZCVAL ATTRIB'              INCORRECT KEY USED      03817600
.ZG131A25     AIF   (K'&ALIASES LE 0).ZG131A26  OK                      03818400
&ZCVAL        SETC '&ZCVAL ALIASES'             INCORRECT KEY USED      03819200
.ZG131A26     AIF   (K'&EPLOC LE 0).ZG131A27    OK                      03820000
&ZCVAL        SETC '&ZCVAL EPLOC'               INCORRECT KEY USED      03820800
.ZG131A27     AIF   (K'&IDENTIFY LE 0).ZG131A28  OK                     03821600
&ZCVAL        SETC '&ZCVAL IDENTIFY'            INCORRECT KEY USED      03822400
.ZG131A28     AIF   (K'&EXTLST LE 0).ZG131A29   OK                      03823200
&ZCVAL        SETC '&ZCVAL EXTLST'              INCORRECT KEY USED      03824000
.ZG131A29     AIF   (K'&LNAME LE 0).ZG131A30    OK                      03824800
&ZCVAL        SETC '&ZCVAL LNAME'               INCORRECT KEY USED      03825600
.ZG131A30     AIF   (K'&NEWSECT LE 0).ZG131A31  OK                      03826400
&ZCVAL        SETC '&ZCVAL NEWSECT'             INCORRECT KEY USED      03827200
.ZG131A31     AIF   (K'&ENDDATA LE 0).ZG131A32  OK                      03828000
&ZCVAL        SETC '&ZCVAL ENDDATA'             INCORRECT KEY USED      03828800
.ZG131A32     AIF   (K'&MODLIB LE 0).ZG131A33   OK                      03829600
&ZCVAL        SETC '&ZCVAL MODLIB'              INCORRECT KEY USED      03830400
.ZG131A33     AIF   (K'&SNAME LE 0).ZG131A34    OK                      03831200
&ZCVAL        SETC '&ZCVAL SNAME'               INCORRECT KEY USED      03832000
.ZG131A34     AIF   (K'&REPLACE LE 0).ZG131A35  OK                      03832800
&ZCVAL        SETC '&ZCVAL REPLACE'             INCORRECT KEY USED      03833600
.ZG131A35     AIF   (K'&LIBOPT LE 0).ZG131A36   OK                      03834400
&ZCVAL        SETC '&ZCVAL LIBOPT'              INCORRECT KEY USED      03835200
.ZG131A36     AIF   (K'&OPTION LE 0).ZG131A37   OK                      03836000
&ZCVAL        SETC '&ZCVAL OPTION'              INCORRECT KEY USED      03836800
.ZG131A37     AIF   (K'&OPTVAL LE 0).ZG131A38   OK                      03837600
&ZCVAL        SETC '&ZCVAL OPTVAL'              INCORRECT KEY USED      03838400
.ZG131A38     AIF   (K'&PARMS LE 0).ZG131A39    OK                      03838800
&ZCVAL        SETC '&ZCVAL PARMS'               INCORRECT KEY USED      03839200
.ZG131A39     AIF   (K'&FILES LE 0).ZG131A40    OK                      03839600
&ZCVAL        SETC '&ZCVAL FILES'               INCORRECT KEY USED      03840000
.ZG131A40     AIF   (K'&EXITS LE 0).ZG131A41    OK                      03840800
&ZCVAL        SETC '&ZCVAL EXITS'               INCORRECT KEY USED      03841600
.ZG131A41     AIF   (K'&OPTIONS LE 0).ZG131A42  OK                      03842400
&ZCVAL        SETC '&ZCVAL OPTIONS'             INCORRECT KEY USED      03843200
.ZG131A42     AIF   (K'&ORIGIN LE 0).ZG131A43   OK                      03844000
&ZCVAL        SETC '&ZCVAL ORIGIN'              INCORRECT KEY USED      03844800
.ZG131A43     AIF   (K'&REGION LE 0).ZG131A44   OK                      03845600
&ZCVAL        SETC '&ZCVAL REGION'              INCORRECT KEY USED      03846400
.ZG131A44     AIF   (K'&ZCVAL LE 0).ZG131A45    OK                      03847200
&ZCVAL        SETC '&ZCVAL'(2,K'&ZCVAL-1)                               03848000
              AIF  (K'&ZCVAL LE 160).ZG131A45A                          03848100
&ZCVAL        SETC '&ZCVAL'(1,160)                                      03848200
&ZCVAL        SETC '&ZCVAL....'                                         03848300
.ZG131A45A    ANOP                                                      03848500
&ZMS          SETC  '"FUNC'     *KMEIA* MNOTE                           03848800
&ZMS          SETC  '&ZMS.=&FUNC"'                                      03849600
&ZMS          SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'                03850400
              MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'                03851200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             03852000
.ZG131A45     ANOP  ,                                                   03852800
.*----------------------------------------------------------------***   03853600
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     03854400
              AIF   (N'&WORKMOD LE 1).ZG133A    CK NUM                  03855200
&ZMS          SETC  '"WORKMOD='                 *KPOSA* MNOTE           03856000
&ZMS          SETC  '&ZMS.&WORKMOD"'                                    03856800
&ZMS          SETC  '&ZMS "WORKMOD"'                                    03857600
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 03858400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             03859200
.ZG133A       ANOP  ,                                                   03860000
.*-------------------------------------------------------------------   03860800
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         03861600
&ZXWORKMOD    SETC  'INPUT'     SET IN/OUTPUT                           03862400
&XWORKMOD     SETC  '&WORKMOD(1)'               SET XVARIABLE           03863200
              AIF   (N'&WORKMOD GT 1).ZG133B    MULTI PARMS             03864000
&XWORKMOD     SETC  '&WORKMOD'  SET XVARIABLE                           03864800
.ZG133B       AIF   (K'&WORKMOD(1) GT 0).ZG133C                         03865600
&ZXWORKMOD    SETC  ''          RESET IN/OUTPUT                         03866400
&ZMS          SETC  ' '         *KRQDA*                                 03867200
&ZMS          SETC  '&ZMS "WORKMOD" KEY AND ITS ARGUMENT'               03868000
              MNOTE 8,' &ZMS ARE REQUIRED.'                             03868800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             03869600
.ZG133C       ANOP  ,                                                   03902800
.*-------------------------------------------------------------------   03936000
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    03936800
              AIF   (K'&ZXWORKMOD LE 0).ZG133R  NOT I/O                 03937600
              AIF   ('&XWORKMOD'(1,1) NE '(').ZG133R                    03938400
&ZCGPR        SETC  '&XWORKMOD'(2,K'&XWORKMOD-2)                        03939200
              AIF   ('&ZCGPR'(1,1) NE '0').ZG133P                       03959200
              AIF   (K'&ZCGPR GT 2).ZG133Q                              03959300
              AIF   ('&ZCGPR' EQ '0').ZG133Q                            03959400
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       03959500
              AIF   (T'&ZCGPR NE 'N').ZG133Q    INVALID REG NAME        03959600
.ZG133P       ANOP  ,                                                   03959700
              AIF   (T'&ZCGPR NE 'N').ZG133R    NON NUMERIC             03959800
              AIF   ('&ZCGPR' LT '2').ZG133Q                            03959900
              AIF   ('&ZCGPR' LE '12').ZG133R                           03960000
.ZG133Q       ANOP  ,                                                   03960100
&ZMS          SETC  '"WORKMOD='                 *KGPRA* MNOTE           03960200
&ZMS          SETC  '&ZMS.&WORKMOD"'                                    03960300
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           03960400
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    03960500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             03960600
.ZG133R       ANOP  ,                                                   03960700
.*----------------------------------------------------------------***   03960800
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     03961000
              AIF   (N'&SECTION LE 1).ZG136A    CK NUM                  03961200
&ZMS          SETC  '"SECTION='                 *KPOSA* MNOTE           03961400
&ZMS          SETC  '&ZMS.&SECTION"'                                    03961600
&ZMS          SETC  '&ZMS "SECTION"'                                    03961800
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 03962200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             03962300
.ZG136A       ANOP  ,                                                   03964800
.*-------------------------------------------------------------------   03967300
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         03967500
&ZXSECTION    SETC  'INPUT'     SET IN/OUTPUT                           03967700
&XSECTION     SETC  '0'                                                 03967900
              AIF   (K'&SECTION(1) LE 0).ZG136B  PARM                   03968100
&XSECTION     SETC  '&SECTION(1)'               SET XVARIABLE           03968300
              AIF   (N'&SECTION GT 1).ZG136B    MULTI PARMS             03968500
&XSECTION     SETC  '&SECTION'  SET XVARIABLE                           03968700
.ZG136B       ANOP  ,                                                   03968900
.*-------------------------------------------------------------------   03969400
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    03969500
              AIF   (K'&ZXSECTION LE 0).ZG136R  NOT I/O                 03969600
              AIF   ('&XSECTION' EQ '0').ZG136R                         03969700
              AIF   ('&XSECTION'(1,1) NE '(').ZG136R                    03969800
&ZCGPR        SETC  '&XSECTION'(2,K'&XSECTION-2)                        03969900
              AIF   ('&ZCGPR'(1,1) NE '0').ZG136P                       03970200
              AIF   (K'&ZCGPR GT 2).ZG136Q                              03970300
              AIF   ('&ZCGPR' EQ '0').ZG136Q                            03970400
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       03970500
              AIF   (T'&ZCGPR NE 'N').ZG136Q    INVALID REG NAME        03970600
.ZG136P       ANOP  ,                                                   03970700
              AIF   (T'&ZCGPR NE 'N').ZG136R    NON NUMERIC             03970800
              AIF   ('&ZCGPR' LT '2').ZG136Q                            03970900
              AIF   ('&ZCGPR' LE '12').ZG136R                           03971000
.ZG136Q       ANOP  ,                                                   03971100
&ZMS          SETC  '"SECTION='                 *KGPRA* MNOTE           03971200
&ZMS          SETC  '&ZMS.&SECTION"'                                    03971300
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           03971400
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    03971500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             03971600
.ZG136R       ANOP  ,                                                   03971700
.*----------------------------------------------------------------***   03971800
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     03971900
              AIF   (N'&RECTYPE LE 1).ZG139A    CK NUM                  03972000
&ZMS          SETC  '"RECTYPE='                 *KPOSA* MNOTE           03972100
&ZMS          SETC  '&ZMS.&RECTYPE"'                                    03972200
&ZMS          SETC  '&ZMS "RECTYPE"'                                    03972300
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 03972400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             03972500
.ZG139A       ANOP  ,                                                   03972600
.*-------------------------------------------------------------------   03972700
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         03972800
&ZXRECTYPE    SETC  'INPUT'     SET IN/OUTPUT                           03972900
&XRECTYPE     SETC  '0'                                                 03973000
              AIF   (K'&RECTYPE(1) LE 0).ZG139B  PARM                   03973100
&XRECTYPE     SETC  '&RECTYPE(1)'               SET XVARIABLE           03973200
              AIF   (N'&RECTYPE GT 1).ZG139B    MULTI PARMS             03973300
&XRECTYPE     SETC  '&RECTYPE'  SET XVARIABLE                           03973400
.ZG139B       ANOP  ,                                                   03973500
.*-------------------------------------------------------------------   03973600
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    03973700
              AIF   (K'&ZXRECTYPE LE 0).ZG139R  NOT I/O                 03973800
              AIF   ('&XRECTYPE' EQ '0').ZG139R                         03973900
              AIF   ('&XRECTYPE'(1,1) NE '(').ZG139R                    03974000
&ZCGPR        SETC  '&XRECTYPE'(2,K'&XRECTYPE-2)                        03974100
              AIF   ('&ZCGPR'(1,1) NE '0').ZG139P                       03974200
              AIF   (K'&ZCGPR GT 2).ZG139Q                              03974300
              AIF   ('&ZCGPR' EQ '0').ZG139Q                            03974400
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       03974500
              AIF   (T'&ZCGPR NE 'N').ZG139Q    INVALID REG NAME        03974600
.ZG139P       ANOP  ,                                                   03974700
              AIF   (T'&ZCGPR NE 'N').ZG139R    NON NUMERIC             03974800
              AIF   ('&ZCGPR' LT '2').ZG139Q                            03974900
              AIF   ('&ZCGPR' LE '12').ZG139R                           03975000
.ZG139Q       ANOP  ,                                                   03975100
&ZMS          SETC  '"RECTYPE='                 *KGPRA* MNOTE           03975200
&ZMS          SETC  '&ZMS.&RECTYPE"'                                    03975300
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           03975400
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    03975500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             03975600
.ZG139R       ANOP  ,                                                   03975700
.*----------------------------------------------------------------***   03975800
.***AG.KMEKY01 NAME, OPT INPUT, ME KEYS -XVARIABLE                      03975900
&XOFFSYM      SETC  ''          INITIALIZE XVARIABLE                    03976000
              AIF   (K'&OFFSET LE 0).ZG142C                             03976100
&ZXOFFSYM     SETC  'INPUT'     SET IN/OUTPUT                           03976200
&XOFFSYM      SETC  'OFFSET'    SET XVARIABLE                           03976300
&ZXOFFSET     SETC  'INPUT'     SET IN/OUTPUT                           03976400
&XOFFSET      SETC  '&OFFSET(1)'                SET XVARIABLE PARM      03976500
              AIF   (N'&OFFSET GT 1).ZG142A     MULTIPLE PARMS          03976600
&XOFFSET      SETC  '&OFFSET'   SET XVARIABLE PARM                      03976700
.ZG142A       AIF   (N'&OFFSET LE 1).ZG142B     CK NUM                  03976800
&ZMS          SETC  '"OFFSET='  *KPOSA* MNOTE                           03976900
&ZMS          SETC  '&ZMS.&OFFSET"'                                     03977000
&ZMS          SETC  '&ZMS "OFFSET"'                                     03977100
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 03977200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             03977300
.ZG142B       AIF   (K'&XOFFSET GT 0).ZG142C    ONE PARM                03977400
&ZXOFFSYM     SETC  ''          RESET IN/OUTPUT                         03977500
&ZXOFFSET     SETC  ''          RESET IN/OUTPUT                         03977600
&ZMS          SETC  'WHEN "GETE" IS SPECIFIED'  *KRQDA*                 03977700
&ZMS          SETC  '&ZMS , "OFFSET" KEY AND ITS ARGUMENT'              03977800
              MNOTE 8,' &ZMS ARE REQUIRED.'                             03977900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             03978000
.ZG142C       ANOP  ,                                                   03978100
.*----------------------------------------------------------------***   03978200
.***AG.KMEKY02 NAME, OPT INPUT, ME KEYS -XVARIABLE                      03978300
              AIF   (K'&SYMBOL LE 0).ZG143D     NO ME KEY               03978400
              AIF   (N'&SYMBOL LE 1).ZG143A     CK NUM                  03978500
&ZMS          SETC  '"SYMBOL='  *KPOSA* MNOTE                           03978600
&ZMS          SETC  '&ZMS.&SYMBOL"'                                     03978700
&ZMS          SETC  '&ZMS "SYMBOL"'                                     03978800
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 03978900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             03979000
.ZG143A       AIF   (K'&XOFFSYM LE 0).ZG143B                            03979100
&ZMS          SETC  '"SYMBOL'   *KMEKA* MNOTE                           03979200
&ZMS          SETC  '&ZMS.=&SYMBOL"'                                    03979300
&ZMS          SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'               03979400
&ZMS          SETC  '&ZMS "&XOFFSYM"'                                   03979500
              MNOTE 8,' &ZMS KEY.'                                      03979600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             03979700
              AGO   .ZG143D                                             03979800
.*                                                                      03979900
.ZG143B       ANOP  ,                                                   03980000
&ZXOFFSYM     SETC  'INPUT'     SET IN/OUTPUT                           03980100
&XOFFSYM      SETC  'SYMBOL'    SET XVARIABLE                           03980200
&ZXSYMBOL     SETC  'INPUT'     SET IN/OUTPUT                           03980300
&XSYMBOL      SETC  '&SYMBOL(1)'                SET XVARIABLE PARM      03980400
              AIF   (N'&SYMBOL GT 1).ZG143C     MULTIPLE PARMS          03980500
&XSYMBOL      SETC  '&SYMBOL'   SET XVARIABLE PARM                      03980600
.ZG143C       AIF   (K'&XSYMBOL GT 0).ZG143D    ONE PARM                03980700
&ZXOFFSYM     SETC  ''          RESET IN/OUTPUT                         03980800
&ZXSYMBOL     SETC  ''          RESET IN/OUTPUT                         03980900
&ZMS          SETC  'WHEN "GETE" IS SPECIFIED'  *KRQDA*                 03981000
&ZMS          SETC  '&ZMS , "SYMBOL" KEY AND ITS ARGUMENT'              03981100
              MNOTE 8,' &ZMS ARE REQUIRED.'                             03981200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             03981300
.ZG143D       ANOP  ,                                                   03981400
.*------------------------------------------------------------------    03981500
.***AG.KMEKY07 NAME, OPT INPUT, ME KEYS -CHECK IF KEY ENTERED           03981600
              AIF   (K'&XOFFSYM GT 0).ZG144B                            03981700
&ZXOFFSYM     SETC  'INPUT'     SET IN/OUTPUT                           03981800
&XOFFSYM      SETC  'OFFSET'    SET DEFAULT                             03981900
&ZXOFFSET     SETC  'INPUT'     SET IN/OUTPUT                           03982000
&XOFFSET      SETC  '-1'        SET DEFAULT PARM                        03982100
.ZG144B       ANOP  ,                                                   03982200
.*-------------------------------------------------------------------   03982300
.***AG.KCK02 NAME, OPT INPUT, ME KEYS -GPR OUT OF RANGE                 03982400
              AIF   (K'&ZXSYMBOL LE 0).ZG144R   NOT I/O                 03982500
              AIF   ('&XSYMBOL'(1,1) NE '(').ZG144R                     03982600
&ZCGPR        SETC  '&XSYMBOL'(2,K'&XSYMBOL-2)                          03982700
              AIF   ('&ZCGPR'(1,1) NE '0').ZG144P                       03982800
              AIF   (K'&ZCGPR GT 2).ZG144Q                              03982900
              AIF   ('&ZCGPR' EQ '0').ZG144Q                            03983000
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       03983100
              AIF   (T'&ZCGPR NE 'N').ZG144Q    INVALID REG NAME        03983200
.ZG144P       ANOP  ,                                                   03983300
              AIF   (T'&ZCGPR NE 'N').ZG144R    NON NUMERIC             03983400
              AIF   ('&ZCGPR' LT '2').ZG144Q                            03983500
              AIF   ('&ZCGPR' LE '12').ZG144R                           03983600
.ZG144Q       ANOP  ,                                                   03983700
&ZMS          SETC  '"SYMBOL='  *KGPRA* MNOTE                           03983800
&ZMS          SETC  '&ZMS.&SYMBOL"'                                     03983900
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           03984000
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    03984100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             03984200
.ZG144R       ANOP  ,                                                   03984300
.*-------------------------------------------------------------------   03984400
.***AG.KMEKY13 NAME, OPT INPUT, ME KEYS -PROCESS DEPENDENCIES           03984500
.ZG142        AIF   ('&XOFFSYM' NE 'OFFSET').ZG143                      03984600
.*-------------------------------------------------------------------   03984700
.***AG.KCK02 NAME, OPT INPUT, ME KEYS -GPR OUT OF RANGE                 03984800
              AIF   (K'&ZXOFFSET LE 0).ZG142R   NOT I/O                 03984900
              AIF   ('&XOFFSET'(1,1) NE '(').ZG142R                     03985000
&ZCGPR        SETC  '&XOFFSET'(2,K'&XOFFSET-2)                          03985100
              AIF   ('&ZCGPR'(1,1) NE '0').ZG142P                       03985200
              AIF   (K'&ZCGPR GT 2).ZG142Q                              03985300
              AIF   ('&ZCGPR' EQ '0').ZG142Q                            03985400
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       03985500
              AIF   (T'&ZCGPR NE 'N').ZG142Q    INVALID REG NAME        03985600
.ZG142P       ANOP  ,                                                   03985700
              AIF   (T'&ZCGPR NE 'N').ZG142R    NON NUMERIC             03985800
              AIF   ('&ZCGPR' LT '2').ZG142Q                            03985900
              AIF   ('&ZCGPR' LE '12').ZG142R                           03986000
.ZG142Q       ANOP  ,                                                   03986100
&ZMS          SETC  '"OFFSET='  *KGPRA* MNOTE                           03986200
&ZMS          SETC  '&ZMS.&OFFSET"'                                     03986300
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           03986400
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    03986500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             03986600
.ZG142R       ANOP  ,                                                   03986700
.*-------------------------------------------------------------------   03994400
.***AG.KMEKY13 NAME, OPT INPUT, ME KEYS -PROCESS DEPENDENCIES           03997800
.ZG143        AIF   ('&XOFFSYM' NE 'SYMBOL').ZG144                      04001200
.*-------------------------------------------------------------------   04004800
.***AG.KCK02 NAME, OPT INPUT, ME KEYS -GPR OUT OF RANGE                 04005400
              AIF   (K'&ZXSYMBOL LE 0).ZG143R   NOT I/O                 04006000
              AIF   ('&XSYMBOL' EQ '0').ZG143R                          04006600
              AIF   ('&XSYMBOL'(1,1) NE '(').ZG143R                     04007200
&ZCGPR        SETC  '&XSYMBOL'(2,K'&XSYMBOL-2)                          04007800
              AIF   ('&ZCGPR'(1,1) NE '0').ZG143P                       04008800
              AIF   (K'&ZCGPR GT 2).ZG143Q                              04009600
              AIF   ('&ZCGPR' EQ '0').ZG143Q                            04010400
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       04011200
              AIF   (T'&ZCGPR NE 'N').ZG143Q    INVALID REG NAME        04012000
.ZG143P       ANOP  ,                                                   04012800
              AIF   (T'&ZCGPR NE 'N').ZG143R    NON NUMERIC             04013600
              AIF   ('&ZCGPR' LT '2').ZG143Q                            04014400
              AIF   ('&ZCGPR' LE '12').ZG143R                           04015200
.ZG143Q       ANOP  ,                                                   04016000
&ZMS          SETC  '"SYMBOL='  *KGPRA* MNOTE                           04016800
&ZMS          SETC  '&ZMS.&SYMBOL"'                                     04017600
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           04018400
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    04019200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04020000
.ZG143R       ANOP  ,                                                   04020400
.*-------------------------------------------------------------------   04020500
.***AG.KMEKY15 NAME, OPT INPUT, ME KEYS -END                            04020600
.ZG144        ANOP  ,           END MUTUALLY EXCLUSIVE KEYS             04020700
.*----------------------------------------------------------------***   04020900
.***AG.KXVAR05 NAME, RQD OUTPUT, KEYS -XVARIABLE KEY                    04021000
              AIF   (N'&AREA LE 1).ZG146A       CK NUM                  04021100
&ZMS          SETC  '"AREA='    *KPOSA* MNOTE                           04021200
&ZMS          SETC  '&ZMS.&AREA"'                                       04021300
&ZMS          SETC  '&ZMS "AREA"'                                       04021400
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 04021500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04021600
.ZG146A       ANOP  ,                                                   04021700
.*-------------------------------------------------------------------   04021800
.***AG.KXVAR06 NAME, RQD OUTPUT, KEYS -XVARIABLE                        04021900
&ZXAREA       SETC  'OUTPUT'    SET IN/OUTPUT                           04022000
&XAREA        SETC  '&AREA(1)'  SET XVARIABLE                           04022100
              AIF   (N'&AREA GT 1).ZG146B       MULTI PARMS             04022200
&XAREA        SETC  '&AREA'     SET XVARIABLE                           04022300
.ZG146B       AIF   (K'&AREA(1) GT 0).ZG146C                            04022400
&ZXAREA       SETC  ''          RESET IN/OUTPUT                         04022500
&ZMS          SETC  ' '         *KRQDA*                                 04022600
&ZMS          SETC  '&ZMS "AREA" KEY AND ITS ARGUMENT'                  04022700
              MNOTE 8,' &ZMS ARE REQUIRED.'                             04022800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04022900
.ZG146C       ANOP  ,                                                   04023000
.*-------------------------------------------------------------------   04023100
.***AG.KCK02 NAME, RQD OUTPUT, KEYS -GPR OUT OF RANGE                   04023200
              AIF   (K'&ZXAREA LE 0).ZG146R     NOT I/O                 04023300
              AIF   ('&XAREA'(1,1) NE '(').ZG146R                       04023400
&ZCGPR        SETC  '&XAREA'(2,K'&XAREA-2)                              04023500
              AIF   ('&ZCGPR'(1,1) NE '0').ZG146P                       04023600
              AIF   (K'&ZCGPR GT 2).ZG146Q                              04023700
              AIF   ('&ZCGPR' EQ '0').ZG146Q                            04023800
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       04023900
              AIF   (T'&ZCGPR NE 'N').ZG146Q    INVALID REG NAME        04024000
.ZG146P       ANOP  ,                                                   04024100
              AIF   (T'&ZCGPR NE 'N').ZG146R    NON NUMERIC             04024200
              AIF   ('&ZCGPR' LT '2').ZG146Q                            04024300
              AIF   ('&ZCGPR' LE '12').ZG146R                           04024400
.ZG146Q       ANOP  ,                                                   04024500
&ZMS          SETC  '"AREA='    *KGPRA* MNOTE                           04024600
&ZMS          SETC  '&ZMS.&AREA"'                                       04024700
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           04024800
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    04024900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04025000
.ZG146R       ANOP  ,                                                   04025100
.*----------------------------------------------------------------***   04025200
.***AG.KXVAR05 NAME, RQD INOUT, KEYS -XVARIABLE KEY                     04025300
              AIF   (N'&CURSOR LE 1).ZG149A     CK NUM                  04025400
&ZMS          SETC  '"CURSOR='  *KPOSA* MNOTE                           04025500
&ZMS          SETC  '&ZMS.&CURSOR"'                                     04025600
&ZMS          SETC  '&ZMS "CURSOR"'                                     04025700
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 04025800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04025900
.ZG149A       ANOP  ,                                                   04026000
.*-------------------------------------------------------------------   04026100
.***AG.KXVAR06 NAME, RQD INOUT, KEYS -XVARIABLE                         04026200
&ZXCURSOR     SETC  'INOUT'     SET IN/OUTPUT                           04026300
&XCURSOR      SETC  '&CURSOR(1)'                SET XVARIABLE           04026400
              AIF   (N'&CURSOR GT 1).ZG149B     MULTI PARMS             04026500
&XCURSOR      SETC  '&CURSOR'   SET XVARIABLE                           04026600
.ZG149B       AIF   (K'&CURSOR(1) GT 0).ZG149C                          04026700
&ZXCURSOR     SETC  ''          RESET IN/OUTPUT                         04026800
&ZMS          SETC  ' '         *KRQDA*                                 04026900
&ZMS          SETC  '&ZMS "CURSOR" KEY AND ITS ARGUMENT'                04027000
              MNOTE 8,' &ZMS ARE REQUIRED.'                             04027100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04027200
.ZG149C       ANOP  ,                                                   04027300
.*-------------------------------------------------------------------   04027400
.***AG.KCK02 NAME, RQD INOUT, KEYS -GPR OUT OF RANGE                    04027500
              AIF   (K'&ZXCURSOR LE 0).ZG149R   NOT I/O                 04027600
              AIF   ('&XCURSOR'(1,1) NE '(').ZG149R                     04027700
&ZCGPR        SETC  '&XCURSOR'(2,K'&XCURSOR-2)                          04027800
              AIF   ('&ZCGPR'(1,1) NE '0').ZG149P                       04027900
              AIF   (K'&ZCGPR GT 2).ZG149Q                              04028000
              AIF   ('&ZCGPR' EQ '0').ZG149Q                            04028100
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       04028200
              AIF   (T'&ZCGPR NE 'N').ZG149Q    INVALID REG NAME        04028300
.ZG149P       ANOP  ,                                                   04028400
              AIF   (T'&ZCGPR NE 'N').ZG149R    NON NUMERIC             04028500
              AIF   ('&ZCGPR' LT '2').ZG149Q                            04028600
              AIF   ('&ZCGPR' LE '12').ZG149R                           04028700
.ZG149Q       ANOP  ,                                                   04028800
&ZMS          SETC  '"CURSOR='  *KGPRA* MNOTE                           04028900
&ZMS          SETC  '&ZMS.&CURSOR"'                                     04029000
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           04029100
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    04029200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04029300
.ZG149R       ANOP  ,                                                   04029400
.*----------------------------------------------------------------***   04029500
.***AG.KXVAR05 NAME, RQD OUTPUT, KEYS -XVARIABLE KEY                    04029600
              AIF   (N'&COUNT LE 1).ZG152A      CK NUM                  04029700
&ZMS          SETC  '"COUNT='   *KPOSA* MNOTE                           04029800
&ZMS          SETC  '&ZMS.&COUNT"'                                      04029900
&ZMS          SETC  '&ZMS "COUNT"'                                      04030000
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 04030100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04030200
.ZG152A       ANOP  ,                                                   04030300
.*-------------------------------------------------------------------   04030400
.***AG.KXVAR06 NAME, RQD OUTPUT, KEYS -XVARIABLE                        04030500
&ZXCOUNT      SETC  'OUTPUT'    SET IN/OUTPUT                           04030600
&XCOUNT       SETC  '&COUNT(1)'                 SET XVARIABLE           04030700
              AIF   (N'&COUNT GT 1).ZG152B      MULTI PARMS             04030800
&XCOUNT       SETC  '&COUNT'    SET XVARIABLE                           04030900
.ZG152B       AIF   (K'&COUNT(1) GT 0).ZG152C                           04031000
&ZXCOUNT      SETC  ''          RESET IN/OUTPUT                         04031100
&ZMS          SETC  ' '         *KRQDA*                                 04031200
&ZMS          SETC  '&ZMS "COUNT" KEY AND ITS ARGUMENT'                 04031300
              MNOTE 8,' &ZMS ARE REQUIRED.'                             04031400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04031500
.ZG152C       ANOP  ,                                                   04031600
.*-------------------------------------------------------------------   04031700
.***AG.KCK02 NAME, RQD OUTPUT, KEYS -GPR OUT OF RANGE                   04031800
              AIF   (K'&ZXCOUNT LE 0).ZG152R    NOT I/O                 04031900
              AIF   ('&XCOUNT'(1,1) NE '(').ZG152R                      04032000
&ZCGPR        SETC  '&XCOUNT'(2,K'&XCOUNT-2)                            04032100
              AIF   ('&ZCGPR'(1,1) NE '0').ZG152P                       04032200
              AIF   (K'&ZCGPR GT 2).ZG152Q                              04032300
              AIF   ('&ZCGPR' EQ '0').ZG152Q                            04032400
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       04032500
              AIF   (T'&ZCGPR NE 'N').ZG152Q    INVALID REG NAME        04032600
.ZG152P       ANOP  ,                                                   04032700
              AIF   (T'&ZCGPR NE 'N').ZG152R    NON NUMERIC             04032800
              AIF   ('&ZCGPR' LT '2').ZG152Q                            04032900
              AIF   ('&ZCGPR' LE '12').ZG152R                           04033000
.ZG152Q       ANOP  ,                                                   04033100
&ZMS          SETC  '"COUNT='   *KGPRA* MNOTE                           04033200
&ZMS          SETC  '&ZMS.&COUNT"'                                      04033300
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           04033400
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    04033500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04033600
.ZG152R       ANOP  ,                                                   04033700
.*----------------------------------------------------------------***   04033800
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     04033900
              AIF   (N'&CLASS LE 1).ZG155A      CK NUM                  04034000
&ZMS          SETC  '"CLASS='   *KPOSA* MNOTE                           04034100
&ZMS          SETC  '&ZMS.&CLASS"'                                      04034200
&ZMS          SETC  '&ZMS "CLASS"'                                      04034300
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 04034400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04034500
.ZG155A       ANOP  ,                                                   04034600
.*-------------------------------------------------------------------   04034700
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         04034800
&ZXCLASS      SETC  'INPUT'     SET IN/OUTPUT                           04034900
&XCLASS       SETC  '0'                                                 04035000
              AIF   (K'&CLASS(1) LE 0).ZG155B   PARM                    04035100
&XCLASS       SETC  '&CLASS(1)'                 SET XVARIABLE           04035200
              AIF   (N'&CLASS GT 1).ZG155B      MULTI PARMS             04035300
&XCLASS       SETC  '&CLASS'    SET XVARIABLE                           04035400
.ZG155B       ANOP  ,                                                   04035500
.*-------------------------------------------------------------------   04035600
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    04035700
              AIF   (K'&ZXCLASS LE 0).ZG155R    NOT I/O                 04035800
              AIF   ('&XCLASS' EQ '0').ZG155R                           04035900
              AIF   ('&XCLASS'(1,1) NE '(').ZG155R                      04036000
&ZCGPR        SETC  '&XCLASS'(2,K'&XCLASS-2)                            04036100
              AIF   ('&ZCGPR'(1,1) NE '0').ZG155P                       04036200
              AIF   (K'&ZCGPR GT 2).ZG155Q                              04036300
              AIF   ('&ZCGPR' EQ '0').ZG155Q                            04036400
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       04036500
              AIF   (T'&ZCGPR NE 'N').ZG155Q    INVALID REG NAME        04036600
.ZG155P       ANOP  ,                                                   04036700
              AIF   (T'&ZCGPR NE 'N').ZG155R    NON NUMERIC             04036800
              AIF   ('&ZCGPR' LT '2').ZG155Q                            04036900
              AIF   ('&ZCGPR' LE '12').ZG155R                           04037000
.ZG155Q       ANOP  ,                                                   04037100
&ZMS          SETC  '"CLASS='   *KGPRA* MNOTE                           04037200
&ZMS          SETC  '&ZMS.&CLASS"'                                      04037300
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           04037400
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    04037500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04037600
.ZG155R       ANOP  ,                                                   04037700
.*-------------------------------------------------------------------   04037800
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           04037900
.ZG157        ANOP  ,                                                   04038000
&ZTLC         SETC 'GETN'                                               04038100
              AIF   ('&FUNC(1)' NE '&ZTLC').ZG178                       04038200
&XFUNC        SETC  'GETN'      SET KEYWORD                             04038300
              AIF   (N'&FUNC LE 1).ZG157A       CK NUM                  04038400
&ZMS          SETC  '"FUNC='    *KPOSA* MNOTE                           04038500
&ZMS          SETC  '&ZMS.&FUNC"'                                       04038600
&ZMS          SETC  '&ZMS "FUNC"'                                       04038700
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 04038800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04038900
.ZG157A       ANOP  ,                                                   04039000
.*------------------------------------------------------------------    04039100
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           04039200
&ZCVAL        SETC ''           CLEAR ERROR KEY ACCUMULATOR             04039300
.ZG157A0      AIF   (K'&ANAME LE 0).ZG157A1     OK                      04039400
&ZCVAL        SETC '&ZCVAL ANAME'               INCORRECT KEY USED      04039500
.ZG157A1      AIF   (K'&ENAME LE 0).ZG157A2     OK                      04039600
&ZCVAL        SETC '&ZCVAL ENAME'               INCORRECT KEY USED      04039700
.ZG157A2      AIF   (K'&AMODE LE 0).ZG157A3     OK                      04039800
&ZCVAL        SETC '&ZCVAL AMODE'               INCORRECT KEY USED      04039900
.ZG157A3      AIF   (K'&ATYPE LE 0).ZG157A4     OK                      04040000
&ZCVAL        SETC '&ZCVAL ATYPE'               INCORRECT KEY USED      04040100
.ZG157A4      AIF   (K'&SECTION LE 0).ZG157A5   OK                      04040200
&ZCVAL        SETC '&ZCVAL SECTION'             INCORRECT KEY USED      04040300
.ZG157A5      AIF   (K'&OLDNAME LE 0).ZG157A6   OK                      04040400
&ZCVAL        SETC '&ZCVAL OLDNAME'             INCORRECT KEY USED      04040500
.ZG157A6      AIF   (K'&NEWNAME LE 0).ZG157A7   OK                      04040600
&ZCVAL        SETC '&ZCVAL NEWNAME'             INCORRECT KEY USED      04040700
.ZG157A7      AIF   (K'&MODE LE 0).ZG157A8      OK                      04040800
&ZCVAL        SETC '&ZCVAL MODE'                INCORRECT KEY USED      04040900
.ZG157A8      AIF   (K'&CLASS LE 0).ZG157A9     OK                      04041000
&ZCVAL        SETC '&ZCVAL CLASS'               INCORRECT KEY USED      04041100
.ZG157A9      AIF   (K'&CALLIB LE 0).ZG157A10   OK                      04041200
&ZCVAL        SETC '&ZCVAL CALLIB'              INCORRECT KEY USED      04041300
.ZG157A10     AIF   (K'&PATHNAME LE 0).ZG157A11  OK                     04041400
&ZCVAL        SETC '&ZCVAL PATHNAME'            INCORRECT KEY USED      04041500
.ZG157A11     AIF   (K'&DIALOG LE 0).ZG157A12   OK                      04041600
&ZCVAL        SETC '&ZCVAL DIALOG'              INCORRECT KEY USED      04041700
.ZG157A12     AIF   (K'&INTENT LE 0).ZG157A13   OK                      04041800
&ZCVAL        SETC '&ZCVAL INTENT'              INCORRECT KEY USED      04041900
.ZG157A13     AIF   (K'&PROTECT LE 0).ZG157A14  OK                      04042000
&ZCVAL        SETC '&ZCVAL PROTECT'             INCORRECT KEY USED      04042100
.ZG157A14     AIF   (K'&RENAMEL LE 0).ZG157A15  OK                      04042200
&ZCVAL        SETC '&ZCVAL RENAMEL'             INCORRECT KEY USED      04042300
.ZG157A15     AIF   (K'&RECTYPE LE 0).ZG157A16  OK                      04042400
&ZCVAL        SETC '&ZCVAL RECTYPE'             INCORRECT KEY USED      04042500
.ZG157A16     AIF   (K'&OFFSET LE 0).ZG157A17   OK                      04042600
&ZCVAL        SETC '&ZCVAL OFFSET'              INCORRECT KEY USED      04042700
.ZG157A17     AIF   (K'&SYMBOL LE 0).ZG157A18   OK                      04042800
&ZCVAL        SETC '&ZCVAL SYMBOL'              INCORRECT KEY USED      04042900
.ZG157A18     AIF   (K'&ITYPE LE 0).ZG157A19    OK                      04043000
&ZCVAL        SETC '&ZCVAL ITYPE'               INCORRECT KEY USED      04043100
.ZG157A19     AIF   (K'&DLLNAME LE 0).ZG157A20  OK                      04043200
&ZCVAL        SETC '&ZCVAL DLLNAME'             INCORRECT KEY USED      04043300
.ZG157A20     AIF   (K'&INAME LE 0).ZG157A21    OK                      04043400
&ZCVAL        SETC '&ZCVAL INAME'               INCORRECT KEY USED      04043500
.ZG157A21     AIF   (K'&INTYPE LE 0).ZG157A22   OK                      04043600
&ZCVAL        SETC '&ZCVAL INTYPE'              INCORRECT KEY USED      04043700
.ZG157A22     AIF   (K'&DDNAME LE 0).ZG157A23   OK                      04043800
&ZCVAL        SETC '&ZCVAL DDNAME'              INCORRECT KEY USED      04043900
.ZG157A23     AIF   (K'&DEPTR LE 0).ZG157A24    OK                      04044000
&ZCVAL        SETC '&ZCVAL DEPTR'               INCORRECT KEY USED      04044100
.ZG157A24     AIF   (K'&MEMBER LE 0).ZG157A25   OK                      04044200
&ZCVAL        SETC '&ZCVAL MEMBER'              INCORRECT KEY USED      04044300
.ZG157A25     AIF   (K'&DCBPTR LE 0).ZG157A26   OK                      04044400
&ZCVAL        SETC '&ZCVAL DCBPTR'              INCORRECT KEY USED      04044500
.ZG157A26     AIF   (K'&EPTOKEN LE 0).ZG157A27  OK                      04044600
&ZCVAL        SETC '&ZCVAL EPTOKEN'             INCORRECT KEY USED      04044700
.ZG157A27     AIF   (K'&ATTRIB LE 0).ZG157A28   OK                      04044800
&ZCVAL        SETC '&ZCVAL ATTRIB'              INCORRECT KEY USED      04044900
.ZG157A28     AIF   (K'&ALIASES LE 0).ZG157A29  OK                      04045000
&ZCVAL        SETC '&ZCVAL ALIASES'             INCORRECT KEY USED      04045100
.ZG157A29     AIF   (K'&EPLOC LE 0).ZG157A30    OK                      04045200
&ZCVAL        SETC '&ZCVAL EPLOC'               INCORRECT KEY USED      04045300
.ZG157A30     AIF   (K'&IDENTIFY LE 0).ZG157A31  OK                     04045400
&ZCVAL        SETC '&ZCVAL IDENTIFY'            INCORRECT KEY USED      04045500
.ZG157A31     AIF   (K'&EXTLST LE 0).ZG157A32   OK                      04045600
&ZCVAL        SETC '&ZCVAL EXTLST'              INCORRECT KEY USED      04045700
.ZG157A32     AIF   (K'&LNAME LE 0).ZG157A33    OK                      04045800
&ZCVAL        SETC '&ZCVAL LNAME'               INCORRECT KEY USED      04045900
.ZG157A33     AIF   (K'&NEWSECT LE 0).ZG157A34  OK                      04046000
&ZCVAL        SETC '&ZCVAL NEWSECT'             INCORRECT KEY USED      04046100
.ZG157A34     AIF   (K'&ENDDATA LE 0).ZG157A35  OK                      04046200
&ZCVAL        SETC '&ZCVAL ENDDATA'             INCORRECT KEY USED      04046300
.ZG157A35     AIF   (K'&MODLIB LE 0).ZG157A36   OK                      04046400
&ZCVAL        SETC '&ZCVAL MODLIB'              INCORRECT KEY USED      04046500
.ZG157A36     AIF   (K'&SNAME LE 0).ZG157A37    OK                      04046600
&ZCVAL        SETC '&ZCVAL SNAME'               INCORRECT KEY USED      04046700
.ZG157A37     AIF   (K'&REPLACE LE 0).ZG157A38  OK                      04046800
&ZCVAL        SETC '&ZCVAL REPLACE'             INCORRECT KEY USED      04046900
.ZG157A38     AIF   (K'&LIBOPT LE 0).ZG157A39   OK                      04047000
&ZCVAL        SETC '&ZCVAL LIBOPT'              INCORRECT KEY USED      04047100
.ZG157A39     AIF   (K'&OPTION LE 0).ZG157A40   OK                      04047200
&ZCVAL        SETC '&ZCVAL OPTION'              INCORRECT KEY USED      04047300
.ZG157A40     AIF   (K'&OPTVAL LE 0).ZG157A41   OK                      04047400
&ZCVAL        SETC '&ZCVAL OPTVAL'              INCORRECT KEY USED      04047500
.ZG157A41     AIF   (K'&PARMS LE 0).ZG157A42    OK                      04047600
&ZCVAL        SETC '&ZCVAL PARMS'               INCORRECT KEY USED      04047700
.ZG157A42     AIF   (K'&FILES LE 0).ZG157A43    OK                      04047800
&ZCVAL        SETC '&ZCVAL FILES'               INCORRECT KEY USED      04047900
.ZG157A43     AIF   (K'&EXITS LE 0).ZG157A44    OK                      04048000
&ZCVAL        SETC '&ZCVAL EXITS'               INCORRECT KEY USED      04048100
.ZG157A44     AIF   (K'&OPTIONS LE 0).ZG157A45  OK                      04048200
&ZCVAL        SETC '&ZCVAL OPTIONS'             INCORRECT KEY USED      04048300
.ZG157A45     AIF   (K'&ORIGIN LE 0).ZG157A46   OK                      04048400
&ZCVAL        SETC '&ZCVAL ORIGIN'              INCORRECT KEY USED      04048500
.ZG157A46     AIF   (K'&REGION LE 0).ZG157A47   OK                      04048600
&ZCVAL        SETC '&ZCVAL REGION'              INCORRECT KEY USED      04048700
.ZG157A47     AIF   (K'&ZCVAL LE 0).ZG157A48    OK                      04048800
&ZCVAL        SETC '&ZCVAL'(2,K'&ZCVAL-1)                               04048900
              AIF  (K'&ZCVAL LE 160).ZG157A48A                          04049000
&ZCVAL        SETC '&ZCVAL'(1,160)                                      04049100
&ZCVAL        SETC '&ZCVAL....'                                         04049200
.ZG157A48A    ANOP                                                      04049300
&ZMS          SETC  '"FUNC'     *KMEIA* MNOTE                           04049400
&ZMS          SETC  '&ZMS.=&FUNC"'                                      04049500
&ZMS          SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'                04049600
              MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'                04049700
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04049800
.ZG157A48     ANOP  ,                                                   04049900
.*----------------------------------------------------------------***   04050000
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     04050100
              AIF   (N'&WORKMOD LE 1).ZG159A    CK NUM                  04050200
&ZMS          SETC  '"WORKMOD='                 *KPOSA* MNOTE           04050300
&ZMS          SETC  '&ZMS.&WORKMOD"'                                    04050400
&ZMS          SETC  '&ZMS "WORKMOD"'                                    04050500
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 04050600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04050700
.ZG159A       ANOP  ,                                                   04050800
.*-------------------------------------------------------------------   04050900
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         04051000
&ZXWORKMOD    SETC  'INPUT'     SET IN/OUTPUT                           04051100
&XWORKMOD     SETC  '&WORKMOD(1)'               SET XVARIABLE           04051200
              AIF   (N'&WORKMOD GT 1).ZG159B    MULTI PARMS             04051300
&XWORKMOD     SETC  '&WORKMOD'  SET XVARIABLE                           04051400
.ZG159B       AIF   (K'&WORKMOD(1) GT 0).ZG159C                         04051500
&ZXWORKMOD    SETC  ''          RESET IN/OUTPUT                         04051600
&ZMS          SETC  ' '         *KRQDA*                                 04051700
&ZMS          SETC  '&ZMS "WORKMOD" KEY AND ITS ARGUMENT'               04051800
              MNOTE 8,' &ZMS ARE REQUIRED.'                             04051900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04052000
.ZG159C       ANOP  ,                                                   04052100
.*-------------------------------------------------------------------   04052200
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    04052300
              AIF   (K'&ZXWORKMOD LE 0).ZG159R  NOT I/O                 04052400
              AIF   ('&XWORKMOD'(1,1) NE '(').ZG159R                    04052500
&ZCGPR        SETC  '&XWORKMOD'(2,K'&XWORKMOD-2)                        04052600
              AIF   ('&ZCGPR'(1,1) NE '0').ZG159P                       04052700
              AIF   (K'&ZCGPR GT 2).ZG159Q                              04052800
              AIF   ('&ZCGPR' EQ '0').ZG159Q                            04052900
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       04053000
              AIF   (T'&ZCGPR NE 'N').ZG159Q    INVALID REG NAME        04053100
.ZG159P       ANOP  ,                                                   04053200
              AIF   (T'&ZCGPR NE 'N').ZG159R    NON NUMERIC             04053300
              AIF   ('&ZCGPR' LT '2').ZG159Q                            04053400
              AIF   ('&ZCGPR' LE '12').ZG159R                           04053500
.ZG159Q       ANOP  ,                                                   04053600
&ZMS          SETC  '"WORKMOD='                 *KGPRA* MNOTE           04053700
&ZMS          SETC  '&ZMS.&WORKMOD"'                                    04053800
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           04053900
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    04054000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04054100
.ZG159R       ANOP  ,                                                   04054200
.*----------------------------------------------------------------***   04054300
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    04054400
              AIF   (N'&AREA LE 1).ZG162A       CK NUM                  04054500
&ZMS          SETC  '"AREA='    *KPOSA* MNOTE                           04054600
&ZMS          SETC  '&ZMS.&AREA"'                                       04054700
&ZMS          SETC  '&ZMS "AREA"'                                       04054800
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 04054900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04055000
.ZG162A       ANOP  ,                                                   04055100
.*-------------------------------------------------------------------   04055200
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        04055300
              AIF   (K'&AREA(1) LE 0).ZG162C    NO PARM                 04055400
&ZXAREA       SETC  'OUTPUT'    SET OUTPUT                              04055500
&XAREA        SETC  '&AREA(1)'  SET XVARIABLE                           04055600
              AIF   (N'&AREA GT 1).ZG162C                               04055700
&XAREA        SETC  '&AREA'     SET XVARIABLE                           04055800
.ZG162C       ANOP  ,                                                   04056000
.*-------------------------------------------------------------------   04056100
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   04056200
              AIF   (K'&ZXAREA LE 0).ZG162R     NOT I/O                 04056300
              AIF   ('&XAREA'(1,1) NE '(').ZG162R                       04056400
&ZCGPR        SETC  '&XAREA'(2,K'&XAREA-2)                              04056500
              AIF   ('&ZCGPR'(1,1) NE '0').ZG162P                       04056600
              AIF   (K'&ZCGPR GT 2).ZG162Q                              04056700
              AIF   ('&ZCGPR' EQ '0').ZG162Q                            04056800
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       04056900
              AIF   (T'&ZCGPR NE 'N').ZG162Q    INVALID REG NAME        04057000
.ZG162P       ANOP  ,                                                   04057100
              AIF   (T'&ZCGPR NE 'N').ZG162R    NON NUMERIC             04057200
              AIF   ('&ZCGPR' LT '2').ZG162Q                            04057300
              AIF   ('&ZCGPR' LE '12').ZG162R                           04057400
.ZG162Q       ANOP  ,                                                   04057500
&ZMS          SETC  '"AREA='    *KGPRA* MNOTE                           04057600
&ZMS          SETC  '&ZMS.&AREA"'                                       04057700
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           04057800
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    04057900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04058000
.ZG162R       ANOP  ,                                                   04058100
.*----------------------------------------------------------------***   04058200
.***AG.KXVAR05 NAME, RQD INOUT, KEYS -XVARIABLE KEY                     04058300
              AIF   (N'&CURSOR LE 1).ZG165A     CK NUM                  04058400
&ZMS          SETC  '"CURSOR='  *KPOSA* MNOTE                           04058500
&ZMS          SETC  '&ZMS.&CURSOR"'                                     04058600
&ZMS          SETC  '&ZMS "CURSOR"'                                     04058700
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 04058800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04058900
.ZG165A       ANOP  ,                                                   04059000
.*-------------------------------------------------------------------   04059100
.***AG.KXVAR06 NAME, RQD INOUT, KEYS -XVARIABLE                         04059200
&ZXCURSOR     SETC  'INOUT'     SET IN/OUTPUT                           04059300
&XCURSOR      SETC  '&CURSOR(1)'                SET XVARIABLE           04059400
              AIF   (N'&CURSOR GT 1).ZG165B     MULTI PARMS             04059500
&XCURSOR      SETC  '&CURSOR'   SET XVARIABLE                           04059600
.ZG165B       AIF   (K'&CURSOR(1) GT 0).ZG165C                          04059700
&ZXCURSOR     SETC  ''          RESET IN/OUTPUT                         04059800
&ZMS          SETC  ' '         *KRQDA*                                 04059900
&ZMS          SETC  '&ZMS "CURSOR" KEY AND ITS ARGUMENT'                04060000
              MNOTE 8,' &ZMS ARE REQUIRED.'                             04060100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04060200
.ZG165C       ANOP  ,                                                   04060300
.*-------------------------------------------------------------------   04060400
.***AG.KCK02 NAME, RQD INOUT, KEYS -GPR OUT OF RANGE                    04060500
              AIF   (K'&ZXCURSOR LE 0).ZG165R   NOT I/O                 04060600
              AIF   ('&XCURSOR'(1,1) NE '(').ZG165R                     04060700
&ZCGPR        SETC  '&XCURSOR'(2,K'&XCURSOR-2)                          04060800
              AIF   ('&ZCGPR'(1,1) NE '0').ZG165P                       04060900
              AIF   (K'&ZCGPR GT 2).ZG165Q                              04061000
              AIF   ('&ZCGPR' EQ '0').ZG165Q                            04061100
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       04061200
              AIF   (T'&ZCGPR NE 'N').ZG165Q    INVALID REG NAME        04061300
.ZG165P       ANOP  ,                                                   04061400
              AIF   (T'&ZCGPR NE 'N').ZG165R    NON NUMERIC             04061500
              AIF   ('&ZCGPR' LT '2').ZG165Q                            04061600
              AIF   ('&ZCGPR' LE '12').ZG165R                           04061700
.ZG165Q       ANOP  ,                                                   04061800
&ZMS          SETC  '"CURSOR='  *KGPRA* MNOTE                           04061900
&ZMS          SETC  '&ZMS.&CURSOR"'                                     04062000
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           04062100
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    04062200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04062300
.ZG165R       ANOP  ,                                                   04062400
.*----------------------------------------------------------------***   04062500
.***AG.KXVAR05 NAME, RQD OUTPUT, KEYS -XVARIABLE KEY                    04062600
              AIF   (N'&COUNT LE 1).ZG168A      CK NUM                  04062700
&ZMS          SETC  '"COUNT='   *KPOSA* MNOTE                           04062800
&ZMS          SETC  '&ZMS.&COUNT"'                                      04062900
&ZMS          SETC  '&ZMS "COUNT"'                                      04063000
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 04063100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04063200
.ZG168A       ANOP  ,                                                   04063300
.*-------------------------------------------------------------------   04063400
.***AG.KXVAR06 NAME, RQD OUTPUT, KEYS -XVARIABLE                        04063500
&ZXCOUNT      SETC  'OUTPUT'    SET IN/OUTPUT                           04063600
&XCOUNT       SETC  '&COUNT(1)'                 SET XVARIABLE           04063700
              AIF   (N'&COUNT GT 1).ZG168B      MULTI PARMS             04063800
&XCOUNT       SETC  '&COUNT'    SET XVARIABLE                           04063900
.ZG168B       AIF   (K'&COUNT(1) GT 0).ZG168C                           04064000
&ZXCOUNT      SETC  ''          RESET IN/OUTPUT                         04064100
&ZMS          SETC  ' '         *KRQDA*                                 04064200
&ZMS          SETC  '&ZMS "COUNT" KEY AND ITS ARGUMENT'                 04064300
              MNOTE 8,' &ZMS ARE REQUIRED.'                             04064400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04064500
.ZG168C       ANOP  ,                                                   04064600
.*-------------------------------------------------------------------   04064700
.***AG.KCK02 NAME, RQD OUTPUT, KEYS -GPR OUT OF RANGE                   04064800
              AIF   (K'&ZXCOUNT LE 0).ZG168R    NOT I/O                 04064900
              AIF   ('&XCOUNT'(1,1) NE '(').ZG168R                      04065000
&ZCGPR        SETC  '&XCOUNT'(2,K'&XCOUNT-2)                            04065100
              AIF   ('&ZCGPR'(1,1) NE '0').ZG168P                       04065200
              AIF   (K'&ZCGPR GT 2).ZG168Q                              04065300
              AIF   ('&ZCGPR' EQ '0').ZG168Q                            04065400
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       04065500
              AIF   (T'&ZCGPR NE 'N').ZG168Q    INVALID REG NAME        04065600
.ZG168P       ANOP  ,                                                   04065700
              AIF   (T'&ZCGPR NE 'N').ZG168R    NON NUMERIC             04065800
              AIF   ('&ZCGPR' LT '2').ZG168Q                            04065900
              AIF   ('&ZCGPR' LE '12').ZG168R                           04066000
.ZG168Q       ANOP  ,                                                   04066100
&ZMS          SETC  '"COUNT='   *KGPRA* MNOTE                           04066200
&ZMS          SETC  '&ZMS.&COUNT"'                                      04066300
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           04066400
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    04066500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04066600
.ZG168R       ANOP  ,                                                   04066700
.*----------------------------------------------------------------***   04066800
.***AG.KXVAR05 NAME, RQD OUTPUT, KEYS -XVARIABLE KEY                    04066900
              AIF   (N'&TCOUNT LE 1).ZG171A     CK NUM                  04067000
&ZMS          SETC  '"TCOUNT='  *KPOSA* MNOTE                           04067100
&ZMS          SETC  '&ZMS.&TCOUNT"'                                     04067200
&ZMS          SETC  '&ZMS "TCOUNT"'                                     04067300
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 04067400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04067500
.ZG171A       ANOP  ,                                                   04067600
.*-------------------------------------------------------------------   04067700
.***AG.KXVAR06 NAME, RQD OUTPUT, KEYS -XVARIABLE                        04067800
&ZXTCOUNT     SETC  'OUTPUT'    SET IN/OUTPUT                           04067900
&XTCOUNT      SETC  '&TCOUNT(1)'                SET XVARIABLE           04068000
              AIF   (N'&TCOUNT GT 1).ZG171B     MULTI PARMS             04068100
&XTCOUNT      SETC  '&TCOUNT'   SET XVARIABLE                           04068200
.ZG171B       AIF   (K'&TCOUNT(1) GT 0).ZG171C                          04068300
&ZXTCOUNT     SETC  ''          RESET IN/OUTPUT                         04068400
&ZMS          SETC  ' '         *KRQDA*                                 04068500
&ZMS          SETC  '&ZMS "TCOUNT" KEY AND ITS ARGUMENT'                04068600
              MNOTE 8,' &ZMS ARE REQUIRED.'                             04068700
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04068800
.ZG171C       ANOP  ,                                                   04068900
.*-------------------------------------------------------------------   04069000
.***AG.KCK02 NAME, RQD OUTPUT, KEYS -GPR OUT OF RANGE                   04069100
              AIF   (K'&ZXTCOUNT LE 0).ZG171R   NOT I/O                 04069200
              AIF   ('&XTCOUNT'(1,1) NE '(').ZG171R                     04069300
&ZCGPR        SETC  '&XTCOUNT'(2,K'&XTCOUNT-2)                          04069400
              AIF   ('&ZCGPR'(1,1) NE '0').ZG171P                       04069500
              AIF   (K'&ZCGPR GT 2).ZG171Q                              04069600
              AIF   ('&ZCGPR' EQ '0').ZG171Q                            04069700
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       04069800
              AIF   (T'&ZCGPR NE 'N').ZG171Q    INVALID REG NAME        04069900
.ZG171P       ANOP  ,                                                   04070000
              AIF   (T'&ZCGPR NE 'N').ZG171R    NON NUMERIC             04070100
              AIF   ('&ZCGPR' LT '2').ZG171Q                            04070200
              AIF   ('&ZCGPR' LE '12').ZG171R                           04070300
.ZG171Q       ANOP  ,                                                   04070400
&ZMS          SETC  '"TCOUNT='  *KGPRA* MNOTE                           04070500
&ZMS          SETC  '&ZMS.&TCOUNT"'                                     04070600
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           04070700
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    04070800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04070900
.ZG171R       ANOP  ,                                                   04071000
.*----------------------------------------------------------------***   04071100
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             04071200
              AIF   (N'&NTYPE LE 1).ZG174A      CK NUM                  04071300
&ZMS          SETC  '"NTYPE='   *KPOSA* MNOTE                           04071400
&ZMS          SETC  '&ZMS.&NTYPE"'                                      04071500
&ZMS          SETC  '&ZMS "NTYPE"'                                      04071600
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 04071700
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04071800
.ZG174A       ANOP  ,                                                   04071900
.*-------------------------------------------------------------------   04072000
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             04072100
&XNTYPE       SETC  ''          INITIALIZE XVARIABLE                    04072200
.ZG175A   AIF   ('&NTYPE(1)' NE 'S').ZG176A                             04072300
&XNTYPE       SETC  'S'         SET KEYWORD                             04072400
.*-------------------------------------------------------------------   04072500
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             04072600
.ZG176A   AIF   ('&NTYPE(1)' NE 'C').ZG177A                             04072700
&XNTYPE       SETC  'C'         SET KEYWORD                             04072800
.*-------------------------------------------------------------------   04072900
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             04073000
.ZG177A       AIF   (K'&XNTYPE GT 0).ZG177C     KEYWORD                 04073100
              AIF   (K'&NTYPE(1) LE 0).ZG177B                           04073200
&ZMS          SETC  '"NTYPE='   *KUKWA* MNOTE                           04073300
&ZMS          SETC  '&ZMS.&NTYPE"'                                      04073400
&ZMS          SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '           04073500
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                 04073600
&ZMS          SETC  '&ZMS "S"'  VALID KEYWORD                           04073700
&ZMS          SETC  '&ZMS OR "C".'              VALID KEYWORD           04073800
              MNOTE 8,' &ZMS '                                          04073900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04074000
.ZG177B       ANOP  ,                                                   04074100
&XNTYPE       SETC  'S'         SET DEFAULT KEYWORD                     04074200
.ZG177C       ANOP  ,                                                   04074300
&ZXNTYPE      SETC  'INPUT'     SET IN/OUTPUT                           04074400
.*-------------------------------------------------------------------   04074500
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           04074600
.ZG178        ANOP  ,                                                   04074700
&ZTLC         SETC 'IMPORT'                                             04074800
              AIF   ('&FUNC(1)' NE '&ZTLC').ZG196                       04074900
&XFUNC        SETC  'IMPORT'    SET KEYWORD                             04075000
              AIF   (N'&FUNC LE 1).ZG178A       CK NUM                  04075100
&ZMS          SETC  '"FUNC='    *KPOSA* MNOTE                           04075200
&ZMS          SETC  '&ZMS.&FUNC"'                                       04075300
&ZMS          SETC  '&ZMS "FUNC"'                                       04075400
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 04075500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04075600
.ZG178A       ANOP  ,                                                   04075700
.*------------------------------------------------------------------    04075800
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           04075900
&ZCVAL        SETC ''           CLEAR ERROR KEY ACCUMULATOR             04076000
.ZG178A0      AIF   (K'&ANAME LE 0).ZG178A1     OK                      04076100
&ZCVAL        SETC '&ZCVAL ANAME'               INCORRECT KEY USED      04076200
.ZG178A1      AIF   (K'&ENAME LE 0).ZG178A2     OK                      04076300
&ZCVAL        SETC '&ZCVAL ENAME'               INCORRECT KEY USED      04076400
.ZG178A2      AIF   (K'&AMODE LE 0).ZG178A3     OK                      04076500
&ZCVAL        SETC '&ZCVAL AMODE'               INCORRECT KEY USED      04076600
.ZG178A3      AIF   (K'&ATYPE LE 0).ZG178A4     OK                      04076700
&ZCVAL        SETC '&ZCVAL ATYPE'               INCORRECT KEY USED      04076800
.ZG178A4      AIF   (K'&SECTION LE 0).ZG178A5   OK                      04076900
&ZCVAL        SETC '&ZCVAL SECTION'             INCORRECT KEY USED      04077000
.ZG178A5      AIF   (K'&OLDNAME LE 0).ZG178A6   OK                      04077100
&ZCVAL        SETC '&ZCVAL OLDNAME'             INCORRECT KEY USED      04077200
.ZG178A6      AIF   (K'&NEWNAME LE 0).ZG178A7   OK                      04077300
&ZCVAL        SETC '&ZCVAL NEWNAME'             INCORRECT KEY USED      04077400
.ZG178A7      AIF   (K'&COUNT LE 0).ZG178A8     OK                      04077500
&ZCVAL        SETC '&ZCVAL COUNT'               INCORRECT KEY USED      04077600
.ZG178A8      AIF   (K'&MODE LE 0).ZG178A9      OK                      04077700
&ZCVAL        SETC '&ZCVAL MODE'                INCORRECT KEY USED      04077800
.ZG178A9      AIF   (K'&CLASS LE 0).ZG178A10    OK                      04077900
&ZCVAL        SETC '&ZCVAL CLASS'               INCORRECT KEY USED      04078000
.ZG178A10     AIF   (K'&CALLIB LE 0).ZG178A11   OK                      04078100
&ZCVAL        SETC '&ZCVAL CALLIB'              INCORRECT KEY USED      04078200
.ZG178A11     AIF   (K'&PATHNAME LE 0).ZG178A12  OK                     04078300
&ZCVAL        SETC '&ZCVAL PATHNAME'            INCORRECT KEY USED      04078400
.ZG178A12     AIF   (K'&DIALOG LE 0).ZG178A13   OK                      04078500
&ZCVAL        SETC '&ZCVAL DIALOG'              INCORRECT KEY USED      04078600
.ZG178A13     AIF   (K'&INTENT LE 0).ZG178A14   OK                      04078700
&ZCVAL        SETC '&ZCVAL INTENT'              INCORRECT KEY USED      04078800
.ZG178A14     AIF   (K'&PROTECT LE 0).ZG178A15  OK                      04078900
&ZCVAL        SETC '&ZCVAL PROTECT'             INCORRECT KEY USED      04079000
.ZG178A15     AIF   (K'&RENAMEL LE 0).ZG178A16  OK                      04079100
&ZCVAL        SETC '&ZCVAL RENAMEL'             INCORRECT KEY USED      04079200
.ZG178A16     AIF   (K'&AREA LE 0).ZG178A17     OK                      04079300
&ZCVAL        SETC '&ZCVAL AREA'                INCORRECT KEY USED      04079400
.ZG178A17     AIF   (K'&CURSOR LE 0).ZG178A18   OK                      04079500
&ZCVAL        SETC '&ZCVAL CURSOR'              INCORRECT KEY USED      04079600
.ZG178A18     AIF   (K'&RECTYPE LE 0).ZG178A19  OK                      04079700
&ZCVAL        SETC '&ZCVAL RECTYPE'             INCORRECT KEY USED      04079800
.ZG178A19     AIF   (K'&SYMBOL LE 0).ZG178A20   OK                      04080000
&ZCVAL        SETC '&ZCVAL SYMBOL'              INCORRECT KEY USED      04080200
.ZG178A20     AIF   (K'&TCOUNT LE 0).ZG178A21   OK                      04080300
&ZCVAL        SETC '&ZCVAL TCOUNT'              INCORRECT KEY USED      04080400
.ZG178A21     AIF   (K'&NTYPE LE 0).ZG178A22    OK                      04080500
&ZCVAL        SETC '&ZCVAL NTYPE'               INCORRECT KEY USED      04080600
.ZG178A22     AIF   (K'&INTYPE LE 0).ZG178A23   OK                      04080700
&ZCVAL        SETC '&ZCVAL INTYPE'              INCORRECT KEY USED      04080800
.ZG178A23     AIF   (K'&DDNAME LE 0).ZG178A24   OK                      04080900
&ZCVAL        SETC '&ZCVAL DDNAME'              INCORRECT KEY USED      04081000
.ZG178A24     AIF   (K'&DEPTR LE 0).ZG178A25    OK                      04081100
&ZCVAL        SETC '&ZCVAL DEPTR'               INCORRECT KEY USED      04081200
.ZG178A25     AIF   (K'&MEMBER LE 0).ZG178A26   OK                      04081300
&ZCVAL        SETC '&ZCVAL MEMBER'              INCORRECT KEY USED      04081400
.ZG178A26     AIF   (K'&DCBPTR LE 0).ZG178A27   OK                      04081500
&ZCVAL        SETC '&ZCVAL DCBPTR'              INCORRECT KEY USED      04081600
.ZG178A27     AIF   (K'&EPTOKEN LE 0).ZG178A28  OK                      04081700
&ZCVAL        SETC '&ZCVAL EPTOKEN'             INCORRECT KEY USED      04081800
.ZG178A28     AIF   (K'&ATTRIB LE 0).ZG178A29   OK                      04081900
&ZCVAL        SETC '&ZCVAL ATTRIB'              INCORRECT KEY USED      04082000
.ZG178A29     AIF   (K'&ALIASES LE 0).ZG178A30  OK                      04082100
&ZCVAL        SETC '&ZCVAL ALIASES'             INCORRECT KEY USED      04082200
.ZG178A30     AIF   (K'&EPLOC LE 0).ZG178A31    OK                      04082300
&ZCVAL        SETC '&ZCVAL EPLOC'               INCORRECT KEY USED      04082400
.ZG178A31     AIF   (K'&IDENTIFY LE 0).ZG178A32  OK                     04082500
&ZCVAL        SETC '&ZCVAL IDENTIFY'            INCORRECT KEY USED      04082600
.ZG178A32     AIF   (K'&EXTLST LE 0).ZG178A33   OK                      04082700
&ZCVAL        SETC '&ZCVAL EXTLST'              INCORRECT KEY USED      04082800
.ZG178A33     AIF   (K'&LNAME LE 0).ZG178A34    OK                      04082900
&ZCVAL        SETC '&ZCVAL LNAME'               INCORRECT KEY USED      04083000
.ZG178A34     AIF   (K'&NEWSECT LE 0).ZG178A35  OK                      04083100
&ZCVAL        SETC '&ZCVAL NEWSECT'             INCORRECT KEY USED      04083200
.ZG178A35     AIF   (K'&ENDDATA LE 0).ZG178A36  OK                      04083300
&ZCVAL        SETC '&ZCVAL ENDDATA'             INCORRECT KEY USED      04083400
.ZG178A36     AIF   (K'&MODLIB LE 0).ZG178A37   OK                      04083500
&ZCVAL        SETC '&ZCVAL MODLIB'              INCORRECT KEY USED      04083600
.ZG178A37     AIF   (K'&SNAME LE 0).ZG178A38    OK                      04083700
&ZCVAL        SETC '&ZCVAL SNAME'               INCORRECT KEY USED      04083800
.ZG178A38     AIF   (K'&REPLACE LE 0).ZG178A39  OK                      04083900
&ZCVAL        SETC '&ZCVAL REPLACE'             INCORRECT KEY USED      04084000
.ZG178A39     AIF   (K'&LIBOPT LE 0).ZG178A40   OK                      04084100
&ZCVAL        SETC '&ZCVAL LIBOPT'              INCORRECT KEY USED      04084200
.ZG178A40     AIF   (K'&OPTION LE 0).ZG178A41   OK                      04084300
&ZCVAL        SETC '&ZCVAL OPTION'              INCORRECT KEY USED      04084400
.ZG178A41     AIF   (K'&OPTVAL LE 0).ZG178A42   OK                      04084600
&ZCVAL        SETC '&ZCVAL OPTVAL'              INCORRECT KEY USED      04084800
.ZG178A42     AIF   (K'&PARMS LE 0).ZG178A43    OK                      04085200
&ZCVAL        SETC '&ZCVAL PARMS'               INCORRECT KEY USED      04085600
.ZG178A43     AIF   (K'&FILES LE 0).ZG178A44    OK                      04086000
&ZCVAL        SETC '&ZCVAL FILES'               INCORRECT KEY USED      04086400
.ZG178A44     AIF   (K'&EXITS LE 0).ZG178A45    OK                      04087200
&ZCVAL        SETC '&ZCVAL EXITS'               INCORRECT KEY USED      04088000
.ZG178A45     AIF   (K'&OPTIONS LE 0).ZG178A46  OK                      04088800
&ZCVAL        SETC '&ZCVAL OPTIONS'             INCORRECT KEY USED      04089600
.ZG178A46     AIF   (K'&ORIGIN LE 0).ZG178A47   OK                      04090400
&ZCVAL        SETC '&ZCVAL ORIGIN'              INCORRECT KEY USED      04091200
.ZG178A47     AIF   (K'&REGION LE 0).ZG178A48   OK                      04092000
&ZCVAL        SETC '&ZCVAL REGION'              INCORRECT KEY USED      04092800
.ZG178A48     AIF   (K'&ZCVAL LE 0).ZG178A49    OK                      04093600
&ZCVAL        SETC '&ZCVAL'(2,K'&ZCVAL-1)                               04094400
              AIF  (K'&ZCVAL LE 160).ZG178A49A                          04094500
&ZCVAL        SETC '&ZCVAL'(1,160)                                      04094600
&ZCVAL        SETC '&ZCVAL....'                                         04094700
.ZG178A49A    ANOP                                                      04094900
&ZMS          SETC  '"FUNC'     *KMEIA* MNOTE                           04095200
&ZMS          SETC  '&ZMS.=&FUNC"'                                      04096000
&ZMS          SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'                04096800
              MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'                04097600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04098400
.ZG178A49     ANOP  ,                                                   04099200
.*----------------------------------------------------------------***   04100000
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     04100800
              AIF   (N'&WORKMOD LE 1).ZG180A    CK NUM                  04101600
&ZMS          SETC  '"WORKMOD='                 *KPOSA* MNOTE           04102400
&ZMS          SETC  '&ZMS.&WORKMOD"'                                    04103200
&ZMS          SETC  '&ZMS "WORKMOD"'                                    04104000
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 04104800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04105600
.ZG180A       ANOP  ,                                                   04106400
.*-------------------------------------------------------------------   04107200
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         04108000
&ZXWORKMOD    SETC  'INPUT'     SET IN/OUTPUT                           04108800
&XWORKMOD     SETC  '&WORKMOD(1)'               SET XVARIABLE           04109600
              AIF   (N'&WORKMOD GT 1).ZG180B    MULTI PARMS             04110400
&XWORKMOD     SETC  '&WORKMOD'  SET XVARIABLE                           04111200
.ZG180B       AIF   (K'&WORKMOD(1) GT 0).ZG180C                         04112000
&ZXWORKMOD    SETC  ''          RESET IN/OUTPUT                         04112800
&ZMS          SETC  ' '         *KRQDA*                                 04113600
&ZMS          SETC  '&ZMS "WORKMOD" KEY AND ITS ARGUMENT'               04114400
              MNOTE 8,' &ZMS ARE REQUIRED.'                             04115200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04116000
.ZG180C       ANOP  ,                                                   04116800
.*-------------------------------------------------------------------   04117600
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    04118400
              AIF   (K'&ZXWORKMOD LE 0).ZG180R  NOT I/O                 04119200
              AIF   ('&XWORKMOD'(1,1) NE '(').ZG180R                    04120000
&ZCGPR        SETC  '&XWORKMOD'(2,K'&XWORKMOD-2)                        04120800
              AIF   ('&ZCGPR'(1,1) NE '0').ZG180P                       04121600
              AIF   (K'&ZCGPR GT 2).ZG180Q                              04122400
              AIF   ('&ZCGPR' EQ '0').ZG180Q                            04123200
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       04124000
              AIF   (T'&ZCGPR NE 'N').ZG180Q    INVALID REG NAME        04124800
.ZG180P       ANOP  ,                                                   04125600
              AIF   (T'&ZCGPR NE 'N').ZG180R    NON NUMERIC             04126400
              AIF   ('&ZCGPR' LT '2').ZG180Q                            04127200
              AIF   ('&ZCGPR' LE '12').ZG180R                           04128000
.ZG180Q       ANOP  ,                                                   04128800
&ZMS          SETC  '"WORKMOD='                 *KGPRA* MNOTE           04129600
&ZMS          SETC  '&ZMS.&WORKMOD"'                                    04130400
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           04131200
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    04132000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04132800
.ZG180R       ANOP  ,                                                   04132900
.*------------------------------------------------------------------    04133000
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           04133100
&XITYPE       SETC  ''          INITIALIZE XVARIABLE                    04133200
.*-------------------------------------------------------------------   04133300
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           04133400
.ZG184        ANOP  ,                                                   04133900
              AIF   (K'&ITYPE(1) LE 0).ZG184A                           04134400
&ZTLC         SETC 'C'                                                  04135100
              AIF   ('&ITYPE(1)' NE '&ZTLC').ZG185                      04135200
&XITYPE       SETC  'C'         SET KEYWORD                             04135300
              AIF   (N'&ITYPE LE 1).ZG184A      CK NUM                  04135400
&ZMS          SETC  '"ITYPE='   *KPOSA* MNOTE                           04135500
&ZMS          SETC  '&ZMS.&ITYPE"'                                      04135600
&ZMS          SETC  '&ZMS "ITYPE"'                                      04135700
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 04135800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04135900
.ZG184A       ANOP  ,                                                   04136000
.*-------------------------------------------------------------------   04136100
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           04136200
.ZG185        ANOP  ,                                                   04136300
&ZTLC         SETC 'D'                                                  04136400
              AIF   ('&ITYPE(1)' NE '&ZTLC').ZG186                      04136500
&XITYPE       SETC  'D'         SET KEYWORD                             04136600
              AIF   (N'&ITYPE LE 1).ZG185A      CK NUM                  04136700
&ZMS          SETC  '"ITYPE='   *KPOSA* MNOTE                           04136800
&ZMS          SETC  '&ZMS.&ITYPE"'                                      04136900
&ZMS          SETC  '&ZMS "ITYPE"'                                      04137000
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 04137100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04137200
.ZG185A       ANOP  ,                                                   04137300
.*------------------------------------------------------------------    04137400
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           04137500
.ZG186        ANOP  ,                                                   04137600
&ZXITYPE      SETC  'INPUT'     SET IN/OUTPUT                           04137700
              AIF   (K'&XITYPE GT 0).ZG186E     VALID ARG               04137800
              AIF   (T'&ITYPE EQ 'O').ZG186D    OMITTED                 04137900
&ZASYSLNDX    SETA  0                                                   04138000
.ZG186A       ANOP  ,           POSITIONAL MACRO KEY                    04138100
&ZASYSLNDX    SETA  &ZASYSLNDX+1                                        04138200
              AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG186C                   04138300
&ZTLC         SETC 'ITYPE'                                              04138400
              AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG186A          04138500
.ZG186B       ANOP  ,                                                   04138600
&ZXITYPE      SETC  ''          RESET IN/OUTPUT                         04138700
&ZMS          SETC  'THE "ITYPE" KEY'           *KOPTA* MNOTE           04138800
&ZMS          SETC  '&ZMS MUST CONTAIN ONE'                             04138900
              MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                    04139000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04139100
              AGO   .ZG186E                                             04139200
.ZG186C       ANOP  ,                                                   04139300
&ZXITYPE      SETC  ''          RESET IN/OUTPUT                         04139400
&ZMS          SETC  '"ITYPE='   *KUKWA* MNOTE                           04139500
&ZMS          SETC  '&ZMS.&ITYPE"'                                      04139600
&ZMS          SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '           04139700
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                 04139800
&ZMS          SETC  '&ZMS "C"'  VALID KEYWORD                           04139900
&ZMS          SETC  '&ZMS OR "D".'              VALID KEYWORD           04140000
              MNOTE 8,' &ZMS '                                          04140100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04140200
              AGO   .ZG186E                                             04140300
.ZG186D       ANOP  ,                                                   04140400
&XITYPE       SETC  'C'         SET DEFAULT KEYWORD                     04140500
.ZG186E       ANOP  ,                                                   04140600
.*------------------------------------------------------------------    04140700
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           04140800
              AIF   (K'&ITYPE(1) GT 0).ZG186F   PARM                    04140900
&XITYPE       SETC  ''          ENSURE NULL KEYWORD                     04141000
&ZXITYPE      SETC  ''          RESET IN/OUTPUT                         04141100
&ZMS          SETC  'THE'                                               04141200
&ZMS          SETC  '&ZMS "ITYPE" KEY AND ITS ARGUMENT'                 04141300
&ZMS          SETC  '&ZMS ARE REQUIRED.'                                04141400
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                 04141500
&ZMS          SETC  '&ZMS "C"'  VALID KEYWORD                           04141600
&ZMS          SETC  '&ZMS OR "D".'              VALID KEYWORD           04141700
              MNOTE 8,' &ZMS '                                          04141800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04141900
.ZG186F       ANOP  ,                                                   04142000
.*----------------------------------------------------------------***   04142100
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     04142200
              AIF   (N'&DLLNAME LE 1).ZG188A    CK NUM                  04142300
&ZMS          SETC  '"DLLNAME='                 *KPOSA* MNOTE           04142400
&ZMS          SETC  '&ZMS.&DLLNAME"'                                    04142500
&ZMS          SETC  '&ZMS "DLLNAME"'                                    04142600
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 04142700
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04142800
.ZG188A       ANOP  ,                                                   04142900
.*-------------------------------------------------------------------   04143000
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         04143100
&ZXDLLNAME    SETC  'INPUT'     SET IN/OUTPUT                           04143200
&XDLLNAME     SETC  '&DLLNAME(1)'               SET XVARIABLE           04143300
              AIF   (N'&DLLNAME GT 1).ZG188B    MULTI PARMS             04143400
&XDLLNAME     SETC  '&DLLNAME'  SET XVARIABLE                           04143500
.ZG188B       AIF   (K'&DLLNAME(1) GT 0).ZG188C                         04143600
&ZXDLLNAME    SETC  ''          RESET IN/OUTPUT                         04143700
&ZMS          SETC  ' '         *KRQDA*                                 04143800
&ZMS          SETC  '&ZMS "DLLNAME" KEY AND ITS ARGUMENT'               04143900
              MNOTE 8,' &ZMS ARE REQUIRED.'                             04144000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04144100
.ZG188C       ANOP  ,                                                   04144200
.*-------------------------------------------------------------------   04144300
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    04144400
              AIF   (K'&ZXDLLNAME LE 0).ZG188R  NOT I/O                 04144500
              AIF   ('&XDLLNAME'(1,1) NE '(').ZG188R                    04144600
&ZCGPR        SETC  '&XDLLNAME'(2,K'&XDLLNAME-2)                        04144700
              AIF   ('&ZCGPR'(1,1) NE '0').ZG188P                       04144800
              AIF   (K'&ZCGPR GT 2).ZG188Q                              04144900
              AIF   ('&ZCGPR' EQ '0').ZG188Q                            04145000
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       04145100
              AIF   (T'&ZCGPR NE 'N').ZG188Q    INVALID REG NAME        04145200
.ZG188P       ANOP  ,                                                   04145300
              AIF   (T'&ZCGPR NE 'N').ZG188R    NON NUMERIC             04145400
              AIF   ('&ZCGPR' LT '2').ZG188Q                            04145500
              AIF   ('&ZCGPR' LE '12').ZG188R                           04145600
.ZG188Q       ANOP  ,                                                   04145700
&ZMS          SETC  '"DLLNAME='                 *KGPRA* MNOTE           04145800
&ZMS          SETC  '&ZMS.&DLLNAME"'                                    04145900
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           04146000
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    04146100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04146200
.ZG188R       ANOP  ,                                                   04146300
.*----------------------------------------------------------------***   04146400
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     04146500
              AIF   (N'&INAME LE 1).ZG191A      CK NUM                  04146600
&ZMS          SETC  '"INAME='   *KPOSA* MNOTE                           04146700
&ZMS          SETC  '&ZMS.&INAME"'                                      04146800
&ZMS          SETC  '&ZMS "INAME"'                                      04146900
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 04147000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04147100
.ZG191A       ANOP  ,                                                   04147200
.*-------------------------------------------------------------------   04147300
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         04147400
&ZXINAME      SETC  'INPUT'     SET IN/OUTPUT                           04147500
&XINAME       SETC  '&INAME(1)'                 SET XVARIABLE           04147600
              AIF   (N'&INAME GT 1).ZG191B      MULTI PARMS             04147700
&XINAME       SETC  '&INAME'    SET XVARIABLE                           04147800
.ZG191B       AIF   (K'&INAME(1) GT 0).ZG191C                           04147900
&ZXINAME      SETC  ''          RESET IN/OUTPUT                         04148000
&ZMS          SETC  ' '         *KRQDA*                                 04148100
&ZMS          SETC  '&ZMS "INAME" KEY AND ITS ARGUMENT'                 04148200
              MNOTE 8,' &ZMS ARE REQUIRED.'                             04148300
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04148400
.ZG191C       ANOP  ,                                                   04148500
.*-------------------------------------------------------------------   04148600
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    04148700
              AIF   (K'&ZXINAME LE 0).ZG191R    NOT I/O                 04148800
              AIF   ('&XINAME'(1,1) NE '(').ZG191R                      04148900
&ZCGPR        SETC  '&XINAME'(2,K'&XINAME-2)                            04149000
              AIF   ('&ZCGPR'(1,1) NE '0').ZG191P                       04149100
              AIF   (K'&ZCGPR GT 2).ZG191Q                              04149200
              AIF   ('&ZCGPR' EQ '0').ZG191Q                            04149300
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       04149400
              AIF   (T'&ZCGPR NE 'N').ZG191Q    INVALID REG NAME        04149500
.ZG191P       ANOP  ,                                                   04149600
              AIF   (T'&ZCGPR NE 'N').ZG191R    NON NUMERIC             04149700
              AIF   ('&ZCGPR' LT '2').ZG191Q                            04149800
              AIF   ('&ZCGPR' LE '12').ZG191R                           04149900
.ZG191Q       ANOP  ,                                                   04150000
&ZMS          SETC  '"INAME='   *KGPRA* MNOTE                           04150100
&ZMS          SETC  '&ZMS.&INAME"'                                      04150200
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           04150300
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    04150400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04150500
.ZG191R       ANOP  ,                                                   04158600
.*----------------------------------------------------------------***   04159200
.***AG.KMEKY01 NAME, OPT INPUT, ME KEYS -XVARIABLE                      04159800
&XOFFSET1     SETC  ''          INITIALIZE XVARIABLE                    04160400
              AIF   (K'&OFFSET LE 0).ZG194C                             04161000
&ZXOFFSET1    SETC  'INPUT'     SET IN/OUTPUT                           04161600
&XOFFSET1     SETC  'OFFSET'    SET XVARIABLE                           04162200
&ZXOFFSET     SETC  'INPUT'     SET IN/OUTPUT                           04162800
&XOFFSET      SETC  '&OFFSET(1)'                SET XVARIABLE PARM      04163400
              AIF   (N'&OFFSET GT 1).ZG194A     MULTIPLE PARMS          04164000
&XOFFSET      SETC  '&OFFSET'   SET XVARIABLE PARM                      04164600
.ZG194A       AIF   (N'&OFFSET LE 1).ZG194B     CK NUM                  04165200
&ZMS          SETC  '"OFFSET='  *KPOSA* MNOTE                           04165800
&ZMS          SETC  '&ZMS.&OFFSET"'                                     04166400
&ZMS          SETC  '&ZMS "OFFSET"'                                     04167000
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 04167900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04168000
.ZG194B       AIF   (K'&XOFFSET GT 0).ZG194C    ONE PARM                04175900
&ZXOFFSET1    SETC  ''          RESET IN/OUTPUT                         04183800
&ZXOFFSET     SETC  ''          RESET IN/OUTPUT                         04191700
&ZMS          SETC  'WHEN "IMPORT" IS SPECIFIED'  *KRQDA*               04199600
&ZMS          SETC  '&ZMS , "OFFSET" KEY AND ITS ARGUMENT'              04207500
              MNOTE 8,' &ZMS ARE REQUIRED.'                             04215600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04216000
.ZG194C       ANOP  ,                                                   04216800
.*------------------------------------------------------------------    04217600
.***AG.KMEKY07 NAME, OPT INPUT, ME KEYS -CHECK IF KEY ENTERED           04218400
              AIF   (K'&XOFFSET1 GT 0).ZG195B                           04219200
&ZXOFFSET1    SETC  'INPUT'     SET IN/OUTPUT                           04220000
&XOFFSET1     SETC  'OFFSET'    SET DEFAULT                             04220800
&ZXOFFSET     SETC  'INPUT'     SET IN/OUTPUT                           04221600
&XOFFSET      SETC  '0'         SET DEFAULT PARM                        04222400
.ZG195B       ANOP  ,                                                   04223200
.*-------------------------------------------------------------------   04224500
.***AG.KCK02 NAME, OPT INPUT, ME KEYS -GPR OUT OF RANGE                 04224600
              AIF   (K'&ZXOFFSET LE 0).ZG195R   NOT I/O                 04224700
              AIF   ('&XOFFSET'(1,1) NE '(').ZG195R                     04224800
&ZCGPR        SETC  '&XOFFSET'(2,K'&XOFFSET-2)                          04224900
              AIF   ('&ZCGPR'(1,1) NE '0').ZG195P                       04225300
              AIF   (K'&ZCGPR GT 2).ZG195Q                              04225400
              AIF   ('&ZCGPR' EQ '0').ZG195Q                            04225500
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       04225600
              AIF   (T'&ZCGPR NE 'N').ZG195Q    INVALID REG NAME        04225700
.ZG195P       ANOP  ,                                                   04225800
              AIF   (T'&ZCGPR NE 'N').ZG195R    NON NUMERIC             04225900
              AIF   ('&ZCGPR' LT '2').ZG195Q                            04226000
              AIF   ('&ZCGPR' LE '12').ZG195R                           04226100
.ZG195Q       ANOP  ,                                                   04226200
&ZMS          SETC  '"OFFSET='  *KGPRA* MNOTE                           04226300
&ZMS          SETC  '&ZMS.&OFFSET"'                                     04226400
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           04226500
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    04226600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04226700
.ZG195R       ANOP  ,                                                   04226800
.*-------------------------------------------------------------------   04226900
.***AG.KMEKY13 NAME, OPT INPUT, ME KEYS -PROCESS DEPENDENCIES           04227000
.ZG194        AIF   ('&XOFFSET1' NE 'OFFSET').ZG195                     04227100
.*-------------------------------------------------------------------   04227200
.***AG.KCK02 NAME, OPT INPUT, ME KEYS -GPR OUT OF RANGE                 04227300
              AIF   (K'&ZXOFFSET LE 0).ZG194R   NOT I/O                 04227400
              AIF   ('&XOFFSET'(1,1) NE '(').ZG194R                     04227500
&ZCGPR        SETC  '&XOFFSET'(2,K'&XOFFSET-2)                          04227600
              AIF   ('&ZCGPR'(1,1) NE '0').ZG194P                       04227700
              AIF   (K'&ZCGPR GT 2).ZG194Q                              04227800
              AIF   ('&ZCGPR' EQ '0').ZG194Q                            04227900
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       04228000
              AIF   (T'&ZCGPR NE 'N').ZG194Q    INVALID REG NAME        04228100
.ZG194P       ANOP  ,                                                   04228200
              AIF   (T'&ZCGPR NE 'N').ZG194R    NON NUMERIC             04228300
              AIF   ('&ZCGPR' LT '2').ZG194Q                            04228400
              AIF   ('&ZCGPR' LE '12').ZG194R                           04228500
.ZG194Q       ANOP  ,                                                   04228600
&ZMS          SETC  '"OFFSET='  *KGPRA* MNOTE                           04228700
&ZMS          SETC  '&ZMS.&OFFSET"'                                     04228800
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           04228900
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    04229000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04229100
.ZG194R       ANOP  ,                                                   04229200
.*-------------------------------------------------------------------   04229300
.***AG.KMEKY15 NAME, OPT INPUT, ME KEYS -END                            04229400
.ZG195        ANOP  ,           END MUTUALLY EXCLUSIVE KEYS             04229500
.*-------------------------------------------------------------------   04229600
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           04229700
.ZG196        ANOP  ,                                                   04229800
&ZTLC         SETC 'INCLUDE'                                            04229900
              AIF   ('&FUNC(1)' NE '&ZTLC').ZG246                       04230000
&XFUNC        SETC  'INCLUDE'   SET KEYWORD                             04230100
              AIF   (N'&FUNC LE 1).ZG196A       CK NUM                  04230200
&ZMS          SETC  '"FUNC='    *KPOSA* MNOTE                           04230300
&ZMS          SETC  '&ZMS.&FUNC"'                                       04230400
&ZMS          SETC  '&ZMS "FUNC"'                                       04230500
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 04230600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04230700
.ZG196A       ANOP  ,                                                   04230800
.*------------------------------------------------------------------    04230900
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           04231000
&ZCVAL        SETC ''           CLEAR ERROR KEY ACCUMULATOR             04231100
.ZG196A0      AIF   (K'&ANAME LE 0).ZG196A1     OK                      04231200
&ZCVAL        SETC '&ZCVAL ANAME'               INCORRECT KEY USED      04231300
.ZG196A1      AIF   (K'&ENAME LE 0).ZG196A2     OK                      04231400
&ZCVAL        SETC '&ZCVAL ENAME'               INCORRECT KEY USED      04231500
.ZG196A2      AIF   (K'&AMODE LE 0).ZG196A3     OK                      04231600
&ZCVAL        SETC '&ZCVAL AMODE'               INCORRECT KEY USED      04231700
.ZG196A3      AIF   (K'&ATYPE LE 0).ZG196A4     OK                      04231800
&ZCVAL        SETC '&ZCVAL ATYPE'               INCORRECT KEY USED      04231900
.ZG196A4      AIF   (K'&SECTION LE 0).ZG196A5   OK                      04232000
&ZCVAL        SETC '&ZCVAL SECTION'             INCORRECT KEY USED      04232100
.ZG196A5      AIF   (K'&OLDNAME LE 0).ZG196A6   OK                      04232200
&ZCVAL        SETC '&ZCVAL OLDNAME'             INCORRECT KEY USED      04232300
.ZG196A6      AIF   (K'&NEWNAME LE 0).ZG196A7   OK                      04232400
&ZCVAL        SETC '&ZCVAL NEWNAME'             INCORRECT KEY USED      04232500
.ZG196A7      AIF   (K'&COUNT LE 0).ZG196A8     OK                      04232600
&ZCVAL        SETC '&ZCVAL COUNT'               INCORRECT KEY USED      04232700
.ZG196A8      AIF   (K'&MODE LE 0).ZG196A9      OK                      04232800
&ZCVAL        SETC '&ZCVAL MODE'                INCORRECT KEY USED      04232900
.ZG196A9      AIF   (K'&CLASS LE 0).ZG196A10    OK                      04233000
&ZCVAL        SETC '&ZCVAL CLASS'               INCORRECT KEY USED      04233100
.ZG196A10     AIF   (K'&CALLIB LE 0).ZG196A11   OK                      04233200
&ZCVAL        SETC '&ZCVAL CALLIB'              INCORRECT KEY USED      04233300
.ZG196A11     AIF   (K'&DIALOG LE 0).ZG196A12   OK                      04233400
&ZCVAL        SETC '&ZCVAL DIALOG'              INCORRECT KEY USED      04233500
.ZG196A12     AIF   (K'&INTENT LE 0).ZG196A13   OK                      04233600
&ZCVAL        SETC '&ZCVAL INTENT'              INCORRECT KEY USED      04233700
.ZG196A13     AIF   (K'&PROTECT LE 0).ZG196A14  OK                      04233800
&ZCVAL        SETC '&ZCVAL PROTECT'             INCORRECT KEY USED      04233900
.ZG196A14     AIF   (K'&RENAMEL LE 0).ZG196A15  OK                      04234000
&ZCVAL        SETC '&ZCVAL RENAMEL'             INCORRECT KEY USED      04234100
.ZG196A15     AIF   (K'&AREA LE 0).ZG196A16     OK                      04234200
&ZCVAL        SETC '&ZCVAL AREA'                INCORRECT KEY USED      04234300
.ZG196A16     AIF   (K'&CURSOR LE 0).ZG196A17   OK                      04234400
&ZCVAL        SETC '&ZCVAL CURSOR'              INCORRECT KEY USED      04234500
.ZG196A17     AIF   (K'&RECTYPE LE 0).ZG196A18  OK                      04234600
&ZCVAL        SETC '&ZCVAL RECTYPE'             INCORRECT KEY USED      04234700
.ZG196A18     AIF   (K'&OFFSET LE 0).ZG196A19   OK                      04234800
&ZCVAL        SETC '&ZCVAL OFFSET'              INCORRECT KEY USED      04234900
.ZG196A19     AIF   (K'&SYMBOL LE 0).ZG196A20   OK                      04235000
&ZCVAL        SETC '&ZCVAL SYMBOL'              INCORRECT KEY USED      04235100
.ZG196A20     AIF   (K'&TCOUNT LE 0).ZG196A21   OK                      04235200
&ZCVAL        SETC '&ZCVAL TCOUNT'              INCORRECT KEY USED      04235300
.ZG196A21     AIF   (K'&NTYPE LE 0).ZG196A22    OK                      04235400
&ZCVAL        SETC '&ZCVAL NTYPE'               INCORRECT KEY USED      04235500
.ZG196A22     AIF   (K'&ITYPE LE 0).ZG196A23    OK                      04235600
&ZCVAL        SETC '&ZCVAL ITYPE'               INCORRECT KEY USED      04235700
.ZG196A23     AIF   (K'&DLLNAME LE 0).ZG196A24  OK                      04235800
&ZCVAL        SETC '&ZCVAL DLLNAME'             INCORRECT KEY USED      04235900
.ZG196A24     AIF   (K'&INAME LE 0).ZG196A25    OK                      04236000
&ZCVAL        SETC '&ZCVAL INAME'               INCORRECT KEY USED      04236100
.ZG196A25     AIF   (K'&EPLOC LE 0).ZG196A26    OK                      04236200
&ZCVAL        SETC '&ZCVAL EPLOC'               INCORRECT KEY USED      04236300
.ZG196A26     AIF   (K'&IDENTIFY LE 0).ZG196A27  OK                     04236400
&ZCVAL        SETC '&ZCVAL IDENTIFY'            INCORRECT KEY USED      04236500
.ZG196A27     AIF   (K'&EXTLST LE 0).ZG196A28   OK                      04236600
&ZCVAL        SETC '&ZCVAL EXTLST'              INCORRECT KEY USED      04236700
.ZG196A28     AIF   (K'&LNAME LE 0).ZG196A29    OK                      04236800
&ZCVAL        SETC '&ZCVAL LNAME'               INCORRECT KEY USED      04236900
.ZG196A29     AIF   (K'&NEWSECT LE 0).ZG196A30  OK                      04237000
&ZCVAL        SETC '&ZCVAL NEWSECT'             INCORRECT KEY USED      04237100
.ZG196A30     AIF   (K'&ENDDATA LE 0).ZG196A31  OK                      04237200
&ZCVAL        SETC '&ZCVAL ENDDATA'             INCORRECT KEY USED      04237300
.ZG196A31     AIF   (K'&MODLIB LE 0).ZG196A32   OK                      04237400
&ZCVAL        SETC '&ZCVAL MODLIB'              INCORRECT KEY USED      04237500
.ZG196A32     AIF   (K'&SNAME LE 0).ZG196A33    OK                      04237600
&ZCVAL        SETC '&ZCVAL SNAME'               INCORRECT KEY USED      04237700
.ZG196A33     AIF   (K'&REPLACE LE 0).ZG196A34  OK                      04237800
&ZCVAL        SETC '&ZCVAL REPLACE'             INCORRECT KEY USED      04237900
.ZG196A34     AIF   (K'&LIBOPT LE 0).ZG196A35   OK                      04238000
&ZCVAL        SETC '&ZCVAL LIBOPT'              INCORRECT KEY USED      04238100
.ZG196A35     AIF   (K'&OPTION LE 0).ZG196A36   OK                      04238200
&ZCVAL        SETC '&ZCVAL OPTION'              INCORRECT KEY USED      04238300
.ZG196A36     AIF   (K'&OPTVAL LE 0).ZG196A37   OK                      04238400
&ZCVAL        SETC '&ZCVAL OPTVAL'              INCORRECT KEY USED      04238500
.ZG196A37     AIF   (K'&PARMS LE 0).ZG196A38    OK                      04238600
&ZCVAL        SETC '&ZCVAL PARMS'               INCORRECT KEY USED      04238700
.ZG196A38     AIF   (K'&FILES LE 0).ZG196A39    OK                      04238800
&ZCVAL        SETC '&ZCVAL FILES'               INCORRECT KEY USED      04238900
.ZG196A39     AIF   (K'&EXITS LE 0).ZG196A40    OK                      04239000
&ZCVAL        SETC '&ZCVAL EXITS'               INCORRECT KEY USED      04239100
.ZG196A40     AIF   (K'&OPTIONS LE 0).ZG196A41  OK                      04239200
&ZCVAL        SETC '&ZCVAL OPTIONS'             INCORRECT KEY USED      04239300
.ZG196A41     AIF   (K'&ORIGIN LE 0).ZG196A42   OK                      04239400
&ZCVAL        SETC '&ZCVAL ORIGIN'              INCORRECT KEY USED      04239500
.ZG196A42     AIF   (K'&REGION LE 0).ZG196A43   OK                      04239600
&ZCVAL        SETC '&ZCVAL REGION'              INCORRECT KEY USED      04239700
.ZG196A43     AIF   (K'&ZCVAL LE 0).ZG196A44    OK                      04239800
&ZCVAL        SETC '&ZCVAL'(2,K'&ZCVAL-1)                               04239900
              AIF  (K'&ZCVAL LE 160).ZG196A44A                          04240000
&ZCVAL        SETC '&ZCVAL'(1,160)                                      04240100
&ZCVAL        SETC '&ZCVAL....'                                         04240200
.ZG196A44A    ANOP                                                      04240300
&ZMS          SETC  '"FUNC'     *KMEIA* MNOTE                           04240400
&ZMS          SETC  '&ZMS.=&FUNC"'                                      04240500
&ZMS          SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'                04240600
              MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'                04240700
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04240800
.ZG196A44     ANOP  ,                                                   04240900
.*----------------------------------------------------------------***   04241000
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     04241100
              AIF   (N'&WORKMOD LE 1).ZG198A    CK NUM                  04241200
&ZMS          SETC  '"WORKMOD='                 *KPOSA* MNOTE           04241300
&ZMS          SETC  '&ZMS.&WORKMOD"'                                    04241400
&ZMS          SETC  '&ZMS "WORKMOD"'                                    04241500
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 04241600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04241700
.ZG198A       ANOP  ,                                                   04241800
.*-------------------------------------------------------------------   04241900
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         04242000
&ZXWORKMOD    SETC  'INPUT'     SET IN/OUTPUT                           04242100
&XWORKMOD     SETC  '&WORKMOD(1)'               SET XVARIABLE           04242200
              AIF   (N'&WORKMOD GT 1).ZG198B    MULTI PARMS             04242300
&XWORKMOD     SETC  '&WORKMOD'  SET XVARIABLE                           04242400
.ZG198B       AIF   (K'&WORKMOD(1) GT 0).ZG198C                         04242500
&ZXWORKMOD    SETC  ''          RESET IN/OUTPUT                         04242600
&ZMS          SETC  ' '         *KRQDA*                                 04242700
&ZMS          SETC  '&ZMS "WORKMOD" KEY AND ITS ARGUMENT'               04242800
              MNOTE 8,' &ZMS ARE REQUIRED.'                             04242900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04243000
.ZG198C       ANOP  ,                                                   04243100
.*-------------------------------------------------------------------   04243200
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    04243300
              AIF   (K'&ZXWORKMOD LE 0).ZG198R  NOT I/O                 04243400
              AIF   ('&XWORKMOD'(1,1) NE '(').ZG198R                    04243500
&ZCGPR        SETC  '&XWORKMOD'(2,K'&XWORKMOD-2)                        04243600
              AIF   ('&ZCGPR'(1,1) NE '0').ZG198P                       04243700
              AIF   (K'&ZCGPR GT 2).ZG198Q                              04243800
              AIF   ('&ZCGPR' EQ '0').ZG198Q                            04243900
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       04244000
              AIF   (T'&ZCGPR NE 'N').ZG198Q    INVALID REG NAME        04244100
.ZG198P       ANOP  ,                                                   04244200
              AIF   (T'&ZCGPR NE 'N').ZG198R    NON NUMERIC             04244300
              AIF   ('&ZCGPR' LT '2').ZG198Q                            04244400
              AIF   ('&ZCGPR' LE '12').ZG198R                           04244500
.ZG198Q       ANOP  ,                                                   04244600
&ZMS          SETC  '"WORKMOD='                 *KGPRA* MNOTE           04244700
&ZMS          SETC  '&ZMS.&WORKMOD"'                                    04244800
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           04244900
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    04245000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04245100
.ZG198R       ANOP  ,                                                   04245200
.*------------------------------------------------------------------    04245300
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           04245400
&XINTYPE      SETC  ''          INITIALIZE XVARIABLE                    04245500
.*-------------------------------------------------------------------   04245600
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           04245700
.ZG202        ANOP  ,                                                   04245800
              AIF   (K'&INTYPE(1) LE 0).ZG202A                          04245900
&ZTLC         SETC 'D'                                                  04246000
              AIF   ('&INTYPE(1)' NE '&ZTLC').ZG209                     04246100
&XINTYPE      SETC  'D'         SET KEYWORD                             04246200
              AIF   (N'&INTYPE LE 1).ZG202A     CK NUM                  04246300
&ZMS          SETC  '"INTYPE='  *KPOSA* MNOTE                           04246400
&ZMS          SETC  '&ZMS.&INTYPE"'                                     04246500
&ZMS          SETC  '&ZMS "INTYPE"'                                     04246600
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 04246700
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04246800
.ZG202A       ANOP  ,                                                   04246900
.*------------------------------------------------------------------    04247000
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           04247100
&ZCVAL        SETC ''           CLEAR ERROR KEY ACCUMULATOR             04247200
.ZG202A0      AIF   (K'&MEMBER LE 0).ZG202A1    OK                      04247300
&ZCVAL        SETC '&ZCVAL MEMBER'              INCORRECT KEY USED      04247400
.ZG202A1      AIF   (K'&PATHNAME LE 0).ZG202A2  OK                      04247500
&ZCVAL        SETC '&ZCVAL PATHNAME'            INCORRECT KEY USED      04247600
.ZG202A2      AIF   (K'&DCBPTR LE 0).ZG202A3    OK                      04247700
&ZCVAL        SETC '&ZCVAL DCBPTR'              INCORRECT KEY USED      04247800
.ZG202A3      AIF   (K'&EPTOKEN LE 0).ZG202A4   OK                      04247900
&ZCVAL        SETC '&ZCVAL EPTOKEN'             INCORRECT KEY USED      04248000
.ZG202A4      AIF   (K'&ZCVAL LE 0).ZG202A5     OK                      04248100
&ZCVAL        SETC '&ZCVAL'(2,K'&ZCVAL-1)                               04248200
&ZMS          SETC  '"INTYPE'   *KMEIA* MNOTE                           04248300
&ZMS          SETC  '&ZMS.=&INTYPE"'                                    04248400
&ZMS          SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'                04248500
              MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'                04248600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04248800
.ZG202A5      ANOP  ,                                                   04249600
.*----------------------------------------------------------------***   04250400
.***AG.KMEKY01 NAME, RQD INPUT, ME KEYS -XVARIABLE                      04250600
&XPATHLIB     SETC  ''          INITIALIZE XVARIABLE                    04250800
              AIF   (K'&DDNAME LE 0).ZG204C                             04251000
&ZXPATHLIB    SETC  'INPUT'     SET IN/OUTPUT                           04251200
&XPATHLIB     SETC  'DDNAME'    SET XVARIABLE                           04251400
&ZXDDNAME     SETC  'INPUT'     SET IN/OUTPUT                           04251600
&XDDNAME      SETC  '&DDNAME(1)'                SET XVARIABLE PARM      04251800
              AIF   (N'&DDNAME GT 1).ZG204A     MULTIPLE PARMS          04252000
&XDDNAME      SETC  '&DDNAME'   SET XVARIABLE PARM                      04252200
.ZG204A       AIF   (N'&DDNAME LE 1).ZG204B     CK NUM                  04252500
&ZMS          SETC  '"DDNAME='  *KPOSA* MNOTE                           04252800
&ZMS          SETC  '&ZMS.&DDNAME"'                                     04253600
&ZMS          SETC  '&ZMS "DDNAME"'                                     04254400
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 04255200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04256000
.ZG204B       AIF   (K'&XDDNAME GT 0).ZG204C    ONE PARM                04258400
&ZXPATHLIB    SETC  ''          RESET IN/OUTPUT                         04260800
&ZXDDNAME     SETC  ''          RESET IN/OUTPUT                         04263200
&ZMS          SETC  ' '         *KRQDA*                                 04264000
&ZMS          SETC  '&ZMS "DDNAME" KEY AND ITS ARGUMENT'                04264800
              MNOTE 8,' &ZMS ARE REQUIRED.'                             04265600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04266400
.ZG204C       ANOP  ,                                                   04280400
.*------------------------------------------------------------------    04294400
.***AG.KME4Y09 NAME, RQD INPUT, ME KEYS -CHECK IF KEY ENTERED           04295200
              AIF   (K'&XPATHLIB GT 0).ZG205B                           04296000
&ZXPATHLIB    SETC  ''          RESET IN/OUTPUT                         04296800
&ZXDDNAME     SETC  ''          RESET IN/OUTPUT                         04297600
&XPATHLIB     SETC  ''          ENSURE NULL                             04298400
&XDDNAME      SETC  ''          ENSURE NULL                             04299200
&ZMS          SETC  'ONE OF THE FOLLOWING'      *KMERA* MNOTE           04300000
&ZMS          SETC  '&ZMS MUTUALLY EXCLUSIVE KEY(S) IS'                 04300800
&ZMS          SETC  '&ZMS REQUIRED:'                                    04301600
&ZMS          SETC  '&ZMS "DDNAME".'            VALID ME KEY            04302800
              MNOTE 8,' &ZMS '                                          04304000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04304800
.ZG205B       ANOP  ,                                                   04305600
.*-------------------------------------------------------------------   04306400
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           04307200
.ZG204        AIF   ('&XPATHLIB' NE 'DDNAME').ZG205                     04308000
.*-------------------------------------------------------------------   04308800
.***AG.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 04309600
              AIF   (K'&ZXDDNAME LE 0).ZG204R   NOT I/O                 04310400
              AIF   ('&XDDNAME'(1,1) NE '(').ZG204R                     04311200
&ZCGPR        SETC  '&XDDNAME'(2,K'&XDDNAME-2)                          04312000
              AIF   ('&ZCGPR'(1,1) NE '0').ZG204P                       04321300
              AIF   (K'&ZCGPR GT 2).ZG204Q                              04321400
              AIF   ('&ZCGPR' EQ '0').ZG204Q                            04321500
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       04321600
              AIF   (T'&ZCGPR NE 'N').ZG204Q    INVALID REG NAME        04321700
.ZG204P       ANOP  ,                                                   04321800
              AIF   (T'&ZCGPR NE 'N').ZG204R    NON NUMERIC             04321900
              AIF   ('&ZCGPR' LT '2').ZG204Q                            04322000
              AIF   ('&ZCGPR' LE '12').ZG204R                           04322100
.ZG204Q       ANOP  ,                                                   04322200
&ZMS          SETC  '"DDNAME='  *KGPRA* MNOTE                           04323800
&ZMS          SETC  '&ZMS.&DDNAME"'                                     04325400
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           04327100
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    04327200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04327300
.ZG204R       ANOP  ,                                                   04327400
.*-------------------------------------------------------------------   04327500
.***AG.KMEKY15 NAME, RQD INPUT, ME KEYS -END                            04327600
.ZG205        ANOP  ,           END MUTUALLY EXCLUSIVE KEYS             04327700
.*----------------------------------------------------------------***   04327800
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     04327900
              AIF   (N'&DEPTR LE 1).ZG207A      CK NUM                  04328000
&ZMS          SETC  '"DEPTR='   *KPOSA* MNOTE                           04328100
&ZMS          SETC  '&ZMS.&DEPTR"'                                      04328200
&ZMS          SETC  '&ZMS "DEPTR"'                                      04328300
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 04328400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04328500
.ZG207A       ANOP  ,                                                   04328600
.*-------------------------------------------------------------------   04328700
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         04328800
&ZXDEPTR      SETC  'INPUT'     SET IN/OUTPUT                           04328900
&XDEPTR       SETC  '&DEPTR(1)'                 SET XVARIABLE           04329000
              AIF   (N'&DEPTR GT 1).ZG207B      MULTI PARMS             04329100
&XDEPTR       SETC  '&DEPTR'    SET XVARIABLE                           04329200
.ZG207B       AIF   (K'&DEPTR(1) GT 0).ZG207C                           04329300
&ZXDEPTR      SETC  ''          RESET IN/OUTPUT                         04329400
&ZMS          SETC  ' '         *KRQDA*                                 04329500
&ZMS          SETC  '&ZMS "DEPTR" KEY AND ITS ARGUMENT'                 04329600
              MNOTE 8,' &ZMS ARE REQUIRED.'                             04329700
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04329800
.ZG207C       ANOP  ,                                                   04329900
.*-------------------------------------------------------------------   04330000
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    04330100
              AIF   (K'&ZXDEPTR LE 0).ZG207R    NOT I/O                 04330200
              AIF   ('&XDEPTR'(1,1) NE '(').ZG207R                      04330300
&ZCGPR        SETC  '&XDEPTR'(2,K'&XDEPTR-2)                            04330400
              AIF   ('&ZCGPR'(1,1) NE '0').ZG207P                       04330500
              AIF   (K'&ZCGPR GT 2).ZG207Q                              04330600
              AIF   ('&ZCGPR' EQ '0').ZG207Q                            04330700
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       04330800
              AIF   (T'&ZCGPR NE 'N').ZG207Q    INVALID REG NAME        04330900
.ZG207P       ANOP  ,                                                   04331000
              AIF   (T'&ZCGPR NE 'N').ZG207R    NON NUMERIC             04331100
              AIF   ('&ZCGPR' LT '2').ZG207Q                            04331200
              AIF   ('&ZCGPR' LE '12').ZG207R                           04331300
.ZG207Q       ANOP  ,                                                   04331400
&ZMS          SETC  '"DEPTR='   *KGPRA* MNOTE                           04331500
&ZMS          SETC  '&ZMS.&DEPTR"'                                      04331600
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           04331700
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    04331800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04331900
.ZG207R       ANOP  ,                                                   04332000
.*-------------------------------------------------------------------   04332100
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           04332200
.ZG209        ANOP  ,                                                   04332300
&ZTLC         SETC 'N'                                                  04332400
              AIF   ('&INTYPE(1)' NE '&ZTLC').ZG217                     04332500
&XINTYPE      SETC  'N'         SET KEYWORD                             04332600
              AIF   (N'&INTYPE LE 1).ZG209A     CK NUM                  04332700
&ZMS          SETC  '"INTYPE='  *KPOSA* MNOTE                           04332800
&ZMS          SETC  '&ZMS.&INTYPE"'                                     04332900
&ZMS          SETC  '&ZMS "INTYPE"'                                     04333000
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 04333100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04333200
.ZG209A       ANOP  ,                                                   04333300
.*------------------------------------------------------------------    04333400
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           04333500
&ZCVAL        SETC ''           CLEAR ERROR KEY ACCUMULATOR             04333600
.ZG209A0      AIF   (K'&DEPTR LE 0).ZG209A1     OK                      04333700
&ZCVAL        SETC '&ZCVAL DEPTR'               INCORRECT KEY USED      04333800
.ZG209A1      AIF   (K'&DCBPTR LE 0).ZG209A2    OK                      04333900
&ZCVAL        SETC '&ZCVAL DCBPTR'              INCORRECT KEY USED      04334000
.ZG209A2      AIF   (K'&EPTOKEN LE 0).ZG209A3   OK                      04334100
&ZCVAL        SETC '&ZCVAL EPTOKEN'             INCORRECT KEY USED      04334600
.ZG209A3      AIF   (K'&ZCVAL LE 0).ZG209A4     OK                      04335700
&ZCVAL        SETC '&ZCVAL'(2,K'&ZCVAL-1)                               04336800
&ZMS          SETC  '"INTYPE'   *KMEIA* MNOTE                           04337600
&ZMS          SETC  '&ZMS.=&INTYPE"'                                    04338400
&ZMS          SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'                04339200
              MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'                04340000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04340800
.ZG209A4      ANOP  ,                                                   04341600
.*----------------------------------------------------------------***   04342400
.***AG.KMEKY01 NAME, RQD INPUT, ME KEYS -XVARIABLE                      04343000
&XPATHLIB     SETC  ''          INITIALIZE XVARIABLE                    04343600
              AIF   (K'&DDNAME LE 0).ZG211C                             04344200
&ZXPATHLIB    SETC  'INPUT'     SET IN/OUTPUT                           04344800
&XPATHLIB     SETC  'DDNAME'    SET XVARIABLE                           04345400
&ZXDDNAME     SETC  'INPUT'     SET IN/OUTPUT                           04346000
&XDDNAME      SETC  '&DDNAME(1)'                SET XVARIABLE PARM      04346600
              AIF   (N'&DDNAME GT 1).ZG211A     MULTIPLE PARMS          04347200
&XDDNAME      SETC  '&DDNAME'   SET XVARIABLE PARM                      04347800
.ZG211A       AIF   (N'&DDNAME LE 1).ZG211B     CK NUM                  04348400
&ZMS          SETC  '"DDNAME='  *KPOSA* MNOTE                           04349000
&ZMS          SETC  '&ZMS.&DDNAME"'                                     04349600
&ZMS          SETC  '&ZMS "DDNAME"'                                     04350200
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 04350800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04351400
.ZG211B       AIF   (K'&XDDNAME GT 0).ZG211C    ONE PARM                04352000
&ZXPATHLIB    SETC  ''          RESET IN/OUTPUT                         04352600
&ZXDDNAME     SETC  ''          RESET IN/OUTPUT                         04353200
&ZMS          SETC  ' '         *KRQDA*                                 04353800
&ZMS          SETC  '&ZMS "DDNAME" KEY AND ITS ARGUMENT'                04354400
              MNOTE 8,' &ZMS ARE REQUIRED.'                             04355000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04355600
.ZG211C       ANOP  ,                                                   04356200
.*----------------------------------------------------------------***   04356800
.***AG.KMEKY02 NAME, RQD INPUT, ME KEYS -XVARIABLE                      04357400
              AIF   (K'&PATHNAME LE 0).ZG215D   NO ME KEY               04358000
              AIF   (N'&PATHNAME LE 1).ZG215A   CK NUM                  04358600
&ZMS          SETC  '"PATHNAME='                *KPOSA* MNOTE           04359200
&ZMS          SETC  '&ZMS.&PATHNAME"'                                   04359800
&ZMS          SETC  '&ZMS "PATHNAME"'                                   04360400
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 04361000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04361600
.ZG215A       AIF   (K'&XPATHLIB LE 0).ZG215B                           04362200
&ZMS          SETC  '"PATHNAME'                 *KMEKA* MNOTE           04362800
&ZMS          SETC  '&ZMS.=&PATHNAME"'                                  04363400
&ZMS          SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'               04364000
&ZMS          SETC  '&ZMS "&XPATHLIB"'                                  04364600
              MNOTE 8,' &ZMS KEY.'                                      04365200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04365800
              AGO   .ZG215D                                             04366400
.*                                                                      04367000
.ZG215B       ANOP  ,                                                   04367600
&ZXPATHLIB    SETC  'INPUT'     SET IN/OUTPUT                           04368200
&XPATHLIB     SETC  'PATHNAME'  SET XVARIABLE                           04368800
&ZXPATHNAME   SETC  'INPUT'     SET IN/OUTPUT                           04369400
&XPATHNAME    SETC  '&PATHNAME(1)'              SET XVARIABLE PARM      04370000
              AIF   (N'&PATHNAME GT 1).ZG215C   MULTIPLE PARMS          04370600
&XPATHNAME    SETC  '&PATHNAME'                 SET XVARIABLE PARM      04371200
.ZG215C       AIF   (K'&XPATHNAME GT 0).ZG215D  ONE PARM                04371800
&ZXPATHLIB    SETC  ''          RESET IN/OUTPUT                         04372400
&ZXPATHNAME   SETC  ''          RESET IN/OUTPUT                         04373000
&ZMS          SETC  ' '         *KRQDA*                                 04373600
&ZMS          SETC  '&ZMS "PATHNAME" KEY AND ITS ARGUMENT'              04374200
              MNOTE 8,' &ZMS ARE REQUIRED.'                             04374800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04375400
.ZG215D       ANOP  ,                                                   04376000
.*------------------------------------------------------------------    04376600
.***AG.KME4Y09 NAME, RQD INPUT, ME KEYS -CHECK IF KEY ENTERED           04377200
              AIF   (K'&XPATHLIB GT 0).ZG216B                           04377800
&ZXPATHLIB    SETC  ''          RESET IN/OUTPUT                         04378400
&ZXDDNAME     SETC  ''          RESET IN/OUTPUT                         04379000
&XPATHLIB     SETC  ''          ENSURE NULL                             04379600
&XDDNAME      SETC  ''          ENSURE NULL                             04380200
&ZMS          SETC  'ONE OF THE FOLLOWING'      *KMERA* MNOTE           04380800
&ZMS          SETC  '&ZMS MUTUALLY EXCLUSIVE KEY(S) IS'                 04381400
&ZMS          SETC  '&ZMS REQUIRED:'                                    04382000
&ZMS          SETC  '&ZMS "DDNAME"'             VALID ME KEY            04382600
&ZMS          SETC  '&ZMS OR "PATHNAME".'       VALID ME KEY            04383200
              MNOTE 8,' &ZMS '                                          04383800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04384400
.ZG216B       ANOP  ,                                                   04385000
.*-------------------------------------------------------------------   04385600
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           04386200
.ZG211        AIF   ('&XPATHLIB' NE 'DDNAME').ZG215                     04386800
.*-------------------------------------------------------------------   04387400
.***AG.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 04388000
              AIF   (K'&ZXDDNAME LE 0).ZG211R   NOT I/O                 04388600
              AIF   ('&XDDNAME'(1,1) NE '(').ZG211R                     04389200
&ZCGPR        SETC  '&XDDNAME'(2,K'&XDDNAME-2)                          04389800
              AIF   ('&ZCGPR'(1,1) NE '0').ZG211P                       04390400
              AIF   (K'&ZCGPR GT 2).ZG211Q                              04391000
              AIF   ('&ZCGPR' EQ '0').ZG211Q                            04391600
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       04392200
              AIF   (T'&ZCGPR NE 'N').ZG211Q    INVALID REG NAME        04392800
.ZG211P       ANOP  ,                                                   04393400
              AIF   (T'&ZCGPR NE 'N').ZG211R    NON NUMERIC             04394000
              AIF   ('&ZCGPR' LT '2').ZG211Q                            04394600
              AIF   ('&ZCGPR' LE '12').ZG211R                           04395200
.ZG211Q       ANOP  ,                                                   04395800
&ZMS          SETC  '"DDNAME='  *KGPRA* MNOTE                           04396400
&ZMS          SETC  '&ZMS.&DDNAME"'                                     04397000
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           04397600
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    04398200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04398800
.ZG211R       ANOP  ,                                                   04399400
.*----------------------------------------------------------------***   04400000
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     04400600
              AIF   (N'&MEMBER LE 1).ZG213A     CK NUM                  04401200
&ZMS          SETC  '"MEMBER='  *KPOSA* MNOTE                           04401800
&ZMS          SETC  '&ZMS.&MEMBER"'                                     04402400
&ZMS          SETC  '&ZMS "MEMBER"'                                     04403000
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 04403600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04404200
.ZG213A       ANOP  ,                                                   04404800
.*-------------------------------------------------------------------   04405400
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         04406000
&ZXMEMBER     SETC  'INPUT'     SET IN/OUTPUT                           04406600
&XMEMBER      SETC  '0'                                                 04407200
              AIF   (K'&MEMBER(1) LE 0).ZG213B  PARM                    04407800
&XMEMBER      SETC  '&MEMBER(1)'                SET XVARIABLE           04408400
              AIF   (N'&MEMBER GT 1).ZG213B     MULTI PARMS             04409000
&XMEMBER      SETC  '&MEMBER'   SET XVARIABLE                           04409600
.ZG213B       ANOP  ,                                                   04411100
.*-------------------------------------------------------------------   04412700
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    04412800
              AIF   (K'&ZXMEMBER LE 0).ZG213R   NOT I/O                 04412900
              AIF   ('&XMEMBER' EQ '0').ZG213R                          04413000
              AIF   ('&XMEMBER'(1,1) NE '(').ZG213R                     04413100
&ZCGPR        SETC  '&XMEMBER'(2,K'&XMEMBER-2)                          04413200
              AIF   ('&ZCGPR'(1,1) NE '0').ZG213P                       04413300
              AIF   (K'&ZCGPR GT 2).ZG213Q                              04413400
              AIF   ('&ZCGPR' EQ '0').ZG213Q                            04413500
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       04413600
              AIF   (T'&ZCGPR NE 'N').ZG213Q    INVALID REG NAME        04413700
.ZG213P       ANOP  ,                                                   04413800
              AIF   (T'&ZCGPR NE 'N').ZG213R    NON NUMERIC             04413900
              AIF   ('&ZCGPR' LT '2').ZG213Q                            04414000
              AIF   ('&ZCGPR' LE '12').ZG213R                           04414100
.ZG213Q       ANOP  ,                                                   04414200
&ZMS          SETC  '"MEMBER='  *KGPRA* MNOTE                           04414300
&ZMS          SETC  '&ZMS.&MEMBER"'                                     04414400
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           04414500
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    04414600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04414700
.ZG213R       ANOP  ,                                                   04415200
.*-------------------------------------------------------------------   04415700
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           04416100
.ZG215        AIF   ('&XPATHLIB' NE 'PATHNAME').ZG216                   04416500
.*-------------------------------------------------------------------   04417000
.***AG.KMEKY14 NAME, RQD INPUT, ME KEYS -DISALLOWED KEYS                04417100
&ZCVAL        SETC ''           ERROR KEY FIELD                         04417200
.ZG215I0      AIF   (K'&MEMBER LE 0).ZG215I1                            04417300
&ZCVAL        SETC '&ZCVAL MEMBER'              DISALLOWED KEY          04417400
.ZG215I1      AIF   (K'&ZCVAL LE 0).ZG215J      KEY                     04417500
&ZCVAL        SETC '&ZCVAL'(2,K'&ZCVAL-1)                               04417600
&ZMS          SETC  '"PATHNAME'                 *KMEIA* MNOTE           04417700
&ZMS          SETC  '&ZMS.=&PATHNAME"'                                  04417800
&ZMS          SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'                04417900
              MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'                04418000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04418100
.ZG215J       ANOP  ,                                                   04418200
.*-------------------------------------------------------------------   04418300
.***AG.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 04418400
              AIF   (K'&ZXPATHNAME LE 0).ZG215R  NOT I/O                04418500
              AIF   ('&XPATHNAME'(1,1) NE '(').ZG215R                   04418600
&ZCGPR        SETC  '&XPATHNAME'(2,K'&XPATHNAME-2)                      04418700
              AIF   ('&ZCGPR'(1,1) NE '0').ZG215P                       04418800
              AIF   (K'&ZCGPR GT 2).ZG215Q                              04418900
              AIF   ('&ZCGPR' EQ '0').ZG215Q                            04419000
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       04419100
              AIF   (T'&ZCGPR NE 'N').ZG215Q    INVALID REG NAME        04419200
.ZG215P       ANOP  ,                                                   04419300
              AIF   (T'&ZCGPR NE 'N').ZG215R    NON NUMERIC             04419400
              AIF   ('&ZCGPR' LT '2').ZG215Q                            04419500
              AIF   ('&ZCGPR' LE '12').ZG215R                           04419600
.ZG215Q       ANOP  ,                                                   04419700
&ZMS          SETC  '"PATHNAME='                *KGPRA* MNOTE           04419800
&ZMS          SETC  '&ZMS.&PATHNAME"'                                   04419900
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           04420000
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    04420100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04420200
.ZG215R       ANOP  ,                                                   04420300
.*-------------------------------------------------------------------   04420400
.***AG.KMEKY15 NAME, RQD INPUT, ME KEYS -END                            04420500
.ZG216        ANOP  ,           END MUTUALLY EXCLUSIVE KEYS             04420600
.*-------------------------------------------------------------------   04420700
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           04420800
.ZG217        ANOP  ,                                                   04420900
&ZTLC         SETC 'P'                                                  04421000
              AIF   ('&INTYPE(1)' NE '&ZTLC').ZG224                     04421100
&XINTYPE      SETC  'P'         SET KEYWORD                             04421200
              AIF   (N'&INTYPE LE 1).ZG217A     CK NUM                  04421300
&ZMS          SETC  '"INTYPE='  *KPOSA* MNOTE                           04421400
&ZMS          SETC  '&ZMS.&INTYPE"'                                     04421500
&ZMS          SETC  '&ZMS "INTYPE"'                                     04421600
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 04421700
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04421800
.ZG217A       ANOP  ,                                                   04421900
.*------------------------------------------------------------------    04422000
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           04422100
&ZCVAL        SETC ''           CLEAR ERROR KEY ACCUMULATOR             04422200
.ZG217A0      AIF   (K'&DDNAME LE 0).ZG217A1    OK                      04422300
&ZCVAL        SETC '&ZCVAL DDNAME'              INCORRECT KEY USED      04422400
.ZG217A1      AIF   (K'&MEMBER LE 0).ZG217A2    OK                      04422500
&ZCVAL        SETC '&ZCVAL MEMBER'              INCORRECT KEY USED      04422600
.ZG217A2      AIF   (K'&PATHNAME LE 0).ZG217A3  OK                      04422700
&ZCVAL        SETC '&ZCVAL PATHNAME'            INCORRECT KEY USED      04422800
.ZG217A3      AIF   (K'&EPTOKEN LE 0).ZG217A4   OK                      04422900
&ZCVAL        SETC '&ZCVAL EPTOKEN'             INCORRECT KEY USED      04423000
.ZG217A4      AIF   (K'&ZCVAL LE 0).ZG217A5     OK                      04423100
&ZCVAL        SETC '&ZCVAL'(2,K'&ZCVAL-1)                               04423200
&ZMS          SETC  '"INTYPE'   *KMEIA* MNOTE                           04423300
&ZMS          SETC  '&ZMS.=&INTYPE"'                                    04423400
&ZMS          SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'                04423500
              MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'                04423600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04423700
.ZG217A5      ANOP  ,                                                   04423800
.*----------------------------------------------------------------***   04423900
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     04424000
              AIF   (N'&DCBPTR LE 1).ZG219A     CK NUM                  04424100
&ZMS          SETC  '"DCBPTR='  *KPOSA* MNOTE                           04424200
&ZMS          SETC  '&ZMS.&DCBPTR"'                                     04424300
&ZMS          SETC  '&ZMS "DCBPTR"'                                     04424400
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 04424500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04424600
.ZG219A       ANOP  ,                                                   04424700
.*-------------------------------------------------------------------   04424800
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         04424900
&ZXDCBPTR     SETC  'INPUT'     SET IN/OUTPUT                           04425000
&XDCBPTR      SETC  '&DCBPTR(1)'                SET XVARIABLE           04425100
              AIF   (N'&DCBPTR GT 1).ZG219B     MULTI PARMS             04425200
&XDCBPTR      SETC  '&DCBPTR'   SET XVARIABLE                           04425300
.ZG219B       AIF   (K'&DCBPTR(1) GT 0).ZG219C                          04425400
&ZXDCBPTR     SETC  ''          RESET IN/OUTPUT                         04425500
&ZMS          SETC  ' '         *KRQDA*                                 04425600
&ZMS          SETC  '&ZMS "DCBPTR" KEY AND ITS ARGUMENT'                04425700
              MNOTE 8,' &ZMS ARE REQUIRED.'                             04425800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04425900
.ZG219C       ANOP  ,                                                   04430300
.*-------------------------------------------------------------------   04430400
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    04430500
              AIF   (K'&ZXDCBPTR LE 0).ZG219R   NOT I/O                 04430600
              AIF   ('&XDCBPTR'(1,1) NE '(').ZG219R                     04430700
&ZCGPR        SETC  '&XDCBPTR'(2,K'&XDCBPTR-2)                          04430800
              AIF   ('&ZCGPR'(1,1) NE '0').ZG219P                       04430900
              AIF   (K'&ZCGPR GT 2).ZG219Q                              04431000
              AIF   ('&ZCGPR' EQ '0').ZG219Q                            04431100
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       04431200
              AIF   (T'&ZCGPR NE 'N').ZG219Q    INVALID REG NAME        04431300
.ZG219P       ANOP  ,                                                   04431400
              AIF   (T'&ZCGPR NE 'N').ZG219R    NON NUMERIC             04431500
              AIF   ('&ZCGPR' LT '2').ZG219Q                            04431600
              AIF   ('&ZCGPR' LE '12').ZG219R                           04431700
.ZG219Q       ANOP  ,                                                   04431800
&ZMS          SETC  '"DCBPTR='  *KGPRA* MNOTE                           04433300
&ZMS          SETC  '&ZMS.&DCBPTR"'                                     04434800
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           04436400
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    04436500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04436600
.ZG219R       ANOP  ,                                                   04436700
.*----------------------------------------------------------------***   04436800
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     04436900
              AIF   (N'&DEPTR LE 1).ZG222A      CK NUM                  04437000
&ZMS          SETC  '"DEPTR='   *KPOSA* MNOTE                           04437100
&ZMS          SETC  '&ZMS.&DEPTR"'                                      04437200
&ZMS          SETC  '&ZMS "DEPTR"'                                      04437300
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 04437400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04437500
.ZG222A       ANOP  ,                                                   04437600
.*-------------------------------------------------------------------   04437700
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         04437800
&ZXDEPTR      SETC  'INPUT'     SET IN/OUTPUT                           04437900
&XDEPTR       SETC  '&DEPTR(1)'                 SET XVARIABLE           04438000
              AIF   (N'&DEPTR GT 1).ZG222B      MULTI PARMS             04438100
&XDEPTR       SETC  '&DEPTR'    SET XVARIABLE                           04438200
.ZG222B       AIF   (K'&DEPTR(1) GT 0).ZG222C                           04438300
&ZXDEPTR      SETC  ''          RESET IN/OUTPUT                         04438400
&ZMS          SETC  ' '         *KRQDA*                                 04438500
&ZMS          SETC  '&ZMS "DEPTR" KEY AND ITS ARGUMENT'                 04438600
              MNOTE 8,' &ZMS ARE REQUIRED.'                             04438700
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04438800
.ZG222C       ANOP  ,                                                   04438900
.*-------------------------------------------------------------------   04439000
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    04439100
              AIF   (K'&ZXDEPTR LE 0).ZG222R    NOT I/O                 04439200
              AIF   ('&XDEPTR'(1,1) NE '(').ZG222R                      04439300
&ZCGPR        SETC  '&XDEPTR'(2,K'&XDEPTR-2)                            04439400
              AIF   ('&ZCGPR'(1,1) NE '0').ZG222P                       04439500
              AIF   (K'&ZCGPR GT 2).ZG222Q                              04439600
              AIF   ('&ZCGPR' EQ '0').ZG222Q                            04439700
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       04439800
              AIF   (T'&ZCGPR NE 'N').ZG222Q    INVALID REG NAME        04439900
.ZG222P       ANOP  ,                                                   04440000
              AIF   (T'&ZCGPR NE 'N').ZG222R    NON NUMERIC             04440100
              AIF   ('&ZCGPR' LT '2').ZG222Q                            04440200
              AIF   ('&ZCGPR' LE '12').ZG222R                           04440300
.ZG222Q       ANOP  ,                                                   04440400
&ZMS          SETC  '"DEPTR='   *KGPRA* MNOTE                           04440500
&ZMS          SETC  '&ZMS.&DEPTR"'                                      04440600
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           04440700
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    04440800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04440900
.ZG222R       ANOP  ,                                                   04441000
.*-------------------------------------------------------------------   04441100
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           04441200
.ZG224        ANOP  ,                                                   04441300
&ZTLC         SETC 'S'                                                  04441400
              AIF   ('&INTYPE(1)' NE '&ZTLC').ZG231                     04441500
&XINTYPE      SETC  'S'         SET KEYWORD                             04441600
              AIF   (N'&INTYPE LE 1).ZG224A     CK NUM                  04441700
&ZMS          SETC  '"INTYPE='  *KPOSA* MNOTE                           04441800
&ZMS          SETC  '&ZMS.&INTYPE"'                                     04441900
&ZMS          SETC  '&ZMS "INTYPE"'                                     04442000
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 04442100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04442200
.ZG224A       ANOP  ,                                                   04442300
.*------------------------------------------------------------------    04442400
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           04442500
&ZCVAL        SETC ''           CLEAR ERROR KEY ACCUMULATOR             04442600
.ZG224A0      AIF   (K'&MEMBER LE 0).ZG224A1    OK                      04442700
&ZCVAL        SETC '&ZCVAL MEMBER'              INCORRECT KEY USED      04442800
.ZG224A1      AIF   (K'&PATHNAME LE 0).ZG224A2  OK                      04442900
&ZCVAL        SETC '&ZCVAL PATHNAME'            INCORRECT KEY USED      04443000
.ZG224A2      AIF   (K'&DCBPTR LE 0).ZG224A3    OK                      04443100
&ZCVAL        SETC '&ZCVAL DCBPTR'              INCORRECT KEY USED      04443200
.ZG224A3      AIF   (K'&EPTOKEN LE 0).ZG224A4   OK                      04443300
&ZCVAL        SETC '&ZCVAL EPTOKEN'             INCORRECT KEY USED      04443400
.ZG224A4      AIF   (K'&ZCVAL LE 0).ZG224A5     OK                      04443500
&ZCVAL        SETC '&ZCVAL'(2,K'&ZCVAL-1)                               04443600
&ZMS          SETC  '"INTYPE'   *KMEIA* MNOTE                           04443700
&ZMS          SETC  '&ZMS.=&INTYPE"'                                    04443800
&ZMS          SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'                04443900
              MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'                04444000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04444100
.ZG224A5      ANOP  ,                                                   04444200
.*----------------------------------------------------------------***   04444300
.***AG.KMEKY01 NAME, RQD INPUT, ME KEYS -XVARIABLE                      04444400
&XPATHLIB     SETC  ''          INITIALIZE XVARIABLE                    04444500
              AIF   (K'&DDNAME LE 0).ZG226C                             04444600
&ZXPATHLIB    SETC  'INPUT'     SET IN/OUTPUT                           04444700
&XPATHLIB     SETC  'DDNAME'    SET XVARIABLE                           04444800
&ZXDDNAME     SETC  'INPUT'     SET IN/OUTPUT                           04444900
&XDDNAME      SETC  '&DDNAME(1)'                SET XVARIABLE PARM      04445000
              AIF   (N'&DDNAME GT 1).ZG226A     MULTIPLE PARMS          04445100
&XDDNAME      SETC  '&DDNAME'   SET XVARIABLE PARM                      04445200
.ZG226A       AIF   (N'&DDNAME LE 1).ZG226B     CK NUM                  04445300
&ZMS          SETC  '"DDNAME='  *KPOSA* MNOTE                           04445400
&ZMS          SETC  '&ZMS.&DDNAME"'                                     04445500
&ZMS          SETC  '&ZMS "DDNAME"'                                     04445600
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 04445700
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04445800
.ZG226B       AIF   (K'&XDDNAME GT 0).ZG226C    ONE PARM                04445900
&ZXPATHLIB    SETC  ''          RESET IN/OUTPUT                         04446000
&ZXDDNAME     SETC  ''          RESET IN/OUTPUT                         04446100
&ZMS          SETC  ' '         *KRQDA*                                 04446200
&ZMS          SETC  '&ZMS "DDNAME" KEY AND ITS ARGUMENT'                04446300
              MNOTE 8,' &ZMS ARE REQUIRED.'                             04446400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04446500
.ZG226C       ANOP  ,                                                   04446600
.*------------------------------------------------------------------    04446700
.***AG.KME4Y09 NAME, RQD INPUT, ME KEYS -CHECK IF KEY ENTERED           04446800
              AIF   (K'&XPATHLIB GT 0).ZG227B                           04446900
&ZXPATHLIB    SETC  ''          RESET IN/OUTPUT                         04447000
&ZXDDNAME     SETC  ''          RESET IN/OUTPUT                         04447100
&XPATHLIB     SETC  ''          ENSURE NULL                             04447200
&XDDNAME      SETC  ''          ENSURE NULL                             04447300
&ZMS          SETC  'ONE OF THE FOLLOWING'      *KMERA* MNOTE           04447400
&ZMS          SETC  '&ZMS MUTUALLY EXCLUSIVE KEY(S) IS'                 04447500
&ZMS          SETC  '&ZMS REQUIRED:'                                    04447600
&ZMS          SETC  '&ZMS "DDNAME".'            VALID ME KEY            04447700
              MNOTE 8,' &ZMS '                                          04447800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04447900
.ZG227B       ANOP  ,                                                   04448000
.*-------------------------------------------------------------------   04448100
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           04448200
.ZG226        AIF   ('&XPATHLIB' NE 'DDNAME').ZG227                     04448300
.*-------------------------------------------------------------------   04448400
.***AG.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 04448500
              AIF   (K'&ZXDDNAME LE 0).ZG226R   NOT I/O                 04448600
              AIF   ('&XDDNAME'(1,1) NE '(').ZG226R                     04448700
&ZCGPR        SETC  '&XDDNAME'(2,K'&XDDNAME-2)                          04448800
              AIF   ('&ZCGPR'(1,1) NE '0').ZG226P                       04449200
              AIF   (K'&ZCGPR GT 2).ZG226Q                              04449300
              AIF   ('&ZCGPR' EQ '0').ZG226Q                            04449400
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       04449500
              AIF   (T'&ZCGPR NE 'N').ZG226Q    INVALID REG NAME        04449600
.ZG226P       ANOP  ,                                                   04449700
              AIF   (T'&ZCGPR NE 'N').ZG226R    NON NUMERIC             04449800
              AIF   ('&ZCGPR' LT '2').ZG226Q                            04449900
              AIF   ('&ZCGPR' LE '12').ZG226R                           04450000
.ZG226Q       ANOP  ,                                                   04450100
&ZMS          SETC  '"DDNAME='  *KGPRA* MNOTE                           04450300
&ZMS          SETC  '&ZMS.&DDNAME"'                                     04450500
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           04450700
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    04450800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04450900
.ZG226R       ANOP  ,                                                   04451000
.*-------------------------------------------------------------------   04451100
.***AG.KMEKY15 NAME, RQD INPUT, ME KEYS -END                            04451200
.ZG227        ANOP  ,           END MUTUALLY EXCLUSIVE KEYS             04451300
.*----------------------------------------------------------------***   04451400
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     04451500
              AIF   (N'&DEPTR LE 1).ZG229A      CK NUM                  04451600
&ZMS          SETC  '"DEPTR='   *KPOSA* MNOTE                           04451700
&ZMS          SETC  '&ZMS.&DEPTR"'                                      04451800
&ZMS          SETC  '&ZMS "DEPTR"'                                      04451900
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 04452000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04452100
.ZG229A       ANOP  ,                                                   04452200
.*-------------------------------------------------------------------   04452300
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         04452400
&ZXDEPTR      SETC  'INPUT'     SET IN/OUTPUT                           04452500
&XDEPTR       SETC  '&DEPTR(1)'                 SET XVARIABLE           04452600
              AIF   (N'&DEPTR GT 1).ZG229B      MULTI PARMS             04452700
&XDEPTR       SETC  '&DEPTR'    SET XVARIABLE                           04452800
.ZG229B       AIF   (K'&DEPTR(1) GT 0).ZG229C                           04452900
&ZXDEPTR      SETC  ''          RESET IN/OUTPUT                         04453000
&ZMS          SETC  ' '         *KRQDA*                                 04453100
&ZMS          SETC  '&ZMS "DEPTR" KEY AND ITS ARGUMENT'                 04453200
              MNOTE 8,' &ZMS ARE REQUIRED.'                             04453300
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04453400
.ZG229C       ANOP  ,                                                   04453500
.*-------------------------------------------------------------------   04453600
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    04453700
              AIF   (K'&ZXDEPTR LE 0).ZG229R    NOT I/O                 04453800
              AIF   ('&XDEPTR'(1,1) NE '(').ZG229R                      04453900
&ZCGPR        SETC  '&XDEPTR'(2,K'&XDEPTR-2)                            04454000
              AIF   ('&ZCGPR'(1,1) NE '0').ZG229P                       04454100
              AIF   (K'&ZCGPR GT 2).ZG229Q                              04454200
              AIF   ('&ZCGPR' EQ '0').ZG229Q                            04454300
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       04454400
              AIF   (T'&ZCGPR NE 'N').ZG229Q    INVALID REG NAME        04454500
.ZG229P       ANOP  ,                                                   04454600
              AIF   (T'&ZCGPR NE 'N').ZG229R    NON NUMERIC             04454700
              AIF   ('&ZCGPR' LT '2').ZG229Q                            04454800
              AIF   ('&ZCGPR' LE '12').ZG229R                           04454900
.ZG229Q       ANOP  ,                                                   04455000
&ZMS          SETC  '"DEPTR='   *KGPRA* MNOTE                           04455100
&ZMS          SETC  '&ZMS.&DEPTR"'                                      04455200
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           04455300
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    04455400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04455500
.ZG229R       ANOP  ,                                                   04455600
.*-------------------------------------------------------------------   04455700
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           04455800
.ZG231        ANOP  ,                                                   04455900
&ZTLC         SETC 'T'                                                  04456000
              AIF   ('&INTYPE(1)' NE '&ZTLC').ZG235                     04456100
&XINTYPE      SETC  'T'         SET KEYWORD                             04456200
              AIF   (N'&INTYPE LE 1).ZG231A     CK NUM                  04456300
&ZMS          SETC  '"INTYPE='  *KPOSA* MNOTE                           04456400
&ZMS          SETC  '&ZMS.&INTYPE"'                                     04456500
&ZMS          SETC  '&ZMS "INTYPE"'                                     04456600
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 04456700
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04456800
.ZG231A       ANOP  ,                                                   04456900
.*------------------------------------------------------------------    04457000
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           04457100
&ZCVAL        SETC ''           CLEAR ERROR KEY ACCUMULATOR             04457200
.ZG231A0      AIF   (K'&DDNAME LE 0).ZG231A1    OK                      04457300
&ZCVAL        SETC '&ZCVAL DDNAME'              INCORRECT KEY USED      04457400
.ZG231A1      AIF   (K'&DEPTR LE 0).ZG231A2     OK                      04457500
&ZCVAL        SETC '&ZCVAL DEPTR'               INCORRECT KEY USED      04457600
.ZG231A2      AIF   (K'&MEMBER LE 0).ZG231A3    OK                      04457700
&ZCVAL        SETC '&ZCVAL MEMBER'              INCORRECT KEY USED      04457800
.ZG231A3      AIF   (K'&PATHNAME LE 0).ZG231A4  OK                      04457900
&ZCVAL        SETC '&ZCVAL PATHNAME'            INCORRECT KEY USED      04458000
.ZG231A4      AIF   (K'&DCBPTR LE 0).ZG231A5    OK                      04458100
&ZCVAL        SETC '&ZCVAL DCBPTR'              INCORRECT KEY USED      04458200
.ZG231A5      AIF   (K'&ZCVAL LE 0).ZG231A6     OK                      04458300
&ZCVAL        SETC '&ZCVAL'(2,K'&ZCVAL-1)                               04458400
&ZMS          SETC  '"INTYPE'   *KMEIA* MNOTE                           04458500
&ZMS          SETC  '&ZMS.=&INTYPE"'                                    04458600
&ZMS          SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'                04458700
              MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'                04458800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04458900
.ZG231A6      ANOP  ,                                                   04459000
.*----------------------------------------------------------------***   04459100
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     04459200
              AIF   (N'&EPTOKEN LE 1).ZG233A    CK NUM                  04459300
&ZMS          SETC  '"EPTOKEN='                 *KPOSA* MNOTE           04459400
&ZMS          SETC  '&ZMS.&EPTOKEN"'                                    04459500
&ZMS          SETC  '&ZMS "EPTOKEN"'                                    04459600
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 04459700
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04459800
.ZG233A       ANOP  ,                                                   04459900
.*-------------------------------------------------------------------   04460000
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         04460100
&ZXEPTOKEN    SETC  'INPUT'     SET IN/OUTPUT                           04460200
&XEPTOKEN     SETC  '&EPTOKEN(1)'               SET XVARIABLE           04460300
              AIF   (N'&EPTOKEN GT 1).ZG233B    MULTI PARMS             04460400
&XEPTOKEN     SETC  '&EPTOKEN'  SET XVARIABLE                           04460500
.ZG233B       AIF   (K'&EPTOKEN(1) GT 0).ZG233C                         04460600
&ZXEPTOKEN    SETC  ''          RESET IN/OUTPUT                         04460700
&ZMS          SETC  ' '         *KRQDA*                                 04460800
&ZMS          SETC  '&ZMS "EPTOKEN" KEY AND ITS ARGUMENT'               04460900
              MNOTE 8,' &ZMS ARE REQUIRED.'                             04461000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04461100
.ZG233C       ANOP  ,                                                   04461200
.*-------------------------------------------------------------------   04461300
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    04461400
              AIF   (K'&ZXEPTOKEN LE 0).ZG233R  NOT I/O                 04461500
              AIF   ('&XEPTOKEN'(1,1) NE '(').ZG233R                    04461600
&ZCGPR        SETC  '&XEPTOKEN'(2,K'&XEPTOKEN-2)                        04461700
              AIF   ('&ZCGPR'(1,1) NE '0').ZG233P                       04461800
              AIF   (K'&ZCGPR GT 2).ZG233Q                              04461900
              AIF   ('&ZCGPR' EQ '0').ZG233Q                            04462000
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       04462100
              AIF   (T'&ZCGPR NE 'N').ZG233Q    INVALID REG NAME        04462200
.ZG233P       ANOP  ,                                                   04462300
              AIF   (T'&ZCGPR NE 'N').ZG233R    NON NUMERIC             04462400
              AIF   ('&ZCGPR' LT '2').ZG233Q                            04462500
              AIF   ('&ZCGPR' LE '12').ZG233R                           04462600
.ZG233Q       ANOP  ,                                                   04462700
&ZMS          SETC  '"EPTOKEN='                 *KGPRA* MNOTE           04462800
&ZMS          SETC  '&ZMS.&EPTOKEN"'                                    04462900
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           04463000
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    04463100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04463200
.ZG233R       ANOP  ,                                                   04463300
.*------------------------------------------------------------------    04463400
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           04463500
.ZG235        ANOP  ,                                                   04463600
&ZXINTYPE     SETC  'INPUT'     SET IN/OUTPUT                           04463700
              AIF   (K'&XINTYPE GT 0).ZG235E    VALID ARG               04463800
              AIF   (T'&INTYPE EQ 'O').ZG235D   OMITTED                 04463900
&ZASYSLNDX    SETA  0                                                   04464000
.ZG235A       ANOP  ,           POSITIONAL MACRO KEY                    04464100
&ZASYSLNDX    SETA  &ZASYSLNDX+1                                        04464200
              AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG235C                   04464300
&ZTLC         SETC 'INTYPE'                                             04464400
              AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG235A          04464500
.ZG235B       ANOP  ,                                                   04464600
&ZXINTYPE     SETC  ''          RESET IN/OUTPUT                         04464700
&ZMS          SETC  'THE "INTYPE" KEY'          *KOPTA* MNOTE           04464800
&ZMS          SETC  '&ZMS MUST CONTAIN ONE'                             04464900
              MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                    04465000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04465100
              AGO   .ZG235E                                             04465200
.ZG235C       ANOP  ,                                                   04465300
&ZXINTYPE     SETC  ''          RESET IN/OUTPUT                         04465400
&ZMS          SETC  '"INTYPE='  *KUKWA* MNOTE                           04465500
&ZMS          SETC  '&ZMS.&INTYPE"'                                     04465600
&ZMS          SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '           04465700
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                 04465800
&ZMS          SETC  '&ZMS "D",'                 VALID KEYWORD           04465900
&ZMS          SETC  '&ZMS "N",'                 VALID KEYWORD           04466000
&ZMS          SETC  '&ZMS "P",'                 VALID KEYWORD           04466100
&ZMS          SETC  '&ZMS "S",'                 VALID KEYWORD           04466200
&ZMS          SETC  '&ZMS OR "T".'              VALID KEYWORD           04466300
              MNOTE 8,' &ZMS '                                          04466400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04466500
              AGO   .ZG235E                                             04466600
.ZG235D       ANOP  ,                                                   04466700
&XINTYPE      SETC  'D'         SET DEFAULT KEYWORD                     04466800
.ZG235E       ANOP  ,                                                   04466900
.*------------------------------------------------------------------    04467000
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           04467100
              AIF   (K'&INTYPE(1) GT 0).ZG235F  PARM                    04467200
&XINTYPE      SETC  ''          ENSURE NULL KEYWORD                     04467300
&ZXINTYPE     SETC  ''          RESET IN/OUTPUT                         04467400
&ZMS          SETC  'THE'                                               04467500
&ZMS          SETC  '&ZMS "INTYPE" KEY AND ITS ARGUMENT'                04467600
&ZMS          SETC  '&ZMS ARE REQUIRED.'                                04467700
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                 04467800
&ZMS          SETC  '&ZMS "D",'                 VALID KEYWORD           04467900
&ZMS          SETC  '&ZMS "N",'                 VALID KEYWORD           04468000
&ZMS          SETC  '&ZMS "P",'                 VALID KEYWORD           04468100
&ZMS          SETC  '&ZMS "S",'                 VALID KEYWORD           04468200
&ZMS          SETC  '&ZMS OR "T".'              VALID KEYWORD           04468300
              MNOTE 8,' &ZMS '                                          04468400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04468500
.ZG235F       ANOP  ,                                                   04468600
.*----------------------------------------------------------------***   04468700
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             04468800
              AIF   (N'&ATTRIB LE 1).ZG237A     CK NUM                  04468900
&ZMS          SETC  '"ATTRIB='  *KPOSA* MNOTE                           04469000
&ZMS          SETC  '&ZMS.&ATTRIB"'                                     04469100
&ZMS          SETC  '&ZMS "ATTRIB"'                                     04469200
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 04469300
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04469400
.ZG237A       ANOP  ,                                                   04469500
.*-------------------------------------------------------------------   04469600
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             04469700
&XATTRIB      SETC  ''          INITIALIZE XVARIABLE                    04469800
.ZG238A   AIF   ('&ATTRIB(1)' NE 'N').ZG239A                            04469900
&XATTRIB      SETC  'N'         SET KEYWORD                             04470000
.*-------------------------------------------------------------------   04470100
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             04470200
.ZG239A   AIF   ('&ATTRIB(1)' NE 'Y').ZG240A                            04470300
&XATTRIB      SETC  'Y'         SET KEYWORD                             04470400
.*-------------------------------------------------------------------   04470500
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             04470600
.ZG240A       AIF   (K'&XATTRIB GT 0).ZG240C    KEYWORD                 04470700
              AIF   (K'&ATTRIB(1) LE 0).ZG240B                          04470800
&ZMS          SETC  '"ATTRIB='  *KUKWA* MNOTE                           04470900
&ZMS          SETC  '&ZMS.&ATTRIB"'                                     04471000
&ZMS          SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '           04471100
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                 04471200
&ZMS          SETC  '&ZMS "N"'  VALID KEYWORD                           04471300
&ZMS          SETC  '&ZMS OR "Y".'              VALID KEYWORD           04471400
              MNOTE 8,' &ZMS '                                          04471500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04471600
.ZG240B       ANOP  ,                                                   04471700
&XATTRIB      SETC  'N'         SET DEFAULT KEYWORD                     04472000
.ZG240C       ANOP  ,                                                   04472800
&ZXATTRIB     SETC  'INPUT'     SET IN/OUTPUT                           04473600
.*----------------------------------------------------------------***   04474400
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             04475200
              AIF   (N'&ALIASES LE 1).ZG242A    CK NUM                  04476000
&ZMS          SETC  '"ALIASES='                 *KPOSA* MNOTE           04476800
&ZMS          SETC  '&ZMS.&ALIASES"'                                    04477600
&ZMS          SETC  '&ZMS "ALIASES"'                                    04478400
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 04479200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04480000
.ZG242A       ANOP  ,                                                   04480800
.*-------------------------------------------------------------------   04481600
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             04482400
&XALIASES     SETC  ''          INITIALIZE XVARIABLE                    04483200
.ZG243A   AIF   ('&ALIASES(1)' NE 'N').ZG244A                           04484000
&XALIASES     SETC  'N'         SET KEYWORD                             04484800
.*-------------------------------------------------------------------   04485600
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             04486400
.ZG244A   AIF   ('&ALIASES(1)' NE 'Y').ZG245A                           04487200
&XALIASES     SETC  'Y'         SET KEYWORD                             04488000
.*-------------------------------------------------------------------   04488800
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             04489600
.ZG245A       AIF   (K'&XALIASES GT 0).ZG245C   KEYWORD                 04490400
              AIF   (K'&ALIASES(1) LE 0).ZG245B                         04491200
&ZMS          SETC  '"ALIASES='                 *KUKWA* MNOTE           04492000
&ZMS          SETC  '&ZMS.&ALIASES"'                                    04492800
&ZMS          SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '           04493600
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                 04494400
&ZMS          SETC  '&ZMS "N"'  VALID KEYWORD                           04495200
&ZMS          SETC  '&ZMS OR "Y".'              VALID KEYWORD           04495700
              MNOTE 8,' &ZMS '                                          04496200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04496800
.ZG245B       ANOP  ,                                                   04497600
&XALIASES     SETC  'N'         SET DEFAULT KEYWORD                     04498400
.ZG245C       ANOP  ,                                                   04499200
&ZXALIASES    SETC  'INPUT'     SET IN/OUTPUT                           04500000
.*-------------------------------------------------------------------   04812100
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           04812200
.ZG246        ANOP  ,                                                   04812300
&ZTLC         SETC 'INSERTS'                                            04812500
              AIF   ('&FUNC(1)' NE '&ZTLC').ZG253                       04812600
&XFUNC        SETC  'INSERTS'   SET KEYWORD                             04812700
              AIF   (N'&FUNC LE 1).ZG246A       CK NUM                  04812800
&ZMS          SETC  '"FUNC='    *KPOSA* MNOTE                           04812900
&ZMS          SETC  '&ZMS.&FUNC"'                                       04813000
&ZMS          SETC  '&ZMS "FUNC"'                                       04813100
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 04813200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04813300
.ZG246A       ANOP  ,                                                   04813400
.*------------------------------------------------------------------    04813500
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           04813600
&ZCVAL        SETC ''           CLEAR ERROR KEY ACCUMULATOR             04813700
.ZG246A0      AIF   (K'&ANAME LE 0).ZG246A1     OK                      04813800
&ZCVAL        SETC '&ZCVAL ANAME'               INCORRECT KEY USED      04813900
.ZG246A1      AIF   (K'&ENAME LE 0).ZG246A2     OK                      04814000
&ZCVAL        SETC '&ZCVAL ENAME'               INCORRECT KEY USED      04814100
.ZG246A2      AIF   (K'&AMODE LE 0).ZG246A3     OK                      04814200
&ZCVAL        SETC '&ZCVAL AMODE'               INCORRECT KEY USED      04814300
.ZG246A3      AIF   (K'&ATYPE LE 0).ZG246A4     OK                      04814600
&ZCVAL        SETC '&ZCVAL ATYPE'               INCORRECT KEY USED      04814900
.ZG246A4      AIF   (K'&OLDNAME LE 0).ZG246A5   OK                      04815000
&ZCVAL        SETC '&ZCVAL OLDNAME'             INCORRECT KEY USED      04815100
.ZG246A5      AIF   (K'&NEWNAME LE 0).ZG246A6   OK                      04815200
&ZCVAL        SETC '&ZCVAL NEWNAME'             INCORRECT KEY USED      04815300
.ZG246A6      AIF   (K'&COUNT LE 0).ZG246A7     OK                      04815400
&ZCVAL        SETC '&ZCVAL COUNT'               INCORRECT KEY USED      04815500
.ZG246A7      AIF   (K'&MODE LE 0).ZG246A8      OK                      04815600
&ZCVAL        SETC '&ZCVAL MODE'                INCORRECT KEY USED      04815700
.ZG246A8      AIF   (K'&CLASS LE 0).ZG246A9     OK                      04816100
&ZCVAL        SETC '&ZCVAL CLASS'               INCORRECT KEY USED      04816500
.ZG246A9      AIF   (K'&CALLIB LE 0).ZG246A10   OK                      04816600
&ZCVAL        SETC '&ZCVAL CALLIB'              INCORRECT KEY USED      04816700
.ZG246A10     AIF   (K'&PATHNAME LE 0).ZG246A11  OK                     04816800
&ZCVAL        SETC '&ZCVAL PATHNAME'            INCORRECT KEY USED      04816900
.ZG246A11     AIF   (K'&DIALOG LE 0).ZG246A12   OK                      04817000
&ZCVAL        SETC '&ZCVAL DIALOG'              INCORRECT KEY USED      04817100
.ZG246A12     AIF   (K'&INTENT LE 0).ZG246A13   OK                      04817200
&ZCVAL        SETC '&ZCVAL INTENT'              INCORRECT KEY USED      04817300
.ZG246A13     AIF   (K'&PROTECT LE 0).ZG246A14  OK                      04817400
&ZCVAL        SETC '&ZCVAL PROTECT'             INCORRECT KEY USED      04817500
.ZG246A14     AIF   (K'&RENAMEL LE 0).ZG246A15  OK                      04817600
&ZCVAL        SETC '&ZCVAL RENAMEL'             INCORRECT KEY USED      04817700
.ZG246A15     AIF   (K'&AREA LE 0).ZG246A16     OK                      04817800
&ZCVAL        SETC '&ZCVAL AREA'                INCORRECT KEY USED      04817900
.ZG246A16     AIF   (K'&CURSOR LE 0).ZG246A17   OK                      04818000
&ZCVAL        SETC '&ZCVAL CURSOR'              INCORRECT KEY USED      04818100
.ZG246A17     AIF   (K'&RECTYPE LE 0).ZG246A18  OK                      04818200
&ZCVAL        SETC '&ZCVAL RECTYPE'             INCORRECT KEY USED      04818300
.ZG246A18     AIF   (K'&OFFSET LE 0).ZG246A19   OK                      04818400
&ZCVAL        SETC '&ZCVAL OFFSET'              INCORRECT KEY USED      04818500
.ZG246A19     AIF   (K'&SYMBOL LE 0).ZG246A20   OK                      04818600
&ZCVAL        SETC '&ZCVAL SYMBOL'              INCORRECT KEY USED      04818700
.ZG246A20     AIF   (K'&TCOUNT LE 0).ZG246A21   OK                      04818800
&ZCVAL        SETC '&ZCVAL TCOUNT'              INCORRECT KEY USED      04818900
.ZG246A21     AIF   (K'&NTYPE LE 0).ZG246A22    OK                      04819000
&ZCVAL        SETC '&ZCVAL NTYPE'               INCORRECT KEY USED      04819100
.ZG246A22     AIF   (K'&ITYPE LE 0).ZG246A23    OK                      04819200
&ZCVAL        SETC '&ZCVAL ITYPE'               INCORRECT KEY USED      04819300
.ZG246A23     AIF   (K'&DLLNAME LE 0).ZG246A24  OK                      04819400
&ZCVAL        SETC '&ZCVAL DLLNAME'             INCORRECT KEY USED      04819500
.ZG246A24     AIF   (K'&INAME LE 0).ZG246A25    OK                      04819600
&ZCVAL        SETC '&ZCVAL INAME'               INCORRECT KEY USED      04819700
.ZG246A25     AIF   (K'&INTYPE LE 0).ZG246A26   OK                      04819800
&ZCVAL        SETC '&ZCVAL INTYPE'              INCORRECT KEY USED      04819900
.ZG246A26     AIF   (K'&DDNAME LE 0).ZG246A27   OK                      04820000
&ZCVAL        SETC '&ZCVAL DDNAME'              INCORRECT KEY USED      04820100
.ZG246A27     AIF   (K'&DEPTR LE 0).ZG246A28    OK                      04820200
&ZCVAL        SETC '&ZCVAL DEPTR'               INCORRECT KEY USED      04820300
.ZG246A28     AIF   (K'&MEMBER LE 0).ZG246A29   OK                      04820400
&ZCVAL        SETC '&ZCVAL MEMBER'              INCORRECT KEY USED      04820500
.ZG246A29     AIF   (K'&DCBPTR LE 0).ZG246A30   OK                      04820600
&ZCVAL        SETC '&ZCVAL DCBPTR'              INCORRECT KEY USED      04820700
.ZG246A30     AIF   (K'&EPTOKEN LE 0).ZG246A31  OK                      04820800
&ZCVAL        SETC '&ZCVAL EPTOKEN'             INCORRECT KEY USED      04820900
.ZG246A31     AIF   (K'&ATTRIB LE 0).ZG246A32   OK                      04821000
&ZCVAL        SETC '&ZCVAL ATTRIB'              INCORRECT KEY USED      04821100
.ZG246A32     AIF   (K'&ALIASES LE 0).ZG246A33  OK                      04821200
&ZCVAL        SETC '&ZCVAL ALIASES'             INCORRECT KEY USED      04821300
.ZG246A33     AIF   (K'&EPLOC LE 0).ZG246A34    OK                      04821400
&ZCVAL        SETC '&ZCVAL EPLOC'               INCORRECT KEY USED      04821500
.ZG246A34     AIF   (K'&IDENTIFY LE 0).ZG246A35  OK                     04821600
&ZCVAL        SETC '&ZCVAL IDENTIFY'            INCORRECT KEY USED      04821700
.ZG246A35     AIF   (K'&EXTLST LE 0).ZG246A36   OK                      04821800
&ZCVAL        SETC '&ZCVAL EXTLST'              INCORRECT KEY USED      04821900
.ZG246A36     AIF   (K'&LNAME LE 0).ZG246A37    OK                      04822000
&ZCVAL        SETC '&ZCVAL LNAME'               INCORRECT KEY USED      04822100
.ZG246A37     AIF   (K'&NEWSECT LE 0).ZG246A38  OK                      04822200
&ZCVAL        SETC '&ZCVAL NEWSECT'             INCORRECT KEY USED      04822300
.ZG246A38     AIF   (K'&ENDDATA LE 0).ZG246A39  OK                      04822600
&ZCVAL        SETC '&ZCVAL ENDDATA'             INCORRECT KEY USED      04822900
.ZG246A39     AIF   (K'&MODLIB LE 0).ZG246A40   OK                      04823200
&ZCVAL        SETC '&ZCVAL MODLIB'              INCORRECT KEY USED      04823500
.ZG246A40     AIF   (K'&SNAME LE 0).ZG246A41    OK                      04823800
&ZCVAL        SETC '&ZCVAL SNAME'               INCORRECT KEY USED      04824100
.ZG246A41     AIF   (K'&REPLACE LE 0).ZG246A42  OK                      04824400
&ZCVAL        SETC '&ZCVAL REPLACE'             INCORRECT KEY USED      04824700
.ZG246A42     AIF   (K'&LIBOPT LE 0).ZG246A43   OK                      04825000
&ZCVAL        SETC '&ZCVAL LIBOPT'              INCORRECT KEY USED      04825300
.ZG246A43     AIF   (K'&OPTION LE 0).ZG246A44   OK                      04825600
&ZCVAL        SETC '&ZCVAL OPTION'              INCORRECT KEY USED      04825900
.ZG246A44     AIF   (K'&OPTVAL LE 0).ZG246A45   OK                      04826200
&ZCVAL        SETC '&ZCVAL OPTVAL'              INCORRECT KEY USED      04826500
.ZG246A45     AIF   (K'&PARMS LE 0).ZG246A46    OK                      04826600
&ZCVAL        SETC '&ZCVAL PARMS'               INCORRECT KEY USED      04826700
.ZG246A46     AIF   (K'&FILES LE 0).ZG246A47    OK                      04826900
&ZCVAL        SETC '&ZCVAL FILES'               INCORRECT KEY USED      04827100
.ZG246A47     AIF   (K'&EXITS LE 0).ZG246A48    OK                      04827400
&ZCVAL        SETC '&ZCVAL EXITS'               INCORRECT KEY USED      04827700
.ZG246A48     AIF   (K'&OPTIONS LE 0).ZG246A49  OK                      04828000
&ZCVAL        SETC '&ZCVAL OPTIONS'             INCORRECT KEY USED      04828300
.ZG246A49     AIF   (K'&ORIGIN LE 0).ZG246A50   OK                      04828600
&ZCVAL        SETC '&ZCVAL ORIGIN'              INCORRECT KEY USED      04828900
.ZG246A50     AIF   (K'&REGION LE 0).ZG246A51   OK                      04829200
&ZCVAL        SETC '&ZCVAL REGION'              INCORRECT KEY USED      04829500
.ZG246A51     AIF   (K'&ZCVAL LE 0).ZG246A52    OK                      04829800
&ZCVAL        SETC '&ZCVAL'(2,K'&ZCVAL-1)                               04830100
              AIF  (K'&ZCVAL LE 160).ZG246A52A                          04830400
&ZCVAL        SETC '&ZCVAL'(1,160)                                      04830700
&ZCVAL        SETC '&ZCVAL....'                                         04831000
.ZG246A52A    ANOP                                                      04831300
&ZMS          SETC  '"FUNC'     *KMEIA* MNOTE                           04831600
&ZMS          SETC  '&ZMS.=&FUNC"'                                      04831900
&ZMS          SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'                04832200
              MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'                04832500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04832800
.ZG246A52     ANOP  ,                                                   04833100
.*----------------------------------------------------------------***   04833400
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     04833700
              AIF   (N'&WORKMOD LE 1).ZG248A    CK NUM                  04834000
&ZMS          SETC  '"WORKMOD='                 *KPOSA* MNOTE           04834300
&ZMS          SETC  '&ZMS.&WORKMOD"'                                    04834600
&ZMS          SETC  '&ZMS "WORKMOD"'                                    04834900
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 04835200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04835500
.ZG248A       ANOP  ,                                                   04835800
.*-------------------------------------------------------------------   04836100
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         04836400
&ZXWORKMOD    SETC  'INPUT'     SET IN/OUTPUT                           04836700
&XWORKMOD     SETC  '&WORKMOD(1)'               SET XVARIABLE           04837000
              AIF   (N'&WORKMOD GT 1).ZG248B    MULTI PARMS             04837300
&XWORKMOD     SETC  '&WORKMOD'  SET XVARIABLE                           04837600
.ZG248B       AIF   (K'&WORKMOD(1) GT 0).ZG248C                         04837900
&ZXWORKMOD    SETC  ''          RESET IN/OUTPUT                         04838200
&ZMS          SETC  ' '         *KRQDA*                                 04838500
&ZMS          SETC  '&ZMS "WORKMOD" KEY AND ITS ARGUMENT'               04838800
              MNOTE 8,' &ZMS ARE REQUIRED.'                             04839100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04839400
.ZG248C       ANOP  ,                                                   04948600
.*-------------------------------------------------------------------   04949700
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    04950800
              AIF   (K'&ZXWORKMOD LE 0).ZG248R  NOT I/O                 04951900
              AIF   ('&XWORKMOD'(1,1) NE '(').ZG248R                    04953000
&ZCGPR        SETC  '&XWORKMOD'(2,K'&XWORKMOD-2)                        04954100
              AIF   ('&ZCGPR'(1,1) NE '0').ZG248P                       04955200
              AIF   (K'&ZCGPR GT 2).ZG248Q                              04956300
              AIF   ('&ZCGPR' EQ '0').ZG248Q                            04957400
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       04958500
              AIF   (T'&ZCGPR NE 'N').ZG248Q    INVALID REG NAME        04959600
.ZG248P       ANOP  ,                                                   04960700
              AIF   (T'&ZCGPR NE 'N').ZG248R    NON NUMERIC             04961800
              AIF   ('&ZCGPR' LT '2').ZG248Q                            04962900
              AIF   ('&ZCGPR' LE '12').ZG248R                           04964000
.ZG248Q       ANOP  ,                                                   04965100
&ZMS          SETC  '"WORKMOD='                 *KGPRA* MNOTE           05256600
&ZMS          SETC  '&ZMS.&WORKMOD"'                                    05256700
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           05256800
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    05256900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             05257000
.ZG248R       ANOP  ,                                                   05257100
.*----------------------------------------------------------------***   05257200
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     05257300
              AIF   (N'&SECTION LE 1).ZG251A    CK NUM                  05257400
&ZMS          SETC  '"SECTION='                 *KPOSA* MNOTE           05257500
&ZMS          SETC  '&ZMS.&SECTION"'                                    05257600
&ZMS          SETC  '&ZMS "SECTION"'                                    05257700
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 05257800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             05257900
.ZG251A       ANOP  ,                                                   05258000
.*-------------------------------------------------------------------   05258100
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         05258200
&ZXSECTION    SETC  'INPUT'     SET IN/OUTPUT                           05258300
&XSECTION     SETC  '&SECTION(1)'               SET XVARIABLE           05258400
              AIF   (N'&SECTION GT 1).ZG251B    MULTI PARMS             05258500
&XSECTION     SETC  '&SECTION'  SET XVARIABLE                           05258600
.ZG251B       AIF   (K'&SECTION(1) GT 0).ZG251C                         05258700
&ZXSECTION    SETC  ''          RESET IN/OUTPUT                         05258800
&ZMS          SETC  ' '         *KRQDA*                                 05258900
&ZMS          SETC  '&ZMS "SECTION" KEY AND ITS ARGUMENT'               05259000
              MNOTE 8,' &ZMS ARE REQUIRED.'                             05259100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             05259200
.ZG251C       ANOP  ,                                                   05259300
.*-------------------------------------------------------------------   05259400
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    05259500
              AIF   (K'&ZXSECTION LE 0).ZG251R  NOT I/O                 05259600
              AIF   ('&XSECTION'(1,1) NE '(').ZG251R                    05259700
&ZCGPR        SETC  '&XSECTION'(2,K'&XSECTION-2)                        05259800
              AIF   ('&ZCGPR'(1,1) NE '0').ZG251P                       05259900
              AIF   (K'&ZCGPR GT 2).ZG251Q                              05260000
              AIF   ('&ZCGPR' EQ '0').ZG251Q                            05260100
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       05260200
              AIF   (T'&ZCGPR NE 'N').ZG251Q    INVALID REG NAME        05260300
.ZG251P       ANOP  ,                                                   05260400
              AIF   (T'&ZCGPR NE 'N').ZG251R    NON NUMERIC             05260500
              AIF   ('&ZCGPR' LT '2').ZG251Q                            05260600
              AIF   ('&ZCGPR' LE '12').ZG251R                           05260700
.ZG251Q       ANOP  ,                                                   05260800
&ZMS          SETC  '"SECTION='                 *KGPRA* MNOTE           05260900
&ZMS          SETC  '&ZMS.&SECTION"'                                    05261000
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           05261100
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    05261200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             05261300
.ZG251R       ANOP  ,                                                   05261400
.*-------------------------------------------------------------------   05261500
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           05261600
.ZG253        ANOP  ,                                                   05261700
&ZTLC         SETC 'LOADW'                                              05261800
              AIF   ('&FUNC(1)' NE '&ZTLC').ZG274                       05261900
&XFUNC        SETC  'LOADW'     SET KEYWORD                             05262000
              AIF   (N'&FUNC LE 1).ZG253A       CK NUM                  05262100
&ZMS          SETC  '"FUNC='    *KPOSA* MNOTE                           05262200
&ZMS          SETC  '&ZMS.&FUNC"'                                       05262300
&ZMS          SETC  '&ZMS "FUNC"'                                       05262400
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 05262500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             05262600
.ZG253A       ANOP  ,                                                   05262700
.*------------------------------------------------------------------    05262800
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           05262900
&ZCVAL        SETC ''           CLEAR ERROR KEY ACCUMULATOR             05263000
.ZG253A0      AIF   (K'&ANAME LE 0).ZG253A1     OK                      05263100
&ZCVAL        SETC '&ZCVAL ANAME'               INCORRECT KEY USED      05263200
.ZG253A1      AIF   (K'&ENAME LE 0).ZG253A2     OK                      05263300
&ZCVAL        SETC '&ZCVAL ENAME'               INCORRECT KEY USED      05263400
.ZG253A2      AIF   (K'&AMODE LE 0).ZG253A3     OK                      05263500
&ZCVAL        SETC '&ZCVAL AMODE'               INCORRECT KEY USED      05263600
.ZG253A3      AIF   (K'&ATYPE LE 0).ZG253A4     OK                      05263700
&ZCVAL        SETC '&ZCVAL ATYPE'               INCORRECT KEY USED      05263800
.ZG253A4      AIF   (K'&SECTION LE 0).ZG253A5   OK                      05263900
&ZCVAL        SETC '&ZCVAL SECTION'             INCORRECT KEY USED      05264000
.ZG253A5      AIF   (K'&OLDNAME LE 0).ZG253A6   OK                      05264100
&ZCVAL        SETC '&ZCVAL OLDNAME'             INCORRECT KEY USED      05264200
.ZG253A6      AIF   (K'&NEWNAME LE 0).ZG253A7   OK                      05264300
&ZCVAL        SETC '&ZCVAL NEWNAME'             INCORRECT KEY USED      05264400
.ZG253A7      AIF   (K'&COUNT LE 0).ZG253A8     OK                      05264500
&ZCVAL        SETC '&ZCVAL COUNT'               INCORRECT KEY USED      05264600
.ZG253A8      AIF   (K'&MODE LE 0).ZG253A9      OK                      05264700
&ZCVAL        SETC '&ZCVAL MODE'                INCORRECT KEY USED      05264800
.ZG253A9      AIF   (K'&CLASS LE 0).ZG253A10    OK                      05264900
&ZCVAL        SETC '&ZCVAL CLASS'               INCORRECT KEY USED      05265000
.ZG253A10     AIF   (K'&CALLIB LE 0).ZG253A11   OK                      05265100
&ZCVAL        SETC '&ZCVAL CALLIB'              INCORRECT KEY USED      05265200
.ZG253A11     AIF   (K'&PATHNAME LE 0).ZG253A12  OK                     05265300
&ZCVAL        SETC '&ZCVAL PATHNAME'            INCORRECT KEY USED      05265400
.ZG253A12     AIF   (K'&DIALOG LE 0).ZG253A13   OK                      05265500
&ZCVAL        SETC '&ZCVAL DIALOG'              INCORRECT KEY USED      05265600
.ZG253A13     AIF   (K'&INTENT LE 0).ZG253A14   OK                      05265700
&ZCVAL        SETC '&ZCVAL INTENT'              INCORRECT KEY USED      05265800
.ZG253A14     AIF   (K'&PROTECT LE 0).ZG253A15  OK                      05265900
&ZCVAL        SETC '&ZCVAL PROTECT'             INCORRECT KEY USED      05266000
.ZG253A15     AIF   (K'&RENAMEL LE 0).ZG253A16  OK                      05266100
&ZCVAL        SETC '&ZCVAL RENAMEL'             INCORRECT KEY USED      05266200
.ZG253A16     AIF   (K'&AREA LE 0).ZG253A17     OK                      05266300
&ZCVAL        SETC '&ZCVAL AREA'                INCORRECT KEY USED      05266400
.ZG253A17     AIF   (K'&CURSOR LE 0).ZG253A18   OK                      05266500
&ZCVAL        SETC '&ZCVAL CURSOR'              INCORRECT KEY USED      05266600
.ZG253A18     AIF   (K'&RECTYPE LE 0).ZG253A19  OK                      05266700
&ZCVAL        SETC '&ZCVAL RECTYPE'             INCORRECT KEY USED      05266800
.ZG253A19     AIF   (K'&OFFSET LE 0).ZG253A20   OK                      05266900
&ZCVAL        SETC '&ZCVAL OFFSET'              INCORRECT KEY USED      05267000
.ZG253A20     AIF   (K'&SYMBOL LE 0).ZG253A21   OK                      05267100
&ZCVAL        SETC '&ZCVAL SYMBOL'              INCORRECT KEY USED      05267200
.ZG253A21     AIF   (K'&TCOUNT LE 0).ZG253A22   OK                      05267300
&ZCVAL        SETC '&ZCVAL TCOUNT'              INCORRECT KEY USED      05267400
.ZG253A22     AIF   (K'&NTYPE LE 0).ZG253A23    OK                      05267500
&ZCVAL        SETC '&ZCVAL NTYPE'               INCORRECT KEY USED      05267600
.ZG253A23     AIF   (K'&ITYPE LE 0).ZG253A24    OK                      05267700
&ZCVAL        SETC '&ZCVAL ITYPE'               INCORRECT KEY USED      05267800
.ZG253A24     AIF   (K'&DLLNAME LE 0).ZG253A25  OK                      05267900
&ZCVAL        SETC '&ZCVAL DLLNAME'             INCORRECT KEY USED      05268000
.ZG253A25     AIF   (K'&INAME LE 0).ZG253A26    OK                      05268100
&ZCVAL        SETC '&ZCVAL INAME'               INCORRECT KEY USED      05268200
.ZG253A26     AIF   (K'&INTYPE LE 0).ZG253A27   OK                      05268300
&ZCVAL        SETC '&ZCVAL INTYPE'              INCORRECT KEY USED      05268400
.ZG253A27     AIF   (K'&DDNAME LE 0).ZG253A28   OK                      05268500
&ZCVAL        SETC '&ZCVAL DDNAME'              INCORRECT KEY USED      05268600
.ZG253A28     AIF   (K'&DEPTR LE 0).ZG253A29    OK                      05268700
&ZCVAL        SETC '&ZCVAL DEPTR'               INCORRECT KEY USED      05268800
.ZG253A29     AIF   (K'&MEMBER LE 0).ZG253A30   OK                      05268900
&ZCVAL        SETC '&ZCVAL MEMBER'              INCORRECT KEY USED      05269000
.ZG253A30     AIF   (K'&DCBPTR LE 0).ZG253A31   OK                      05269100
&ZCVAL        SETC '&ZCVAL DCBPTR'              INCORRECT KEY USED      05269200
.ZG253A31     AIF   (K'&EPTOKEN LE 0).ZG253A32  OK                      05269300
&ZCVAL        SETC '&ZCVAL EPTOKEN'             INCORRECT KEY USED      05269400
.ZG253A32     AIF   (K'&ATTRIB LE 0).ZG253A33   OK                      05269500
&ZCVAL        SETC '&ZCVAL ATTRIB'              INCORRECT KEY USED      05269600
.ZG253A33     AIF   (K'&ALIASES LE 0).ZG253A34  OK                      05269700
&ZCVAL        SETC '&ZCVAL ALIASES'             INCORRECT KEY USED      05269800
.ZG253A34     AIF   (K'&NEWSECT LE 0).ZG253A35  OK                      05269900
&ZCVAL        SETC '&ZCVAL NEWSECT'             INCORRECT KEY USED      05270000
.ZG253A35     AIF   (K'&ENDDATA LE 0).ZG253A36  OK                      05270100
&ZCVAL        SETC '&ZCVAL ENDDATA'             INCORRECT KEY USED      05270200
.ZG253A36     AIF   (K'&MODLIB LE 0).ZG253A37   OK                      05270300
&ZCVAL        SETC '&ZCVAL MODLIB'              INCORRECT KEY USED      05270400
.ZG253A37     AIF   (K'&SNAME LE 0).ZG253A38    OK                      05270500
&ZCVAL        SETC '&ZCVAL SNAME'               INCORRECT KEY USED      05270600
.ZG253A38     AIF   (K'&REPLACE LE 0).ZG253A39  OK                      05270700
&ZCVAL        SETC '&ZCVAL REPLACE'             INCORRECT KEY USED      05270800
.ZG253A39     AIF   (K'&LIBOPT LE 0).ZG253A40   OK                      05270900
&ZCVAL        SETC '&ZCVAL LIBOPT'              INCORRECT KEY USED      05271000
.ZG253A40     AIF   (K'&OPTION LE 0).ZG253A41   OK                      05271100
&ZCVAL        SETC '&ZCVAL OPTION'              INCORRECT KEY USED      05271200
.ZG253A41     AIF   (K'&OPTVAL LE 0).ZG253A42   OK                      05271300
&ZCVAL        SETC '&ZCVAL OPTVAL'              INCORRECT KEY USED      05271400
.ZG253A42     AIF   (K'&PARMS LE 0).ZG253A43    OK                      05271500
&ZCVAL        SETC '&ZCVAL PARMS'               INCORRECT KEY USED      05271600
.ZG253A43     AIF   (K'&FILES LE 0).ZG253A44    OK                      05271700
&ZCVAL        SETC '&ZCVAL FILES'               INCORRECT KEY USED      05271800
.ZG253A44     AIF   (K'&EXITS LE 0).ZG253A45    OK                      05271900
&ZCVAL        SETC '&ZCVAL EXITS'               INCORRECT KEY USED      05272000
.ZG253A45     AIF   (K'&OPTIONS LE 0).ZG253A46  OK                      05272100
&ZCVAL        SETC '&ZCVAL OPTIONS'             INCORRECT KEY USED      05272200
.ZG253A46     AIF   (K'&ORIGIN LE 0).ZG253A47   OK                      05272300
&ZCVAL        SETC '&ZCVAL ORIGIN'              INCORRECT KEY USED      05272400
.ZG253A47     AIF   (K'&REGION LE 0).ZG253A48   OK                      05272500
&ZCVAL        SETC '&ZCVAL REGION'              INCORRECT KEY USED      05272600
.ZG253A48     AIF   (K'&ZCVAL LE 0).ZG253A49    OK                      05272700
&ZCVAL        SETC '&ZCVAL'(2,K'&ZCVAL-1)                               05272800
              AIF  (K'&ZCVAL LE 160).ZG253A49A                          05272900
&ZCVAL        SETC '&ZCVAL'(1,160)                                      05273000
&ZCVAL        SETC '&ZCVAL....'                                         05273100
.ZG253A49A    ANOP                                                      05273200
&ZMS          SETC  '"FUNC'     *KMEIA* MNOTE                           05273300
&ZMS          SETC  '&ZMS.=&FUNC"'                                      05273400
&ZMS          SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'                05273500
              MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'                05273600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             05273700
.ZG253A49     ANOP  ,                                                   05273800
.*----------------------------------------------------------------***   05273900
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     05274000
              AIF   (N'&WORKMOD LE 1).ZG255A    CK NUM                  05274100
&ZMS          SETC  '"WORKMOD='                 *KPOSA* MNOTE           05274200
&ZMS          SETC  '&ZMS.&WORKMOD"'                                    05274300
&ZMS          SETC  '&ZMS "WORKMOD"'                                    05274400
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 05274500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             05274600
.ZG255A       ANOP  ,                                                   05274700
.*-------------------------------------------------------------------   05274800
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         05274900
&ZXWORKMOD    SETC  'INPUT'     SET IN/OUTPUT                           05275000
&XWORKMOD     SETC  '&WORKMOD(1)'               SET XVARIABLE           05275100
              AIF   (N'&WORKMOD GT 1).ZG255B    MULTI PARMS             05275200
&XWORKMOD     SETC  '&WORKMOD'  SET XVARIABLE                           05275300
.ZG255B       AIF   (K'&WORKMOD(1) GT 0).ZG255C                         05275400
&ZXWORKMOD    SETC  ''          RESET IN/OUTPUT                         05275500
&ZMS          SETC  ' '         *KRQDA*                                 05275600
&ZMS          SETC  '&ZMS "WORKMOD" KEY AND ITS ARGUMENT'               05275700
              MNOTE 8,' &ZMS ARE REQUIRED.'                             05275800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             05275900
.ZG255C       ANOP  ,                                                   05276000
.*-------------------------------------------------------------------   05276100
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    05276200
              AIF   (K'&ZXWORKMOD LE 0).ZG255R  NOT I/O                 05276300
              AIF   ('&XWORKMOD'(1,1) NE '(').ZG255R                    05276400
&ZCGPR        SETC  '&XWORKMOD'(2,K'&XWORKMOD-2)                        05276500
              AIF   ('&ZCGPR'(1,1) NE '0').ZG255P                       05276600
              AIF   (K'&ZCGPR GT 2).ZG255Q                              05276700
              AIF   ('&ZCGPR' EQ '0').ZG255Q                            05276800
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       05276900
              AIF   (T'&ZCGPR NE 'N').ZG255Q    INVALID REG NAME        05277000
.ZG255P       ANOP  ,                                                   05277100
              AIF   (T'&ZCGPR NE 'N').ZG255R    NON NUMERIC             05277200
              AIF   ('&ZCGPR' LT '2').ZG255Q                            05277300
              AIF   ('&ZCGPR' LE '12').ZG255R                           05277400
.ZG255Q       ANOP  ,                                                   05277500
&ZMS          SETC  '"WORKMOD='                 *KGPRA* MNOTE           05277600
&ZMS          SETC  '&ZMS.&WORKMOD"'                                    05277700
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           05277800
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    05277900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             05278000
.ZG255R       ANOP  ,                                                   05278100
.*----------------------------------------------------------------***   05278200
.***AG.KXVAR05 NAME, RQD OUTPUT, KEYS -XVARIABLE KEY                    05278300
              AIF   (N'&EPLOC LE 1).ZG258A      CK NUM                  05278400
&ZMS          SETC  '"EPLOC='   *KPOSA* MNOTE                           05278500
&ZMS          SETC  '&ZMS.&EPLOC"'                                      05278600
&ZMS          SETC  '&ZMS "EPLOC"'                                      05278700
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 05278800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             05278900
.ZG258A       ANOP  ,                                                   05279000
.*-------------------------------------------------------------------   05279100
.***AG.KXVAR06 NAME, RQD OUTPUT, KEYS -XVARIABLE                        05279200
&ZXEPLOC      SETC  'OUTPUT'    SET IN/OUTPUT                           05279300
&XEPLOC       SETC  '&EPLOC(1)'                 SET XVARIABLE           05279400
              AIF   (N'&EPLOC GT 1).ZG258B      MULTI PARMS             05279500
&XEPLOC       SETC  '&EPLOC'    SET XVARIABLE                           05279600
.ZG258B       AIF   (K'&EPLOC(1) GT 0).ZG258C                           05279700
&ZXEPLOC      SETC  ''          RESET IN/OUTPUT                         05279800
&ZMS          SETC  ' '         *KRQDA*                                 05279900
&ZMS          SETC  '&ZMS "EPLOC" KEY AND ITS ARGUMENT'                 05280000
              MNOTE 8,' &ZMS ARE REQUIRED.'                             05280100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             05280200
.ZG258C       ANOP  ,                                                   05280300
.*-------------------------------------------------------------------   05280400
.***AG.KCK02 NAME, RQD OUTPUT, KEYS -GPR OUT OF RANGE                   05280500
              AIF   (K'&ZXEPLOC LE 0).ZG258R    NOT I/O                 05280600
              AIF   ('&XEPLOC'(1,1) NE '(').ZG258R                      05280700
&ZCGPR        SETC  '&XEPLOC'(2,K'&XEPLOC-2)                            05280800
              AIF   ('&ZCGPR'(1,1) NE '0').ZG258P                       05280900
              AIF   (K'&ZCGPR GT 2).ZG258Q                              05281000
              AIF   ('&ZCGPR' EQ '0').ZG258Q                            05281100
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       05281200
              AIF   (T'&ZCGPR NE 'N').ZG258Q    INVALID REG NAME        05281300
.ZG258P       ANOP  ,                                                   05281400
              AIF   (T'&ZCGPR NE 'N').ZG258R    NON NUMERIC             05281500
              AIF   ('&ZCGPR' LT '2').ZG258Q                            05281600
              AIF   ('&ZCGPR' LE '12').ZG258R                           05281700
.ZG258Q       ANOP  ,                                                   05281800
&ZMS          SETC  '"EPLOC='   *KGPRA* MNOTE                           05281900
&ZMS          SETC  '&ZMS.&EPLOC"'                                      05282000
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           05282100
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    05282200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             05282300
.ZG258R       ANOP  ,                                                   05282400
.*------------------------------------------------------------------    05282500
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           05282600
&XIDENTIFY    SETC  ''          INITIALIZE XVARIABLE                    05282700
.*-------------------------------------------------------------------   05282800
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           05282900
.ZG262        ANOP  ,                                                   05283000
              AIF   (K'&IDENTIFY(1) LE 0).ZG262A                        05283100
&ZTLC         SETC 'N'                                                  05283200
              AIF   ('&IDENTIFY(1)' NE '&ZTLC').ZG266                   05283300
&XIDENTIFY    SETC  'N'         SET KEYWORD                             05283400
              AIF   (N'&IDENTIFY LE 1).ZG262A   CK NUM                  05283500
&ZMS          SETC  '"IDENTIFY='                *KPOSA* MNOTE           05283600
&ZMS          SETC  '&ZMS.&IDENTIFY"'                                   05283700
&ZMS          SETC  '&ZMS "IDENTIFY"'                                   05284100
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 05285200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             05286300
.ZG262A       ANOP  ,                                                   05286400
.*------------------------------------------------------------------    05286500
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           05286600
&ZCVAL        SETC ''           CLEAR ERROR KEY ACCUMULATOR             05286700
.ZG262A0      AIF   (K'&LNAME LE 0).ZG262A1     OK                      05286800
&ZCVAL        SETC '&ZCVAL LNAME'               INCORRECT KEY USED      05286900
.ZG262A1      AIF   (K'&ZCVAL LE 0).ZG262A2     OK                      05287000
&ZCVAL        SETC '&ZCVAL'(2,K'&ZCVAL-1)                               05287100
&ZMS          SETC  '"IDENTIFY'                 *KMEIA* MNOTE           05287200
&ZMS          SETC  '&ZMS.=&IDENTIFY"'                                  05287300
&ZMS          SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'                05287400
              MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'                05287500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             05287600
.ZG262A2      ANOP  ,                                                   05288000
.*----------------------------------------------------------------***   05288500
.***AG.KXVAR05 NAME, RQD OUTPUT, KEYS -XVARIABLE KEY                    05289600
              AIF   (N'&EXTLST LE 1).ZG264A     CK NUM                  05290700
&ZMS          SETC  '"EXTLST='  *KPOSA* MNOTE                           05291800
&ZMS          SETC  '&ZMS.&EXTLST"'                                     05292900
&ZMS          SETC  '&ZMS "EXTLST"'                                     05294000
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 05295100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             05296200
.ZG264A       ANOP  ,                                                   05297300
.*-------------------------------------------------------------------   05298400
.***AG.KXVAR06 NAME, RQD OUTPUT, KEYS -XVARIABLE                        05299800
&ZXEXTLST     SETC  'OUTPUT'    SET IN/OUTPUT                           05301200
&XEXTLST      SETC  '&EXTLST(1)'                SET XVARIABLE           05302800
              AIF   (N'&EXTLST GT 1).ZG264B     MULTI PARMS             05303900
&XEXTLST      SETC  '&EXTLST'   SET XVARIABLE                           05305000
.ZG264B       AIF   (K'&EXTLST(1) GT 0).ZG264C                          05305200
&ZXEXTLST     SETC  ''          RESET IN/OUTPUT                         05305400
&ZMS          SETC  ' '         *KRQDA*                                 05305600
&ZMS          SETC  '&ZMS "EXTLST" KEY AND ITS ARGUMENT'                05305800
              MNOTE 8,' &ZMS ARE REQUIRED.'                             05306000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             05306200
.ZG264C       ANOP  ,                                                   05306700
.*-------------------------------------------------------------------   05307200
.***AG.KCK02 NAME, RQD OUTPUT, KEYS -GPR OUT OF RANGE                   05308300
              AIF   (K'&ZXEXTLST LE 0).ZG264R   NOT I/O                 05309400
              AIF   ('&XEXTLST'(1,1) NE '(').ZG264R                     05310500
&ZCGPR        SETC  '&XEXTLST'(2,K'&XEXTLST-2)                          05311600
              AIF   ('&ZCGPR'(1,1) NE '0').ZG264P                       05316600
              AIF   (K'&ZCGPR GT 2).ZG264Q                              05321600
              AIF   ('&ZCGPR' EQ '0').ZG264Q                            05326600
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       05331800
              AIF   (T'&ZCGPR NE 'N').ZG264Q    INVALID REG NAME        05332000
.ZG264P       ANOP  ,                                                   05332200
              AIF   (T'&ZCGPR NE 'N').ZG264R    NON NUMERIC             05332400
              AIF   ('&ZCGPR' LT '2').ZG264Q                            05332600
              AIF   ('&ZCGPR' LE '12').ZG264R                           05332800
.ZG264Q       ANOP  ,                                                   05333000
&ZMS          SETC  '"EXTLST='  *KGPRA* MNOTE                           05333200
&ZMS          SETC  '&ZMS.&EXTLST"'                                     05333400
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           05333600
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    05333800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             05334000
.ZG264R       ANOP  ,                                                   05334100
.*-------------------------------------------------------------------   05334200
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           05334300
.ZG266        ANOP  ,                                                   05334400
&ZTLC         SETC 'Y'                                                  05334500
              AIF   ('&IDENTIFY(1)' NE '&ZTLC').ZG273                   05334600
&XIDENTIFY    SETC  'Y'         SET KEYWORD                             05334700
              AIF   (N'&IDENTIFY LE 1).ZG266A   CK NUM                  05334800
&ZMS          SETC  '"IDENTIFY='                *KPOSA* MNOTE           05334900
&ZMS          SETC  '&ZMS.&IDENTIFY"'                                   05335000
&ZMS          SETC  '&ZMS "IDENTIFY"'                                   05335100
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 05335200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             05335300
.ZG266A       ANOP  ,                                                   05335400
.*----------------------------------------------------------------***   05335500
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    05335600
              AIF   (N'&EXTLST LE 1).ZG268A     CK NUM                  05335700
&ZMS          SETC  '"EXTLST='  *KPOSA* MNOTE                           05335800
&ZMS          SETC  '&ZMS.&EXTLST"'                                     05335900
&ZMS          SETC  '&ZMS "EXTLST"'                                     05336000
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 05336100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             05336200
.ZG268A       ANOP  ,                                                   05336300
.*-------------------------------------------------------------------   05336400
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        05336500
              AIF   (K'&EXTLST(1) LE 0).ZG268C  NO PARM                 05336600
&ZXEXTLST     SETC  'OUTPUT'    SET OUTPUT                              05336700
&XEXTLST      SETC  '&EXTLST(1)'                SET XVARIABLE           05336800
              AIF   (N'&EXTLST GT 1).ZG268C                             05336900
&XEXTLST      SETC  '&EXTLST'   SET XVARIABLE                           05337000
.ZG268C       ANOP  ,                                                   05337100
.*-------------------------------------------------------------------   05337200
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   05337300
              AIF   (K'&ZXEXTLST LE 0).ZG268R   NOT I/O                 05337400
              AIF   ('&XEXTLST'(1,1) NE '(').ZG268R                     05337500
&ZCGPR        SETC  '&XEXTLST'(2,K'&XEXTLST-2)                          05337600
              AIF   ('&ZCGPR'(1,1) NE '0').ZG268P                       05341700
              AIF   (K'&ZCGPR GT 2).ZG268Q                              05341800
              AIF   ('&ZCGPR' EQ '0').ZG268Q                            05341900
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       05342000
              AIF   (T'&ZCGPR NE 'N').ZG268Q    INVALID REG NAME        05342100
.ZG268P       ANOP  ,                                                   05342200
              AIF   (T'&ZCGPR NE 'N').ZG268R    NON NUMERIC             05342300
              AIF   ('&ZCGPR' LT '2').ZG268Q                            05342400
              AIF   ('&ZCGPR' LE '12').ZG268R                           05342500
.ZG268Q       ANOP  ,                                                   05342600
&ZMS          SETC  '"EXTLST='  *KGPRA* MNOTE                           05342700
&ZMS          SETC  '&ZMS.&EXTLST"'                                     05342800
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           05342900
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    05343000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             05343100
.ZG268R       ANOP  ,                                                   05343200
.*----------------------------------------------------------------***   05343300
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     05343400
              AIF   (N'&LNAME LE 1).ZG271A      CK NUM                  05343500
&ZMS          SETC  '"LNAME='   *KPOSA* MNOTE                           05343600
&ZMS          SETC  '&ZMS.&LNAME"'                                      05343700
&ZMS          SETC  '&ZMS "LNAME"'                                      05343800
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 05343900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             05344000
.ZG271A       ANOP  ,                                                   05344100
.*-------------------------------------------------------------------   05344200
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         05344300
&ZXLNAME      SETC  'INPUT'     SET IN/OUTPUT                           05344400
&XLNAME       SETC  '0'                                                 05344500
              AIF   (K'&LNAME(1) LE 0).ZG271B   PARM                    05344600
&XLNAME       SETC  '&LNAME(1)'                 SET XVARIABLE           05344700
              AIF   (N'&LNAME GT 1).ZG271B      MULTI PARMS             05344800
&XLNAME       SETC  '&LNAME'    SET XVARIABLE                           05344900
.ZG271B       ANOP  ,                                                   05345000
.*-------------------------------------------------------------------   05345100
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    05345200
              AIF   (K'&ZXLNAME LE 0).ZG271R    NOT I/O                 05345300
              AIF   ('&XLNAME' EQ '0').ZG271R                           05345400
              AIF   ('&XLNAME'(1,1) NE '(').ZG271R                      05345500
&ZCGPR        SETC  '&XLNAME'(2,K'&XLNAME-2)                            05345600
              AIF   ('&ZCGPR'(1,1) NE '0').ZG271P                       05345700
              AIF   (K'&ZCGPR GT 2).ZG271Q                              05345800
              AIF   ('&ZCGPR' EQ '0').ZG271Q                            05345900
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       05346000
              AIF   (T'&ZCGPR NE 'N').ZG271Q    INVALID REG NAME        05346100
.ZG271P       ANOP  ,                                                   05346200
              AIF   (T'&ZCGPR NE 'N').ZG271R    NON NUMERIC             05346300
              AIF   ('&ZCGPR' LT '2').ZG271Q                            05346400
              AIF   ('&ZCGPR' LE '12').ZG271R                           05346500
.ZG271Q       ANOP  ,                                                   05346600
&ZMS          SETC  '"LNAME='   *KGPRA* MNOTE                           05346700
&ZMS          SETC  '&ZMS.&LNAME"'                                      05346800
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           05346900
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    05347000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             05347100
.ZG271R       ANOP  ,                                                   05347200
.*------------------------------------------------------------------    05347300
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           05347400
.ZG273        ANOP  ,                                                   05347500
&ZXIDENTIFY   SETC  'INPUT'     SET IN/OUTPUT                           05347600
              AIF   (K'&XIDENTIFY GT 0).ZG273E  VALID ARG               05347700
              AIF   (T'&IDENTIFY EQ 'O').ZG273D  OMITTED                05347800
&ZASYSLNDX    SETA  0                                                   05347900
.ZG273A       ANOP  ,           POSITIONAL MACRO KEY                    05348000
&ZASYSLNDX    SETA  &ZASYSLNDX+1                                        05348100
              AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG273C                   05348200
&ZTLC         SETC 'IDENTIFY'                                           05348300
              AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG273A          05348400
.ZG273B       ANOP  ,                                                   05348500
&ZXIDENTIFY   SETC  ''          RESET IN/OUTPUT                         05348600
&ZMS          SETC  'THE "IDENTIFY" KEY'        *KOPTA* MNOTE           05348700
&ZMS          SETC  '&ZMS MUST CONTAIN ONE'                             05348800
              MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                    05348900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             05349000
              AGO   .ZG273E                                             05349100
.ZG273C       ANOP  ,                                                   05349200
&ZXIDENTIFY   SETC  ''          RESET IN/OUTPUT                         05349300
&ZMS          SETC  '"IDENTIFY='                *KUKWA* MNOTE           05349400
&ZMS          SETC  '&ZMS.&IDENTIFY"'                                   05349500
&ZMS          SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '           05349600
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                 05349700
&ZMS          SETC  '&ZMS "N"'  VALID KEYWORD                           05349800
&ZMS          SETC  '&ZMS OR "Y".'              VALID KEYWORD           05349900
              MNOTE 8,' &ZMS '                                          05350000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             05350100
              AGO   .ZG273E                                             05350200
.ZG273D       ANOP  ,                                                   05350300
&XIDENTIFY    SETC  'N'         SET DEFAULT KEYWORD                     05350400
.ZG273E       ANOP  ,                                                   05350500
.*------------------------------------------------------------------    05350600
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           05350700
              AIF   (K'&IDENTIFY(1) GT 0).ZG273F  PARM                  05350800
&XIDENTIFY    SETC  ''          ENSURE NULL KEYWORD                     05350900
&ZXIDENTIFY   SETC  ''          RESET IN/OUTPUT                         05351000
&ZMS          SETC  'THE'                                               05351100
&ZMS          SETC  '&ZMS "IDENTIFY" KEY AND ITS ARGUMENT'              05351200
&ZMS          SETC  '&ZMS ARE REQUIRED.'                                05351300
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                 05351400
&ZMS          SETC  '&ZMS "N"'  VALID KEYWORD                           05351500
&ZMS          SETC  '&ZMS OR "Y".'              VALID KEYWORD           05351600
              MNOTE 8,' &ZMS '                                          05351700
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             05351800
.ZG273F       ANOP  ,                                                   05351900
.*-------------------------------------------------------------------   05352000
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           05352100
.ZG274        ANOP  ,                                                   05352300
&ZTLC         SETC 'ORDERS'                                             05352600
              AIF   ('&FUNC(1)' NE '&ZTLC').ZG281                       05352800
&XFUNC        SETC  'ORDERS'    SET KEYWORD                             05353000
              AIF   (N'&FUNC LE 1).ZG274A       CK NUM                  05353200
&ZMS          SETC  '"FUNC='    *KPOSA* MNOTE                           05353400
&ZMS          SETC  '&ZMS.&FUNC"'                                       05353600
&ZMS          SETC  '&ZMS "FUNC"'                                       05353800
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 05354000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             05354200
.ZG274A       ANOP  ,                                                   05354400
.*------------------------------------------------------------------    05354600
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           05354800
&ZCVAL        SETC ''           CLEAR ERROR KEY ACCUMULATOR             05355000
.ZG274A0      AIF   (K'&ANAME LE 0).ZG274A1     OK                      05355200
&ZCVAL        SETC '&ZCVAL ANAME'               INCORRECT KEY USED      05355400
.ZG274A1      AIF   (K'&ENAME LE 0).ZG274A2     OK                      05355600
&ZCVAL        SETC '&ZCVAL ENAME'               INCORRECT KEY USED      05355800
.ZG274A2      AIF   (K'&AMODE LE 0).ZG274A3     OK                      05356000
&ZCVAL        SETC '&ZCVAL AMODE'               INCORRECT KEY USED      05356200
.ZG274A3      AIF   (K'&ATYPE LE 0).ZG274A4     OK                      05356600
&ZCVAL        SETC '&ZCVAL ATYPE'               INCORRECT KEY USED      05357000
.ZG274A4      AIF   (K'&OLDNAME LE 0).ZG274A5   OK                      05357100
&ZCVAL        SETC '&ZCVAL OLDNAME'             INCORRECT KEY USED      05357200
.ZG274A5      AIF   (K'&NEWNAME LE 0).ZG274A6   OK                      05357300
&ZCVAL        SETC '&ZCVAL NEWNAME'             INCORRECT KEY USED      05357400
.ZG274A6      AIF   (K'&COUNT LE 0).ZG274A7     OK                      05357600
&ZCVAL        SETC '&ZCVAL COUNT'               INCORRECT KEY USED      05357800
.ZG274A7      AIF   (K'&MODE LE 0).ZG274A8      OK                      05358000
&ZCVAL        SETC '&ZCVAL MODE'                INCORRECT KEY USED      05358200
.ZG274A8      AIF   (K'&CLASS LE 0).ZG274A9     OK                      05358400
&ZCVAL        SETC '&ZCVAL CLASS'               INCORRECT KEY USED      05358600
.ZG274A9      AIF   (K'&CALLIB LE 0).ZG274A10   OK                      05358800
&ZCVAL        SETC '&ZCVAL CALLIB'              INCORRECT KEY USED      05359000
.ZG274A10     AIF   (K'&PATHNAME LE 0).ZG274A11  OK                     05359100
&ZCVAL        SETC '&ZCVAL PATHNAME'            INCORRECT KEY USED      05359200
.ZG274A11     AIF   (K'&DIALOG LE 0).ZG274A12   OK                      05359300
&ZCVAL        SETC '&ZCVAL DIALOG'              INCORRECT KEY USED      05359400
.ZG274A12     AIF   (K'&INTENT LE 0).ZG274A13   OK                      05359600
&ZCVAL        SETC '&ZCVAL INTENT'              INCORRECT KEY USED      05359800
.ZG274A13     AIF   (K'&PROTECT LE 0).ZG274A14  OK                      05360000
&ZCVAL        SETC '&ZCVAL PROTECT'             INCORRECT KEY USED      05360200
.ZG274A14     AIF   (K'&RENAMEL LE 0).ZG274A15  OK                      05360300
&ZCVAL        SETC '&ZCVAL RENAMEL'             INCORRECT KEY USED      05360400
.ZG274A15     AIF   (K'&AREA LE 0).ZG274A16     OK                      05360500
&ZCVAL        SETC '&ZCVAL AREA'                INCORRECT KEY USED      05360600
.ZG274A16     AIF   (K'&CURSOR LE 0).ZG274A17   OK                      05360800
&ZCVAL        SETC '&ZCVAL CURSOR'              INCORRECT KEY USED      05361000
.ZG274A17     AIF   (K'&RECTYPE LE 0).ZG274A18  OK                      05361200
&ZCVAL        SETC '&ZCVAL RECTYPE'             INCORRECT KEY USED      05361400
.ZG274A18     AIF   (K'&OFFSET LE 0).ZG274A19   OK                      05361600
&ZCVAL        SETC '&ZCVAL OFFSET'              INCORRECT KEY USED      05361800
.ZG274A19     AIF   (K'&SYMBOL LE 0).ZG274A20   OK                      05362000
&ZCVAL        SETC '&ZCVAL SYMBOL'              INCORRECT KEY USED      05362200
.ZG274A20     AIF   (K'&TCOUNT LE 0).ZG274A21   OK                      05362400
&ZCVAL        SETC '&ZCVAL TCOUNT'              INCORRECT KEY USED      05362600
.ZG274A21     AIF   (K'&NTYPE LE 0).ZG274A22    OK                      05362800
&ZCVAL        SETC '&ZCVAL NTYPE'               INCORRECT KEY USED      05363000
.ZG274A22     AIF   (K'&ITYPE LE 0).ZG274A23    OK                      05363100
&ZCVAL        SETC '&ZCVAL ITYPE'               INCORRECT KEY USED      05363200
.ZG274A23     AIF   (K'&DLLNAME LE 0).ZG274A24  OK                      05363300
&ZCVAL        SETC '&ZCVAL DLLNAME'             INCORRECT KEY USED      05363400
.ZG274A24     AIF   (K'&INAME LE 0).ZG274A25    OK                      05363500
&ZCVAL        SETC '&ZCVAL INAME'               INCORRECT KEY USED      05363600
.ZG274A25     AIF   (K'&INTYPE LE 0).ZG274A26   OK                      05363700
&ZCVAL        SETC '&ZCVAL INTYPE'              INCORRECT KEY USED      05363800
.ZG274A26     AIF   (K'&DDNAME LE 0).ZG274A27   OK                      05363900
&ZCVAL        SETC '&ZCVAL DDNAME'              INCORRECT KEY USED      05364000
.ZG274A27     AIF   (K'&DEPTR LE 0).ZG274A28    OK                      05364100
&ZCVAL        SETC '&ZCVAL DEPTR'               INCORRECT KEY USED      05364200
.ZG274A28     AIF   (K'&MEMBER LE 0).ZG274A29   OK                      05364400
&ZCVAL        SETC '&ZCVAL MEMBER'              INCORRECT KEY USED      05364600
.ZG274A29     AIF   (K'&DCBPTR LE 0).ZG274A30   OK                      05364800
&ZCVAL        SETC '&ZCVAL DCBPTR'              INCORRECT KEY USED      05365000
.ZG274A30     AIF   (K'&EPTOKEN LE 0).ZG274A31  OK                      05365200
&ZCVAL        SETC '&ZCVAL EPTOKEN'             INCORRECT KEY USED      05365400
.ZG274A31     AIF   (K'&ATTRIB LE 0).ZG274A32   OK                      05365600
&ZCVAL        SETC '&ZCVAL ATTRIB'              INCORRECT KEY USED      05365800
.ZG274A32     AIF   (K'&ALIASES LE 0).ZG274A33  OK                      05366000
&ZCVAL        SETC '&ZCVAL ALIASES'             INCORRECT KEY USED      05366200
.ZG274A33     AIF   (K'&EPLOC LE 0).ZG274A34    OK                      05366400
&ZCVAL        SETC '&ZCVAL EPLOC'               INCORRECT KEY USED      05366600
.ZG274A34     AIF   (K'&IDENTIFY LE 0).ZG274A35  OK                     05366800
&ZCVAL        SETC '&ZCVAL IDENTIFY'            INCORRECT KEY USED      05367000
.ZG274A35     AIF   (K'&EXTLST LE 0).ZG274A36   OK                      05367200
&ZCVAL        SETC '&ZCVAL EXTLST'              INCORRECT KEY USED      05367400
.ZG274A36     AIF   (K'&LNAME LE 0).ZG274A37    OK                      05367600
&ZCVAL        SETC '&ZCVAL LNAME'               INCORRECT KEY USED      05367800
.ZG274A37     AIF   (K'&NEWSECT LE 0).ZG274A38  OK                      05368000
&ZCVAL        SETC '&ZCVAL NEWSECT'             INCORRECT KEY USED      05368200
.ZG274A38     AIF   (K'&ENDDATA LE 0).ZG274A39  OK                      05368400
&ZCVAL        SETC '&ZCVAL ENDDATA'             INCORRECT KEY USED      05368600
.ZG274A39     AIF   (K'&MODLIB LE 0).ZG274A40   OK                      05368800
&ZCVAL        SETC '&ZCVAL MODLIB'              INCORRECT KEY USED      05369000
.ZG274A40     AIF   (K'&SNAME LE 0).ZG274A41    OK                      05369200
&ZCVAL        SETC '&ZCVAL SNAME'               INCORRECT KEY USED      05369400
.ZG274A41     AIF   (K'&REPLACE LE 0).ZG274A42  OK                      05369600
&ZCVAL        SETC '&ZCVAL REPLACE'             INCORRECT KEY USED      05369800
.ZG274A42     AIF   (K'&LIBOPT LE 0).ZG274A43   OK                      05370000
&ZCVAL        SETC '&ZCVAL LIBOPT'              INCORRECT KEY USED      05370200
.ZG274A43     AIF   (K'&OPTION LE 0).ZG274A44   OK                      05370400
&ZCVAL        SETC '&ZCVAL OPTION'              INCORRECT KEY USED      05370600
.ZG274A44     AIF   (K'&OPTVAL LE 0).ZG274A45   OK                      05370800
&ZCVAL        SETC '&ZCVAL OPTVAL'              INCORRECT KEY USED      05371000
.ZG274A45     AIF   (K'&PARMS LE 0).ZG274A46    OK                      05371200
&ZCVAL        SETC '&ZCVAL PARMS'               INCORRECT KEY USED      05371400
.ZG274A46     AIF   (K'&FILES LE 0).ZG274A47    OK                      05371600
&ZCVAL        SETC '&ZCVAL FILES'               INCORRECT KEY USED      05371800
.ZG274A47     AIF   (K'&EXITS LE 0).ZG274A48    OK                      05372000
&ZCVAL        SETC '&ZCVAL EXITS'               INCORRECT KEY USED      05372200
.ZG274A48     AIF   (K'&OPTIONS LE 0).ZG274A49  OK                      05372400
&ZCVAL        SETC '&ZCVAL OPTIONS'             INCORRECT KEY USED      05372600
.ZG274A49     AIF   (K'&ORIGIN LE 0).ZG274A50   OK                      05372800
&ZCVAL        SETC '&ZCVAL ORIGIN'              INCORRECT KEY USED      05373000
.ZG274A50     AIF   (K'&REGION LE 0).ZG274A51   OK                      05373200
&ZCVAL        SETC '&ZCVAL REGION'              INCORRECT KEY USED      05373400
.ZG274A51     AIF   (K'&ZCVAL LE 0).ZG274A52    OK                      05373600
&ZCVAL        SETC '&ZCVAL'(2,K'&ZCVAL-1)                               05373800
              AIF  (K'&ZCVAL LE 160).ZG274A52A                          05374000
&ZCVAL        SETC '&ZCVAL'(1,160)                                      05374200
&ZCVAL        SETC '&ZCVAL....'                                         05374400
.ZG274A52A    ANOP                                                      05374600
&ZMS          SETC  '"FUNC'     *KMEIA* MNOTE                           05374800
&ZMS          SETC  '&ZMS.=&FUNC"'                                      05375000
&ZMS          SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'                05375200
              MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'                05375400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             05375600
.ZG274A52     ANOP  ,                                                   05375800
.*----------------------------------------------------------------***   05376000
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     05376200
              AIF   (N'&WORKMOD LE 1).ZG276A    CK NUM                  05376400
&ZMS          SETC  '"WORKMOD='                 *KPOSA* MNOTE           05376600
&ZMS          SETC  '&ZMS.&WORKMOD"'                                    05376800
&ZMS          SETC  '&ZMS "WORKMOD"'                                    05377000
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 05377200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             05377400
.ZG276A       ANOP  ,                                                   05377600
.*-------------------------------------------------------------------   05377800
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         05378000
&ZXWORKMOD    SETC  'INPUT'     SET IN/OUTPUT                           05378200
&XWORKMOD     SETC  '&WORKMOD(1)'               SET XVARIABLE           05378400
              AIF   (N'&WORKMOD GT 1).ZG276B    MULTI PARMS             05378600
&XWORKMOD     SETC  '&WORKMOD'  SET XVARIABLE                           05378800
.ZG276B       AIF   (K'&WORKMOD(1) GT 0).ZG276C                         05379000
&ZXWORKMOD    SETC  ''          RESET IN/OUTPUT                         05379200
&ZMS          SETC  ' '         *KRQDA*                                 05379400
&ZMS          SETC  '&ZMS "WORKMOD" KEY AND ITS ARGUMENT'               05379600
              MNOTE 8,' &ZMS ARE REQUIRED.'                             05379800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             05380000
.ZG276C       ANOP  ,                                                   05401200
.*-------------------------------------------------------------------   05401300
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    05401400
              AIF   (K'&ZXWORKMOD LE 0).ZG276R  NOT I/O                 05401500
              AIF   ('&XWORKMOD'(1,1) NE '(').ZG276R                    05401600
&ZCGPR        SETC  '&XWORKMOD'(2,K'&XWORKMOD-2)                        05401700
              AIF   ('&ZCGPR'(1,1) NE '0').ZG276P                       05401800
              AIF   (K'&ZCGPR GT 2).ZG276Q                              05401900
              AIF   ('&ZCGPR' EQ '0').ZG276Q                            05402000
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       05402100
              AIF   (T'&ZCGPR NE 'N').ZG276Q    INVALID REG NAME        05402200
.ZG276P       ANOP  ,                                                   05402300
              AIF   (T'&ZCGPR NE 'N').ZG276R    NON NUMERIC             05402400
              AIF   ('&ZCGPR' LT '2').ZG276Q                            05402500
              AIF   ('&ZCGPR' LE '12').ZG276R                           05402600
.ZG276Q       ANOP  ,                                                   05402700
&ZMS          SETC  '"WORKMOD='                 *KGPRA* MNOTE           05873400
&ZMS          SETC  '&ZMS.&WORKMOD"'                                    05873500
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           05873600
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    05873700
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             05873800
.ZG276R       ANOP  ,                                                   05873900
.*----------------------------------------------------------------***   05874000
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     05874100
              AIF   (N'&SECTION LE 1).ZG279A    CK NUM                  05874200
&ZMS          SETC  '"SECTION='                 *KPOSA* MNOTE           05874300
&ZMS          SETC  '&ZMS.&SECTION"'                                    05874400
&ZMS          SETC  '&ZMS "SECTION"'                                    05874500
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 05874600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             05874700
.ZG279A       ANOP  ,                                                   05874800
.*-------------------------------------------------------------------   05874900
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         05875000
&ZXSECTION    SETC  'INPUT'     SET IN/OUTPUT                           05875100
&XSECTION     SETC  '&SECTION(1)'               SET XVARIABLE           05875200
              AIF   (N'&SECTION GT 1).ZG279B    MULTI PARMS             05875300
&XSECTION     SETC  '&SECTION'  SET XVARIABLE                           05875400
.ZG279B       AIF   (K'&SECTION(1) GT 0).ZG279C                         05875500
&ZXSECTION    SETC  ''          RESET IN/OUTPUT                         05875600
&ZMS          SETC  ' '         *KRQDA*                                 05875700
&ZMS          SETC  '&ZMS "SECTION" KEY AND ITS ARGUMENT'               05875800
              MNOTE 8,' &ZMS ARE REQUIRED.'                             05875900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             05876000
.ZG279C       ANOP  ,                                                   05876100
.*-------------------------------------------------------------------   05876200
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    05876300
              AIF   (K'&ZXSECTION LE 0).ZG279R  NOT I/O                 05876400
              AIF   ('&XSECTION'(1,1) NE '(').ZG279R                    05876500
&ZCGPR        SETC  '&XSECTION'(2,K'&XSECTION-2)                        05876600
              AIF   ('&ZCGPR'(1,1) NE '0').ZG279P                       05876700
              AIF   (K'&ZCGPR GT 2).ZG279Q                              05876800
              AIF   ('&ZCGPR' EQ '0').ZG279Q                            05876900
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       05877000
              AIF   (T'&ZCGPR NE 'N').ZG279Q    INVALID REG NAME        05877100
.ZG279P       ANOP  ,                                                   05877200
              AIF   (T'&ZCGPR NE 'N').ZG279R    NON NUMERIC             05877300
              AIF   ('&ZCGPR' LT '2').ZG279Q                            05877400
              AIF   ('&ZCGPR' LE '12').ZG279R                           05877500
.ZG279Q       ANOP  ,                                                   05877600
&ZMS          SETC  '"SECTION='                 *KGPRA* MNOTE           05877700
&ZMS          SETC  '&ZMS.&SECTION"'                                    05877800
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           05877900
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    05878000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             05878100
.ZG279R       ANOP  ,                                                   05878200
.*-------------------------------------------------------------------   05878300
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           05878400
.ZG281        ANOP  ,                                                   05878500
&ZTLC         SETC 'PUTD'                                               05878600
              AIF   ('&FUNC(1)' NE '&ZTLC').ZG310                       05878700
&XFUNC        SETC  'PUTD'      SET KEYWORD                             05878800
              AIF   (N'&FUNC LE 1).ZG281A       CK NUM                  05878900
&ZMS          SETC  '"FUNC='    *KPOSA* MNOTE                           05879000
&ZMS          SETC  '&ZMS.&FUNC"'                                       05879100
&ZMS          SETC  '&ZMS "FUNC"'                                       05879200
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 05879300
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             05879400
.ZG281A       ANOP  ,                                                   05879500
.*------------------------------------------------------------------    05879600
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           05879700
&ZCVAL        SETC ''           CLEAR ERROR KEY ACCUMULATOR             05879800
.ZG281A0      AIF   (K'&ANAME LE 0).ZG281A1     OK                      05879900
&ZCVAL        SETC '&ZCVAL ANAME'               INCORRECT KEY USED      05880000
.ZG281A1      AIF   (K'&ENAME LE 0).ZG281A2     OK                      05880100
&ZCVAL        SETC '&ZCVAL ENAME'               INCORRECT KEY USED      05880200
.ZG281A2      AIF   (K'&AMODE LE 0).ZG281A3     OK                      05880300
&ZCVAL        SETC '&ZCVAL AMODE'               INCORRECT KEY USED      05880400
.ZG281A3      AIF   (K'&ATYPE LE 0).ZG281A4     OK                      05880500
&ZCVAL        SETC '&ZCVAL ATYPE'               INCORRECT KEY USED      05880600
.ZG281A4      AIF   (K'&OLDNAME LE 0).ZG281A5   OK                      05880700
&ZCVAL        SETC '&ZCVAL OLDNAME'             INCORRECT KEY USED      05880800
.ZG281A5      AIF   (K'&NEWNAME LE 0).ZG281A6   OK                      05880900
&ZCVAL        SETC '&ZCVAL NEWNAME'             INCORRECT KEY USED      05881000
.ZG281A6      AIF   (K'&MODE LE 0).ZG281A7      OK                      05881100
&ZCVAL        SETC '&ZCVAL MODE'                INCORRECT KEY USED      05881200
.ZG281A7      AIF   (K'&CALLIB LE 0).ZG281A8    OK                      05881300
&ZCVAL        SETC '&ZCVAL CALLIB'              INCORRECT KEY USED      05881400
.ZG281A8      AIF   (K'&PATHNAME LE 0).ZG281A9  OK                      05881500
&ZCVAL        SETC '&ZCVAL PATHNAME'            INCORRECT KEY USED      05881600
.ZG281A9      AIF   (K'&DIALOG LE 0).ZG281A10   OK                      05881700
&ZCVAL        SETC '&ZCVAL DIALOG'              INCORRECT KEY USED      05881800
.ZG281A10     AIF   (K'&INTENT LE 0).ZG281A11   OK                      05881900
&ZCVAL        SETC '&ZCVAL INTENT'              INCORRECT KEY USED      05882000
.ZG281A11     AIF   (K'&PROTECT LE 0).ZG281A12  OK                      05882100
&ZCVAL        SETC '&ZCVAL PROTECT'             INCORRECT KEY USED      05882200
.ZG281A12     AIF   (K'&RENAMEL LE 0).ZG281A13  OK                      05882300
&ZCVAL        SETC '&ZCVAL RENAMEL'             INCORRECT KEY USED      05882400
.ZG281A13     AIF   (K'&RECTYPE LE 0).ZG281A14  OK                      05882500
&ZCVAL        SETC '&ZCVAL RECTYPE'             INCORRECT KEY USED      05882600
.ZG281A14     AIF   (K'&OFFSET LE 0).ZG281A15   OK                      05882700
&ZCVAL        SETC '&ZCVAL OFFSET'              INCORRECT KEY USED      05882800
.ZG281A15     AIF   (K'&SYMBOL LE 0).ZG281A16   OK                      05882900
&ZCVAL        SETC '&ZCVAL SYMBOL'              INCORRECT KEY USED      05883000
.ZG281A16     AIF   (K'&TCOUNT LE 0).ZG281A17   OK                      05883100
&ZCVAL        SETC '&ZCVAL TCOUNT'              INCORRECT KEY USED      05883200
.ZG281A17     AIF   (K'&NTYPE LE 0).ZG281A18    OK                      05883300
&ZCVAL        SETC '&ZCVAL NTYPE'               INCORRECT KEY USED      05883400
.ZG281A18     AIF   (K'&ITYPE LE 0).ZG281A19    OK                      05883500
&ZCVAL        SETC '&ZCVAL ITYPE'               INCORRECT KEY USED      05883600
.ZG281A19     AIF   (K'&DLLNAME LE 0).ZG281A20  OK                      05883700
&ZCVAL        SETC '&ZCVAL DLLNAME'             INCORRECT KEY USED      05883800
.ZG281A20     AIF   (K'&INAME LE 0).ZG281A21    OK                      05883900
&ZCVAL        SETC '&ZCVAL INAME'               INCORRECT KEY USED      05884000
.ZG281A21     AIF   (K'&INTYPE LE 0).ZG281A22   OK                      05884100
&ZCVAL        SETC '&ZCVAL INTYPE'              INCORRECT KEY USED      05884200
.ZG281A22     AIF   (K'&DDNAME LE 0).ZG281A23   OK                      05884300
&ZCVAL        SETC '&ZCVAL DDNAME'              INCORRECT KEY USED      05884400
.ZG281A23     AIF   (K'&DEPTR LE 0).ZG281A24    OK                      05884500
&ZCVAL        SETC '&ZCVAL DEPTR'               INCORRECT KEY USED      05884600
.ZG281A24     AIF   (K'&MEMBER LE 0).ZG281A25   OK                      05884700
&ZCVAL        SETC '&ZCVAL MEMBER'              INCORRECT KEY USED      05884800
.ZG281A25     AIF   (K'&DCBPTR LE 0).ZG281A26   OK                      05884900
&ZCVAL        SETC '&ZCVAL DCBPTR'              INCORRECT KEY USED      05885000
.ZG281A26     AIF   (K'&EPTOKEN LE 0).ZG281A27  OK                      05885100
&ZCVAL        SETC '&ZCVAL EPTOKEN'             INCORRECT KEY USED      05885200
.ZG281A27     AIF   (K'&ATTRIB LE 0).ZG281A28   OK                      05885300
&ZCVAL        SETC '&ZCVAL ATTRIB'              INCORRECT KEY USED      05885400
.ZG281A28     AIF   (K'&ALIASES LE 0).ZG281A29  OK                      05885500
&ZCVAL        SETC '&ZCVAL ALIASES'             INCORRECT KEY USED      05885600
.ZG281A29     AIF   (K'&EPLOC LE 0).ZG281A30    OK                      05885700
&ZCVAL        SETC '&ZCVAL EPLOC'               INCORRECT KEY USED      05885800
.ZG281A30     AIF   (K'&IDENTIFY LE 0).ZG281A31  OK                     05885900
&ZCVAL        SETC '&ZCVAL IDENTIFY'            INCORRECT KEY USED      05886000
.ZG281A31     AIF   (K'&EXTLST LE 0).ZG281A32   OK                      05886100
&ZCVAL        SETC '&ZCVAL EXTLST'              INCORRECT KEY USED      05886200
.ZG281A32     AIF   (K'&LNAME LE 0).ZG281A33    OK                      05886300
&ZCVAL        SETC '&ZCVAL LNAME'               INCORRECT KEY USED      05886400
.ZG281A33     AIF   (K'&MODLIB LE 0).ZG281A34   OK                      05886500
&ZCVAL        SETC '&ZCVAL MODLIB'              INCORRECT KEY USED      05886600
.ZG281A34     AIF   (K'&SNAME LE 0).ZG281A35    OK                      05886700
&ZCVAL        SETC '&ZCVAL SNAME'               INCORRECT KEY USED      05886800
.ZG281A35     AIF   (K'&REPLACE LE 0).ZG281A36  OK                      05886900
&ZCVAL        SETC '&ZCVAL REPLACE'             INCORRECT KEY USED      05887000
.ZG281A36     AIF   (K'&LIBOPT LE 0).ZG281A37   OK                      05887100
&ZCVAL        SETC '&ZCVAL LIBOPT'              INCORRECT KEY USED      05887200
.ZG281A37     AIF   (K'&OPTION LE 0).ZG281A38   OK                      05887300
&ZCVAL        SETC '&ZCVAL OPTION'              INCORRECT KEY USED      05887400
.ZG281A38     AIF   (K'&OPTVAL LE 0).ZG281A39   OK                      05887500
&ZCVAL        SETC '&ZCVAL OPTVAL'              INCORRECT KEY USED      05887600
.ZG281A39     AIF   (K'&PARMS LE 0).ZG281A40    OK                      05887700
&ZCVAL        SETC '&ZCVAL PARMS'               INCORRECT KEY USED      05887800
.ZG281A40     AIF   (K'&FILES LE 0).ZG281A41    OK                      05887900
&ZCVAL        SETC '&ZCVAL FILES'               INCORRECT KEY USED      05888000
.ZG281A41     AIF   (K'&EXITS LE 0).ZG281A42    OK                      05888100
&ZCVAL        SETC '&ZCVAL EXITS'               INCORRECT KEY USED      05888200
.ZG281A42     AIF   (K'&OPTIONS LE 0).ZG281A43  OK                      05888300
&ZCVAL        SETC '&ZCVAL OPTIONS'             INCORRECT KEY USED      05888400
.ZG281A43     AIF   (K'&ORIGIN LE 0).ZG281A44   OK                      05888500
&ZCVAL        SETC '&ZCVAL ORIGIN'              INCORRECT KEY USED      05888600
.ZG281A44     AIF   (K'&REGION LE 0).ZG281A45   OK                      05888700
&ZCVAL        SETC '&ZCVAL REGION'              INCORRECT KEY USED      05888800
.ZG281A45     AIF   (K'&ZCVAL LE 0).ZG281A46    OK                      05888900
&ZCVAL        SETC '&ZCVAL'(2,K'&ZCVAL-1)                               05889000
              AIF  (K'&ZCVAL LE 160).ZG281A46A                          05889100
&ZCVAL        SETC '&ZCVAL'(1,160)                                      05889200
&ZCVAL        SETC '&ZCVAL....'                                         05889300
.ZG281A46A    ANOP                                                      05889400
&ZMS          SETC  '"FUNC'     *KMEIA* MNOTE                           05889500
&ZMS          SETC  '&ZMS.=&FUNC"'                                      05889600
&ZMS          SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'                05889700
              MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'                05889800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             05889900
.ZG281A46     ANOP  ,                                                   05890000
.*----------------------------------------------------------------***   05890100
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     05890200
              AIF   (N'&WORKMOD LE 1).ZG283A    CK NUM                  05890300
&ZMS          SETC  '"WORKMOD='                 *KPOSA* MNOTE           05890400
&ZMS          SETC  '&ZMS.&WORKMOD"'                                    05890500
&ZMS          SETC  '&ZMS "WORKMOD"'                                    05890600
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 05890700
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             05890800
.ZG283A       ANOP  ,                                                   05890900
.*-------------------------------------------------------------------   05891000
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         05891100
&ZXWORKMOD    SETC  'INPUT'     SET IN/OUTPUT                           05891200
&XWORKMOD     SETC  '&WORKMOD(1)'               SET XVARIABLE           05891300
              AIF   (N'&WORKMOD GT 1).ZG283B    MULTI PARMS             05891400
&XWORKMOD     SETC  '&WORKMOD'  SET XVARIABLE                           05891500
.ZG283B       AIF   (K'&WORKMOD(1) GT 0).ZG283C                         05891600
&ZXWORKMOD    SETC  ''          RESET IN/OUTPUT                         05891700
&ZMS          SETC  ' '         *KRQDA*                                 05891800
&ZMS          SETC  '&ZMS "WORKMOD" KEY AND ITS ARGUMENT'               05891900
              MNOTE 8,' &ZMS ARE REQUIRED.'                             05892000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             05892100
.ZG283C       ANOP  ,                                                   05892200
.*-------------------------------------------------------------------   05892300
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    05892400
              AIF   (K'&ZXWORKMOD LE 0).ZG283R  NOT I/O                 05892500
              AIF   ('&XWORKMOD'(1,1) NE '(').ZG283R                    05892600
&ZCGPR        SETC  '&XWORKMOD'(2,K'&XWORKMOD-2)                        05892700
              AIF   ('&ZCGPR'(1,1) NE '0').ZG283P                       05892800
              AIF   (K'&ZCGPR GT 2).ZG283Q                              05892900
              AIF   ('&ZCGPR' EQ '0').ZG283Q                            05893000
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       05893100
              AIF   (T'&ZCGPR NE 'N').ZG283Q    INVALID REG NAME        05893200
.ZG283P       ANOP  ,                                                   05893300
              AIF   (T'&ZCGPR NE 'N').ZG283R    NON NUMERIC             05893400
              AIF   ('&ZCGPR' LT '2').ZG283Q                            05893500
              AIF   ('&ZCGPR' LE '12').ZG283R                           05893600
.ZG283Q       ANOP  ,                                                   05893700
&ZMS          SETC  '"WORKMOD='                 *KGPRA* MNOTE           05893800
&ZMS          SETC  '&ZMS.&WORKMOD"'                                    05893900
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           05894000
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    05894100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             05894200
.ZG283R       ANOP  ,                                                   05894300
.*----------------------------------------------------------------***   05894400
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     05894500
              AIF   (N'&CLASS LE 1).ZG286A      CK NUM                  05894600
&ZMS          SETC  '"CLASS='   *KPOSA* MNOTE                           05894700
&ZMS          SETC  '&ZMS.&CLASS"'                                      05894800
&ZMS          SETC  '&ZMS "CLASS"'                                      05894900
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 05895000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             05895100
.ZG286A       ANOP  ,                                                   05895200
.*-------------------------------------------------------------------   05895300
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         05895400
&ZXCLASS      SETC  'INPUT'     SET IN/OUTPUT                           05895500
&XCLASS       SETC  '&CLASS(1)'                 SET XVARIABLE           05895600
              AIF   (N'&CLASS GT 1).ZG286B      MULTI PARMS             05895700
&XCLASS       SETC  '&CLASS'    SET XVARIABLE                           05895800
.ZG286B       AIF   (K'&CLASS(1) GT 0).ZG286C                           05895900
&ZXCLASS      SETC  ''          RESET IN/OUTPUT                         05896000
&ZMS          SETC  ' '         *KRQDA*                                 05896100
&ZMS          SETC  '&ZMS "CLASS" KEY AND ITS ARGUMENT'                 05896200
              MNOTE 8,' &ZMS ARE REQUIRED.'                             05896300
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             05896400
.ZG286C       ANOP  ,                                                   05896500
.*-------------------------------------------------------------------   05896600
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    05896700
              AIF   (K'&ZXCLASS LE 0).ZG286R    NOT I/O                 05896800
              AIF   ('&XCLASS'(1,1) NE '(').ZG286R                      05896900
&ZCGPR        SETC  '&XCLASS'(2,K'&XCLASS-2)                            05897000
              AIF   ('&ZCGPR'(1,1) NE '0').ZG286P                       05897100
              AIF   (K'&ZCGPR GT 2).ZG286Q                              05897200
              AIF   ('&ZCGPR' EQ '0').ZG286Q                            05897300
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       05897400
              AIF   (T'&ZCGPR NE 'N').ZG286Q    INVALID REG NAME        05897500
.ZG286P       ANOP  ,                                                   05897600
              AIF   (T'&ZCGPR NE 'N').ZG286R    NON NUMERIC             05897700
              AIF   ('&ZCGPR' LT '2').ZG286Q                            05897800
              AIF   ('&ZCGPR' LE '12').ZG286R                           05897900
.ZG286Q       ANOP  ,                                                   05898000
&ZMS          SETC  '"CLASS='   *KGPRA* MNOTE                           05898100
&ZMS          SETC  '&ZMS.&CLASS"'                                      05898200
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           05898300
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    05898400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             05898500
.ZG286R       ANOP  ,                                                   05898600
.*----------------------------------------------------------------***   05898700
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     05898800
              AIF   (N'&SECTION LE 1).ZG289A    CK NUM                  05898900
&ZMS          SETC  '"SECTION='                 *KPOSA* MNOTE           05899000
&ZMS          SETC  '&ZMS.&SECTION"'                                    05899100
&ZMS          SETC  '&ZMS "SECTION"'                                    05899200
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 05899300
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             05899400
.ZG289A       ANOP  ,                                                   05899500
.*-------------------------------------------------------------------   05899600
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         05899700
&ZXSECTION    SETC  'INPUT'     SET IN/OUTPUT                           05899800
&XSECTION     SETC  '0'                                                 05899900
              AIF   (K'&SECTION(1) LE 0).ZG289B  PARM                   05900000
&XSECTION     SETC  '&SECTION(1)'               SET XVARIABLE           05900100
              AIF   (N'&SECTION GT 1).ZG289B    MULTI PARMS             05900200
&XSECTION     SETC  '&SECTION'  SET XVARIABLE                           05900300
.ZG289B       ANOP  ,                                                   05900400
.*-------------------------------------------------------------------   05900500
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    05900600
              AIF   (K'&ZXSECTION LE 0).ZG289R  NOT I/O                 05900700
              AIF   ('&XSECTION' EQ '0').ZG289R                         05900800
              AIF   ('&XSECTION'(1,1) NE '(').ZG289R                    05900900
&ZCGPR        SETC  '&XSECTION'(2,K'&XSECTION-2)                        05901000
              AIF   ('&ZCGPR'(1,1) NE '0').ZG289P                       05901100
              AIF   (K'&ZCGPR GT 2).ZG289Q                              05901200
              AIF   ('&ZCGPR' EQ '0').ZG289Q                            05901300
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       05901400
              AIF   (T'&ZCGPR NE 'N').ZG289Q    INVALID REG NAME        05901500
.ZG289P       ANOP  ,                                                   05901600
              AIF   (T'&ZCGPR NE 'N').ZG289R    NON NUMERIC             05901700
              AIF   ('&ZCGPR' LT '2').ZG289Q                            05901800
              AIF   ('&ZCGPR' LE '12').ZG289R                           05901900
.ZG289Q       ANOP  ,                                                   05902000
&ZMS          SETC  '"SECTION='                 *KGPRA* MNOTE           05902100
&ZMS          SETC  '&ZMS.&SECTION"'                                    05902200
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           05902300
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    05902400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             05902500
.ZG289R       ANOP  ,                                                   05902600
.*----------------------------------------------------------------***   05902700
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     05902800
              AIF   (N'&AREA LE 1).ZG292A       CK NUM                  05902900
&ZMS          SETC  '"AREA='    *KPOSA* MNOTE                           05903000
&ZMS          SETC  '&ZMS.&AREA"'                                       05903100
&ZMS          SETC  '&ZMS "AREA"'                                       05903200
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 05903300
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             05903400
.ZG292A       ANOP  ,                                                   05903500
.*-------------------------------------------------------------------   05903600
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         05903700
&ZXAREA       SETC  'INPUT'     SET IN/OUTPUT                           05903800
&XAREA        SETC  '0'                                                 05903900
              AIF   (K'&AREA(1) LE 0).ZG292B    PARM                    05904000
&XAREA        SETC  '&AREA(1)'  SET XVARIABLE                           05904100
              AIF   (N'&AREA GT 1).ZG292B       MULTI PARMS             05904200
&XAREA        SETC  '&AREA'     SET XVARIABLE                           05904300
.ZG292B       ANOP  ,                                                   05904400
.*-------------------------------------------------------------------   05904500
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    05904600
              AIF   (K'&ZXAREA LE 0).ZG292R     NOT I/O                 05904700
              AIF   ('&XAREA' EQ '0').ZG292R                            05904800
              AIF   ('&XAREA'(1,1) NE '(').ZG292R                       05904900
&ZCGPR        SETC  '&XAREA'(2,K'&XAREA-2)                              05905000
              AIF   ('&ZCGPR'(1,1) NE '0').ZG292P                       05905100
              AIF   (K'&ZCGPR GT 2).ZG292Q                              05905200
              AIF   ('&ZCGPR' EQ '0').ZG292Q                            05905300
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       05905400
              AIF   (T'&ZCGPR NE 'N').ZG292Q    INVALID REG NAME        05905500
.ZG292P       ANOP  ,                                                   05905600
              AIF   (T'&ZCGPR NE 'N').ZG292R    NON NUMERIC             05905700
              AIF   ('&ZCGPR' LT '2').ZG292Q                            05905800
              AIF   ('&ZCGPR' LE '12').ZG292R                           05905900
.ZG292Q       ANOP  ,                                                   05906000
&ZMS          SETC  '"AREA='    *KGPRA* MNOTE                           05906100
&ZMS          SETC  '&ZMS.&AREA"'                                       05906200
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           05906300
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    05906400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             05906500
.ZG292R       ANOP  ,                                                   05906600
.*----------------------------------------------------------------***   05906700
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 05906800
              AIF   (N'&COUNT LE 1).ZG294A      CK NUM                  05906900
&ZMS          SETC  '"COUNT='   *KPOSA* MNOTE                           05907000
&ZMS          SETC  '&ZMS.&COUNT"'                                      05907100
&ZMS          SETC  '&ZMS "COUNT"'                                      05907200
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 05907300
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             05907400
.ZG294A       ANOP  ,                                                   05907500
.*-------------------------------------------------------------------   05907600
.***AG.KXVAR09 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     05907700
&ZXCOUNT      SETC  'INPUT'     SET IN/OUTPUT                           05907800
&XCOUNT       SETC  '&COUNT(1)'                 SET XVARIABLE           05907900
              AIF   (N'&COUNT GT 1).ZG294B      MULTI PARMS             05908000
&XCOUNT       SETC  '&COUNT'    SET XVARIABLE                           05908100
.ZG294B       AIF   (K'&AREA(1) GT 0).ZG294C    KEY                     05908200
              AIF   (K'&COUNT(1) LE 0).ZG294D   PARM                    05908300
&ZMS          SETC  '"COUNT'    *KDEPA* MNOTE                           05908400
&ZMS          SETC  '&ZMS.=&COUNT"'                                     05908500
&ZMS          SETC  '&ZMS CAN ONLY BE SPECIFIED IF'                     05908600
&ZMS          SETC  '&ZMS '                                             05908700
&ZMS          SETC  '&ZMS "AREA"'                                       05908800
              MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                        05908900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             05909000
              AGO   .ZG294E                                             05909100
.*                                                                      05909200
.ZG294C       AIF   (K'&COUNT(1) GT 0).ZG294E   PARM                    05909300
&ZXCOUNT      SETC  ''          RESET IN/OUTPUT                         05909400
&ZMS          SETC  'WHEN "AREA" IS SPECIFIED'  *KRQDA*                 05909500
&ZMS          SETC  '&ZMS , "COUNT" KEY AND ITS ARGUMENT'               05909600
              MNOTE 8,' &ZMS ARE REQUIRED.'                             05909700
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             05909800
.ZG294D       ANOP  ,                                                   05909900
&XCOUNT       SETC  '0'         SET DEFAULT                             05910000
.ZG294E       ANOP  ,                                                   05910100
.*-------------------------------------------------------------------   05910200
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                05910300
              AIF   (K'&ZXCOUNT LE 0).ZG294R    NOT I/O                 05910400
              AIF   ('&XCOUNT'(1,1) NE '(').ZG294R                      05910500
&ZCGPR        SETC  '&XCOUNT'(2,K'&XCOUNT-2)                            05910600
              AIF   ('&ZCGPR'(1,1) NE '0').ZG294P                       05910700
              AIF   (K'&ZCGPR GT 2).ZG294Q                              05910800
              AIF   ('&ZCGPR' EQ '0').ZG294Q                            05910900
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       05911000
              AIF   (T'&ZCGPR NE 'N').ZG294Q    INVALID REG NAME        05911100
.ZG294P       ANOP  ,                                                   05911200
              AIF   (T'&ZCGPR NE 'N').ZG294R    NON NUMERIC             05911300
              AIF   ('&ZCGPR' LT '2').ZG294Q                            05911400
              AIF   ('&ZCGPR' LE '12').ZG294R                           05911500
.ZG294Q       ANOP  ,                                                   05911600
&ZMS          SETC  '"COUNT='   *KGPRA* MNOTE                           05911700
&ZMS          SETC  '&ZMS.&COUNT"'                                      05911800
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           05911900
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    05912000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             05912100
.ZG294R       ANOP  ,                                                   05912200
.*----------------------------------------------------------------***   05912300
.***AG.KXVAR05 NAME, OPT INOUT, KEYS -XVARIABLE KEY                     05912400
              AIF   (N'&CURSOR LE 1).ZG298A     CK NUM                  05912500
&ZMS          SETC  '"CURSOR='  *KPOSA* MNOTE                           05912600
&ZMS          SETC  '&ZMS.&CURSOR"'                                     05912700
&ZMS          SETC  '&ZMS "CURSOR"'                                     05912800
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 05912900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             05913000
.ZG298A       ANOP  ,                                                   05913100
.*-------------------------------------------------------------------   05913200
.***AG.KXVAR13 NAME, OPT INOUT, KEYS -XVARIABLE                         05913300
&ZXCURSOR     SETC  'INOUT'     SET IN/OUTPUT                           05913400
&XCURSOR      SETC  '-1'                                                05913500
              AIF   (K'&CURSOR(1) LE 0).ZG298B  PARM                    05913600
&XCURSOR      SETC  '&CURSOR(1)'                SET XVARIABLE           05913700
              AIF   (N'&CURSOR GT 1).ZG298B     MULTI PARMS             05913800
&XCURSOR      SETC  '&CURSOR'   SET XVARIABLE                           05913900
.ZG298B       ANOP  ,                                                   05914000
.*-------------------------------------------------------------------   05914100
.***AG.KCK02 NAME, OPT INOUT, KEYS -GPR OUT OF RANGE                    05914200
              AIF   (K'&ZXCURSOR LE 0).ZG298R   NOT I/O                 05914300
              AIF   ('&XCURSOR'(1,1) NE '(').ZG298R                     05914400
&ZCGPR        SETC  '&XCURSOR'(2,K'&XCURSOR-2)                          05914500
              AIF   ('&ZCGPR'(1,1) NE '0').ZG298P                       05914600
              AIF   (K'&ZCGPR GT 2).ZG298Q                              05914700
              AIF   ('&ZCGPR' EQ '0').ZG298Q                            05914800
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       05914900
              AIF   (T'&ZCGPR NE 'N').ZG298Q    INVALID REG NAME        05915000
.ZG298P       ANOP  ,                                                   05915100
              AIF   (T'&ZCGPR NE 'N').ZG298R    NON NUMERIC             05915200
              AIF   ('&ZCGPR' LT '2').ZG298Q                            05915300
              AIF   ('&ZCGPR' LE '12').ZG298R                           05915400
.ZG298Q       ANOP  ,                                                   05915500
&ZMS          SETC  '"CURSOR='  *KGPRA* MNOTE                           05915600
&ZMS          SETC  '&ZMS.&CURSOR"'                                     05915700
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           05915800
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    05915900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             05916000
.ZG298R       ANOP  ,                                                   05916100
.*----------------------------------------------------------------***   05916200
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             05916300
              AIF   (N'&NEWSECT LE 1).ZG301A    CK NUM                  05916400
&ZMS          SETC  '"NEWSECT='                 *KPOSA* MNOTE           05916500
&ZMS          SETC  '&ZMS.&NEWSECT"'                                    05916600
&ZMS          SETC  '&ZMS "NEWSECT"'                                    05916700
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 05916800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             05916900
.ZG301A       ANOP  ,                                                   05917000
.*-------------------------------------------------------------------   05917100
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             05917200
&XNEWSECT     SETC  ''          INITIALIZE XVARIABLE                    05917300
.ZG302A   AIF   ('&NEWSECT(1)' NE 'N').ZG303A                           05917400
&XNEWSECT     SETC  'N'         SET KEYWORD                             05917500
.*-------------------------------------------------------------------   05917600
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             05917700
.ZG303A   AIF   ('&NEWSECT(1)' NE 'Y').ZG304A                           05917800
&XNEWSECT     SETC  'Y'         SET KEYWORD                             05917900
.*-------------------------------------------------------------------   05918000
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             05918100
.ZG304A       AIF   (K'&XNEWSECT GT 0).ZG304C   KEYWORD                 05918200
              AIF   (K'&NEWSECT(1) LE 0).ZG304B                         05918300
&ZMS          SETC  '"NEWSECT='                 *KUKWA* MNOTE           05918400
&ZMS          SETC  '&ZMS.&NEWSECT"'                                    05918500
&ZMS          SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '           05918600
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                 05918700
&ZMS          SETC  '&ZMS "N"'  VALID KEYWORD                           05918800
&ZMS          SETC  '&ZMS OR "Y".'              VALID KEYWORD           05918900
              MNOTE 8,' &ZMS '                                          05919000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             05919100
.ZG304B       ANOP  ,                                                   05919200
&XNEWSECT     SETC  'N'         SET DEFAULT KEYWORD                     05919300
.ZG304C       ANOP  ,                                                   05919400
&ZXNEWSECT    SETC  'INPUT'     SET IN/OUTPUT                           05919500
.*----------------------------------------------------------------***   05919600
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             05919700
              AIF   (N'&ENDDATA LE 1).ZG306A    CK NUM                  05919800
&ZMS          SETC  '"ENDDATA='                 *KPOSA* MNOTE           05919900
&ZMS          SETC  '&ZMS.&ENDDATA"'                                    05920000
&ZMS          SETC  '&ZMS "ENDDATA"'                                    05920100
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 05920200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             05920300
.ZG306A       ANOP  ,                                                   05920400
.*-------------------------------------------------------------------   05920500
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             05920600
&XENDDATA     SETC  ''          INITIALIZE XVARIABLE                    05920700
.ZG307A   AIF   ('&ENDDATA(1)' NE 'N').ZG308A                           05920800
&XENDDATA     SETC  'N'         SET KEYWORD                             05920900
.*-------------------------------------------------------------------   05921000
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             05921100
.ZG308A   AIF   ('&ENDDATA(1)' NE 'Y').ZG309A                           05921200
&XENDDATA     SETC  'Y'         SET KEYWORD                             05921300
.*-------------------------------------------------------------------   05921400
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             05921500
.ZG309A       AIF   (K'&XENDDATA GT 0).ZG309C   KEYWORD                 05921600
              AIF   (K'&ENDDATA(1) LE 0).ZG309B                         05921700
&ZMS          SETC  '"ENDDATA='                 *KUKWA* MNOTE           05921800
&ZMS          SETC  '&ZMS.&ENDDATA"'                                    05921900
&ZMS          SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '           05922000
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                 05922100
&ZMS          SETC  '&ZMS "N"'  VALID KEYWORD                           05922200
&ZMS          SETC  '&ZMS OR "Y".'              VALID KEYWORD           05922300
              MNOTE 8,' &ZMS '                                          05922400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             05922500
.ZG309B       ANOP  ,                                                   05922600
&XENDDATA     SETC  'N'         SET DEFAULT KEYWORD                     05922700
.ZG309C       ANOP  ,                                                   05922800
&ZXENDDATA    SETC  'INPUT'     SET IN/OUTPUT                           05922900
.*-------------------------------------------------------------------   05923000
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           05923100
.ZG310        ANOP  ,                                                   05923200
&ZTLC         SETC 'RENAME'                                             05923300
              AIF   ('&FUNC(1)' NE '&ZTLC').ZG320                       05923400
&XFUNC        SETC  'RENAME'    SET KEYWORD                             05923500
              AIF   (N'&FUNC LE 1).ZG310A       CK NUM                  05923600
&ZMS          SETC  '"FUNC='    *KPOSA* MNOTE                           05923700
&ZMS          SETC  '&ZMS.&FUNC"'                                       05923800
&ZMS          SETC  '&ZMS "FUNC"'                                       05923900
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 05924000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             05924100
.ZG310A       ANOP  ,                                                   05924200
.*------------------------------------------------------------------    05924300
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           05924400
&ZCVAL        SETC ''           CLEAR ERROR KEY ACCUMULATOR             05924500
.ZG310A0      AIF   (K'&ANAME LE 0).ZG310A1     OK                      05924600
&ZCVAL        SETC '&ZCVAL ANAME'               INCORRECT KEY USED      05924700
.ZG310A1      AIF   (K'&ENAME LE 0).ZG310A2     OK                      05924800
&ZCVAL        SETC '&ZCVAL ENAME'               INCORRECT KEY USED      05924900
.ZG310A2      AIF   (K'&AMODE LE 0).ZG310A3     OK                      05925000
&ZCVAL        SETC '&ZCVAL AMODE'               INCORRECT KEY USED      05925100
.ZG310A3      AIF   (K'&ATYPE LE 0).ZG310A4     OK                      05925200
&ZCVAL        SETC '&ZCVAL ATYPE'               INCORRECT KEY USED      05925300
.ZG310A4      AIF   (K'&SECTION LE 0).ZG310A5   OK                      05925400
&ZCVAL        SETC '&ZCVAL SECTION'             INCORRECT KEY USED      05925500
.ZG310A5      AIF   (K'&COUNT LE 0).ZG310A6     OK                      05925600
&ZCVAL        SETC '&ZCVAL COUNT'               INCORRECT KEY USED      05925700
.ZG310A6      AIF   (K'&MODE LE 0).ZG310A7      OK                      05925800
&ZCVAL        SETC '&ZCVAL MODE'                INCORRECT KEY USED      05925900
.ZG310A7      AIF   (K'&CLASS LE 0).ZG310A8     OK                      05926000
&ZCVAL        SETC '&ZCVAL CLASS'               INCORRECT KEY USED      05926100
.ZG310A8      AIF   (K'&CALLIB LE 0).ZG310A9    OK                      05926200
&ZCVAL        SETC '&ZCVAL CALLIB'              INCORRECT KEY USED      05926300
.ZG310A9      AIF   (K'&PATHNAME LE 0).ZG310A10  OK                     05926400
&ZCVAL        SETC '&ZCVAL PATHNAME'            INCORRECT KEY USED      05926500
.ZG310A10     AIF   (K'&DIALOG LE 0).ZG310A11   OK                      05926600
&ZCVAL        SETC '&ZCVAL DIALOG'              INCORRECT KEY USED      05926700
.ZG310A11     AIF   (K'&INTENT LE 0).ZG310A12   OK                      05926800
&ZCVAL        SETC '&ZCVAL INTENT'              INCORRECT KEY USED      05926900
.ZG310A12     AIF   (K'&PROTECT LE 0).ZG310A13  OK                      05927000
&ZCVAL        SETC '&ZCVAL PROTECT'             INCORRECT KEY USED      05927100
.ZG310A13     AIF   (K'&RENAMEL LE 0).ZG310A14  OK                      05927200
&ZCVAL        SETC '&ZCVAL RENAMEL'             INCORRECT KEY USED      05927300
.ZG310A14     AIF   (K'&AREA LE 0).ZG310A15     OK                      05927400
&ZCVAL        SETC '&ZCVAL AREA'                INCORRECT KEY USED      05927500
.ZG310A15     AIF   (K'&CURSOR LE 0).ZG310A16   OK                      05927600
&ZCVAL        SETC '&ZCVAL CURSOR'              INCORRECT KEY USED      05927700
.ZG310A16     AIF   (K'&RECTYPE LE 0).ZG310A17  OK                      05927800
&ZCVAL        SETC '&ZCVAL RECTYPE'             INCORRECT KEY USED      05927900
.ZG310A17     AIF   (K'&OFFSET LE 0).ZG310A18   OK                      05928000
&ZCVAL        SETC '&ZCVAL OFFSET'              INCORRECT KEY USED      05928100
.ZG310A18     AIF   (K'&SYMBOL LE 0).ZG310A19   OK                      05928200
&ZCVAL        SETC '&ZCVAL SYMBOL'              INCORRECT KEY USED      05928300
.ZG310A19     AIF   (K'&TCOUNT LE 0).ZG310A20   OK                      05928400
&ZCVAL        SETC '&ZCVAL TCOUNT'              INCORRECT KEY USED      05928500
.ZG310A20     AIF   (K'&NTYPE LE 0).ZG310A21    OK                      05928600
&ZCVAL        SETC '&ZCVAL NTYPE'               INCORRECT KEY USED      05928700
.ZG310A21     AIF   (K'&ITYPE LE 0).ZG310A22    OK                      05928800
&ZCVAL        SETC '&ZCVAL ITYPE'               INCORRECT KEY USED      05928900
.ZG310A22     AIF   (K'&DLLNAME LE 0).ZG310A23  OK                      05929000
&ZCVAL        SETC '&ZCVAL DLLNAME'             INCORRECT KEY USED      05929100
.ZG310A23     AIF   (K'&INAME LE 0).ZG310A24    OK                      05929200
&ZCVAL        SETC '&ZCVAL INAME'               INCORRECT KEY USED      05929300
.ZG310A24     AIF   (K'&INTYPE LE 0).ZG310A25   OK                      05929400
&ZCVAL        SETC '&ZCVAL INTYPE'              INCORRECT KEY USED      05929500
.ZG310A25     AIF   (K'&DDNAME LE 0).ZG310A26   OK                      05929600
&ZCVAL        SETC '&ZCVAL DDNAME'              INCORRECT KEY USED      05929700
.ZG310A26     AIF   (K'&DEPTR LE 0).ZG310A27    OK                      05929800
&ZCVAL        SETC '&ZCVAL DEPTR'               INCORRECT KEY USED      05929900
.ZG310A27     AIF   (K'&MEMBER LE 0).ZG310A28   OK                      05930000
&ZCVAL        SETC '&ZCVAL MEMBER'              INCORRECT KEY USED      05930100
.ZG310A28     AIF   (K'&DCBPTR LE 0).ZG310A29   OK                      05930200
&ZCVAL        SETC '&ZCVAL DCBPTR'              INCORRECT KEY USED      05930300
.ZG310A29     AIF   (K'&EPTOKEN LE 0).ZG310A30  OK                      05930400
&ZCVAL        SETC '&ZCVAL EPTOKEN'             INCORRECT KEY USED      05930500
.ZG310A30     AIF   (K'&ATTRIB LE 0).ZG310A31   OK                      05930600
&ZCVAL        SETC '&ZCVAL ATTRIB'              INCORRECT KEY USED      05930700
.ZG310A31     AIF   (K'&ALIASES LE 0).ZG310A32  OK                      05930800
&ZCVAL        SETC '&ZCVAL ALIASES'             INCORRECT KEY USED      05930900
.ZG310A32     AIF   (K'&EPLOC LE 0).ZG310A33    OK                      05931000
&ZCVAL        SETC '&ZCVAL EPLOC'               INCORRECT KEY USED      05931200
.ZG310A33     AIF   (K'&IDENTIFY LE 0).ZG310A34  OK                     05932000
&ZCVAL        SETC '&ZCVAL IDENTIFY'            INCORRECT KEY USED      05932800
.ZG310A34     AIF   (K'&EXTLST LE 0).ZG310A35   OK                      05933600
&ZCVAL        SETC '&ZCVAL EXTLST'              INCORRECT KEY USED      05934400
.ZG310A35     AIF   (K'&LNAME LE 0).ZG310A36    OK                      05935200
&ZCVAL        SETC '&ZCVAL LNAME'               INCORRECT KEY USED      05936000
.ZG310A36     AIF   (K'&NEWSECT LE 0).ZG310A37  OK                      05936800
&ZCVAL        SETC '&ZCVAL NEWSECT'             INCORRECT KEY USED      05937600
.ZG310A37     AIF   (K'&ENDDATA LE 0).ZG310A38  OK                      05938400
&ZCVAL        SETC '&ZCVAL ENDDATA'             INCORRECT KEY USED      05939200
.ZG310A38     AIF   (K'&MODLIB LE 0).ZG310A39   OK                      05940000
&ZCVAL        SETC '&ZCVAL MODLIB'              INCORRECT KEY USED      05940800
.ZG310A39     AIF   (K'&SNAME LE 0).ZG310A40    OK                      05941600
&ZCVAL        SETC '&ZCVAL SNAME'               INCORRECT KEY USED      05942400
.ZG310A40     AIF   (K'&REPLACE LE 0).ZG310A41  OK                      05943200
&ZCVAL        SETC '&ZCVAL REPLACE'             INCORRECT KEY USED      05944000
.ZG310A41     AIF   (K'&LIBOPT LE 0).ZG310A42   OK                      05944400
&ZCVAL        SETC '&ZCVAL LIBOPT'              INCORRECT KEY USED      05944800
.ZG310A42     AIF   (K'&OPTION LE 0).ZG310A43   OK                      05945200
&ZCVAL        SETC '&ZCVAL OPTION'              INCORRECT KEY USED      05945600
.ZG310A43     AIF   (K'&OPTVAL LE 0).ZG310A44   OK                      05946400
&ZCVAL        SETC '&ZCVAL OPTVAL'              INCORRECT KEY USED      05947200
.ZG310A44     AIF   (K'&PARMS LE 0).ZG310A45    OK                      05947600
&ZCVAL        SETC '&ZCVAL PARMS'               INCORRECT KEY USED      05948000
.ZG310A45     AIF   (K'&FILES LE 0).ZG310A46    OK                      05948400
&ZCVAL        SETC '&ZCVAL FILES'               INCORRECT KEY USED      05948800
.ZG310A46     AIF   (K'&EXITS LE 0).ZG310A47    OK                      05949600
&ZCVAL        SETC '&ZCVAL EXITS'               INCORRECT KEY USED      05950400
.ZG310A47     AIF   (K'&OPTIONS LE 0).ZG310A48  OK                      05951200
&ZCVAL        SETC '&ZCVAL OPTIONS'             INCORRECT KEY USED      05952000
.ZG310A48     AIF   (K'&ORIGIN LE 0).ZG310A49   OK                      05952800
&ZCVAL        SETC '&ZCVAL ORIGIN'              INCORRECT KEY USED      05953600
.ZG310A49     AIF   (K'&REGION LE 0).ZG310A50   OK                      05954400
&ZCVAL        SETC '&ZCVAL REGION'              INCORRECT KEY USED      05955200
.ZG310A50     AIF   (K'&ZCVAL LE 0).ZG310A51    OK                      05956000
&ZCVAL        SETC '&ZCVAL'(2,K'&ZCVAL-1)                               05956800
              AIF  (K'&ZCVAL LE 160).ZG310A51A                          05956900
&ZCVAL        SETC '&ZCVAL'(1,160)                                      05957000
&ZCVAL        SETC '&ZCVAL....'                                         05957100
.ZG310A51A    ANOP                                                      05957300
&ZMS          SETC  '"FUNC'     *KMEIA* MNOTE                           05957600
&ZMS          SETC  '&ZMS.=&FUNC"'                                      05958400
&ZMS          SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'                05959200
              MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'                05960000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             05960800
.ZG310A51     ANOP  ,                                                   05961600
.*----------------------------------------------------------------***   05962400
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     05963200
              AIF   (N'&WORKMOD LE 1).ZG312A    CK NUM                  05964000
&ZMS          SETC  '"WORKMOD='                 *KPOSA* MNOTE           05964800
&ZMS          SETC  '&ZMS.&WORKMOD"'                                    05965600
&ZMS          SETC  '&ZMS "WORKMOD"'                                    05966400
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 05967200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             05968000
.ZG312A       ANOP  ,                                                   05968800
.*-------------------------------------------------------------------   05969600
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         05970400
&ZXWORKMOD    SETC  'INPUT'     SET IN/OUTPUT                           05971200
&XWORKMOD     SETC  '&WORKMOD(1)'               SET XVARIABLE           05972000
              AIF   (N'&WORKMOD GT 1).ZG312B    MULTI PARMS             05972800
&XWORKMOD     SETC  '&WORKMOD'  SET XVARIABLE                           05973600
.ZG312B       AIF   (K'&WORKMOD(1) GT 0).ZG312C                         05974400
&ZXWORKMOD    SETC  ''          RESET IN/OUTPUT                         05975200
&ZMS          SETC  ' '         *KRQDA*                                 05976000
&ZMS          SETC  '&ZMS "WORKMOD" KEY AND ITS ARGUMENT'               05976800
              MNOTE 8,' &ZMS ARE REQUIRED.'                             05977600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             05978400
.ZG312C       ANOP  ,                                                   06063300
.*-------------------------------------------------------------------   06063400
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    06063500
              AIF   (K'&ZXWORKMOD LE 0).ZG312R  NOT I/O                 06063600
              AIF   ('&XWORKMOD'(1,1) NE '(').ZG312R                    06063700
&ZCGPR        SETC  '&XWORKMOD'(2,K'&XWORKMOD-2)                        06063800
              AIF   ('&ZCGPR'(1,1) NE '0').ZG312P                       06063900
              AIF   (K'&ZCGPR GT 2).ZG312Q                              06064000
              AIF   ('&ZCGPR' EQ '0').ZG312Q                            06064100
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       06064200
              AIF   (T'&ZCGPR NE 'N').ZG312Q    INVALID REG NAME        06064300
.ZG312P       ANOP  ,                                                   06064400
              AIF   (T'&ZCGPR NE 'N').ZG312R    NON NUMERIC             06064500
              AIF   ('&ZCGPR' LT '2').ZG312Q                            06064600
              AIF   ('&ZCGPR' LE '12').ZG312R                           06064700
.ZG312Q       ANOP  ,                                                   06064800
&ZMS          SETC  '"WORKMOD='                 *KGPRA* MNOTE           06064900
&ZMS          SETC  '&ZMS.&WORKMOD"'                                    06065000
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           06065100
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    06065200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             06065300
.ZG312R       ANOP  ,                                                   06065400
.*----------------------------------------------------------------***   06065500
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     06065600
              AIF   (N'&OLDNAME LE 1).ZG315A    CK NUM                  06065700
&ZMS          SETC  '"OLDNAME='                 *KPOSA* MNOTE           06065800
&ZMS          SETC  '&ZMS.&OLDNAME"'                                    06065900
&ZMS          SETC  '&ZMS "OLDNAME"'                                    06066000
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 06066100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             06066200
.ZG315A       ANOP  ,                                                   06066300
.*-------------------------------------------------------------------   06066400
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         06066500
&ZXOLDNAME    SETC  'INPUT'     SET IN/OUTPUT                           06066600
&XOLDNAME     SETC  '&OLDNAME(1)'               SET XVARIABLE           06066700
              AIF   (N'&OLDNAME GT 1).ZG315B    MULTI PARMS             06066800
&XOLDNAME     SETC  '&OLDNAME'  SET XVARIABLE                           06066900
.ZG315B       AIF   (K'&OLDNAME(1) GT 0).ZG315C                         06067000
&ZXOLDNAME    SETC  ''          RESET IN/OUTPUT                         06067100
&ZMS          SETC  ' '         *KRQDA*                                 06067200
&ZMS          SETC  '&ZMS "OLDNAME" KEY AND ITS ARGUMENT'               06067300
              MNOTE 8,' &ZMS ARE REQUIRED.'                             06067400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             06067500
.ZG315C       ANOP  ,                                                   06067600
.*-------------------------------------------------------------------   06067700
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    06067800
              AIF   (K'&ZXOLDNAME LE 0).ZG315R  NOT I/O                 06067900
              AIF   ('&XOLDNAME'(1,1) NE '(').ZG315R                    06068000
&ZCGPR        SETC  '&XOLDNAME'(2,K'&XOLDNAME-2)                        06068100
              AIF   ('&ZCGPR'(1,1) NE '0').ZG315P                       06068200
              AIF   (K'&ZCGPR GT 2).ZG315Q                              06068300
              AIF   ('&ZCGPR' EQ '0').ZG315Q                            06068400
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       06068500
              AIF   (T'&ZCGPR NE 'N').ZG315Q    INVALID REG NAME        06068600
.ZG315P       ANOP  ,                                                   06068700
              AIF   (T'&ZCGPR NE 'N').ZG315R    NON NUMERIC             06068800
              AIF   ('&ZCGPR' LT '2').ZG315Q                            06068900
              AIF   ('&ZCGPR' LE '12').ZG315R                           06069000
.ZG315Q       ANOP  ,                                                   06069100
&ZMS          SETC  '"OLDNAME='                 *KGPRA* MNOTE           06069200
&ZMS          SETC  '&ZMS.&OLDNAME"'                                    06069300
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           06069400
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    06069500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             06069600
.ZG315R       ANOP  ,                                                   06069700
.*----------------------------------------------------------------***   06069800
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     06069900
              AIF   (N'&NEWNAME LE 1).ZG318A    CK NUM                  06070000
&ZMS          SETC  '"NEWNAME='                 *KPOSA* MNOTE           06070100
&ZMS          SETC  '&ZMS.&NEWNAME"'                                    06070200
&ZMS          SETC  '&ZMS "NEWNAME"'                                    06070300
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 06070400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             06070500
.ZG318A       ANOP  ,                                                   06070600
.*-------------------------------------------------------------------   06070700
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         06070800
&ZXNEWNAME    SETC  'INPUT'     SET IN/OUTPUT                           06070900
&XNEWNAME     SETC  '&NEWNAME(1)'               SET XVARIABLE           06071000
              AIF   (N'&NEWNAME GT 1).ZG318B    MULTI PARMS             06071100
&XNEWNAME     SETC  '&NEWNAME'  SET XVARIABLE                           06071200
.ZG318B       AIF   (K'&NEWNAME(1) GT 0).ZG318C                         06071300
&ZXNEWNAME    SETC  ''          RESET IN/OUTPUT                         06071400
&ZMS          SETC  ' '         *KRQDA*                                 06071500
&ZMS          SETC  '&ZMS "NEWNAME" KEY AND ITS ARGUMENT'               06071600
              MNOTE 8,' &ZMS ARE REQUIRED.'                             06071700
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             06071800
.ZG318C       ANOP  ,                                                   06071900
.*-------------------------------------------------------------------   06072000
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    06072100
              AIF   (K'&ZXNEWNAME LE 0).ZG318R  NOT I/O                 06072200
              AIF   ('&XNEWNAME'(1,1) NE '(').ZG318R                    06072300
&ZCGPR        SETC  '&XNEWNAME'(2,K'&XNEWNAME-2)                        06072400
              AIF   ('&ZCGPR'(1,1) NE '0').ZG318P                       06072500
              AIF   (K'&ZCGPR GT 2).ZG318Q                              06072600
              AIF   ('&ZCGPR' EQ '0').ZG318Q                            06072700
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       06072800
              AIF   (T'&ZCGPR NE 'N').ZG318Q    INVALID REG NAME        06072900
.ZG318P       ANOP  ,                                                   06073000
              AIF   (T'&ZCGPR NE 'N').ZG318R    NON NUMERIC             06073100
              AIF   ('&ZCGPR' LT '2').ZG318Q                            06073200
              AIF   ('&ZCGPR' LE '12').ZG318R                           06073300
.ZG318Q       ANOP  ,                                                   06073400
&ZMS          SETC  '"NEWNAME='                 *KGPRA* MNOTE           06073500
&ZMS          SETC  '&ZMS.&NEWNAME"'                                    06073600
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           06073700
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    06073800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             06073900
.ZG318R       ANOP  ,                                                   06074000
.*-------------------------------------------------------------------   06074100
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           06074200
.ZG320        ANOP  ,                                                   06074300
&ZTLC         SETC 'RESETW'                                             06074400
              AIF   ('&FUNC(1)' NE '&ZTLC').ZG334                       06074500
&XFUNC        SETC  'RESETW'    SET KEYWORD                             06074600
              AIF   (N'&FUNC LE 1).ZG320A       CK NUM                  06074700
&ZMS          SETC  '"FUNC='    *KPOSA* MNOTE                           06074800
&ZMS          SETC  '&ZMS.&FUNC"'                                       06074900
&ZMS          SETC  '&ZMS "FUNC"'                                       06075000
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 06075100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             06075200
.ZG320A       ANOP  ,                                                   06075300
.*------------------------------------------------------------------    06075400
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           06075500
&ZCVAL        SETC ''           CLEAR ERROR KEY ACCUMULATOR             06075600
.ZG320A0      AIF   (K'&ANAME LE 0).ZG320A1     OK                      06075700
&ZCVAL        SETC '&ZCVAL ANAME'               INCORRECT KEY USED      06075800
.ZG320A1      AIF   (K'&ENAME LE 0).ZG320A2     OK                      06075900
&ZCVAL        SETC '&ZCVAL ENAME'               INCORRECT KEY USED      06076000
.ZG320A2      AIF   (K'&AMODE LE 0).ZG320A3     OK                      06076100
&ZCVAL        SETC '&ZCVAL AMODE'               INCORRECT KEY USED      06076200
.ZG320A3      AIF   (K'&ATYPE LE 0).ZG320A4     OK                      06076300
&ZCVAL        SETC '&ZCVAL ATYPE'               INCORRECT KEY USED      06076400
.ZG320A4      AIF   (K'&SECTION LE 0).ZG320A5   OK                      06076500
&ZCVAL        SETC '&ZCVAL SECTION'             INCORRECT KEY USED      06076600
.ZG320A5      AIF   (K'&OLDNAME LE 0).ZG320A6   OK                      06076700
&ZCVAL        SETC '&ZCVAL OLDNAME'             INCORRECT KEY USED      06076800
.ZG320A6      AIF   (K'&NEWNAME LE 0).ZG320A7   OK                      06076900
&ZCVAL        SETC '&ZCVAL NEWNAME'             INCORRECT KEY USED      06077000
.ZG320A7      AIF   (K'&COUNT LE 0).ZG320A8     OK                      06077100
&ZCVAL        SETC '&ZCVAL COUNT'               INCORRECT KEY USED      06077200
.ZG320A8      AIF   (K'&MODE LE 0).ZG320A9      OK                      06077300
&ZCVAL        SETC '&ZCVAL MODE'                INCORRECT KEY USED      06077400
.ZG320A9      AIF   (K'&CLASS LE 0).ZG320A10    OK                      06077500
&ZCVAL        SETC '&ZCVAL CLASS'               INCORRECT KEY USED      06077600
.ZG320A10     AIF   (K'&CALLIB LE 0).ZG320A11   OK                      06077700
&ZCVAL        SETC '&ZCVAL CALLIB'              INCORRECT KEY USED      06077800
.ZG320A11     AIF   (K'&PATHNAME LE 0).ZG320A12  OK                     06077900
&ZCVAL        SETC '&ZCVAL PATHNAME'            INCORRECT KEY USED      06078000
.ZG320A12     AIF   (K'&DIALOG LE 0).ZG320A13   OK                      06078100
&ZCVAL        SETC '&ZCVAL DIALOG'              INCORRECT KEY USED      06078200
.ZG320A13     AIF   (K'&RENAMEL LE 0).ZG320A14  OK                      06078300
&ZCVAL        SETC '&ZCVAL RENAMEL'             INCORRECT KEY USED      06078400
.ZG320A14     AIF   (K'&AREA LE 0).ZG320A15     OK                      06078500
&ZCVAL        SETC '&ZCVAL AREA'                INCORRECT KEY USED      06078600
.ZG320A15     AIF   (K'&CURSOR LE 0).ZG320A16   OK                      06078700
&ZCVAL        SETC '&ZCVAL CURSOR'              INCORRECT KEY USED      06078800
.ZG320A16     AIF   (K'&RECTYPE LE 0).ZG320A17  OK                      06078900
&ZCVAL        SETC '&ZCVAL RECTYPE'             INCORRECT KEY USED      06079000
.ZG320A17     AIF   (K'&OFFSET LE 0).ZG320A18   OK                      06079100
&ZCVAL        SETC '&ZCVAL OFFSET'              INCORRECT KEY USED      06079200
.ZG320A18     AIF   (K'&SYMBOL LE 0).ZG320A19   OK                      06079300
&ZCVAL        SETC '&ZCVAL SYMBOL'              INCORRECT KEY USED      06079400
.ZG320A19     AIF   (K'&TCOUNT LE 0).ZG320A20   OK                      06079500
&ZCVAL        SETC '&ZCVAL TCOUNT'              INCORRECT KEY USED      06079600
.ZG320A20     AIF   (K'&NTYPE LE 0).ZG320A21    OK                      06079700
&ZCVAL        SETC '&ZCVAL NTYPE'               INCORRECT KEY USED      06079800
.ZG320A21     AIF   (K'&ITYPE LE 0).ZG320A22    OK                      06079900
&ZCVAL        SETC '&ZCVAL ITYPE'               INCORRECT KEY USED      06080000
.ZG320A22     AIF   (K'&DLLNAME LE 0).ZG320A23  OK                      06080100
&ZCVAL        SETC '&ZCVAL DLLNAME'             INCORRECT KEY USED      06080200
.ZG320A23     AIF   (K'&INAME LE 0).ZG320A24    OK                      06080300
&ZCVAL        SETC '&ZCVAL INAME'               INCORRECT KEY USED      06080400
.ZG320A24     AIF   (K'&INTYPE LE 0).ZG320A25   OK                      06080500
&ZCVAL        SETC '&ZCVAL INTYPE'              INCORRECT KEY USED      06080600
.ZG320A25     AIF   (K'&DDNAME LE 0).ZG320A26   OK                      06080700
&ZCVAL        SETC '&ZCVAL DDNAME'              INCORRECT KEY USED      06080800
.ZG320A26     AIF   (K'&DEPTR LE 0).ZG320A27    OK                      06080900
&ZCVAL        SETC '&ZCVAL DEPTR'               INCORRECT KEY USED      06081000
.ZG320A27     AIF   (K'&MEMBER LE 0).ZG320A28   OK                      06081100
&ZCVAL        SETC '&ZCVAL MEMBER'              INCORRECT KEY USED      06081200
.ZG320A28     AIF   (K'&DCBPTR LE 0).ZG320A29   OK                      06081300
&ZCVAL        SETC '&ZCVAL DCBPTR'              INCORRECT KEY USED      06081400
.ZG320A29     AIF   (K'&EPTOKEN LE 0).ZG320A30  OK                      06081500
&ZCVAL        SETC '&ZCVAL EPTOKEN'             INCORRECT KEY USED      06081600
.ZG320A30     AIF   (K'&ATTRIB LE 0).ZG320A31   OK                      06081700
&ZCVAL        SETC '&ZCVAL ATTRIB'              INCORRECT KEY USED      06081800
.ZG320A31     AIF   (K'&ALIASES LE 0).ZG320A32  OK                      06081900
&ZCVAL        SETC '&ZCVAL ALIASES'             INCORRECT KEY USED      06082000
.ZG320A32     AIF   (K'&EPLOC LE 0).ZG320A33    OK                      06082100
&ZCVAL        SETC '&ZCVAL EPLOC'               INCORRECT KEY USED      06082200
.ZG320A33     AIF   (K'&IDENTIFY LE 0).ZG320A34  OK                     06082300
&ZCVAL        SETC '&ZCVAL IDENTIFY'            INCORRECT KEY USED      06082400
.ZG320A34     AIF   (K'&EXTLST LE 0).ZG320A35   OK                      06082500
&ZCVAL        SETC '&ZCVAL EXTLST'              INCORRECT KEY USED      06082600
.ZG320A35     AIF   (K'&LNAME LE 0).ZG320A36    OK                      06082700
&ZCVAL        SETC '&ZCVAL LNAME'               INCORRECT KEY USED      06082800
.ZG320A36     AIF   (K'&NEWSECT LE 0).ZG320A37  OK                      06082900
&ZCVAL        SETC '&ZCVAL NEWSECT'             INCORRECT KEY USED      06083000
.ZG320A37     AIF   (K'&ENDDATA LE 0).ZG320A38  OK                      06083100
&ZCVAL        SETC '&ZCVAL ENDDATA'             INCORRECT KEY USED      06083200
.ZG320A38     AIF   (K'&MODLIB LE 0).ZG320A39   OK                      06083300
&ZCVAL        SETC '&ZCVAL MODLIB'              INCORRECT KEY USED      06083400
.ZG320A39     AIF   (K'&SNAME LE 0).ZG320A40    OK                      06083500
&ZCVAL        SETC '&ZCVAL SNAME'               INCORRECT KEY USED      06083600
.ZG320A40     AIF   (K'&REPLACE LE 0).ZG320A41  OK                      06083700
&ZCVAL        SETC '&ZCVAL REPLACE'             INCORRECT KEY USED      06083800
.ZG320A41     AIF   (K'&LIBOPT LE 0).ZG320A42   OK                      06083900
&ZCVAL        SETC '&ZCVAL LIBOPT'              INCORRECT KEY USED      06084000
.ZG320A42     AIF   (K'&OPTION LE 0).ZG320A43   OK                      06084100
&ZCVAL        SETC '&ZCVAL OPTION'              INCORRECT KEY USED      06084200
.ZG320A43     AIF   (K'&OPTVAL LE 0).ZG320A44   OK                      06084300
&ZCVAL        SETC '&ZCVAL OPTVAL'              INCORRECT KEY USED      06084400
.ZG320A44     AIF   (K'&PARMS LE 0).ZG320A45    OK                      06084500
&ZCVAL        SETC '&ZCVAL PARMS'               INCORRECT KEY USED      06084600
.ZG320A45     AIF   (K'&FILES LE 0).ZG320A46    OK                      06084700
&ZCVAL        SETC '&ZCVAL FILES'               INCORRECT KEY USED      06084800
.ZG320A46     AIF   (K'&EXITS LE 0).ZG320A47    OK                      06084900
&ZCVAL        SETC '&ZCVAL EXITS'               INCORRECT KEY USED      06085000
.ZG320A47     AIF   (K'&OPTIONS LE 0).ZG320A48  OK                      06085100
&ZCVAL        SETC '&ZCVAL OPTIONS'             INCORRECT KEY USED      06085200
.ZG320A48     AIF   (K'&ORIGIN LE 0).ZG320A49   OK                      06085300
&ZCVAL        SETC '&ZCVAL ORIGIN'              INCORRECT KEY USED      06085400
.ZG320A49     AIF   (K'&REGION LE 0).ZG320A50   OK                      06085500
&ZCVAL        SETC '&ZCVAL REGION'              INCORRECT KEY USED      06085600
.ZG320A50     AIF   (K'&ZCVAL LE 0).ZG320A51    OK                      06085700
&ZCVAL        SETC '&ZCVAL'(2,K'&ZCVAL-1)                               06085800
              AIF  (K'&ZCVAL LE 160).ZG320A51A                          06085900
&ZCVAL        SETC '&ZCVAL'(1,160)                                      06086000
&ZCVAL        SETC '&ZCVAL....'                                         06086100
.ZG320A51A    ANOP                                                      06086200
&ZMS          SETC  '"FUNC'     *KMEIA* MNOTE                           06086300
&ZMS          SETC  '&ZMS.=&FUNC"'                                      06086400
&ZMS          SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'                06086500
              MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'                06086600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             06086700
.ZG320A51     ANOP  ,                                                   06086800
.*----------------------------------------------------------------***   06086900
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     06087000
              AIF   (N'&WORKMOD LE 1).ZG322A    CK NUM                  06087100
&ZMS          SETC  '"WORKMOD='                 *KPOSA* MNOTE           06087200
&ZMS          SETC  '&ZMS.&WORKMOD"'                                    06087300
&ZMS          SETC  '&ZMS "WORKMOD"'                                    06087400
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 06087500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             06087600
.ZG322A       ANOP  ,                                                   06087700
.*-------------------------------------------------------------------   06087800
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         06087900
&ZXWORKMOD    SETC  'INPUT'     SET IN/OUTPUT                           06088000
&XWORKMOD     SETC  '&WORKMOD(1)'               SET XVARIABLE           06088100
              AIF   (N'&WORKMOD GT 1).ZG322B    MULTI PARMS             06088200
&XWORKMOD     SETC  '&WORKMOD'  SET XVARIABLE                           06088300
.ZG322B       AIF   (K'&WORKMOD(1) GT 0).ZG322C                         06088400
&ZXWORKMOD    SETC  ''          RESET IN/OUTPUT                         06088500
&ZMS          SETC  ' '         *KRQDA*                                 06088600
&ZMS          SETC  '&ZMS "WORKMOD" KEY AND ITS ARGUMENT'               06088700
              MNOTE 8,' &ZMS ARE REQUIRED.'                             06088800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             06088900
.ZG322C       ANOP  ,                                                   06089000
.*-------------------------------------------------------------------   06089100
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    06089200
              AIF   (K'&ZXWORKMOD LE 0).ZG322R  NOT I/O                 06089300
              AIF   ('&XWORKMOD'(1,1) NE '(').ZG322R                    06089400
&ZCGPR        SETC  '&XWORKMOD'(2,K'&XWORKMOD-2)                        06089500
              AIF   ('&ZCGPR'(1,1) NE '0').ZG322P                       06089600
              AIF   (K'&ZCGPR GT 2).ZG322Q                              06089700
              AIF   ('&ZCGPR' EQ '0').ZG322Q                            06089800
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       06089900
              AIF   (T'&ZCGPR NE 'N').ZG322Q    INVALID REG NAME        06090000
.ZG322P       ANOP  ,                                                   06090100
              AIF   (T'&ZCGPR NE 'N').ZG322R    NON NUMERIC             06090200
              AIF   ('&ZCGPR' LT '2').ZG322Q                            06090300
              AIF   ('&ZCGPR' LE '12').ZG322R                           06090400
.ZG322Q       ANOP  ,                                                   06090500
&ZMS          SETC  '"WORKMOD='                 *KGPRA* MNOTE           06090600
&ZMS          SETC  '&ZMS.&WORKMOD"'                                    06090700
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           06090800
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    06090900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             06091000
.ZG322R       ANOP  ,                                                   06091100
.*----------------------------------------------------------------***   06091200
.***AG.KKWRD01 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD             06091300
              AIF   (N'&INTENT LE 1).ZG325A     CK NUM                  06091400
&ZMS          SETC  '"INTENT='  *KPOSA* MNOTE                           06091500
&ZMS          SETC  '&ZMS.&INTENT"'                                     06091600
&ZMS          SETC  '&ZMS "INTENT"'                                     06091700
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 06091800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             06091900
.ZG325A       ANOP  ,                                                   06092000
.*-------------------------------------------------------------------   06092100
.***AG.KKWRD02 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD             06092200
&XINTENT      SETC  ''          INITIALIZE XVARIABLE                    06092300
.ZG326A   AIF   ('&INTENT(1)' NE 'B').ZG327A                            06092400
&XINTENT      SETC  'B'         SET KEYWORD                             06092500
.*-------------------------------------------------------------------   06092600
.***AG.KKWRD02 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD             06092700
.ZG327A   AIF   ('&INTENT(1)' NE 'A').ZG328A                            06092800
&XINTENT      SETC  'A'         SET KEYWORD                             06092900
.*-------------------------------------------------------------------   06093000
.***AG.KKWRD03 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD             06093100
.ZG328A       AIF   (K'&XINTENT GT 0).ZG328C    KEYWORD                 06093200
              AIF   (K'&INTENT(1) LE 0).ZG328B                          06093300
&ZMS          SETC  '"INTENT='  *KUKWA* MNOTE                           06093400
&ZMS          SETC  '&ZMS.&INTENT"'                                     06093500
&ZMS          SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '           06093600
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                 06093700
&ZMS          SETC  '&ZMS "B"'  VALID KEYWORD                           06093800
&ZMS          SETC  '&ZMS OR "A".'              VALID KEYWORD           06093900
              MNOTE 8,' &ZMS '                                          06094000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             06094100
.ZG328B       ANOP  ,                                                   06094200
&XINTENT      SETC  'B'         SET DEFAULT KEYWORD                     06094300
.ZG328C       ANOP  ,                                                   06094400
&ZXINTENT     SETC  'INPUT'     SET IN/OUTPUT                           06094500
.*-------------------------------------------------------------------   06094600
.***AG.KKWRD04 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD             06094700
              AIF   (K'&INTENT(1) GT 0).ZG328D  VALID                   06094800
&ZXINTENT     SETC  ''          RESET IN/OUTPUT                         06094900
&ZMS          SETC  'THE'                                               06095000
&ZMS          SETC  '&ZMS "INTENT" KEY AND ITS ARGUMENT'                06095100
&ZMS          SETC  '&ZMS ARE REQUIRED.'                                06095200
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                 06095300
&ZMS          SETC  '&ZMS "B"'  VALID KEYWORD                           06095400
&ZMS          SETC  '&ZMS OR "A".'              VALID KEYWORD           06095500
              MNOTE 8,' &ZMS '                                          06095600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             06095700
.ZG328D       ANOP  ,                                                   06095800
.*----------------------------------------------------------------***   06095900
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             06096000
              AIF   (N'&PROTECT LE 1).ZG330A    CK NUM                  06096100
&ZMS          SETC  '"PROTECT='                 *KPOSA* MNOTE           06096200
&ZMS          SETC  '&ZMS.&PROTECT"'                                    06096300
&ZMS          SETC  '&ZMS "PROTECT"'                                    06096400
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 06096500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             06096600
.ZG330A       ANOP  ,                                                   06096700
.*-------------------------------------------------------------------   06096800
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             06096900
&XPROTECT     SETC  ''          INITIALIZE XVARIABLE                    06097000
.ZG331A   AIF   ('&PROTECT(1)' NE 'Y').ZG332A                           06097100
&XPROTECT     SETC  'Y'         SET KEYWORD                             06097200
.*-------------------------------------------------------------------   06097300
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             06097400
.ZG332A   AIF   ('&PROTECT(1)' NE 'N').ZG333A                           06097500
&XPROTECT     SETC  'N'         SET KEYWORD                             06097600
.*-------------------------------------------------------------------   06097700
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             06097800
.ZG333A       AIF   (K'&XPROTECT GT 0).ZG333C   KEYWORD                 06097900
              AIF   (K'&PROTECT(1) LE 0).ZG333B                         06098000
&ZMS          SETC  '"PROTECT='                 *KUKWA* MNOTE           06098100
&ZMS          SETC  '&ZMS.&PROTECT"'                                    06098200
&ZMS          SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '           06098300
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                 06098400
&ZMS          SETC  '&ZMS "Y"'  VALID KEYWORD                           06098500
&ZMS          SETC  '&ZMS OR "N".'              VALID KEYWORD           06098600
              MNOTE 8,' &ZMS '                                          06098700
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             06098800
.ZG333B       ANOP  ,                                                   06098900
&XPROTECT     SETC  'Y'         SET DEFAULT KEYWORD                     06099000
.ZG333C       ANOP  ,                                                   06099100
&ZXPROTECT    SETC  'INPUT'     SET IN/OUTPUT                           06099200
.*-------------------------------------------------------------------   06099300
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           06099400
.ZG334        ANOP  ,                                                   06099500
&ZTLC         SETC 'SAVEW'                                              06099600
              AIF   ('&FUNC(1)' NE '&ZTLC').ZG349                       06099700
&XFUNC        SETC  'SAVEW'     SET KEYWORD                             06099800
              AIF   (N'&FUNC LE 1).ZG334A       CK NUM                  06099900
&ZMS          SETC  '"FUNC='    *KPOSA* MNOTE                           06100000
&ZMS          SETC  '&ZMS.&FUNC"'                                       06100100
&ZMS          SETC  '&ZMS "FUNC"'                                       06100200
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 06100300
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             06100400
.ZG334A       ANOP  ,                                                   06100500
.*------------------------------------------------------------------    06100600
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           06100700
&ZCVAL        SETC ''           CLEAR ERROR KEY ACCUMULATOR             06100800
.ZG334A0      AIF   (K'&ANAME LE 0).ZG334A1     OK                      06100900
&ZCVAL        SETC '&ZCVAL ANAME'               INCORRECT KEY USED      06101000
.ZG334A1      AIF   (K'&ENAME LE 0).ZG334A2     OK                      06101100
&ZCVAL        SETC '&ZCVAL ENAME'               INCORRECT KEY USED      06101200
.ZG334A2      AIF   (K'&AMODE LE 0).ZG334A3     OK                      06101300
&ZCVAL        SETC '&ZCVAL AMODE'               INCORRECT KEY USED      06101400
.ZG334A3      AIF   (K'&ATYPE LE 0).ZG334A4     OK                      06101500
&ZCVAL        SETC '&ZCVAL ATYPE'               INCORRECT KEY USED      06101600
.ZG334A4      AIF   (K'&SECTION LE 0).ZG334A5   OK                      06101700
&ZCVAL        SETC '&ZCVAL SECTION'             INCORRECT KEY USED      06101800
.ZG334A5      AIF   (K'&OLDNAME LE 0).ZG334A6   OK                      06101900
&ZCVAL        SETC '&ZCVAL OLDNAME'             INCORRECT KEY USED      06102000
.ZG334A6      AIF   (K'&NEWNAME LE 0).ZG334A7   OK                      06102100
&ZCVAL        SETC '&ZCVAL NEWNAME'             INCORRECT KEY USED      06102200
.ZG334A7      AIF   (K'&COUNT LE 0).ZG334A8     OK                      06102300
&ZCVAL        SETC '&ZCVAL COUNT'               INCORRECT KEY USED      06102400
.ZG334A8      AIF   (K'&MODE LE 0).ZG334A9      OK                      06102500
&ZCVAL        SETC '&ZCVAL MODE'                INCORRECT KEY USED      06102600
.ZG334A9      AIF   (K'&CLASS LE 0).ZG334A10    OK                      06102700
&ZCVAL        SETC '&ZCVAL CLASS'               INCORRECT KEY USED      06102800
.ZG334A10     AIF   (K'&CALLIB LE 0).ZG334A11   OK                      06102900
&ZCVAL        SETC '&ZCVAL CALLIB'              INCORRECT KEY USED      06103000
.ZG334A11     AIF   (K'&PATHNAME LE 0).ZG334A12  OK                     06103100
&ZCVAL        SETC '&ZCVAL PATHNAME'            INCORRECT KEY USED      06103200
.ZG334A12     AIF   (K'&DIALOG LE 0).ZG334A13   OK                      06103300
&ZCVAL        SETC '&ZCVAL DIALOG'              INCORRECT KEY USED      06103400
.ZG334A13     AIF   (K'&INTENT LE 0).ZG334A14   OK                      06103500
&ZCVAL        SETC '&ZCVAL INTENT'              INCORRECT KEY USED      06103600
.ZG334A14     AIF   (K'&PROTECT LE 0).ZG334A15  OK                      06103700
&ZCVAL        SETC '&ZCVAL PROTECT'             INCORRECT KEY USED      06103800
.ZG334A15     AIF   (K'&RENAMEL LE 0).ZG334A16  OK                      06103900
&ZCVAL        SETC '&ZCVAL RENAMEL'             INCORRECT KEY USED      06104000
.ZG334A16     AIF   (K'&AREA LE 0).ZG334A17     OK                      06104100
&ZCVAL        SETC '&ZCVAL AREA'                INCORRECT KEY USED      06104200
.ZG334A17     AIF   (K'&CURSOR LE 0).ZG334A18   OK                      06104300
&ZCVAL        SETC '&ZCVAL CURSOR'              INCORRECT KEY USED      06104400
.ZG334A18     AIF   (K'&RECTYPE LE 0).ZG334A19  OK                      06104500
&ZCVAL        SETC '&ZCVAL RECTYPE'             INCORRECT KEY USED      06104600
.ZG334A19     AIF   (K'&OFFSET LE 0).ZG334A20   OK                      06104700
&ZCVAL        SETC '&ZCVAL OFFSET'              INCORRECT KEY USED      06104800
.ZG334A20     AIF   (K'&SYMBOL LE 0).ZG334A21   OK                      06104900
&ZCVAL        SETC '&ZCVAL SYMBOL'              INCORRECT KEY USED      06105000
.ZG334A21     AIF   (K'&TCOUNT LE 0).ZG334A22   OK                      06105100
&ZCVAL        SETC '&ZCVAL TCOUNT'              INCORRECT KEY USED      06105200
.ZG334A22     AIF   (K'&NTYPE LE 0).ZG334A23    OK                      06105300
&ZCVAL        SETC '&ZCVAL NTYPE'               INCORRECT KEY USED      06105400
.ZG334A23     AIF   (K'&ITYPE LE 0).ZG334A24    OK                      06105500
&ZCVAL        SETC '&ZCVAL ITYPE'               INCORRECT KEY USED      06105600
.ZG334A24     AIF   (K'&DLLNAME LE 0).ZG334A25  OK                      06105700
&ZCVAL        SETC '&ZCVAL DLLNAME'             INCORRECT KEY USED      06105800
.ZG334A25     AIF   (K'&INAME LE 0).ZG334A26    OK                      06105900
&ZCVAL        SETC '&ZCVAL INAME'               INCORRECT KEY USED      06106000
.ZG334A26     AIF   (K'&INTYPE LE 0).ZG334A27   OK                      06106100
&ZCVAL        SETC '&ZCVAL INTYPE'              INCORRECT KEY USED      06106200
.ZG334A27     AIF   (K'&DDNAME LE 0).ZG334A28   OK                      06106300
&ZCVAL        SETC '&ZCVAL DDNAME'              INCORRECT KEY USED      06106400
.ZG334A28     AIF   (K'&DEPTR LE 0).ZG334A29    OK                      06106500
&ZCVAL        SETC '&ZCVAL DEPTR'               INCORRECT KEY USED      06106600
.ZG334A29     AIF   (K'&MEMBER LE 0).ZG334A30   OK                      06106700
&ZCVAL        SETC '&ZCVAL MEMBER'              INCORRECT KEY USED      06106800
.ZG334A30     AIF   (K'&DCBPTR LE 0).ZG334A31   OK                      06106900
&ZCVAL        SETC '&ZCVAL DCBPTR'              INCORRECT KEY USED      06107000
.ZG334A31     AIF   (K'&EPTOKEN LE 0).ZG334A32  OK                      06107100
&ZCVAL        SETC '&ZCVAL EPTOKEN'             INCORRECT KEY USED      06107200
.ZG334A32     AIF   (K'&ATTRIB LE 0).ZG334A33   OK                      06107300
&ZCVAL        SETC '&ZCVAL ATTRIB'              INCORRECT KEY USED      06107400
.ZG334A33     AIF   (K'&ALIASES LE 0).ZG334A34  OK                      06107500
&ZCVAL        SETC '&ZCVAL ALIASES'             INCORRECT KEY USED      06107600
.ZG334A34     AIF   (K'&EPLOC LE 0).ZG334A35    OK                      06107700
&ZCVAL        SETC '&ZCVAL EPLOC'               INCORRECT KEY USED      06107800
.ZG334A35     AIF   (K'&IDENTIFY LE 0).ZG334A36  OK                     06107900
&ZCVAL        SETC '&ZCVAL IDENTIFY'            INCORRECT KEY USED      06108000
.ZG334A36     AIF   (K'&EXTLST LE 0).ZG334A37   OK                      06108100
&ZCVAL        SETC '&ZCVAL EXTLST'              INCORRECT KEY USED      06108200
.ZG334A37     AIF   (K'&LNAME LE 0).ZG334A38    OK                      06108300
&ZCVAL        SETC '&ZCVAL LNAME'               INCORRECT KEY USED      06108400
.ZG334A38     AIF   (K'&NEWSECT LE 0).ZG334A39  OK                      06108500
&ZCVAL        SETC '&ZCVAL NEWSECT'             INCORRECT KEY USED      06108600
.ZG334A39     AIF   (K'&ENDDATA LE 0).ZG334A40  OK                      06108700
&ZCVAL        SETC '&ZCVAL ENDDATA'             INCORRECT KEY USED      06108800
.ZG334A40     AIF   (K'&LIBOPT LE 0).ZG334A41   OK                      06108900
&ZCVAL        SETC '&ZCVAL LIBOPT'              INCORRECT KEY USED      06109000
.ZG334A41     AIF   (K'&OPTION LE 0).ZG334A42   OK                      06109100
&ZCVAL        SETC '&ZCVAL OPTION'              INCORRECT KEY USED      06109200
.ZG334A42     AIF   (K'&OPTVAL LE 0).ZG334A43   OK                      06109300
&ZCVAL        SETC '&ZCVAL OPTVAL'              INCORRECT KEY USED      06109400
.ZG334A43     AIF   (K'&PARMS LE 0).ZG334A44    OK                      06109500
&ZCVAL        SETC '&ZCVAL PARMS'               INCORRECT KEY USED      06109600
.ZG334A44     AIF   (K'&FILES LE 0).ZG334A45    OK                      06109700
&ZCVAL        SETC '&ZCVAL FILES'               INCORRECT KEY USED      06109800
.ZG334A45     AIF   (K'&EXITS LE 0).ZG334A46    OK                      06109900
&ZCVAL        SETC '&ZCVAL EXITS'               INCORRECT KEY USED      06110000
.ZG334A46     AIF   (K'&OPTIONS LE 0).ZG334A47  OK                      06110100
&ZCVAL        SETC '&ZCVAL OPTIONS'             INCORRECT KEY USED      06110200
.ZG334A47     AIF   (K'&ORIGIN LE 0).ZG334A48   OK                      06110300
&ZCVAL        SETC '&ZCVAL ORIGIN'              INCORRECT KEY USED      06110400
.ZG334A48     AIF   (K'&REGION LE 0).ZG334A49   OK                      06110500
&ZCVAL        SETC '&ZCVAL REGION'              INCORRECT KEY USED      06110600
.ZG334A49     AIF   (K'&ZCVAL LE 0).ZG334A50    OK                      06110700
&ZCVAL        SETC '&ZCVAL'(2,K'&ZCVAL-1)                               06110800
              AIF  (K'&ZCVAL LE 160).ZG334A50A                          06110900
&ZCVAL        SETC '&ZCVAL'(1,160)                                      06111000
&ZCVAL        SETC '&ZCVAL....'                                         06111100
.ZG334A50A    ANOP                                                      06111200
&ZMS          SETC  '"FUNC'     *KMEIA* MNOTE                           06111300
&ZMS          SETC  '&ZMS.=&FUNC"'                                      06111400
&ZMS          SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'                06111500
              MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'                06111600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             06111700
.ZG334A50     ANOP  ,                                                   06111800
.*----------------------------------------------------------------***   06111900
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     06112000
              AIF   (N'&WORKMOD LE 1).ZG336A    CK NUM                  06112100
&ZMS          SETC  '"WORKMOD='                 *KPOSA* MNOTE           06112200
&ZMS          SETC  '&ZMS.&WORKMOD"'                                    06112300
&ZMS          SETC  '&ZMS "WORKMOD"'                                    06112400
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 06112500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             06112600
.ZG336A       ANOP  ,                                                   06112700
.*-------------------------------------------------------------------   06112800
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         06112900
&ZXWORKMOD    SETC  'INPUT'     SET IN/OUTPUT                           06113000
&XWORKMOD     SETC  '&WORKMOD(1)'               SET XVARIABLE           06113100
              AIF   (N'&WORKMOD GT 1).ZG336B    MULTI PARMS             06113200
&XWORKMOD     SETC  '&WORKMOD'  SET XVARIABLE                           06113300
.ZG336B       AIF   (K'&WORKMOD(1) GT 0).ZG336C                         06113400
&ZXWORKMOD    SETC  ''          RESET IN/OUTPUT                         06113500
&ZMS          SETC  ' '         *KRQDA*                                 06113600
&ZMS          SETC  '&ZMS "WORKMOD" KEY AND ITS ARGUMENT'               06113700
              MNOTE 8,' &ZMS ARE REQUIRED.'                             06113800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             06113900
.ZG336C       ANOP  ,                                                   06114000
.*-------------------------------------------------------------------   06114100
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    06114200
              AIF   (K'&ZXWORKMOD LE 0).ZG336R  NOT I/O                 06114300
              AIF   ('&XWORKMOD'(1,1) NE '(').ZG336R                    06114400
&ZCGPR        SETC  '&XWORKMOD'(2,K'&XWORKMOD-2)                        06114500
              AIF   ('&ZCGPR'(1,1) NE '0').ZG336P                       06118600
              AIF   (K'&ZCGPR GT 2).ZG336Q                              06118700
              AIF   ('&ZCGPR' EQ '0').ZG336Q                            06118800
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       06118900
              AIF   (T'&ZCGPR NE 'N').ZG336Q    INVALID REG NAME        06119000
.ZG336P       ANOP  ,                                                   06119100
              AIF   (T'&ZCGPR NE 'N').ZG336R    NON NUMERIC             06119200
              AIF   ('&ZCGPR' LT '2').ZG336Q                            06119300
              AIF   ('&ZCGPR' LE '12').ZG336R                           06119400
.ZG336Q       ANOP  ,                                                   06119500
&ZMS          SETC  '"WORKMOD='                 *KGPRA* MNOTE           06119600
&ZMS          SETC  '&ZMS.&WORKMOD"'                                    06119700
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           06119800
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    06119900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             06120000
.ZG336R       ANOP  ,                                                   06120100
.*----------------------------------------------------------------***   06120200
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     06120300
              AIF   (N'&MODLIB LE 1).ZG339A     CK NUM                  06120400
&ZMS          SETC  '"MODLIB='  *KPOSA* MNOTE                           06120500
&ZMS          SETC  '&ZMS.&MODLIB"'                                     06120600
&ZMS          SETC  '&ZMS "MODLIB"'                                     06120700
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 06120800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             06120900
.ZG339A       ANOP  ,                                                   06121000
.*-------------------------------------------------------------------   06121100
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         06121200
&ZXMODLIB     SETC  'INPUT'     SET IN/OUTPUT                           06121300
&XMODLIB      SETC  '0'                                                 06121400
              AIF   (K'&MODLIB(1) LE 0).ZG339B  PARM                    06121500
&XMODLIB      SETC  '&MODLIB(1)'                SET XVARIABLE           06121600
              AIF   (N'&MODLIB GT 1).ZG339B     MULTI PARMS             06121700
&XMODLIB      SETC  '&MODLIB'   SET XVARIABLE                           06121800
.ZG339B       ANOP  ,                                                   06121900
.*-------------------------------------------------------------------   06122000
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    06122100
              AIF   (K'&ZXMODLIB LE 0).ZG339R   NOT I/O                 06122200
              AIF   ('&XMODLIB' EQ '0').ZG339R                          06122300
              AIF   ('&XMODLIB'(1,1) NE '(').ZG339R                     06122400
&ZCGPR        SETC  '&XMODLIB'(2,K'&XMODLIB-2)                          06122500
              AIF   ('&ZCGPR'(1,1) NE '0').ZG339P                       06122600
              AIF   (K'&ZCGPR GT 2).ZG339Q                              06122700
              AIF   ('&ZCGPR' EQ '0').ZG339Q                            06122800
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       06122900
              AIF   (T'&ZCGPR NE 'N').ZG339Q    INVALID REG NAME        06123000
.ZG339P       ANOP  ,                                                   06123100
              AIF   (T'&ZCGPR NE 'N').ZG339R    NON NUMERIC             06123200
              AIF   ('&ZCGPR' LT '2').ZG339Q                            06123300
              AIF   ('&ZCGPR' LE '12').ZG339R                           06123400
.ZG339Q       ANOP  ,                                                   06123500
&ZMS          SETC  '"MODLIB='  *KGPRA* MNOTE                           06123600
&ZMS          SETC  '&ZMS.&MODLIB"'                                     06123700
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           06123800
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    06123900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             06124000
.ZG339R       ANOP  ,                                                   06124100
.*----------------------------------------------------------------***   06124200
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     06124300
              AIF   (N'&SNAME LE 1).ZG342A      CK NUM                  06124400
&ZMS          SETC  '"SNAME='   *KPOSA* MNOTE                           06124500
&ZMS          SETC  '&ZMS.&SNAME"'                                      06124600
&ZMS          SETC  '&ZMS "SNAME"'                                      06124700
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 06124800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             06124900
.ZG342A       ANOP  ,                                                   06125000
.*-------------------------------------------------------------------   06125100
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         06125200
&ZXSNAME      SETC  'INPUT'     SET IN/OUTPUT                           06125300
&XSNAME       SETC  '0'                                                 06125400
              AIF   (K'&SNAME(1) LE 0).ZG342B   PARM                    06125500
&XSNAME       SETC  '&SNAME(1)'                 SET XVARIABLE           06125600
              AIF   (N'&SNAME GT 1).ZG342B      MULTI PARMS             06125700
&XSNAME       SETC  '&SNAME'    SET XVARIABLE                           06125800
.ZG342B       ANOP  ,                                                   06125900
.*-------------------------------------------------------------------   06126000
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    06126100
              AIF   (K'&ZXSNAME LE 0).ZG342R    NOT I/O                 06126200
              AIF   ('&XSNAME' EQ '0').ZG342R                           06126300
              AIF   ('&XSNAME'(1,1) NE '(').ZG342R                      06126400
&ZCGPR        SETC  '&XSNAME'(2,K'&XSNAME-2)                            06126500
              AIF   ('&ZCGPR'(1,1) NE '0').ZG342P                       06126600
              AIF   (K'&ZCGPR GT 2).ZG342Q                              06126700
              AIF   ('&ZCGPR' EQ '0').ZG342Q                            06126800
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       06126900
              AIF   (T'&ZCGPR NE 'N').ZG342Q    INVALID REG NAME        06127000
.ZG342P       ANOP  ,                                                   06127100
              AIF   (T'&ZCGPR NE 'N').ZG342R    NON NUMERIC             06127200
              AIF   ('&ZCGPR' LT '2').ZG342Q                            06127300
              AIF   ('&ZCGPR' LE '12').ZG342R                           06127400
.ZG342Q       ANOP  ,                                                   06127500
&ZMS          SETC  '"SNAME='   *KGPRA* MNOTE                           06127600
&ZMS          SETC  '&ZMS.&SNAME"'                                      06127700
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           06127800
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    06127900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             06128000
.ZG342R       ANOP  ,                                                   06128100
.*----------------------------------------------------------------***   06128200
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             06128300
              AIF   (N'&REPLACE LE 1).ZG345A    CK NUM                  06128400
&ZMS          SETC  '"REPLACE='                 *KPOSA* MNOTE           06128500
&ZMS          SETC  '&ZMS.&REPLACE"'                                    06128600
&ZMS          SETC  '&ZMS "REPLACE"'                                    06128700
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 06128800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             06128900
.ZG345A       ANOP  ,                                                   06129000
.*-------------------------------------------------------------------   06129100
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             06129200
&XREPLACE     SETC  ''          INITIALIZE XVARIABLE                    06129300
.ZG346A   AIF   ('&REPLACE(1)' NE 'N').ZG347A                           06129400
&XREPLACE     SETC  'N'         SET KEYWORD                             06129500
.*-------------------------------------------------------------------   06129600
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             06129700
.ZG347A   AIF   ('&REPLACE(1)' NE 'Y').ZG348A                           06129800
&XREPLACE     SETC  'Y'         SET KEYWORD                             06129900
.*-------------------------------------------------------------------   06130000
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             06130100
.ZG348A       AIF   (K'&XREPLACE GT 0).ZG348C   KEYWORD                 06130200
              AIF   (K'&REPLACE(1) LE 0).ZG348B                         06130300
&ZMS          SETC  '"REPLACE='                 *KUKWA* MNOTE           06130400
&ZMS          SETC  '&ZMS.&REPLACE"'                                    06130500
&ZMS          SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '           06130600
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                 06130700
&ZMS          SETC  '&ZMS "N"'  VALID KEYWORD                           06130800
&ZMS          SETC  '&ZMS OR "Y".'              VALID KEYWORD           06130900
              MNOTE 8,' &ZMS '                                          06131000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             06131100
.ZG348B       ANOP  ,                                                   06131200
&XREPLACE     SETC  'N'         SET DEFAULT KEYWORD                     06131300
.ZG348C       ANOP  ,                                                   06131400
&ZXREPLACE    SETC  'INPUT'     SET IN/OUTPUT                           06131500
.*-------------------------------------------------------------------   06131600
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           06131700
.ZG349        ANOP  ,                                                   06131800
&ZTLC         SETC 'SETL'                                               06131900
              AIF   ('&FUNC(1)' NE '&ZTLC').ZG366                       06132000
&XFUNC        SETC  'SETL'      SET KEYWORD                             06132100
              AIF   (N'&FUNC LE 1).ZG349A       CK NUM                  06132200
&ZMS          SETC  '"FUNC='    *KPOSA* MNOTE                           06132300
&ZMS          SETC  '&ZMS.&FUNC"'                                       06132400
&ZMS          SETC  '&ZMS "FUNC"'                                       06132500
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 06132600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             06132700
.ZG349A       ANOP  ,                                                   06132800
.*------------------------------------------------------------------    06132900
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           06133000
&ZCVAL        SETC ''           CLEAR ERROR KEY ACCUMULATOR             06133100
.ZG349A0      AIF   (K'&ANAME LE 0).ZG349A1     OK                      06133200
&ZCVAL        SETC '&ZCVAL ANAME'               INCORRECT KEY USED      06133300
.ZG349A1      AIF   (K'&ENAME LE 0).ZG349A2     OK                      06133400
&ZCVAL        SETC '&ZCVAL ENAME'               INCORRECT KEY USED      06133500
.ZG349A2      AIF   (K'&AMODE LE 0).ZG349A3     OK                      06133600
&ZCVAL        SETC '&ZCVAL AMODE'               INCORRECT KEY USED      06133700
.ZG349A3      AIF   (K'&ATYPE LE 0).ZG349A4     OK                      06133800
&ZCVAL        SETC '&ZCVAL ATYPE'               INCORRECT KEY USED      06133900
.ZG349A4      AIF   (K'&SECTION LE 0).ZG349A5   OK                      06134000
&ZCVAL        SETC '&ZCVAL SECTION'             INCORRECT KEY USED      06134100
.ZG349A5      AIF   (K'&OLDNAME LE 0).ZG349A6   OK                      06134200
&ZCVAL        SETC '&ZCVAL OLDNAME'             INCORRECT KEY USED      06134300
.ZG349A6      AIF   (K'&NEWNAME LE 0).ZG349A7   OK                      06134400
&ZCVAL        SETC '&ZCVAL NEWNAME'             INCORRECT KEY USED      06134500
.ZG349A7      AIF   (K'&COUNT LE 0).ZG349A8     OK                      06134600
&ZCVAL        SETC '&ZCVAL COUNT'               INCORRECT KEY USED      06134700
.ZG349A8      AIF   (K'&MODE LE 0).ZG349A9      OK                      06134800
&ZCVAL        SETC '&ZCVAL MODE'                INCORRECT KEY USED      06134900
.ZG349A9      AIF   (K'&CLASS LE 0).ZG349A10    OK                      06135000
&ZCVAL        SETC '&ZCVAL CLASS'               INCORRECT KEY USED      06135100
.ZG349A10     AIF   (K'&DIALOG LE 0).ZG349A11   OK                      06135200
&ZCVAL        SETC '&ZCVAL DIALOG'              INCORRECT KEY USED      06135300
.ZG349A11     AIF   (K'&INTENT LE 0).ZG349A12   OK                      06135400
&ZCVAL        SETC '&ZCVAL INTENT'              INCORRECT KEY USED      06135500
.ZG349A12     AIF   (K'&PROTECT LE 0).ZG349A13  OK                      06135600
&ZCVAL        SETC '&ZCVAL PROTECT'             INCORRECT KEY USED      06135700
.ZG349A13     AIF   (K'&RENAMEL LE 0).ZG349A14  OK                      06135800
&ZCVAL        SETC '&ZCVAL RENAMEL'             INCORRECT KEY USED      06135900
.ZG349A14     AIF   (K'&AREA LE 0).ZG349A15     OK                      06136000
&ZCVAL        SETC '&ZCVAL AREA'                INCORRECT KEY USED      06136100
.ZG349A15     AIF   (K'&CURSOR LE 0).ZG349A16   OK                      06136200
&ZCVAL        SETC '&ZCVAL CURSOR'              INCORRECT KEY USED      06136300
.ZG349A16     AIF   (K'&RECTYPE LE 0).ZG349A17  OK                      06136400
&ZCVAL        SETC '&ZCVAL RECTYPE'             INCORRECT KEY USED      06136500
.ZG349A17     AIF   (K'&OFFSET LE 0).ZG349A18   OK                      06136600
&ZCVAL        SETC '&ZCVAL OFFSET'              INCORRECT KEY USED      06136700
.ZG349A18     AIF   (K'&TCOUNT LE 0).ZG349A19   OK                      06136800
&ZCVAL        SETC '&ZCVAL TCOUNT'              INCORRECT KEY USED      06136900
.ZG349A19     AIF   (K'&NTYPE LE 0).ZG349A20    OK                      06137000
&ZCVAL        SETC '&ZCVAL NTYPE'               INCORRECT KEY USED      06137100
.ZG349A20     AIF   (K'&ITYPE LE 0).ZG349A21    OK                      06137200
&ZCVAL        SETC '&ZCVAL ITYPE'               INCORRECT KEY USED      06137300
.ZG349A21     AIF   (K'&DLLNAME LE 0).ZG349A22  OK                      06137400
&ZCVAL        SETC '&ZCVAL DLLNAME'             INCORRECT KEY USED      06137500
.ZG349A22     AIF   (K'&INAME LE 0).ZG349A23    OK                      06137600
&ZCVAL        SETC '&ZCVAL INAME'               INCORRECT KEY USED      06137700
.ZG349A23     AIF   (K'&INTYPE LE 0).ZG349A24   OK                      06137800
&ZCVAL        SETC '&ZCVAL INTYPE'              INCORRECT KEY USED      06137900
.ZG349A24     AIF   (K'&DDNAME LE 0).ZG349A25   OK                      06138000
&ZCVAL        SETC '&ZCVAL DDNAME'              INCORRECT KEY USED      06138100
.ZG349A25     AIF   (K'&DEPTR LE 0).ZG349A26    OK                      06138200
&ZCVAL        SETC '&ZCVAL DEPTR'               INCORRECT KEY USED      06138300
.ZG349A26     AIF   (K'&MEMBER LE 0).ZG349A27   OK                      06138400
&ZCVAL        SETC '&ZCVAL MEMBER'              INCORRECT KEY USED      06138500
.ZG349A27     AIF   (K'&DCBPTR LE 0).ZG349A28   OK                      06138600
&ZCVAL        SETC '&ZCVAL DCBPTR'              INCORRECT KEY USED      06138700
.ZG349A28     AIF   (K'&EPTOKEN LE 0).ZG349A29  OK                      06138800
&ZCVAL        SETC '&ZCVAL EPTOKEN'             INCORRECT KEY USED      06138900
.ZG349A29     AIF   (K'&ATTRIB LE 0).ZG349A30   OK                      06139000
&ZCVAL        SETC '&ZCVAL ATTRIB'              INCORRECT KEY USED      06139100
.ZG349A30     AIF   (K'&ALIASES LE 0).ZG349A31  OK                      06139200
&ZCVAL        SETC '&ZCVAL ALIASES'             INCORRECT KEY USED      06139300
.ZG349A31     AIF   (K'&EPLOC LE 0).ZG349A32    OK                      06139400
&ZCVAL        SETC '&ZCVAL EPLOC'               INCORRECT KEY USED      06139500
.ZG349A32     AIF   (K'&IDENTIFY LE 0).ZG349A33  OK                     06139600
&ZCVAL        SETC '&ZCVAL IDENTIFY'            INCORRECT KEY USED      06139700
.ZG349A33     AIF   (K'&EXTLST LE 0).ZG349A34   OK                      06139800
&ZCVAL        SETC '&ZCVAL EXTLST'              INCORRECT KEY USED      06139900
.ZG349A34     AIF   (K'&LNAME LE 0).ZG349A35    OK                      06140000
&ZCVAL        SETC '&ZCVAL LNAME'               INCORRECT KEY USED      06140100
.ZG349A35     AIF   (K'&NEWSECT LE 0).ZG349A36  OK                      06140200
&ZCVAL        SETC '&ZCVAL NEWSECT'             INCORRECT KEY USED      06140300
.ZG349A36     AIF   (K'&ENDDATA LE 0).ZG349A37  OK                      06140400
&ZCVAL        SETC '&ZCVAL ENDDATA'             INCORRECT KEY USED      06140500
.ZG349A37     AIF   (K'&MODLIB LE 0).ZG349A38   OK                      06140600
&ZCVAL        SETC '&ZCVAL MODLIB'              INCORRECT KEY USED      06140700
.ZG349A38     AIF   (K'&SNAME LE 0).ZG349A39    OK                      06140800
&ZCVAL        SETC '&ZCVAL SNAME'               INCORRECT KEY USED      06140900
.ZG349A39     AIF   (K'&REPLACE LE 0).ZG349A40  OK                      06141000
&ZCVAL        SETC '&ZCVAL REPLACE'             INCORRECT KEY USED      06141100
.ZG349A40     AIF   (K'&OPTION LE 0).ZG349A41   OK                      06141200
&ZCVAL        SETC '&ZCVAL OPTION'              INCORRECT KEY USED      06141300
.ZG349A41     AIF   (K'&OPTVAL LE 0).ZG349A42   OK                      06141400
&ZCVAL        SETC '&ZCVAL OPTVAL'              INCORRECT KEY USED      06141500
.ZG349A42     AIF   (K'&PARMS LE 0).ZG349A43    OK                      06141600
&ZCVAL        SETC '&ZCVAL PARMS'               INCORRECT KEY USED      06141700
.ZG349A43     AIF   (K'&FILES LE 0).ZG349A44    OK                      06141800
&ZCVAL        SETC '&ZCVAL FILES'               INCORRECT KEY USED      06141900
.ZG349A44     AIF   (K'&EXITS LE 0).ZG349A45    OK                      06142000
&ZCVAL        SETC '&ZCVAL EXITS'               INCORRECT KEY USED      06142100
.ZG349A45     AIF   (K'&OPTIONS LE 0).ZG349A46  OK                      06142200
&ZCVAL        SETC '&ZCVAL OPTIONS'             INCORRECT KEY USED      06142300
.ZG349A46     AIF   (K'&ORIGIN LE 0).ZG349A47   OK                      06142400
&ZCVAL        SETC '&ZCVAL ORIGIN'              INCORRECT KEY USED      06142500
.ZG349A47     AIF   (K'&REGION LE 0).ZG349A48   OK                      06142600
&ZCVAL        SETC '&ZCVAL REGION'              INCORRECT KEY USED      06142700
.ZG349A48     AIF   (K'&ZCVAL LE 0).ZG349A49    OK                      06142800
&ZCVAL        SETC '&ZCVAL'(2,K'&ZCVAL-1)                               06142900
              AIF  (K'&ZCVAL LE 160).ZG349A49A                          06143000
&ZCVAL        SETC '&ZCVAL'(1,160)                                      06143100
&ZCVAL        SETC '&ZCVAL....'                                         06143200
.ZG349A49A    ANOP                                                      06143300
&ZMS          SETC  '"FUNC'     *KMEIA* MNOTE                           06143400
&ZMS          SETC  '&ZMS.=&FUNC"'                                      06143500
&ZMS          SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'                06143600
              MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'                06143700
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             06143800
.ZG349A49     ANOP  ,                                                   06143900
.*----------------------------------------------------------------***   06144000
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     06144100
              AIF   (N'&WORKMOD LE 1).ZG351A    CK NUM                  06144200
&ZMS          SETC  '"WORKMOD='                 *KPOSA* MNOTE           06144300
&ZMS          SETC  '&ZMS.&WORKMOD"'                                    06144400
&ZMS          SETC  '&ZMS "WORKMOD"'                                    06144500
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 06144600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             06144700
.ZG351A       ANOP  ,                                                   06144800
.*-------------------------------------------------------------------   06144900
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         06145000
&ZXWORKMOD    SETC  'INPUT'     SET IN/OUTPUT                           06145100
&XWORKMOD     SETC  '&WORKMOD(1)'               SET XVARIABLE           06145200
              AIF   (N'&WORKMOD GT 1).ZG351B    MULTI PARMS             06145300
&XWORKMOD     SETC  '&WORKMOD'  SET XVARIABLE                           06145400
.ZG351B       AIF   (K'&WORKMOD(1) GT 0).ZG351C                         06145500
&ZXWORKMOD    SETC  ''          RESET IN/OUTPUT                         06145600
&ZMS          SETC  ' '         *KRQDA*                                 06145700
&ZMS          SETC  '&ZMS "WORKMOD" KEY AND ITS ARGUMENT'               06145800
              MNOTE 8,' &ZMS ARE REQUIRED.'                             06145900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             06146000
.ZG351C       ANOP  ,                                                   06146400
.*-------------------------------------------------------------------   06146500
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    06146600
              AIF   (K'&ZXWORKMOD LE 0).ZG351R  NOT I/O                 06146700
              AIF   ('&XWORKMOD'(1,1) NE '(').ZG351R                    06146800
&ZCGPR        SETC  '&XWORKMOD'(2,K'&XWORKMOD-2)                        06146900
              AIF   ('&ZCGPR'(1,1) NE '0').ZG351P                       06147000
              AIF   (K'&ZCGPR GT 2).ZG351Q                              06147100
              AIF   ('&ZCGPR' EQ '0').ZG351Q                            06147200
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       06147300
              AIF   (T'&ZCGPR NE 'N').ZG351Q    INVALID REG NAME        06147400
.ZG351P       ANOP  ,                                                   06147500
              AIF   (T'&ZCGPR NE 'N').ZG351R    NON NUMERIC             06147600
              AIF   ('&ZCGPR' LT '2').ZG351Q                            06147700
              AIF   ('&ZCGPR' LE '12').ZG351R                           06147800
.ZG351Q       ANOP  ,                                                   06147900
&ZMS          SETC  '"WORKMOD='                 *KGPRA* MNOTE           06148000
&ZMS          SETC  '&ZMS.&WORKMOD"'                                    06148100
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           06148200
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    06148300
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             06148400
.ZG351R       ANOP  ,                                                   06148500
.*----------------------------------------------------------------***   06148600
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     06148700
              AIF   (N'&SYMBOL LE 1).ZG354A     CK NUM                  06148800
&ZMS          SETC  '"SYMBOL='  *KPOSA* MNOTE                           06148900
&ZMS          SETC  '&ZMS.&SYMBOL"'                                     06149000
&ZMS          SETC  '&ZMS "SYMBOL"'                                     06149100
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 06149200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             06149300
.ZG354A       ANOP  ,                                                   06149400
.*-------------------------------------------------------------------   06149500
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         06149600
&ZXSYMBOL     SETC  'INPUT'     SET IN/OUTPUT                           06149700
&XSYMBOL      SETC  '&SYMBOL(1)'                SET XVARIABLE           06149800
              AIF   (N'&SYMBOL GT 1).ZG354B     MULTI PARMS             06149900
&XSYMBOL      SETC  '&SYMBOL'   SET XVARIABLE                           06150000
.ZG354B       AIF   (K'&SYMBOL(1) GT 0).ZG354C                          06150100
&ZXSYMBOL     SETC  ''          RESET IN/OUTPUT                         06150200
&ZMS          SETC  ' '         *KRQDA*                                 06150300
&ZMS          SETC  '&ZMS "SYMBOL" KEY AND ITS ARGUMENT'                06150400
              MNOTE 8,' &ZMS ARE REQUIRED.'                             06150500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             06150600
.ZG354C       ANOP  ,                                                   06150700
.*-------------------------------------------------------------------   06150800
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    06150900
              AIF   (K'&ZXSYMBOL LE 0).ZG354R   NOT I/O                 06151000
              AIF   ('&XSYMBOL'(1,1) NE '(').ZG354R                     06151100
&ZCGPR        SETC  '&XSYMBOL'(2,K'&XSYMBOL-2)                          06151200
              AIF   ('&ZCGPR'(1,1) NE '0').ZG354P                       06151300
              AIF   (K'&ZCGPR GT 2).ZG354Q                              06151400
              AIF   ('&ZCGPR' EQ '0').ZG354Q                            06151500
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       06151600
              AIF   (T'&ZCGPR NE 'N').ZG354Q    INVALID REG NAME        06151700
.ZG354P       ANOP  ,                                                   06151800
              AIF   (T'&ZCGPR NE 'N').ZG354R    NON NUMERIC             06151900
              AIF   ('&ZCGPR' LT '2').ZG354Q                            06152000
              AIF   ('&ZCGPR' LE '12').ZG354R                           06152100
.ZG354Q       ANOP  ,                                                   06152200
&ZMS          SETC  '"SYMBOL='  *KGPRA* MNOTE                           06152300
&ZMS          SETC  '&ZMS.&SYMBOL"'                                     06152400
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           06152500
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    06152600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             06152700
.ZG354R       ANOP  ,                                                   06152800
.*----------------------------------------------------------------***   06152900
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             06153000
              AIF   (N'&LIBOPT LE 1).ZG357A     CK NUM                  06153100
&ZMS          SETC  '"LIBOPT='  *KPOSA* MNOTE                           06153200
&ZMS          SETC  '&ZMS.&LIBOPT"'                                     06153300
&ZMS          SETC  '&ZMS "LIBOPT"'                                     06153400
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 06153500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             06153600
.ZG357A       ANOP  ,                                                   06153700
.*-------------------------------------------------------------------   06153800
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             06153900
&XLIBOPT      SETC  ''          INITIALIZE XVARIABLE                    06154000
.ZG358A   AIF   ('&LIBOPT(1)' NE 'C').ZG359A                            06154100
&XLIBOPT      SETC  'C'         SET KEYWORD                             06154200
.*-------------------------------------------------------------------   06154300
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             06154400
.ZG359A   AIF   ('&LIBOPT(1)' NE 'N').ZG360A                            06154500
&XLIBOPT      SETC  'N'         SET KEYWORD                             06154600
.*-------------------------------------------------------------------   06154700
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             06154800
.ZG360A   AIF   ('&LIBOPT(1)' NE 'E').ZG361A                            06154900
&XLIBOPT      SETC  'E'         SET KEYWORD                             06155000
.*-------------------------------------------------------------------   06155100
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             06155200
.ZG361A       AIF   (K'&XLIBOPT GT 0).ZG361C    KEYWORD                 06155300
              AIF   (K'&LIBOPT(1) LE 0).ZG361B                          06155400
&ZMS          SETC  '"LIBOPT='  *KUKWA* MNOTE                           06155500
&ZMS          SETC  '&ZMS.&LIBOPT"'                                     06155600
&ZMS          SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '           06155700
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                 06155800
&ZMS          SETC  '&ZMS "C",'                 VALID KEYWORD           06155900
&ZMS          SETC  '&ZMS "N",'                 VALID KEYWORD           06156000
&ZMS          SETC  '&ZMS OR "E".'              VALID KEYWORD           06156100
              MNOTE 8,' &ZMS '                                          06156200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             06156300
.ZG361B       ANOP  ,                                                   06156400
&XLIBOPT      SETC  'C'         SET DEFAULT KEYWORD                     06156500
.ZG361C       ANOP  ,                                                   06156600
&ZXLIBOPT     SETC  'INPUT'     SET IN/OUTPUT                           06156700
.*----------------------------------------------------------------***   06156800
.***AG.KMEKY01 NAME, OPT INPUT, ME KEYS -XVARIABLE                      06156900
&XPATHLIB     SETC  ''          INITIALIZE XVARIABLE                    06157000
              AIF   (K'&CALLIB LE 0).ZG363C                             06157100
&ZXPATHLIB    SETC  'INPUT'     SET IN/OUTPUT                           06157200
&XPATHLIB     SETC  'CALLIB'    SET XVARIABLE                           06157300
&ZXCALLIB     SETC  'INPUT'     SET IN/OUTPUT                           06157400
&XCALLIB      SETC  '&CALLIB(1)'                SET XVARIABLE PARM      06157500
              AIF   (N'&CALLIB GT 1).ZG363A     MULTIPLE PARMS          06157600
&XCALLIB      SETC  '&CALLIB'   SET XVARIABLE PARM                      06157700
.ZG363A       AIF   (N'&CALLIB LE 1).ZG363B     CK NUM                  06157800
&ZMS          SETC  '"CALLIB='  *KPOSA* MNOTE                           06157900
&ZMS          SETC  '&ZMS.&CALLIB"'                                     06158000
&ZMS          SETC  '&ZMS "CALLIB"'                                     06158100
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 06158200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             06158300
.ZG363B       AIF   (K'&XCALLIB GT 0).ZG363C    ONE PARM                06158400
&ZXPATHLIB    SETC  ''          RESET IN/OUTPUT                         06158500
&ZXCALLIB     SETC  ''          RESET IN/OUTPUT                         06158600
&ZMS          SETC  'WHEN "SETL" IS SPECIFIED'  *KRQDA*                 06158700
&ZMS          SETC  '&ZMS , "CALLIB" KEY AND ITS ARGUMENT'              06158800
              MNOTE 8,' &ZMS ARE REQUIRED.'                             06158900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             06159000
.ZG363C       ANOP  ,                                                   06159100
.*----------------------------------------------------------------***   06159200
.***AG.KMEKY02 NAME, OPT INPUT, ME KEYS -XVARIABLE                      06159300
              AIF   (K'&PATHNAME LE 0).ZG364D   NO ME KEY               06159400
              AIF   (N'&PATHNAME LE 1).ZG364A   CK NUM                  06159500
&ZMS          SETC  '"PATHNAME='                *KPOSA* MNOTE           06159600
&ZMS          SETC  '&ZMS.&PATHNAME"'                                   06159700
&ZMS          SETC  '&ZMS "PATHNAME"'                                   06159800
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 06159900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             06160000
.ZG364A       AIF   (K'&XPATHLIB LE 0).ZG364B                           06160100
&ZMS          SETC  '"PATHNAME'                 *KMEKA* MNOTE           06160200
&ZMS          SETC  '&ZMS.=&PATHNAME"'                                  06160300
&ZMS          SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'               06160400
&ZMS          SETC  '&ZMS "&XPATHLIB"'                                  06160500
              MNOTE 8,' &ZMS KEY.'                                      06160600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             06160700
              AGO   .ZG364D                                             06160800
.*                                                                      06160900
.ZG364B       ANOP  ,                                                   06161000
&ZXPATHLIB    SETC  'INPUT'     SET IN/OUTPUT                           06161100
&XPATHLIB     SETC  'PATHNAME'  SET XVARIABLE                           06161200
&ZXPATHNAME   SETC  'INPUT'     SET IN/OUTPUT                           06161300
&XPATHNAME    SETC  '&PATHNAME(1)'              SET XVARIABLE PARM      06161400
              AIF   (N'&PATHNAME GT 1).ZG364C   MULTIPLE PARMS          06161500
&XPATHNAME    SETC  '&PATHNAME'                 SET XVARIABLE PARM      06161600
.ZG364C       AIF   (K'&XPATHNAME GT 0).ZG364D  ONE PARM                06161700
&ZXPATHLIB    SETC  ''          RESET IN/OUTPUT                         06161800
&ZXPATHNAME   SETC  ''          RESET IN/OUTPUT                         06161900
&ZMS          SETC  'WHEN "SETL" IS SPECIFIED'  *KRQDA*                 06162000
&ZMS          SETC  '&ZMS , "PATHNAME" KEY AND ITS ARGUMENT'            06162100
              MNOTE 8,' &ZMS ARE REQUIRED.'                             06162200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             06162300
.ZG364D       ANOP  ,                                                   06162400
.*------------------------------------------------------------------    06162500
.***AG.KMEKY07 NAME, OPT INPUT, ME KEYS -CHECK IF KEY ENTERED           06162600
              AIF   (K'&XPATHLIB GT 0).ZG365B                           06162700
&ZXPATHLIB    SETC  'INPUT'     SET IN/OUTPUT                           06162800
&XPATHLIB     SETC  'CALLIB'    SET DEFAULT                             06162900
&ZXCALLIB     SETC  'INPUT'     SET IN/OUTPUT                           06163000
&XCALLIB      SETC  '0'         SET DEFAULT PARM                        06163100
.ZG365B       ANOP  ,                                                   06163200
.*-------------------------------------------------------------------   06163300
.***AG.KCK02 NAME, OPT INPUT, ME KEYS -GPR OUT OF RANGE                 06163400
              AIF   (K'&ZXPATHNAME LE 0).ZG365R  NOT I/O                06163500
              AIF   ('&XPATHNAME'(1,1) NE '(').ZG365R                   06163600
&ZCGPR        SETC  '&XPATHNAME'(2,K'&XPATHNAME-2)                      06163700
              AIF   ('&ZCGPR'(1,1) NE '0').ZG365P                       06163800
              AIF   (K'&ZCGPR GT 2).ZG365Q                              06163900
              AIF   ('&ZCGPR' EQ '0').ZG365Q                            06164000
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       06164100
              AIF   (T'&ZCGPR NE 'N').ZG365Q    INVALID REG NAME        06164200
.ZG365P       ANOP  ,                                                   06164300
              AIF   (T'&ZCGPR NE 'N').ZG365R    NON NUMERIC             06164400
              AIF   ('&ZCGPR' LT '2').ZG365Q                            06164500
              AIF   ('&ZCGPR' LE '12').ZG365R                           06164600
.ZG365Q       ANOP  ,                                                   06164700
&ZMS          SETC  '"PATHNAME='                *KGPRA* MNOTE           06164800
&ZMS          SETC  '&ZMS.&PATHNAME"'                                   06164900
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           06165000
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    06165100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             06165200
.ZG365R       ANOP  ,                                                   06165300
.*-------------------------------------------------------------------   06165400
.***AG.KMEKY13 NAME, OPT INPUT, ME KEYS -PROCESS DEPENDENCIES           06165500
.ZG363        AIF   ('&XPATHLIB' NE 'CALLIB').ZG364                     06165600
.*-------------------------------------------------------------------   06165700
.***AG.KCK02 NAME, OPT INPUT, ME KEYS -GPR OUT OF RANGE                 06165800
              AIF   (K'&ZXCALLIB LE 0).ZG363R   NOT I/O                 06165900
              AIF   ('&XCALLIB' EQ '0').ZG363R                          06166000
              AIF   ('&XCALLIB'(1,1) NE '(').ZG363R                     06166100
&ZCGPR        SETC  '&XCALLIB'(2,K'&XCALLIB-2)                          06166200
              AIF   ('&ZCGPR'(1,1) NE '0').ZG363P                       06166300
              AIF   (K'&ZCGPR GT 2).ZG363Q                              06166400
              AIF   ('&ZCGPR' EQ '0').ZG363Q                            06166500
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       06166600
              AIF   (T'&ZCGPR NE 'N').ZG363Q    INVALID REG NAME        06166700
.ZG363P       ANOP  ,                                                   06166800
              AIF   (T'&ZCGPR NE 'N').ZG363R    NON NUMERIC             06166900
              AIF   ('&ZCGPR' LT '2').ZG363Q                            06167000
              AIF   ('&ZCGPR' LE '12').ZG363R                           06167100
.ZG363Q       ANOP  ,                                                   06167200
&ZMS          SETC  '"CALLIB='  *KGPRA* MNOTE                           06167300
&ZMS          SETC  '&ZMS.&CALLIB"'                                     06167400
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           06167500
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    06167600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             06167700
.ZG363R       ANOP  ,                                                   06167800
.*-------------------------------------------------------------------   06167900
.***AG.KMEKY13 NAME, OPT INPUT, ME KEYS -PROCESS DEPENDENCIES           06168000
.ZG364        AIF   ('&XPATHLIB' NE 'PATHNAME').ZG365                   06168100
.*-------------------------------------------------------------------   06168200
.***AG.KCK02 NAME, OPT INPUT, ME KEYS -GPR OUT OF RANGE                 06168300
              AIF   (K'&ZXPATHNAME LE 0).ZG364R  NOT I/O                06168400
              AIF   ('&XPATHNAME' EQ 'EITHER').ZG364R                   06168500
              AIF   ('&XPATHNAME'(1,1) NE '(').ZG364R                   06168600
&ZCGPR        SETC  '&XPATHNAME'(2,K'&XPATHNAME-2)                      06168700
              AIF   ('&ZCGPR'(1,1) NE '0').ZG364P                       06168800
              AIF   (K'&ZCGPR GT 2).ZG364Q                              06168900
              AIF   ('&ZCGPR' EQ '0').ZG364Q                            06169000
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       06169100
              AIF   (T'&ZCGPR NE 'N').ZG364Q    INVALID REG NAME        06169200
.ZG364P       ANOP  ,                                                   06169300
              AIF   (T'&ZCGPR NE 'N').ZG364R    NON NUMERIC             06169400
              AIF   ('&ZCGPR' LT '2').ZG364Q                            06169500
              AIF   ('&ZCGPR' LE '12').ZG364R                           06169600
.ZG364Q       ANOP  ,                                                   06169700
&ZMS          SETC  '"PATHNAME='                *KGPRA* MNOTE           06169800
&ZMS          SETC  '&ZMS.&PATHNAME"'                                   06169900
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           06170000
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    06170100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             06170200
.ZG364R       ANOP  ,                                                   06170300
.*-------------------------------------------------------------------   06170400
.***AG.KMEKY15 NAME, OPT INPUT, ME KEYS -END                            06170500
.ZG365        ANOP  ,           END MUTUALLY EXCLUSIVE KEYS             06170600
.*-------------------------------------------------------------------   06170700
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           06170800
.ZG366        ANOP  ,                                                   06170900
&ZTLC         SETC 'SETO'                                               06171000
              AIF   ('&FUNC(1)' NE '&ZTLC').ZG380                       06171100
&XFUNC        SETC  'SETO'      SET KEYWORD                             06171200
              AIF   (N'&FUNC LE 1).ZG366A       CK NUM                  06171300
&ZMS          SETC  '"FUNC='    *KPOSA* MNOTE                           06171400
&ZMS          SETC  '&ZMS.&FUNC"'                                       06171500
&ZMS          SETC  '&ZMS "FUNC"'                                       06171600
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 06171700
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             06171800
.ZG366A       ANOP  ,                                                   06171900
.*------------------------------------------------------------------    06172000
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           06172100
&ZCVAL        SETC ''           CLEAR ERROR KEY ACCUMULATOR             06172200
.ZG366A0      AIF   (K'&ANAME LE 0).ZG366A1     OK                      06172300
&ZCVAL        SETC '&ZCVAL ANAME'               INCORRECT KEY USED      06172400
.ZG366A1      AIF   (K'&ENAME LE 0).ZG366A2     OK                      06172500
&ZCVAL        SETC '&ZCVAL ENAME'               INCORRECT KEY USED      06172600
.ZG366A2      AIF   (K'&AMODE LE 0).ZG366A3     OK                      06172700
&ZCVAL        SETC '&ZCVAL AMODE'               INCORRECT KEY USED      06172800
.ZG366A3      AIF   (K'&ATYPE LE 0).ZG366A4     OK                      06172900
&ZCVAL        SETC '&ZCVAL ATYPE'               INCORRECT KEY USED      06173000
.ZG366A4      AIF   (K'&SECTION LE 0).ZG366A5   OK                      06173100
&ZCVAL        SETC '&ZCVAL SECTION'             INCORRECT KEY USED      06173200
.ZG366A5      AIF   (K'&OLDNAME LE 0).ZG366A6   OK                      06173300
&ZCVAL        SETC '&ZCVAL OLDNAME'             INCORRECT KEY USED      06173400
.ZG366A6      AIF   (K'&NEWNAME LE 0).ZG366A7   OK                      06173500
&ZCVAL        SETC '&ZCVAL NEWNAME'             INCORRECT KEY USED      06173600
.ZG366A7      AIF   (K'&COUNT LE 0).ZG366A8     OK                      06173700
&ZCVAL        SETC '&ZCVAL COUNT'               INCORRECT KEY USED      06173800
.ZG366A8      AIF   (K'&MODE LE 0).ZG366A9      OK                      06173900
&ZCVAL        SETC '&ZCVAL MODE'                INCORRECT KEY USED      06174000
.ZG366A9      AIF   (K'&CLASS LE 0).ZG366A10    OK                      06174100
&ZCVAL        SETC '&ZCVAL CLASS'               INCORRECT KEY USED      06174200
.ZG366A10     AIF   (K'&CALLIB LE 0).ZG366A11   OK                      06174300
&ZCVAL        SETC '&ZCVAL CALLIB'              INCORRECT KEY USED      06174400
.ZG366A11     AIF   (K'&PATHNAME LE 0).ZG366A12  OK                     06174500
&ZCVAL        SETC '&ZCVAL PATHNAME'            INCORRECT KEY USED      06174600
.ZG366A12     AIF   (K'&INTENT LE 0).ZG366A13   OK                      06174700
&ZCVAL        SETC '&ZCVAL INTENT'              INCORRECT KEY USED      06174800
.ZG366A13     AIF   (K'&PROTECT LE 0).ZG366A14  OK                      06174900
&ZCVAL        SETC '&ZCVAL PROTECT'             INCORRECT KEY USED      06175000
.ZG366A14     AIF   (K'&RENAMEL LE 0).ZG366A15  OK                      06175100
&ZCVAL        SETC '&ZCVAL RENAMEL'             INCORRECT KEY USED      06175200
.ZG366A15     AIF   (K'&AREA LE 0).ZG366A16     OK                      06175300
&ZCVAL        SETC '&ZCVAL AREA'                INCORRECT KEY USED      06175400
.ZG366A16     AIF   (K'&CURSOR LE 0).ZG366A17   OK                      06175500
&ZCVAL        SETC '&ZCVAL CURSOR'              INCORRECT KEY USED      06175600
.ZG366A17     AIF   (K'&RECTYPE LE 0).ZG366A18  OK                      06175700
&ZCVAL        SETC '&ZCVAL RECTYPE'             INCORRECT KEY USED      06175800
.ZG366A18     AIF   (K'&OFFSET LE 0).ZG366A19   OK                      06175900
&ZCVAL        SETC '&ZCVAL OFFSET'              INCORRECT KEY USED      06176000
.ZG366A19     AIF   (K'&SYMBOL LE 0).ZG366A20   OK                      06176100
&ZCVAL        SETC '&ZCVAL SYMBOL'              INCORRECT KEY USED      06176200
.ZG366A20     AIF   (K'&TCOUNT LE 0).ZG366A21   OK                      06176300
&ZCVAL        SETC '&ZCVAL TCOUNT'              INCORRECT KEY USED      06176400
.ZG366A21     AIF   (K'&NTYPE LE 0).ZG366A22    OK                      06176500
&ZCVAL        SETC '&ZCVAL NTYPE'               INCORRECT KEY USED      06176600
.ZG366A22     AIF   (K'&ITYPE LE 0).ZG366A23    OK                      06176700
&ZCVAL        SETC '&ZCVAL ITYPE'               INCORRECT KEY USED      06176800
.ZG366A23     AIF   (K'&DLLNAME LE 0).ZG366A24  OK                      06176900
&ZCVAL        SETC '&ZCVAL DLLNAME'             INCORRECT KEY USED      06177000
.ZG366A24     AIF   (K'&INAME LE 0).ZG366A25    OK                      06177100
&ZCVAL        SETC '&ZCVAL INAME'               INCORRECT KEY USED      06177200
.ZG366A25     AIF   (K'&INTYPE LE 0).ZG366A26   OK                      06177300
&ZCVAL        SETC '&ZCVAL INTYPE'              INCORRECT KEY USED      06177400
.ZG366A26     AIF   (K'&DDNAME LE 0).ZG366A27   OK                      06177500
&ZCVAL        SETC '&ZCVAL DDNAME'              INCORRECT KEY USED      06177600
.ZG366A27     AIF   (K'&DEPTR LE 0).ZG366A28    OK                      06177700
&ZCVAL        SETC '&ZCVAL DEPTR'               INCORRECT KEY USED      06177800
.ZG366A28     AIF   (K'&MEMBER LE 0).ZG366A29   OK                      06177900
&ZCVAL        SETC '&ZCVAL MEMBER'              INCORRECT KEY USED      06178000
.ZG366A29     AIF   (K'&DCBPTR LE 0).ZG366A30   OK                      06178100
&ZCVAL        SETC '&ZCVAL DCBPTR'              INCORRECT KEY USED      06178200
.ZG366A30     AIF   (K'&EPTOKEN LE 0).ZG366A31  OK                      06178300
&ZCVAL        SETC '&ZCVAL EPTOKEN'             INCORRECT KEY USED      06178400
.ZG366A31     AIF   (K'&ATTRIB LE 0).ZG366A32   OK                      06178500
&ZCVAL        SETC '&ZCVAL ATTRIB'              INCORRECT KEY USED      06178600
.ZG366A32     AIF   (K'&ALIASES LE 0).ZG366A33  OK                      06178700
&ZCVAL        SETC '&ZCVAL ALIASES'             INCORRECT KEY USED      06178800
.ZG366A33     AIF   (K'&EPLOC LE 0).ZG366A34    OK                      06178900
&ZCVAL        SETC '&ZCVAL EPLOC'               INCORRECT KEY USED      06179000
.ZG366A34     AIF   (K'&IDENTIFY LE 0).ZG366A35  OK                     06179100
&ZCVAL        SETC '&ZCVAL IDENTIFY'            INCORRECT KEY USED      06179200
.ZG366A35     AIF   (K'&EXTLST LE 0).ZG366A36   OK                      06179300
&ZCVAL        SETC '&ZCVAL EXTLST'              INCORRECT KEY USED      06179400
.ZG366A36     AIF   (K'&LNAME LE 0).ZG366A37    OK                      06179500
&ZCVAL        SETC '&ZCVAL LNAME'               INCORRECT KEY USED      06179600
.ZG366A37     AIF   (K'&NEWSECT LE 0).ZG366A38  OK                      06179700
&ZCVAL        SETC '&ZCVAL NEWSECT'             INCORRECT KEY USED      06179800
.ZG366A38     AIF   (K'&ENDDATA LE 0).ZG366A39  OK                      06179900
&ZCVAL        SETC '&ZCVAL ENDDATA'             INCORRECT KEY USED      06180000
.ZG366A39     AIF   (K'&MODLIB LE 0).ZG366A40   OK                      06180100
&ZCVAL        SETC '&ZCVAL MODLIB'              INCORRECT KEY USED      06180200
.ZG366A40     AIF   (K'&SNAME LE 0).ZG366A41    OK                      06180300
&ZCVAL        SETC '&ZCVAL SNAME'               INCORRECT KEY USED      06180400
.ZG366A41     AIF   (K'&REPLACE LE 0).ZG366A42  OK                      06180500
&ZCVAL        SETC '&ZCVAL REPLACE'             INCORRECT KEY USED      06180600
.ZG366A42     AIF   (K'&LIBOPT LE 0).ZG366A43   OK                      06180700
&ZCVAL        SETC '&ZCVAL LIBOPT'              INCORRECT KEY USED      06180800
.ZG366A43     AIF   (K'&FILES LE 0).ZG366A44    OK                      06180900
&ZCVAL        SETC '&ZCVAL FILES'               INCORRECT KEY USED      06181000
.ZG366A44     AIF   (K'&EXITS LE 0).ZG366A45    OK                      06181100
&ZCVAL        SETC '&ZCVAL EXITS'               INCORRECT KEY USED      06181200
.ZG366A45     AIF   (K'&OPTIONS LE 0).ZG366A46  OK                      06181300
&ZCVAL        SETC '&ZCVAL OPTIONS'             INCORRECT KEY USED      06181400
.ZG366A46     AIF   (K'&ORIGIN LE 0).ZG366A47   OK                      06181500
&ZCVAL        SETC '&ZCVAL ORIGIN'              INCORRECT KEY USED      06181600
.ZG366A47     AIF   (K'&REGION LE 0).ZG366A48   OK                      06181700
&ZCVAL        SETC '&ZCVAL REGION'              INCORRECT KEY USED      06181800
.ZG366A48     AIF   (K'&ZCVAL LE 0).ZG366A49    OK                      06181900
&ZCVAL        SETC '&ZCVAL'(2,K'&ZCVAL-1)                               06182000
              AIF  (K'&ZCVAL LE 160).ZG366A49A                          06182100
&ZCVAL        SETC '&ZCVAL'(1,160)                                      06182200
&ZCVAL        SETC '&ZCVAL....'                                         06182300
.ZG366A49A    ANOP                                                      06182400
&ZMS          SETC  '"FUNC'     *KMEIA* MNOTE                           06182500
&ZMS          SETC  '&ZMS.=&FUNC"'                                      06182600
&ZMS          SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'                06182700
              MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'                06182800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             06182900
.ZG366A49     ANOP  ,                                                   06183000
.*----------------------------------------------------------------***   06183100
.***AG.KMEKY01 NAME, RQD INPUT, ME KEYS -XVARIABLE                      06183200
&XOPTLVL      SETC  ''          INITIALIZE XVARIABLE                    06183300
              AIF   (K'&DIALOG LE 0).ZG368C                             06183400
&ZXOPTLVL     SETC  'INPUT'     SET IN/OUTPUT                           06183500
&XOPTLVL      SETC  'DIALOG'    SET XVARIABLE                           06183600
&ZXDIALOG     SETC  'INPUT'     SET IN/OUTPUT                           06184000
&XDIALOG      SETC  '&DIALOG(1)'                SET XVARIABLE PARM      06184800
              AIF   (N'&DIALOG GT 1).ZG368A     MULTIPLE PARMS          06185600
&XDIALOG      SETC  '&DIALOG'   SET XVARIABLE PARM                      06186400
.ZG368A       AIF   (N'&DIALOG LE 1).ZG368B     CK NUM                  06187200
&ZMS          SETC  '"DIALOG='  *KPOSA* MNOTE                           06188000
&ZMS          SETC  '&ZMS.&DIALOG"'                                     06188800
&ZMS          SETC  '&ZMS "DIALOG"'                                     06189600
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 06190400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             06191200
.ZG368B       AIF   (K'&XDIALOG GT 0).ZG368C    ONE PARM                06192000
&ZXOPTLVL     SETC  ''          RESET IN/OUTPUT                         06192800
&ZXDIALOG     SETC  ''          RESET IN/OUTPUT                         06193600
&ZMS          SETC  ' '         *KRQDA*                                 06194400
&ZMS          SETC  '&ZMS "DIALOG" KEY AND ITS ARGUMENT'                06195200
              MNOTE 8,' &ZMS ARE REQUIRED.'                             06196000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             06196800
.ZG368C       ANOP  ,                                                   06197600
.*----------------------------------------------------------------***   06198400
.***AG.KMEKY02 NAME, RQD INPUT, ME KEYS -XVARIABLE                      06199200
              AIF   (K'&WORKMOD LE 0).ZG369D    NO ME KEY               06200000
              AIF   (N'&WORKMOD LE 1).ZG369A    CK NUM                  06200800
&ZMS          SETC  '"WORKMOD='                 *KPOSA* MNOTE           06201600
&ZMS          SETC  '&ZMS.&WORKMOD"'                                    06202400
&ZMS          SETC  '&ZMS "WORKMOD"'                                    06203200
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 06204000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             06204800
.ZG369A       AIF   (K'&XOPTLVL LE 0).ZG369B                            06205600
&ZMS          SETC  '"WORKMOD'  *KMEKA* MNOTE                           06206400
&ZMS          SETC  '&ZMS.=&WORKMOD"'                                   06207200
&ZMS          SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'               06208000
&ZMS          SETC  '&ZMS "&XOPTLVL"'                                   06208800
              MNOTE 8,' &ZMS KEY.'                                      06209600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             06210400
              AGO   .ZG369D                                             06211200
.*                                                                      06212000
.ZG369B       ANOP  ,                                                   06212800
&ZXOPTLVL     SETC  'INPUT'     SET IN/OUTPUT                           06213600
&XOPTLVL      SETC  'WORKMOD'   SET XVARIABLE                           06214400
&ZXWORKMOD    SETC  'INPUT'     SET IN/OUTPUT                           06215200
&XWORKMOD     SETC  '&WORKMOD(1)'               SET XVARIABLE PARM      06216000
              AIF   (N'&WORKMOD GT 1).ZG369C    MULTIPLE PARMS          06216800
&XWORKMOD     SETC  '&WORKMOD'  SET XVARIABLE PARM                      06217600
.ZG369C       AIF   (K'&XWORKMOD GT 0).ZG369D   ONE PARM                06218400
&ZXOPTLVL     SETC  ''          RESET IN/OUTPUT                         06219200
&ZXWORKMOD    SETC  ''          RESET IN/OUTPUT                         06220000
&ZMS          SETC  ' '         *KRQDA*                                 06220800
&ZMS          SETC  '&ZMS "WORKMOD" KEY AND ITS ARGUMENT'               06221600
              MNOTE 8,' &ZMS ARE REQUIRED.'                             06222400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             06223200
.ZG369D       ANOP  ,                                                   06224000
.*------------------------------------------------------------------    06224800
.***AG.KME4Y09 NAME, RQD INPUT, ME KEYS -CHECK IF KEY ENTERED           06225600
              AIF   (K'&XOPTLVL GT 0).ZG370B                            06226400
&ZXOPTLVL     SETC  ''          RESET IN/OUTPUT                         06227200
&ZXDIALOG     SETC  ''          RESET IN/OUTPUT                         06228000
&XOPTLVL      SETC  ''          ENSURE NULL                             06228800
&XDIALOG      SETC  ''          ENSURE NULL                             06229600
&ZMS          SETC  'ONE OF THE FOLLOWING'      *KMERA* MNOTE           06230400
&ZMS          SETC  '&ZMS MUTUALLY EXCLUSIVE KEY(S) IS'                 06230900
&ZMS          SETC  '&ZMS REQUIRED:'                                    06231400
&ZMS          SETC  '&ZMS "DIALOG"'             VALID ME KEY            06231900
&ZMS          SETC  '&ZMS OR "WORKMOD".'        VALID ME KEY            06232400
              MNOTE 8,' &ZMS '                                          06233000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             06233600
.ZG370B       ANOP  ,                                                   06234400
.*-------------------------------------------------------------------   06235200
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           06236000
.ZG368        AIF   ('&XOPTLVL' NE 'DIALOG').ZG369                      06236800
.*-------------------------------------------------------------------   06237600
.***AG.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 06238400
              AIF   (K'&ZXDIALOG LE 0).ZG368R   NOT I/O                 06239200
              AIF   ('&XDIALOG'(1,1) NE '(').ZG368R                     06240000
&ZCGPR        SETC  '&XDIALOG'(2,K'&XDIALOG-2)                          06240800
              AIF   ('&ZCGPR'(1,1) NE '0').ZG368P                       06290800
              AIF   (K'&ZCGPR GT 2).ZG368Q                              06340800
              AIF   ('&ZCGPR' EQ '0').ZG368Q                            06390800
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       06486400
              AIF   (T'&ZCGPR NE 'N').ZG368Q    INVALID REG NAME        06487200
.ZG368P       ANOP  ,                                                   06488000
              AIF   (T'&ZCGPR NE 'N').ZG368R    NON NUMERIC             06488800
              AIF   ('&ZCGPR' LT '2').ZG368Q                            06489600
              AIF   ('&ZCGPR' LE '12').ZG368R                           06490400
.ZG368Q       ANOP  ,                                                   06491200
&ZMS          SETC  '"DIALOG='  *KGPRA* MNOTE                           06492000
&ZMS          SETC  '&ZMS.&DIALOG"'                                     06492800
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           06493600
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    06494400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             06495200
.ZG368R       ANOP  ,                                                   06528000
.*-------------------------------------------------------------------   06560800
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           06561100
.ZG369        AIF   ('&XOPTLVL' NE 'WORKMOD').ZG370                     06561400
.*-------------------------------------------------------------------   06561700
.***AG.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 06562000
              AIF   (K'&ZXWORKMOD LE 0).ZG369R  NOT I/O                 06562300
              AIF   ('&XWORKMOD'(1,1) NE '(').ZG369R                    06562600
&ZCGPR        SETC  '&XWORKMOD'(2,K'&XWORKMOD-2)                        06562900
              AIF   ('&ZCGPR'(1,1) NE '0').ZG369P                       06719700
              AIF   (K'&ZCGPR GT 2).ZG369Q                              06719800
              AIF   ('&ZCGPR' EQ '0').ZG369Q                            06719900
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       06720000
              AIF   (T'&ZCGPR NE 'N').ZG369Q    INVALID REG NAME        06720100
.ZG369P       ANOP  ,                                                   06720200
              AIF   (T'&ZCGPR NE 'N').ZG369R    NON NUMERIC             06720300
              AIF   ('&ZCGPR' LT '2').ZG369Q                            06720400
              AIF   ('&ZCGPR' LE '12').ZG369R                           06720500
.ZG369Q       ANOP  ,                                                   06720600
&ZMS          SETC  '"WORKMOD='                 *KGPRA* MNOTE           06720700
&ZMS          SETC  '&ZMS.&WORKMOD"'                                    06720800
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           06720900
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    06721000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             06721100
.ZG369R       ANOP  ,                                                   06721200
.*-------------------------------------------------------------------   06721300
.***AG.KMEKY15 NAME, RQD INPUT, ME KEYS -END                            06721400
.ZG370        ANOP  ,           END MUTUALLY EXCLUSIVE KEYS             06721500
.*----------------------------------------------------------------***   06721600
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     06721700
              AIF   (N'&OPTION LE 1).ZG372A     CK NUM                  06721800
&ZMS          SETC  '"OPTION='  *KPOSA* MNOTE                           06721900
&ZMS          SETC  '&ZMS.&OPTION"'                                     06722000
&ZMS          SETC  '&ZMS "OPTION"'                                     06722100
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 06722200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             06722300
.ZG372A       ANOP  ,                                                   06722400
.*-------------------------------------------------------------------   06722500
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         06722600
&ZXOPTION     SETC  'INPUT'     SET IN/OUTPUT                           06722700
&XOPTION      SETC  '&OPTION(1)'                SET XVARIABLE           06722800
              AIF   (N'&OPTION GT 1).ZG372B     MULTI PARMS             06722900
&XOPTION      SETC  '&OPTION'   SET XVARIABLE                           06723000
.ZG372B       AIF   (K'&OPTION(1) GT 0).ZG372C                          06723100
&ZXOPTION     SETC  ''          RESET IN/OUTPUT                         06723200
&ZMS          SETC  ' '         *KRQDA*                                 06723300
&ZMS          SETC  '&ZMS "OPTION" KEY AND ITS ARGUMENT'                06723400
              MNOTE 8,' &ZMS ARE REQUIRED.'                             06723500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             06723600
.ZG372C       ANOP  ,                                                   06723700
.*-------------------------------------------------------------------   06723800
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    06723900
              AIF   (K'&ZXOPTION LE 0).ZG372R   NOT I/O                 06724000
              AIF   ('&XOPTION'(1,1) NE '(').ZG372R                     06724100
&ZCGPR        SETC  '&XOPTION'(2,K'&XOPTION-2)                          06724200
              AIF   ('&ZCGPR'(1,1) NE '0').ZG372P                       06724300
              AIF   (K'&ZCGPR GT 2).ZG372Q                              06724400
              AIF   ('&ZCGPR' EQ '0').ZG372Q                            06724500
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       06724600
              AIF   (T'&ZCGPR NE 'N').ZG372Q    INVALID REG NAME        06724700
.ZG372P       ANOP  ,                                                   06724800
              AIF   (T'&ZCGPR NE 'N').ZG372R    NON NUMERIC             06724900
              AIF   ('&ZCGPR' LT '2').ZG372Q                            06725000
              AIF   ('&ZCGPR' LE '12').ZG372R                           06725100
.ZG372Q       ANOP  ,                                                   06725200
&ZMS          SETC  '"OPTION='  *KGPRA* MNOTE                           06725300
&ZMS          SETC  '&ZMS.&OPTION"'                                     06725400
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           06725500
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    06725600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             06725700
.ZG372R       ANOP  ,                                                   06725800
.*----------------------------------------------------------------***   06725900
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     06726000
              AIF   (N'&OPTVAL LE 1).ZG375A     CK NUM                  06726100
&ZMS          SETC  '"OPTVAL='  *KPOSA* MNOTE                           06726200
&ZMS          SETC  '&ZMS.&OPTVAL"'                                     06726300
&ZMS          SETC  '&ZMS "OPTVAL"'                                     06726400
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 06726500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             06726600
.ZG375A       ANOP  ,                                                   06726700
.*-------------------------------------------------------------------   06726800
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         06726900
&ZXOPTVAL     SETC  'INPUT'     SET IN/OUTPUT                           06727000
&XOPTVAL      SETC  '&OPTVAL(1)'                SET XVARIABLE           06727100
              AIF   (N'&OPTVAL GT 1).ZG375B     MULTI PARMS             06727200
&XOPTVAL      SETC  '&OPTVAL'   SET XVARIABLE                           06727300
.ZG375B       AIF   (K'&OPTVAL(1) GT 0).ZG375C                          06727400
&ZXOPTVAL     SETC  ''          RESET IN/OUTPUT                         06727500
&ZMS          SETC  ' '         *KRQDA*                                 06727600
&ZMS          SETC  '&ZMS "OPTVAL" KEY AND ITS ARGUMENT'                06727700
              MNOTE 8,' &ZMS ARE REQUIRED.'                             06727800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             06727900
.ZG375C       ANOP  ,                                                   06728000
.*-------------------------------------------------------------------   06728100
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    06728400
              AIF   (K'&ZXOPTVAL LE 0).ZG375R   NOT I/O                 06728700
              AIF   ('&XOPTVAL'(1,1) NE '(').ZG375R                     06729000
&ZCGPR        SETC  '&XOPTVAL'(2,K'&XOPTVAL-2)                          06729300
              AIF   ('&ZCGPR'(1,1) NE '0').ZG375P                       06729900
              AIF   (K'&ZCGPR GT 2).ZG375Q                              06730200
              AIF   ('&ZCGPR' EQ '0').ZG375Q                            06730500
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       06730800
              AIF   (T'&ZCGPR NE 'N').ZG375Q    INVALID REG NAME        06731100
.ZG375P       ANOP  ,                                                   06731400
              AIF   (T'&ZCGPR NE 'N').ZG375R    NON NUMERIC             06731700
              AIF   ('&ZCGPR' LT '2').ZG375Q                            06732000
              AIF   ('&ZCGPR' LE '12').ZG375R                           06732300
.ZG375Q       ANOP  ,                                                   06732600
&ZMS          SETC  '"OPTVAL='  *KGPRA* MNOTE                           06732700
&ZMS          SETC  '&ZMS.&OPTVAL"'                                     06732800
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           06732900
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    06733000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             06733100
.ZG375R       ANOP  ,                                                   06733200
.*----------------------------------------------------------------***   06733300
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     06733400
              AIF   (N'&PARMS LE 1).ZG378A      CK NUM                  06733500
&ZMS          SETC  '"PARMS='   *KPOSA* MNOTE                           06733600
&ZMS          SETC  '&ZMS.&PARMS"'                                      06733700
&ZMS          SETC  '&ZMS "PARMS"'                                      06733800
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 06733900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             06734000
.ZG378A       ANOP  ,                                                   06734100
.*-------------------------------------------------------------------   06734200
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         06734300
&ZXPARMS      SETC  'INPUT'     SET IN/OUTPUT                           06734400
&XPARMS       SETC  '0'                                                 06734500
              AIF   (K'&PARMS(1) LE 0).ZG378B   PARM                    06734600
&XPARMS       SETC  '&PARMS(1)'                 SET XVARIABLE           06734700
              AIF   (N'&PARMS GT 1).ZG378B      MULTI PARMS             06734800
&XPARMS       SETC  '&PARMS'    SET XVARIABLE                           06734900
.ZG378B       ANOP  ,                                                   06735000
.*-------------------------------------------------------------------   06735100
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    06735200
              AIF   (K'&ZXPARMS LE 0).ZG378R    NOT I/O                 06735300
              AIF   ('&XPARMS' EQ '0').ZG378R                           06735400
              AIF   ('&XPARMS'(1,1) NE '(').ZG378R                      06735500
&ZCGPR        SETC  '&XPARMS'(2,K'&XPARMS-2)                            06735600
              AIF   ('&ZCGPR'(1,1) NE '0').ZG378P                       06735700
              AIF   (K'&ZCGPR GT 2).ZG378Q                              06735800
              AIF   ('&ZCGPR' EQ '0').ZG378Q                            06735900
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       06736000
              AIF   (T'&ZCGPR NE 'N').ZG378Q    INVALID REG NAME        06736100
.ZG378P       ANOP  ,                                                   06736200
              AIF   (T'&ZCGPR NE 'N').ZG378R    NON NUMERIC             06736300
              AIF   ('&ZCGPR' LT '2').ZG378Q                            06736400
              AIF   ('&ZCGPR' LE '12').ZG378R                           06736500
.ZG378Q       ANOP  ,                                                   06736600
&ZMS          SETC  '"PARMS='   *KGPRA* MNOTE                           06736700
&ZMS          SETC  '&ZMS.&PARMS"'                                      06736800
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           06736900
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    06737000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             06737100
.ZG378R       ANOP  ,                                                   06737200
.*-------------------------------------------------------------------   06737300
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           06737400
.ZG380        ANOP  ,                                                   06737500
&ZTLC         SETC 'STARTD'                                             06737600
              AIF   ('&FUNC(1)' NE '&ZTLC').ZG396                       06737700
&XFUNC        SETC  'STARTD'    SET KEYWORD                             06737800
              AIF   (N'&FUNC LE 1).ZG380A       CK NUM                  06737900
&ZMS          SETC  '"FUNC='    *KPOSA* MNOTE                           06738000
&ZMS          SETC  '&ZMS.&FUNC"'                                       06738100
&ZMS          SETC  '&ZMS "FUNC"'                                       06738200
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 06738300
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             06738400
.ZG380A       ANOP  ,                                                   06738500
.*------------------------------------------------------------------    06738600
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           06738700
&ZCVAL        SETC ''           CLEAR ERROR KEY ACCUMULATOR             06738800
.ZG380A0      AIF   (K'&WORKMOD LE 0).ZG380A1   OK                      06738900
&ZCVAL        SETC '&ZCVAL WORKMOD'             INCORRECT KEY USED      06739000
.ZG380A1      AIF   (K'&ANAME LE 0).ZG380A2     OK                      06739100
&ZCVAL        SETC '&ZCVAL ANAME'               INCORRECT KEY USED      06739200
.ZG380A2      AIF   (K'&ENAME LE 0).ZG380A3     OK                      06739300
&ZCVAL        SETC '&ZCVAL ENAME'               INCORRECT KEY USED      06739400
.ZG380A3      AIF   (K'&AMODE LE 0).ZG380A4     OK                      06739500
&ZCVAL        SETC '&ZCVAL AMODE'               INCORRECT KEY USED      06739600
.ZG380A4      AIF   (K'&ATYPE LE 0).ZG380A5     OK                      06739700
&ZCVAL        SETC '&ZCVAL ATYPE'               INCORRECT KEY USED      06739800
.ZG380A5      AIF   (K'&SECTION LE 0).ZG380A6   OK                      06739900
&ZCVAL        SETC '&ZCVAL SECTION'             INCORRECT KEY USED      06740000
.ZG380A6      AIF   (K'&OLDNAME LE 0).ZG380A7   OK                      06740100
&ZCVAL        SETC '&ZCVAL OLDNAME'             INCORRECT KEY USED      06740200
.ZG380A7      AIF   (K'&NEWNAME LE 0).ZG380A8   OK                      06740300
&ZCVAL        SETC '&ZCVAL NEWNAME'             INCORRECT KEY USED      06740400
.ZG380A8      AIF   (K'&COUNT LE 0).ZG380A9     OK                      06740500
&ZCVAL        SETC '&ZCVAL COUNT'               INCORRECT KEY USED      06740600
.ZG380A9      AIF   (K'&MODE LE 0).ZG380A10     OK                      06740700
&ZCVAL        SETC '&ZCVAL MODE'                INCORRECT KEY USED      06740800
.ZG380A10     AIF   (K'&CLASS LE 0).ZG380A11    OK                      06740900
&ZCVAL        SETC '&ZCVAL CLASS'               INCORRECT KEY USED      06741000
.ZG380A11     AIF   (K'&CALLIB LE 0).ZG380A12   OK                      06741100
&ZCVAL        SETC '&ZCVAL CALLIB'              INCORRECT KEY USED      06741200
.ZG380A12     AIF   (K'&PATHNAME LE 0).ZG380A13  OK                     06741300
&ZCVAL        SETC '&ZCVAL PATHNAME'            INCORRECT KEY USED      06741400
.ZG380A13     AIF   (K'&INTENT LE 0).ZG380A14   OK                      06741500
&ZCVAL        SETC '&ZCVAL INTENT'              INCORRECT KEY USED      06741600
.ZG380A14     AIF   (K'&PROTECT LE 0).ZG380A15  OK                      06741700
&ZCVAL        SETC '&ZCVAL PROTECT'             INCORRECT KEY USED      06741800
.ZG380A15     AIF   (K'&RENAMEL LE 0).ZG380A16  OK                      06741900
&ZCVAL        SETC '&ZCVAL RENAMEL'             INCORRECT KEY USED      06742000
.ZG380A16     AIF   (K'&AREA LE 0).ZG380A17     OK                      06742100
&ZCVAL        SETC '&ZCVAL AREA'                INCORRECT KEY USED      06742200
.ZG380A17     AIF   (K'&CURSOR LE 0).ZG380A18   OK                      06742300
&ZCVAL        SETC '&ZCVAL CURSOR'              INCORRECT KEY USED      06742400
.ZG380A18     AIF   (K'&RECTYPE LE 0).ZG380A19  OK                      06742500
&ZCVAL        SETC '&ZCVAL RECTYPE'             INCORRECT KEY USED      06742600
.ZG380A19     AIF   (K'&OFFSET LE 0).ZG380A20   OK                      06742700
&ZCVAL        SETC '&ZCVAL OFFSET'              INCORRECT KEY USED      06742800
.ZG380A20     AIF   (K'&SYMBOL LE 0).ZG380A21   OK                      06742900
&ZCVAL        SETC '&ZCVAL SYMBOL'              INCORRECT KEY USED      06743000
.ZG380A21     AIF   (K'&TCOUNT LE 0).ZG380A22   OK                      06743100
&ZCVAL        SETC '&ZCVAL TCOUNT'              INCORRECT KEY USED      06743200
.ZG380A22     AIF   (K'&NTYPE LE 0).ZG380A23    OK                      06743300
&ZCVAL        SETC '&ZCVAL NTYPE'               INCORRECT KEY USED      06743400
.ZG380A23     AIF   (K'&ITYPE LE 0).ZG380A24    OK                      06743500
&ZCVAL        SETC '&ZCVAL ITYPE'               INCORRECT KEY USED      06743600
.ZG380A24     AIF   (K'&DLLNAME LE 0).ZG380A25  OK                      06743700
&ZCVAL        SETC '&ZCVAL DLLNAME'             INCORRECT KEY USED      06743800
.ZG380A25     AIF   (K'&INAME LE 0).ZG380A26    OK                      06743900
&ZCVAL        SETC '&ZCVAL INAME'               INCORRECT KEY USED      06744000
.ZG380A26     AIF   (K'&INTYPE LE 0).ZG380A27   OK                      06744100
&ZCVAL        SETC '&ZCVAL INTYPE'              INCORRECT KEY USED      06744200
.ZG380A27     AIF   (K'&DDNAME LE 0).ZG380A28   OK                      06744300
&ZCVAL        SETC '&ZCVAL DDNAME'              INCORRECT KEY USED      06744400
.ZG380A28     AIF   (K'&DEPTR LE 0).ZG380A29    OK                      06744500
&ZCVAL        SETC '&ZCVAL DEPTR'               INCORRECT KEY USED      06744600
.ZG380A29     AIF   (K'&MEMBER LE 0).ZG380A30   OK                      06744700
&ZCVAL        SETC '&ZCVAL MEMBER'              INCORRECT KEY USED      06744800
.ZG380A30     AIF   (K'&DCBPTR LE 0).ZG380A31   OK                      06744900
&ZCVAL        SETC '&ZCVAL DCBPTR'              INCORRECT KEY USED      06745000
.ZG380A31     AIF   (K'&EPTOKEN LE 0).ZG380A32  OK                      06745100
&ZCVAL        SETC '&ZCVAL EPTOKEN'             INCORRECT KEY USED      06745200
.ZG380A32     AIF   (K'&ATTRIB LE 0).ZG380A33   OK                      06745300
&ZCVAL        SETC '&ZCVAL ATTRIB'              INCORRECT KEY USED      06745400
.ZG380A33     AIF   (K'&ALIASES LE 0).ZG380A34  OK                      06745500
&ZCVAL        SETC '&ZCVAL ALIASES'             INCORRECT KEY USED      06745600
.ZG380A34     AIF   (K'&EPLOC LE 0).ZG380A35    OK                      06745700
&ZCVAL        SETC '&ZCVAL EPLOC'               INCORRECT KEY USED      06745800
.ZG380A35     AIF   (K'&IDENTIFY LE 0).ZG380A36  OK                     06745900
&ZCVAL        SETC '&ZCVAL IDENTIFY'            INCORRECT KEY USED      06746000
.ZG380A36     AIF   (K'&EXTLST LE 0).ZG380A37   OK                      06746100
&ZCVAL        SETC '&ZCVAL EXTLST'              INCORRECT KEY USED      06746200
.ZG380A37     AIF   (K'&LNAME LE 0).ZG380A38    OK                      06746300
&ZCVAL        SETC '&ZCVAL LNAME'               INCORRECT KEY USED      06746400
.ZG380A38     AIF   (K'&NEWSECT LE 0).ZG380A39  OK                      06746500
&ZCVAL        SETC '&ZCVAL NEWSECT'             INCORRECT KEY USED      06746600
.ZG380A39     AIF   (K'&ENDDATA LE 0).ZG380A40  OK                      06746700
&ZCVAL        SETC '&ZCVAL ENDDATA'             INCORRECT KEY USED      06746800
.ZG380A40     AIF   (K'&MODLIB LE 0).ZG380A41   OK                      06746900
&ZCVAL        SETC '&ZCVAL MODLIB'              INCORRECT KEY USED      06747000
.ZG380A41     AIF   (K'&SNAME LE 0).ZG380A42    OK                      06747100
&ZCVAL        SETC '&ZCVAL SNAME'               INCORRECT KEY USED      06747200
.ZG380A42     AIF   (K'&REPLACE LE 0).ZG380A43  OK                      06747300
&ZCVAL        SETC '&ZCVAL REPLACE'             INCORRECT KEY USED      06747400
.ZG380A43     AIF   (K'&LIBOPT LE 0).ZG380A44   OK                      06747500
&ZCVAL        SETC '&ZCVAL LIBOPT'              INCORRECT KEY USED      06747600
.ZG380A44     AIF   (K'&OPTION LE 0).ZG380A45   OK                      06747700
&ZCVAL        SETC '&ZCVAL OPTION'              INCORRECT KEY USED      06747800
.ZG380A45     AIF   (K'&OPTVAL LE 0).ZG380A46   OK                      06747900
&ZCVAL        SETC '&ZCVAL OPTVAL'              INCORRECT KEY USED      06748000
.ZG380A46     AIF   (K'&ORIGIN LE 0).ZG380A47   OK                      06748100
&ZCVAL        SETC '&ZCVAL ORIGIN'              INCORRECT KEY USED      06748200
.ZG380A47     AIF   (K'&REGION LE 0).ZG380A48   OK                      06748300
&ZCVAL        SETC '&ZCVAL REGION'              INCORRECT KEY USED      06748400
.ZG380A48     AIF   (K'&ZCVAL LE 0).ZG380A49    OK                      06748500
&ZCVAL        SETC '&ZCVAL'(2,K'&ZCVAL-1)                               06748600
              AIF  (K'&ZCVAL LE 160).ZG380A49A                          06748700
&ZCVAL        SETC '&ZCVAL'(1,160)                                      06748800
&ZCVAL        SETC '&ZCVAL....'                                         06748900
.ZG380A49A    ANOP                                                      06749000
&ZMS          SETC  '"FUNC'     *KMEIA* MNOTE                           06749100
&ZMS          SETC  '&ZMS.=&FUNC"'                                      06749200
&ZMS          SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'                06749300
              MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'                06749400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             06749500
.ZG380A49     ANOP  ,                                                   06749600
.*----------------------------------------------------------------***   06749700
.***AG.KXVAR05 NAME, RQD OUTPUT, KEYS -XVARIABLE KEY                    06749800
              AIF   (N'&DIALOG LE 1).ZG382A     CK NUM                  06749900
&ZMS          SETC  '"DIALOG='  *KPOSA* MNOTE                           06750000
&ZMS          SETC  '&ZMS.&DIALOG"'                                     06750100
&ZMS          SETC  '&ZMS "DIALOG"'                                     06750200
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 06750300
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             06750400
.ZG382A       ANOP  ,                                                   06750500
.*-------------------------------------------------------------------   06750600
.***AG.KXVAR06 NAME, RQD OUTPUT, KEYS -XVARIABLE                        06750700
&ZXDIALOG     SETC  'OUTPUT'    SET IN/OUTPUT                           06750800
&XDIALOG      SETC  '&DIALOG(1)'                SET XVARIABLE           06750900
              AIF   (N'&DIALOG GT 1).ZG382B     MULTI PARMS             06751000
&XDIALOG      SETC  '&DIALOG'   SET XVARIABLE                           06751100
.ZG382B       AIF   (K'&DIALOG(1) GT 0).ZG382C                          06751200
&ZXDIALOG     SETC  ''          RESET IN/OUTPUT                         06751300
&ZMS          SETC  ' '         *KRQDA*                                 06751400
&ZMS          SETC  '&ZMS "DIALOG" KEY AND ITS ARGUMENT'                06751500
              MNOTE 8,' &ZMS ARE REQUIRED.'                             06751600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             06751700
.ZG382C       ANOP  ,                                                   06751800
.*-------------------------------------------------------------------   06751900
.***AG.KCK02 NAME, RQD OUTPUT, KEYS -GPR OUT OF RANGE                   06752000
              AIF   (K'&ZXDIALOG LE 0).ZG382R   NOT I/O                 06752100
              AIF   ('&XDIALOG'(1,1) NE '(').ZG382R                     06752200
&ZCGPR        SETC  '&XDIALOG'(2,K'&XDIALOG-2)                          06752300
              AIF   ('&ZCGPR'(1,1) NE '0').ZG382P                       06754200
              AIF   (K'&ZCGPR GT 2).ZG382Q                              06754300
              AIF   ('&ZCGPR' EQ '0').ZG382Q                            06754400
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       06754500
              AIF   (T'&ZCGPR NE 'N').ZG382Q    INVALID REG NAME        06754600
.ZG382P       ANOP  ,                                                   06754700
              AIF   (T'&ZCGPR NE 'N').ZG382R    NON NUMERIC             06754800
              AIF   ('&ZCGPR' LT '2').ZG382Q                            06754900
              AIF   ('&ZCGPR' LE '12').ZG382R                           06755000
.ZG382Q       ANOP  ,                                                   06755100
&ZMS          SETC  '"DIALOG='  *KGPRA* MNOTE                           06755200
&ZMS          SETC  '&ZMS.&DIALOG"'                                     06755300
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           06755400
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    06755500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             06755600
.ZG382R       ANOP  ,                                                   06755700
.*----------------------------------------------------------------***   06755800
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     06755900
              AIF   (N'&FILES LE 1).ZG385A      CK NUM                  06756000
&ZMS          SETC  '"FILES='   *KPOSA* MNOTE                           06756100
&ZMS          SETC  '&ZMS.&FILES"'                                      06756200
&ZMS          SETC  '&ZMS "FILES"'                                      06756300
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 06756400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             06756500
.ZG385A       ANOP  ,                                                   06756600
.*-------------------------------------------------------------------   06756700
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         06756800
&ZXFILES      SETC  'INPUT'     SET IN/OUTPUT                           06756900
&XFILES       SETC  '0'                                                 06757000
              AIF   (K'&FILES(1) LE 0).ZG385B   PARM                    06757100
&XFILES       SETC  '&FILES(1)'                 SET XVARIABLE           06757200
              AIF   (N'&FILES GT 1).ZG385B      MULTI PARMS             06757300
&XFILES       SETC  '&FILES'    SET XVARIABLE                           06757400
.ZG385B       ANOP  ,                                                   06757500
.*-------------------------------------------------------------------   06757600
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    06757700
              AIF   (K'&ZXFILES LE 0).ZG385R    NOT I/O                 06757800
              AIF   ('&XFILES' EQ '0').ZG385R                           06757900
              AIF   ('&XFILES'(1,1) NE '(').ZG385R                      06758000
&ZCGPR        SETC  '&XFILES'(2,K'&XFILES-2)                            06758100
              AIF   ('&ZCGPR'(1,1) NE '0').ZG385P                       06758200
              AIF   (K'&ZCGPR GT 2).ZG385Q                              06758300
              AIF   ('&ZCGPR' EQ '0').ZG385Q                            06758400
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       06758500
              AIF   (T'&ZCGPR NE 'N').ZG385Q    INVALID REG NAME        06758600
.ZG385P       ANOP  ,                                                   06758700
              AIF   (T'&ZCGPR NE 'N').ZG385R    NON NUMERIC             06758800
              AIF   ('&ZCGPR' LT '2').ZG385Q                            06758900
              AIF   ('&ZCGPR' LE '12').ZG385R                           06759000
.ZG385Q       ANOP  ,                                                   06759100
&ZMS          SETC  '"FILES='   *KGPRA* MNOTE                           06759200
&ZMS          SETC  '&ZMS.&FILES"'                                      06759300
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           06759400
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    06759500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             06759600
.ZG385R       ANOP  ,                                                   06759700
.*----------------------------------------------------------------***   06759800
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     06759900
              AIF   (N'&EXITS LE 1).ZG388A      CK NUM                  06760000
&ZMS          SETC  '"EXITS='   *KPOSA* MNOTE                           06760100
&ZMS          SETC  '&ZMS.&EXITS"'                                      06760200
&ZMS          SETC  '&ZMS "EXITS"'                                      06760300
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 06760400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             06760500
.ZG388A       ANOP  ,                                                   06760600
.*-------------------------------------------------------------------   06760700
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         06760800
&ZXEXITS      SETC  'INPUT'     SET IN/OUTPUT                           06760900
&XEXITS       SETC  '0'                                                 06761000
              AIF   (K'&EXITS(1) LE 0).ZG388B   PARM                    06761100
&XEXITS       SETC  '&EXITS(1)'                 SET XVARIABLE           06761200
              AIF   (N'&EXITS GT 1).ZG388B      MULTI PARMS             06761300
&XEXITS       SETC  '&EXITS'    SET XVARIABLE                           06761400
.ZG388B       ANOP  ,                                                   06761500
.*-------------------------------------------------------------------   06761600
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    06761700
              AIF   (K'&ZXEXITS LE 0).ZG388R    NOT I/O                 06761800
              AIF   ('&XEXITS' EQ '0').ZG388R                           06761900
              AIF   ('&XEXITS'(1,1) NE '(').ZG388R                      06762000
&ZCGPR        SETC  '&XEXITS'(2,K'&XEXITS-2)                            06762100
              AIF   ('&ZCGPR'(1,1) NE '0').ZG388P                       06762200
              AIF   (K'&ZCGPR GT 2).ZG388Q                              06762300
              AIF   ('&ZCGPR' EQ '0').ZG388Q                            06762400
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       06762500
              AIF   (T'&ZCGPR NE 'N').ZG388Q    INVALID REG NAME        06762600
.ZG388P       ANOP  ,                                                   06762700
              AIF   (T'&ZCGPR NE 'N').ZG388R    NON NUMERIC             06762800
              AIF   ('&ZCGPR' LT '2').ZG388Q                            06762900
              AIF   ('&ZCGPR' LE '12').ZG388R                           06763000
.ZG388Q       ANOP  ,                                                   06763100
&ZMS          SETC  '"EXITS='   *KGPRA* MNOTE                           06763200
&ZMS          SETC  '&ZMS.&EXITS"'                                      06763300
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           06763400
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    06763500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             06763600
.ZG388R       ANOP  ,                                                   06763700
.*----------------------------------------------------------------***   06763800
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     06763900
              AIF   (N'&OPTIONS LE 1).ZG391A    CK NUM                  06764000
&ZMS          SETC  '"OPTIONS='                 *KPOSA* MNOTE           06764100
&ZMS          SETC  '&ZMS.&OPTIONS"'                                    06764200
&ZMS          SETC  '&ZMS "OPTIONS"'                                    06764300
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 06764400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             06764500
.ZG391A       ANOP  ,                                                   06764600
.*-------------------------------------------------------------------   06764700
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         06764800
&ZXOPTIONS    SETC  'INPUT'     SET IN/OUTPUT                           06764900
&XOPTIONS     SETC  '0'                                                 06765000
              AIF   (K'&OPTIONS(1) LE 0).ZG391B  PARM                   06765100
&XOPTIONS     SETC  '&OPTIONS(1)'               SET XVARIABLE           06765200
              AIF   (N'&OPTIONS GT 1).ZG391B    MULTI PARMS             06765300
&XOPTIONS     SETC  '&OPTIONS'  SET XVARIABLE                           06765400
.ZG391B       ANOP  ,                                                   06765500
.*-------------------------------------------------------------------   06765600
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    06765700
              AIF   (K'&ZXOPTIONS LE 0).ZG391R  NOT I/O                 06765800
              AIF   ('&XOPTIONS' EQ '0').ZG391R                         06765900
              AIF   ('&XOPTIONS'(1,1) NE '(').ZG391R                    06766000
&ZCGPR        SETC  '&XOPTIONS'(2,K'&XOPTIONS-2)                        06766100
              AIF   ('&ZCGPR'(1,1) NE '0').ZG391P                       06766200
              AIF   (K'&ZCGPR GT 2).ZG391Q                              06766300
              AIF   ('&ZCGPR' EQ '0').ZG391Q                            06766400
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       06766500
              AIF   (T'&ZCGPR NE 'N').ZG391Q    INVALID REG NAME        06766600
.ZG391P       ANOP  ,                                                   06766700
              AIF   (T'&ZCGPR NE 'N').ZG391R    NON NUMERIC             06766800
              AIF   ('&ZCGPR' LT '2').ZG391Q                            06766900
              AIF   ('&ZCGPR' LE '12').ZG391R                           06767000
.ZG391Q       ANOP  ,                                                   06767100
&ZMS          SETC  '"OPTIONS='                 *KGPRA* MNOTE           06767200
&ZMS          SETC  '&ZMS.&OPTIONS"'                                    06767300
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           06767400
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    06767500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             06767600
.ZG391R       ANOP  ,                                                   06767700
.*----------------------------------------------------------------***   06767800
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     06767900
              AIF   (N'&PARMS LE 1).ZG394A      CK NUM                  06768000
&ZMS          SETC  '"PARMS='   *KPOSA* MNOTE                           06768100
&ZMS          SETC  '&ZMS.&PARMS"'                                      06768200
&ZMS          SETC  '&ZMS "PARMS"'                                      06768300
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 06768400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             06768500
.ZG394A       ANOP  ,                                                   06768600
.*-------------------------------------------------------------------   06768700
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         06768800
&ZXPARMS      SETC  'INPUT'     SET IN/OUTPUT                           06768900
&XPARMS       SETC  '0'                                                 06769000
              AIF   (K'&PARMS(1) LE 0).ZG394B   PARM                    06769100
&XPARMS       SETC  '&PARMS(1)'                 SET XVARIABLE           06769200
              AIF   (N'&PARMS GT 1).ZG394B      MULTI PARMS             06769300
&XPARMS       SETC  '&PARMS'    SET XVARIABLE                           06769400
.ZG394B       ANOP  ,                                                   06769500
.*-------------------------------------------------------------------   06769600
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    06769700
              AIF   (K'&ZXPARMS LE 0).ZG394R    NOT I/O                 06769800
              AIF   ('&XPARMS' EQ '0').ZG394R                           06769900
              AIF   ('&XPARMS'(1,1) NE '(').ZG394R                      06770000
&ZCGPR        SETC  '&XPARMS'(2,K'&XPARMS-2)                            06770100
              AIF   ('&ZCGPR'(1,1) NE '0').ZG394P                       06770200
              AIF   (K'&ZCGPR GT 2).ZG394Q                              06770300
              AIF   ('&ZCGPR' EQ '0').ZG394Q                            06770400
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       06770500
              AIF   (T'&ZCGPR NE 'N').ZG394Q    INVALID REG NAME        06770600
.ZG394P       ANOP  ,                                                   06770700
              AIF   (T'&ZCGPR NE 'N').ZG394R    NON NUMERIC             06770800
              AIF   ('&ZCGPR' LT '2').ZG394Q                            06770900
              AIF   ('&ZCGPR' LE '12').ZG394R                           06771000
.ZG394Q       ANOP  ,                                                   06771100
&ZMS          SETC  '"PARMS='   *KGPRA* MNOTE                           06771200
&ZMS          SETC  '&ZMS.&PARMS"'                                      06771300
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           06771400
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    06771500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             06771600
.ZG394R       ANOP  ,                                                   06771700
.*-------------------------------------------------------------------   06771800
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           06771900
.ZG396        ANOP  ,                                                   06772000
&ZTLC         SETC 'STARTS'                                             06772100
              AIF   ('&FUNC(1)' NE '&ZTLC').ZG408                       06772200
&XFUNC        SETC  'STARTS'    SET KEYWORD                             06772300
              AIF   (N'&FUNC LE 1).ZG396A       CK NUM                  06772400
&ZMS          SETC  '"FUNC='    *KPOSA* MNOTE                           06772500
&ZMS          SETC  '&ZMS.&FUNC"'                                       06772600
&ZMS          SETC  '&ZMS "FUNC"'                                       06772700
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 06772800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             06772900
.ZG396A       ANOP  ,                                                   06773000
.*------------------------------------------------------------------    06773100
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           06773200
&ZCVAL        SETC ''           CLEAR ERROR KEY ACCUMULATOR             06773300
.ZG396A0      AIF   (K'&ANAME LE 0).ZG396A1     OK                      06773400
&ZCVAL        SETC '&ZCVAL ANAME'               INCORRECT KEY USED      06773500
.ZG396A1      AIF   (K'&ENAME LE 0).ZG396A2     OK                      06773600
&ZCVAL        SETC '&ZCVAL ENAME'               INCORRECT KEY USED      06773700
.ZG396A2      AIF   (K'&AMODE LE 0).ZG396A3     OK                      06773800
&ZCVAL        SETC '&ZCVAL AMODE'               INCORRECT KEY USED      06773900
.ZG396A3      AIF   (K'&ATYPE LE 0).ZG396A4     OK                      06774000
&ZCVAL        SETC '&ZCVAL ATYPE'               INCORRECT KEY USED      06774100
.ZG396A4      AIF   (K'&SECTION LE 0).ZG396A5   OK                      06774200
&ZCVAL        SETC '&ZCVAL SECTION'             INCORRECT KEY USED      06774300
.ZG396A5      AIF   (K'&OLDNAME LE 0).ZG396A6   OK                      06774400
&ZCVAL        SETC '&ZCVAL OLDNAME'             INCORRECT KEY USED      06774500
.ZG396A6      AIF   (K'&NEWNAME LE 0).ZG396A7   OK                      06774600
&ZCVAL        SETC '&ZCVAL NEWNAME'             INCORRECT KEY USED      06774700
.ZG396A7      AIF   (K'&COUNT LE 0).ZG396A8     OK                      06774800
&ZCVAL        SETC '&ZCVAL COUNT'               INCORRECT KEY USED      06774900
.ZG396A8      AIF   (K'&MODE LE 0).ZG396A9      OK                      06775000
&ZCVAL        SETC '&ZCVAL MODE'                INCORRECT KEY USED      06775100
.ZG396A9      AIF   (K'&CLASS LE 0).ZG396A10    OK                      06775200
&ZCVAL        SETC '&ZCVAL CLASS'               INCORRECT KEY USED      06775300
.ZG396A10     AIF   (K'&CALLIB LE 0).ZG396A11   OK                      06775400
&ZCVAL        SETC '&ZCVAL CALLIB'              INCORRECT KEY USED      06775500
.ZG396A11     AIF   (K'&PATHNAME LE 0).ZG396A12  OK                     06775600
&ZCVAL        SETC '&ZCVAL PATHNAME'            INCORRECT KEY USED      06775700
.ZG396A12     AIF   (K'&DIALOG LE 0).ZG396A13   OK                      06775800
&ZCVAL        SETC '&ZCVAL DIALOG'              INCORRECT KEY USED      06775900
.ZG396A13     AIF   (K'&INTENT LE 0).ZG396A14   OK                      06776000
&ZCVAL        SETC '&ZCVAL INTENT'              INCORRECT KEY USED      06776100
.ZG396A14     AIF   (K'&PROTECT LE 0).ZG396A15  OK                      06776200
&ZCVAL        SETC '&ZCVAL PROTECT'             INCORRECT KEY USED      06776300
.ZG396A15     AIF   (K'&RENAMEL LE 0).ZG396A16  OK                      06776400
&ZCVAL        SETC '&ZCVAL RENAMEL'             INCORRECT KEY USED      06776500
.ZG396A16     AIF   (K'&AREA LE 0).ZG396A17     OK                      06776600
&ZCVAL        SETC '&ZCVAL AREA'                INCORRECT KEY USED      06776700
.ZG396A17     AIF   (K'&CURSOR LE 0).ZG396A18   OK                      06776800
&ZCVAL        SETC '&ZCVAL CURSOR'              INCORRECT KEY USED      06776900
.ZG396A18     AIF   (K'&RECTYPE LE 0).ZG396A19  OK                      06777000
&ZCVAL        SETC '&ZCVAL RECTYPE'             INCORRECT KEY USED      06777100
.ZG396A19     AIF   (K'&OFFSET LE 0).ZG396A20   OK                      06777200
&ZCVAL        SETC '&ZCVAL OFFSET'              INCORRECT KEY USED      06777300
.ZG396A20     AIF   (K'&SYMBOL LE 0).ZG396A21   OK                      06777400
&ZCVAL        SETC '&ZCVAL SYMBOL'              INCORRECT KEY USED      06777500
.ZG396A21     AIF   (K'&TCOUNT LE 0).ZG396A22   OK                      06777600
&ZCVAL        SETC '&ZCVAL TCOUNT'              INCORRECT KEY USED      06777700
.ZG396A22     AIF   (K'&NTYPE LE 0).ZG396A23    OK                      06777800
&ZCVAL        SETC '&ZCVAL NTYPE'               INCORRECT KEY USED      06777900
.ZG396A23     AIF   (K'&ITYPE LE 0).ZG396A24    OK                      06778000
&ZCVAL        SETC '&ZCVAL ITYPE'               INCORRECT KEY USED      06778100
.ZG396A24     AIF   (K'&DLLNAME LE 0).ZG396A25  OK                      06778200
&ZCVAL        SETC '&ZCVAL DLLNAME'             INCORRECT KEY USED      06778300
.ZG396A25     AIF   (K'&INAME LE 0).ZG396A26    OK                      06778400
&ZCVAL        SETC '&ZCVAL INAME'               INCORRECT KEY USED      06778500
.ZG396A26     AIF   (K'&INTYPE LE 0).ZG396A27   OK                      06778600
&ZCVAL        SETC '&ZCVAL INTYPE'              INCORRECT KEY USED      06778700
.ZG396A27     AIF   (K'&DDNAME LE 0).ZG396A28   OK                      06778800
&ZCVAL        SETC '&ZCVAL DDNAME'              INCORRECT KEY USED      06778900
.ZG396A28     AIF   (K'&DEPTR LE 0).ZG396A29    OK                      06779000
&ZCVAL        SETC '&ZCVAL DEPTR'               INCORRECT KEY USED      06779100
.ZG396A29     AIF   (K'&MEMBER LE 0).ZG396A30   OK                      06779200
&ZCVAL        SETC '&ZCVAL MEMBER'              INCORRECT KEY USED      06779300
.ZG396A30     AIF   (K'&DCBPTR LE 0).ZG396A31   OK                      06779400
&ZCVAL        SETC '&ZCVAL DCBPTR'              INCORRECT KEY USED      06779500
.ZG396A31     AIF   (K'&EPTOKEN LE 0).ZG396A32  OK                      06779600
&ZCVAL        SETC '&ZCVAL EPTOKEN'             INCORRECT KEY USED      06779700
.ZG396A32     AIF   (K'&ATTRIB LE 0).ZG396A33   OK                      06779800
&ZCVAL        SETC '&ZCVAL ATTRIB'              INCORRECT KEY USED      06779900
.ZG396A33     AIF   (K'&ALIASES LE 0).ZG396A34  OK                      06780000
&ZCVAL        SETC '&ZCVAL ALIASES'             INCORRECT KEY USED      06780100
.ZG396A34     AIF   (K'&EPLOC LE 0).ZG396A35    OK                      06780200
&ZCVAL        SETC '&ZCVAL EPLOC'               INCORRECT KEY USED      06780300
.ZG396A35     AIF   (K'&IDENTIFY LE 0).ZG396A36  OK                     06780400
&ZCVAL        SETC '&ZCVAL IDENTIFY'            INCORRECT KEY USED      06780500
.ZG396A36     AIF   (K'&EXTLST LE 0).ZG396A37   OK                      06780600
&ZCVAL        SETC '&ZCVAL EXTLST'              INCORRECT KEY USED      06780700
.ZG396A37     AIF   (K'&LNAME LE 0).ZG396A38    OK                      06780800
&ZCVAL        SETC '&ZCVAL LNAME'               INCORRECT KEY USED      06780900
.ZG396A38     AIF   (K'&NEWSECT LE 0).ZG396A39  OK                      06781000
&ZCVAL        SETC '&ZCVAL NEWSECT'             INCORRECT KEY USED      06781100
.ZG396A39     AIF   (K'&ENDDATA LE 0).ZG396A40  OK                      06781200
&ZCVAL        SETC '&ZCVAL ENDDATA'             INCORRECT KEY USED      06781300
.ZG396A40     AIF   (K'&MODLIB LE 0).ZG396A41   OK                      06781400
&ZCVAL        SETC '&ZCVAL MODLIB'              INCORRECT KEY USED      06781500
.ZG396A41     AIF   (K'&SNAME LE 0).ZG396A42    OK                      06781600
&ZCVAL        SETC '&ZCVAL SNAME'               INCORRECT KEY USED      06781700
.ZG396A42     AIF   (K'&REPLACE LE 0).ZG396A43  OK                      06781800
&ZCVAL        SETC '&ZCVAL REPLACE'             INCORRECT KEY USED      06781900
.ZG396A43     AIF   (K'&LIBOPT LE 0).ZG396A44   OK                      06782000
&ZCVAL        SETC '&ZCVAL LIBOPT'              INCORRECT KEY USED      06782100
.ZG396A44     AIF   (K'&OPTION LE 0).ZG396A45   OK                      06782200
&ZCVAL        SETC '&ZCVAL OPTION'              INCORRECT KEY USED      06782300
.ZG396A45     AIF   (K'&OPTVAL LE 0).ZG396A46   OK                      06782400
&ZCVAL        SETC '&ZCVAL OPTVAL'              INCORRECT KEY USED      06782500
.ZG396A46     AIF   (K'&PARMS LE 0).ZG396A47    OK                      06782600
&ZCVAL        SETC '&ZCVAL PARMS'               INCORRECT KEY USED      06782700
.ZG396A47     AIF   (K'&FILES LE 0).ZG396A48    OK                      06782800
&ZCVAL        SETC '&ZCVAL FILES'               INCORRECT KEY USED      06782900
.ZG396A48     AIF   (K'&EXITS LE 0).ZG396A49    OK                      06783000
&ZCVAL        SETC '&ZCVAL EXITS'               INCORRECT KEY USED      06783100
.ZG396A49     AIF   (K'&OPTIONS LE 0).ZG396A50  OK                      06783200
&ZCVAL        SETC '&ZCVAL OPTIONS'             INCORRECT KEY USED      06783300
.ZG396A50     AIF   (K'&ZCVAL LE 0).ZG396A51    OK                      06783400
&ZCVAL        SETC '&ZCVAL'(2,K'&ZCVAL-1)                               06783500
              AIF  (K'&ZCVAL LE 160).ZG396A51A                          06783600
&ZCVAL        SETC '&ZCVAL'(1,160)                                      06783700
&ZCVAL        SETC '&ZCVAL....'                                         06783800
.ZG396A51A    ANOP                                                      06783900
&ZMS          SETC  '"FUNC'     *KMEIA* MNOTE                           06784000
&ZMS          SETC  '&ZMS.=&FUNC"'                                      06784100
&ZMS          SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'                06784200
              MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'                06784300
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             06784400
.ZG396A51     ANOP  ,                                                   06784500
.*----------------------------------------------------------------***   06784600
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     06784700
              AIF   (N'&WORKMOD LE 1).ZG398A    CK NUM                  06784800
&ZMS          SETC  '"WORKMOD='                 *KPOSA* MNOTE           06784900
&ZMS          SETC  '&ZMS.&WORKMOD"'                                    06785000
&ZMS          SETC  '&ZMS "WORKMOD"'                                    06785100
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 06785200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             06785300
.ZG398A       ANOP  ,                                                   06785400
.*-------------------------------------------------------------------   06785500
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         06785600
&ZXWORKMOD    SETC  'INPUT'     SET IN/OUTPUT                           06785700
&XWORKMOD     SETC  '&WORKMOD(1)'               SET XVARIABLE           06785800
              AIF   (N'&WORKMOD GT 1).ZG398B    MULTI PARMS             06785900
&XWORKMOD     SETC  '&WORKMOD'  SET XVARIABLE                           06786000
.ZG398B       AIF   (K'&WORKMOD(1) GT 0).ZG398C                         06786100
&ZXWORKMOD    SETC  ''          RESET IN/OUTPUT                         06786200
&ZMS          SETC  ' '         *KRQDA*                                 06786300
&ZMS          SETC  '&ZMS "WORKMOD" KEY AND ITS ARGUMENT'               06786400
              MNOTE 8,' &ZMS ARE REQUIRED.'                             06786500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             06786600
.ZG398C       ANOP  ,                                                   06791000
.*-------------------------------------------------------------------   06791100
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    06791200
              AIF   (K'&ZXWORKMOD LE 0).ZG398R  NOT I/O                 06791300
              AIF   ('&XWORKMOD'(1,1) NE '(').ZG398R                    06791400
&ZCGPR        SETC  '&XWORKMOD'(2,K'&XWORKMOD-2)                        06791500
              AIF   ('&ZCGPR'(1,1) NE '0').ZG398P                       06791600
              AIF   (K'&ZCGPR GT 2).ZG398Q                              06791700
              AIF   ('&ZCGPR' EQ '0').ZG398Q                            06791800
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       06791900
              AIF   (T'&ZCGPR NE 'N').ZG398Q    INVALID REG NAME        06792000
.ZG398P       ANOP  ,                                                   06792100
              AIF   (T'&ZCGPR NE 'N').ZG398R    NON NUMERIC             06792200
              AIF   ('&ZCGPR' LT '2').ZG398Q                            06792300
              AIF   ('&ZCGPR' LE '12').ZG398R                           06792400
.ZG398Q       ANOP  ,                                                   06792500
&ZMS          SETC  '"WORKMOD='                 *KGPRA* MNOTE           06792700
&ZMS          SETC  '&ZMS.&WORKMOD"'                                    06792900
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           06793100
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    06793200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             06793300
.ZG398R       ANOP  ,                                                   06793400
.*----------------------------------------------------------------***   06793500
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     06793600
              AIF   (N'&ORIGIN LE 1).ZG401A     CK NUM                  06793700
&ZMS          SETC  '"ORIGIN='  *KPOSA* MNOTE                           06793800
&ZMS          SETC  '&ZMS.&ORIGIN"'                                     06793900
&ZMS          SETC  '&ZMS "ORIGIN"'                                     06794000
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 06794100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             06794200
.ZG401A       ANOP  ,                                                   06794300
.*-------------------------------------------------------------------   06794400
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         06794500
&ZXORIGIN     SETC  'INPUT'     SET IN/OUTPUT                           06794600
&XORIGIN      SETC  '&ORIGIN(1)'                SET XVARIABLE           06794700
              AIF   (N'&ORIGIN GT 1).ZG401B     MULTI PARMS             06794800
&XORIGIN      SETC  '&ORIGIN'   SET XVARIABLE                           06794900
.ZG401B       AIF   (K'&ORIGIN(1) GT 0).ZG401C                          06795000
&ZXORIGIN     SETC  ''          RESET IN/OUTPUT                         06795100
&ZMS          SETC  ' '         *KRQDA*                                 06795200
&ZMS          SETC  '&ZMS "ORIGIN" KEY AND ITS ARGUMENT'                06795300
              MNOTE 8,' &ZMS ARE REQUIRED.'                             06795400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             06795500
.ZG401C       ANOP  ,                                                   06795600
.*-------------------------------------------------------------------   06795700
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    06795800
              AIF   (K'&ZXORIGIN LE 0).ZG401R   NOT I/O                 06795900
              AIF   ('&XORIGIN'(1,1) NE '(').ZG401R                     06796000
&ZCGPR        SETC  '&XORIGIN'(2,K'&XORIGIN-2)                          06796100
              AIF   ('&ZCGPR'(1,1) NE '0').ZG401P                       06796200
              AIF   (K'&ZCGPR GT 2).ZG401Q                              06796300
              AIF   ('&ZCGPR' EQ '0').ZG401Q                            06796400
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       06796500
              AIF   (T'&ZCGPR NE 'N').ZG401Q    INVALID REG NAME        06796600
.ZG401P       ANOP  ,                                                   06796700
              AIF   (T'&ZCGPR NE 'N').ZG401R    NON NUMERIC             06796800
              AIF   ('&ZCGPR' LT '2').ZG401Q                            06796900
              AIF   ('&ZCGPR' LE '12').ZG401R                           06797000
.ZG401Q       ANOP  ,                                                   06797100
&ZMS          SETC  '"ORIGIN='  *KGPRA* MNOTE                           06797200
&ZMS          SETC  '&ZMS.&ORIGIN"'                                     06797300
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           06797400
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    06797500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             06797600
.ZG401R       ANOP  ,                                                   06797700
.*----------------------------------------------------------------***   06797800
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             06797900
              AIF   (N'&REGION LE 1).ZG404A     CK NUM                  06798000
&ZMS          SETC  '"REGION='  *KPOSA* MNOTE                           06798100
&ZMS          SETC  '&ZMS.&REGION"'                                     06798200
&ZMS          SETC  '&ZMS "REGION"'                                     06798300
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 06798400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             06798500
.ZG404A       ANOP  ,                                                   06798600
.*-------------------------------------------------------------------   06798700
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             06798800
&XREGION      SETC  ''          INITIALIZE XVARIABLE                    06798900
.ZG405A   AIF   ('&REGION(1)' NE 'N').ZG406A                            06799000
&XREGION      SETC  'N'         SET KEYWORD                             06799100
.*-------------------------------------------------------------------   06799200
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             06799300
.ZG406A   AIF   ('&REGION(1)' NE 'Y').ZG407A                            06799400
&XREGION      SETC  'Y'         SET KEYWORD                             06799500
.*-------------------------------------------------------------------   06799600
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             06799700
.ZG407A       AIF   (K'&XREGION GT 0).ZG407C    KEYWORD                 06799800
              AIF   (K'&REGION(1) LE 0).ZG407B                          06799900
&ZMS          SETC  '"REGION='  *KUKWA* MNOTE                           06800000
&ZMS          SETC  '&ZMS.&REGION"'                                     06800100
&ZMS          SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '           06800200
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                 06800300
&ZMS          SETC  '&ZMS "N"'  VALID KEYWORD                           06800400
&ZMS          SETC  '&ZMS OR "Y".'              VALID KEYWORD           06800500
              MNOTE 8,' &ZMS '                                          06800600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             06800700
.ZG407B       ANOP  ,                                                   06800800
&XREGION      SETC  'N'         SET DEFAULT KEYWORD                     06800900
.ZG407C       ANOP  ,                                                   06801000
&ZXREGION     SETC  'INPUT'     SET IN/OUTPUT                           06801100
.*------------------------------------------------------------------    06801200
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           06801300
.ZG408        ANOP  ,                                                   06801400
&ZXFUNC       SETC  'INPUT'     SET IN/OUTPUT                           06801500
              AIF   (K'&XFUNC GT 0).ZG408E      VALID ARG               06801600
              AIF   (T'&FUNC EQ 'O').ZG408D     OMITTED                 06801700
&ZASYSLNDX    SETA  0                                                   06801800
.ZG408A       ANOP  ,           POSITIONAL MACRO KEY                    06801900
&ZASYSLNDX    SETA  &ZASYSLNDX+1                                        06802000
              AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG408C                   06802100
&ZTLC         SETC 'FUNC'                                               06802200
              AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG408A          06802300
.ZG408B       ANOP  ,                                                   06802400
&ZXFUNC       SETC  ''          RESET IN/OUTPUT                         06802500
&ZMS          SETC  'THE "FUNC" KEY'            *KOPTA* MNOTE           06802600
&ZMS          SETC  '&ZMS MUST CONTAIN ONE'                             06802700
              MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                    06802800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             06802900
              AGO   .ZG408E                                             06803000
.ZG408C       ANOP  ,                                                   06803100
&ZXFUNC       SETC  ''          RESET IN/OUTPUT                         06803200
&ZMS          SETC  '"FUNC='    *KUKWA* MNOTE                           06803300
&ZMS          SETC  '&ZMS.&FUNC"'                                       06803400
&ZMS          SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '           06803500
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                 06803600
&ZMS          SETC  '&ZMS "ADDA",'              VALID KEYWORD           06803700
&ZMS          SETC  '&ZMS "ALIGNT",'            VALID KEYWORD           06803800
&ZMS          SETC  '&ZMS "ALTERW",'            VALID KEYWORD           06803900
&ZMS          SETC  '&ZMS "AUTOC",'             VALID KEYWORD           06804000
&ZMS          SETC  '&ZMS "BINDW",'             VALID KEYWORD           06804100
&ZMS          SETC  '&ZMS "CREATEW",'           VALID KEYWORD           06804200
&ZMS          SETC  '&ZMS "DELETEW",'           VALID KEYWORD           06804300
&ZMS          SETC  '&ZMS "DLLR",'              VALID KEYWORD           06804400
&ZMS          SETC  '&ZMS "ENDD",'              VALID KEYWORD           06804500
&ZMS          SETC  '&ZMS "GETD",'              VALID KEYWORD           06804600
&ZMS          SETC  '&ZMS "GETE",'              VALID KEYWORD           06804700
&ZMS          SETC  '&ZMS "GETN",'              VALID KEYWORD           06804800
&ZMS          SETC  '&ZMS "IMPORT",'            VALID KEYWORD           06804900
&ZMS          SETC  '&ZMS "INCLUDE",'           VALID KEYWORD           06805000
&ZMS          SETC  '&ZMS "INSERTS",'           VALID KEYWORD           06805100
&ZMS          SETC  '&ZMS "LOADW",'             VALID KEYWORD           06805200
              MNOTE 8,' &ZMS '                                          06805300
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             06805400
&ZMS          SETC  '(CONTINUED) '                                      06805500
&ZMS          SETC  '&ZMS "ORDERS",'            VALID KEYWORD           06805600
&ZMS          SETC  '&ZMS "PUTD",'              VALID KEYWORD           06805700
&ZMS          SETC  '&ZMS "RENAME",'            VALID KEYWORD           06805800
&ZMS          SETC  '&ZMS "RESETW",'            VALID KEYWORD           06805900
&ZMS          SETC  '&ZMS "SAVEW",'             VALID KEYWORD           06806000
&ZMS          SETC  '&ZMS "SETL",'              VALID KEYWORD           06806100
&ZMS          SETC  '&ZMS "SETO",'              VALID KEYWORD           06806200
&ZMS          SETC  '&ZMS "STARTD",'            VALID KEYWORD           06806300
&ZMS          SETC  '&ZMS OR "STARTS".'         VALID KEYWORD           06806400
              MNOTE 8,' &ZMS '                                          06806500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             06806600
              AGO   .ZG408E                                             06806700
.ZG408D       ANOP  ,                                                   06806800
&XFUNC        SETC  'ADDA'      SET DEFAULT KEYWORD                     06806900
.ZG408E       ANOP  ,                                                   06807000
.*------------------------------------------------------------------    06807100
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           06807200
              AIF   (K'&FUNC(1) GT 0).ZG408F    PARM                    06807300
&XFUNC        SETC  ''          ENSURE NULL KEYWORD                     06807400
&ZXFUNC       SETC  ''          RESET IN/OUTPUT                         06807500
&ZMS          SETC  'THE'                                               06807600
&ZMS          SETC  '&ZMS "FUNC" KEY AND ITS ARGUMENT'                  06807700
&ZMS          SETC  '&ZMS ARE REQUIRED.'                                06807800
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                 06807900
&ZMS          SETC  '&ZMS "ADDA",'              VALID KEYWORD           06808000
&ZMS          SETC  '&ZMS "ALIGNT",'            VALID KEYWORD           06808100
&ZMS          SETC  '&ZMS "ALTERW",'            VALID KEYWORD           06808200
&ZMS          SETC  '&ZMS "AUTOC",'             VALID KEYWORD           06808300
&ZMS          SETC  '&ZMS "BINDW",'             VALID KEYWORD           06808400
&ZMS          SETC  '&ZMS "CREATEW",'           VALID KEYWORD           06808500
&ZMS          SETC  '&ZMS "DELETEW",'           VALID KEYWORD           06808600
&ZMS          SETC  '&ZMS "DLLR",'              VALID KEYWORD           06808700
&ZMS          SETC  '&ZMS "ENDD",'              VALID KEYWORD           06808800
&ZMS          SETC  '&ZMS "GETD",'              VALID KEYWORD           06808900
&ZMS          SETC  '&ZMS "GETE",'              VALID KEYWORD           06809000
&ZMS          SETC  '&ZMS "GETN",'              VALID KEYWORD           06809100
&ZMS          SETC  '&ZMS "IMPORT",'            VALID KEYWORD           06809200
&ZMS          SETC  '&ZMS "INCLUDE",'           VALID KEYWORD           06809300
&ZMS          SETC  '&ZMS "INSERTS",'           VALID KEYWORD           06809400
              MNOTE 8,' &ZMS '                                          06809500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             06809600
&ZMS          SETC  '(CONTINUED) '                                      06809700
&ZMS          SETC  '&ZMS "LOADW",'             VALID KEYWORD           06809800
&ZMS          SETC  '&ZMS "ORDERS",'            VALID KEYWORD           06809900
&ZMS          SETC  '&ZMS "PUTD",'              VALID KEYWORD           06810000
&ZMS          SETC  '&ZMS "RENAME",'            VALID KEYWORD           06810100
&ZMS          SETC  '&ZMS "RESETW",'            VALID KEYWORD           06810200
&ZMS          SETC  '&ZMS "SAVEW",'             VALID KEYWORD           06810300
&ZMS          SETC  '&ZMS "SETL",'              VALID KEYWORD           06810400
&ZMS          SETC  '&ZMS "SETO",'              VALID KEYWORD           06810500
&ZMS          SETC  '&ZMS "STARTD",'            VALID KEYWORD           06810600
&ZMS          SETC  '&ZMS OR "STARTS".'         VALID KEYWORD           06810700
              MNOTE 8,' &ZMS '                                          06810800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             06810900
.ZG408F       ANOP  ,                                                   06811000
.*----------------------------------------------------------------***   06811100
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    06811200
              AIF   (N'&RETCODE LE 1).ZG410A    CK NUM                  06811300
&ZMS          SETC  '"RETCODE='                 *KPOSA* MNOTE           06811400
&ZMS          SETC  '&ZMS.&RETCODE"'                                    06812000
&ZMS          SETC  '&ZMS "RETCODE"'                                    06812800
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 06813600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             06814400
.ZG410A       ANOP  ,                                                   06869000
.*-------------------------------------------------------------------   06869100
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        06869200
              AIF   (K'&RETCODE(1) LE 0).ZG410C  NO PARM                06869300
&ZXRETCODE    SETC  'OUTPUT'    SET OUTPUT                              06869400
&XRETCODE     SETC  '&RETCODE(1)'               SET XVARIABLE           06869500
              AIF   (N'&RETCODE GT 1).ZG410C                            06869600
&XRETCODE     SETC  '&RETCODE'  SET XVARIABLE                           06869700
.ZG410C       ANOP  ,                                                   06870300
.*-------------------------------------------------------------------   06870400
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   06870500
              AIF   (K'&ZXRETCODE LE 0).ZG410R  NOT I/O                 06870600
              AIF   ('&XRETCODE'(1,1) NE '(').ZG410R                    06870700
&ZCGPR        SETC  '&XRETCODE'(2,K'&XRETCODE-2)                        06870800
              AIF   ('&ZCGPR'(1,1) NE '0').ZG410P                       06870900
              AIF   (K'&ZCGPR GT 2).ZG410Q                              06871000
              AIF   ('&ZCGPR' EQ '0').ZG410Q                            06871100
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       06871200
              AIF   (T'&ZCGPR NE 'N').ZG410Q    INVALID REG NAME        06871300
.ZG410P       ANOP  ,                                                   06871400
              AIF   (T'&ZCGPR NE 'N').ZG410R    NON NUMERIC             06871500
              AIF   ('&ZCGPR' LT '2').ZG410Q                            06871600
              AIF   ('&ZCGPR' LE '12').ZG410R                           06871700
.ZG410Q       ANOP  ,                                                   06871800
&ZMS          SETC  '"RETCODE='                 *KGPRA* MNOTE           06873300
&ZMS          SETC  '&ZMS.&RETCODE"'                                    06874800
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           06876400
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    06876500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             06876600
.ZG410R       ANOP  ,                                                   06876700
.*----------------------------------------------------------------***   06876800
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    06876900
              AIF   (N'&RSNCODE LE 1).ZG413A    CK NUM                  06877000
&ZMS          SETC  '"RSNCODE='                 *KPOSA* MNOTE           06877100
&ZMS          SETC  '&ZMS.&RSNCODE"'                                    06877200
&ZMS          SETC  '&ZMS "RSNCODE"'                                    06877300
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 06877400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             06877500
.ZG413A       ANOP  ,                                                   06877600
.*-------------------------------------------------------------------   06877700
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        06877800
              AIF   (K'&RSNCODE(1) LE 0).ZG413C  NO PARM                06877900
&ZXRSNCODE    SETC  'OUTPUT'    SET OUTPUT                              06878000
&XRSNCODE     SETC  '&RSNCODE(1)'               SET XVARIABLE           06878100
              AIF   (N'&RSNCODE GT 1).ZG413C                            06878200
&XRSNCODE     SETC  '&RSNCODE'  SET XVARIABLE                           06878300
.ZG413C       ANOP  ,                                                   06878400
.*-------------------------------------------------------------------   06878500
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   06878600
              AIF   (K'&ZXRSNCODE LE 0).ZG413R  NOT I/O                 06878700
              AIF   ('&XRSNCODE'(1,1) NE '(').ZG413R                    06878800
&ZCGPR        SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                        06878900
              AIF   ('&ZCGPR'(1,1) NE '0').ZG413P                       06879000
              AIF   (K'&ZCGPR GT 2).ZG413Q                              06879100
              AIF   ('&ZCGPR' EQ '0').ZG413Q                            06879200
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       06879300
              AIF   (T'&ZCGPR NE 'N').ZG413Q    INVALID REG NAME        06879400
.ZG413P       ANOP  ,                                                   06879500
              AIF   (T'&ZCGPR NE 'N').ZG413R    NON NUMERIC             06879600
              AIF   ('&ZCGPR' LT '2').ZG413Q                            06879700
              AIF   ('&ZCGPR' LE '12').ZG413R                           06879800
.ZG413Q       ANOP  ,                                                   06879900
&ZMS          SETC  '"RSNCODE='                 *KGPRA* MNOTE           06880000
&ZMS          SETC  '&ZMS.&RSNCODE"'                                    06880100
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           06880200
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    06880300
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             06880400
.ZG413R       ANOP  ,                                                   06880500
.*----------------------------------------------------------------***   06880600
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             06880700
              AIF   (N'&VERSION LE 1).ZG416A    CK NUM                  06880800
&ZMS          SETC  '"VERSION='                 *KPOSA* MNOTE           06880900
&ZMS          SETC  '&ZMS.&VERSION"'                                    06881000
&ZMS          SETC  '&ZMS "VERSION"'                                    06881100
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 06881200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             06881300
.ZG416A       ANOP  ,                                                   06881400
.*-------------------------------------------------------------------   06881500
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             06881600
&XVERSION     SETC  ''          INITIALIZE XVARIABLE                    06881700
.ZG417A   AIF   ('&VERSION(1)' NE '1').ZG418A                           06881800
&XVERSION     SETC  '1'         SET KEYWORD                             06881900
.*-------------------------------------------------------------------   06882000
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             06882100
.ZG418A   AIF   ('&VERSION(1)' NE '2').ZG419A                           06882200
&XVERSION     SETC  '2'         SET KEYWORD                             06882300
.*-------------------------------------------------------------------   06882400
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             06882500
.ZG419A   AIF   ('&VERSION(1)' NE '3').ZG420A                           06882600
&XVERSION     SETC  '3'         SET KEYWORD                             06882700
.*-------------------------------------------------------------------   06882800
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             06882900
.ZG420A   AIF   ('&VERSION(1)' NE '4').ZG421A                           06883000
&XVERSION     SETC  '4'         SET KEYWORD                             06883100
.*-------------------------------------------------------------------   06883200
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             06883300
.ZG421A       AIF   (K'&XVERSION GT 0).ZG421C   KEYWORD                 06883400
              AIF   (K'&VERSION(1) LE 0).ZG421B                         06883500
&ZMS          SETC  '"VERSION='                 *KUKWA* MNOTE           06883600
&ZMS          SETC  '&ZMS.&VERSION"'                                    06883700
&ZMS          SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '           06883800
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                 06883900
&ZMS          SETC  '&ZMS "1",'                 VALID KEYWORD           06884000
&ZMS          SETC  '&ZMS "2",'                 VALID KEYWORD           06884100
&ZMS          SETC  '&ZMS "3",'                 VALID KEYWORD           06884200
&ZMS          SETC  '&ZMS OR "4".'              VALID KEYWORD           06884300
              MNOTE 8,' &ZMS '                                          06884400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             06884500
.ZG421B       ANOP  ,                                                   06884600
&XVERSION     SETC  '1'         SET DEFAULT KEYWORD                     06884700
.ZG421C       ANOP  ,                                                   06884800
&ZXVERSION    SETC  'INPUT'     SET IN/OUTPUT                           06884900
.******************************************************************     06885000
.***AH.P00 CHECK STANDALONE POSITIONAL VARIABLES                        06885100
.******************************************************************     06885200
              ACTR  10000                                               06885300
.*----------------------------------------------------------------***   06885400
.***AH.P02 EXTRA POSITIONALS                                            06885500
              AIF   (N'&SYSLIST LE 0).ZGLISTX   NO EXTRAS               06885600
              AIF   (N'&SYSLIST NE 2).ZGLISTX1  NOT NULL                06885700
              AIF   ('&SYSLIST(1)' NE '').ZGLISTX1  NOT NULL            06885800
              AIF   ('&SYSLIST(2)' EQ '').ZGLISTX  NOT NULL             06885900
.ZGLISTX1     ANOP  ,                                                   06886000
&ZCVAL        SETC  ''          ERROR FIELD                             06886100
&ZAWRK        SETA  0           POSITIONAL NUMBER                       06886200
.ZGLIST2      ANOP  ,                                                   06886300
&ZAWRK        SETA  &ZAWRK+1    NEXT POSITIONAL                         06886400
              AIF   (&ZAWRK GT N'&SYSLIST).ZGLIST3  DONE                06886500
&ZCVAL        SETC '&ZCVAL,&SYSLIST(&ZAWRK)'    EXTRA                   06886600
              AGO   .ZGLIST2                                            06886700
.*                                                                      06886800
.ZGLIST3      ANOP  ,                                                   06886900
&ZCVAL        SETC '&ZCVAL'(2,K'&ZCVAL-1)       STRIP COMMA             06887000
&ZMS          SETC  'POSITIONAL ARGUMENT(S),'   *PPOSA* MNOTE           06887100
&ZMS          SETC  '&ZMS "&ZCVAL"'                                     06887200
&ZMS          SETC  '&ZMS CANNOT BE USED.'                              06887300
&ZMS          SETC  '&ZMS NO POSITIONAL ARGUMENTS'                      06887400
              MNOTE 8,' &ZMS ARE ALLOWED.'                              06887500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             06887600
.ZGLISTX      ANOP  ,                                                   06888000
&ZASYSLNDX    SETA  0                                                   06888800
.*-------------------------------------------------------------------   06889600
.***AG.MF04 MF=(SLE)                                                    06890400
.ZGMFX        ANOP  ,           END OF FULL SYNTAX CHECK                06891200
.*******************************************************************    06892000
.***AE.ZMR01 NO CODE GENERATED IF ERRORS DETECTED                       06892800
.*******************************************************************    06893600
              AIF   (&ZMACRET NE 0).ZLX2        ERROR DETECTED          06894400
.*******************************************************************    06895200
.***AE.01  START OF IEWBIND2 MACRO CODE                                 06896000
.*******************************************************************    06896800
              LCLC  &M0M0001                 NAME                       06897600
&M0M0001      SETC  '&XLABEL'                SET NAME                   06898400
              AIF   (K'&XLABEL NE 0).XLAB2                              06899200
&M0M0001      SETC  'M00M&SYSNDX'            DEFAULT NAME               06900000
.*                                                                      06900800
.XLAB2        ANOP  ,                                                   06901600
              AIF   ('&XMF' EQ 'L').XLAB3                               06902000
&M0M0001 DS    0H                             IEWBIND2-0                06902400
.XLAB3        ANOP  ,                                                   06902800
.*******************************************************************    06903200
.***AE.PR01 PRINT CONTROLS, DEFAULT IS YES                              06904000
.*******************************************************************    06904800
              PUSH  PRINT                                               06905600
              AIF   ('&ZPRINT' NE 'NO').ZPRINTX  TURN PRINT ON          06906400
              PRINT OFF         ++ PR01                                 06907200
              AGO   .ZPRNTXX                                            06908000
.ZPRINTX      PRINT ON                                                  06908800
.ZPRNTXX      ANOP  ,                                                   06909600
.********************************************************************   06910400
.***AL.A01  INTERNAL ARRAY TO PRODUCE FORMATTED CODE                    06911200
.********************************************************************   06912000
                      LCLA  &ZOPN          LIST INSTRUCTION INDEX       06912800
                      LCLA  &ZOPN1         INVOCATION INDEX             06913600
                      LCLC  &ZOPL(4095)    LABEL                        06914400
                      LCLC  &ZOPO(4095)    OPERATION                    06915200
                      LCLC  &ZOPV(4095)    VALUE                        06916000
                      LCLC  &ZOPD(4095)    DESCRIPTION                  06916800
.*                                                                      06917600
&ZOPN                 SETA  0              INITIAL INST INDEX VALUE     06918400
.*-------------------------------------------------------------------   06919200
.***AL.A10 SET ZPLLEN                                                   06920000
&ZPLLEN               SETA 52                                           06920800
.******************************************************************     06921600
.***AL.A05 IEWBIND2 FMT=ARG MF=S PARAMETER AREA                         06922400
.******************************************************************     06923200
                      AIF   ('&XMF' NE 'S').ZLMFSX  NOT STANDARD MF     06924000
&XMFCTRL              SETC  '#Z'.'&SYSNDX'(1,4).'A'                     06924300
&ZN                   SETA  &ZPLLEN/4                                   06924600
&ZCVAL                SETC  '&ZN'.'A'                                   06924900
.*                                                                      06925200
&ZOPN                 SETA  &ZOPN+1                                     06925600
&ZOPL(&ZOPN)          SETC  ' '                                         06926400
&ZOPO(&ZOPN)          SETC  'B'                                         06927200
&ZOPV(&ZOPN)          SETC  '&XMFCTRL.S'                                06928000
&ZOPD(&ZOPN)          SETC  '++ IEWBIND2 ARG PARMS'                     06928800
.*                                                                      06929600
&ZOPN                 SETA  &ZOPN+1                                     06930400
&ZOPL(&ZOPN)          SETC  '&XMFCTRL'                                  06931200
&ZOPO(&ZOPN)          SETC  'DS'                                        06932000
&ZOPV(&ZOPN)          SETC  '&ZCVAL'                                    06932800
&ZOPD(&ZOPN)          SETC  '++ IEWBIND2 ARG PARMS'                     06933600
.*-------------------------------------------------------------------   06934400
.***AL.A07 IEWBIND2 FMT=ARG MF=S PARAMETERS                             06935200
&ZOPN                 SETA  &ZOPN+1                                     06936000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL.S'                                06936800
&ZOPO(&ZOPN)          SETC  'DC'                                        06937600
&ZOPV(&ZOPN)          SETC  '0H''0'''                                   06938400
&ZOPD(&ZOPN)          SETC  '++ IEWBIND2 ARG PARMS'                     06939200
.*                                                                      06940000
.ZLMFSX               ANOP  ,                                           06940800
.******************************************************************     06941600
.***AL.AL01 IEWBIND2 FMT=ARG MF=L PARAMETER AREA                        06942400
.******************************************************************     06943200
                      AIF   ('&XMF' NE 'L').ZLMFLX  NOT MF=L            06944000
&ZOPN                 SETA  &ZOPN+1                                     06944800
&ZOPL(&ZOPN)          SETC  '&XMFCTRL'                                  06945600
&ZOPO(&ZOPN)          SETC  'DS'                                        06946400
&ZOPV(&ZOPN)          SETC  '&XMFATTR'                                  06947200
&ZOPD(&ZOPN)          SETC  '++ IEWBIND2 ARG PARMS'                     06948000
.*                                                                      06948800
&ZOPN                 SETA  &ZOPN+1                                     06949600
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XPARAMETER01@'                   06950400
&ZOPO(&ZOPN)          SETC  'DS'                                        06951200
&ZOPV(&ZOPN)          SETC  'A'                                         06952000
&ZOPD(&ZOPN)          SETC  '++ FIELD_LABEL F'                          06952800
.*                                                                      06953600
&ZOPN                 SETA  &ZOPN+1                                     06954400
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XPARAMETER02@'                   06955200
&ZOPO(&ZOPN)          SETC  'DS'                                        06956000
&ZOPV(&ZOPN)          SETC  'A'                                         06956800
&ZOPD(&ZOPN)          SETC  '++ FIELD_LABEL F'                          06957600
.*                                                                      06958400
&ZOPN                 SETA  &ZOPN+1                                     06959200
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XPARAMETER03@'                   06960000
&ZOPO(&ZOPN)          SETC  'DS'                                        06960800
&ZOPV(&ZOPN)          SETC  'A'                                         06961600
&ZOPD(&ZOPN)          SETC  '++ FIELD_LABEL F'                          06962400
.*                                                                      06963200
&ZOPN                 SETA  &ZOPN+1                                     06964000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XPARAMETER04@'                   06964800
&ZOPO(&ZOPN)          SETC  'DS'                                        06965600
&ZOPV(&ZOPN)          SETC  'A'                                         06966400
&ZOPD(&ZOPN)          SETC  '++ FIELD_LABEL CL4'                        06967200
.*                                                                      06968000
&ZOPN                 SETA  &ZOPN+1                                     06968800
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XPARAMETER05@'                   06969600
&ZOPO(&ZOPN)          SETC  'DS'                                        06970400
&ZOPV(&ZOPN)          SETC  'A'                                         06971200
&ZOPD(&ZOPN)          SETC  '++ FIELD_LABEL CL4'                        06972000
.*                                                                      06972800
&ZOPN                 SETA  &ZOPN+1                                     06973600
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XPARAMETER06@'                   06974400
&ZOPO(&ZOPN)          SETC  'DS'                                        06975200
&ZOPV(&ZOPN)          SETC  'A'                                         06976000
&ZOPD(&ZOPN)          SETC  '++ FIELD_LABEL CL4'                        06976800
.*                                                                      06977600
&ZOPN                 SETA  &ZOPN+1                                     06978400
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XPARAMETER07@'                   06979200
&ZOPO(&ZOPN)          SETC  'DS'                                        06980000
&ZOPV(&ZOPN)          SETC  'A'                                         06980800
&ZOPD(&ZOPN)          SETC  '++ FIELD_LABEL CL4'                        06981600
.*                                                                      06982400
&ZOPN                 SETA  &ZOPN+1                                     06983200
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XPARAMETER08@'                   06984000
&ZOPO(&ZOPN)          SETC  'DS'                                        06984800
&ZOPV(&ZOPN)          SETC  'A'                                         06985600
&ZOPD(&ZOPN)          SETC  '++ FIELD_LABEL CL4'                        06986400
.*                                                                      06987200
&ZOPN                 SETA  &ZOPN+1                                     06988000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XPARAMETER09@'                   06988800
&ZOPO(&ZOPN)          SETC  'DS'                                        06989600
&ZOPV(&ZOPN)          SETC  'A'                                         06990400
&ZOPD(&ZOPN)          SETC  '++ FIELD_LABEL CL4'                        06991200
.*                                                                      06992000
&ZOPN                 SETA  &ZOPN+1                                     06992800
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XPARAMETER10@'                   06993600
&ZOPO(&ZOPN)          SETC  'DS'                                        06994400
&ZOPV(&ZOPN)          SETC  'A'                                         06995200
&ZOPD(&ZOPN)          SETC  '++ FIELD_LABEL CL4'                        06996000
.*                                                                      06996800
&ZOPN                 SETA  &ZOPN+1                                     06997600
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XPARAMETER11@'                   06998400
&ZOPO(&ZOPN)          SETC  'DS'                                        06999200
&ZOPV(&ZOPN)          SETC  'A'                                         07000000
&ZOPD(&ZOPN)          SETC  '++ FIELD_LABEL CL4'                        07000800
.*                                                                      07001600
&ZOPN                 SETA  &ZOPN+1                                     07002400
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XPARAMETER12@'                   07003200
&ZOPO(&ZOPN)          SETC  'DS'                                        07004000
&ZOPV(&ZOPN)          SETC  'A'                                         07004800
&ZOPD(&ZOPN)          SETC  '++ FIELD_LABEL CL4'                        07005600
.*                                                                      07006400
&ZOPN                 SETA  &ZOPN+1                                     07007200
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XPARAMETER13@'                   07008000
&ZOPO(&ZOPN)          SETC  'DS'                                        07008800
&ZOPV(&ZOPN)          SETC  'A'                                         07009600
&ZOPD(&ZOPN)          SETC  '++ FIELD_LABEL CL4'                        07010400
.*-------------------------------------------------------------------   07011200
.***AL.AL08 IEWBIND2 FMT=ARG MF=L PARAMETER AREA DEFINED                07012000
                      AGO   .ZMFLX         EXIT, MF=L DONE              07012800
.*                                                                      07013600
.ZLMFLX               ANOP  ,                                           07014400
.********************************************************************   07015200
.***AI.A01 IEWBIND2 FMT=ARG FILL IN PARAMETER AREA                      07016000
.********************************************************************   07016800
                      ACTR  10000                                       07017600
&ZOPN                 SETA  &ZOPN+1                                     07018400
&ZOPL(&ZOPN)          SETC  ' '                                         07019200
&ZOPO(&ZOPN)          SETC  'XR'                                        07020000
&ZOPV(&ZOPN)          SETC  '0,0'                                       07020800
&ZOPD(&ZOPN)          SETC  '++ SET GPR TO ZERO'                        07021600
.*                                                                      07022400
&ZCVAL                SETC  'LA'           ASSUME XA MODE               07023200
                      AIF   ('&SYSASCE' EQ 'P').ZIMFXA  SYSTATE PRI     07024000
&ZCVAL                SETC  'LAE'          XAX MODE                     07024800
.ZIMFXA               ANOP ,                                            07025600
.*                                                                      07026400
                      AIF   ('&XMFCTRL'(1,1) NE '(').ZIMFN2  NOT GPR    07027200
&ZCGPR                SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)  GET GPR         07028000
                      AIF   ('&ZCGPR' EQ 'GPR1').ZIMFNX                 07028800
                      AIF   ('&ZCGPR' EQ 'GPR01').ZIMFNX                07029600
                      AIF   ('&ZCGPR' EQ 'REG1').ZIMFNX                 07030400
                      AIF   ('&ZCGPR' EQ 'REG01').ZIMFNX                07031200
                      AIF   ('&ZCGPR' EQ 'R1').ZIMFNX                   07032000
                      AIF   ('&ZCGPR' EQ '1').ZIMFNX                    07032800
                      AIF   ('&ZCGPR' EQ '01').ZIMFNX                   07033600
&ZOPN                 SETA  &ZOPN+1                                     07034400
&ZOPL(&ZOPN)          SETC  ' '                                         07035200
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    07036000
&ZOPV(&ZOPN)          SETC  '1,0(,&ZCGPR)'                              07036800
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       07037600
                      AGO   .ZIMFNX                                     07038400
.*                                                                      07039200
.ZIMFN2               ANOP ,                                            07040000
&ZOPN                 SETA  &ZOPN+1                                     07040800
&ZOPL(&ZOPN)          SETC  ' '                                         07041600
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    07042400
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL'                                07043200
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       07044000
.ZIMFNX               ANOP ,                                            07044800
.********************************************************************   07045600
.***AI.A02 IEWBIND2 FMT=ARG INITIALIZE PARAMETER AREA                   07046400
.********************************************************************   07047200
.***AI.L03 MF=(SLE)                                                     07048000
                      AIF   ('&XMF' EQ 'L').ZIMFLX                      07048800
.*                                                                      07049600
&ZOPN                 SETA  &ZOPN+1                                     07050400
&ZOPL(&ZOPN)          SETC  ' '                                         07051200
&ZOPO(&ZOPN)          SETC  'XC'                                        07052000
&ZOPV(&ZOPN)          SETC  '0(&ZPLLEN,1),0(1)'                         07052800
&ZOPD(&ZOPN)          SETC  '++ INITIALIZE'                             07053600
.ZIMFLX               ANOP  ,                                           07054400
.*-------------------------------------------------------------------   07055200
&ZOPN1                SETA &ZOPN                                        07056000
.*******************************************************************    07056800
.***AO.X04  LABEL FOR MF=L PROCESSING                                   07057600
.*******************************************************************    07058400
.ZMFLX                ANOP  ,              MF=L PROCESSING              07059200
.*******************************************************************    07060000
.***AO.X05  FORMAT GENERATED INSTRUCTIONS                               07060800
.*******************************************************************    07061600
                      ACTR  10000                                       07062400
.*                                                                      07063200
                      LCLA  &ZLC           COLUMN POSITION              07064000
                      LCLA  &ZOPX          LIST TABLE INDEX             07064800
                      LCLC  &ZLL           LABEL                        07065600
                      LCLC  &ZLOP          OPERATION                    07066400
                      LCLC  &ZLV           VALUE                        07067200
                      LCLC  &ZLD           DESCRIPTION                  07068000
.*                                                                      07068800
&ZOPX                 SETA  1                                           07069600
.ZL2                  AIF   (&ZOPX GT &ZOPN1).ZLX  B IF DONE            07070400
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              07071200
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              07072000
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              07072800
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              07073600
                      AIF   (K'&ZLD LE 0).ZL5                           07074400
&ZLC                  SETA  35             COMMENT COLUMN               07075200
                      AIF   ('&ZLD'(1,1) NE '*').ZL3                    07076000
&ZLC                  SETA  33             COMMMENT COLUMN              07076800
.ZL3                  AIF   (K'&ZLV GE &ZLC-16-1).ZL4                   07077600
&ZLV                  SETC  '&ZLV'.' '                                  07078400
                      AGO   .ZL3                                        07079200
.*                                                                      07080000
.ZL4                  ANOP  ,                                           07080800
&ZLV                  SETC  '&ZLV'.' '                                  07081600
.ZL5                  ANOP  ,                                           07082400
&ZLV                  SETC  '&ZLV'.'&ZLD'                               07083200
.*                                                                      07084000
&ZLL     &ZLOP &ZLV                                                     07084800
.*                                                                      07085600
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               07086400
                      AGO   .ZL2           CONTINUE LOOPING             07087200
.*                                                                      07088000
.ZLX                  ANOP  ,                                           07088800
                      AIF   ('&XMF' EQ 'L').ZLINKX  MF=L                07089600
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  07090400
         PUSH PRINT                                                     07104400
         PRINT OFF                                                      07104500
.****  Inner macro  to support register form for parms            @P5A* 07104600
         MACRO                                                          07104700
         IEWBRL2   &PARMA,&B                                            07104800
.*       &B is an optional register number.  Defaults to 14             07104900
         AIF  (K'&PARMA EQ 0).IEWBR07                                   07105000
         AIF   ('&PARMA'(1,1) NE '(').IEWBR04                           07105100
         AIF  (K'&B EQ 0).IEWBR03                                       07105200
         LR    &B,&PARMA(1)                                             07105300
.IEWBR03 ANOP                                                           07105400
         LR    14,&PARMA(1)                                             07105500
         AGO   .IEWBR07                                                 07105600
.IEWBR04 ANOP                                                           07105700
         AIF  (K'&B EQ 0).IEWBR05                                       07105800
         LA    &B,&PARMA                                                07105900
         AGO   .IEWBR07                                                 07106000
.IEWBR05 ANOP                                                           07106100
         LA    14,&PARMA                                                07106200
.IEWBR07 ANOP                                                           07106300
         MEND                                                           07106400
.****  Inner macro  to load register                              @P5A* 07106500
         MACRO                                                          07106600
         IEWBRG3   &VARA,&B                                             07106700
.*       &B is an optional register number.  Defaults to 14             07106800
         AIF  (K'&VARA EQ 0).IEWBG07                                    07106900
         AIF   ('&VARA'(1,1) NE '(').IEWBG04                            07107000
         AIF  (K'&B EQ 0).IEWBG03                                       07107100
         L     &B,0(,&VARA(1))                                          07107200
         AGO   .IEWBG07                                                 07107300
.IEWBG03 ANOP                                                           07107400
         L     14,0(,&VARA(1))                                          07107500
         AGO   .IEWBG07                                                 07107600
.IEWBG04 ANOP                                                           07107700
         AIF  (K'&B EQ 0).IEWBG05                                       07107800
         L     &B,&VARA                                                 07107900
         AGO   .IEWBG07                                                 07108000
.IEWBG05 ANOP                                                           07108100
         LA    14,&VARA                                                 07108200
.IEWBG07 ANOP                                                           07108300
         MEND                                                           07108400
.****  Inner macro  to support register form for output parms     @P5A* 07108500
.*       &B is target (may be register)                                 07108600
         MACRO                                                          07108700
         IEWBRS2   &A,&B                                                07108800
         AIF  (K'&B EQ 0).IEWBL08                                       07108900
         AIF   ('&B'(1,1) NE '(').IEWBL07                               07109000
         ST    &A,0(,&B(1))                                             07109100
         AGO   .IEWBL08                                                 07109200
.IEWBL07 ANOP                                                           07109300
         ST    &A,&B                                                    07109400
.IEWBL08 ANOP                                                           07109500
         MEND                                                           07109600
.**** End of Inner Macros                                         @P5A* 07109700
         POP  PRINT                                                     07109800
         AIF   ('&XAMODE' NE '0').IEWB010                               07109900
&XAMODE  SETC '=XL4''00004040'''                                        07110000
.IEWB010 AIF   ('&XAREA' NE '0').IEWB015                                07110100
&XAREA   SETC '=2FL4''0'''                                              07110200
.IEWB015  AIF   (K'&XAREA GT 0).IEWB020                                 07110300
&XAREA   SETC '=2FL4''0'''                                              07110400
.IEWB020  AIF   ('&XCALLIB' NE '0').IEWB385              @01C           07110500
&XCALLIB SETC '=XL4''00004040'''                                        07110600
.IEWB385  AIF   ('&XCLASS' NE '0').IEWB030               @05C           07110700
&XCLASS  SETC '=XL4''00004040'''                         @01A           07110800
.IEWB030  AIF   (K'&XCOUNT NE 0).IEWB040                                07111200
&XCOUNT  SETC  '=FL4''0'''                                              07112000
.IEWB040  AIF   ('&XCURSOR' NE '-1').IEWB050                            07112800
&XCURSOR SETC  '=FL4''-1'''                                             07113600
.IEWB050  AIF   (K'&XCURSOR GT 0).IEWB060                               07114400
&XCURSOR SETC  '=FL4''-1'''                                             07115200
.IEWB060  AIF   (K'&XDCBPTR GT 0).IEWB080                               07116000
&XDCBPTR SETC '=FL4''0'''                                               07116800
.IEWB080  AIF   (K'&XDDNAME NE 0).IEWB085                               07117600
&XDDNAME SETC  '=XL4''00004040'''                                       07118400
.IEWB085  AIF   (K'&XDEPTR GT 0).IEWB090                                07119200
&XDEPTR  SETC '=FL4''0'''                                               07120000
.IEWB090  AIF   (K'&XDIALOG GT 0).IEWB100                               07120800
&XDIALOG SETC '=2FL4''0'''                                              07121600
.IEWB100 AIF   ('&XENAME' NE '0').IEWB110                               07122400
&XENAME  SETC '=XL4''00004040'''                                        07123200
.IEWB110 AIF   (K'&XEPTOKEN GT 0).IEWB130                               07124000
&XEPTOKEN SETC '=FL4''0'''                                              07124800
.IEWB130 AIF   ('&XEXITS' NE '0').IEWB140                               07125600
&XEXITS  SETC '=FL4''0'''                                               07126400
.IEWB140 AIF   ('&XEXTLST' NE '0').IEWB141                              07127200
&XEXTLST SETC '=2FL4''0'''                                              07128000
.IEWB141 AIF   (K'&XEXTLST GT 0).IEWB150                                07128800
&XEXTLST SETC '=2FL4''0'''                                              07129600
.IEWB150 AIF   ('&XFILES' NE '0').IEWB160                               07130400
&XFILES  SETC '=FL4''0'''                                               07131200
.IEWB160 AIF   (K'&XLNAME GT 0).IEWB170                                 07132000
&XLNAME  SETC '=XL4''00004040'''                                        07132800
.IEWB170 AIF   ('&XLNAME' NE '0').IEWB190                               07133600
&XLNAME  SETC '=XL4''00004040'''                                        07134400
.IEWB190 AIF   ('&XMEMBER' NE '0').IEWB200                              07135200
&XMEMBER SETC '=XL4''00004040'''                                        07136000
.IEWB200 AIF   (K'&XMEMBER GT 0).IEWB220                                07136800
&XMEMBER SETC '=XL4''00004040'''                                        07137600
.IEWB220 AIF   ('&XMODLIB' NE '0').IEWB230                              07138400
&XMODLIB SETC '=XL4''00004040'''                                        07139200
.IEWB230 AIF   (K'&XNEWNAME NE 0).IEWB240                               07140000
&XNEWNAME SETC  '=XL4''00004040'''                                      07140800
.IEWB240 AIF   ('&XOFFSET' NE '-1').IEWB260                             07141600
&XOFFSET SETC  '=FL4''-1'''                                             07142400
.IEWB260 AIF   (K'&XOFFSET GT 0).IEWB270                                07143200
&XOFFSET SETC  '=FL4''-1'''                                             07144000
.IEWB270 AIF   ('&XOPTIONS' NE '0').IEWB280                             07144800
&XOPTIONS SETC '=FL4''0'''                                              07145600
.IEWB280 AIF   ('&XRECTYPE' NE '0').IEWB300                             07146400
&XRECTYPE SETC '=XL4''00004040'''                                       07147200
.IEWB300 AIF   (K'&XRETCODE GT 0).IEWB330                               07148000
&XRETCODE SETC '=FL4''-1'''                                             07148800
.IEWB330 AIF   (K'&XRSNCODE GT 0).IEWB340                               07149600
&XRSNCODE SETC '=FL4''-1'''                                             07150400
.IEWB340 AIF   ('&XSECTION' NE '0').IEWB350                             07151200
&XSECTION SETC '=XL4''00004040'''                                       07152000
.IEWB350 AIF   ('&XSNAME' NE '0').IEWB360                               07152800
&XSNAME  SETC '=XL4''00004040'''                                        07153600
.IEWB360 AIF   ('&XSYMBOL' NE '0').IEWB361                              07154400
&XSYMBOL SETC '=XL4''00004040'''                                        07155200
.IEWB361 AIF   (K'&XSYMBOL GT 0).IEWB370                                07156000
&XSYMBOL SETC '=XL4''00004040'''                                        07156800
.IEWB370 AIF   ('&XPARMS' NE '0').IEWB380                               07157200
&XPARMS   SETC '=XL4''00004040'''                                  @L2A 07157600
.IEWB380 AIF   (K'&XWORKMOD NE 0).IEWB390                          @L7C 07158000
&XWORKMOD SETC '=2FL4''0'''                                             07158400
.IEWB390 ANOP  ,                                                   @L7A 07158500
&TEMPX2  SETA  &XVERSION                                           @L7A 07158600
&TEMPX1  SETA  (&TEMPX2/16)                                        @L7A 07158700
&TEMPX2  SETA  (&TEMPX2-16*&TEMPX1)                                @L7A 07158800
&HEXV    SETC  '0123456789ABCDEF'                                  @L7A 07158900
&HEXV    SETC  '&HEXV'.'&HEXV'(&TEMPX1+1,1)                        @L7A 07159000
&HEXV    SETC  '&HEXV'.'&HEXV'(&TEMPX2+1,1)                        @L7A 07159100
&HEXV    SETC  '00'.'&HEXV'(17,2)                                  @L7A 07159200
.IEWB499 ANOP  ,                                                        07159300
.********************************************************************** 07160000
.* Fill in parameter list                                             * 07160800
.********************************************************************** 07161600
.********************************************************************** 07162400
.* First, fill in RETCODE and RSNCODE arguments                       * 07163200
.********************************************************************** 07164000
.*Pervasive changes made to handle register arguments             @p4a* 07164500
         AIF   (K'&RETCODE EQ 0).IEWB501                           @L7A 07164700
         IEWBRL2  &XRETCODE    ++ RETCODE - return code                 07165000
         ST    14,4(,1)                                                 07165600
.IEWB501 AIF   (K'&RSNCODE EQ 0).IEWB502                           @L7A 07166000
         IEWBRL2  &XRSNCODE    ++ RSNCODE - reason code                 07166400
         ST    14,8(,1)                                                 07167200
.IEWB502 ANOP  ,                                                   @L7A 07167600
.********************************************************************** 07168000
.* Secondly, fill in function dependent arguments                     * 07168800
.********************************************************************** 07169600
.*******  ADDALIAS function call                                  @L3A  07169800
         AIF   ('&XFUNC' NE 'ADDA').IEWB506                             07170100
.*                                                               3@L7D  07170700
         LA    14,=XL4'001E&HEXV'   ++ ADDAlias function/version  @L7C  07171300
.*                                                               7@L7D  07171900
         ST    14,0(,1)                                                 07172600
         IEWBRL2  &XWORKMOD    ++ WORKMOD - workmod token               07172800
         ST    14,12(,1)                                                07173600
         IEWBRL2  &XANAME      ++ ANAME - alias name to add             07174400
         ST    14,16(,1)                                                07175200
         IEWBRL2  &XENAME      ++ ENAME - ESD to use for ANAME          07176000
         ST    14,20(,1)                                                07176800
         IEWBRL2  &XAMODE      ++ AMODE - amode string                  07177600
         ST    14,24(,1)                                                07178400
         AIF   ('&XVERSION' GT '3').IEWB518                     @L7C    07178800
         OI    24(1),X'80'                                              07179200
         AGO   .IEWB506                                         @03A    07179300
.IEWB518 LA    14,=CL1'&XATYPE'      ++ ATYPE -                 @03A    07179400
         ST    14,28(,1)                                       @03A     07179500
         OI    28(1),X'80'                                     @03A     07179600
.*******  ALIGNT function call                                   @L3A   07179700
.IEWB506 AIF   ('&XFUNC' NE 'ALIGNT').IEWB510                           07179800
.*                                                              2@L7D   07180200
         LA    14,=XL4'001F&HEXV'   ++ ALIGNText function/version@L7C   07180600
.*                                                              5@L7D   07181000
         ST    14,0(,1)                                                 07181600
         IEWBRL2  &XWORKMOD    ++ WORKMOD - workmod token               07182400
         ST    14,12(,1)                                                07183200
         IEWBRL2  &XSECTION    ++ SECTION - section name                07184000
         ST    14,16(,1)                                                07184800
         OI    16(1),X'80'                                              07185600
.*******  ALTERW function call                                   @L3A   07185800
.IEWB510 AIF   ('&XFUNC' NE 'ALTERW').IEWB750                           07186000
.*                                                              2@L7D   07186500
         LA    14,=XL4'0032&HEXV'  ++ ALTERWmod function/version @L7C   07187000
.*                                                              5@L7D   07187500
         ST    14,0(,1)                                          @L2C   07188000
         IEWBRL2  &XWORKMOD    ++ WORKMOD - workmod token               07188800
         ST    14,12(,1)                                                07189600
         LA    14,=CL1'&XATYPE'      ++ ATYPE -                         07190400
         ST    14,16(,1)                                                07191200
         LA    14,=CL1'&XMODE'       ++ MODE - Immed or Next            07192000
         ST    14,20(,1)                                                07192800
         IEWBRL2  &XOLDNAME    ++ OLDNAME - old name of symbol          07193600
         ST    14,24(,1)                                                07194400
         IEWBRL2  &XNEWNAME    ++ NEWNAME - new name of symbol          07195200
         ST    14,28(,1)                                                07196000
         IEWBRL2  &XCOUNT      ++ COUNT -                               07196800
         ST    14,32(,1)                                                07197600
         AIF   ('&XVERSION' GT '1').IEWB516                      @L7C   07197700
.*       AIF   ('&XVERSION' EQ '3').IEWB516                      @L7D   07197800
         OI    32(1),X'80'                                       @L2C   07197900
         AGO   .IEWB520                                                 07198000
.IEWB516 IEWBRL2  &XCLASS      ++ CLASS -                        @L2C   07198100
         ST    14,36(,1)                                         @L2C   07198400
         OI    36(1),X'80'                                       @L2C   07198800
.*******  AUTOCALL function call                                 @L4A   07198900
.IEWB750 AIF   ('&XFUNC' NE 'AUTOC').IEWB520                            07199000
.*                                                              2@L7D   07199400
         LA    14,=XL4'0033&HEXV'   ++ AUTOCall function/version @L7C   07199800
.*                                                              5@L7D   07200200
         ST    14,0(,1)                                                 07200800
         IEWBRL2  &XWORKMOD    ++ WORKMOD - workmod token               07201600
         ST    14,12(,1)                                                07202400
         AIF   ('&XPATHNAME' NE '').IEWB755                             07202800
         IEWBRL2  &XCALLIB     ++ CALLIB   - autocall ddname            07203200
         AGO   .IEWB756                                                 07203600
.IEWB755 IEWBRL2  &XPATHNAME   ++ PATHNAME - autocall pathname          07204000
.IEWB756 ST    14,16(,1)                                                07204400
         OI    16(1),X'80'                                              07204800
.*******  BINDW function call                                    @L4A   07204900
.IEWB520 AIF   ('&XFUNC' NE 'BINDW').IEWB530                            07205000
.*                                                              2@L7D   07205200
         LA    14,=XL4'0046&HEXV'   ++ BINDWmod function/version @L7C   07205400
.*                                                              5@L7D   07205600
         ST    14,0(,1)                                                 07205900
         IEWBRL2  &XWORKMOD    ++ WORKMOD - workmod token               07206000
         ST    14,12(,1)                                                07206100
         IEWBRL2  &XCALLIB     ++ CALLIB - autocall ddname              07206200
         ST    14,16(,1)                                                07206300
         OI    16(1),X'80'                                              07206400
.*******  CREATEW function call                                  @L3A   07206500
.IEWB530 AIF   ('&XFUNC' NE 'CREATEW').IEWB540                          07206600
.*                                                              2@L7D   07206800
         LA    14,=XL4'000A&HEXV'  ++ CREATEWmod function/version@L7C   07207000
.*                                                              5@L7D   07207200
         ST    14,0(,1)                                                 07207500
         IEWBRL2  &XDIALOG     ++ DIALOG -                              07208000
         ST    14,12(,1)                                                07208800
         IEWBRL2  &XWORKMOD    ++ WORKMOD - workmod token               07209600
         ST    14,16(,1)                                                07210400
         LA    14,=CL1'&XINTENT'     ++ INTENT -                        07211200
         ST    14,20(,1)                                                07212000
         OI    20(1),X'80'                                              07212800
.*******  DELETEW function call                                   @L3A  07213000
.IEWB540 AIF   ('&XFUNC' NE 'DELETEW').IEWB760                          07213200
.*                                                               2@L7D  07213700
         LA    14,=XL4'000F&HEXV'  ++ DELETEWmod function/version @L7C  07214200
.*                                                               5@L7D  07214700
         ST    14,0(,1)                                                 07215200
         IEWBRL2  &XWORKMOD    ++ WORKMOD - workmod token               07216000
         ST    14,12(,1)                                                07216800
         LA    14,=CL1'&XPROTECT'    ++ PROTECT -                       07217600
         ST    14,16(,1)                                                07218400
         OI    16(1),X'80'                                              07219200
.*******  DLLRENAME function call                                @L4A   07219300
.IEWB760 AIF   ('&XFUNC' NE 'DLLR').IEWB550                             07219400
.*                                                              2@L7D   07219600
         LA    14,=XL4'0011&HEXV'  ++ DLLRename function/version @L7C   07219800
.*                                                              5@L7D   07220000
         ST    14,0(,1)                                                 07220300
         IEWBRL2  &XWORKMOD    ++ WORKMOD - workmod token               07220400
         ST    14,12(,1)                                                07220500
         IEWBRL2  &XRENAMEL    ++ RENAME list                           07220600
         ST    14,16(,1)                                                07220700
         OI    16(1),X'80'                                              07220800
.*******  ENDDIALOG function call                                @L3A   07220900
.IEWB550 AIF   ('&XFUNC' NE 'ENDD').IEWB560                             07221000
.*                                                              2@L7D   07221200
         LA    14,=XL4'0005&HEXV'  ++ ENDDialog function/version @L7C   07221400
.*                                                              5@L7D   07221600
         ST    14,0(,1)                                                 07221900
         IEWBRL2  &XDIALOG     ++ DIALOG -                              07222400
         ST    14,12(,1)                                                07223200
         LA    14,=CL1'&XPROTECT'    ++ PROTECT -                       07224000
         ST    14,16(,1)                                                07224800
         OI    16(1),X'80'                                              07225600
.*******  GETDATA function call                                  @L3A   07226000
.IEWB560 AIF   ('&XFUNC' NE 'GETD').IEWB570                             07226400
.*                                                              2@L7D   07226800
         LA    14,=XL4'003D&HEXV'   ++ GETData function/version  @L7C   07227200
.*                                                              5@L7D   07227600
         ST    14,0(,1)                                                 07228000
         IEWBRL2  &XWORKMOD    ++ WORKMOD - workmod token               07228800
         ST    14,12(,1)                                                07229600
         IEWBRL2  &XCLASS      ++ CLASS -                               07230400
         ST    14,16(,1)                                                07231200
         IEWBRL2  &XSECTION    ++ SECTION - section name                07232000
         ST    14,20(,1)                                                07232800
         IEWBRL2  &XAREA       ++ AREA -                                07233600
         ST    14,24(,1)                                                07234400
         IEWBRL2  &XCURSOR     ++ CURSOR -                              07235200
         ST    14,28(,1)                                                07236000
         IEWBRL2  &XCOUNT      ++ COUNT -                               07236800
         ST    14,32(,1)                                                07237600
         OI    32(1),X'80'                                              07238400
.*******  GETESD function call                                   @L3A   07238800
.IEWB570 AIF   ('&XFUNC' NE 'GETE').IEWB580                             07239200
.*                                                              2@L7D   07239600
         LA    14,=XL4'003E&HEXV'   ++ GETEsd function/version   @L7C   07240000
.*                                                              5@L7D   07240400
         ST    14,0(,1)                                                 07240800
         IEWBRL2  &XWORKMOD    ++ WORKMOD - workmod token               07241600
         ST    14,12(,1)                                                07242400
         IEWBRL2  &XSECTION    ++ SECTION - section name                07243200
         ST    14,16(,1)                                                07244000
         IEWBRL2  &XRECTYPE    ++ RECTYPE -                             07244800
         ST    14,20(,1)                                                07245600
         IEWBRL2  &XOFFSET     ++ OFFSET -                              07246400
         ST    14,24(,1)                                                07247200
         IEWBRL2  &XSYMBOL     ++ SYMBOL -                              07248000
         ST    14,28(,1)                                                07248800
         IEWBRL2  &XAREA       ++ AREA -                                07249600
         ST    14,32(,1)                                                07250400
         IEWBRL2  &XCURSOR     ++ CURSOR -                              07251200
         ST    14,36(,1)                                                07252000
         IEWBRL2  &XCOUNT      ++ COUNT -                               07252800
         ST    14,40(,1)                                                07253600
         AIF   ('&XVERSION' GT '1').IEWB576                      @L7C   07253800
.*       AIF   ('&XVERSION' EQ '3').IEWB576                      @L7D   07254000
         OI    40(1),X'80'                                              07254400
         AGO   .IEWB580                                                 07254500
.IEWB576 IEWBRL2  &XCLASS      ++ CLASS -                               07254600
         ST    14,44(,1)                                         @L2A   07254700
         OI    44(1),X'80'                                       @L2A   07254800
.*******  GETNAMES function call                                 @L3A   07255000
.IEWB580 AIF   ('&XFUNC' NE 'GETN').IEWB770                             07255200
.*                                                              2@L7D   07255600
         LA    14,=XL4'003C&HEXV'   ++ GETNames function/version @L7C   07256000
.*                                                              5@L7D   07256400
         ST    14,0(,1)                                                 07256800
         IEWBRL2  &XWORKMOD    ++ WORKMOD - workmod token               07257600
         ST    14,12(,1)                                                07258400
         IEWBRL2  &XAREA       ++ AREA -                                07259200
         ST    14,16(,1)                                                07260000
         IEWBRL2  &XCURSOR     ++ CURSOR -                              07260800
         ST    14,20(,1)                                                07261600
         IEWBRL2  &XCOUNT      ++ COUNT -                               07262400
         ST    14,24(,1)                                                07263200
         IEWBRL2  &XTCOUNT     ++ TCOUNT -                              07264000
         ST    14,28(,1)                                                07264800
         LA    14,=CL1'&XNTYPE' ++ NTYPE - Section or Class        @P2A 07265200
         ST    14,32(,1)                                                07265600
         OI    32(1),X'80'                                              07266000
.*******  IMPORT  function call                                  @L4A   07266100
.IEWB770 AIF   ('&XFUNC' NE 'IMPORT').IEWB590                           07266200
.*                                                              3@L7D   07266500
         LA    14,=XL4'0026&HEXV'   ++ IMPORT function/version   @L7C   07266800
.*                                                              7@L7D   07267100
         ST    14,0(,1)                                                 07267400
         IEWBRL2  &XWORKMOD     ++ WORKMOD - workmod token       @L4A   07267500
         ST    14,12(,1)                                         @L4A   07267600
         LA    14,=CL1'&XITYPE' ++ ITYPE  - import type, C or D  @L4A   07267700
         ST    14,16(,1)                                         @L4A   07267800
         IEWBRL2  &XDLLNAME     ++ DLLNAME - ddname              @L4A   07267900
         ST    14,20(,1)                                         @L4A   07268000
         IEWBRL2  &XINAME       ++ INAME   - import symbol name  @L4A   07268100
         ST    14,24(,1)                                         @L4A   07268200
         AIF   ('&XVERSION' GT '3').IEWB779                       @L7C  07268300
         OI    24(1),X'80'                                              07268400
         AGO   .IEWB590                                                 07268500
.IEWB779 IEWBRL2  &XOFFSET           ++ OFFSET-                         07268600
         ST    14,28(,1)                                                07268700
         OI    28(1),X'80'                                              07268800
.*******  INCLUDE function call                                   @L3A  07268900
.IEWB590 AIF   ('&XFUNC' NE 'INCLUDE').IEWB600                          07269000
.*                                                               2@L7D  07269200
         LA    14,=XL4'0028&HEXV'   ++ INCLUDE function/version   @L7C  07269400
.*                                                               5@L7D  07269600
         ST    14,0(,1)                                                 07269900
         IEWBRL2  &XWORKMOD    ++ WORKMOD - workmod token               07270000
         ST    14,12(,1)                                                07270100
         LA    14,=CL1'&XINTYPE'     ++ INTYPE -                        07270400
         ST    14,16(,1)                                                07271200
         AIF   ('&XPATHNAME' NE '').IEWB595                             07271600
         IEWBRL2  &XDDNAME     ++ DDNAME   -                            07272000
         AGO   .IEWB596                                                 07272400
.IEWB595 IEWBRL2  &XPATHNAME   ++ PATHNAME -                            07272800
.IEWB596 ST    14,20(,1)                                                07273200
         IEWBRL2  &XMEMBER     ++ MEMBER -                              07273600
         ST    14,24(,1)                                                07274400
         IEWBRL2  &XDCBPTR     ++ DCBPTR -                              07275200
         ST    14,28(,1)                                                07276000
         IEWBRL2  &XDEPTR      ++ DEPTR -                               07276800
         ST    14,32(,1)                                                07277600
         IEWBRL2  &XEPTOKEN    ++ EPTOKEN                               07278400
         ST    14,36(,1)                                                07279200
         LA    14,0            ++ Reserved                              07280000
         ST    14,40(,1)                                                07280800
         LA    14,=CL1'&XATTRIB'     ++ ATTRIB -                        07281600
         ST    14,44(,1)                                                07282400
         LA    14,=CL1'&XALIASES'    ++ ALIASES                         07283200
         ST    14,48(,1)                                                07284000
         OI    48(1),X'80'                                              07284800
.*******  INSERTS function call                                  @L3A   07285200
.IEWB600 AIF   ('&XFUNC' NE 'INSERTS').IEWB610                          07285600
.*                                                               2@L7D  07286000
         LA    14,=XL4'0024&HEXV'  ++ INSERTSect function/version @L7C  07286400
.*                                                               5@L7D  07286800
         ST    14,0(,1)                                                 07287200
         IEWBRL2  &XWORKMOD    ++ WORKMOD - workmod token               07288000
         ST    14,12(,1)                                                07288800
         IEWBRL2  &XSECTION    ++ SECTION - section name                07289600
         ST    14,16(,1)                                                07290400
         OI    16(1),X'80'                                              07291200
.*******  LOADW function call                                     @L3A  07291600
.IEWB610 AIF   ('&XFUNC' NE 'LOADW').IEWB620                            07292000
.*                                                               2@L7D  07292400
         LA    14,=XL4'0051&HEXV'   ++ LOADWmod function/version  @L7C  07292800
.*                                                               5@L7D  07293200
         ST    14,0(,1)                                                 07293600
         IEWBRL2  &XWORKMOD    ++ WORKMOD - workmod token               07294400
         ST    14,12(,1)                                                07295200
         LA    14,=CL1'&XIDENTIFY'   ++ IDENTIFY -                      07296000
         ST    14,16(,1)                                                07296800
         IEWBRL2  &XEPLOC      ++ EPLOC -                               07297600
         ST    14,20(,1)                                                07298400
         IEWBRL2  &XEXTLST     ++ EXTLST -                              07299200
         ST    14,24(,1)                                                07300000
         IEWBRL2  &XLNAME      ++ LNAME -                               07300800
         ST    14,28(,1)                                                07301600
         OI    28(1),X'80'                                              07302400
.*******  ORDERS function call                                    @L3A  07302800
.IEWB620 AIF   ('&XFUNC' NE 'ORDERS').IEWB630                           07303200
.*                                                               2@L7D  07303600
         LA    14,=XL4'0025&HEXV'   ++ ORDERSect function/version @L7C  07304000
.*                                                               5@L7D  07304400
         ST    14,0(,1)                                                 07304800
         IEWBRL2  &XWORKMOD    ++ WORKMOD - workmod token               07305600
         ST    14,12(,1)                                                07306400
         IEWBRL2  &XSECTION    ++ SECTION - section name                07307200
         ST    14,16(,1)                                                07308000
         OI    16(1),X'80'                                              07308800
.*******  PUTDATA function call                                   @L3A  07309200
.IEWB630 AIF   ('&XFUNC' NE 'PUTD').IEWB640                             07309600
.*                                                               2@L7D  07310000
         LA    14,=XL4'0041&HEXV'   ++ PUTData function/version   @L7C  07310400
.*                                                               5@L7D  07310800
         ST    14,0(,1)                                                 07311200
         IEWBRL2  &XWORKMOD    ++ WORKMOD - workmod token               07312000
         ST    14,12(,1)                                                07312800
         IEWBRL2  &XCLASS      ++ CLASS -                               07313600
         ST    14,16(,1)                                                07314400
         IEWBRL2  &XSECTION    ++ SECTION - section name                07315200
         ST    14,20(,1)                                                07316000
         IEWBRL2  &XAREA       ++ AREA -                                07316800
         ST    14,24(,1)                                                07317600
         IEWBRL2  &XCURSOR     ++ CURSOR -                              07318400
         ST    14,28(,1)                                                07319200
         IEWBRL2  &XCOUNT      ++ COUNT -                               07320000
         ST    14,32(,1)                                                07320800
         LA    14,=CL1'&XNEWSECT'    ++ NEWSECT -                       07321600
         ST    14,36(,1)                                                07322400
         LA    14,=CL1'&XENDDATA'    ++ ENDDATA -                       07323200
         ST    14,40(,1)                                                07324000
         OI    40(1),X'80'                                              07324800
.*******  RENAME function call                                 ALL@L4A  07324900
.IEWB640 AIF   ('&XFUNC' NE 'RENAME').IEWB645                           07325000
.*                                                               2@L7D  07325200
         LA    14,=XL4'0016&HEXV'   ++ RENAME function/version    @L7C  07325400
.*                                                               5@L7D  07325600
         ST    14,0(,1)                                                 07325900
         IEWBRL2  &XWORKMOD    ++ WORKMOD - workmod token               07326000
         ST    14,12(,1)                                                07326100
         IEWBRL2  &XOLDNAME    ++ OLDNAME - old name of symbol          07326200
         ST    14,16(,1)                                                07326300
         IEWBRL2  &XNEWNAME    ++ NEWNAME - new name of symbol          07326400
         ST    14,20(,1)                                                07326500
         OI    20(1),X'80'                                              07326600
.*******  RESETW function call                                    @L3A  07326700
.IEWB645 AIF   ('&XFUNC' NE 'RESETW').IEWB650                           07326800
.*                                                               2@L7D  07327000
         LA    14,=XL4'0013&HEXV'   ++ RESETWmod function/version @L7C  07327200
.*                                                               5@L7D  07327400
         ST    14,0(,1)                                                 07327700
         IEWBRL2  &XWORKMOD    ++ WORKMOD - workmod token               07328000
         ST    14,12(,1)                                                07328800
         LA    14,=CL1'&XINTENT'     ++ INTENT -                        07329600
         ST    14,16(,1)                                                07330400
         LA    14,=CL1'&XPROTECT'    ++ PROTECT -                       07331200
         ST    14,20(,1)                                                07332000
         OI    20(1),X'80'                                              07332800
.*******  SAVEW function call                                     @L3A  07333200
.IEWB650 AIF   ('&XFUNC' NE 'SAVEW').IEWB660                            07333600
.*                                                               2@L7D  07334000
         LA    14,=XL4'0050&HEXV'   ++ SAVEWmod function/version  @L7C  07334400
.*                                                               5@L7D  07334800
         ST    14,0(,1)                                                 07335200
         IEWBRL2  &XWORKMOD    ++ WORKMOD - workmod token               07336000
         ST    14,12(,1)                                                07336800
         IEWBRL2  &XMODLIB     ++ MODLIB -                              07337600
         ST    14,16(,1)                                                07338400
         IEWBRL2  &XSNAME      ++ SNAME -                               07339200
         ST    14,20(,1)                                                07340000
         LA    14,=CL1'&XREPLACE'    ++ REPLACE -                       07340800
         ST    14,24(,1)                                                07341600
         OI    24(1),X'80'                                              07342400
.*******  SETL function call                                      @L3A  07342800
.IEWB660 AIF   ('&XFUNC' NE 'SETL').IEWB670                             07343200
.*                                                               2@L7D  07343600
         LA    14,=XL4'0015&HEXV'   ++ SETLib function/version    @L7C  07344000
.*                                                               5@L7D  07344400
         ST    14,0(,1)                                                 07344800
         IEWBRL2  &XWORKMOD    ++ WORKMOD - workmod token               07345600
         ST    14,12(,1)                                                07346400
         IEWBRL2  &XSYMBOL     ++ SYMBOL -                              07347200
         ST    14,16(,1)                                                07348000
         LA    14,=CL1'&XLIBOPT'     ++ LIBOPT -                        07348800
         ST    14,20(,1)                                                07349600
         AIF   ('&XPATHNAME' NE '').IEWB665                             07350000
         IEWBRL2  &XCALLIB     ++ CALLIB   - SETLIB ddname              07350400
         AGO   .IEWB666                                                 07350800
.IEWB665 IEWBRL2  &XPATHNAME   ++ PATHNAME - SETLIB pathname            07351200
.IEWB666 ST    14,24(,1)                                                07351600
         OI    24(1),X'80'                                              07352000
.*******  SETO function call                                      @L3A  07352400
.IEWB670 AIF   ('&XFUNC' NE 'SETO').IEWB680                             07352800
.*                                                               2@L7D  07353300
         LA    14,=XL4'0014&HEXV'   ++ SETOption function/version @L7C  07353800
.*                                                               5@L7D  07354300
         ST    14,0(,1)                                           @L2C  07354900
         IEWBRL2  &XDIALOG     ++ DIALOG -                              07355200
         ST    14,12(,1)                                                07356000
         IEWBRL2  &XWORKMOD    ++ WORKMOD - workmod token               07356800
         ST    14,16(,1)                                                07357600
         IEWBRL2  &XOPTION     ++ OPTION -                              07358400
         ST    14,20(,1)                                                07359200
         IEWBRL2  &XOPTVAL     ++ OPTVAL -                              07360000
         ST    14,24(,1)                                                07360800
         AIF   ('&XVERSION' GT '1').IEWB676                        @L7C 07360900
.*       AIF   ('&XVERSION' EQ '3').IEWB676                        @L7D 07361000
         OI    24(1),X'80'                                         @L2C 07361100
         AGO   .IEWB680                                                 07361200
.IEWB676 IEWBRL2  &XPARMS      ++ PARM -                           @L2C 07361300
         ST    14,28(,1)                                                07361600
         OI    28(1),X'80'                                         @L2C 07362000
.*******  STARTD function call                                   @L3A   07362200
.IEWB680 AIF   ('&XFUNC' NE 'STARTD').IEWB690                           07362400
.*                                                               2@L7D  07362900
         LA    14,=XL4'0001&HEXV'  ++ STARTDialog function/version@L7C  07363400
.*                                                               5@L7D  07363900
         ST    14,0(,1)                                          @L2C   07364500
         IEWBRL2  &XDIALOG     ++ DIALOG -                              07364800
         ST    14,12(,1)                                                07365600
         IEWBRL2  &XFILES      ++ FILES -                               07366400
         ST    14,16(,1)                                                07367200
         IEWBRL2  &XEXITS      ++ EXITS -                               07368000
         ST    14,20(,1)                                                07368800
         IEWBRL2  &XOPTIONS    ++ OPTIONS -                             07369600
         ST    14,24(,1)                                                07370400
         AIF   ('&XVERSION' GT '1').IEWB686                        @L7C 07370500
.*       AIF   ('&XVERSION' EQ '3').IEWB686                        @L7D 07370600
         OI    24(1),X'80'                                         @L2C 07370700
         AGO   .IEWB690                                                 07370800
.IEWB686 IEWBRL2  &XPARMS      ++ PARM -                           @L2C 07370900
         ST    14,28(,1)                                                07371200
         OI    28(1),X'80'                                         @L2C 07371600
.*******  STARTS function call                                   @L3A   07371800
.IEWB690 AIF   ('&XFUNC' NE 'STARTS').IEWB699                           07372000
.*                                                               2@L7D  07372400
         LA    14,=XL4'0023&HEXV'   ++ STARTSeg function/version  @L7C  07372800
.*                                                               5@L7D  07373200
         ST    14,0(,1)                                                 07373600
         IEWBRL2  &XWORKMOD    ++ WORKMOD - workmod token               07374400
         ST    14,12(,1)                                                07375200
         IEWBRL2  &XORIGIN     ++ ORIGIN -                              07376000
         ST    14,16(,1)                                                07376800
         LA    14,=CL1'&XREGION'     ++ REGION -                        07377600
         ST    14,20(,1)                                                07378400
         OI    20(1),X'80'                                              07379200
.IEWB699 ANOP  ,                                                        07380000
.********************************************************************** 07380800
.* Call the Binder                                                    * 07381600
.********************************************************************** 07382400
         AIF   ('&XFUNC' NE 'STARTD').IEWB700                           07383200
         LOAD  EP=IEWBIND                                               07384000
         IEWBRS2  0,&DIALOG    ++Keep Binder entry address              07384800
         AIF   ('&XMFCTRL'(1,1) NE '(').IEWB710                         07385600
&ZCGPR   SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)                               07386400
         LR    1,&ZCGPR        ++ Reinstate parameter list address      07387200
         AGO   .IEWB700                                                 07388000
.IEWB710 LA    1,&XMFCTRL      ++ Reinstate parameter list address      07388800
.IEWB700 ANOP  ,                                                        07389600
         AIF   ('&XFUNC' NE 'CREATEW').IEWB715                          07389700
.* Copy new epa into returned token                             @P3A    07389800
         IEWBRG3  &DIALOG,15      ++ Get entry point address            07389900
         IEWBRS2  15,&WORKMOD     ++ Store into Workmod token           07390000
.IEWB715 ANOP                                                           07390200
&IEWBEPA SETC  '&XDIALOG'                                               07390400
         AIF   ('&XDIALOG' NE '=2FL4''0''').IEWB717                     07391200
&IEWBEPA SETC  '&XWORKMOD'                                              07392000
.IEWB717 ANOP                                                           07392800
         IEWBRG3  &IEWBEPA,15                                           07393600
         LTR   15,15                                                    07394400
         BNZ   IEWB&SYSNDX.A                                            07395200
         LA    15,12                                                    07396000
         AIF   (K'&RETCODE EQ 0).IEWB721                         @L7C   07396200
         IEWBRS2  15,&XRETCODE     ++ Store return code                 07396400
.IEWB721 ANOP  ,                                                        07396600
         L     0,=XL4'83000FFF' ++Reason code returned                  07396800
         AIF   (K'&RSNCODE EQ 0).IEWB722                         @L7C   07397000
         IEWBRS2  0,&XRSNCODE     ++ Store reason code                  07397200
.IEWB722 ANOP  ,                                                        07397400
         B     IEWB&SYSNDX.B                                            07397600
IEWB&SYSNDX.A DS  0H                                                    07397800
         O     15,=X'80000000'   ++ Binder always amode 31       @P3A   07398000
         BASSM 14,15             ++ Call the Binder              @P3A   07398200
         AH    14,6(,14)         ++ Increment return address     @P4A   07398400
         BSM   0,14              ++ Set mode correctly                  07398600
         DC    H'8'                                              @P4A   07398900
         AIF   ('&XFUNC' NE 'ENDD').IEWB740                             07399200
         IEWBRG3  &IEWBEPA,1                                            07399400
         LTR   1,1                                                      07399600
         BZ    IEWB&SYSNDX.B                                            07399800
         LR    1,0     ++ Save Binder reason code                       07400000
         LR    14,15   ++ Save Binder return code                       07400800
         DELETE EP=IEWBIND                                              07401600
         LR    0,1     ++ Restore Binder reason code                    07402400
         LR    15,14   ++ Restore Binder return code                    07403200
.IEWB740 ANOP  ,                                                        07404000
IEWB&SYSNDX.B DS  0H                                                    07404800
.********************************************************************** 07405600
.* End of BAL macro code to be added to IEWBIND2.                     * 07406400
.********************************************************************** 07407200
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  07408000
.ZLINKX               ANOP  ,                                           07408800
.*******************************************************************    07409600
.***AP.X01  FORMAT GENERATED CODE                                       07410400
.ZL21                 AIF   (&ZOPX GT &ZOPN).ZLX1  B IF DONE            07411200
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              07412000
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              07412800
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              07413600
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              07414400
                      AIF   (K'&ZLD LE 0).ZL51                          07415200
&ZLC                  SETA  35             COMMENT COLUMN               07416000
                      AIF   ('&ZLD'(1,1) NE '*').ZL31                   07416800
&ZLC                  SETA  33             COMMENT COLUMN               07417600
.ZL31                 AIF   (K'&ZLV GE &ZLC-16-1).ZL41                  07418400
&ZLV                  SETC  '&ZLV'.' '                                  07419200
                      AGO   .ZL31                                       07420000
.*                                                                      07420800
.ZL41                 ANOP  ,                                           07421600
&ZLV                  SETC  '&ZLV'.' '                                  07422400
.ZL51                 ANOP  ,                                           07423200
&ZLV                  SETC  '&ZLV'.'&ZLD'                               07424000
.*                                                                      07424800
&ZLL     &ZLOP &ZLV                                                     07425600
.*                                                                      07426400
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               07427200
                      AGO   .ZL21          CONTINUE LOOPING             07428000
.*                                                                      07428800
.ZLX1                 ANOP  ,                                           07429600
.*******************************************************************    07430400
.***AP.X02  END OF IEWBIND2 MACRO                                       07431200
&ZIEWBIND2            SETC  'YES'          SET IEWBIND2 USED            07432000
         POP   PRINT                                                    07432800
*                                            IEWBIND2-0                 07433600
         SPACE 1                                                        07434400
.ZLX2                 ANOP  ,                                           07435200
         MEND                                                           07436000
**********************************************************************/ 07436800
*%IEWBIND2: MACRO KEYS(FUNC,WORKMOD,ANAME,ENAME,AMODE,ATYPE,SECTION,    07437800
*                 OLDNAME,NEWNAME,COUNT,MODE,CLASS,CALLIB,PATHNAME,     07438800
*                 DIALOG,INTENT,PROTECT,RENAMEL,AREA,CURSOR,RECTYPE,    07439800
*                 OFFSET,SYMBOL,TCOUNT,NTYPE,ITYPE,DLLNAME,INAME,       07440500
*                 INTYPE,DDNAME,DEPTR,MEMBER,DCBPTR,EPTOKEN,ATTRIB,     07441200
*                 ALIASES,EPLOC,IDENTIFY,EXTLST,LNAME,NEWSECT,ENDDATA,  07441900
*                 MODLIB,SNAME,REPLACE,LIBOPT,OPTION,OPTVAL,PARMS,      07442600
*                 FILES,EXITS,OPTIONS,ORIGIN,REGION,RETCODE,RSNCODE,    07443300
*                 VERSION,PLISTVER,MF);                                 07444000
*  ANS('?'||MACLABEL||' '||'IEWBINDP '||MACLIST||                       07444800
*         ' '||MACKEYS||';') COL(MACLMAR);                              07445600
*%END IEWBIND2;                                                         07446400
