*        %GOTO VLOKPRO ;          /* Bilingual header                   00050000
         MACRO                                                          00100000
         BPXYVLOK &DSECT=YES,&LIST=YES                                  00150000
         GBLB  &VLOK411                                                 00200000
         AIF   (&VLOK411 EQ 1).E411                                     00250000
&VLOK411 SETB  1                                                        00300000
         AIF   ('&LIST' EQ 'YES').A411                                  00350000
         PUSH  PRINT  BPXYVLOK: Vnode Byte Range Locking Structure      00400000
         PRINT OFF                                                      00450000
         AGO   .A411                                                    00500000
*                                  */                                   00550000
*%VLOKPRO : ;                                                           00600000
*/****START OF SPECIFICATIONS****************************************** 00650000
*                                                                       00700000
*    $MAC (BPXYVLOK) COMP(SCPX1) PROD(BPX):                             00750000
*                                                                       00800000
*01* MACRO NAME: BPXYVLOK                                               00850000
*                                                                       00900000
*01* DSECT NAME: VLOK                                                   00950000
*                                                                       01000000
*01* DESCRIPTIVE NAME: Vnode Services Byte Range Locking Structure      01050000
*                                                                       01100000
*02*   ACRONYM: VLOK                                                    01150000
**/                                                                     01200000
*/*01* PROPRIETARY STATEMENT=                                        */ 01250000
*/***PROPRIETARY_STATEMENT********************************************/ 01300000
*/*                                                                  */ 01350000
*/*                                                                  */ 01400000
*/* LICENSED MATERIALS - PROPERTY OF IBM                             */ 01450000
*/* THIS MACRO IS "RESTRICTED MATERIALS OF IBM"                      */ 01500000
*/* 5647-A01 (C) COPYRIGHT IBM CORP. 1993,2000                       */ 01550000
*/*                                                                  */ 01650000
*/* STATUS= JBB6609                                                  */ 01700000
*/*                                                                  */ 01750000
*/***END_OF_PROPRIETARY_STATEMENT*************************************/ 01800000
*/*                                                                     01850000
*01* EXTERNAL CLASSIFICATION:  GUPI                                     01900000
*01* END OF EXTERNAL CLASSIFICATION:                                    01950000
*                                                                       02000000
*01* FUNCTION:                                                          02050000
*                                                                       02100000
*      To pass locking information on the V_lockctl interface.          02150000
*                                                                       02200000
*01* METHOD OF ACCESS:                                                  02250000
*                                                                       02300000
*02*   PL/X:                                                            02350000
*                                                                       02400000
*        %INCLUDE SYSLIB(BPXYVLOK)                                      02450000
*        By default, the VLOK is based on VLOKPtr. If                   02500000
*        other basing is desired, use %VLOKBASE='BASED(XXXXXX)'.        02550000
*        If %VLOKBASE='BASED(VLOKPtr)' is coded, a Declare for          02600000
*        VLOKPtr is also generated.                                     02650000
*                                                                       02700000
*        Typical Syscall usage: %VLOKBASE = 'Based(Addr(InputVLOK))'    02750000
*                                                                       02800000
*02*   ASM:                                                             02850000
*        With DSECT=NO, storage is allocated in line                    02900000
*        and addressability is provided thru that DSECT or CSECT.       02950000
*        With DSECT=YES, a DSECT is produced and "USING VLOK,reg"       03000000
*        is required for addressability.  Here "reg" contains the       03050000
*        address of VLOK#LENGTH bytes of storage.                       03100000
*        The default is DSECT=YES.                                      03150000
*                                                                       03200000
*01* SIZE: VLOK#LENGTH                                                  03250000
*                                                                       03300000
*01* POINTED TO BY: VLOKPtr                                             03350000
*                                                                       03400000
*01* CREATED BY: Storage obtained by caller of system call              03450000
*                                                                       03500000
*01* DELETED BY: Caller of system call                                  03550000
*                                                                       03600000
*01* STORAGE ATTRIBUTES:                                                03650000
*02*   SUBPOOL/DATASPACE:  N/A                                          03700000
*02*   KEY:                N/A                                          03750000
*02*   RESIDENCY:          N/A                                          03800000
*                                                                       03850000
*01* FREQUENCY: 1 per v_lockctl syscall                                 03900000
*                                                                       03950000
*01* SERIALIZATION: N/A                                                 04000000
*                                                                       04050000
*01* DEPENDENCIES: None                                                 04100000
*                                                                       04150000
*01* NOTES:                                                             04200000
*           BPXYVFSI is a C program interface for the BPX1V (v_)        04250000
*           services.  The VLOCK structure in BPXYVFSI matches          04300000
*           the BPXYVLOK structure.                                     04350000
*                                                                       04400000
*01* COMPONENT:  OpenMVS (SCPX1)                                        04450000
*                                                                       04500000
*01* DISTRIBUTION LIBRARY:  AMACLIB                                     04550000
*                                                                       04600000
*01* EYE-CATCHER: VLOK                                                  04650000
*02*   OFFSET:  0                                                       04700000
*02*   LENGTH:  4                                                       04750000
*                                                                       04800000
*01* CHANGE-ACTIVITY:                                                   04850000
*                                                                       04900000
* $D0=DOAA009, HOM1120, 931209, PDFZ: NFS Support       - DCR A009.05   04950000
* $01=       , JBB6609, 990131, PDJS: vn_lockctl support - dword bdy    04975000
* $02=OW41706  JBB6609, 991101, PDMX: support brl#close across sysplex  04987500
* $03=OW43776, HBB7703, 000512, PD2R: D omvs,pid=,brl sysplex support   04993500
*                                                                       05000000
****END OF SPECIFICATIONS*********************************************/ 05050000
*        %GOTO VLOKPLS  ;         /* Bilingual header                   05100000
.A411    ANOP  ,                                                        05150000
** BPXYVLOK: VLOK - Vnode Service Byte Range Locking structure          05200000
         AIF   ('&DSECT' EQ 'NO').B411                                  05250000
VLOK                 DSECT ,                                            05300000
         AGO   .C411                                                    05350000
.B411    ANOP  ,                                                        05400000
                     DS    0D                 Clear storage             05450000
VLOK                 DC    XL(VLOK#LENGTH)'00'                          05500000
                     ORG   VLOK                                         05550000
.C411    ANOP  ,                                                        05600000
VLOKBEGIN            DS    0D                                           05650000
*                                                                       05700000
VLOKID               DC    C'VLOK'            Eye catcher               05750000
VLOKLEN              DC    AL4(VLOK#LENGTH)   Length of the structure   05800000
VLOKLOCKER           DS    0F                 Locker                    05850000
VLOKSERVERPID        DS    F                    Server's Process ID     05900000
VLOKCLIENTPID        DS    F                    Server's Client's PID   05950000
VLOKLOCKERTOK        DS    CL8                Locker Token              06000000
VLOKCLIENTTID        DS    CL8                Client's Thread ID        06050000
VLOKOBJECT           DS    0F                 Object - a locked file    06100000
VLOKOBJCLASS         DS    F                    Object Class            06150000
VLOKOBJID            DS    0F                   Object ID               06200000
VLOKOBJDEV           DS    CL4                    Object Device ID      06250000
VLOKOBJFID           DS    CL8                    Object File ID        06300000
VLOKOBJTOK           DS    CL8                Object token              06350000
VLOKDOS              DS    0F                 DOS file sharing fields   06400000
VLOKDOSMODE          DS    CL1                  DOS Client Mode         06450000
VLOKDOSACCESS        DS    CL1                  DOS Client Access       06500000
VLOKDOSRSVD          DS    CL1                  Reserved                06533300
VLOKSUBFUNCTION      DS    CL1                Internal SubFunction      06566600
VLOKRSVD             DS    CL12               Reserved                  06600000
VLOKBRLK             DS    CL24               Lock Information mapped   06650000
*                                             by BPXYBRLK               06700000
*                                                                       06750000
*   Constants                                                           06800000
*                                                                       06850000
VLOK#LENGTH          EQU   *-VLOKBEGIN        Length of VLOK            06900000
VLOK#HFS             EQU   0                  HFS Object Class          06950000
VLOK#MVS             EQU   1                  MVS Object Class          07000000
VLOK#LFSESA          EQU   2                  LFS/ESA Object Class      07050000
*                                                                       07100000
*   Constants for V_lockctl commands                                    07150000
*                                                                       07200000
VLOK#REGLOCKER       EQU   1               Register Locker              07250000
VLOK#UNREGLOCKER     EQU   2               Unregister Locker            07300000
VLOK#LOCK            EQU   3               Lock object's byte range     07350000
VLOK#LOCKWAIT        EQU   4               Lock object's byte range    +07400000
                                           - wait if blocked            07450000
VLOK#UNLOCK          EQU   5               UnLock object's byte range   07500000
VLOK#QUERY           EQU   6               Query byte range for locks   07550000
VLOK#PURGE           EQU   7               Purge all locks for a locker 07600000
** BPXYVLOK End                                                         07650000
         SPACE 3                                                        07700000
         AIF   ('&LIST' EQ 'YES').E411                        6@D1A     07750000
         POP   PRINT                                                    07800000
.E411    ANOP  ,                                                        07850000
         MEND                                                           07900000
  Terminating PL/X comment  ******************************************/ 07950000
                                                                        08000000
 %VLOKPLS : ;                                                           08050000
 %IF VLOKBASE = '' %THEN                                                08100000
   %DO;                                                                 08150000
     %VLOKBASE = 'BASED(VlokPtr)';                                      08200000
   %END;                                                                08250000
 %IF Translate(VLOKBASE) = 'BASED(VLOKPTR)' %THEN                       08300000
   %DO;                                                                 08350000
     DCL VlokPtr Ptr(31);         /* Pointer to the VLOK             */ 08400000
   %END;                                                                08450000
                                                                        08500000
                                                                        08550000
 DCL                                                                    08600000
  1 Vlok VLOKBASE Bdy(Dword),     /* V_lockctl Byte Range Lock Info  */ 08650000
                                                                        08700000
    3 VlokId        Char(4),      /* Eye catcher - 'VLOK '           */ 08750000
    3 VlokLen       Fixed(31),    /* Length of structure             */ 08800000
                                                                        08850000
    3 VlokLocker Bdy(Dword),      /* Locker                      @01C*/ 08900000
      5 VlokServerPID Fixed(32),  /*   Server's Process ID           */ 08950000
      5 VlokClientPID Fixed(32),  /*   Server's Client's PID         */ 09000000
    3 VlokLockerTok Char(8)       /* Locker token                @01C*/ 09035700
          Bdy(Dword),                                         /* @01A*/ 09071400
      5 VlokLockerTok1 Ptr(31),   /* For CDS                     @01A*/ 09107100
      5 VlokLockerTok2 Ptr(31),   /* For CDS                     @01A*/ 09142800
    3 VlokClientTID Char(8)       /* Client's Thread ID          @01C*/ 09178500
          Bdy(Dword),                                         /* @01A*/ 09214200
    3 VlokObject,                 /* Object - a locked file          */ 09250000
      5 VlokObjClass  Fixed(32),  /*   Object Class                  */ 09300000
      5 VlokObjID Char(12),       /* Object ID -unique within Class  */ 09350000
        7 VlokObjDev    Char(4),  /*     Device ID for HFS file      */ 09400000
        7 VlokObjFid    Char(8),  /*     File ID for HFS file        */ 09450000
    3 VlokObjTok    Char(8),      /* Object token                    */ 09500000
                                                                        09550000
    3 VlokDOS,                    /* DOS file sharing fields         */ 09600000
      5 VlokDOSMode   Char(1),    /*   DOS Client Mode               */ 09650000
      5 VlokDOSAccess Char(1),    /*   DOS Client Access             */ 09700000
      5 *             Char(1),    /*   Reserved                  @02C*/ 09725000
    3 VlokSubFunction Fixed(8),   /* Optional internal sub function     09750000
                                     codes - see below           @02A*/ 09775000
                                                                        09800000
    3 *             Char(12),     /* Reserved for expansion          */ 09850000
                                                                        09900000
    3 VlokBrlk Char(Length(Brlk));/* Lock Information mapped by         09950000
                                     BPXYBRLK                        */ 10000000
                                                                        10050000
 DCL                                                                    10100000
  Vlok#ID Char(4)  Constant('VLOK'),        /* Eye catcher           */ 10150000
  Vlok#Len Fixed(31) Constant(Length(Vlok));/* Length of Vlok        */ 10200000
                                                                        10208300
 /* Constants for VlokSubFunction                                    */ 10216600
 DCL                                                                    10224900
  Vlok#Close Fixed(8) Constant(5), /* V_lockctl = Vlok#Unlock & this    10237190
                                      is for a close             @02A*/ 10241500
  Vlok#Getown Fixed(8) Constant(6);  /* frbrl get owner query    @03A*/ 10245500
                                                                        10250000
 /* Constants for Object Class (VlokObjClass)                        */ 10300000
 DCL                                                                    10350000
  Vlok#HFS Fixed(32) Constant(0), /* OpenEdition MVS Hierarchical FS */ 10400000
  Vlok#MVS Fixed(32) Constant(1), /* MVS dataset                     */ 10450000
  Vlok#LFSESA Fixed(32) Constant(2); /* LAN File Server/ESA files    */ 10500000
                                                                        10550000
 /* Constants for V_lockctl commands                                 */ 10600000
 DCL                                                                    10650000
  Vlok#RegLocker   Fixed(32) Constant(1), /* Register Locker         */ 10700000
  Vlok#UnregLocker Fixed(32) Constant(2), /* Unregister Locker       */ 10750000
  Vlok#Lock        Fixed(32) Constant(3), /* Lock object's byte range*/ 10800000
  Vlok#LockWait    Fixed(32) Constant(4), /* Lock object's byte range   10850000
                                             - wait if blocked       */ 10900000
  Vlok#Unlock      Fixed(32) Constant(5), /* UnLock object's byte range 10950000
                                                                     */ 11000000
  Vlok#Query       Fixed(32) Constant(6), /* Query byte range for locks 11050000
                                                                     */ 11100000
  Vlok#Purge       Fixed(32) Constant(7); /* Purge all locks for a      11150000
                                             locker                  */ 11200000
