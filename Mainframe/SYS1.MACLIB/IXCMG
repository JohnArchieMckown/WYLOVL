*/**** START OF SPECIFICATIONS **************************************** 00000100
*                                                                     * 00000200
*                                                                     * 00000300
*01* MACRO NAME:  IXCMG                                 -02/26/01-<1> * 00000400
*                                                                     * 00000500
*                                                                     * 00000600
*01* DESCRIPTIVE NAME:  XCF Accounting and Measurement                * 00000700
*                                                                     * 00000800
*01* PROPRIETARY STATEMENT:                                           * 00000900
*                                                                     * 00001000
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 00001100
*     5645-001 (C) COPYRIGHT IBM CORP. 1992, 1997                     * 00001200
*                                                                     * 00001300
* STATUS= HBB6603                                                     * 00001400
*                                                                     * 00001500
*                                                                     * 00001600
*                                                                     * 00001700
*01* FUNCTION:                                                        * 00001800
*                                                                     * 00001900
*                                                                     * 00002000
*      The XCF Measurement Gatherer service is used to collect        * 00002100
*      information about the XCF resources in use by the system on    * 00002200
*      which the service is invoked.  Detailed information about XCF  * 00002300
*      signalling paths and/or messages pending delivery can be       * 00002400
*      collected, as well as summary information about message        * 00002500
*      traffic between systems in the syplex, and/or message traffic  * 00002600
*      between XCF group members.  Summary information about the      * 00002700
*      signalling resources and the state of message delivery can     * 00002800
*      also be obtained for each XCF group member that is active on   * 00002900
*      the system on which the service is invoked.  Detail            * 00003000
*      information about the signalling resources and the state of    * 00003100
*      message delivery can also be obtained for an individual XCF    * 00003200
*      group member that is active on the system on which the service * 00003300
*      is invoked.                                                    * 00003400
*                                                                     * 00003500
*      The measurement gathering data move routine is given control   * 00003600
*      from the IXCMG macro.  The measurement gathering macro will    * 00003700
*      complete the parameter list with caller provided data and      * 00003800
*      generate a program call to the measurement gathering service.  * 00003900
*      The measurement gathering macro is provided in list, execute,  * 00004000
*      and standard form.  The list form accepts no variable          * 00004100
*      parameters and is used only to reserve space for the parameter * 00004200
*      list.  The standard form is provided for use with routines     * 00004300
*      which do not require reentrant code.  The execute form is      * 00004400
*      provided for use with the list format for reentrant routines.  * 00004500
*      The measurement gathering macro is provided in PL/AS and       * 00004600
*      assembler formats.                                             * 00004700
*                                                                     * 00004800
*      The parameter list must be in the caller's primary address     * 00004900
*      space or be addressable by the dispatchable unit access list.  * 00005000
*                                                                     * 00005100
*                                                                     * 00005200
*                                                                     * 00005300
*      INPUT REGISTERS:                                               * 00005400
*                                                                     * 00005500
*                                                                     * 00005600
*                          GR0-GR1     reserved                       * 00005700
*                                                                     * 00005800
*                          GR2-GR13    undefined                      * 00005900
*                                                                     * 00006000
*                          GR14-GR15   reserved                       * 00006100
*                                                                     * 00006200
*                          AR0-AR1     reserved                       * 00006300
*                                                                     * 00006400
*                          AR2-AR13    undefined                      * 00006500
*                                                                     * 00006600
*                          AR14-AR15   reserved                       * 00006700
*                                                                     * 00006800
*                                                                     * 00006900
*                                                                     * 00007000
*      OUTPUT ENVIRONMENT: Same as on entry                           * 00007100
*                                                                     * 00007200
*      OUTPUT REGISTERS:                                              * 00007300
*                                                                     * 00007400
*                                                                     * 00007500
*                          GR0         reason code based on GR15 or 0 * 00007600
*                                                                     * 00007700
*                          GR1         unpredictable                  * 00007800
*                                                                     * 00007900
*                          GR2-GR13    unchanged                      * 00008000
*                                                                     * 00008100
*                          GR14        unpredictable                  * 00008200
*                                                                     * 00008300
*                          GR15        return code                    * 00008400
*                                                                     * 00008500
*                          AR0-AR1     unpredictable                  * 00008600
*                                                                     * 00008700
*                          AR2-AR13    unchanged                      * 00008800
*                                                                     * 00008900
*                          AR14-AR15   unpredictable                  * 00009000
*                                                                     * 00009100
*                                                                     * 00009200
*                                                                     * 00009300
*                                                                     * 00009400
*                                                                     * 00009500
*      The data area is defined by mapping macro IXCYAMDA (consisting * 00009600
*      of the AMDAREA, AMDPATH, AMDMPEND, AMDSYS, AMDSD, and AMDMEM   * 00009700
*      structures).                                                   * 00009800
*                                                                     * 00009900
*      On return, the data area contains:  A header (AMDAREA),        * 00010000
*      followed by 0 or more path entries (AMDPATH), followed by 0 or * 00010100
*      more message pending entries (AMDMPEND), followed by 0 or more * 00010200
*      system entries (AMDSYS), followed by 0 or more                 * 00010300
*      source/destination entries (AMDSD), followed by 0 or more      * 00010400
*      member entries (AMDMEM).                                       * 00010500
*                                                                     * 00010600
*                                                                     * 00010700
*01* EXTERNAL CLASSIFICATION:  GUPI                                   * 00010800
*                                                                     * 00010900
*01* END OF EXTERNAL CLASSIFICATION:                                  * 00011000
*                                                                     * 00011100
*01* ENVIRONMENT:                                                     * 00011200
*                                                                     * 00011300
*                                                                     * 00011400
*      Dispatchable unit mode: Task or SRB mode.                      * 00011500
*                                                                     * 00011600
*      Minimum authorization: Supervisor state or PKM allowing keys   * 00011700
*                        0-7.                                         * 00011800
*                                                                     * 00011900
*      AMODE:            31-bit.                                      * 00012000
*                                                                     * 00012100
*      ASC mode:         Primary or Access Register.                  * 00012200
*                                                                     * 00012300
*                        If in Access Register ASC mode, specify      * 00012400
*                        SYSSTATE ASCENV=AR before invoking this      * 00012500
*                        macro.                                       * 00012600
*                                                                     * 00012700
*                        Any primary address space; any secondary     * 00012800
*                        address space; any home address space.       * 00012900
*                                                                     * 00013000
*                        Non-swappable primary address space          * 00013100
*                                                                     * 00013200
*      Serialization:                                                 * 00013300
*                                                                     * 00013400
*                        Enabled or disabled for I/O and external     * 00013500
*                        interrupts                                   * 00013600
*                                                                     * 00013700
*                        Either no locks held or only the CPU lock    * 00013800
*                        held.                                        * 00013900
*                                                                     * 00014000
*                                                                     * 00014100
*                                                                     * 00014200
*01* SYNTAX:                                                          * 00014300
*                                                                     * 00014400
*[xlabel]  IXCMG     DATAAREA=xdataarea                               * 00014500
*                   ,DATALEN=xdatalen                                 * 00014600
*                  [,TYPE=ALL|PATH|MSGPEND|SYSTEM|SRCDST|MEMBER]      * 00014700
*                  [,MEMTOKEN=xmemtoken|0]                          * 00014800
*                  [,AMDALEVEL=xamdalevel|0]                        * 00014900
*                  [,RETCODE=xretcode]                                * 00015000
*                  [,RSNCODE=xrsncode]                                * 00015100
*                  [,PLISTVER=xplistver|IMPLIED_VERSION]            * 00015200
*                 [,MF=S]                                            * 00015300
*                 [,MF=(L,xmfctrl,xmfattr|0D)]                     * 00015400
*                 [,MF=(E,xmfctrl,COMPLETE)]                       * 00015500
*                                                                     * 00015600
*                                                                     * 00015700
*      Where:                                                         * 00015800
*                                                                     * 00015900
*                                                                     * 00016000
*      [xlabel]                                                       * 00016100
*          is an optional symbol, starting in column 1, that is the   * 00016200
*          name on the IXCMG macro invocation.  The name must conform * 00016300
*          to the rules for an ordinary assembler language symbol.    * 00016400
*          DEFAULT: No name.                                          * 00016500
*                                                                     * 00016600
*                                                                     * 00016700
*                                                                     * 00016800
*                                                                     * 00016900
*      DATAAREA=xdataarea                                             * 00017000
*          is the name (RS-type), or address in register (2)-(12), of * 00017100
*          a required character output variable which is to contain   * 00017200
*          the measurement data returned by the measurement gathering * 00017300
*          routine.  The data area is defined by mapping macro        * 00017400
*          IXCYAMDA (consisting of the AMDAREA, AMDPATH, AMDMPEND,    * 00017500
*          AMDSYS, AMDSD, and AMDMEM), as described earlier.          * 00017600
*                                                                     * 00017700
*          The data area provided must be in fixed or disabled        * 00017800
*          reference storage.  It must be in the primary address      * 00017900
*          space or in an address/data space that is addressable      * 00018000
*          through a public entry on the caller's dispatchable unit   * 00018100
*          access list (DU-AL).                                       * 00018200
*                                                                     * 00018300
*                                                                     * 00018400
*                                                                     * 00018500
*                                                                     * 00018600
*      DATALEN=xdatalen                                               * 00018700
*          is the name (RS-type), or address in register (2)-(12), of * 00018800
*          a required fullword input variable which contains the      * 00018900
*          length of the data area to contain the measurement data    * 00019000
*          returned by the measurement gathering routine.             * 00019100
*                                                                     * 00019200
*                                                                     * 00019300
*                                                                     * 00019400
*                                                                     * 00019500
*      [TYPE=ALL|PATH|MSGPEND|SYSTEM|SRCDST|MEMBER]                   * 00019600
*          is an optional group of keyword input(s) that specifies    * 00019700
*          the type(s) of data being requested from the measurement   * 00019800
*          gathering routine.  More than one of the options may be    * 00019900
*          specified (though it is not necessary if ALL is            * 00020000
*          specified), and all of the requested data is returned.     * 00020100
*          DEFAULT: ALL                                               * 00020200
*                                                                     * 00020300
*                                                                     * 00020400
*          TYPE=ALL                                                   * 00020500
*              indicates that all data types are returned.            * 00020600
*                                                                     * 00020700
*              For AMDALEVEL 0 requests, ALL is equivalent to having  * 00020800
*              specified PATH, MSGPEND, SYSTEM, and SRCDST for TYPE.  * 00020900
*              For AMDALEVEL 1 requests, ALL is equivalent to having  * 00021000
*              specified PATH, MSGPEND, SYSTEM, SRCDST, and MEMBER    * 00021100
*              for TYPE.                                              * 00021200
*                                                                     * 00021300
*          TYPE=PATH                                                  * 00021400
*              requests information on the usage of XCF paths.        * 00021500
*                                                                     * 00021600
*          TYPE=MSGPEND                                               * 00021700
*              requests information on pending messages.              * 00021800
*                                                                     * 00021900
*          TYPE=SYSTEM                                                * 00022000
*              requests system summary information on XCF paths.      * 00022100
*                                                                     * 00022200
*          TYPE=SRCDST                                                * 00022300
*              requests information for members sending and receiving * 00022400
*              messages (source and destination).                     * 00022500
*                                                                     * 00022600
*                                                                     * 00022700
*              o   If the member is active on the local system, this  * 00022800
*                  information describes all messages sent and        * 00022900
*                  received by the local member.                      * 00023000
*                                                                     * 00023100
*              o   If the member is active on some other system, this * 00023200
*                  information describes just those messages sent     * 00023300
*                  from the local system to the remote member, and    * 00023400
*                  just those messages received by the local system   * 00023500
*                  from the remote member.                            * 00023600
*                                                                     * 00023700
*                                                                     * 00023800
*                                                                     * 00023900
*          TYPE=MEMBER                                                * 00024000
*              requests information about members that reside on the  * 00024100
*              local system.  The MEMTOKEN keyword can be specified   * 00024200
*              to limit the data to a specific member.                * 00024300
*                                                                     * 00024400
*              This option is valid only for requests that specify    * 00024500
*              (or default to) PLISTVER > 0.                          * 00024600
*                                                                     * 00024700
*                                                                     * 00024800
*                                                                     * 00024900
*                                                                     * 00025000
*                                                                     * 00025100
*                                                                     * 00025200
*      [MEMTOKEN=xmemtoken|0]                                       * 00025300
*          is the name (RS-type), or address in register (2)-(12), of * 00025400
*          an optional 64 bit input variable specifying the MEMTOKEN  * 00025500
*          of the member whose MEMBER data is to be gathered.         * 00025600
*          MEMTOKEN is only used when gathering MEMBER data.  It is   * 00025700
*          ignored for all other data options.  If the indicated      * 00025800
*          member does not reside on the local system, no MEMBER data * 00025900
*          will be returned.                                          * 00026000
*          DEFAULT: 0                                                 * 00026100
*                                                                     * 00026200
*                                                                     * 00026300
*                                                                     * 00026400
*                                                                     * 00026500
*      [AMDALEVEL=xamdalevel|0]                                     * 00026600
*          is the name (RS-type), or address in register (2)-(12), of * 00026700
*          an optional byte input variable specifying the level of    * 00026800
*          the various IXCYAMDA record mappings which are to be       * 00026900
*          returned.  Valid values are 0 and 1.  A value of 0         * 00027000
*          indicates that the base level IXCYAMDA records will be     * 00027100
*          returned.  A value of 1 indicates that the level 1         * 00027200
*          IXCYAMDA records will be returned.                         * 00027300
*          DEFAULT: 0                                                 * 00027400
*                                                                     * 00027500
*                                                                     * 00027600
*                                                                     * 00027700
*                                                                     * 00027800
*      [RETCODE=xretcode]                                             * 00027900
*          is the name (RS-type) of an optional fullword output       * 00028000
*          variable, or register (2)-(12), into which the return code * 00028100
*          is to be copied from GPR 15.                               * 00028200
*                                                                     * 00028300
*                                                                     * 00028400
*                                                                     * 00028500
*                                                                     * 00028600
*      [RSNCODE=xrsncode]                                             * 00028700
*          is the name (RS-type) of an optional fullword output       * 00028800
*          variable, or register (2)-(12), into which the reason code * 00028900
*          is to be copied from GPR 0.                                * 00029000
*                                                                     * 00029100
*                                                                     * 00029200
*                                                                     * 00029300
*                                                                     * 00029400
*      [PLISTVER=xplistver|IMPLIED_VERSION]                         * 00029500
*          is an optional byte input decimal value in the "0-1" range * 00029600
*          that specifies the macro version.  PLISTVER is the only    * 00029700
*          key allowed on the list form of MF and determines which    * 00029800
*          parameter list is generated.  The macro keys associated    * 00029900
*          with each supported version of the macro are listed in     * 00030000
*          MACRO USAGE NOTE 2.  Note that MAX may be specified        * 00030100
*          instead of a number, and the parameter list will be of the * 00030200
*          largest size currently supported. This size may grow from  * 00030300
*          release to release (thus possibly affecting the amount of  * 00030400
*          storage needed by your program).  If your program can      * 00030500
*          tolerate this, IBM recommends that you always specify MAX  * 00030600
*          when creating the list form parameter list as that will    * 00030700
*          ensure that the list form parameter list is always long    * 00030800
*          enough to hold whatever parameters might be specified on   * 00030900
*          the execute form.                                          * 00031000
*          DEFAULT: IMPLIED_VERSION.  When PLISTVER is omitted, the   * 00031100
*          default is the lowest version which allows all of the      * 00031200
*          parameters specified on the invocation to be processed.    * 00031300
*                                                                     * 00031400
*                                                                     * 00031500
*                                                                     * 00031600
*                                                                     * 00031700
*      [MF=S|L|E]                                                   * 00031800
*          is an optional keyword input which specifies the macro     * 00031900
*          form.                                                      * 00032000
*          DEFAULT: S                                                 * 00032100
*                                                                     * 00032200
*                                                                     * 00032300
*          [MF=S]                                                     * 00032400
*              specifies the standard form of the macro.  The "S"     * 00032500
*              form generates code to put the parameters into an      * 00032600
*              in-line parameter list and invoke the desired service. * 00032700
*              Full checking for required macro keys is done along    * 00032800
*              with supplying defaults for omitted optional           * 00032900
*              parameters.                                            * 00033000
*                                                                     * 00033100
*          [MF=(L,xmfctrl,xmfattr|0D)]                              * 00033200
*              specifies the list form of the macro.  The "L" form    * 00033300
*              defines an area to be used for the parameter list.     * 00033400
*              Only the PLISTVER key may be specified on the          * 00033500
*              invocation.  All other macro parameters are flagged as * 00033600
*              errors.  If PLISTVER is not specified, the original    * 00033700
*              parameter list definition is used.                     * 00033800
*                                                                     * 00033900
*            ,xmfctrl                                                 * 00034000
*              is a required input.  It is the name of a storage area * 00034100
*              for the parameter list.                                * 00034200
*                                                                     * 00034300
*            ,xmfattr|0D                                            * 00034400
*              is an optional 60 character input string that varies   * 00034500
*              from 1 to 60 characters. Use it to force boundary      * 00034600
*              alignment of the parameter list. Use only 0F or 0D.    * 00034700
*              DEFAULT: 0D which forces the parameter list to a       * 00034800
*              doubleword boundary.                                   * 00034900
*                                                                     * 00035000
*          [MF=(E,xmfctrl,COMPLETE)]                                * 00035100
*              specifies the execute form of the macro.  The "E" form * 00035200
*              generates code to put the parameters into the          * 00035300
*              parameter list specified by xmfctrl and provides full  * 00035400
*              syntax checking with default setting.                  * 00035500
*                                                                     * 00035600
*            ,xmfctrl                                                 * 00035700
*              is a required input.  It is the name (RS-type), or     * 00035800
*              address in register (1)-(12), of a storage area for    * 00035900
*              the parameter list.                                    * 00036000
*                                                                     * 00036100
*            ,COMPLETE                                              * 00036200
*              is an optional keyword input which specifies the       * 00036300
*              degree of macro parameter syntax checking.             * 00036400
*              DEFAULT: COMPLETE                                      * 00036500
*                                                                     * 00036600
*                                                                     * 00036700
*              COMPLETE                                               * 00036800
*                  Checking for required macro keys is done and       * 00036900
*                  defaults are supplied for omitted optional         * 00037000
*                  parameters.                                        * 00037100
*                                                                     * 00037200
*                                                                     * 00037300
*                                                                     * 00037400
*                                                                     * 00037500
*                                                                     * 00037600
*                                                                     * 00037700
*                                                                     * 00037800
*01* RETURN CODES:                                                    * 00037900
*                                                                     * 00038000
*                                                                     * 00038100
*       0         successful completion; all requested data is        * 00038200
*                 contained in the data area provided                 * 00038300
*                                                                     * 00038400
*       4         successful completion, although with exceptional    * 00038500
*                 circumstances.                                      * 00038600
*                                                                     * 00038700
*                 HEX REASON       MEANING                            * 00038800
*                 CODE                                                * 00038900
*                                                                     * 00039000
*                                                                     * 00039100
*                 4           DATAAREA too small.                     * 00039200
*                                                                     * 00039300
*                             The DATAAREA provided was large enough  * 00039400
*                             to contain the header information       * 00039500
*                             (AMDAREA), but was not large enough to  * 00039600
*                             contain all the measurement data that   * 00039700
*                             was requested.  The AMDATLEN field      * 00039800
*                             indicates the total length of the       * 00039900
*                             output data area that would have been   * 00040000
*                             needed to contain all the requested     * 00040100
*                             information.                            * 00040200
*                                                                     * 00040300
*                             Retry the request with a DATAAREA whose * 00040400
*                             length is greater than or equal to the  * 00040500
*                             number of bytes indicated by AMDATLEN.  * 00040600
*                             Note that the amount of data to be      * 00040700
*                             returned can change dynamically, so     * 00040800
*                             that the length indicated by AMDATLEN   * 00040900
*                             may be too small for all the data when  * 00041000
*                             the request is tried again.             * 00041100
*                                                                     * 00041200
*                                                                     * 00041300
*                                                                     * 00041400
*       8         invalid parameters                                  * 00041500
*                                                                     * 00041600
*                 HEX REASON       MEANING                            * 00041700
*                 CODE                                                * 00041800
*                                                                     * 00041900
*                                                                     * 00042000
*                 14          DATAAREA too small                      * 00042100
*                                                                     * 00042200
*                 18          Error accessing DATAAREA.               * 00042300
*                                                                     * 00042400
*                 1C          DATAAREA ALET invalid                   * 00042500
*                                                                     * 00042600
*                 40          Reserved field in parameter list not 0  * 00042700
*                             or MEMBER data requested with           * 00042800
*                             PLISTVER=0.                             * 00042900
*                                                                     * 00043000
*                 100         ALET invalid for parameter list         * 00043100
*                                                                     * 00043200
*                 104         Invalid version number in parameter     * 00043300
*                             list                                    * 00043400
*                                                                     * 00043500
*                 108         Invalid function code in parameter list * 00043600
*                                                                     * 00043700
*                 10C         Error accessing parameter list          * 00043800
*                                                                     * 00043900
*                 110         AMDALEVEL value is not valid            * 00044000
*                                                                     * 00044100
*                 114         MEMTOKEN value is not a valid token     * 00044200
*                                                                     * 00044300
*                                                                     * 00044400
*                                                                     * 00044500
*                                                                     * 00044600
*       10        failure in XCF processing                           * 00044700
*                                                                     * 00044800
*                                                                     * 00044900
*                                                                     * 00045000
*01* REASON CODES:                                                    * 00045100
*                                                                     * 00045200
*       A unique reason code will be returned whenever the return     * 00045300
*       code is non-zero.                                             * 00045400
*                                                                     * 00045500
*01* MODULE TYPE:  ASSEM MACRO                                        * 00045600
*                                                                     * 00045700
*02*   PROCESSOR:  ASSEM                                              * 00045800
*                                                                     * 00045900
*01* COMPONENT:  SCXCF                                                * 00046000
*                                                                     * 00046100
*01* DISTRIBUTION LIBRARY: AMACLIB                                    * 00046200
*                                                                     * 00046300
*01* MACRO USAGE NOTES:                                               * 00046400
*                                                                     * 00046500
*                                                                     * 00046600
*    1.  Printing of the macro expansion is controlled by the ZPRINT  * 00046700
*        global macro variable.  Any value other than 'NO' will       * 00046800
*        result in the macro expansion being printed.  The default is * 00046900
*        'YES'.  The following examples illustrate how the ZPRINT     * 00047000
*        variable should be set.                                      * 00047100
*                                                                     * 00047200
*                    GBLC &ZPRINT                                     * 00047300
*            &ZPRINT SETC 'YES'          &ZPRINT SETC 'NO'            * 00047400
*                                                                     * 00047500
*                                                                     * 00047600
*    2.  The  IXCMG  macro  supports multiple versions. The macro key * 00047700
*        list  below  contains the version level in which the key was * 00047800
*        first  introduced.  Positionals  are  identified by the word * 00047900
*        'Positional'  followed by the numeric value of its position. * 00048000
*        Nested  positionals  are  preceded  by their outer key.  The * 00048100
*        lowest value represents the original version and the highest * 00048200
*        value represents the most recent version of the IXCMG macro. * 00048300
*        When  specifying  PLISTVER,  be  sure that it is at least as * 00048400
*        high  as  the  highest  version number of all the keys being * 00048500
*        used.                                                        * 00048600
*                                                                     * 00048700
*        VERSION   KEY                                                * 00048800
*                                                                     * 00048900
*              0      DATAAREA                                        * 00049000
*                     DATALEN                                         * 00049100
*                     TYPE                                            * 00049200
*              1      AMDALEVEL                                       * 00049300
*                     MEMTOKEN                                        * 00049400
*                                                                     * 00049500
*                                                                     * 00049600
*                                                                     * 00049700
*01* CHANGE ACTIVITY:                                                 * 00049800
*                                                                     * 00049900
*   Flag LineItem  FMID    Date   ID    Comment                       * 00050000
*                                                                     * 00050100
*    $L0=COUPLXAM HBB4410 860901 PDXB:  Coupling Support              * 00050200
*    $P1=PKB2941  HBB4430 920617 PDT8:  Update prolog to state only   * 00050300
*                                         31 bit addressing mode is   * 00050400
*                                         supported                   * 00050500
*    $P2=PIG1274  HBB5510 930520 PD00BJ:  Miscellaneous prolog        * 00050600
*                                         clarifications, added       * 00050700
*                                         documentation of reason     * 00050800
*                                         code 4 when return code is  * 00050900
*                                         4.                          * 00051000
*    $L1=XCFBC    HBB6603 950707 PD00BJ:  Add MSGUSE support          * 00051100
*    $D1=DQC028   HBB6603 960815 PD00DT:  Delete MSGUSE support       * 00051200
*    $01=OW37621  HBB6606 001215 PD00BJ:  Add MEMBER support          * 00051300
****** END OF SPECIFICATIONS *****************************************/ 00051400
*/* TLINE 1 *********************************************************** 00051500
         MACRO                                                          00051600
&XLABEL  IXCMG &DATAAREA=,&DATALEN=,&TYPE=,&MEMTOKEN=,&AMDALEVEL=,     *00051700
               &RETCODE=,&RSNCODE=,&PLISTVER=,&MF=                      00051800
.*                                                                      00051900
*               MACDATE -02/26/01-<1>                                   00052000
.*                                                                      00052100
.*******************************************************************    00052200
.***AB.02  GLOBAL VARIABLES TO CONTROL PRINT AND CODE GENERATION        00052300
.*******************************************************************    00052400
               GBLC  &ZPRINT     YES=PRINT NO=NO PRINT                  00052500
               GBLC  &ZTEST      YES=TEST NO=NO TEST                    00052600
               GBLC  &ZSYSTEM    PCCODE10, MVS, SAK, VM, XAX            00052700
.*                                                                      00052800
               GBLC  &ZIXCMG     YES=MACRO USED AT LEAST ONCE           00052900
.*******************************************************************    00053000
.***AB.03  COMMONLY USED LOCAL MACRO VARIABLES                          00053100
.*******************************************************************    00053200
               LCLC  &ZMS        ERROR MESSAGE WORK AREA                00053300
               LCLC  &ZCNDX      LAST THREE SYSNDX CHARACTERS           00053400
               LCLC  &ZCLNG      USED WHEN LENGTH IS NEEDED             00053500
               LCLC  &ZCGPR      USED WHEN VALUE IS IN A GPR            00053600
               LCLC  &ZCVAL      USED TO CONTAIN FIXED VALUE            00053700
               LCLA  &ZAWRK      USED AS A WORK AREA                    00053800
               LCLA  &ZASIZ      USED FOR SIZE OF VALUE                 00053900
               LCLA  &ZN         NUMERIC WORK VARIABLE                  00054000
               LCLC  &ZC         CHARACTER WORK VARIABLE                00054100
               LCLC  &ZTLC       CHARACTER TOO LONG VARIABLE            00054200
               LCLA  &ZTLA       VALUE TOO LONG VARIABLE                00054300
               LCLA  &ZMACRET    MACRO RETURN CODE                      00054400
&ZMACRET       SETA  0           ASSUME NO ERRORS                       00054500
.*                                                                      00054600
               LCLC  &ZCSYSLIST(255)            NONXKEY, POS ARRAY      00054700
               LCLA  &ZASYSLNDX  WORK INDEX FOR ZCSYSLIST()             00054800
               LCLA  &ZPLLEN     PARAMETER LIST LENGTH                  00054900
               LCLC  &ZENDBASEPL                End of base PL          00055000
               LCLA  &ZPLWORKA   PARAMETER LIST LENGTH                  00055100
.*******************************************************************    00055200
.***AB.04  MACRO VARIABLES FOR RANGES AND SETS OF ARGUMENTS             00055300
.*******************************************************************    00055400
               LCLA  &ZI         INDEX FOR ARRAY                        00055500
               LCLA  &ZJ         INDEX FOR PARMS                        00055600
               LCLA  &ZK         INDEX FOR PARSE                        00055700
               LCLA  &ZLO        LOW RANGE VALUE                        00055800
               LCLA  &ZHI        HIGH RANGE VALUE                       00055900
               LCLC  &ZW         WORK AREA FOR PARM                     00056000
.********************************************************************   00056100
.***AB.05  INVOKE MVS MACROS TO CONTROL CODE GENERATION                 00056200
.********************************************************************   00056300
               GBLC  &SYSSPLV    SP LEVEL 1,2,3 -SPLEVEL                00056400
               GBLC  &SYSASCE    SYSTEM STATE P ANY AR-SYSSTATE         00056500
               GBLA  &SYSALVL    SYSSTATE ARCHLVL                       00056600
.*                                                                      00056700
               AIF   (K'&SYSASCE GT 0).ZSYS4    SYS STATE DEFINED       00056800
               AIF   (K'&SYSSPLV GT 0).ZSYS2    SP LEVEL DEFINED        00056900
               SPLEVEL  TEST                                            00057000
.ZSYS2         ANOP  ,                                                  00057100
               AIF   ('&SYSSPLV' EQ '1').ZSYS3  PRE SP 3.1              00057200
               AIF   ('&SYSSPLV' EQ '2').ZSYS3  PRE SP 3.1              00057300
               SYSSTATE TEST                                            00057400
               AGO   .ZSYS4                                             00057500
.ZSYS3         ANOP  ,                                                  00057600
&SYSASCE       SETC  'P'         ASSUME SYSSTATE PRIMARY                00057700
.ZSYS4         ANOP  ,                                                  00057800
.*******************************************************************    00057900
.***AB.07  DEFINE ALL MACRO VARIABLES                                   00058000
.*******************************************************************    00058100
               LCLC  &XDATAAREA  ++ NAME                                00058200
               LCLC  &XDATALEN   ++ NAME                                00058300
               LCLC  &XTYPE(257)                ++ VALUE                00058400
               LCLC  &XMEMTOKEN  ++ NAME                                00058500
               LCLC  &XAMDALEVEL                ++ NAME                 00058600
               LCLC  &XRETCODE   ++ NAME                                00058700
               LCLC  &XRSNCODE   ++ NAME                                00058800
               LCLA  &XPLISTVER  ++ VALUE                               00058900
               LCLC  &XMF        ++ VALUE                               00059000
               LCLC  &XMFCTRL    ++ NAME                                00059100
               LCLC  &XMFATTR    ++ VALUE                               00059200
               LCLC  &XMFSCK     ++ VALUE                               00059300
.*******************************************************************    00059400
.***AB.13  DEFINE MACRO VARIABLES FOR INPUT/OUTPUT PROCESSING           00059500
.*******************************************************************    00059600
               LCLC  &ZXDATAAREA                ++ OUTPUT NAME          00059700
               LCLC  &ZXDATALEN  ++ INPUT NAME                          00059800
               LCLC  &ZXTYPE     ++ INPUT VALUE                         00059900
               LCLC  &ZXMEMTOKEN                ++ INPUT NAME           00060000
               LCLC  &ZXAMDALEVEL               ++ INPUT NAME           00060100
               LCLC  &ZXRETCODE  ++ OUTPUT NAME                         00060200
               LCLC  &ZXRSNCODE  ++ OUTPUT NAME                         00060300
               LCLC  &ZXPLISTVER                ++ INPUT VALUE          00060400
               LCLC  &ZXMF       ++ INPUT VALUE                         00060500
               LCLC  &ZXMFCTRL   ++ INPUT NAME                          00060600
               LCLC  &ZXMFATTR   ++ INPUT VALUE                         00060700
               LCLC  &ZXMFSCK    ++ INPUT VALUE                         00060800
.********************************************************************   00060900
.***AC.PLV01  PROCESS PLISTVER                                      *   00061000
.********************************************************************   00061100
&XPLISTVER      SETA  0                                                 00061200
                AIF   (K'&PLISTVER(1) LE 0).ZPLV0                       00061300
                AIF   ('&PLISTVER(1)' NE 'MAX').ZPLV0                   00061400
&XPLISTVER      SETA  1                                                 00061500
.ZPLV0          ANOP  ,                                                 00061600
.*                                                                      00061700
                AIF   ('&MEMTOKEN' EQ '').ZPLV1E                        00061800
                AIF   (&XPLISTVER GE 1).ZPLV1E                          00061900
&XPLISTVER      SETA  1                                                 00062000
.ZPLV1E         ANOP  ,                                                 00062100
.*                                                                      00062200
                AIF   ('&AMDALEVEL' EQ '').ZPLV2E                       00062300
                AIF   (&XPLISTVER GE 1).ZPLV2E                          00062400
&XPLISTVER      SETA  1                                                 00062500
.ZPLV2E         ANOP  ,                                                 00062600
.*                                                                      00062700
                AIF   (K'&PLISTVER(1) LE 0).ZPVCKE                      00062800
                AIF   ('&PLISTVER(1)' EQ 'IMPLIED_VERSION').ZPVCKE      00062900
                AIF   ('&PLISTVER(1)' EQ 'MAX').ZPVCKE                  00063000
.*-------------------------------------------------------------------   00063100
                AIF   (N'&PLISTVER LE 1).ZPVCK3  CK NUM                 00063200
&ZMS            SETC  '"PLISTVER='         *KPOSA* MNOTE                00063300
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00063400
&ZMS            SETC  '&ZMS "PLISTVER"'                                 00063500
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00063600
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00063700
                AGO   .ZPVCK2                                           00063800
.ZPVCK3         ANOP  ,                                                 00063900
.*-------------------------------------------------------------------   00064000
                AIF   ('&PLISTVER'(1,1) NE '(').ZPVCK2                  00064100
&ZMS            SETC  '"PLISTVER='         *KGPRA* MNOTE                00064200
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00064300
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         00064400
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'                 00064500
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00064600
                AGO   .ZPVCKE                                           00064700
.ZPVCK2         ANOP  ,                                                 00064800
.*-------------------------------------------------------------------   00064900
&ZCVAL          SETC  '&PLISTVER(1)'                                    00065000
                AIF   ('&ZCVAL'(1,1) EQ '(').ZPVCKE  IN GPR             00065100
                AIF   (T'&ZCVAL NE 'N').ZPVCK6  NUMERIC ERR             00065200
&ZN             SETA   &PLISTVER(1)        CONVERT TO ARITHMETIC        00065300
                AIF   (&ZN LT 0).ZPVCK6    TOO LOW                      00065400
                AIF   (&ZN LE 1).ZPVCK4A   NOT HIGH                     00065500
.ZPVCK6         ANOP  ,                                                 00065600
&ZMS            SETC  '"PLISTVER='         *KRNGA* MNOTE                00065700
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00065800
&ZMS            SETC  '&ZMS THE RANGE IS "0-1"'                         00065900
                MNOTE 8,' &ZMS FOR ARGUMENT 1.'                         00066000
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00066100
&XPLISTVER      SETA  1                                                 00066200
                AGO   .ZPVCKE                                           00066300
.*-------------------------------------------------------------------   00066400
.ZPVCK4A        ANOP  ,                                                 00066500
                AIF   (&ZN GE &XPLISTVER).ZPVCK4                        00066600
&ZMS            SETC  'PLISTVER='          *KVALA* MNOTE                00066700
&ZMS            SETC  '&ZMS.&PLISTVER(1)'                               00066800
&ZMS            SETC  '&ZMS., BUT PLISTVER OF'                          00066900
&ZMS            SETC  '&ZMS &XPLISTVER'                                 00067000
                MNOTE 8,' &ZMS IS REQUIRED.'                            00067100
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00067200
                AGO   .ZPVCK5                                           00067300
.ZPVCK4         ANOP  ,                                                 00067400
&XPLISTVER      SETA  &PLISTVER(1)                                      00067500
.ZPVCK5         ANOP  ,                                                 00067600
.ZPVCKE         ANOP  ,                                                 00067700
.********************************************************************   00067800
.***AG.MF01 PROCESS MF MACRO FORMS                                      00067900
.********************************************************************   00068000
               ACTR  10000                                              00068100
.*------------------------------------------------------------------    00068200
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00068300
&XMF           SETC  ''          INITIALIZE XVARIABLE                   00068400
.*-------------------------------------------------------------------   00068500
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00068600
.ZG33          ANOP  ,                                                  00068700
&ZTLC          SETC 'S'                                                 00068800
               AIF   ('&MF(1)' NE '&ZTLC').ZG34                         00068900
&XMF           SETC  'S'         SET KEYWORD                            00069000
               AIF   (N'&MF LE 1).ZG33A         CK NUM                  00069100
&ZMS           SETC  '"MF='      *KPOSA* MNOTE                          00069200
&ZMS           SETC  '&ZMS.&MF"'                                        00069300
&ZMS           SETC  '&ZMS "MF"'                                        00069400
               MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                00069500
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00069600
.ZG33A         ANOP  ,                                                  00069700
.*-------------------------------------------------------------------   00069800
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00069900
.ZG34          ANOP  ,                                                  00070000
&ZTLC          SETC 'L'                                                 00070100
               AIF   ('&MF(1)' NE '&ZTLC').ZG41                         00070200
&XMF           SETC  'L'         SET KEYWORD                            00070300
               AIF   (N'&MF LE 3).ZG34A         CK NUM                  00070400
&ZMS           SETC  '"MF='      *KPOSA* MNOTE                          00070500
&ZMS           SETC  '&ZMS.&MF"'                                        00070600
&ZMS           SETC  '&ZMS "MF"'                                        00070700
               MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'               00070800
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00070900
.ZG34A         ANOP  ,                                                  00071000
.*-------------------------------------------------------------------   00071100
.***AG.KKCTL08 -MF(L) SPECIAL CHECK                                     00071200
               AIF   (N'&SYSLIST NE 0).ZG34B    POSITIONALS?            00071300
               AIF   ('&DATAAREA' NE '').ZG34B  KEYS?                   00071400
               AIF   ('&DATALEN' NE '').ZG34B   KEYS?                   00071500
               AIF   ('&TYPE' NE '').ZG34B      KEYS?                   00071600
               AIF   ('&MEMTOKEN' NE '').ZG34B  KEYS?                   00071700
               AIF   ('&AMDALEVEL' NE '').ZG34B  KEYS?                  00071800
               AIF   ('&RETCODE' NE '').ZG34B   KEYS?                   00071900
               AIF   ('&RSNCODE' NE '').ZG34B   KEYS?                   00072000
               AGO    .ZG34C     INVOCATION OKAY                        00072100
.ZG34B         ANOP  ,                                                  00072200
&ZMS           SETC  'THE "L" FORM OF "MF"'     *MFLA* MNOTE            00072300
&ZMS           SETC  '&ZMS CAN ONLY HAVE'                               00072400
&ZMS           SETC  '&ZMS THE "PLISTVER" KEY'                          00072500
               MNOTE 8,' &ZMS SPECIFIED ON THE INVOCATION.'             00072600
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00072700
.ZG34C         ANOP  ,                                                  00072800
.*-------------------------------------------------------------------   00072900
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00073000
&ZXMFCTRL      SETC  'INPUT'     SET IN/OUTPUT                          00073100
&XMFCTRL       SETC  '&MF(2,1)'  SET XVARIABLE                          00073200
               AIF   (N'&MF(2) GT 1).ZG36B      MULTI PARMS             00073300
&XMFCTRL       SETC  '&MF(2)'    SET XVARIABLE                          00073400
.ZG36B         AIF   (K'&MF(2) GT 0).ZG36C                              00073500
&ZXMFCTRL      SETC  ''          RESET IN/OUTPUT                        00073600
&ZMS           SETC  'WHEN "L" IS SPECIFIED'    *KRQDA*                 00073700
&ZMS           SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'                00073800
               MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                       00073900
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00074000
.ZG36C         ANOP  ,                                                  00074100
.*-------------------------------------------------------------------   00074200
.***AG.KCK01 NAME, OPT RQD INPUT, POS(2) -GPR NOT ALLOWED               00074300
               AIF   (K'&ZXMFCTRL LE 0).ZG36P   NOT I/O                 00074400
               AIF   ('&XMFCTRL'(1,1) NE '(').ZG36P                     00074500
&ZXMFCTRL      SETC  ''          RESET IN/OUTPUT                        00074600
&ZMS           SETC  '"MF='      *KGPRA* MNOTE                          00074700
&ZMS           SETC  '&ZMS.&MF"'                                        00074800
&ZMS           SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'          00074900
               MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 2.'                  00075000
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00075100
.ZG36P         ANOP  ,                                                  00075200
.*-------------------------------------------------------------------   00075300
.***AG.KXVAR13 VALUE, OPT INPUT, POS(3) -XVARIABLE                      00075400
&ZXMFATTR      SETC  'INPUT'     SET IN/OUTPUT                          00075500
&XMFATTR       SETC  '0D'                                               00075600
               AIF   (K'&MF(3) LE 0).ZG39B      PARM                    00075700
&XMFATTR       SETC  '&MF(3,1)'  SET XVARIABLE                          00075800
               AIF   (N'&MF(3) GT 1).ZG39B      MULTI PARMS             00075900
&XMFATTR       SETC  '&MF(3)'    SET XVARIABLE                          00076000
.ZG39B         ANOP  ,                                                  00076100
.*-------------------------------------------------------------------   00076200
.***AG.KCK01 VALUE, OPT INPUT, POS(3) -GPR NOT ALLOWED                  00076300
               AIF   (K'&ZXMFATTR LE 0).ZG39P   NOT I/O                 00076400
               AIF   ('&XMFATTR'(1,1) NE '(').ZG39P                     00076500
&ZXMFATTR      SETC  ''          RESET IN/OUTPUT                        00076600
&ZMS           SETC  '"MF='      *KGPRA* MNOTE                          00076700
&ZMS           SETC  '&ZMS.&MF"'                                        00076800
&ZMS           SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'          00076900
               MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 3.'                  00077000
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00077100
.ZG39P         ANOP  ,                                                  00077200
.*-------------------------------------------------------------------   00077300
.***AG.KCK03 VALUE, OPT INPUT, POS(3) -CHARACTER LENGTH                 00077400
               AIF   (K'&ZXMFATTR LE 0).ZG39S   NOT I/O                 00077500
               AIF   (K'&XMFATTR LE 60).ZG39S   LNG OK                  00077600
&ZXMFATTR      SETC  ''          RESET IN/OUTPUT                        00077700
&ZMS           SETC  '"MF='      *KLNGA* MNOTE                          00077800
&ZMS           SETC  '&ZMS.&MF"'                                        00077900
&ZMS           SETC  '&ZMS ARGUMENT 3 EXCEEDS THE MAXIMUM'              00078000
               MNOTE 8,' &ZMS LENGTH OF 60 CHARACTERS.'                 00078100
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00078200
.ZG39S         ANOP  ,                                                  00078300
.*-------------------------------------------------------------------   00078400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00078500
.ZG41          ANOP  ,                                                  00078600
&ZTLC          SETC 'E'                                                 00078700
               AIF   ('&MF(1)' NE '&ZTLC').ZG49                         00078800
&XMF           SETC  'E'         SET KEYWORD                            00078900
               AIF   (N'&MF LE 3).ZG41A         CK NUM                  00079000
&ZMS           SETC  '"MF='      *KPOSA* MNOTE                          00079100
&ZMS           SETC  '&ZMS.&MF"'                                        00079200
&ZMS           SETC  '&ZMS "MF"'                                        00079300
               MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'               00079400
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00079500
.ZG41A         ANOP  ,                                                  00079600
.*-------------------------------------------------------------------   00079700
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00079800
&ZXMFCTRL      SETC  'INPUT'     SET IN/OUTPUT                          00079900
&XMFCTRL       SETC  '&MF(2,1)'  SET XVARIABLE                          00080000
               AIF   (N'&MF(2) GT 1).ZG43B      MULTI PARMS             00080100
&XMFCTRL       SETC  '&MF(2)'    SET XVARIABLE                          00080200
.ZG43B         AIF   (K'&MF(2) GT 0).ZG43C                              00080300
&ZXMFCTRL      SETC  ''          RESET IN/OUTPUT                        00080400
&ZMS           SETC  'WHEN "E" IS SPECIFIED'    *KRQDA*                 00080500
&ZMS           SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'                00080600
               MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                       00080700
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00080800
.ZG43C         ANOP  ,                                                  00080900
.*-------------------------------------------------------------------   00081000
.***AG.KCK02 NAME, OPT RQD INPUT, POS(2) -GPR OUT OF RANGE              00081100
               AIF   (K'&ZXMFCTRL LE 0).ZG43R   NOT I/O                 00081200
               AIF   ('&XMFCTRL'(1,1) NE '(').ZG43R                     00081300
&ZCGPR         SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)                         00081400
               AIF   ('&ZCGPR'(1,1) NE '0').ZG43P                       00081500
               AIF   (K'&ZCGPR GT 2).ZG43Q                              00081600
               AIF   ('&ZCGPR' EQ '0').ZG43Q                            00081700
&ZCGPR         SETC  '&ZCGPR'(2,1)                                      00081800
               AIF   (T'&ZCGPR NE 'N').ZG43Q    INVALID REG NAME        00081900
.ZG43P         ANOP  ,                                                  00082000
               AIF   (T'&ZCGPR NE 'N').ZG43R    NON NUMERIC             00082100
               AIF   ('&ZCGPR' LT '1').ZG43Q                            00082200
               AIF   ('&ZCGPR' LE '12').ZG43R                           00082300
.ZG43Q         ANOP  ,                                                  00082400
&ZMS           SETC  '"MF='      *KGPRA* MNOTE                          00082500
&ZMS           SETC  '&ZMS.&MF"'                                        00082600
&ZMS           SETC  '&ZMS ARGUMENT 2 MUST SPECIFY A REGISTER'          00082700
               MNOTE 8,' &ZMS IN THE RANGE (1)-(12).'                   00082800
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00082900
.ZG43R         ANOP  ,                                                  00083000
.*-------------------------------------------------------------------   00083100
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00083200
&XMFSCK        SETC  ''          INITIALIZE XVARIABLE                   00083300
.ZG47A   AIF   ('&MF(3)' NE 'COMPLETE').ZG48A                           00083400
&XMFSCK        SETC  'COMPLETE'  SET KEYWORD                            00083500
.*-------------------------------------------------------------------   00083600
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00083700
.ZG48A         AIF   (K'&XMFSCK GT 0).ZG48C     KEYWORD                 00083800
               AIF   (K'&MF(3) LE 0).ZG48B                              00083900
&ZMS           SETC  '"MF='      *KUKWA* MNOTE                          00084000
&ZMS           SETC  '&ZMS.&MF"'                                        00084100
&ZMS           SETC  '&ZMS ARGUMENT 3 IS AN UNKNOWN KEYWORD. '          00084200
&ZMS           SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                00084300
&ZMS           SETC  '&ZMS "COMPLETE".'                                 00084400
               MNOTE 8,' &ZMS '                                         00084500
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00084600
.ZG48B         ANOP  ,                                                  00084700
&XMFSCK        SETC  'COMPLETE'  SET DEFAULT KEYWORD                    00084800
.ZG48C         ANOP  ,                                                  00084900
&ZXMFSCK       SETC  'INPUT'     SET IN/OUTPUT                          00085000
.*------------------------------------------------------------------    00085100
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00085200
.ZG49          ANOP  ,                                                  00085300
&ZXMF          SETC  'INPUT'     SET IN/OUTPUT                          00085400
               AIF   (K'&XMF GT 0).ZG49E        VALID ARG               00085500
               AIF   (T'&MF EQ 'O').ZG49D       OMITTED                 00085600
&ZASYSLNDX     SETA  0                                                  00085700
.ZG49A         ANOP  ,           POSITIONAL MACRO KEY                   00085800
&ZASYSLNDX     SETA  &ZASYSLNDX+1                                       00085900
               AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG49C                   00086000
&ZTLC          SETC 'MF'                                                00086100
               AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG49A          00086200
.ZG49B         ANOP  ,                                                  00086300
&ZXMF          SETC  ''          RESET IN/OUTPUT                        00086400
&ZMS           SETC  'THE "MF" KEY'             *KOPTA* MNOTE           00086500
&ZMS           SETC  '&ZMS MUST CONTAIN ONE'                            00086600
               MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                   00086700
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00086800
               AGO   .ZG49E                                             00086900
.ZG49C         ANOP  ,                                                  00087000
&ZXMF          SETC  ''          RESET IN/OUTPUT                        00087100
&ZMS           SETC  '"MF='      *KUKWA* MNOTE                          00087200
&ZMS           SETC  '&ZMS.&MF"'                                        00087300
&ZMS           SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '          00087400
&ZMS           SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                00087500
&ZMS           SETC  '&ZMS "S",'                                        00087600
&ZMS           SETC  '&ZMS "L",'                                        00087700
&ZMS           SETC  '&ZMS OR "E".'                                     00087800
               MNOTE 8,' &ZMS '                                         00087900
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00088000
               AGO   .ZG49E                                             00088100
.ZG49D         ANOP  ,                                                  00088200
&XMF           SETC  'S'         SET DEFAULT KEYWORD                    00088300
&XMFSCK        SETC  'COMPLETE'  COMPLETE CHECKING                      00088400
.ZG49E         ANOP  ,                                                  00088500
.********************************************************************   00088600
.***AG.MF02  FULL MACRO SYNTAX CHECKING                                 00088700
.********************************************************************   00088800
               ACTR  10000                                              00088900
.*-------------------------------------------------------------------   00089000
.***AG.MF03 MF=(SLE)                                                    00089100
               AIF   ('&XMF' EQ 'L').ZGMFX                              00089200
.*----------------------------------------------------------------***   00089300
.***AG.KXVAR05 NAME, RQD OUTPUT, KEYS -XVARIABLE KEY                    00089400
               AIF   (N'&DATAAREA LE 1).ZG2A    CK NUM                  00089500
&ZMS           SETC  '"DATAAREA='               *KPOSA* MNOTE           00089600
&ZMS           SETC  '&ZMS.&DATAAREA"'                                  00089700
&ZMS           SETC  '&ZMS "DATAAREA"'                                  00089800
               MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                00089900
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00090000
.ZG2A          ANOP  ,                                                  00090100
.*-------------------------------------------------------------------   00090200
.***AG.KXVAR06 NAME, RQD OUTPUT, KEYS -XVARIABLE                        00090300
&ZXDATAAREA    SETC  'OUTPUT'    SET IN/OUTPUT                          00090400
&XDATAAREA     SETC  '&DATAAREA(1)'             SET XVARIABLE           00090500
               AIF   (N'&DATAAREA GT 1).ZG2B    MULTI PARMS             00090600
&XDATAAREA     SETC  '&DATAAREA'                SET XVARIABLE           00090700
.ZG2B          AIF   (K'&DATAAREA(1) GT 0).ZG2C                         00090800
&ZXDATAAREA    SETC  ''          RESET IN/OUTPUT                        00090900
&ZMS           SETC  ' '         *KRQDA*                                00091000
&ZMS           SETC  '&ZMS "DATAAREA" KEY AND ITS'                      00091100
               MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                   00091200
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00091300
.ZG2C          ANOP  ,                                                  00091400
.*-------------------------------------------------------------------   00091500
.***AG.KCK02 NAME, RQD OUTPUT, KEYS -GPR OUT OF RANGE                   00091600
               AIF   (K'&ZXDATAAREA LE 0).ZG2R  NOT I/O                 00091700
               AIF   ('&XDATAAREA'(1,1) NE '(').ZG2R                    00091800
&ZCGPR         SETC  '&XDATAAREA'(2,K'&XDATAAREA-2)                     00091900
               AIF   ('&ZCGPR'(1,1) NE '0').ZG2P                        00092000
               AIF   (K'&ZCGPR GT 2).ZG2Q                               00092100
               AIF   ('&ZCGPR' EQ '0').ZG2Q                             00092200
&ZCGPR         SETC  '&ZCGPR'(2,1)                                      00092300
               AIF   (T'&ZCGPR NE 'N').ZG2Q     INVALID REG NAME        00092400
.ZG2P          ANOP  ,                                                  00092500
               AIF   (T'&ZCGPR NE 'N').ZG2R     NON NUMERIC             00092600
               AIF   ('&ZCGPR' LT '2').ZG2Q                             00092700
               AIF   ('&ZCGPR' LE '12').ZG2R                            00092800
.ZG2Q          ANOP  ,                                                  00092900
&ZMS           SETC  '"DATAAREA='               *KGPRA* MNOTE           00093000
&ZMS           SETC  '&ZMS.&DATAAREA"'                                  00093100
&ZMS           SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'          00093200
               MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                   00093300
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00093400
.ZG2R          ANOP  ,                                                  00093500
.*----------------------------------------------------------------***   00093600
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00093700
               AIF   (N'&DATALEN LE 1).ZG5A     CK NUM                  00093800
&ZMS           SETC  '"DATALEN='                *KPOSA* MNOTE           00093900
&ZMS           SETC  '&ZMS.&DATALEN"'                                   00094000
&ZMS           SETC  '&ZMS "DATALEN"'                                   00094100
               MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                00094200
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00094300
.ZG5A          ANOP  ,                                                  00094400
.*-------------------------------------------------------------------   00094500
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00094600
&ZXDATALEN     SETC  'INPUT'     SET IN/OUTPUT                          00094700
&XDATALEN      SETC  '&DATALEN(1)'              SET XVARIABLE           00094800
               AIF   (N'&DATALEN GT 1).ZG5B     MULTI PARMS             00094900
&XDATALEN      SETC  '&DATALEN'  SET XVARIABLE                          00095000
.ZG5B          AIF   (K'&DATALEN(1) GT 0).ZG5C                          00095100
&ZXDATALEN     SETC  ''          RESET IN/OUTPUT                        00095200
&ZMS           SETC  ' '         *KRQDA*                                00095300
&ZMS           SETC  '&ZMS "DATALEN" KEY AND ITS'                       00095400
               MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                   00095500
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00095600
.ZG5C          ANOP  ,                                                  00095700
.*-------------------------------------------------------------------   00095800
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00095900
               AIF   (K'&ZXDATALEN LE 0).ZG5R   NOT I/O                 00096000
               AIF   ('&XDATALEN'(1,1) NE '(').ZG5R                     00096100
&ZCGPR         SETC  '&XDATALEN'(2,K'&XDATALEN-2)                       00096200
               AIF   ('&ZCGPR'(1,1) NE '0').ZG5P                        00096300
               AIF   (K'&ZCGPR GT 2).ZG5Q                               00096400
               AIF   ('&ZCGPR' EQ '0').ZG5Q                             00096500
&ZCGPR         SETC  '&ZCGPR'(2,1)                                      00096600
               AIF   (T'&ZCGPR NE 'N').ZG5Q     INVALID REG NAME        00096700
.ZG5P          ANOP  ,                                                  00096800
               AIF   (T'&ZCGPR NE 'N').ZG5R     NON NUMERIC             00096900
               AIF   ('&ZCGPR' LT '2').ZG5Q                             00097000
               AIF   ('&ZCGPR' LE '12').ZG5R                            00097100
.ZG5Q          ANOP  ,                                                  00097200
&ZMS           SETC  '"DATALEN='                *KGPRA* MNOTE           00097300
&ZMS           SETC  '&ZMS.&DATALEN"'                                   00097400
&ZMS           SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'          00097500
               MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                   00097600
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00097700
.ZG5R          ANOP  ,                                                  00097800
.*-------------------------------------------------------------------   00097900
.***AG.KKWRD07 VALUE, OPT INPUT, ME KEYWORD -MULTIPLE KEYWORDS          00098000
&ZI            SETA  0           XVARIABLE ARRAY INDEX                  00098100
&ZJ            SETA  0           SUBLIST INDEX                          00098200
.ZG8A          ANOP  ,                                                  00098300
&ZJ            SETA  &ZJ+1       NEXT SUBLIST                           00098400
               AIF   (&ZJ GT N'&TYPE).ZG8C      DONE                    00098500
               AIF   (K'&TYPE(&ZJ) LE 0).ZG8A   NULL                    00098600
&ZI            SETA  &ZI+1       NEXT ARRAY ENTRY                       00098700
&XTYPE(&ZI)   SETC  ''           NULL ENTRY                             00098800
&XTYPE(&ZI+1) SETC  ''           NULL AT ARRAY END                      00098900
.ZG9B  AIF   ('&TYPE(&ZJ)' NE 'ALL').ZG10B                              00099000
&XTYPE(&ZI)   SETC  'ALL'        SET KEYWORD                            00099100
.ZG10B  AIF   ('&TYPE(&ZJ)' NE 'PATH').ZG11B                            00099200
&XTYPE(&ZI)   SETC  'PATH'       SET KEYWORD                            00099300
.ZG11B  AIF   ('&TYPE(&ZJ)' NE 'MSGPEND').ZG12B                         00099400
&XTYPE(&ZI)   SETC  'MSGPEND'    SET KEYWORD                            00099500
.ZG12B  AIF   ('&TYPE(&ZJ)' NE 'SYSTEM').ZG13B                          00099600
&XTYPE(&ZI)   SETC  'SYSTEM'     SET KEYWORD                            00099700
.ZG13B  AIF   ('&TYPE(&ZJ)' NE 'SRCDST').ZG14B                          00099800
&XTYPE(&ZI)   SETC  'SRCDST'     SET KEYWORD                            00099900
.ZG14B  AIF   ('&TYPE(&ZJ)' NE 'MEMBER').ZG15B                          00100000
&XTYPE(&ZI)   SETC  'MEMBER'     SET KEYWORD                            00100100
.ZG15B         AIF   ('&XTYPE(&ZI)' NE '').ZG8A                         00100200
&ZI            SETA  &ZI-1       BACKUP ARRAY                           00100300
&ZMS           SETC  '"TYPE='    *KVKWA* MNOTE                          00100400
&ZMS           SETC  '&ZMS.&TYPE"'                                      00100500
&ZMS           SETC  '&ZMS ARGUMENT &ZJ'                                00100600
&ZMS           SETC  '&ZMS IS AN UNKNOWN KEYWORD. '                     00100700
&ZMS           SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                00100800
&ZMS           SETC  '&ZMS "ALL",'                                      00100900
&ZMS           SETC  '&ZMS "PATH",'                                     00101000
&ZMS           SETC  '&ZMS "MSGPEND",'                                  00101100
&ZMS           SETC  '&ZMS "SYSTEM",'                                   00101200
&ZMS           SETC  '&ZMS "SRCDST",'                                   00101300
&ZMS           SETC  '&ZMS OR "MEMBER".'                                00101400
               MNOTE 8,' &ZMS '                                         00101500
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00101600
               AGO   .ZG8A                                              00101700
.*-------------------------------------------------------------------   00101800
.***AG.KKWRD08 VALUE, OPT INPUT, ME KEYWORD -MULTIPLE KEYWORDS          00101900
.ZG8C          ANOP  ,                                                  00102000
&ZXTYPE        SETC  'INPUT'     SET IN/OUTPUT                          00102100
               AIF   (&ZI GT 0).ZG8D            VALID KEYWORD           00102200
&XTYPE(1)  SETC  'ALL'           SET DEFAULT KEYWORD                    00102300
&XTYPE(2)  SETC  ''              NULL AT ARRAY END                      00102400
.ZG8D          ANOP  ,                                                  00102500
.*----------------------------------------------------------------***   00102600
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00102700
               AIF   (N'&MEMTOKEN LE 1).ZG17A   CK NUM                  00102800
&ZMS           SETC  '"MEMTOKEN='               *KPOSA* MNOTE           00102900
&ZMS           SETC  '&ZMS.&MEMTOKEN"'                                  00103000
&ZMS           SETC  '&ZMS "MEMTOKEN"'                                  00103100
               MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                00103200
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00103300
.ZG17A         ANOP  ,                                                  00103400
.*-------------------------------------------------------------------   00103500
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00103600
&ZXMEMTOKEN    SETC  'INPUT'     SET IN/OUTPUT                          00103700
&XMEMTOKEN     SETC  '0'                                                00103800
               AIF   (K'&MEMTOKEN(1) LE 0).ZG17B  PARM                  00103900
&XMEMTOKEN     SETC  '&MEMTOKEN(1)'             SET XVARIABLE           00104000
               AIF   (N'&MEMTOKEN GT 1).ZG17B   MULTI PARMS             00104100
&XMEMTOKEN     SETC  '&MEMTOKEN'                SET XVARIABLE           00104200
.ZG17B         ANOP  ,                                                  00104300
.*-------------------------------------------------------------------   00104400
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00104500
               AIF   (K'&ZXMEMTOKEN LE 0).ZG17R  NOT I/O                00104600
               AIF   ('&XMEMTOKEN'(1,1) NE '(').ZG17R                   00104700
&ZCGPR         SETC  '&XMEMTOKEN'(2,K'&XMEMTOKEN-2)                     00104800
               AIF   ('&ZCGPR'(1,1) NE '0').ZG17P                       00104900
               AIF   (K'&ZCGPR GT 2).ZG17Q                              00105000
               AIF   ('&ZCGPR' EQ '0').ZG17Q                            00105100
&ZCGPR         SETC  '&ZCGPR'(2,1)                                      00105200
               AIF   (T'&ZCGPR NE 'N').ZG17Q    INVALID REG NAME        00105300
.ZG17P         ANOP  ,                                                  00105400
               AIF   (T'&ZCGPR NE 'N').ZG17R    NON NUMERIC             00105500
               AIF   ('&ZCGPR' LT '2').ZG17Q                            00105600
               AIF   ('&ZCGPR' LE '12').ZG17R                           00105700
.ZG17Q         ANOP  ,                                                  00105800
&ZMS           SETC  '"MEMTOKEN='               *KGPRA* MNOTE           00105900
&ZMS           SETC  '&ZMS.&MEMTOKEN"'                                  00106000
&ZMS           SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'          00106100
               MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                   00106200
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00106300
.ZG17R         ANOP  ,                                                  00106400
.*----------------------------------------------------------------***   00106500
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00106600
               AIF   (N'&AMDALEVEL LE 1).ZG20A  CK NUM                  00106700
&ZMS           SETC  '"AMDALEVEL='              *KPOSA* MNOTE           00106800
&ZMS           SETC  '&ZMS.&AMDALEVEL"'                                 00106900
&ZMS           SETC  '&ZMS "AMDALEVEL"'                                 00107000
               MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                00107100
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00107200
.ZG20A         ANOP  ,                                                  00107300
.*-------------------------------------------------------------------   00107400
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00107500
&ZXAMDALEVEL   SETC  'INPUT'     SET IN/OUTPUT                          00107600
&XAMDALEVEL    SETC  '0'                                                00107700
               AIF   (K'&AMDALEVEL(1) LE 0).ZG20B  PARM                 00107800
&XAMDALEVEL    SETC  '&AMDALEVEL(1)'            SET XVARIABLE           00107900
               AIF   (N'&AMDALEVEL GT 1).ZG20B  MULTI PARMS             00108000
&XAMDALEVEL    SETC  '&AMDALEVEL'               SET XVARIABLE           00108100
.ZG20B         ANOP  ,                                                  00108200
.*-------------------------------------------------------------------   00108300
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00108400
               AIF   (K'&ZXAMDALEVEL LE 0).ZG20R  NOT I/O               00108500
               AIF   ('&XAMDALEVEL'(1,1) NE '(').ZG20R                  00108600
&ZCGPR         SETC  '&XAMDALEVEL'(2,K'&XAMDALEVEL-2)                   00108700
               AIF   ('&ZCGPR'(1,1) NE '0').ZG20P                       00108800
               AIF   (K'&ZCGPR GT 2).ZG20Q                              00108900
               AIF   ('&ZCGPR' EQ '0').ZG20Q                            00109000
&ZCGPR         SETC  '&ZCGPR'(2,1)                                      00109100
               AIF   (T'&ZCGPR NE 'N').ZG20Q    INVALID REG NAME        00109200
.ZG20P         ANOP  ,                                                  00109300
               AIF   (T'&ZCGPR NE 'N').ZG20R    NON NUMERIC             00109400
               AIF   ('&ZCGPR' LT '2').ZG20Q                            00109500
               AIF   ('&ZCGPR' LE '12').ZG20R                           00109600
.ZG20Q         ANOP  ,                                                  00109700
&ZMS           SETC  '"AMDALEVEL='              *KGPRA* MNOTE           00109800
&ZMS           SETC  '&ZMS.&AMDALEVEL"'                                 00109900
&ZMS           SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'          00110000
               MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                   00110100
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00110200
.ZG20R         ANOP  ,                                                  00110300
.*----------------------------------------------------------------***   00110400
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00110500
               AIF   (N'&RETCODE LE 1).ZG23A    CK NUM                  00110600
&ZMS           SETC  '"RETCODE='                *KPOSA* MNOTE           00110700
&ZMS           SETC  '&ZMS.&RETCODE"'                                   00110800
&ZMS           SETC  '&ZMS "RETCODE"'                                   00110900
               MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                00111000
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00111100
.ZG23A         ANOP  ,                                                  00111200
.*-------------------------------------------------------------------   00111300
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00111400
               AIF   (K'&RETCODE(1) LE 0).ZG23C  NO PARM                00111500
&ZXRETCODE     SETC  'OUTPUT'    SET OUTPUT                             00111600
&XRETCODE      SETC  '&RETCODE(1)'              SET XVARIABLE           00111700
               AIF   (N'&RETCODE GT 1).ZG23C                            00111800
&XRETCODE      SETC  '&RETCODE'  SET XVARIABLE                          00111900
.ZG23C         ANOP  ,                                                  00112000
.*-------------------------------------------------------------------   00112100
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00112200
               AIF   (K'&ZXRETCODE LE 0).ZG23R  NOT I/O                 00112300
               AIF   ('&XRETCODE'(1,1) NE '(').ZG23R                    00112400
&ZCGPR         SETC  '&XRETCODE'(2,K'&XRETCODE-2)                       00112500
               AIF   ('&ZCGPR'(1,1) NE '0').ZG23P                       00112600
               AIF   (K'&ZCGPR GT 2).ZG23Q                              00112700
               AIF   ('&ZCGPR' EQ '0').ZG23Q                            00112800
&ZCGPR         SETC  '&ZCGPR'(2,1)                                      00112900
               AIF   (T'&ZCGPR NE 'N').ZG23Q    INVALID REG NAME        00113000
.ZG23P         ANOP  ,                                                  00113100
               AIF   (T'&ZCGPR NE 'N').ZG23R    NON NUMERIC             00113200
               AIF   ('&ZCGPR' LT '2').ZG23Q                            00113300
               AIF   ('&ZCGPR' LE '12').ZG23R                           00113400
.ZG23Q         ANOP  ,                                                  00113500
&ZMS           SETC  '"RETCODE='                *KGPRA* MNOTE           00113600
&ZMS           SETC  '&ZMS.&RETCODE"'                                   00113700
&ZMS           SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'          00113800
               MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                   00113900
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00114000
.ZG23R         ANOP  ,                                                  00114100
.*----------------------------------------------------------------***   00114200
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00114300
               AIF   (N'&RSNCODE LE 1).ZG26A    CK NUM                  00114400
&ZMS           SETC  '"RSNCODE='                *KPOSA* MNOTE           00114500
&ZMS           SETC  '&ZMS.&RSNCODE"'                                   00114600
&ZMS           SETC  '&ZMS "RSNCODE"'                                   00114700
               MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                00114800
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00114900
.ZG26A         ANOP  ,                                                  00115000
.*-------------------------------------------------------------------   00115100
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00115200
               AIF   (K'&RSNCODE(1) LE 0).ZG26C  NO PARM                00115300
&ZXRSNCODE     SETC  'OUTPUT'    SET OUTPUT                             00115400
&XRSNCODE      SETC  '&RSNCODE(1)'              SET XVARIABLE           00115500
               AIF   (N'&RSNCODE GT 1).ZG26C                            00115600
&XRSNCODE      SETC  '&RSNCODE'  SET XVARIABLE                          00115700
.ZG26C         ANOP  ,                                                  00115800
.*-------------------------------------------------------------------   00115900
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00116000
               AIF   (K'&ZXRSNCODE LE 0).ZG26R  NOT I/O                 00116100
               AIF   ('&XRSNCODE'(1,1) NE '(').ZG26R                    00116200
&ZCGPR         SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                       00116300
               AIF   ('&ZCGPR'(1,1) NE '0').ZG26P                       00116400
               AIF   (K'&ZCGPR GT 2).ZG26Q                              00116500
               AIF   ('&ZCGPR' EQ '0').ZG26Q                            00116600
&ZCGPR         SETC  '&ZCGPR'(2,1)                                      00116700
               AIF   (T'&ZCGPR NE 'N').ZG26Q    INVALID REG NAME        00116800
.ZG26P         ANOP  ,                                                  00116900
               AIF   (T'&ZCGPR NE 'N').ZG26R    NON NUMERIC             00117000
               AIF   ('&ZCGPR' LT '2').ZG26Q                            00117100
               AIF   ('&ZCGPR' LE '12').ZG26R                           00117200
.ZG26Q         ANOP  ,                                                  00117300
&ZMS           SETC  '"RSNCODE='                *KGPRA* MNOTE           00117400
&ZMS           SETC  '&ZMS.&RSNCODE"'                                   00117500
&ZMS           SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'          00117600
               MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                   00117700
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00117800
.ZG26R         ANOP  ,                                                  00117900
.******************************************************************     00118000
.***AH.P00 CHECK STANDALONE POSITIONAL VARIABLES                        00118100
.******************************************************************     00118200
               ACTR  10000                                              00118300
.*----------------------------------------------------------------***   00118400
.***AH.P02 EXTRA POSITIONALS                                            00118500
               AIF   (N'&SYSLIST LE 0).ZGLISTX  NO EXTRAS               00118600
               AIF   (N'&SYSLIST NE 2).ZGLISTX1  NOT NULL               00118700
               AIF   ('&SYSLIST(1)' NE '').ZGLISTX1  NOT NULL           00118800
               AIF   ('&SYSLIST(2)' EQ '').ZGLISTX  NOT NULL            00118900
.ZGLISTX1      ANOP  ,                                                  00119000
&ZCVAL         SETC  ''          ERROR FIELD                            00119100
&ZAWRK         SETA  0           POSITIONAL NUMBER                      00119200
.ZGLIST2       ANOP  ,                                                  00119300
&ZAWRK         SETA  &ZAWRK+1    NEXT POSITIONAL                        00119400
               AIF   (&ZAWRK GT N'&SYSLIST).ZGLIST3  DONE               00119500
&ZCVAL         SETC '&ZCVAL,&SYSLIST(&ZAWRK)'   EXTRA                   00119600
               AGO   .ZGLIST2                                           00119700
.*                                                                      00119800
.ZGLIST3       ANOP  ,                                                  00119900
&ZCVAL         SETC '&ZCVAL'(2,K'&ZCVAL-1)      STRIP COMMA             00120000
&ZMS           SETC  'POSITIONAL ARGUMENT(S),'  *PPOSA* MNOTE           00120100
&ZMS           SETC  '&ZMS "&ZCVAL"'                                    00120200
&ZMS           SETC  '&ZMS CANNOT BE USED.'                             00120300
&ZMS           SETC  '&ZMS NO POSITIONAL ARGUMENTS'                     00120400
               MNOTE 8,' &ZMS ARE ALLOWED.'                             00120500
&ZMACRET       SETA  8           SET MACRO ERROR RETURN CODE            00120600
.ZGLISTX       ANOP  ,                                                  00120700
&ZASYSLNDX     SETA  0                                                  00120800
.*-------------------------------------------------------------------   00120900
.***AG.MF04 MF=(SLE)                                                    00121000
.ZGMFX         ANOP  ,           END OF FULL SYNTAX CHECK               00121100
.*******************************************************************    00121200
.***AE.ZMR01 NO CODE GENERATED IF ERRORS DETECTED                       00121300
.*******************************************************************    00121400
               AIF   (&ZMACRET NE 0).ZLX2       ERROR DETECTED          00121500
.*******************************************************************    00121600
.***AE.01  START OF IXCMG MACRO CODE                                    00121700
.*******************************************************************    00121800
               LCLC  &M0M0001                 NAME                      00121900
&M0M0001       SETC  '&XLABEL'                SET NAME                  00122000
               AIF   (K'&XLABEL NE 0).XLAB2                             00122100
&M0M0001       SETC  'M00M&SYSNDX'            DEFAULT NAME              00122200
.*                                                                      00122300
.XLAB2         ANOP  ,                                                  00122400
               AIF   ('&XMF' EQ 'L').XLAB3                              00122500
&M0M0001 DS    0H                             IXCMG-1                   00122600
.XLAB3         ANOP  ,                                                  00122700
.*******************************************************************    00122800
.***AE.PR01 PRINT CONTROLS, DEFAULT IS YES                              00122900
.*******************************************************************    00123000
              PUSH  PRINT                                               00123100
               AIF   ('&ZPRINT' NE 'NO').ZPRINTX  TURN PRINT ON         00123200
               PRINT OFF         ++ PR01                                00123300
               AGO   .ZPRNTXX                                           00123400
.ZPRINTX       PRINT ON                                                 00123500
.ZPRNTXX       ANOP  ,                                                  00123600
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00123700
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00123800
.********************************************************************   00123900
.***AL.L01 INTERNAL ARRAY TO PRODUCE FORMATTED CODE                     00124000
.********************************************************************   00124100
                      LCLA  &ZOPN          LIST INSTRUCTION INDEX       00124200
                      LCLA  &ZOPN1         INVOCATION INDEX             00124300
                      LCLC  &ZOPL(4095)    LABEL                        00124400
                      LCLC  &ZOPO(4095)    OPERATION                    00124500
                      LCLC  &ZOPV(4095)    VALUE                        00124600
                      LCLC  &ZOPD(4095)    DESCRIPTION                  00124700
.*                                                                      00124800
&ZOPN                 SETA  0              INITIAL INST INDEX VALUE     00124900
.******************************************************************     00125000
.***AL.L10 IXCMG FMT=LIST MF=S|L PARAMETERS                             00125100
.******************************************************************     00125200
                      AIF   ('&XMF' EQ 'L').ZLMFSL2                     00125300
                      AIF   ('&XMF' NE 'S').ZLMFSLX                     00125400
&XMFCTRL              SETC  '#Z'.'&SYSNDX'(1,4).'A'                     00125500
&XMFATTR              SETC  '0D'                                        00125600
.*                                                                      00125700
&ZOPN                 SETA  &ZOPN+1                                     00125800
&ZOPL(&ZOPN)          SETC  ' '                                         00125900
                      AIF   (&SYSALVL NE 0).ZALVL6A                     00126000
&ZOPO(&ZOPN)          SETC  'B'                                         00126100
&ZOPV(&ZOPN)          SETC  '&XMFCTRL.S'                                00126200
                      AGO   .ZALVL6B                                    00126300
.ZALVL6A              ANOP                                              00126400
&ZOPO(&ZOPN)          SETC  'BRAS'                                      00126500
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL.S'                              00126600
.ZALVL6B              ANOP                                              00126700
&ZOPD(&ZOPN)          SETC  '++ IXCMG ARG PARMS'                        00126800
.*                                                                      00126900
&ZOPN                 SETA  &ZOPN+1                                     00127000
&ZOPL(&ZOPN)          SETC  ' '                                         00127100
&ZOPO(&ZOPN)          SETC  'SPACE'                                     00127200
&ZOPV(&ZOPN)          SETC  '1'                                         00127300
&ZOPD(&ZOPN)          SETC  ' '                                         00127400
.*                                                                      00127500
.ZLMFSL2              ANOP  ,                                           00127600
.*-------------------------------------------------------------------   00127700
.***AM.L00  IXCMG FMT=LIST name                                         00127800
                      AIF   ('&XMF' NE 'L').ZLMFSL2M                    00127900
&ZOPN                 SETA &ZOPN+1                                      00128000
&ZOPL(&ZOPN)          SETC '&M0M0001'                                   00128100
&ZOPO(&ZOPN)          SETC 'EQU'                                        00128200
&ZOPV(&ZOPN)          SETC '&XMFCTRL'                                   00128300
&ZOPD(&ZOPN)          SETC '++ IXCMG NAME'                              00128400
.ZLMFSL2M             ANOP  ,                                           00128500
.*-------------------------------------------------------------------   00128600
.***AM.L01  IXCMG FMT=LIST PARAMETERS                                   00128700
&ZOPN                 SETA &ZOPN+1                                      00128800
&ZOPL(&ZOPN)          SETC '&XMFCTRL'                                   00128900
&ZOPO(&ZOPN)          SETC 'DS'                                         00129000
&ZOPV(&ZOPN)          SETC '&XMFATTR'                                   00129100
&ZOPD(&ZOPN)          SETC '++ IXCMG PARM LIST'                         00129200
.*-------------------------------------------------------------------   00129300
.***AM.L02 XVERSION XL1                                                 00129400
&ZOPN                 SETA &ZOPN+1                                      00129500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XVERSION'                         00129600
&ZOPO(&ZOPN)          SETC 'DS'                                         00129700
&ZOPV(&ZOPN)          SETC 'XL1'                                        00129800
&ZOPD(&ZOPN)          SETC '++ INPUT XVERSION'                          00129900
.*-------------------------------------------------------------------   00130000
.***AM.L09  XSERVICE XL1                                                00130100
&ZOPN                 SETA &ZOPN+1                                      00130200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSERVICE'                         00130300
&ZOPO(&ZOPN)          SETC 'DS'                                         00130400
&ZOPV(&ZOPN)          SETC 'XL1'                                        00130500
&ZOPD(&ZOPN)          SETC '++ CONSTANT  XSERVICE'                      00130600
.*-------------------------------------------------------------------   00130700
.***AM.L03 XTYPE BL.8                                                   00130800
&ZOPN                 SETA &ZOPN+1                                      00130900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XTYPE'                            00131000
&ZOPO(&ZOPN)          SETC 'DS'                                         00131100
&ZOPV(&ZOPN)          SETC 'BL.8'                                       00131200
&ZOPD(&ZOPN)          SETC '++ INPUT'                                   00131300
.*                                                                      00131400
&ZOPN                 SETA  &ZOPN+1                                     00131500
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XTYPE_ALL'                       00131600
&ZOPO(&ZOPN)          SETC  'EQU'                                       00131700
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             00131800
&ZOPD(&ZOPN)          SETC  '++ XTYPE.'                                 00131900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).ALL'                          00132000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00132100
.*                                                                      00132200
&ZOPN                 SETA  &ZOPN+1                                     00132300
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XTYPE_MEMBER'                    00132400
&ZOPO(&ZOPN)          SETC  'EQU'                                       00132500
&ZOPV(&ZOPN)          SETC  'B''00010000'''                             00132600
&ZOPD(&ZOPN)          SETC  '++ XTYPE.'                                 00132700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).MEMBER'                       00132800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00132900
.*                                                                      00133000
&ZOPN                 SETA  &ZOPN+1                                     00133100
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XTYPE_SRCDST'                    00133200
&ZOPO(&ZOPN)          SETC  'EQU'                                       00133300
&ZOPV(&ZOPN)          SETC  'B''00001000'''                             00133400
&ZOPD(&ZOPN)          SETC  '++ XTYPE.'                                 00133500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).SRCDST'                       00133600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00133700
.*                                                                      00133800
&ZOPN                 SETA  &ZOPN+1                                     00133900
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XTYPE_SYSTEM'                    00134000
&ZOPO(&ZOPN)          SETC  'EQU'                                       00134100
&ZOPV(&ZOPN)          SETC  'B''00000100'''                             00134200
&ZOPD(&ZOPN)          SETC  '++ XTYPE.'                                 00134300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).SYSTEM'                       00134400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00134500
.*                                                                      00134600
&ZOPN                 SETA  &ZOPN+1                                     00134700
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XTYPE_MSGPEND'                   00134800
&ZOPO(&ZOPN)          SETC  'EQU'                                       00134900
&ZOPV(&ZOPN)          SETC  'B''00000010'''                             00135000
&ZOPD(&ZOPN)          SETC  '++ XTYPE.'                                 00135100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).MSGPEND'                      00135200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00135300
.*                                                                      00135400
&ZOPN                 SETA  &ZOPN+1                                     00135500
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XTYPE_PATH'                      00135600
&ZOPO(&ZOPN)          SETC  'EQU'                                       00135700
&ZOPV(&ZOPN)          SETC  'B''00000001'''                             00135800
&ZOPD(&ZOPN)          SETC  '++ XTYPE.'                                 00135900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).PATH'                         00136000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00136100
.*-------------------------------------------------------------------   00136200
.***AM.L09  XAMDALEVEL XL1                                              00136300
&ZOPN                 SETA &ZOPN+1                                      00136400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XAMDALEVEL'                       00136500
&ZOPO(&ZOPN)          SETC 'DS'                                         00136600
&ZOPV(&ZOPN)          SETC 'XL1'                                        00136700
&ZOPD(&ZOPN)          SETC '++ &ZXAMDALEVEL  XAMDALEVEL'                00136800
.*-------------------------------------------------------------------   00136900
.***AM.L09 ADDR XDATAAREA A                                             00137000
&ZOPN                 SETA &ZOPN+1                                      00137100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XDATAAREA_ADDR'                   00137200
&ZOPO(&ZOPN)          SETC 'DS'                                         00137300
&ZOPV(&ZOPN)          SETC 'A'                                          00137400
&ZOPD(&ZOPN)          SETC '++ &ZXDATAAREA ADDR XDATAAREA'              00137500
.*-------------------------------------------------------------------   00137600
.***AM.L09 ALET XDATAAREA F                                             00137700
&ZOPN                 SETA &ZOPN+1                                      00137800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XDATAAREA_ALET'                   00137900
&ZOPO(&ZOPN)          SETC 'DS'                                         00138000
&ZOPV(&ZOPN)          SETC 'F'                                          00138100
&ZOPD(&ZOPN)          SETC '++ &ZXDATAAREA ALET XDATAAREA'              00138200
.*-------------------------------------------------------------------   00138300
.***AM.L09  XDATALEN F                                                  00138400
&ZOPN                 SETA &ZOPN+1                                      00138500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XDATALEN'                         00138600
&ZOPO(&ZOPN)          SETC 'DS'                                         00138700
&ZOPV(&ZOPN)          SETC 'F'                                          00138800
&ZOPD(&ZOPN)          SETC '++ &ZXDATALEN  XDATALEN'                    00138900
.*-------------------------------------------------------------------   00139000
.***AM.L09  XRSV0010 CL4                                                00139100
&ZOPN                 SETA &ZOPN+1                                      00139200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0010'                         00139300
&ZOPO(&ZOPN)          SETC 'DS'                                         00139400
&ZOPV(&ZOPN)          SETC 'CL4'                                        00139500
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV0010'                      00139600
.*-------------------------------------------------------------------   00139700
.***AM.MLM2 SAVED LOCATION COUNTER                                      00139800
                      AIF  (&XPLISTVER GE 1).ZL14LA                     00139900
                      AIF  ('&ZENDBASEPL' NE '').ZL14LA                 00140000
&ZENDBASEPL           SETC 'YES'                                        00140100
&ZOPN                 SETA &ZOPN+1                                      00140200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._PL_END'                           00140300
&ZOPO(&ZOPN)          SETC 'EQU'                                        00140400
&ZOPV(&ZOPN)          SETC '*'                                          00140500
&ZOPD(&ZOPN)          SETC '++ END OF BASE PLIST'                       00140600
.ZL14LA               ANOP  ,                                           00140700
.*-------------------------------------------------------------------   00140800
.***AM.LVER1                                                            00140900
                      AIF  (&XPLISTVER LT 1).ZL14L                      00141000
.*-------------------------------------------------------------------   00141100
.*-------------------------------------------------------------------   00141200
.***AM.L09  XMEMTOKEN BL.64                                             00141300
&ZOPN                 SETA &ZOPN+1                                      00141400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMEMTOKEN'                        00141500
&ZOPO(&ZOPN)          SETC 'DS'                                         00141600
&ZOPV(&ZOPN)          SETC 'BL.64'                                      00141700
&ZOPD(&ZOPN)          SETC '++ &ZXMEMTOKEN  XMEMTOKEN'                  00141800
.*-------------------------------------------------------------------   00141900
.***AM.LVER2                                                            00142000
.ZL14L                ANOP  ,                                           00142100
.*-------------------------------------------------------------------   00142200
.*-------------------------------------------------------------------   00142300
.***AM.L10 END OF IXCMG LIST PARAMETERS                                 00142400
&ZOPN                 SETA &ZOPN+1                                      00142500
&ZOPL(&ZOPN)          SETC '&XMFCTRL.L'                                 00142600
&ZOPO(&ZOPN)          SETC 'EQU'                                        00142700
&ZOPV(&ZOPN)          SETC '*-&XMFCTRL'                                 00142800
&ZOPD(&ZOPN)          SETC '++ LENGTH OF PLIST'                         00142900
.*                                                                      00143000
&ZOPN                 SETA &ZOPN+1                                      00143100
&ZOPL(&ZOPN)          SETC ' '                                          00143200
&ZOPO(&ZOPN)          SETC 'SPACE'                                      00143300
&ZOPV(&ZOPN)          SETC '1'                                          00143400
&ZOPD(&ZOPN)          SETC ' '                                          00143500
.*-------------------------------------------------------------------   00143600
.***AL.L12 IXCMG FMT=LIST MF=S|L PARAMETERS                             00143700
                      AIF   ('&XMF' EQ 'L').ZMFLX  DONE IF MF=L         00143800
.*                                                                      00143900
&ZOPN                 SETA  &ZOPN+1                                     00144000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL.S'                                00144100
&ZOPO(&ZOPN)          SETC  'DC'                                        00144200
&ZOPV(&ZOPN)          SETC  '0H''0'''                                   00144300
&ZOPD(&ZOPN)          SETC  '++ IXCMG ARG PARMS'                        00144400
.*                                                                      00144500
.ZLMFSLX              ANOP  ,                                           00144600
.*-------------------------------------------------------------------   00144700
.***AL.L13 SET ZPLLEN TO ITS APPROPRIATE VALUE                          00144800
&ZPLLEN               SETA 20                                           00144900
.*                                                                      00145000
                      AIF  (&XPLISTVER LT 1).ZLLEN2Z                    00145100
&ZPLLEN               SETA 28                                           00145200
.ZLLEN2Z              ANOP  ,                                           00145300
.*                                                                      00145400
.******************************************************************     00145500
.***AI.L01 IXCMG FMT=LIST FILL IN PARAMETER AREA                        00145600
.******************************************************************     00145700
                      ACTR  10000                                       00145800
&ZCVAL                SETC  'LA'           ASSUME XA MODE               00145900
                      AIF   ('&SYSASCE' EQ 'P').ZIMFXA  SYSSTATE PRI    00146000
&ZCVAL                SETC  'LAE'          XAX MODE                     00146100
.ZIMFXA               ANOP ,                                            00146200
.*                                                                      00146300
                      AIF   ('&XMFCTRL'(1,1) NE '(').ZIMFN2  NOT GPR    00146400
&ZCGPR                SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)  GET GPR         00146500
                      AIF   ('&ZCGPR' EQ 'GPR1').ZIMFNX                 00146600
                      AIF   ('&ZCGPR' EQ 'GPR01').ZIMFNX                00146700
                      AIF   ('&ZCGPR' EQ 'REG1').ZIMFNX                 00146800
                      AIF   ('&ZCGPR' EQ 'REG01').ZIMFNX                00146900
                      AIF   ('&ZCGPR' EQ 'R1').ZIMFNX                   00147000
                      AIF   ('&ZCGPR' EQ '1').ZIMFNX                    00147100
                      AIF   ('&ZCGPR' EQ '01').ZIMFNX                   00147200
&ZOPN                 SETA  &ZOPN+1                                     00147300
&ZOPL(&ZOPN)          SETC  ' '                                         00147400
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00147500
&ZOPV(&ZOPN)          SETC  '1,0(,&ZCGPR)'                              00147600
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00147700
                      AGO   .ZIMFNX                                     00147800
.*                                                                      00147900
.ZIMFN2               ANOP ,                                            00148000
                      AIF   (&SYSALVL EQ 0).ZIMFNX1                     00148100
                      AIF   ('&XMF' NE 'S').ZIMFNX1                     00148200
                      AIF   ('&ZCVAL' NE 'LAE').ZIMFNX                  00148300
&ZOPN                 SETA  &ZOPN+1                                     00148400
&ZOPL(&ZOPN)          SETC  ' '                                         00148500
&ZOPO(&ZOPN)          SETC  'LAE'                                       00148600
&ZOPV(&ZOPN)          SETC  '1,0(1,0)'                                  00148700
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00148800
                      AGO   .ZIMFNX                                     00148900
.ZIMFNX1              ANOP ,                                            00149000
&ZOPN                 SETA  &ZOPN+1                                     00149100
&ZOPL(&ZOPN)          SETC  ' '                                         00149200
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00149300
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL'                                00149400
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00149500
.ZIMFNX               ANOP ,                                            00149600
.********************************************************************   00149700
.***AI.L02 IXCMG FMT=LIST INITIALIZE PARAMETER AREA                     00149800
.********************************************************************   00149900
.***AI.L03 MF=(SLE)                                                     00150000
                      AIF   ('&XMF' EQ 'L').ZIMFLX                      00150100
.*                                                                      00150200
&ZOPN                 SETA  &ZOPN+1                                     00150300
&ZOPL(&ZOPN)          SETC  ' '                                         00150400
&ZOPO(&ZOPN)          SETC  'XC'                                        00150500
&ZOPV(&ZOPN)          SETC  '0(&ZPLLEN,1),0(1)'                         00150600
&ZOPD(&ZOPN)          SETC  '++ INITIALIZE'                             00150700
.ZIMFLX               ANOP  ,                                           00150800
.*-------------------------------------------------------------------   00150900
.***AI.L04A XVERSION XL1                                                00151000
                      AIF   (&XPLISTVER EQ 0).ZIMFVW                    00151100
&ZOPN                 SETA  &ZOPN+1                                     00151200
&ZOPL(&ZOPN)          SETC  ' '                                         00151300
&ZOPO(&ZOPN)          SETC  'MVI'                                       00151400
&ZOPV(&ZOPN)          SETC  '0(1),&XPLISTVER'                           00151500
&ZOPD(&ZOPN)          SETC  '++ INPUT XVERSION XL1'                     00151600
.ZIMFVW               ANOP  ,                                           00151700
.*-------------------------------------------------------------------   00151800
.***AI.L53 XSERVICE XL1                                                 00151900
&ZOPN                 SETA  &ZOPN+1                                     00152000
&ZOPL(&ZOPN)          SETC  ' '                                         00152100
&ZOPO(&ZOPN)          SETC  'MVI'                                       00152200
&ZOPV(&ZOPN)          SETC  '1(1),14'                                   00152300
&ZOPD(&ZOPN)          SETC  '++ XL1 CONSTANT'                           00152400
.*-------------------------------------------------------------------   00152500
.***AI.L05 XTYPE BL1                                                    00152600
&ZW                   SETC  ''                                          00152700
&ZCLNG                SETC  ''             RESET BIT ON FLAG            00152800
.*-------------------------------------------------------------------   00152900
.***AI.L09 XTYPE "ALL"                                                  00153000
.***      BL1'1XXXXXXX'                                                 00153100
&ZI                   SETA  0              RESET ARRAY INDEX            00153200
.ZI4A                 ANOP  ,                                           00153300
&ZI                   SETA  &ZI+1          NEXT ARRAY ENTRY             00153400
                      AIF   (K'&XTYPE(&ZI) LE 0).ZI4B                   00153500
         AIF   ('&XTYPE(&ZI)' NE 'ALL').ZI4A                            00153600
&ZW                   SETC  '&ZW.1'                                     00153700
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00153800
                      AGO   .ZI4C                                       00153900
.*                                                                      00154000
.ZI4B                 ANOP  ,                                           00154100
&ZW                   SETC  '&ZW.0'                                     00154200
.ZI4C                 ANOP  ,                                           00154300
.*-------------------------------------------------------------------   00154400
.***AI.L09 XTYPE "MEMBER"                                               00154500
.***      BL1'XXX1XXXX'                                                 00154600
&ZI                   SETA  0              RESET ARRAY INDEX            00154700
.ZI5A                 ANOP  ,                                           00154800
&ZI                   SETA  &ZI+1          NEXT ARRAY ENTRY             00154900
                      AIF   (K'&XTYPE(&ZI) LE 0).ZI5B                   00155000
         AIF   ('&XTYPE(&ZI)' NE 'MEMBER').ZI5A                         00155100
&ZW                   SETC  '&ZW.001'                                   00155200
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00155300
                      AGO   .ZI5C                                       00155400
.*                                                                      00155500
.ZI5B                 ANOP  ,                                           00155600
&ZW                   SETC  '&ZW.000'                                   00155700
.ZI5C                 ANOP  ,                                           00155800
.*-------------------------------------------------------------------   00155900
.***AI.L09 XTYPE "SRCDST"                                               00156000
.***      BL1'XXXX1XXX'                                                 00156100
&ZI                   SETA  0              RESET ARRAY INDEX            00156200
.ZI6A                 ANOP  ,                                           00156300
&ZI                   SETA  &ZI+1          NEXT ARRAY ENTRY             00156400
                      AIF   (K'&XTYPE(&ZI) LE 0).ZI6B                   00156500
         AIF   ('&XTYPE(&ZI)' NE 'SRCDST').ZI6A                         00156600
&ZW                   SETC  '&ZW.1'                                     00156700
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00156800
                      AGO   .ZI6C                                       00156900
.*                                                                      00157000
.ZI6B                 ANOP  ,                                           00157100
&ZW                   SETC  '&ZW.0'                                     00157200
.ZI6C                 ANOP  ,                                           00157300
.*-------------------------------------------------------------------   00157400
.***AI.L09 XTYPE "SYSTEM"                                               00157500
.***      BL1'XXXXX1XX'                                                 00157600
&ZI                   SETA  0              RESET ARRAY INDEX            00157700
.ZI7A                 ANOP  ,                                           00157800
&ZI                   SETA  &ZI+1          NEXT ARRAY ENTRY             00157900
                      AIF   (K'&XTYPE(&ZI) LE 0).ZI7B                   00158000
         AIF   ('&XTYPE(&ZI)' NE 'SYSTEM').ZI7A                         00158100
&ZW                   SETC  '&ZW.1'                                     00158200
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00158300
                      AGO   .ZI7C                                       00158400
.*                                                                      00158500
.ZI7B                 ANOP  ,                                           00158600
&ZW                   SETC  '&ZW.0'                                     00158700
.ZI7C                 ANOP  ,                                           00158800
.*-------------------------------------------------------------------   00158900
.***AI.L09 XTYPE "MSGPEND"                                              00159000
.***      BL1'XXXXXX1X'                                                 00159100
&ZI                   SETA  0              RESET ARRAY INDEX            00159200
.ZI8A                 ANOP  ,                                           00159300
&ZI                   SETA  &ZI+1          NEXT ARRAY ENTRY             00159400
                      AIF   (K'&XTYPE(&ZI) LE 0).ZI8B                   00159500
         AIF   ('&XTYPE(&ZI)' NE 'MSGPEND').ZI8A                        00159600
&ZW                   SETC  '&ZW.1'                                     00159700
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00159800
                      AGO   .ZI8C                                       00159900
.*                                                                      00160000
.ZI8B                 ANOP  ,                                           00160100
&ZW                   SETC  '&ZW.0'                                     00160200
.ZI8C                 ANOP  ,                                           00160300
.*-------------------------------------------------------------------   00160400
.***AI.L09 XTYPE "PATH"                                                 00160500
.***      BL1'XXXXXXX1'                                                 00160600
&ZI                   SETA  0              RESET ARRAY INDEX            00160700
.ZI9A                 ANOP  ,                                           00160800
&ZI                   SETA  &ZI+1          NEXT ARRAY ENTRY             00160900
                      AIF   (K'&XTYPE(&ZI) LE 0).ZI9B                   00161000
         AIF   ('&XTYPE(&ZI)' NE 'PATH').ZI9A                           00161100
&ZW                   SETC  '&ZW.1'                                     00161200
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00161300
                      AGO   .ZI9C                                       00161400
.*                                                                      00161500
.ZI9B                 ANOP  ,                                           00161600
&ZW                   SETC  '&ZW.0'                                     00161700
.ZI9C                 ANOP  ,                                           00161800
.*-------------------------------------------------------------------   00161900
.***AI.L11 XTYPE BL1                                                    00162000
                      AIF   ('&ZCLNG' NE 'YES').ZI9E  ALL ZERO BITS     00162100
&ZOPN                 SETA  &ZOPN+1                                     00162200
&ZOPL(&ZOPN)          SETC  ' '                                         00162300
&ZOPO(&ZOPN)          SETC  'OI'                                        00162400
&ZOPV(&ZOPN)          SETC  '2(1),B''&ZW'''                             00162500
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              00162600
.ZI9E                 ANOP  ,                                           00162700
.*-------------------------------------------------------------------   00162800
.***AI.L25  XAMDALEVEL XL1                                              00162900
                      AIF   ('&ZXAMDALEVEL' EQ '').ZI10E                00163000
                      AIF   ('&ZXAMDALEVEL' EQ 'OUTPUT').ZI10E          00163100
&ZCGPR                SETC  '&XAMDALEVEL'                               00163200
         AIF   ('&XAMDALEVEL' EQ '0').ZI10E                             00163300
         AIF   ('&XAMDALEVEL' EQ '0').ZI10E                             00163400
.*                                                                      00163500
                      AIF   ('&XAMDALEVEL'(1,1) NE '(').ZI10B           00163600
&ZCGPR   SETC  '0('.'&XAMDALEVEL'(2,K'&XAMDALEVEL-2).')'                00163700
                      AGO   .ZI10D                                      00163800
.ZI10B                ANOP  ,                                           00163900
.*                                                                      00164000
&ZC                   SETC  '&XAMDALEVEL'(1,1)                          00164100
                      AIF   (T'&ZC NE 'N').ZI10D                        00164200
&ZC                   SETC  '&XAMDALEVEL'                               00164300
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI10D               00164400
&ZCGPR                SETC  '=AL1(&XAMDALEVEL)'                         00164500
.*                                                                      00164600
.ZI10D                ANOP  ,                                           00164700
.*                                                                      00164800
&ZOPN                 SETA  &ZOPN+1                                     00164900
&ZOPL(&ZOPN)          SETC  ' '                                         00165000
&ZOPO(&ZOPN)          SETC  'MVC'                                       00165100
&ZOPV(&ZOPN)          SETC  '3(1,1),&ZCGPR'                             00165200
&ZOPD(&ZOPN)          SETC  '++ &ZXAMDALEVEL XAMDALEVEL'                00165300
.*                                                                      00165400
.ZI10E                ANOP  ,                                           00165500
.*-------------------------------------------------------------------   00165600
.***AI.L19 ADDR XDATAAREA A                                             00165700
                      AIF   ('&ZXDATAAREA' EQ '').ZI11H                 00165800
&ZCLNG                SETC  '&XDATAAREA'                                00165900
&ZCGPR                SETC  '14'                                        00166000
         AIF   ('&XDATAAREA'(1,1) EQ '(').ZI11F  IN GPR                 00166100
.*                                                                      00166200
&ZOPN                 SETA  &ZOPN+1                                     00166300
&ZOPL(&ZOPN)          SETC  ' '                                         00166400
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00166500
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00166600
&ZOPD(&ZOPN)          SETC  '++ &ZXDATAAREA XDATAAREA'                  00166700
.*                                                                      00166800
                      AGO   .ZI11G                                      00166900
.*                                                                      00167000
.ZI11F                ANOP  ,                                           00167100
&ZCGPR   SETC  '&XDATAAREA'(2,K'&XDATAAREA-2)                           00167200
.*                                                                      00167300
.ZI11G                ANOP  ,                                           00167400
.*                                                                      00167500
&ZOPN                 SETA  &ZOPN+1                                     00167600
&ZOPL(&ZOPN)          SETC  ' '                                         00167700
&ZOPO(&ZOPN)          SETC  'ST'                                        00167800
&ZOPV(&ZOPN)          SETC  '&ZCGPR,4(,1)'                              00167900
&ZOPD(&ZOPN)          SETC  '++ &ZXDATAAREA XDATAAREA'                  00168000
.*                                                                      00168100
.ZI11H                ANOP  ,                                           00168200
.*-------------------------------------------------------------------   00168300
.***AI.L23 ALET XDATAAREA F                                             00168400
         AIF   ('&ZXDATAAREA' EQ '').ZI12G                              00168500
         AIF   ('&SYSASCE' EQ 'P').ZI12G   SYSSTATE PRIMARY             00168600
&ZCLNG                SETC  '&XDATAAREA'                                00168700
         AIF   ('&XDATAAREA'(1,1) EQ '(').ZI12E  IN AR                  00168800
.*                                                                      00168900
&ZCGPR                SETC  '14'                                        00169000
                      AGO   .ZI12F                                      00169100
.*                                                                      00169200
.ZI12E                ANOP  ,                                           00169300
&ZCGPR   SETC  '&XDATAAREA'(2,K'&XDATAAREA-2)                           00169400
.*                                                                      00169500
.ZI12F                ANOP  ,                                           00169600
.*                                                                      00169700
&ZOPN                 SETA  &ZOPN+1                                     00169800
&ZOPL(&ZOPN)          SETC  ' '                                         00169900
&ZOPO(&ZOPN)          SETC  'STAM'                                      00170000
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCGPR,8(1)'                        00170100
&ZOPD(&ZOPN)          SETC  '++ &ZXDATAAREA XDATAAREA'                  00170200
.*                                                                      00170300
.ZI12G                ANOP  ,                                           00170400
.*-------------------------------------------------------------------   00170500
.***AI.L25  XDATALEN F                                                  00170600
                      AIF   ('&ZXDATALEN' EQ '').ZI13E                  00170700
                      AIF   ('&ZXDATALEN' EQ 'OUTPUT').ZI13E            00170800
&ZCGPR                SETC  '&XDATALEN'                                 00170900
.*                                                                      00171000
                      AIF   ('&XDATALEN'(1,1) NE '(').ZI13B             00171100
&ZCGPR   SETC  '0('.'&XDATALEN'(2,K'&XDATALEN-2).')'                    00171200
                      AGO   .ZI13D                                      00171300
.ZI13B                ANOP  ,                                           00171400
.*                                                                      00171500
&ZC                   SETC  '&XDATALEN'(1,1)                            00171600
                      AIF   (T'&ZC NE 'N').ZI13D                        00171700
&ZC                   SETC  '&XDATALEN'                                 00171800
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI13D               00171900
&ZCGPR                SETC  '=AL4(&XDATALEN)'                           00172000
.*                                                                      00172100
.ZI13D                ANOP  ,                                           00172200
.*                                                                      00172300
&ZOPN                 SETA  &ZOPN+1                                     00172400
&ZOPL(&ZOPN)          SETC  ' '                                         00172500
&ZOPO(&ZOPN)          SETC  'MVC'                                       00172600
&ZOPV(&ZOPN)          SETC  '12(4,1),&ZCGPR'                            00172700
&ZOPD(&ZOPN)          SETC  '++ &ZXDATALEN XDATALEN'                    00172800
.*                                                                      00172900
.ZI13E                ANOP  ,                                           00173000
.*-------------------------------------------------------------------   00173100
.***AI.LVER01                                                           00173200
                      AIF  (&XPLISTVER LT 1).ZI15Z                      00173300
.*-------------------------------------------------------------------   00173400
.***AI.L25  XMEMTOKEN XL8                                               00173500
                      AIF   ('&ZXMEMTOKEN' EQ '').ZI15E                 00173600
                      AIF   ('&ZXMEMTOKEN' EQ 'OUTPUT').ZI15E           00173700
&ZCGPR                SETC  '&XMEMTOKEN'                                00173800
         AIF   ('&XMEMTOKEN' EQ '0').ZI15E                              00173900
         AIF   ('&XMEMTOKEN' EQ '0').ZI15E                              00174000
.*                                                                      00174100
                      AIF   ('&XMEMTOKEN'(1,1) NE '(').ZI15B            00174200
&ZCGPR   SETC  '0('.'&XMEMTOKEN'(2,K'&XMEMTOKEN-2).')'                  00174300
                      AGO   .ZI15D                                      00174400
.ZI15B                ANOP  ,                                           00174500
.*                                                                      00174600
&ZC                   SETC  '&XMEMTOKEN'(1,1)                           00174700
                      AIF   (T'&ZC NE 'N').ZI15D                        00174800
&ZC                   SETC  '&XMEMTOKEN'                                00174900
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI15D               00175000
&ZCGPR                SETC  '=BL8''&XMEMTOKEN'''                        00175100
.*                                                                      00175200
.ZI15D                ANOP  ,                                           00175300
.*                                                                      00175400
&ZOPN                 SETA  &ZOPN+1                                     00175500
&ZOPL(&ZOPN)          SETC  ' '                                         00175600
&ZOPO(&ZOPN)          SETC  'MVC'                                       00175700
&ZOPV(&ZOPN)          SETC  '20(8,1),&ZCGPR'                            00175800
&ZOPD(&ZOPN)          SETC  '++ &ZXMEMTOKEN XMEMTOKEN'                  00175900
.*                                                                      00176000
.ZI15E                ANOP  ,                                           00176100
.*-------------------------------------------------------------------   00176200
.***AI.LVER02                                                           00176300
.ZI15Z                ANOP  ,                                           00176400
.*-------------------------------------------------------------------   00176500
&ZOPN1                SETA &ZOPN                                        00176600
.*******************************************************************    00176700
.***  PROCESS IXCMG OUTPUT PARAMETERS                                   00176800
.*******************************************************************    00176900
                      ACTR  10000                                       00177000
.*******************************************************************    00177100
.***AO.X02  RETURN CODE PROCESSING                                      00177200
.*******************************************************************    00177300
                      AIF   (N'&RETCODE LE 0).ZMRETX                    00177400
                      AIF   ('&XRETCODE'(1,1) EQ '(').ZMRET2            00177500
                      AIF   ('&XRETCODE' EQ 'GPR15').ZMRETX             00177600
                      AIF   ('&XRETCODE' EQ 'REG15').ZMRETX             00177700
                      AIF   ('&XRETCODE' EQ 'R15').ZMRETX               00177800
                      AIF   ('&XRETCODE' EQ '15').ZMRETX                00177900
&ZOPN                 SETA  &ZOPN+1                                     00178000
&ZOPL(&ZOPN)          SETC  ' '                                         00178100
&ZOPO(&ZOPN)          SETC  'ST'                                        00178200
&ZOPV(&ZOPN)          SETC  '15,&XRETCODE'                              00178300
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00178400
                      AGO   .ZMRETX                                     00178500
.*                                                                      00178600
.ZMRET2               ANOP  ,                                           00178700
&ZCGPR                SETC  '&XRETCODE'(2,K'&XRETCODE-2)                00178800
                      AIF   ('&ZCGPR' EQ 'GPR15').ZMRETX                00178900
                      AIF   ('&ZCGPR' EQ 'REG15').ZMRETX                00179000
                      AIF   ('&ZCGPR' EQ 'R15').ZMRETX                  00179100
                      AIF   ('&ZCGPR' EQ '15').ZMRETX                   00179200
&ZOPN                 SETA  &ZOPN+1                                     00179300
&ZOPL(&ZOPN)          SETC  ' '                                         00179400
&ZOPO(&ZOPN)          SETC  'LR'                                        00179500
&ZOPV(&ZOPN)          SETC  '&ZCGPR,15'                                 00179600
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00179700
.ZMRETX               ANOP  ,                                           00179800
.*******************************************************************    00179900
.***AO.X03  REASON CODE PROCESSING                                      00180000
.*******************************************************************    00180100
                      AIF   (N'&RSNCODE LE 0).ZMRSNX                    00180200
                      AIF   ('&XRSNCODE'(1,1) EQ '(').ZMRSN2            00180300
                      AIF   ('&XRSNCODE' EQ 'GPR0').ZMRSNX              00180400
                      AIF   ('&XRSNCODE' EQ 'GPR00').ZMRSNX             00180500
                      AIF   ('&XRSNCODE' EQ 'REG0').ZMRSNX              00180600
                      AIF   ('&XRSNCODE' EQ 'REG00').ZMRSNX             00180700
                      AIF   ('&XRSNCODE' EQ 'R0').ZMRSNX                00180800
                      AIF   ('&XRSNCODE' EQ '0').ZMRSNX                 00180900
                      AIF   ('&XRSNCODE' EQ '00').ZMRSNX                00181000
&ZOPN                 SETA  &ZOPN+1                                     00181100
&ZOPL(&ZOPN)          SETC  ' '                                         00181200
&ZOPO(&ZOPN)          SETC  'ST'                                        00181300
&ZOPV(&ZOPN)          SETC  '0,&XRSNCODE'                               00181400
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00181500
                      AGO   .ZMRSNX                                     00181600
.*                                                                      00181700
.ZMRSN2               ANOP  ,                                           00181800
&ZCGPR                SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                00181900
                      AIF   ('&ZCGPR' EQ 'GPR0').ZMRSNX                 00182000
                      AIF   ('&ZCGPR' EQ 'GPR00').ZMRSNX                00182100
                      AIF   ('&ZCGPR' EQ 'REG0').ZMRSNX                 00182200
                      AIF   ('&ZCGPR' EQ 'REG00').ZMRSNX                00182300
                      AIF   ('&ZCGPR' EQ 'R0').ZMRSNX                   00182400
                      AIF   ('&ZCGPR' EQ '0').ZMRSNX                    00182500
                      AIF   ('&ZCGPR' EQ '00').ZMRSNX                   00182600
&ZOPN                 SETA  &ZOPN+1                                     00182700
&ZOPL(&ZOPN)          SETC  ' '                                         00182800
&ZOPO(&ZOPN)          SETC  'LR'                                        00182900
&ZOPV(&ZOPN)          SETC  '&ZCGPR,0'                                  00183000
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00183100
.ZMRSNX               ANOP  ,                                           00183200
.*******************************************************************    00183300
.***AO.X04  LABEL FOR MF=L PROCESSING                                   00183400
.*******************************************************************    00183500
.ZMFLX                ANOP  ,              MF=L PROCESSING              00183600
.*******************************************************************    00183700
.***AO.X05  FORMAT GENERATED INSTRUCTIONS                               00183800
.*******************************************************************    00183900
                      ACTR  10000                                       00184000
.*                                                                      00184100
                      LCLA  &ZLC           COLUMN POSITION              00184200
                      LCLA  &ZOPX          LIST TABLE INDEX             00184300
                      LCLC  &ZLL           LABEL                        00184400
                      LCLC  &ZLOP          OPERATION                    00184500
                      LCLC  &ZLV           VALUE                        00184600
                      LCLC  &ZLD           DESCRIPTION                  00184700
.*                                                                      00184800
&ZOPX                 SETA  1                                           00184900
.ZL2                  AIF   (&ZOPX GT &ZOPN1).ZLX  B IF DONE            00185000
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00185100
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00185200
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00185300
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00185400
                      AIF   (K'&ZLD LE 0).ZL5                           00185500
&ZLC                  SETA  35             COMMENT COLUMN               00185600
                      AIF   ('&ZLD'(1,1) NE '*').ZL3                    00185700
&ZLC                  SETA  33             COMMMENT COLUMN              00185800
.ZL3                  AIF   (K'&ZLV GE &ZLC-16-1).ZL4                   00185900
&ZLV                  SETC  '&ZLV'.' '                                  00186000
                      AGO   .ZL3                                        00186100
.*                                                                      00186200
.ZL4                  ANOP  ,                                           00186300
&ZLV                  SETC  '&ZLV'.' '                                  00186400
.ZL5                  ANOP  ,                                           00186500
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00186600
.*                                                                      00186700
&ZLL     &ZLOP &ZLV                                                     00186800
.*                                                                      00186900
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00187000
                      AGO   .ZL2           CONTINUE LOOPING             00187100
.*                                                                      00187200
.ZLX                  ANOP  ,                                           00187300
                      AIF   ('&XMF' EQ 'L').ZLINKX  MF=L                00187400
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00187500
         L     14,16(0,0)              GET CVT ADDRESS                  00187600
         L     14,772(14,0)            GET SFT ADDRESS                  00187700
         L     14,220(14,0)            GET LX FOR SERVICE ROUTINE       00187800
         LA    15,6                    GET EX FOR SERVICE ROUTINE       00187900
         OR    14,15                   GET PC NUMBER                    00188000
         PC    0(14)                                                    00188100
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00188200
.ZLINKX               ANOP  ,                                           00188300
.*******************************************************************    00188400
.***AP.X01  FORMAT GENERATED CODE                                       00188500
.ZL21                 AIF   (&ZOPX GT &ZOPN).ZLX1  B IF DONE            00188600
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00188700
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00188800
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00188900
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00189000
                      AIF   (K'&ZLD LE 0).ZL51                          00189100
&ZLC                  SETA  35             COMMENT COLUMN               00189200
                      AIF   ('&ZLD'(1,1) NE '*').ZL31                   00189300
&ZLC                  SETA  33             COMMENT COLUMN               00189400
.ZL31                 AIF   (K'&ZLV GE &ZLC-16-1).ZL41                  00189500
&ZLV                  SETC  '&ZLV'.' '                                  00189600
                      AGO   .ZL31                                       00189700
.*                                                                      00189800
.ZL41                 ANOP  ,                                           00189900
&ZLV                  SETC  '&ZLV'.' '                                  00190000
.ZL51                 ANOP  ,                                           00190100
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00190200
.*                                                                      00190300
&ZLL     &ZLOP &ZLV                                                     00190400
.*                                                                      00190500
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00190600
                      AGO   .ZL21          CONTINUE LOOPING             00190700
.*                                                                      00190800
.ZLX1                 ANOP  ,                                           00190900
.*******************************************************************    00191000
.***AP.X02  END OF IXCMG MACRO                                          00191100
&ZIXCMG               SETC  'YES'          SET IXCMG USED               00191200
         POP   PRINT                                                    00191300
*                                            IXCMG-1                    00191400
         SPACE 1                                                        00191500
.ZLX2                 ANOP  ,                                           00191600
         MEND                                                           00191700
**********************************************************************/ 00191800
*/*PB.OC01 INVOKE MACRO---------------------------------------------*/  00191900
*%IXCMG: MACRO KEYS(DATAAREA,DATALEN,TYPE,MEMTOKEN,AMDALEVEL,RETCODE,   00192000
*                 RSNCODE,PLISTVER,MF);                                 00192100
*  ANS('?'||MACLABEL||' '||'IXCMGP '||MACLIST||                         00192200
*         ' '||MACKEYS||';') COL(MACLMAR);                              00192300
*%END IXCMG;                                                            00192400
