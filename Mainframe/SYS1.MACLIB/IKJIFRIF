*/* START OF SPECIFICATIONS ******************************************/         
*  **PROPRIETARY_STATEMENT********************************************          
* *01* PROPRIETARY STATEMENT=                                        *          
*                                                                    *          
*                                                                    *          
*   LICENSED MATERIALS - PROPERTY OF IBM                             *          
*   THIS MACRO IS "RESTRICTED MATERIALS OF IBM"                      *          
*   5685-025 (C) COPYRIGHT IBM CORP. 1987, 1989                      *          
*   SEE COPYRIGHT INSTRUCTIONS                                       *          
*                                                                    *          
*   STATUS= JTE21X2                                                  *          
*                                                                    *          
*  **END_OF_PROPRIETARY_STATEMENT*************************************          
*/*                                                                  */         
*/* 01*  MACRO-NAME: IKJIFRIF                                        */         
*/*                                                                  */         
*/* 01*  DESCRIPTIVE-NAME: Broadcast Data Set Interface Macro        */         
*/*                                                                  */         
*/*                                                                  */         
*/* 01*  FUNCTION: IKJIFRIF is used to set up a parameter list and   */         
*/*                invoke the broadcast data set interface routine.  */         
*/*                                                                  */         
*/* 01*  OPERATION: IKJIFRIF operates as follows:                    */         
*/*                                                                  */         
*/*                 List form:                                       */         
*/*                 1) Defines storage for the parameter list needed */         
*/*                    to be passed to the interface routine         */         
*/*                    IKJIFR00.                                     */         
*/*                                                                  */         
*/*                 Execute form:                                    */         
*/*                 1) Validates all the keywords coded on the macro */         
*/*                    invocation.                                   */         
*/*                 2) Generates code to initialize the parameter    */         
*/*                    list needed by the interface routine          */         
*/*                 3) Generates code to branch to the interface     */         
*/*                    routine.                                      */         
*/*                 4) If the RETCODE keyword was coded on the macro */         
*/*                    invocation, generates code to place the       */         
*/*                    interface routine return code in the variable */         
*/*                    specified.                                    */         
*/*                                                                  */         
*/* 02*    RECOVERY-OPERATION: N/A                                   */         
*/*                                                                  */         
*/* 01*  NOTES: None                                                 */         
*/*                                                                  */         
*/* 02*    DEPENDENCIES: IKJIFRIF has the following dependencies:    */         
*/*                                                                  */         
*/*                      1) Register 13 must point to an 18 word     */         
*/*                         savearea.                                */         
*/*                      2) The user must include the Communications */         
*/*                         Vector Table (CVT) and the TSO Vector    */         
*/*                         Table (TSVT).                            */         
*/*                      3) In PL/AS (or PL/S) the EPILOG macro must */         
*/*                         also be coded.                           */         
*/*                                                                  */         
*/* 02*    CHARACTER-CODE-DEPENDENCIES: EBCDIC                       */         
*/*                                                                  */         
*/* 02*    RESTRICTIONS: None                                        */         
*/*                                                                  */         
*/* 02*    REGISTER-CONVENTIONS: Registers 0, 1, 14, and 15 will be  */         
*/*                              altered by IKJIFRIF.                */         
*/*                                                                  */         
*/* 03*      REGISTERS-SAVED: None                                   */         
*/*                                                                  */         
*/* 03*      REGISTERS-RESTORED: None                                */         
*/*                                                                  */         
*/* 02*    PATCH-LABEL: N/A                                          */         
*/*                                                                  */         
*/* 01*  MACRO-TYPE: Executable Macro                                */         
*/*                                                                  */         
*/* 02*    PROCESSOR: PL/AS, PL/S, or Assembler                      */         
*/*                                                                  */         
*/* 02*    MACRO-SIZE: N/A                                           */         
*/*                                                                  */         
*/* 02*    ATTRIBUTES: N/A                                           */         
*/*                                                                  */         
*/* 01*  INPUT:  Register 13 points to an 18 word savearea.          */         
*/*                                                                  */         
*/*              Arguments contained within the keywords coded on    */         
*/*              the macro invocation.                               */         
*/*                                                                  */         
*/* 01*  INVOCATION:                                                 */         
*/*                                                                  */         
*/*                        PL/AS format                              */         
*/*                                                                  */         
*/*               ? IKJIFRIF MF(L,parmlist name);                    */         
*/*                                                                  */         
*/*               ? IKJIFRIF UPT(xupt)                               */         
*/*                          PSCB(xpscb)                             */         
*/*                          ECT(xect)                               */         
*/*                          ADD(xadd) | DEL(xdel) | ALT(xalt)       */         
*/*                          { RETCODE(xretcode) }                   */         
*/*                          MF(E,parmlist name);                    */         
*/*                                                                  */         
*/*                                                                  */         
*/*                     Assembler format                             */         
*/*                                                                  */         
*/*     label      IKJIFRIF MF=L                                     */         
*/*                                                                  */         
*/*     label      IKJIFRIF UPT=xupt,                                */         
*/*                         PSCB=xpscb,                              */         
*/*                         ECT=xect,                                */         
*/*                         ADD=xadd, | DEL=xdel, | ALT=xalt,        */         
*/*                         { RETCODE=xretcode, }                    */         
*/*                         MF=(E,parmlist name)                     */         
*/*                                                                  */         
*/*  Where:                                                          */         
*/*                                                                  */         
*/*  UPT(xupt) or UPT=xupt                                           */         
*/*    Is the name (RX-type or address in register (2)-(12) Assembler*/         
*/*    only) of a required PTR(31) input that contains the address   */         
*/*    of the UPT.                                                   */         
*/*                                                                  */         
*/*  PSCB(xpscb) or PSCB=xpscb                                       */         
*/*    Is the name (RX-type or address in register (2)-(12) Assembler*/         
*/*    only) of a required PTR(31) input that contains the address   */         
*/*    of the PSCB.                                                  */         
*/*                                                                  */         
*/*  ECT(xect) or ECT=xect                                           */         
*/*    Is the name (RX-type or address in register (2)-(12) Assembler*/         
*/*    only) of a required PTR(31) input that contains the address   */         
*/*    of the ECT.                                                   */         
*/*                                                                  */         
*/*  ADD(xadd) or ADD=xadd                                           */         
*/*    Is the name (RX-type or address in register (2)-(12) Assembler*/         
*/*    only) of a required structured input that contains the user ID*/         
*/*    that is to be added to the SYS1.BRODCAST data set and a       */         
*/*    pointer to the next structure.                                */         
*/*                                                                  */         
*/*  DEL(xdel) or DEL=xdel                                           */         
*/*    Is the name (RX-type or address in register (2)-(12) Assembler*/         
*/*    only) of a required structured input that contains the user ID*/         
*/*    that is to be deleted from the SYS1.BRODCAST data set and a   */         
*/*    pointer to the next structure.                                */         
*/*                                                                  */         
*/*  ALT(xalt) or ALT=xalt                                           */         
*/*    Is the name (RX-type or address in register (2)-(12) Assembler*/         
*/*    only) of a required structured input that contains the user ID*/         
*/*    that is to be changed, the new user ID that it is to be       */         
*/*    to in the SYS1.BRODCAST data set and a pointer to the next    */         
*/*    structure.                                                    */         
*/*                                                                  */         
*/*  RETCODE(xretcode) or RETCODE=xretcode                           */         
*/*    Is  the  name  (RX-type) of an optional output that contains  */         
*/*    the return code from the interface routine.                   */         
*/*                                                                  */         
*/*  MF(E,parmlist name) or MF=(E,parmlist name)                     */         
*/*    Specifies the execute form of the macro. The execute form     */         
*/*    generates code to put the parameters into the parameter list  */         
*/*    specified by "parmlist name" and invoke the desired service.  */         
*/*    "Parmlist name" is a required input. It is the name (RX-type  */         
*/*    or address in register (2)-(12) Assembler only) of a storage  */         
*/*    area for the parameter list.                                  */         
*/*                                                                  */         
*/*  MF(L,parmlist name) or MF=L                                     */         
*/*      Specifies the list form of the macro. The list form defines */         
*/*      an area to be used for the parameter list. The name of the  */         
*/*      parameter list is specified by "parmlist name" in PL/AS or  */         
*/*      by the label used with the macro in Assembler.              */         
*/*                                                                  */         
*/* 01*  PROCESSING: The IKJIFRIF macro expands to generate the      */         
*/*                  following:                                      */         
*/*                                                                  */         
*/*                List form:                                        */         
*/*                  Generates the 12 full words of storage for the  */         
*/*                  parameter list needed by the interface routine. */         
*/*                                                                  */         
*/*                Execute form:                                     */         
*/*                  Generates executable code to:                   */         
*/*                  1) Check for the existence of the interface     */         
*/*                     routine.                                     */         
*/*                                                                  */         
*/*                  2) Initialize the following areas in the        */         
*/*                     parameter list based upon the keywords       */         
*/*                     coded:                                       */         
*/*                                                                  */         
*/*                       Parameter 1 is set to the address of the   */         
*/*                       UPT.                                       */         
*/*                                                                  */         
*/*                       Parameter 2 is set to the address of the   */         
*/*                       PSCB.                                      */         
*/*                                                                  */         
*/*                       Parameter 3 is set to the address of the   */         
*/*                       ECT.                                       */         
*/*                                                                  */         
*/*                       Parameter 4 is set to the address of the   */         
*/*                       argument supplied in the ADD, DEL, or ALT  */         
*/*                       keyword.                                   */         
*/*                                                                  */         
*/*                       Parameter 5 is set to the character repre- */         
*/*                       sentation of the function requested: ADD,  */         
*/*                       DEL, or ALT.                               */         
*/*                                                                  */         
*/*                       Parameters 6-9 are set to 0.               */         
*/*                                                                  */         
*/*                  3) Invoke the interface routine based upon the  */         
*/*                     address located in the TSVT.                 */         
*/*                                                                  */         
*/*                  4) Place the interface routine return code in   */         
*/*                     the specified variable if the RETCODE        */         
*/*                     word was coded.                              */         
*/*                                                                  */         
*/* 01*  OUTPUT: If the RETCODE keyword was coded in the macro       */         
*/*              invocation, the interface routine return code will  */         
*/*              be placed in the specified variable, otherwise the  */         
*/*              return code will be in register 15.                 */         
*/*                                                                  */         
*/*              The parameter list that was created by the macro    */         
*/*              will contain information upon return. The parameter */         
*/*              list that is created by this macro is as follows:   */         
*/*                                                                  */         
*/*    +0 - Address of the UPT                   (input)             */         
*/*    +4 - Address of the PSCB                  (input)             */         
*/*    +8 - Address of the ECT                   (input)             */         
*/*    +C - Address of the argument structure    (input)             */         
*/*   +10 - Character representation of function (input)             */         
*/*   +14 - ABEND field                          (output)            */         
*/*   +18 - ABEND reason code                    (output)            */         
*/*   +1C - Service return code                  (output)            */         
*/*   +20 - Service reason code                  (output)            */         
*/*   +24 - Reserved                                                 */         
*/*   +28 - Reserved                                                 */         
*/*   +2C - Reserved                                                 */         
*/*                                                                  */         
*/* 01*    RETURN-CODES: Return Code is contained in register 15     */         
*/*                      or the variable specified in the RETCODE    */         
*/*                      keyword.                                    */         
*/*                                                                  */         
*/*                      0 - Processing completed successfully.      */         
*/*                      4 - Processing completed unsuccessfully,    */         
*/*                          the recovery environment could not be   */         
*/*                          established.                            */         
*/*                      8 - Processing completed unsuccessfully,    */         
*/*                          caller is in 24-bit addressing mode,    */         
*/*                          but the argument address(es) were not   */         
*/*                          valid 24-bit addresses.                 */         
*/*                     12 - Processing completed unsuccessfully,    */         
*/*                          invalid interface function specified.   */         
*/*                     16 - Processing completed unsuccessfully,    */         
*/*                          user parameters are invalid.            */         
*/*                     20 - Processing completed unsuccessfully,    */         
*/*                          ATTACH of module IKJEES40 failed.       */         
*/*                          Check the SERVICE RETURN CODE field of  */         
*/*                          the IKJIFR00 parameter list for the     */         
*/*                          return code returned by the ATTACH      */         
*/*                          macro.                                  */         
*/*                     24 - Processing completed unsuccessfully,    */         
*/*                          an ABEND occurred, check the ABEND and  */         
*/*                          reason code fields of the macro         */         
*/*                          generated parameter list.               */         
*/*                          Check the SERVICE RETURN CODE field and */         
*/*                          the SERVICE REASON CODE field for       */         
*/*                          possible return codes from the dynamic  */         
*/*                          allocation routine.                     */         
*/*                     28 - Deallocation failed for data sets       */         
*/*                          allocated to module IKJEES40. Check the */         
*/*                          broadcast data set to see if the        */         
*/*                          function has been successfully performed*/         
*/*                          to the userid(s).                       */         
*/*                          Check the SERVICE RETURN CODE field and */         
*/*                          the SERVICE REASON CODE field for       */         
*/*                          return codes from the dynamic allocation*/         
*/*                          routine.                                */         
*/*                     32 - Processing completed unsuccessfully,    */         
*/*                          TSO/E Release 4 or higher is not        */         
*/*                          installed.                              */         
*/*                     36 - Processing completed unsuccessfully,    */         
*/*                          too many arguments for the function     */         
*/*                          requested were passed to the interface  */         
*/*                          routine causing the amount of storage   */         
*/*                          to be GETMAINed to become a negative    */         
*/*                          amount.                                 */         
*/*                                                                  */         
*/* 01*  MACROS-EXECUTABLE: ? CALLTSSR                               */         
*/*                                                                  */         
*/* 01*  CHANGE-ACTIVITY:                                            */         
*/*                                                                  */         
*/* A00000000-99999999 TSO/E Release 4 for MVS/XA            @E1402V7*/         
*/*                                                                  */         
*/* END OF SPECIFICATIONS ********************************************/         
*/********** -Start of IKJIFRIF - ASSEMBLER MACRO ****************              
         MACRO                                                                  
&LABEL   IKJIFRIF &UPT=,&PSCB=,&ECT=,&ADD=,&DEL=,&ALT=,&RETCODE=,&MF=           
.*                                                                              
.********************************************************************           
.*                    ASSEMBLER GENERATION                                      
.********************************************************************           
.*                                                                              
.* ******************************************************************           
.*   Define Local Variables                                                     
.* ******************************************************************           
.*                                                                              
         LCLA  &MUTFUNC                  Holds the mutual exclusive             
.*                                       count                                  
         LCLB  &MACRET                   Set if errors are found                
         LCLB  &REGFORM                  Set if argument is in register         
         LCLC  &REG,&FUNC,&FN            Hold character representations         
.*                                       of registers and functions             
.*                                                                              
.* ******************************************************************           
.*                                                                              
.*   Validate the MF keyword                                                    
.*                                                                              
.* ******************************************************************           
.*                                                                              
         AIF   (N'&MF GT 2).BADMF1       Can't have more than 2                 
.*                                       parameters                             
         AIF   (N'&MF EQ 0).BADMF2       MF parameter must be supplied          
         AIF   ('&MF(1)' EQ 'E').EXFORM  Execute form of the macro is           
.*                                       requested                              
.*                                                                              
.* ******************************************************************           
.*                                                                              
.*   List Form                                                                  
.*                                                                              
.* ******************************************************************           
.*                                                                              
         AIF   ('&MF(1)' NE 'L').BADMF1  Invalid MF parameter                   
         AIF   (K'&LABEL EQ 0).BADLABL   Must supply a label                    
&LABEL   DS    0D               Start parameter list on a double word           
         DS    12F              Broadcast Interface Parameter List              
         AGO   .END                                                             
.BADMF1  ANOP                                                                   
         MNOTE 8,'IFRIF01 The MF keyword is invalid.'                           
         AGO   .END                                                             
.BADMF2  ANOP                                                                   
         MNOTE 8,'IFRIF02 The MF keyword is required.'                          
         AGO   .END                                                             
.BADLABL ANOP                                                                   
         MNOTE 8,'IFRIF03 A label is required when using MF=L.'                 
         AGO   .END                                                             
.*                                                                              
.* ******************************************************************           
.*                                                                              
.*   Execute Form                                                               
.*                                                                              
.* ******************************************************************           
.*                                                                              
.EXFORM  ANOP                                                                   
         AIF   (N'&MF EQ 2).VALUPT       Must supply the parameter list         
.*                                       or the parameter list address          
         MNOTE 8,'IFRIF04 The parameter list field is required for MF=E*        
               .'                                                               
&MACRET  SETB  1                         Indicate an error                      
.*                                                                              
.* ******************************************************************           
.*                                                                              
.*   Validate the UPT keyword                                                   
.*                                                                              
.* ******************************************************************           
.*                                                                              
.VALUPT  ANOP                                                                   
         AIF   (N'&UPT EQ 0).BADUPT      Must supply the UPT keyword            
         AIF   (N'&UPT EQ 1).VALPSCB     Only 1 parameter allowed               
         MNOTE 8,'IFRIF05 The UPT keyword is invalid.'                          
&MACRET  SETB  1                         Indicate an error                      
         AGO   .VALPSCB                                                         
.BADUPT  ANOP                                                                   
         MNOTE 8,'IFRIF06 The UPT keyword is required.'                         
&MACRET  SETB  1                         Indicate an error                      
.*                                                                              
.* ******************************************************************           
.*                                                                              
.*   Validate the PSCB keyword                                                  
.*                                                                              
.* ******************************************************************           
.*                                                                              
.VALPSCB ANOP                                                                   
         AIF   (N'&PSCB EQ 0).BADPSCB    Must supply the PSCB keyword           
         AIF   (N'&PSCB EQ 1).VALECT     Only 1 parameter allowed               
         MNOTE 8,'IFRIF07 The PSCB keyword is invalid.'                         
&MACRET  SETB  1                         Indicate an error                      
         AGO   .VALECT                                                          
.BADPSCB ANOP                                                                   
         MNOTE 8,'IFRIF08 The PSCB keyword is required.'                        
&MACRET  SETB  1                         Indicate an error                      
.*                                                                              
.* ******************************************************************           
.*                                                                              
.*   Validate the ECT keyword                                                   
.*                                                                              
.* ******************************************************************           
.*                                                                              
.VALECT  ANOP                                                                   
         AIF   (N'&ECT EQ 0).BADECT      Must supply the ECT keyword            
         AIF   (N'&ECT EQ 1).CHKADD      Only 1 parameter allowed               
         MNOTE 8,'IFRIF09 The ECT keyword is invalid.'                          
&MACRET  SETB  1                         Indicate an error                      
         AGO   .CHKADD                                                          
.BADECT  ANOP                                                                   
         MNOTE 8,'IFRIF10 The ECT keyword is required.'                         
&MACRET  SETB  1                         Indicate an error                      
.*                                                                              
.* ******************************************************************           
.*                                                                              
.*   Validate the ADD keyword                                                   
.*                                                                              
.* ******************************************************************           
.*                                                                              
.CHKADD  ANOP                                                                   
         AIF   (N'&ADD EQ 1).GOODADD     Only 1 parameter allowed               
         AIF   (N'&ADD EQ 0).CHKDEL      ADD keyword not coded                  
         MNOTE 8,'IFRIF11 The ADD keyword is invalid.'                          
&MACRET  SETB  1                         Indicate an error                      
.GOODADD ANOP                                                                   
         AIF   ('&ADD'(1,1) EQ '(').RADD ADD keyword in register form           
&FUNC    SETC  '&ADD'                    Set the ADD function                   
         AGO   .ADDCHAR                                                         
.RADD    ANOP                                                                   
&FUNC    SETC  '&ADD(1)'                 Set the ADD function                   
&REGFORM SETB  1                         Indicate register form                 
.ADDCHAR ANOP                                                                   
&FN      SETC  'ADD '                    Set the ADD function                   
&MUTFUNC SETA  &MUTFUNC+1                Indicate ADD keyword coded             
.*                                                                              
.* ******************************************************************           
.*                                                                              
.*   Validate the DEL keyword                                                   
.*                                                                              
.* ******************************************************************           
.*                                                                              
.CHKDEL  ANOP                                                                   
         AIF   (N'&DEL EQ 1).GOODDEL     Only 1 parameter allowed               
         AIF   (N'&DEL EQ 0).CHKALT      DEL keyword not coded                  
         MNOTE 8,'IFRIF12 The DEL keyword is invalid.'                          
&MACRET  SETB  1                         Indicate an error                      
.GOODDEL ANOP                                                                   
         AIF   ('&DEL'(1,1) EQ '(').RDEL DEL keyword in register form           
&FUNC    SETC  '&DEL'                    Set the DEL function                   
         AGO   .DELCHAR                                                         
.RDEL    ANOP                                                                   
&FUNC    SETC  '&DEL(1)'                 Set the DEL function                   
&REGFORM SETB  1                         Indicate register form                 
.DELCHAR ANOP                                                                   
&FN      SETC  'DEL '                    Set the DEL function                   
&MUTFUNC SETA  &MUTFUNC+1                Indicate DEL keyword coded             
.*                                                                              
.* ******************************************************************           
.*                                                                              
.*   Validate the ALT keyword                                                   
.*                                                                              
.* ******************************************************************           
.*                                                                              
.CHKALT  ANOP                                                                   
         AIF   (N'&ALT EQ 1).GOODALT     Only 1 parameter allowed               
         AIF   (N'&ALT EQ 0).CHKFUNC     ALT keyword not coded                  
         MNOTE 8,'IFRIF13 The ALT keyword is invalid.'                          
&MACRET  SETB  1                         Indicate an error                      
.GOODALT ANOP                                                                   
         AIF   ('&ALT'(1,1) EQ '(').RALT ALT keyword in register form           
&FUNC    SETC  '&ALT'                    Set the ALT function                   
         AGO   .ALTCHAR                                                         
.RALT    ANOP                                                                   
&FUNC    SETC  '&ALT(1)'                 Set the ALT function                   
&REGFORM SETB  1                         Indicate register form                 
.ALTCHAR ANOP                                                                   
&FN      SETC  'ALT '                    Set the ALT function                   
&MUTFUNC SETA  &MUTFUNC+1                Indicate ALT keyword coded             
.*                                                                              
.* ******************************************************************           
.*                                                                              
.*   Check to be sure that one of the functions was coded                       
.*                                                                              
.* ******************************************************************           
.*                                                                              
.CHKFUNC ANOP                                                                   
         AIF   (&MUTFUNC).CHKMUT         If this variable is set, then          
.*                                       a function was selected                
         MNOTE 8,'IFRIF14 The ADD, DEL, or ALT keyword is required.'            
&MACRET  SETB  1                         Indicate an error                      
.*                                                                              
.* ******************************************************************           
.*                                                                              
.*   Check to be sure that not more than one function was coded                 
.*                                                                              
.* ******************************************************************           
.*                                                                              
.CHKMUT  ANOP                                                                   
         AIF   (&MUTFUNC LE 1).VALRET    Function was coded mutually            
.*                                       exclusive                              
         MNOTE 8,'IFRIF15 The ADD, DEL, and ALT keywords are mutually e*        
               xclusive, code only one of them.'                                
&MACRET  SETB  1                                                                
.*                                                                              
.* ******************************************************************           
.*                                                                              
.*   Validate the RETCODE keyword                                               
.*                                                                              
.* ******************************************************************           
.*                                                                              
.VALRET  ANOP                                                                   
         AIF   (N'&RETCODE LE 1).BUILD   RETCODE keyword is optional            
.*                                       with only 1 parameter allowed          
         MNOTE 8,'IFRIF16 The RETCODE keyword is invalid.'                      
&MACRET  SETB  1                                                                
.*                                                                              
.* ******************************************************************           
.*                                                                              
.*   Build the parameter list and invoke the interface routine                  
.*                                                                              
.* ******************************************************************           
.*                                                                              
.BUILD   ANOP                                                                   
         AIF   (&MACRET).END             Leave if there are errors              
         AIF   (K'&LABEL EQ 0).NOLAB     Check for a label                      
&LABEL   DS    0H                                                               
.NOLAB   ANOP                                                                   
.*                                                                              
* ******************************************************************            
*   Check for proper release of TSO/E (Release 4 or higher)                     
* ******************************************************************            
.*                                                                              
         L     15,CVTPTR        Load the CVT pointer                            
         USING CVTMAP,15        Establish addressability to the CVT             
         L     14,CVTTVT        Load the TSVT pointer                           
         DROP  15               DROP Addressability                             
         LA    15,32            Initialize return code to no interface          
         LTR   14,14            Check to see if the TSVT exists                 
         BZ    NOIF&SYSNDX      Zero, no TSVT - no interface routine            
         USING TSVT,14          Establish addressability to the TSVT            
         CLI   TSVTLEV,X'04'    Check for TSO/E Release 4 or higher             
         BL    NOIF&SYSNDX      Less than 4, no interface routine               
         DROP  14               DROP addressability                             
.*                                                                              
.* ******************************************************************           
.*   Obtain the parameter list address                                          
.* ******************************************************************           
.*                                                                              
         AIF   ('&MF(2)'(1,1) EQ '(').RMF MF parmlist in register form          
         LA    1,&MF(2)         Load the parmlist address                       
         AGO   .STOUPT                                                          
.RMF     ANOP                                                                   
&REG     SETC  '&MF(2)'(2,K'&MF(2)-2)    Obtain parmlist register               
         AIF   ('&REG' EQ '1').STOUPT    Skip the load register step            
         LR    1,&REG           Load the parmlist address                       
.*                                                                              
.* ******************************************************************           
.*   Store the UPT address in the parameter list                                
.* ******************************************************************           
.*                                                                              
.STOUPT  ANOP                                                                   
         AIF   ('&UPT'(1,1) EQ '(').RUPT UPT keyword in register form           
         L     15,&UPT(1)       Load the UPT address                            
         ST    15,0(,1)         Store the UPT address in the parmlist           
         AGO   .STOPSCB                                                         
.RUPT    ANOP                                                                   
         ST    &UPT(1),0(,1)    Store the UPT address in the parmlist           
.*                                                                              
.* ******************************************************************           
.*   Store the PSCB address in the parameter list                               
.* ******************************************************************           
.*                                                                              
.STOPSCB ANOP                                                                   
         AIF   ('&PSCB'(1,1) EQ '(').RPSCB PSCB keyword in register             
.*                                         form                                 
         L     15,&PSCB(1)      Load the PSCB address                           
         ST    15,4(,1)         Store the PSCB address in the parmlist          
         AGO   .STOECT                                                          
.RPSCB   ANOP                                                                   
         ST    &PSCB(1),4(,1)   Store the PSCB address in the parmlist          
.*                                                                              
.* ******************************************************************           
.*   Store the ECT address in the parameter list                                
.* ******************************************************************           
.*                                                                              
.STOECT  ANOP                                                                   
         AIF   ('&ECT'(1,1) EQ '(').RECT ECT keyword in register form           
         L     15,&ECT(1)       Load the ECT address                            
         ST    15,8(,1)         Store the ECT address in the parmlist           
         AGO   .STOFUNC                                                         
.RECT    ANOP                                                                   
         ST    &ECT(1),8(,1)    Store the ECT address in the parmlist           
.*                                                                              
.* ******************************************************************           
.*   Store the argument address in the parameter list                           
.* ******************************************************************           
.*                                                                              
.STOFUNC ANOP                                                                   
         AIF   (&REGFORM).RFUNC Argument in register form                       
         LA    15,&FUNC         Load the address of the argument                
         ST    15,12(,1)        Store the address in the parmlist               
         AGO   .STORE                                                           
.RFUNC   ANOP                                                                   
         ST    &FUNC,12(,1)     Load the address of the argument                
.*                                                                              
.* ******************************************************************           
.*   Store the function in the parameter list                                   
.* ******************************************************************           
.*                                                                              
.STORE   ANOP                                                                   
         MVC   16(4,1),=C'&FN'  Store the function in the parmlist              
.*                                                                              
.* ******************************************************************           
.*   Zero out the ABEND and REASON CODE and the SERVICE RETURN CODE             
.*   and SERVICE REASON CODE fields.                                            
.* ******************************************************************           
.*                                                                              
         LA    15,0                                                             
         ST    15,20(,1)        Initialize the ABEND code to zero               
         ST    15,24(,1)        Initialize the reason code to zero              
         ST    15,28(,1)        Initialize the service return code              
         ST    15,32(,1)        Initialize the service reason code              
.*                                                                              
.* ******************************************************************           
.*   Call the interface routine using CALLTSSR                                  
.* ******************************************************************           
.*                                                                              
         CALLTSSR EP=IKJIFRIF   Call the interface routine                      
.*                                                                              
.* ******************************************************************           
.*   Check for RETCODE option                                                   
.* ******************************************************************           
.*                                                                              
NOIF&SYSNDX DS    0H                                                            
         AIF   (N'&RETCODE EQ 0).END     No return code variable                
         ST    15,&RETCODE      Save the return code value.                     
.*                                                                              
.* ******************************************************************           
.* ******************************************************************           
.*                                                                              
.END     ANOP                                                                   
         MEND                                                                   
.*****************  END OF IKJIFRIR ASSEMBLER MACRO                  */         
*/*****************************************************************             
* **************** -Start of IKJIFRIF - PL/AS MACRO ***************  */         
*                                                                               
*%IKJIFRIF: MACRO KEYS(UPT,PSCB,ECT,ADD,DEL,ALT,RETCODE,MF);                    
*                                                                               
*/********************************************************************/         
*/*                       PL/AS GENERATION                           */         
*/********************************************************************/         
*                                                                               
*/********************************************************************/         
*/* Declare macro variables                                          */         
*/********************************************************************/         
*                                                                               
*  DCL RC    FIXED,             /* Macro compile return code         */         
*      TEXT  CHAR,              /* Used to print error messages      */         
*      COM   CHAR,              /* Used to print comments            */         
*      TITLE CHAR,              /* IKJIFRIF head/tail comment field  */         
*      MUTFUNC FIXED,           /* Used to check mutual exclusiveness*/         
*      FUNC  CHAR,              /* Used to hold the function         */         
*      ARG   CHAR;              /* Used to hold the argument         */         
*                                                                               
*/********************************************************************/         
*/*                                                                  */         
*/* Set up IKJIFRIF head/tail comment field                          */         
*/*                                                                  */         
*/********************************************************************/         
*                                                                               
*  TITLE = MACNAME || ' ' || MACLIST || ' ' || MACKEYS;                         
*                                                                               
*/********************************************************************/         
*/*                                                                  */         
*/*   Validate the MF keyword                                        */         
*/*                                                                  */         
*/********************************************************************/         
*                                                                               
*  IF NUMBER(MF) > 2 THEN                                                       
*     DO;                            /* Can't have more than 2                  
*                                       parameters                   */         
*     TEXT = 'IFRIF01 The MF keyword is invalid.';                              
*     ANS (COMMENT(TEXT)) MSG(TEXT) COL(MACCOL+2) NORESCAN;                     
*     RC = 8;                                                                   
*     END;                                                                      
*                                                                               
*  ELSE                                                                         
*     IF NUMBER(MF) <= 1 THEN                                                   
*        IF NUMBER(MF) = 1 THEN                                                 
*           DO;                      /* Must supply a parameter list            
*                                       name                         */         
*           TEXT = 'IFRIF04 The parameter list field is ' ||                    
*                  'required with the MF keyword.';                             
*           ANS (COMMENT(TEXT)) MSG(TEXT) COL(MACCOL+2) NORESCAN;               
*           RC = 8;                                                             
*           END;                                                                
*        ELSE                                                                   
*           DO;                      /* MF keyword must be supplied  */         
*           TEXT = 'IFRIF02 The MF keyword is required.';                       
*           ANS (COMMENT(TEXT)) MSG(TEXT) COL(MACCOL+2) NORESCAN;               
*           RC = 8;                                                             
*           END;                                                                
*     ELSE                                                                      
*                                                                               
*/********************************************************************/         
*/*                                                                  */         
*/*   List Form                                                      */         
*/*                                                                  */         
*/********************************************************************/         
*                                                                               
*        IF MF(1) = 'L' THEN                                                    
*           DO;                      /* Generate the list form       */         
*           ANS (COMMENT(TITLE))                                                
*              COL(MACCOL+2) NORESCAN;                                          
*                                                                               
*           ANS ('DECLARE  1 ' || MF(2) || ' BDY(DWORD),')                      
*              COL(MACCOL);                                                     
*                                                                               
*           ANS ('3 IFR0001 PTR(31),' ||                                        
*              COMMENT('UPT address'))                                          
*              COL(MACCOL);                                                     
*                                                                               
*           ANS ('3 IFR0002 PTR(31),' ||                                        
*              COMMENT('PSCB address'))                                         
*              COL(MACCOL);                                                     
*                                                                               
*           ANS ('3 IFR0003 PTR(31),' ||                                        
*              COMMENT('ECT address'))                                          
*              COL(MACCOL);                                                     
*                                                                               
*           ANS ('3 IFR0004 PTR(31),' ||                                        
*              COMMENT('Argument address'))                                     
*              COL(MACCOL);                                                     
*                                                                               
*           ANS ('3 IFR0005 CHAR(4),' ||                                        
*              COMMENT('Function'))                                             
*              COL(MACCOL);                                                     
*                                                                               
*           ANS ('3 IFRABEND CHAR(4),' ||                                       
*              COMMENT('ABEND code field'))                                     
*              COL(MACCOL);                                                     
*                                                                               
*           ANS ('3 IFRABRSN FIXED(32),' ||                                     
*              COMMENT('ABEND reason code'))                                    
*              COL(MACCOL);                                                     
*                                                                               
*           ANS ('3 IFRSVCRC FIXED(32),' ||                                     
*              COMMENT('Service return code from interface processing'))        
*              COL(MACCOL);                                                     
*                                                                               
*           ANS ('3 IFRSVCRN FIXED(32),' ||                                     
*              COMMENT('Service reason code'))                                  
*              COL(MACCOL);                                                     
*                                                                               
*           ANS ('3 IFRRSVD1 CHAR(12),' ||                                      
*              COMMENT('Reserved'))                                             
*              COL(MACCOL);                                                     
*                                                                               
*           ANS ('3 * BDY(DWORD);' ||                                           
*              COMMENT('End on a double word'))                                 
*              COL(MACCOL);                                                     
*                                                                               
*           END;                                                                
*        ELSE                                                                   
*                                                                               
*/********************************************************************/         
*/*                                                                  */         
*/*   Execute Form                                                   */         
*/*                                                                  */         
*/********************************************************************/         
*                                                                               
*           IF MF(1) = 'E' THEN                                                 
*              DO;                   /* Generate the execute form    */         
*                                                                               
*/********************************************************************/         
*/*                                                                  */         
*/*   Validate the UPT keyword                                       */         
*/*                                                                  */         
*/********************************************************************/         
*                                                                               
*              IF NUMBER(UPT) = 0 THEN                                          
*                 DO;                /* The UPT keyword is required  */         
*                 TEXT = 'IFRIF06 The UPT keyword is required.';                
*                 ANS (COMMENT(TEXT)) MSG(TEXT) COL(MACCOL+2) NORESCAN;         
*                 RC = 8;                                                       
*                 END;                                                          
*                                                                               
*              IF NUMBER(UPT) > 1 THEN                                          
*                 DO;                /* Only 1 parameter is allowed  */         
*                 TEXT = 'IFRIF05 The UPT keyword is invalid.';                 
*                 ANS (COMMENT(TEXT)) MSG(TEXT) COL(MACCOL+2) NORESCAN;         
*                 RC = 8;                                                       
*                 END;                                                          
*                                                                               
*/********************************************************************/         
*/*                                                                  */         
*/*   Validate the PSCB keyword                                      */         
*/*                                                                  */         
*/********************************************************************/         
*                                                                               
*              IF NUMBER(PSCB) = 0 THEN                                         
*                 DO;                /* The PSCB keyword is required */         
*                 TEXT = 'IFRIF08 The PSCB keyword is required.';               
*                 ANS (COMMENT(TEXT)) MSG(TEXT) COL(MACCOL+2) NORESCAN;         
*                 RC = 8;                                                       
*                 END;                                                          
*                                                                               
*              IF NUMBER(PSCB) > 1 THEN                                         
*                 DO;                /* Only 1 parameter is allowed  */         
*                 TEXT = 'IFRIF07 The PSCB keyword is invalid.';                
*                 ANS (COMMENT(TEXT)) MSG(TEXT) COL(MACCOL+2) NORESCAN;         
*                 RC = 8;                                                       
*                 END;                                                          
*                                                                               
*/********************************************************************/         
*/*                                                                  */         
*/*   Validate the ECT keyword                                       */         
*/*                                                                  */         
*/********************************************************************/         
*                                                                               
*              IF NUMBER(ECT) = 0 THEN                                          
*                 DO;                /* The ECT keyword is required  */         
*                 TEXT = 'IFRIF10 The ECT keyword is required.';                
*                 ANS (COMMENT(TEXT)) MSG(TEXT) COL(MACCOL+2) NORESCAN;         
*                 RC = 8;                                                       
*                 END;                                                          
*                                                                               
*              IF NUMBER(ECT) > 1 THEN                                          
*                 DO;                /* Only 1 parameter is allowed  */         
*                 TEXT = 'IFRIF09 The ECT keyword is invalid.';                 
*                 ANS (COMMENT(TEXT)) MSG(TEXT) COL(MACCOL+2) NORESCAN;         
*                 RC = 8;                                                       
*                 END;                                                          
*                                                                               
*/********************************************************************/         
*/*                                                                  */         
*/*   Validate the ADD keyword                                       */         
*/*                                                                  */         
*/********************************************************************/         
*                                                                               
*              IF NUMBER(ADD) = 1 THEN                                          
*                 DO;                /* Only 1 parameter is allowed  */         
*                 MUTFUNC = MUTFUNC + 1;                                        
*                 FUNC = 'ADD ';                                                
*                 ARG = ADD(1);                                                 
*                 END;                                                          
*                                                                               
*              IF NUMBER(ADD) > 1 THEN                                          
*                 DO;                /* Only 1 parameter is allowed  */         
*                 MUTFUNC = MUTFUNC + 1;                                        
*                 TEXT = 'IFRIF11 The ADD keyword is invalid.';                 
*                 ANS (COMMENT(TEXT)) MSG(TEXT) COL(MACCOL+2) NORESCAN;         
*                 RC = 8;                                                       
*                 END;                                                          
*                                                                               
*/********************************************************************/         
*/*                                                                  */         
*/*   Validate the DEL keyword                                       */         
*/*                                                                  */         
*/********************************************************************/         
*                                                                               
*              IF NUMBER(DEL) = 1 THEN                                          
*                 DO;                /* Only 1 parameter is allowed  */         
*                 MUTFUNC = MUTFUNC + 1;                                        
*                 FUNC = 'DEL ';                                                
*                 ARG = DEL(1);                                                 
*                 END;                                                          
*                                                                               
*              IF NUMBER(DEL) > 1 THEN                                          
*                 DO;                /* Only 1 parameter is allowed  */         
*                 MUTFUNC = MUTFUNC + 1;                                        
*                 TEXT = 'IFRIF12 The DEL keyword is invalid.';                 
*                 ANS (COMMENT(TEXT)) MSG(TEXT) COL(MACCOL+2) NORESCAN;         
*                 RC = 8;                                                       
*                 END;                                                          
*                                                                               
*/********************************************************************/         
*/*                                                                  */         
*/*   Validate the ALT keyword                                       */         
*/*                                                                  */         
*/********************************************************************/         
*                                                                               
*              IF NUMBER(ALT) = 1 THEN                                          
*                 DO;                /* Only 1 parameter is allowed  */         
*                 MUTFUNC = MUTFUNC + 1;                                        
*                 FUNC = 'ALT ';                                                
*                 ARG = ALT(1);                                                 
*                 END;                                                          
*                                                                               
*              IF NUMBER(ALT) > 1 THEN                                          
*                 DO;                /* Only 1 parameter is allowed  */         
*                 MUTFUNC = MUTFUNC + 1;                                        
*                 TEXT = 'IFRIF13 The ALT keyword is invalid.';                 
*                 ANS (COMMENT(TEXT)) MSG(TEXT) COL(MACCOL+2) NORESCAN;         
*                 RC = 8;                                                       
*                 END;                                                          
*                                                                               
*/********************************************************************/         
*/*                                                                  */         
*/*   Check to be sure that one of the functions was coded           */         
*/*                                                                  */         
*/********************************************************************/         
*                                                                               
*              IF MUTFUNC = 0 THEN                                              
*                 DO;                /* No function selected         */         
*                 TEXT = 'IFRIF14 The ADD, DEL, or ALT keyword ' ||             
*                        'is required.';                                        
*                 ANS (COMMENT(TEXT)) MSG(TEXT) COL(MACCOL+2) NORESCAN;         
*                 RC = 8;                                                       
*                 END;                                                          
*                                                                               
*/********************************************************************/         
*/*                                                                  */         
*/*   Check to be sure that not more than one function was code      */         
*/*                                                                  */         
*/********************************************************************/         
*                                                                               
*              IF MUTFUNC > 1 THEN                                              
*                 DO;                /* Function wasn't coded mutually          
*                                       exclusive                    */         
*                 TEXT = 'IFRIF15 The ADD, DEL, and ALT keywords ' ||           
*                        'are mutually exclusive, code only one ' ||            
*                        'of them.';                                            
*                 ANS (COMMENT(TEXT)) MSG(TEXT) COL(MACCOL+2) NORESCAN;         
*                 RC = 8;                                                       
*                 END;                                                          
*                                                                               
*/********************************************************************/         
*/*                                                                  */         
*/*   Validate the RETCODE keyword                                   */         
*/*                                                                  */         
*/********************************************************************/         
*                                                                               
*              IF NUMBER(RETCODE) > 1 THEN                                      
*                 DO;                /* RETCODE keyword is optional,            
*                                       with only 1 parameter allowed*/         
*                 TEXT = 'IFRIF16 The RETCODE keyword is invalid.';             
*                 ANS (COMMENT(TEXT)) MSG(TEXT) COL(MACCOL+2) NORESCAN;         
*                 RC = 8;                                                       
*                 END;                                                          
*                                                                               
*/********************************************************************/         
*/*                                                                  */         
*/*   Build the parameter list and invoke the interface routine      */         
*/*                                                                  */         
*/********************************************************************/         
*                                                                               
*              IF RC = 0 THEN                                                   
*                 DO;                /* No errors, then continue     */         
*                 IF MACLABEL ^= '' THEN                                        
*                    ANS (MACLABEL) COL(2);                                     
*                                                                               
*                 ANS ('DO;' ||                                                 
*                    COMMENT(TITLE)) COL(MACCOL);                               
*                                                                               
*/********************************************************************/         
*/*   Check for proper release of TSO/E (Release 4 or higher)        */         
*/********************************************************************/         
*                                                                               
*                 ANS ('RFY GPR15P RSTD;')                                      
*                    COL(MACCOL);                                               
*                                                                               
*                 COM = 'Check for proper release of TSO/E ' ||                 
*                       '(Release 4 or higher)';                                
*                 ANS (COMMENT(COM)) COL(MACCOL+3);                             
*                                                                               
*                 ANS ('IF CVTTVT = 0 THEN')                                    
*                    COL(MACCOL);                                               
*                                                                               
*                 ANS ('GPR15P = 32;' ||                                        
*                    COMMENT('No TSVT, no interface routine'))                  
*                    COL(MACCOL+3);                                             
*                                                                               
*                 ANS ('ELSE')                                                  
*                    COL(MACCOL);                                               
*                                                                               
*                 ANS ('IF TSVTLEV < ''04''X THEN')                             
*                    COL(MACCOL+3);                                             
*                                                                               
*                 COM = 'Not TSO/E Release 4 or higher, ' ||                    
*                       'no interface routine';                                 
*                 ANS ('GPR15P = 32;' ||                                        
*                    COMMENT(COM)) COL(MACCOL+6);                               
*                                                                               
*                 ANS ('ELSE')                                                  
*                    COL(MACCOL+3);                                             
*                                                                               
*                 ANS ('DO;' ||                                                 
*                    COMMENT('We have TSO/E Release 4 or higher'))              
*                    COL(MACCOL+6);                                             
*                                                                               
*/********************************************************************/         
*/*   Store the UPT address in the parameter list                    */         
*/********************************************************************/         
*                                                                               
*                 ANS ('IFR0001 = ' || UPT(1) || ';' ||                         
*                    COMMENT('Place the UPT address in the parmlist'))          
*                    COL(MACCOL+6);                                             
*                                                                               
*/********************************************************************/         
*/*   Store the PSCB address in the parameter list                   */         
*/********************************************************************/         
*                                                                               
*                 ANS ('IFR0002 = ' || PSCB(1) || ';' ||                        
*                    COMMENT('Place the PSCB address in the parmlist'))         
*                    COL(MACCOL+6);                                             
*                                                                               
*/********************************************************************/         
*/*   Store the ECT address in the parameter list                    */         
*/********************************************************************/         
*                                                                               
*                 ANS ('IFR0003 = ' || ECT(1) || ';' ||                         
*                    COMMENT('Place the ECT address in the parmlist'))          
*                    COL(MACCOL+6);                                             
*                                                                               
*/********************************************************************/         
*/*   Store the argument address in the parameter list               */         
*/********************************************************************/         
*                                                                               
*                 ANS ('IFR0004 = ADDR(' || ARG || ');' ||                      
*                 COMMENT('Place the argument address in the parmlist'))        
*                    COL(MACCOL+6);                                             
*                                                                               
*/********************************************************************/         
*/*   Store the function in the parameter list                       */         
*/********************************************************************/         
*                                                                               
*                 ANS ('IFR0005 = ''' || FUNC || ''';' ||                       
*                    COMMENT('Place the function in the parmlist'))             
*                    COL(MACCOL+6);                                             
*                                                                               
*/********************************************************************/         
*/*   Zero out the ABEND and REASON CODE and the SERVICE RETURN CODE */         
*/*   and SERVICE REASON CODE fields.                                */         
*/********************************************************************/         
*                                                                               
*                 ANS ('IFRABEND = ''00000000''X;' ||                           
*                    COMMENT('Initialize ABEND code to zero'))                  
*                    COL(MACCOL+6);                                             
*                                                                               
*                 ANS ('IFRABRSN = 0;' ||                                       
*                    COMMENT('Initialize ABEND reason code to zero'))           
*                    COL(MACCOL+6);                                             
*                                                                               
*                 ANS ('IFRSVCRC = 0;' ||                                       
*                    COMMENT('Initialize service return code to zero'))         
*                    COL(MACCOL+6);                                             
*                                                                               
*                 ANS ('IFRSVCRN = 0;' ||                                       
*                    COMMENT('Initialize service reason code to zero'))         
*                    COL(MACCOL+6);                                             
*                                                                               
*/********************************************************************/         
*/*   Obtain the parameter list address                              */         
*/********************************************************************/         
*                                                                               
*                 ANS ('RFY GPR01P RSTD;')                                      
*                    COL(MACCOL+6);                                             
*                                                                               
*                 ANS ('GPR01P = ADDR(' || MF(2) || ');' ||                     
*                    COMMENT('Obtain the parmlist address'))                    
*                    COL(MACCOL+6);                                             
*                                                                               
*/********************************************************************/         
*/*   Call the interface routine using ?CALLTSSR                     */         
*/********************************************************************/         
*                                                                               
*                 ANS ('? CALLTSSR EP(IKJIFRIF);' ||                            
*                    COMMENT('Call the interface routine'))                     
*                    COL(MACCOL+6);                                             
*                                                                               
*                 ANS ('RFY GPR01P UNRSTD;')                                    
*                    COL(MACCOL+6);                                             
*                                                                               
*                 ANS ('END;')                                                  
*                    COL(MACCOL+6);                                             
*                                                                               
*/********************************************************************/         
*/*   Check for RETCODE option                                       */         
*/********************************************************************/         
*                                                                               
*                 IF NUMBER(RETCODE) = 1 THEN                                   
*                    ANS (RETCODE(1) || ' = GPR15P;' ||                         
*                       COMMENT('Save the return code')) COL(MACCOL);           
*                                                                               
*                 ANS ('RFY GPR15P UNRSTD;')                                    
*                    COL(MACCOL);                                               
*                                                                               
*                 ANS ('END; ' || COMMENT(TITLE)) COL(MACCOL);                  
*                 END;                                                          
*              END;                                                             
*           ELSE                                                                
*              DO;                   /* Invalid MF parameter         */         
*              TEXT = 'IFRIF01 The MF keyword is invalid.';                     
*              ANS (COMMENT(TEXT)) MSG(TEXT) COL(MACCOL+2) NORESCAN;            
*              RC = 8;                                                          
*              END;                                                             
*                                                                               
*  RETURN CODE(RC);                                                             
*                                                                               
*% END IKJIFRIF;                                                                
